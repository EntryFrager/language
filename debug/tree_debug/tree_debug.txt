--------------------------------------------------------------------------------------------------------
tree[0x7ffe9627f8e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5c94ecb0cd00] = ;;
		*node[0x5c94ecb0cd30] = 0;
		*node[0x5c94ecb0cd60] = ;;
		*node[0x5c94ecb0cd90] = input;
		*node[0x5c94ecb0cdc0] = 1;
		*node[0x5c94ecb0cdf0] = 2;
		*node[0x5c94ecb0ce20] = 3;
		*node[0x5c94ecb0ce50] = ;;
		*node[0x5c94ecb0cee0] = =;
		*node[0x5c94ecb0ce80] = 4;
		*node[0x5c94ecb0ceb0] = 1000;
		*node[0x5c94ecb0cf10] = ;;
		*node[0x5c94ecb0d000] = =;
		*node[0x5c94ecb0cf40] = 5;
		*node[0x5c94ecb0cfd0] = -;
		*node[0x5c94ecb0cf70] = 0;
		*node[0x5c94ecb0cfa0] = 1;
		*node[0x5c94ecb0d030] = ;;
		*node[0x5c94ecb0d0c0] = =;
		*node[0x5c94ecb0d060] = 6;
		*node[0x5c94ecb0d090] = 1;
		*node[0x5c94ecb0d0f0] = ;;
		*node[0x5c94ecb0d180] = =;
		*node[0x5c94ecb0d120] = 7;
		*node[0x5c94ecb0d150] = 2;
		*node[0x5c94ecb0d1b0] = ;;
		*node[0x5c94ecb0d1e0] = if;
		*node[0x5c94ecb0d210] = op_no;
		*node[0x5c94ecb0d2a0] = ==;
		*node[0x5c94ecb0d240] = 1;
		*node[0x5c94ecb0d270] = 0;
		*node[0x5c94ecb0d2d0] = ;;
		*node[0x5c94ecb0d300] = if;
		*node[0x5c94ecb0d330] = op_no;
		*node[0x5c94ecb0d3c0] = ==;
		*node[0x5c94ecb0d360] = 2;
		*node[0x5c94ecb0d390] = 0;
		*node[0x5c94ecb0d3f0] = ;;
		*node[0x5c94ecb0d420] = if;
		*node[0x5c94ecb0d450] = op_no;
		*node[0x5c94ecb0d4e0] = ==;
		*node[0x5c94ecb0d480] = 3;
		*node[0x5c94ecb0d4b0] = 0;
		*node[0x5c94ecb0d510] = ;;
		*node[0x5c94ecb0d540] = print;
		*node[0x5c94ecb0d570] = 4;
		*node[0x5c94ecb0d5a0] = ;;
		*node[0x5c94ecb0d5d0] = print;
		*node[0x5c94ecb0d600] = 5;
		*node[0x5c94ecb0d630] = ;;
		*node[0x5c94ecb0d780] = =;
		*node[0x5c94ecb0d660] = 8;
		*node[0x5c94ecb0d750] = -;
		*node[0x5c94ecb0d690] = 0;
		*node[0x5c94ecb0d720] = /;
		*node[0x5c94ecb0d6c0] = 3;
		*node[0x5c94ecb0d6f0] = 2;
		*node[0x5c94ecb0d7b0] = ;;
		*node[0x5c94ecb0d7e0] = print;
		*node[0x5c94ecb0d810] = 8;
		*node[0x5c94ecb0d840] = if;
		*node[0x5c94ecb0d870] = op_no;
		*node[0x5c94ecb0d900] = !=;
		*node[0x5c94ecb0d8a0] = 1;
		*node[0x5c94ecb0d8d0] = 0;
		*node[0x5c94ecb0d930] = ;;
		*node[0x5c94ecb0db40] = =;
		*node[0x5c94ecb0d960] = 9;
		*node[0x5c94ecb0db10] = -;
		*node[0x5c94ecb0d9f0] = ^;
		*node[0x5c94ecb0d990] = 2;
		*node[0x5c94ecb0d9c0] = 2;
		*node[0x5c94ecb0dae0] = *;
		*node[0x5c94ecb0da80] = *;
		*node[0x5c94ecb0da20] = 4;
		*node[0x5c94ecb0da50] = 1;
		*node[0x5c94ecb0dab0] = 3;
		*node[0x5c94ecb0db70] = ;;
		*node[0x5c94ecb0dba0] = if;
		*node[0x5c94ecb0dbd0] = op_no;
		*node[0x5c94ecb0dc60] = ==;
		*node[0x5c94ecb0dc00] = 9;
		*node[0x5c94ecb0dc30] = 0;
		*node[0x5c94ecb0dc90] = ;;
		*node[0x5c94ecb0de40] = =;
		*node[0x5c94ecb0dcc0] = 8;
		*node[0x5c94ecb0de10] = -;
		*node[0x5c94ecb0dcf0] = 0;
		*node[0x5c94ecb0dde0] = /;
		*node[0x5c94ecb0dd20] = 2;
		*node[0x5c94ecb0ddb0] = *;
		*node[0x5c94ecb0dd50] = 2;
		*node[0x5c94ecb0dd80] = 1;
		*node[0x5c94ecb0de70] = ;;
		*node[0x5c94ecb0dea0] = print;
		*node[0x5c94ecb0ded0] = 6;
		*node[0x5c94ecb0df00] = ;;
		*node[0x5c94ecb0df30] = print;
		*node[0x5c94ecb0df60] = 8;
		*node[0x5c94ecb0df90] = if;
		*node[0x5c94ecb0dfc0] = op_no;
		*node[0x5c94ecb0e050] = <;
		*node[0x5c94ecb0dff0] = 9;
		*node[0x5c94ecb0e020] = 0;
		*node[0x5c94ecb0e080] = ;;
		*node[0x5c94ecb0e0b0] = print;
		*node[0x5c94ecb0e0e0] = 5;
		*node[0x5c94ecb0e110] = ;;
		*node[0x5c94ecb0e380] = =;
		*node[0x5c94ecb0e140] = 10;
		*node[0x5c94ecb0e350] = /;
		*node[0x5c94ecb0e290] = -;
		*node[0x5c94ecb0e1d0] = -;
		*node[0x5c94ecb0e170] = 0;
		*node[0x5c94ecb0e1a0] = 2;
		*node[0x5c94ecb0e260] = sqrt;
		*node[0x5c94ecb0e230] = 1;
		*node[0x5c94ecb0e200] = 9;
		*node[0x5c94ecb0e320] = *;
		*node[0x5c94ecb0e2c0] = 2;
		*node[0x5c94ecb0e2f0] = 1;
		*node[0x5c94ecb0e3b0] = ;;
		*node[0x5c94ecb0e620] = =;
		*node[0x5c94ecb0e3e0] = 11;
		*node[0x5c94ecb0e5f0] = /;
		*node[0x5c94ecb0e530] = +;
		*node[0x5c94ecb0e470] = -;
		*node[0x5c94ecb0e410] = 0;
		*node[0x5c94ecb0e440] = 2;
		*node[0x5c94ecb0e500] = sqrt;
		*node[0x5c94ecb0e4d0] = 1;
		*node[0x5c94ecb0e4a0] = 9;
		*node[0x5c94ecb0e5c0] = *;
		*node[0x5c94ecb0e560] = 2;
		*node[0x5c94ecb0e590] = 1;
		*node[0x5c94ecb0e650] = ;;
		*node[0x5c94ecb0e680] = print;
		*node[0x5c94ecb0e6b0] = 10;
		*node[0x5c94ecb0e6e0] = ;;
		*node[0x5c94ecb0e710] = print;
		*node[0x5c94ecb0e740] = 11;
		*node[0x5c94ecb0e770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd51e031f0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e8078b6ad00] = ;;
		*node[0x5e8078b6ad30] = 0;
		*node[0x5e8078b6ad60] = ;;
		*node[0x5e8078b6ad90] = input;
		*node[0x5e8078b6adc0] = 1;
		*node[0x5e8078b6adf0] = 2;
		*node[0x5e8078b6ae20] = 3;
		*node[0x5e8078b6ae50] = ;;
		*node[0x5e8078b6aee0] = =;
		*node[0x5e8078b6ae80] = 4;
		*node[0x5e8078b6aeb0] = 1000;
		*node[0x5e8078b6af10] = ;;
		*node[0x5e8078b6b000] = =;
		*node[0x5e8078b6af40] = 5;
		*node[0x5e8078b6afd0] = -;
		*node[0x5e8078b6af70] = 0;
		*node[0x5e8078b6afa0] = 1;
		*node[0x5e8078b6b030] = ;;
		*node[0x5e8078b6b0c0] = =;
		*node[0x5e8078b6b060] = 6;
		*node[0x5e8078b6b090] = 1;
		*node[0x5e8078b6b0f0] = ;;
		*node[0x5e8078b6b180] = =;
		*node[0x5e8078b6b120] = 7;
		*node[0x5e8078b6b150] = 2;
		*node[0x5e8078b6b1b0] = ;;
		*node[0x5e8078b6b1e0] = if;
		*node[0x5e8078b6b210] = op_no;
		*node[0x5e8078b6b2a0] = ==;
		*node[0x5e8078b6b240] = 1;
		*node[0x5e8078b6b270] = 0;
		*node[0x5e8078b6b2d0] = ;;
		*node[0x5e8078b6b300] = if;
		*node[0x5e8078b6b330] = op_no;
		*node[0x5e8078b6b3c0] = ==;
		*node[0x5e8078b6b360] = 2;
		*node[0x5e8078b6b390] = 0;
		*node[0x5e8078b6b3f0] = ;;
		*node[0x5e8078b6b420] = if;
		*node[0x5e8078b6b450] = op_no;
		*node[0x5e8078b6b4e0] = ==;
		*node[0x5e8078b6b480] = 3;
		*node[0x5e8078b6b4b0] = 0;
		*node[0x5e8078b6b510] = ;;
		*node[0x5e8078b6b540] = print;
		*node[0x5e8078b6b570] = 4;
		*node[0x5e8078b6b5a0] = ;;
		*node[0x5e8078b6b5d0] = print;
		*node[0x5e8078b6b600] = 5;
		*node[0x5e8078b6b630] = ;;
		*node[0x5e8078b6b780] = =;
		*node[0x5e8078b6b660] = 8;
		*node[0x5e8078b6b750] = -;
		*node[0x5e8078b6b690] = 0;
		*node[0x5e8078b6b720] = /;
		*node[0x5e8078b6b6c0] = 3;
		*node[0x5e8078b6b6f0] = 2;
		*node[0x5e8078b6b7b0] = ;;
		*node[0x5e8078b6b7e0] = print;
		*node[0x5e8078b6b810] = 8;
		*node[0x5e8078b6b840] = if;
		*node[0x5e8078b6b870] = op_no;
		*node[0x5e8078b6b900] = !=;
		*node[0x5e8078b6b8a0] = 1;
		*node[0x5e8078b6b8d0] = 0;
		*node[0x5e8078b6b930] = ;;
		*node[0x5e8078b6bb40] = =;
		*node[0x5e8078b6b960] = 9;
		*node[0x5e8078b6bb10] = -;
		*node[0x5e8078b6b9f0] = ^;
		*node[0x5e8078b6b990] = 2;
		*node[0x5e8078b6b9c0] = 2;
		*node[0x5e8078b6bae0] = *;
		*node[0x5e8078b6ba80] = *;
		*node[0x5e8078b6ba20] = 4;
		*node[0x5e8078b6ba50] = 1;
		*node[0x5e8078b6bab0] = 3;
		*node[0x5e8078b6bb70] = ;;
		*node[0x5e8078b6bba0] = if;
		*node[0x5e8078b6bbd0] = op_no;
		*node[0x5e8078b6bc60] = ==;
		*node[0x5e8078b6bc00] = 9;
		*node[0x5e8078b6bc30] = 0;
		*node[0x5e8078b6bc90] = ;;
		*node[0x5e8078b6be40] = =;
		*node[0x5e8078b6bcc0] = 8;
		*node[0x5e8078b6be10] = -;
		*node[0x5e8078b6bcf0] = 0;
		*node[0x5e8078b6bde0] = /;
		*node[0x5e8078b6bd20] = 2;
		*node[0x5e8078b6bdb0] = *;
		*node[0x5e8078b6bd50] = 2;
		*node[0x5e8078b6bd80] = 1;
		*node[0x5e8078b6be70] = ;;
		*node[0x5e8078b6bea0] = print;
		*node[0x5e8078b6bed0] = 6;
		*node[0x5e8078b6bf00] = ;;
		*node[0x5e8078b6bf30] = print;
		*node[0x5e8078b6bf60] = 8;
		*node[0x5e8078b6bf90] = if;
		*node[0x5e8078b6bfc0] = op_no;
		*node[0x5e8078b6c050] = <;
		*node[0x5e8078b6bff0] = 9;
		*node[0x5e8078b6c020] = 0;
		*node[0x5e8078b6c080] = ;;
		*node[0x5e8078b6c0b0] = print;
		*node[0x5e8078b6c0e0] = 5;
		*node[0x5e8078b6c110] = ;;
		*node[0x5e8078b6c380] = =;
		*node[0x5e8078b6c140] = 10;
		*node[0x5e8078b6c350] = /;
		*node[0x5e8078b6c290] = -;
		*node[0x5e8078b6c1d0] = -;
		*node[0x5e8078b6c170] = 0;
		*node[0x5e8078b6c1a0] = 2;
		*node[0x5e8078b6c260] = sqrt;
		*node[0x5e8078b6c230] = 1;
		*node[0x5e8078b6c200] = 9;
		*node[0x5e8078b6c320] = *;
		*node[0x5e8078b6c2c0] = 2;
		*node[0x5e8078b6c2f0] = 1;
		*node[0x5e8078b6c3b0] = ;;
		*node[0x5e8078b6c620] = =;
		*node[0x5e8078b6c3e0] = 11;
		*node[0x5e8078b6c5f0] = /;
		*node[0x5e8078b6c530] = +;
		*node[0x5e8078b6c470] = -;
		*node[0x5e8078b6c410] = 0;
		*node[0x5e8078b6c440] = 2;
		*node[0x5e8078b6c500] = sqrt;
		*node[0x5e8078b6c4d0] = 1;
		*node[0x5e8078b6c4a0] = 9;
		*node[0x5e8078b6c5c0] = *;
		*node[0x5e8078b6c560] = 2;
		*node[0x5e8078b6c590] = 1;
		*node[0x5e8078b6c650] = ;;
		*node[0x5e8078b6c680] = print;
		*node[0x5e8078b6c6b0] = 10;
		*node[0x5e8078b6c6e0] = ;;
		*node[0x5e8078b6c710] = print;
		*node[0x5e8078b6c740] = 11;
		*node[0x5e8078b6c770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc74d48f80] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6086bbc6ad00] = ;;
		*node[0x6086bbc6ad30] = 0;
		*node[0x6086bbc6ad60] = ;;
		*node[0x6086bbc6ad90] = input;
		*node[0x6086bbc6adc0] = 1;
		*node[0x6086bbc6adf0] = 2;
		*node[0x6086bbc6ae20] = 3;
		*node[0x6086bbc6ae50] = ;;
		*node[0x6086bbc6aee0] = =;
		*node[0x6086bbc6ae80] = 4;
		*node[0x6086bbc6aeb0] = 1000;
		*node[0x6086bbc6af10] = ;;
		*node[0x6086bbc6b000] = =;
		*node[0x6086bbc6af40] = 5;
		*node[0x6086bbc6afd0] = -;
		*node[0x6086bbc6af70] = 0;
		*node[0x6086bbc6afa0] = 1;
		*node[0x6086bbc6b030] = ;;
		*node[0x6086bbc6b0c0] = =;
		*node[0x6086bbc6b060] = 6;
		*node[0x6086bbc6b090] = 1;
		*node[0x6086bbc6b0f0] = ;;
		*node[0x6086bbc6b180] = =;
		*node[0x6086bbc6b120] = 7;
		*node[0x6086bbc6b150] = 2;
		*node[0x6086bbc6b1b0] = ;;
		*node[0x6086bbc6b1e0] = if;
		*node[0x6086bbc6b210] = op_no;
		*node[0x6086bbc6b2a0] = ==;
		*node[0x6086bbc6b240] = 1;
		*node[0x6086bbc6b270] = 0;
		*node[0x6086bbc6b2d0] = ;;
		*node[0x6086bbc6b300] = if;
		*node[0x6086bbc6b330] = op_no;
		*node[0x6086bbc6b3c0] = ==;
		*node[0x6086bbc6b360] = 2;
		*node[0x6086bbc6b390] = 0;
		*node[0x6086bbc6b3f0] = ;;
		*node[0x6086bbc6b420] = if;
		*node[0x6086bbc6b450] = op_no;
		*node[0x6086bbc6b4e0] = ==;
		*node[0x6086bbc6b480] = 3;
		*node[0x6086bbc6b4b0] = 0;
		*node[0x6086bbc6b510] = ;;
		*node[0x6086bbc6b540] = print;
		*node[0x6086bbc6b570] = 4;
		*node[0x6086bbc6b5a0] = ;;
		*node[0x6086bbc6b5d0] = print;
		*node[0x6086bbc6b600] = 5;
		*node[0x6086bbc6b630] = ;;
		*node[0x6086bbc6b780] = =;
		*node[0x6086bbc6b660] = 8;
		*node[0x6086bbc6b750] = -;
		*node[0x6086bbc6b690] = 0;
		*node[0x6086bbc6b720] = /;
		*node[0x6086bbc6b6c0] = 3;
		*node[0x6086bbc6b6f0] = 2;
		*node[0x6086bbc6b7b0] = ;;
		*node[0x6086bbc6b7e0] = print;
		*node[0x6086bbc6b810] = 8;
		*node[0x6086bbc6b840] = if;
		*node[0x6086bbc6b870] = op_no;
		*node[0x6086bbc6b900] = !=;
		*node[0x6086bbc6b8a0] = 1;
		*node[0x6086bbc6b8d0] = 0;
		*node[0x6086bbc6b930] = ;;
		*node[0x6086bbc6bb40] = =;
		*node[0x6086bbc6b960] = 9;
		*node[0x6086bbc6bb10] = -;
		*node[0x6086bbc6b9f0] = ^;
		*node[0x6086bbc6b990] = 2;
		*node[0x6086bbc6b9c0] = 2;
		*node[0x6086bbc6bae0] = *;
		*node[0x6086bbc6ba80] = *;
		*node[0x6086bbc6ba20] = 4;
		*node[0x6086bbc6ba50] = 1;
		*node[0x6086bbc6bab0] = 3;
		*node[0x6086bbc6bb70] = ;;
		*node[0x6086bbc6bba0] = if;
		*node[0x6086bbc6bbd0] = op_no;
		*node[0x6086bbc6bc60] = ==;
		*node[0x6086bbc6bc00] = 9;
		*node[0x6086bbc6bc30] = 0;
		*node[0x6086bbc6bc90] = ;;
		*node[0x6086bbc6be40] = =;
		*node[0x6086bbc6bcc0] = 8;
		*node[0x6086bbc6be10] = -;
		*node[0x6086bbc6bcf0] = 0;
		*node[0x6086bbc6bde0] = /;
		*node[0x6086bbc6bd20] = 2;
		*node[0x6086bbc6bdb0] = *;
		*node[0x6086bbc6bd50] = 2;
		*node[0x6086bbc6bd80] = 1;
		*node[0x6086bbc6be70] = ;;
		*node[0x6086bbc6bea0] = print;
		*node[0x6086bbc6bed0] = 6;
		*node[0x6086bbc6bf00] = ;;
		*node[0x6086bbc6bf30] = print;
		*node[0x6086bbc6bf60] = 8;
		*node[0x6086bbc6bf90] = if;
		*node[0x6086bbc6bfc0] = op_no;
		*node[0x6086bbc6c050] = <;
		*node[0x6086bbc6bff0] = 9;
		*node[0x6086bbc6c020] = 0;
		*node[0x6086bbc6c080] = ;;
		*node[0x6086bbc6c0b0] = print;
		*node[0x6086bbc6c0e0] = 5;
		*node[0x6086bbc6c110] = ;;
		*node[0x6086bbc6c380] = =;
		*node[0x6086bbc6c140] = 10;
		*node[0x6086bbc6c350] = /;
		*node[0x6086bbc6c290] = -;
		*node[0x6086bbc6c1d0] = -;
		*node[0x6086bbc6c170] = 0;
		*node[0x6086bbc6c1a0] = 2;
		*node[0x6086bbc6c260] = sqrt;
		*node[0x6086bbc6c230] = 1;
		*node[0x6086bbc6c200] = 9;
		*node[0x6086bbc6c320] = *;
		*node[0x6086bbc6c2c0] = 2;
		*node[0x6086bbc6c2f0] = 1;
		*node[0x6086bbc6c3b0] = ;;
		*node[0x6086bbc6c620] = =;
		*node[0x6086bbc6c3e0] = 11;
		*node[0x6086bbc6c5f0] = /;
		*node[0x6086bbc6c530] = +;
		*node[0x6086bbc6c470] = -;
		*node[0x6086bbc6c410] = 0;
		*node[0x6086bbc6c440] = 2;
		*node[0x6086bbc6c500] = sqrt;
		*node[0x6086bbc6c4d0] = 1;
		*node[0x6086bbc6c4a0] = 9;
		*node[0x6086bbc6c5c0] = *;
		*node[0x6086bbc6c560] = 2;
		*node[0x6086bbc6c590] = 1;
		*node[0x6086bbc6c650] = ;;
		*node[0x6086bbc6c680] = print;
		*node[0x6086bbc6c6b0] = 10;
		*node[0x6086bbc6c6e0] = ;;
		*node[0x6086bbc6c710] = print;
		*node[0x6086bbc6c740] = 11;
		*node[0x6086bbc6c770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd73698490] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e7a52bced00] = ;;
		*node[0x5e7a52bced30] = 0;
		*node[0x5e7a52bced60] = ;;
		*node[0x5e7a52bced90] = input;
		*node[0x5e7a52bcedc0] = 1;
		*node[0x5e7a52bcedf0] = 2;
		*node[0x5e7a52bcee20] = 3;
		*node[0x5e7a52bcee50] = ;;
		*node[0x5e7a52bceee0] = =;
		*node[0x5e7a52bcee80] = 4;
		*node[0x5e7a52bceeb0] = 1000;
		*node[0x5e7a52bcef10] = ;;
		*node[0x5e7a52bcf000] = =;
		*node[0x5e7a52bcef40] = 5;
		*node[0x5e7a52bcefd0] = -;
		*node[0x5e7a52bcef70] = 0;
		*node[0x5e7a52bcefa0] = 1;
		*node[0x5e7a52bcf030] = ;;
		*node[0x5e7a52bcf0c0] = =;
		*node[0x5e7a52bcf060] = 6;
		*node[0x5e7a52bcf090] = 1;
		*node[0x5e7a52bcf0f0] = ;;
		*node[0x5e7a52bcf180] = =;
		*node[0x5e7a52bcf120] = 7;
		*node[0x5e7a52bcf150] = 2;
		*node[0x5e7a52bcf1b0] = ;;
		*node[0x5e7a52bcf1e0] = if;
		*node[0x5e7a52bcf210] = op_no;
		*node[0x5e7a52bcf2a0] = ==;
		*node[0x5e7a52bcf240] = 1;
		*node[0x5e7a52bcf270] = 0;
		*node[0x5e7a52bcf2d0] = ;;
		*node[0x5e7a52bcf300] = if;
		*node[0x5e7a52bcf330] = op_no;
		*node[0x5e7a52bcf3c0] = ==;
		*node[0x5e7a52bcf360] = 2;
		*node[0x5e7a52bcf390] = 0;
		*node[0x5e7a52bcf3f0] = ;;
		*node[0x5e7a52bcf420] = if;
		*node[0x5e7a52bcf450] = op_no;
		*node[0x5e7a52bcf4e0] = ==;
		*node[0x5e7a52bcf480] = 3;
		*node[0x5e7a52bcf4b0] = 0;
		*node[0x5e7a52bcf510] = ;;
		*node[0x5e7a52bcf540] = print;
		*node[0x5e7a52bcf570] = 4;
		*node[0x5e7a52bcf5a0] = ;;
		*node[0x5e7a52bcf5d0] = print;
		*node[0x5e7a52bcf600] = 5;
		*node[0x5e7a52bcf630] = ;;
		*node[0x5e7a52bcf780] = =;
		*node[0x5e7a52bcf660] = 8;
		*node[0x5e7a52bcf750] = -;
		*node[0x5e7a52bcf690] = 0;
		*node[0x5e7a52bcf720] = /;
		*node[0x5e7a52bcf6c0] = 3;
		*node[0x5e7a52bcf6f0] = 2;
		*node[0x5e7a52bcf7b0] = ;;
		*node[0x5e7a52bcf7e0] = print;
		*node[0x5e7a52bcf810] = 8;
		*node[0x5e7a52bcf840] = if;
		*node[0x5e7a52bcf870] = op_no;
		*node[0x5e7a52bcf900] = !=;
		*node[0x5e7a52bcf8a0] = 1;
		*node[0x5e7a52bcf8d0] = 0;
		*node[0x5e7a52bcf930] = ;;
		*node[0x5e7a52bcfb40] = =;
		*node[0x5e7a52bcf960] = 9;
		*node[0x5e7a52bcfb10] = -;
		*node[0x5e7a52bcf9f0] = ^;
		*node[0x5e7a52bcf990] = 2;
		*node[0x5e7a52bcf9c0] = 2;
		*node[0x5e7a52bcfae0] = *;
		*node[0x5e7a52bcfa80] = *;
		*node[0x5e7a52bcfa20] = 4;
		*node[0x5e7a52bcfa50] = 1;
		*node[0x5e7a52bcfab0] = 3;
		*node[0x5e7a52bcfb70] = ;;
		*node[0x5e7a52bcfba0] = if;
		*node[0x5e7a52bcfbd0] = op_no;
		*node[0x5e7a52bcfc60] = ==;
		*node[0x5e7a52bcfc00] = 9;
		*node[0x5e7a52bcfc30] = 0;
		*node[0x5e7a52bcfc90] = ;;
		*node[0x5e7a52bcfe40] = =;
		*node[0x5e7a52bcfcc0] = 8;
		*node[0x5e7a52bcfe10] = -;
		*node[0x5e7a52bcfcf0] = 0;
		*node[0x5e7a52bcfde0] = /;
		*node[0x5e7a52bcfd20] = 2;
		*node[0x5e7a52bcfdb0] = *;
		*node[0x5e7a52bcfd50] = 2;
		*node[0x5e7a52bcfd80] = 1;
		*node[0x5e7a52bcfe70] = ;;
		*node[0x5e7a52bcfea0] = print;
		*node[0x5e7a52bcfed0] = 6;
		*node[0x5e7a52bcff00] = ;;
		*node[0x5e7a52bcff30] = print;
		*node[0x5e7a52bcff60] = 8;
		*node[0x5e7a52bcff90] = if;
		*node[0x5e7a52bcffc0] = op_no;
		*node[0x5e7a52bd0050] = <;
		*node[0x5e7a52bcfff0] = 9;
		*node[0x5e7a52bd0020] = 0;
		*node[0x5e7a52bd0080] = ;;
		*node[0x5e7a52bd00b0] = print;
		*node[0x5e7a52bd00e0] = 5;
		*node[0x5e7a52bd0110] = ;;
		*node[0x5e7a52bd0380] = =;
		*node[0x5e7a52bd0140] = 10;
		*node[0x5e7a52bd0350] = /;
		*node[0x5e7a52bd0290] = -;
		*node[0x5e7a52bd01d0] = -;
		*node[0x5e7a52bd0170] = 0;
		*node[0x5e7a52bd01a0] = 2;
		*node[0x5e7a52bd0260] = sqrt;
		*node[0x5e7a52bd0230] = 1;
		*node[0x5e7a52bd0200] = 9;
		*node[0x5e7a52bd0320] = *;
		*node[0x5e7a52bd02c0] = 2;
		*node[0x5e7a52bd02f0] = 1;
		*node[0x5e7a52bd03b0] = ;;
		*node[0x5e7a52bd0620] = =;
		*node[0x5e7a52bd03e0] = 11;
		*node[0x5e7a52bd05f0] = /;
		*node[0x5e7a52bd0530] = +;
		*node[0x5e7a52bd0470] = -;
		*node[0x5e7a52bd0410] = 0;
		*node[0x5e7a52bd0440] = 2;
		*node[0x5e7a52bd0500] = sqrt;
		*node[0x5e7a52bd04d0] = 1;
		*node[0x5e7a52bd04a0] = 9;
		*node[0x5e7a52bd05c0] = *;
		*node[0x5e7a52bd0560] = 2;
		*node[0x5e7a52bd0590] = 1;
		*node[0x5e7a52bd0650] = ;;
		*node[0x5e7a52bd0680] = print;
		*node[0x5e7a52bd06b0] = 10;
		*node[0x5e7a52bd06e0] = ;;
		*node[0x5e7a52bd0710] = print;
		*node[0x5e7a52bd0740] = 11;
		*node[0x5e7a52bd0770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffda867bca0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x620a47dc3d00] = ;;
		*node[0x620a47dc3d30] = 0;
		*node[0x620a47dc3d60] = ;;
		*node[0x620a47dc3d90] = input;
		*node[0x620a47dc3dc0] = 1;
		*node[0x620a47dc3df0] = 2;
		*node[0x620a47dc3e20] = 3;
		*node[0x620a47dc3e50] = ;;
		*node[0x620a47dc3ee0] = =;
		*node[0x620a47dc3e80] = 4;
		*node[0x620a47dc3eb0] = 1000;
		*node[0x620a47dc3f10] = ;;
		*node[0x620a47dc4000] = =;
		*node[0x620a47dc3f40] = 5;
		*node[0x620a47dc3fd0] = -;
		*node[0x620a47dc3f70] = 0;
		*node[0x620a47dc3fa0] = 1;
		*node[0x620a47dc4030] = ;;
		*node[0x620a47dc40c0] = =;
		*node[0x620a47dc4060] = 6;
		*node[0x620a47dc4090] = 1;
		*node[0x620a47dc40f0] = ;;
		*node[0x620a47dc4180] = =;
		*node[0x620a47dc4120] = 7;
		*node[0x620a47dc4150] = 2;
		*node[0x620a47dc41b0] = ;;
		*node[0x620a47dc41e0] = if;
		*node[0x620a47dc4210] = op_no;
		*node[0x620a47dc42a0] = ==;
		*node[0x620a47dc4240] = 1;
		*node[0x620a47dc4270] = 0;
		*node[0x620a47dc42d0] = ;;
		*node[0x620a47dc4300] = if;
		*node[0x620a47dc4330] = op_no;
		*node[0x620a47dc43c0] = ==;
		*node[0x620a47dc4360] = 2;
		*node[0x620a47dc4390] = 0;
		*node[0x620a47dc43f0] = ;;
		*node[0x620a47dc4420] = if;
		*node[0x620a47dc4450] = op_no;
		*node[0x620a47dc44e0] = ==;
		*node[0x620a47dc4480] = 3;
		*node[0x620a47dc44b0] = 0;
		*node[0x620a47dc4510] = ;;
		*node[0x620a47dc4540] = print;
		*node[0x620a47dc4570] = 4;
		*node[0x620a47dc45a0] = ;;
		*node[0x620a47dc45d0] = print;
		*node[0x620a47dc4600] = 5;
		*node[0x620a47dc4630] = ;;
		*node[0x620a47dc4780] = =;
		*node[0x620a47dc4660] = 8;
		*node[0x620a47dc4750] = -;
		*node[0x620a47dc4690] = 0;
		*node[0x620a47dc4720] = /;
		*node[0x620a47dc46c0] = 3;
		*node[0x620a47dc46f0] = 2;
		*node[0x620a47dc47b0] = ;;
		*node[0x620a47dc47e0] = print;
		*node[0x620a47dc4810] = 8;
		*node[0x620a47dc4840] = if;
		*node[0x620a47dc4870] = op_no;
		*node[0x620a47dc4900] = !=;
		*node[0x620a47dc48a0] = 1;
		*node[0x620a47dc48d0] = 0;
		*node[0x620a47dc4930] = ;;
		*node[0x620a47dc4b40] = =;
		*node[0x620a47dc4960] = 9;
		*node[0x620a47dc4b10] = -;
		*node[0x620a47dc49f0] = ^;
		*node[0x620a47dc4990] = 2;
		*node[0x620a47dc49c0] = 2;
		*node[0x620a47dc4ae0] = *;
		*node[0x620a47dc4a80] = *;
		*node[0x620a47dc4a20] = 4;
		*node[0x620a47dc4a50] = 1;
		*node[0x620a47dc4ab0] = 3;
		*node[0x620a47dc4b70] = ;;
		*node[0x620a47dc4ba0] = if;
		*node[0x620a47dc4bd0] = op_no;
		*node[0x620a47dc4c60] = ==;
		*node[0x620a47dc4c00] = 9;
		*node[0x620a47dc4c30] = 0;
		*node[0x620a47dc4c90] = ;;
		*node[0x620a47dc4e40] = =;
		*node[0x620a47dc4cc0] = 8;
		*node[0x620a47dc4e10] = -;
		*node[0x620a47dc4cf0] = 0;
		*node[0x620a47dc4de0] = /;
		*node[0x620a47dc4d20] = 2;
		*node[0x620a47dc4db0] = *;
		*node[0x620a47dc4d50] = 2;
		*node[0x620a47dc4d80] = 1;
		*node[0x620a47dc4e70] = ;;
		*node[0x620a47dc4ea0] = print;
		*node[0x620a47dc4ed0] = 6;
		*node[0x620a47dc4f00] = ;;
		*node[0x620a47dc4f30] = print;
		*node[0x620a47dc4f60] = 8;
		*node[0x620a47dc4f90] = if;
		*node[0x620a47dc4fc0] = op_no;
		*node[0x620a47dc5050] = <;
		*node[0x620a47dc4ff0] = 9;
		*node[0x620a47dc5020] = 0;
		*node[0x620a47dc5080] = ;;
		*node[0x620a47dc50b0] = print;
		*node[0x620a47dc50e0] = 5;
		*node[0x620a47dc5110] = ;;
		*node[0x620a47dc5380] = =;
		*node[0x620a47dc5140] = 10;
		*node[0x620a47dc5350] = /;
		*node[0x620a47dc5290] = -;
		*node[0x620a47dc51d0] = -;
		*node[0x620a47dc5170] = 0;
		*node[0x620a47dc51a0] = 2;
		*node[0x620a47dc5260] = sqrt;
		*node[0x620a47dc5230] = 1;
		*node[0x620a47dc5200] = 9;
		*node[0x620a47dc5320] = *;
		*node[0x620a47dc52c0] = 2;
		*node[0x620a47dc52f0] = 1;
		*node[0x620a47dc53b0] = ;;
		*node[0x620a47dc5620] = =;
		*node[0x620a47dc53e0] = 11;
		*node[0x620a47dc55f0] = /;
		*node[0x620a47dc5530] = +;
		*node[0x620a47dc5470] = -;
		*node[0x620a47dc5410] = 0;
		*node[0x620a47dc5440] = 2;
		*node[0x620a47dc5500] = sqrt;
		*node[0x620a47dc54d0] = 1;
		*node[0x620a47dc54a0] = 9;
		*node[0x620a47dc55c0] = *;
		*node[0x620a47dc5560] = 2;
		*node[0x620a47dc5590] = 1;
		*node[0x620a47dc5650] = ;;
		*node[0x620a47dc5680] = print;
		*node[0x620a47dc56b0] = 10;
		*node[0x620a47dc56e0] = ;;
		*node[0x620a47dc5710] = print;
		*node[0x620a47dc5740] = 11;
		*node[0x620a47dc5770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffdf7b25760] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x606b05b5cd00] = ;;
		*node[0x606b05b5cd30] = 0;
		*node[0x606b05b5cd60] = ;;
		*node[0x606b05b5cd90] = input;
		*node[0x606b05b5cdc0] = 1;
		*node[0x606b05b5cdf0] = 2;
		*node[0x606b05b5ce20] = 3;
		*node[0x606b05b5ce50] = ;;
		*node[0x606b05b5cee0] = =;
		*node[0x606b05b5ce80] = 4;
		*node[0x606b05b5ceb0] = 1000;
		*node[0x606b05b5cf10] = ;;
		*node[0x606b05b5d000] = =;
		*node[0x606b05b5cf40] = 5;
		*node[0x606b05b5cfd0] = -;
		*node[0x606b05b5cf70] = 0;
		*node[0x606b05b5cfa0] = 1;
		*node[0x606b05b5d030] = ;;
		*node[0x606b05b5d0c0] = =;
		*node[0x606b05b5d060] = 6;
		*node[0x606b05b5d090] = 1;
		*node[0x606b05b5d0f0] = ;;
		*node[0x606b05b5d180] = =;
		*node[0x606b05b5d120] = 7;
		*node[0x606b05b5d150] = 2;
		*node[0x606b05b5d1b0] = ;;
		*node[0x606b05b5d1e0] = if;
		*node[0x606b05b5d210] = op_no;
		*node[0x606b05b5d2a0] = ==;
		*node[0x606b05b5d240] = 1;
		*node[0x606b05b5d270] = 0;
		*node[0x606b05b5d2d0] = ;;
		*node[0x606b05b5d300] = if;
		*node[0x606b05b5d330] = op_no;
		*node[0x606b05b5d3c0] = ==;
		*node[0x606b05b5d360] = 2;
		*node[0x606b05b5d390] = 0;
		*node[0x606b05b5d3f0] = ;;
		*node[0x606b05b5d420] = if;
		*node[0x606b05b5d450] = op_no;
		*node[0x606b05b5d4e0] = ==;
		*node[0x606b05b5d480] = 3;
		*node[0x606b05b5d4b0] = 0;
		*node[0x606b05b5d510] = ;;
		*node[0x606b05b5d540] = print;
		*node[0x606b05b5d570] = 4;
		*node[0x606b05b5d5a0] = ;;
		*node[0x606b05b5d5d0] = print;
		*node[0x606b05b5d600] = 5;
		*node[0x606b05b5d630] = ;;
		*node[0x606b05b5d780] = =;
		*node[0x606b05b5d660] = 8;
		*node[0x606b05b5d750] = -;
		*node[0x606b05b5d690] = 0;
		*node[0x606b05b5d720] = /;
		*node[0x606b05b5d6c0] = 3;
		*node[0x606b05b5d6f0] = 2;
		*node[0x606b05b5d7b0] = ;;
		*node[0x606b05b5d7e0] = print;
		*node[0x606b05b5d810] = 8;
		*node[0x606b05b5d840] = if;
		*node[0x606b05b5d870] = op_no;
		*node[0x606b05b5d900] = !=;
		*node[0x606b05b5d8a0] = 1;
		*node[0x606b05b5d8d0] = 0;
		*node[0x606b05b5d930] = ;;
		*node[0x606b05b5db40] = =;
		*node[0x606b05b5d960] = 9;
		*node[0x606b05b5db10] = -;
		*node[0x606b05b5d9f0] = ^;
		*node[0x606b05b5d990] = 2;
		*node[0x606b05b5d9c0] = 2;
		*node[0x606b05b5dae0] = *;
		*node[0x606b05b5da80] = *;
		*node[0x606b05b5da20] = 4;
		*node[0x606b05b5da50] = 1;
		*node[0x606b05b5dab0] = 3;
		*node[0x606b05b5db70] = ;;
		*node[0x606b05b5dba0] = if;
		*node[0x606b05b5dbd0] = op_no;
		*node[0x606b05b5dc60] = ==;
		*node[0x606b05b5dc00] = 9;
		*node[0x606b05b5dc30] = 0;
		*node[0x606b05b5dc90] = ;;
		*node[0x606b05b5de40] = =;
		*node[0x606b05b5dcc0] = 8;
		*node[0x606b05b5de10] = -;
		*node[0x606b05b5dcf0] = 0;
		*node[0x606b05b5dde0] = /;
		*node[0x606b05b5dd20] = 2;
		*node[0x606b05b5ddb0] = *;
		*node[0x606b05b5dd50] = 2;
		*node[0x606b05b5dd80] = 1;
		*node[0x606b05b5de70] = ;;
		*node[0x606b05b5dea0] = print;
		*node[0x606b05b5ded0] = 6;
		*node[0x606b05b5df00] = ;;
		*node[0x606b05b5df30] = print;
		*node[0x606b05b5df60] = 8;
		*node[0x606b05b5df90] = if;
		*node[0x606b05b5dfc0] = op_no;
		*node[0x606b05b5e050] = <;
		*node[0x606b05b5dff0] = 9;
		*node[0x606b05b5e020] = 0;
		*node[0x606b05b5e080] = ;;
		*node[0x606b05b5e0b0] = print;
		*node[0x606b05b5e0e0] = 5;
		*node[0x606b05b5e110] = ;;
		*node[0x606b05b5e380] = =;
		*node[0x606b05b5e140] = 10;
		*node[0x606b05b5e350] = /;
		*node[0x606b05b5e290] = -;
		*node[0x606b05b5e1d0] = -;
		*node[0x606b05b5e170] = 0;
		*node[0x606b05b5e1a0] = 2;
		*node[0x606b05b5e260] = sqrt;
		*node[0x606b05b5e230] = 1;
		*node[0x606b05b5e200] = 9;
		*node[0x606b05b5e320] = *;
		*node[0x606b05b5e2c0] = 2;
		*node[0x606b05b5e2f0] = 1;
		*node[0x606b05b5e3b0] = ;;
		*node[0x606b05b5e620] = =;
		*node[0x606b05b5e3e0] = 11;
		*node[0x606b05b5e5f0] = /;
		*node[0x606b05b5e530] = +;
		*node[0x606b05b5e470] = -;
		*node[0x606b05b5e410] = 0;
		*node[0x606b05b5e440] = 2;
		*node[0x606b05b5e500] = sqrt;
		*node[0x606b05b5e4d0] = 1;
		*node[0x606b05b5e4a0] = 9;
		*node[0x606b05b5e5c0] = *;
		*node[0x606b05b5e560] = 2;
		*node[0x606b05b5e590] = 1;
		*node[0x606b05b5e650] = ;;
		*node[0x606b05b5e680] = print;
		*node[0x606b05b5e6b0] = 10;
		*node[0x606b05b5e6e0] = ;;
		*node[0x606b05b5e710] = print;
		*node[0x606b05b5e740] = 11;
		*node[0x606b05b5e770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffde06c5090] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x57074ea82d00] = ;;
		*node[0x57074ea82d30] = 0;
		*node[0x57074ea82d60] = ;;
		*node[0x57074ea82d90] = input;
		*node[0x57074ea82dc0] = 1;
		*node[0x57074ea82df0] = 2;
		*node[0x57074ea82e20] = 3;
		*node[0x57074ea82e50] = ;;
		*node[0x57074ea82ee0] = =;
		*node[0x57074ea82e80] = 4;
		*node[0x57074ea82eb0] = 1000;
		*node[0x57074ea82f10] = ;;
		*node[0x57074ea83000] = =;
		*node[0x57074ea82f40] = 5;
		*node[0x57074ea82fd0] = -;
		*node[0x57074ea82f70] = 0;
		*node[0x57074ea82fa0] = 1;
		*node[0x57074ea83030] = ;;
		*node[0x57074ea830c0] = =;
		*node[0x57074ea83060] = 6;
		*node[0x57074ea83090] = 1;
		*node[0x57074ea830f0] = ;;
		*node[0x57074ea83180] = =;
		*node[0x57074ea83120] = 7;
		*node[0x57074ea83150] = 2;
		*node[0x57074ea831b0] = ;;
		*node[0x57074ea831e0] = if;
		*node[0x57074ea83210] = op_no;
		*node[0x57074ea832a0] = ==;
		*node[0x57074ea83240] = 1;
		*node[0x57074ea83270] = 0;
		*node[0x57074ea832d0] = ;;
		*node[0x57074ea83300] = if;
		*node[0x57074ea83330] = op_no;
		*node[0x57074ea833c0] = ==;
		*node[0x57074ea83360] = 2;
		*node[0x57074ea83390] = 0;
		*node[0x57074ea833f0] = ;;
		*node[0x57074ea83420] = if;
		*node[0x57074ea83450] = op_no;
		*node[0x57074ea834e0] = ==;
		*node[0x57074ea83480] = 3;
		*node[0x57074ea834b0] = 0;
		*node[0x57074ea83510] = ;;
		*node[0x57074ea83540] = print;
		*node[0x57074ea83570] = 4;
		*node[0x57074ea835a0] = ;;
		*node[0x57074ea835d0] = print;
		*node[0x57074ea83600] = 5;
		*node[0x57074ea83630] = ;;
		*node[0x57074ea83780] = =;
		*node[0x57074ea83660] = 8;
		*node[0x57074ea83750] = -;
		*node[0x57074ea83690] = 0;
		*node[0x57074ea83720] = /;
		*node[0x57074ea836c0] = 3;
		*node[0x57074ea836f0] = 2;
		*node[0x57074ea837b0] = ;;
		*node[0x57074ea837e0] = print;
		*node[0x57074ea83810] = 8;
		*node[0x57074ea83840] = if;
		*node[0x57074ea83870] = op_no;
		*node[0x57074ea83900] = !=;
		*node[0x57074ea838a0] = 1;
		*node[0x57074ea838d0] = 0;
		*node[0x57074ea83930] = ;;
		*node[0x57074ea83b40] = =;
		*node[0x57074ea83960] = 9;
		*node[0x57074ea83b10] = -;
		*node[0x57074ea839f0] = ^;
		*node[0x57074ea83990] = 2;
		*node[0x57074ea839c0] = 2;
		*node[0x57074ea83ae0] = *;
		*node[0x57074ea83a80] = *;
		*node[0x57074ea83a20] = 4;
		*node[0x57074ea83a50] = 1;
		*node[0x57074ea83ab0] = 3;
		*node[0x57074ea83b70] = ;;
		*node[0x57074ea83ba0] = if;
		*node[0x57074ea83bd0] = op_no;
		*node[0x57074ea83c60] = ==;
		*node[0x57074ea83c00] = 9;
		*node[0x57074ea83c30] = 0;
		*node[0x57074ea83c90] = ;;
		*node[0x57074ea83e40] = =;
		*node[0x57074ea83cc0] = 8;
		*node[0x57074ea83e10] = -;
		*node[0x57074ea83cf0] = 0;
		*node[0x57074ea83de0] = /;
		*node[0x57074ea83d20] = 2;
		*node[0x57074ea83db0] = *;
		*node[0x57074ea83d50] = 2;
		*node[0x57074ea83d80] = 1;
		*node[0x57074ea83e70] = ;;
		*node[0x57074ea83ea0] = print;
		*node[0x57074ea83ed0] = 6;
		*node[0x57074ea83f00] = ;;
		*node[0x57074ea83f30] = print;
		*node[0x57074ea83f60] = 8;
		*node[0x57074ea83f90] = if;
		*node[0x57074ea83fc0] = op_no;
		*node[0x57074ea84050] = <;
		*node[0x57074ea83ff0] = 9;
		*node[0x57074ea84020] = 0;
		*node[0x57074ea84080] = ;;
		*node[0x57074ea840b0] = print;
		*node[0x57074ea840e0] = 5;
		*node[0x57074ea84110] = ;;
		*node[0x57074ea84380] = =;
		*node[0x57074ea84140] = 10;
		*node[0x57074ea84350] = /;
		*node[0x57074ea84290] = -;
		*node[0x57074ea841d0] = -;
		*node[0x57074ea84170] = 0;
		*node[0x57074ea841a0] = 2;
		*node[0x57074ea84260] = sqrt;
		*node[0x57074ea84230] = 1;
		*node[0x57074ea84200] = 9;
		*node[0x57074ea84320] = *;
		*node[0x57074ea842c0] = 2;
		*node[0x57074ea842f0] = 1;
		*node[0x57074ea843b0] = ;;
		*node[0x57074ea84620] = =;
		*node[0x57074ea843e0] = 11;
		*node[0x57074ea845f0] = /;
		*node[0x57074ea84530] = +;
		*node[0x57074ea84470] = -;
		*node[0x57074ea84410] = 0;
		*node[0x57074ea84440] = 2;
		*node[0x57074ea84500] = sqrt;
		*node[0x57074ea844d0] = 1;
		*node[0x57074ea844a0] = 9;
		*node[0x57074ea845c0] = *;
		*node[0x57074ea84560] = 2;
		*node[0x57074ea84590] = 1;
		*node[0x57074ea84650] = ;;
		*node[0x57074ea84680] = print;
		*node[0x57074ea846b0] = 10;
		*node[0x57074ea846e0] = ;;
		*node[0x57074ea84710] = print;
		*node[0x57074ea84740] = 11;
		*node[0x57074ea84770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffec72f1010] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x585694790d00] = ;;
		*node[0x585694790d30] = 0;
		*node[0x585694790d60] = ;;
		*node[0x585694790d90] = input;
		*node[0x585694790dc0] = 1;
		*node[0x585694790df0] = 2;
		*node[0x585694790e20] = 3;
		*node[0x585694790e50] = ;;
		*node[0x585694790ee0] = =;
		*node[0x585694790e80] = 4;
		*node[0x585694790eb0] = 1000;
		*node[0x585694790f10] = ;;
		*node[0x585694791000] = =;
		*node[0x585694790f40] = 5;
		*node[0x585694790fd0] = -;
		*node[0x585694790f70] = 0;
		*node[0x585694790fa0] = 1;
		*node[0x585694791030] = ;;
		*node[0x5856947910c0] = =;
		*node[0x585694791060] = 6;
		*node[0x585694791090] = 1;
		*node[0x5856947910f0] = ;;
		*node[0x585694791180] = =;
		*node[0x585694791120] = 7;
		*node[0x585694791150] = 2;
		*node[0x5856947911b0] = ;;
		*node[0x5856947911e0] = if;
		*node[0x585694791210] = op_no;
		*node[0x5856947912a0] = ==;
		*node[0x585694791240] = 1;
		*node[0x585694791270] = 0;
		*node[0x5856947912d0] = ;;
		*node[0x585694791300] = if;
		*node[0x585694791330] = op_no;
		*node[0x5856947913c0] = ==;
		*node[0x585694791360] = 2;
		*node[0x585694791390] = 0;
		*node[0x5856947913f0] = ;;
		*node[0x585694791420] = if;
		*node[0x585694791450] = op_no;
		*node[0x5856947914e0] = ==;
		*node[0x585694791480] = 3;
		*node[0x5856947914b0] = 0;
		*node[0x585694791510] = ;;
		*node[0x585694791540] = print;
		*node[0x585694791570] = 4;
		*node[0x5856947915a0] = ;;
		*node[0x5856947915d0] = print;
		*node[0x585694791600] = 5;
		*node[0x585694791630] = ;;
		*node[0x585694791780] = =;
		*node[0x585694791660] = 8;
		*node[0x585694791750] = -;
		*node[0x585694791690] = 0;
		*node[0x585694791720] = /;
		*node[0x5856947916c0] = 3;
		*node[0x5856947916f0] = 2;
		*node[0x5856947917b0] = ;;
		*node[0x5856947917e0] = print;
		*node[0x585694791810] = 8;
		*node[0x585694791840] = if;
		*node[0x585694791870] = op_no;
		*node[0x585694791900] = !=;
		*node[0x5856947918a0] = 1;
		*node[0x5856947918d0] = 0;
		*node[0x585694791930] = ;;
		*node[0x585694791b40] = =;
		*node[0x585694791960] = 9;
		*node[0x585694791b10] = -;
		*node[0x5856947919f0] = ^;
		*node[0x585694791990] = 2;
		*node[0x5856947919c0] = 2;
		*node[0x585694791ae0] = *;
		*node[0x585694791a80] = *;
		*node[0x585694791a20] = 4;
		*node[0x585694791a50] = 1;
		*node[0x585694791ab0] = 3;
		*node[0x585694791b70] = ;;
		*node[0x585694791ba0] = if;
		*node[0x585694791bd0] = op_no;
		*node[0x585694791c60] = ==;
		*node[0x585694791c00] = 9;
		*node[0x585694791c30] = 0;
		*node[0x585694791c90] = ;;
		*node[0x585694791e40] = =;
		*node[0x585694791cc0] = 8;
		*node[0x585694791e10] = -;
		*node[0x585694791cf0] = 0;
		*node[0x585694791de0] = /;
		*node[0x585694791d20] = 2;
		*node[0x585694791db0] = *;
		*node[0x585694791d50] = 2;
		*node[0x585694791d80] = 1;
		*node[0x585694791e70] = ;;
		*node[0x585694791ea0] = print;
		*node[0x585694791ed0] = 6;
		*node[0x585694791f00] = ;;
		*node[0x585694791f30] = print;
		*node[0x585694791f60] = 8;
		*node[0x585694791f90] = if;
		*node[0x585694791fc0] = op_no;
		*node[0x585694792050] = <;
		*node[0x585694791ff0] = 9;
		*node[0x585694792020] = 0;
		*node[0x585694792080] = ;;
		*node[0x5856947920b0] = print;
		*node[0x5856947920e0] = 5;
		*node[0x585694792110] = ;;
		*node[0x585694792380] = =;
		*node[0x585694792140] = 10;
		*node[0x585694792350] = /;
		*node[0x585694792290] = -;
		*node[0x5856947921d0] = -;
		*node[0x585694792170] = 0;
		*node[0x5856947921a0] = 2;
		*node[0x585694792260] = sqrt;
		*node[0x585694792230] = 1;
		*node[0x585694792200] = 9;
		*node[0x585694792320] = *;
		*node[0x5856947922c0] = 2;
		*node[0x5856947922f0] = 1;
		*node[0x5856947923b0] = ;;
		*node[0x585694792620] = =;
		*node[0x5856947923e0] = 11;
		*node[0x5856947925f0] = /;
		*node[0x585694792530] = +;
		*node[0x585694792470] = -;
		*node[0x585694792410] = 0;
		*node[0x585694792440] = 2;
		*node[0x585694792500] = sqrt;
		*node[0x5856947924d0] = 1;
		*node[0x5856947924a0] = 9;
		*node[0x5856947925c0] = *;
		*node[0x585694792560] = 2;
		*node[0x585694792590] = 1;
		*node[0x585694792650] = ;;
		*node[0x585694792680] = print;
		*node[0x5856947926b0] = 10;
		*node[0x5856947926e0] = ;;
		*node[0x585694792710] = print;
		*node[0x585694792740] = 11;
		*node[0x585694792770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc18509ce0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5ea6fda83d00] = ;;
		*node[0x5ea6fda83d30] = 0;
		*node[0x5ea6fda83d60] = ;;
		*node[0x5ea6fda83d90] = input;
		*node[0x5ea6fda83dc0] = 1;
		*node[0x5ea6fda83df0] = 2;
		*node[0x5ea6fda83e20] = 3;
		*node[0x5ea6fda83e50] = ;;
		*node[0x5ea6fda83ee0] = =;
		*node[0x5ea6fda83e80] = 4;
		*node[0x5ea6fda83eb0] = 1000;
		*node[0x5ea6fda83f10] = ;;
		*node[0x5ea6fda84000] = =;
		*node[0x5ea6fda83f40] = 5;
		*node[0x5ea6fda83fd0] = -;
		*node[0x5ea6fda83f70] = 0;
		*node[0x5ea6fda83fa0] = 1;
		*node[0x5ea6fda84030] = ;;
		*node[0x5ea6fda840c0] = =;
		*node[0x5ea6fda84060] = 6;
		*node[0x5ea6fda84090] = 1;
		*node[0x5ea6fda840f0] = ;;
		*node[0x5ea6fda84180] = =;
		*node[0x5ea6fda84120] = 7;
		*node[0x5ea6fda84150] = 2;
		*node[0x5ea6fda841b0] = ;;
		*node[0x5ea6fda841e0] = if;
		*node[0x5ea6fda84210] = op_no;
		*node[0x5ea6fda842a0] = ==;
		*node[0x5ea6fda84240] = 1;
		*node[0x5ea6fda84270] = 0;
		*node[0x5ea6fda842d0] = ;;
		*node[0x5ea6fda84300] = if;
		*node[0x5ea6fda84330] = op_no;
		*node[0x5ea6fda843c0] = ==;
		*node[0x5ea6fda84360] = 2;
		*node[0x5ea6fda84390] = 0;
		*node[0x5ea6fda843f0] = ;;
		*node[0x5ea6fda84420] = if;
		*node[0x5ea6fda84450] = op_no;
		*node[0x5ea6fda844e0] = ==;
		*node[0x5ea6fda84480] = 3;
		*node[0x5ea6fda844b0] = 0;
		*node[0x5ea6fda84510] = ;;
		*node[0x5ea6fda84540] = print;
		*node[0x5ea6fda84570] = 4;
		*node[0x5ea6fda845a0] = ;;
		*node[0x5ea6fda845d0] = print;
		*node[0x5ea6fda84600] = 5;
		*node[0x5ea6fda84630] = ;;
		*node[0x5ea6fda84780] = =;
		*node[0x5ea6fda84660] = 8;
		*node[0x5ea6fda84750] = -;
		*node[0x5ea6fda84690] = 0;
		*node[0x5ea6fda84720] = /;
		*node[0x5ea6fda846c0] = 3;
		*node[0x5ea6fda846f0] = 2;
		*node[0x5ea6fda847b0] = ;;
		*node[0x5ea6fda847e0] = print;
		*node[0x5ea6fda84810] = 8;
		*node[0x5ea6fda84840] = if;
		*node[0x5ea6fda84870] = op_no;
		*node[0x5ea6fda84900] = !=;
		*node[0x5ea6fda848a0] = 1;
		*node[0x5ea6fda848d0] = 0;
		*node[0x5ea6fda84930] = ;;
		*node[0x5ea6fda84b40] = =;
		*node[0x5ea6fda84960] = 9;
		*node[0x5ea6fda84b10] = -;
		*node[0x5ea6fda849f0] = ^;
		*node[0x5ea6fda84990] = 2;
		*node[0x5ea6fda849c0] = 2;
		*node[0x5ea6fda84ae0] = *;
		*node[0x5ea6fda84a80] = *;
		*node[0x5ea6fda84a20] = 4;
		*node[0x5ea6fda84a50] = 1;
		*node[0x5ea6fda84ab0] = 3;
		*node[0x5ea6fda84b70] = ;;
		*node[0x5ea6fda84ba0] = if;
		*node[0x5ea6fda84bd0] = op_no;
		*node[0x5ea6fda84c60] = ==;
		*node[0x5ea6fda84c00] = 9;
		*node[0x5ea6fda84c30] = 0;
		*node[0x5ea6fda84c90] = ;;
		*node[0x5ea6fda84e40] = =;
		*node[0x5ea6fda84cc0] = 8;
		*node[0x5ea6fda84e10] = -;
		*node[0x5ea6fda84cf0] = 0;
		*node[0x5ea6fda84de0] = /;
		*node[0x5ea6fda84d20] = 2;
		*node[0x5ea6fda84db0] = *;
		*node[0x5ea6fda84d50] = 2;
		*node[0x5ea6fda84d80] = 1;
		*node[0x5ea6fda84e70] = ;;
		*node[0x5ea6fda84ea0] = print;
		*node[0x5ea6fda84ed0] = 6;
		*node[0x5ea6fda84f00] = ;;
		*node[0x5ea6fda84f30] = print;
		*node[0x5ea6fda84f60] = 8;
		*node[0x5ea6fda84f90] = if;
		*node[0x5ea6fda84fc0] = op_no;
		*node[0x5ea6fda85050] = <;
		*node[0x5ea6fda84ff0] = 9;
		*node[0x5ea6fda85020] = 0;
		*node[0x5ea6fda85080] = ;;
		*node[0x5ea6fda850b0] = print;
		*node[0x5ea6fda850e0] = 5;
		*node[0x5ea6fda85110] = ;;
		*node[0x5ea6fda85380] = =;
		*node[0x5ea6fda85140] = 10;
		*node[0x5ea6fda85350] = /;
		*node[0x5ea6fda85290] = -;
		*node[0x5ea6fda851d0] = -;
		*node[0x5ea6fda85170] = 0;
		*node[0x5ea6fda851a0] = 2;
		*node[0x5ea6fda85260] = sqrt;
		*node[0x5ea6fda85230] = 1;
		*node[0x5ea6fda85200] = 9;
		*node[0x5ea6fda85320] = *;
		*node[0x5ea6fda852c0] = 2;
		*node[0x5ea6fda852f0] = 1;
		*node[0x5ea6fda853b0] = ;;
		*node[0x5ea6fda85620] = =;
		*node[0x5ea6fda853e0] = 11;
		*node[0x5ea6fda855f0] = /;
		*node[0x5ea6fda85530] = +;
		*node[0x5ea6fda85470] = -;
		*node[0x5ea6fda85410] = 0;
		*node[0x5ea6fda85440] = 2;
		*node[0x5ea6fda85500] = sqrt;
		*node[0x5ea6fda854d0] = 1;
		*node[0x5ea6fda854a0] = 9;
		*node[0x5ea6fda855c0] = *;
		*node[0x5ea6fda85560] = 2;
		*node[0x5ea6fda85590] = 1;
		*node[0x5ea6fda85650] = ;;
		*node[0x5ea6fda85680] = print;
		*node[0x5ea6fda856b0] = 10;
		*node[0x5ea6fda856e0] = ;;
		*node[0x5ea6fda85710] = print;
		*node[0x5ea6fda85740] = 11;
		*node[0x5ea6fda85770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffea951bd80] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffea951bd80] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc3495afc0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc3495afc0] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fffe513d4d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fffe513d4d0] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc47362cb0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc47362cb0] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc3d725f20] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffc3d725f20] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd2e365050] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffd2e365050] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffdf1298870] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffdf1298870] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd88b6d2f0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffd88b6d2f0] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd2c741650] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffd2c741650] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffca53e97b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffca53e97b0] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffde2655f60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffde2655f60] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc8bd661b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5694e822ead0] = ;;
		*node[0x5694e822eb00] = 0;
		*node[0x5694e822eb30] = ;;
		*node[0x5694e822eb60] = input;
		*node[0x5694e822eb90] = 1;
		*node[0x5694e822ebc0] = 2;
		*node[0x5694e822ebf0] = 3;
		*node[0x5694e822f030] = ;;
		*node[0x5694e822f0c0] = 1;
		*node[0x5694e822f0f0] = 2;
		*node[0x5694e822f120] = 3;
		*node[0x5694e822f090] = 4;
		*node[0x5694e822f150] = ;;
		*node[0x5694e822f180] = 0;
		*node[0x5694e822f1b0] = 1;
		*node[0x5694e822f1e0] = 2;
		*node[0x5694e822f210] = 3;
		*node[0x5694e822f240] = ;;
		*node[0x5694e822f270] = if;
		*node[0x5694e822f2a0] = op_no;
		*node[0x5694e822f330] = ==;
		*node[0x5694e822f2d0] = 1;
		*node[0x5694e822f300] = 0;
		*node[0x5694e822f360] = ;;
		*node[0x5694e822f3f0] = 2;
		*node[0x5694e822f420] = 3;
		*node[0x5694e822f3c0] = 5;
		*node[0x5694e822f450] = ;;
		*node[0x5694e822f4e0] = 1;
		*node[0x5694e822f510] = 2;
		*node[0x5694e822f540] = 3;
		*node[0x5694e822f4b0] = 6;
		*node[0x5694e822f570] = ;;
		*node[0x5694e822f5a0] = 0;
		*node[0x5694e822f5d0] = 1;
		*node[0x5694e822f600] = 2;
		*node[0x5694e822f630] = ;;
		*node[0x5694e822f6c0] = =;
		*node[0x5694e822f660] = 7;
		*node[0x5694e822f6f0] = ;;
		*node[0x5694e822f780] = =;
		*node[0x5694e822f720] = 8;
		*node[0x5694e822f750] = 1;
		*node[0x5694e822f7b0] = ;;
		*node[0x5694e822f840] = =;
		*node[0x5694e822f7e0] = 9;
		*node[0x5694e822f810] = 1000;
		*node[0x5694e822f870] = ;;
		*node[0x5694e822f8a0] = if;
		*node[0x5694e822f8d0] = op_no;
		*node[0x5694e822f960] = ==;
		*node[0x5694e822f900] = 1;
		*node[0x5694e822f930] = 0;
		*node[0x5694e822f990] = ;;
		*node[0x5694e822f9c0] = if;
		*node[0x5694e822f9f0] = op_no;
		*node[0x5694e822fa80] = ==;
		*node[0x5694e822fa20] = 2;
		*node[0x5694e822fa50] = 0;
		*node[0x5694e822fab0] = ;;
		*node[0x5694e822fae0] = print;
		*node[0x5694e822fb10] = 9;
		*node[0x5694e822fb40] = ;;
		*node[0x5694e822fb70] = print;
		*node[0x5694e822fba0] = 7;
		*node[0x5694e822fbd0] = ;;
		*node[0x5694e822fd20] = =;
		*node[0x5694e822fc00] = 10;
		*node[0x5694e822fcf0] = /;
		*node[0x5694e822fc90] = -;
		*node[0x5694e822fc30] = 0;
		*node[0x5694e822fc60] = 2;
		*node[0x5694e822fcc0] = 1;
		*node[0x5694e822fd50] = ;;
		*node[0x5694e822fd80] = print;
		*node[0x5694e822fdb0] = 8;
		*node[0x5694e822fde0] = ;;
		*node[0x5694e822fe10] = print;
		*node[0x5694e822fe40] = 10;
		*node[0x5694e822fe70] = ;;
		*node[0x5694e822fea0] = return;
		*node[0x5694e822fed0] = 0;
		*node[0x5694e822ff00] = ;;
		*node[0x5694e822ff30] = 0;
		*node[0x5694e822ff60] = 1;
		*node[0x5694e822ff90] = 2;
		*node[0x5694e822ffc0] = 3;
		*node[0x5694e822fff0] = ;;
		*node[0x5694e8230080] = =;
		*node[0x5694e8230020] = 7;
		*node[0x5694e82300b0] = ;;
		*node[0x5694e8230140] = =;
		*node[0x5694e82300e0] = 8;
		*node[0x5694e8230110] = 1;
		*node[0x5694e8230170] = ;;
		*node[0x5694e8230200] = =;
		*node[0x5694e82301a0] = 11;
		*node[0x5694e82301d0] = 2;
		*node[0x5694e8230230] = ;;
		*node[0x5694e8230260] = if;
		*node[0x5694e8230290] = op_no;
		*node[0x5694e8230320] = ==;
		*node[0x5694e82302c0] = 3;
		*node[0x5694e82302f0] = 0;
		*node[0x5694e8230350] = ;;
		*node[0x5694e82303e0] = =;
		*node[0x5694e8230380] = 12;
		*node[0x5694e82303b0] = 0;
		*node[0x5694e8230410] = ;;
		*node[0x5694e8230560] = =;
		*node[0x5694e8230440] = 13;
		*node[0x5694e8230530] = /;
		*node[0x5694e82304d0] = -;
		*node[0x5694e8230470] = 0;
		*node[0x5694e82304a0] = 2;
		*node[0x5694e8230500] = 1;
		*node[0x5694e8230590] = ;;
		*node[0x5694e82305c0] = print;
		*node[0x5694e82305f0] = 11;
		*node[0x5694e8230620] = ;;
		*node[0x5694e8230650] = print;
		*node[0x5694e8230680] = 12;
		*node[0x5694e82306b0] = 13;
		*node[0x5694e82306e0] = ;;
		*node[0x5694e82308f0] = =;
		*node[0x5694e8230710] = 14;
		*node[0x5694e82308c0] = -;
		*node[0x5694e82307a0] = *;
		*node[0x5694e8230740] = 2;
		*node[0x5694e8230770] = 2;
		*node[0x5694e8230890] = *;
		*node[0x5694e8230830] = *;
		*node[0x5694e82307d0] = 4;
		*node[0x5694e8230800] = 1;
		*node[0x5694e8230860] = 3;
		*node[0x5694e8230920] = ;;
		*node[0x5694e8230950] = if;
		*node[0x5694e8230980] = op_no;
		*node[0x5694e8230a10] = >;
		*node[0x5694e82309b0] = 14;
		*node[0x5694e82309e0] = 0;
		*node[0x5694e8230a40] = ;;
		*node[0x5694e8230cb0] = =;
		*node[0x5694e8230a70] = 12;
		*node[0x5694e8230c80] = /;
		*node[0x5694e8230bc0] = -;
		*node[0x5694e8230b00] = -;
		*node[0x5694e8230aa0] = 0;
		*node[0x5694e8230ad0] = 2;
		*node[0x5694e8230b90] = sqrt;
		*node[0x5694e8230b60] = 1;
		*node[0x5694e8230b30] = 15;
		*node[0x5694e8230c50] = *;
		*node[0x5694e8230bf0] = 2;
		*node[0x5694e8230c20] = 1;
		*node[0x5694e8230ce0] = ;;
		*node[0x5694e8230f50] = =;
		*node[0x5694e8230d10] = 13;
		*node[0x5694e8230f20] = /;
		*node[0x5694e8230e60] = +;
		*node[0x5694e8230da0] = -;
		*node[0x5694e8230d40] = 0;
		*node[0x5694e8230d70] = 2;
		*node[0x5694e8230e30] = sqrt;
		*node[0x5694e8230e00] = 1;
		*node[0x5694e8230dd0] = 15;
		*node[0x5694e8230ef0] = *;
		*node[0x5694e8230e90] = 2;
		*node[0x5694e8230ec0] = 1;
		*node[0x5694e8230f80] = ;;
		*node[0x5694e8230fb0] = print;
		*node[0x5694e8230fe0] = 11;
		*node[0x5694e8231010] = ;;
		*node[0x5694e8231040] = print;
		*node[0x5694e8231070] = 12;
		*node[0x5694e82310a0] = 13;
		*node[0x5694e82310d0] = if;
		*node[0x5694e8231100] = op_no;
		*node[0x5694e8231190] = ==;
		*node[0x5694e8231130] = 14;
		*node[0x5694e8231160] = 0;
		*node[0x5694e82311c0] = ;;
		*node[0x5694e8231370] = =;
		*node[0x5694e82311f0] = 10;
		*node[0x5694e8231340] = /;
		*node[0x5694e8231280] = -;
		*node[0x5694e8231220] = 0;
		*node[0x5694e8231250] = 2;
		*node[0x5694e8231310] = *;
		*node[0x5694e82312b0] = 2;
		*node[0x5694e82312e0] = 1;
		*node[0x5694e82313a0] = ;;
		*node[0x5694e82313d0] = print;
		*node[0x5694e8231400] = 8;
		*node[0x5694e8231430] = ;;
		*node[0x5694e8231460] = print;
		*node[0x5694e8231490] = 10;
		*node[0x5694e82314c0] = ;;
		*node[0x5694e82314f0] = print;
		*node[0x5694e8231520] = 7;
		*node[0x5694e8231550] = ;;
		*node[0x5694e8231580] = return;
		*node[0x5694e82315b0] = 0;
		*node[0x5694e82315e0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc8c01c7c0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5bc386ded5d0] = ;;
		*node[0x5bc386ded600] = 0;
		*node[0x5bc386ded630] = ;;
		*node[0x5bc386ded660] = input;
		*node[0x5bc386ded690] = 1;
		*node[0x5bc386ded6c0] = 2;
		*node[0x5bc386ded6f0] = 3;
		*node[0x5bc386ded720] = ;;
		*node[0x5bc386ded7b0] = 1;
		*node[0x5bc386ded7e0] = 2;
		*node[0x5bc386ded810] = 3;
		*node[0x5bc386ded780] = 4;
		*node[0x5bc386ded840] = ;;
		*node[0x5bc386ded870] = 0;
		*node[0x5bc386ded8a0] = 1;
		*node[0x5bc386ded8d0] = 2;
		*node[0x5bc386ded900] = 3;
		*node[0x5bc386ded930] = ;;
		*node[0x5bc386ded960] = if;
		*node[0x5bc386ded990] = op_no;
		*node[0x5bc386deda20] = ==;
		*node[0x5bc386ded9c0] = 1;
		*node[0x5bc386ded9f0] = 0;
		*node[0x5bc386deda50] = ;;
		*node[0x5bc386dedae0] = 2;
		*node[0x5bc386dedb10] = 3;
		*node[0x5bc386dedab0] = 5;
		*node[0x5bc386dedb40] = ;;
		*node[0x5bc386dedbd0] = 1;
		*node[0x5bc386dedc00] = 2;
		*node[0x5bc386dedc30] = 3;
		*node[0x5bc386dedba0] = 6;
		*node[0x5bc386dedc60] = ;;
		*node[0x5bc386dedc90] = 0;
		*node[0x5bc386dedcc0] = 1;
		*node[0x5bc386dedcf0] = 2;
		*node[0x5bc386dedd20] = ;;
		*node[0x5bc386deddb0] = =;
		*node[0x5bc386dedd50] = 7;
		*node[0x5bc386dedde0] = ;;
		*node[0x5bc386dede70] = =;
		*node[0x5bc386dede10] = 8;
		*node[0x5bc386dede40] = 1;
		*node[0x5bc386dedea0] = ;;
		*node[0x5bc386dedf30] = =;
		*node[0x5bc386deded0] = 9;
		*node[0x5bc386dedf00] = 1000;
		*node[0x5bc386dedf60] = ;;
		*node[0x5bc386dedf90] = if;
		*node[0x5bc386dedfc0] = op_no;
		*node[0x5bc386dee050] = ==;
		*node[0x5bc386dedff0] = 1;
		*node[0x5bc386dee020] = 0;
		*node[0x5bc386dee080] = ;;
		*node[0x5bc386dee0b0] = if;
		*node[0x5bc386dee0e0] = op_no;
		*node[0x5bc386dee170] = ==;
		*node[0x5bc386dee110] = 2;
		*node[0x5bc386dee140] = 0;
		*node[0x5bc386dee1a0] = ;;
		*node[0x5bc386dee1d0] = print;
		*node[0x5bc386dee200] = 9;
		*node[0x5bc386dee230] = ;;
		*node[0x5bc386dee260] = print;
		*node[0x5bc386dee290] = 7;
		*node[0x5bc386dee2c0] = ;;
		*node[0x5bc386dee410] = =;
		*node[0x5bc386dee2f0] = 10;
		*node[0x5bc386dee3e0] = /;
		*node[0x5bc386dee380] = -;
		*node[0x5bc386dee320] = 0;
		*node[0x5bc386dee350] = 2;
		*node[0x5bc386dee3b0] = 1;
		*node[0x5bc386dee440] = ;;
		*node[0x5bc386dee470] = print;
		*node[0x5bc386dee4a0] = 8;
		*node[0x5bc386dee4d0] = ;;
		*node[0x5bc386dee500] = print;
		*node[0x5bc386dee530] = 10;
		*node[0x5bc386dee560] = ;;
		*node[0x5bc386dee590] = return;
		*node[0x5bc386dee5c0] = 0;
		*node[0x5bc386dee5f0] = ;;
		*node[0x5bc386dee620] = 0;
		*node[0x5bc386dee650] = 1;
		*node[0x5bc386dee680] = 2;
		*node[0x5bc386dee6b0] = 3;
		*node[0x5bc386dee6e0] = ;;
		*node[0x5bc386dee770] = =;
		*node[0x5bc386dee710] = 7;
		*node[0x5bc386dee7a0] = ;;
		*node[0x5bc386dee830] = =;
		*node[0x5bc386dee7d0] = 8;
		*node[0x5bc386dee800] = 1;
		*node[0x5bc386dee860] = ;;
		*node[0x5bc386dee8f0] = =;
		*node[0x5bc386dee890] = 11;
		*node[0x5bc386dee8c0] = 2;
		*node[0x5bc386dee920] = ;;
		*node[0x5bc386dee950] = if;
		*node[0x5bc386dee980] = op_no;
		*node[0x5bc386deea10] = ==;
		*node[0x5bc386dee9b0] = 3;
		*node[0x5bc386dee9e0] = 0;
		*node[0x5bc386deea40] = ;;
		*node[0x5bc386deead0] = =;
		*node[0x5bc386deea70] = 12;
		*node[0x5bc386deeaa0] = 0;
		*node[0x5bc386deeb00] = ;;
		*node[0x5bc386deec50] = =;
		*node[0x5bc386deeb30] = 13;
		*node[0x5bc386deec20] = /;
		*node[0x5bc386deebc0] = -;
		*node[0x5bc386deeb60] = 0;
		*node[0x5bc386deeb90] = 2;
		*node[0x5bc386deebf0] = 1;
		*node[0x5bc386deec80] = ;;
		*node[0x5bc386deecb0] = print;
		*node[0x5bc386deece0] = 11;
		*node[0x5bc386deed10] = ;;
		*node[0x5bc386deed40] = print;
		*node[0x5bc386deed70] = 12;
		*node[0x5bc386deeda0] = 13;
		*node[0x5bc386deedd0] = ;;
		*node[0x5bc386deefe0] = =;
		*node[0x5bc386deee00] = 14;
		*node[0x5bc386deefb0] = -;
		*node[0x5bc386deee90] = *;
		*node[0x5bc386deee30] = 2;
		*node[0x5bc386deee60] = 2;
		*node[0x5bc386deef80] = *;
		*node[0x5bc386deef20] = *;
		*node[0x5bc386deeec0] = 4;
		*node[0x5bc386deeef0] = 1;
		*node[0x5bc386deef50] = 3;
		*node[0x5bc386def010] = ;;
		*node[0x5bc386def040] = if;
		*node[0x5bc386def070] = op_no;
		*node[0x5bc386def100] = >;
		*node[0x5bc386def0a0] = 14;
		*node[0x5bc386def0d0] = 0;
		*node[0x5bc386def130] = ;;
		*node[0x5bc386def220] = =;
		*node[0x5bc386def160] = 15;
		*node[0x5bc386def1f0] = sqrt;
		*node[0x5bc386def1c0] = 1;
		*node[0x5bc386def190] = 14;
		*node[0x5bc386def250] = ;;
		*node[0x5bc386def460] = =;
		*node[0x5bc386def280] = 12;
		*node[0x5bc386def430] = /;
		*node[0x5bc386def370] = -;
		*node[0x5bc386def310] = -;
		*node[0x5bc386def2b0] = 0;
		*node[0x5bc386def2e0] = 2;
		*node[0x5bc386def340] = 15;
		*node[0x5bc386def400] = *;
		*node[0x5bc386def3a0] = 2;
		*node[0x5bc386def3d0] = 1;
		*node[0x5bc386def490] = ;;
		*node[0x5bc386def6a0] = =;
		*node[0x5bc386def4c0] = 13;
		*node[0x5bc386def670] = /;
		*node[0x5bc386def5b0] = +;
		*node[0x5bc386def550] = -;
		*node[0x5bc386def4f0] = 0;
		*node[0x5bc386def520] = 2;
		*node[0x5bc386def580] = 15;
		*node[0x5bc386def640] = *;
		*node[0x5bc386def5e0] = 2;
		*node[0x5bc386def610] = 1;
		*node[0x5bc386def6d0] = ;;
		*node[0x5bc386def700] = print;
		*node[0x5bc386def730] = 11;
		*node[0x5bc386def760] = ;;
		*node[0x5bc386def790] = print;
		*node[0x5bc386def7c0] = 12;
		*node[0x5bc386def7f0] = 13;
		*node[0x5bc386def820] = if;
		*node[0x5bc386def850] = op_no;
		*node[0x5bc386def8e0] = ==;
		*node[0x5bc386def880] = 14;
		*node[0x5bc386def8b0] = 0;
		*node[0x5bc386def910] = ;;
		*node[0x5bc386defac0] = =;
		*node[0x5bc386def940] = 10;
		*node[0x5bc386defa90] = /;
		*node[0x5bc386def9d0] = -;
		*node[0x5bc386def970] = 0;
		*node[0x5bc386def9a0] = 2;
		*node[0x5bc386defa60] = *;
		*node[0x5bc386defa00] = 2;
		*node[0x5bc386defa30] = 1;
		*node[0x5bc386defaf0] = ;;
		*node[0x5bc386defb20] = print;
		*node[0x5bc386defb50] = 8;
		*node[0x5bc386defb80] = ;;
		*node[0x5bc386defbb0] = print;
		*node[0x5bc386defbe0] = 10;
		*node[0x5bc386defc10] = ;;
		*node[0x5bc386defc40] = print;
		*node[0x5bc386defc70] = 7;
		*node[0x5bc386defca0] = ;;
		*node[0x5bc386defcd0] = return;
		*node[0x5bc386defd00] = 0;
		*node[0x5bc386defd30] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd46088450] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58b4642915d0] = ;;
		*node[0x58b464291600] = 0;
		*node[0x58b464291630] = ;;
		*node[0x58b464291660] = input;
		*node[0x58b464291690] = 1;
		*node[0x58b4642916c0] = 2;
		*node[0x58b4642916f0] = 3;
		*node[0x58b464291720] = ;;
		*node[0x58b4642917b0] = 1;
		*node[0x58b4642917e0] = 2;
		*node[0x58b464291810] = 3;
		*node[0x58b464291780] = 4;
		*node[0x58b464291840] = ;;
		*node[0x58b464291870] = 0;
		*node[0x58b4642918a0] = 1;
		*node[0x58b4642918d0] = 2;
		*node[0x58b464291900] = 3;
		*node[0x58b464291930] = ;;
		*node[0x58b464291960] = if;
		*node[0x58b464291990] = op_no;
		*node[0x58b464291a20] = ==;
		*node[0x58b4642919c0] = 1;
		*node[0x58b4642919f0] = 0;
		*node[0x58b464291a50] = ;;
		*node[0x58b464291ae0] = 2;
		*node[0x58b464291b10] = 3;
		*node[0x58b464291ab0] = 5;
		*node[0x58b464291b40] = ;;
		*node[0x58b464291bd0] = 1;
		*node[0x58b464291c00] = 2;
		*node[0x58b464291c30] = 3;
		*node[0x58b464291ba0] = 6;
		*node[0x58b464291c60] = ;;
		*node[0x58b464291c90] = 0;
		*node[0x58b464291cc0] = 1;
		*node[0x58b464291cf0] = 2;
		*node[0x58b464291d20] = ;;
		*node[0x58b464291db0] = =;
		*node[0x58b464291d50] = 7;
		*node[0x58b464291de0] = ;;
		*node[0x58b464291e70] = =;
		*node[0x58b464291e10] = 8;
		*node[0x58b464291e40] = 1;
		*node[0x58b464291ea0] = ;;
		*node[0x58b464291f30] = =;
		*node[0x58b464291ed0] = 9;
		*node[0x58b464291f00] = 1000;
		*node[0x58b464291f60] = ;;
		*node[0x58b464291f90] = if;
		*node[0x58b464291fc0] = op_no;
		*node[0x58b464292050] = ==;
		*node[0x58b464291ff0] = 1;
		*node[0x58b464292020] = 0;
		*node[0x58b464292080] = ;;
		*node[0x58b4642920b0] = if;
		*node[0x58b4642920e0] = op_no;
		*node[0x58b464292170] = ==;
		*node[0x58b464292110] = 2;
		*node[0x58b464292140] = 0;
		*node[0x58b4642921a0] = ;;
		*node[0x58b4642921d0] = print;
		*node[0x58b464292200] = 9;
		*node[0x58b464292230] = ;;
		*node[0x58b464292260] = print;
		*node[0x58b464292290] = 7;
		*node[0x58b4642922c0] = ;;
		*node[0x58b464292410] = =;
		*node[0x58b4642922f0] = 10;
		*node[0x58b4642923e0] = /;
		*node[0x58b464292380] = -;
		*node[0x58b464292320] = 0;
		*node[0x58b464292350] = 2;
		*node[0x58b4642923b0] = 1;
		*node[0x58b464292440] = ;;
		*node[0x58b464292470] = print;
		*node[0x58b4642924a0] = 8;
		*node[0x58b4642924d0] = ;;
		*node[0x58b464292500] = print;
		*node[0x58b464292530] = 10;
		*node[0x58b464292560] = ;;
		*node[0x58b464292590] = return;
		*node[0x58b4642925c0] = 0;
		*node[0x58b4642925f0] = ;;
		*node[0x58b464292620] = 0;
		*node[0x58b464292650] = 1;
		*node[0x58b464292680] = 2;
		*node[0x58b4642926b0] = 3;
		*node[0x58b4642926e0] = ;;
		*node[0x58b464292770] = =;
		*node[0x58b464292710] = 7;
		*node[0x58b4642927a0] = ;;
		*node[0x58b464292830] = =;
		*node[0x58b4642927d0] = 8;
		*node[0x58b464292800] = 1;
		*node[0x58b464292860] = ;;
		*node[0x58b4642928f0] = =;
		*node[0x58b464292890] = 11;
		*node[0x58b4642928c0] = 2;
		*node[0x58b464292920] = ;;
		*node[0x58b464292950] = if;
		*node[0x58b464292980] = op_no;
		*node[0x58b464292a10] = ==;
		*node[0x58b4642929b0] = 3;
		*node[0x58b4642929e0] = 0;
		*node[0x58b464292a40] = ;;
		*node[0x58b464292ad0] = =;
		*node[0x58b464292a70] = 12;
		*node[0x58b464292aa0] = 0;
		*node[0x58b464292b00] = ;;
		*node[0x58b464292c50] = =;
		*node[0x58b464292b30] = 13;
		*node[0x58b464292c20] = /;
		*node[0x58b464292bc0] = -;
		*node[0x58b464292b60] = 0;
		*node[0x58b464292b90] = 2;
		*node[0x58b464292bf0] = 1;
		*node[0x58b464292c80] = ;;
		*node[0x58b464292cb0] = print;
		*node[0x58b464292ce0] = 11;
		*node[0x58b464292d10] = ;;
		*node[0x58b464292d40] = print;
		*node[0x58b464292d70] = 12;
		*node[0x58b464292da0] = 13;
		*node[0x58b464292dd0] = ;;
		*node[0x58b464292fe0] = =;
		*node[0x58b464292e00] = 14;
		*node[0x58b464292fb0] = -;
		*node[0x58b464292e90] = *;
		*node[0x58b464292e30] = 2;
		*node[0x58b464292e60] = 2;
		*node[0x58b464292f80] = *;
		*node[0x58b464292f20] = *;
		*node[0x58b464292ec0] = 4;
		*node[0x58b464292ef0] = 1;
		*node[0x58b464292f50] = 3;
		*node[0x58b464293010] = ;;
		*node[0x58b464293040] = if;
		*node[0x58b464293070] = op_no;
		*node[0x58b464293100] = >;
		*node[0x58b4642930a0] = 14;
		*node[0x58b4642930d0] = 0;
		*node[0x58b464293130] = ;;
		*node[0x58b464293220] = =;
		*node[0x58b464293160] = 15;
		*node[0x58b4642931f0] = sqrt;
		*node[0x58b4642931c0] = 1;
		*node[0x58b464293190] = 14;
		*node[0x58b464293250] = ;;
		*node[0x58b464293460] = =;
		*node[0x58b464293280] = 12;
		*node[0x58b464293430] = /;
		*node[0x58b464293370] = -;
		*node[0x58b464293310] = -;
		*node[0x58b4642932b0] = 0;
		*node[0x58b4642932e0] = 2;
		*node[0x58b464293340] = 15;
		*node[0x58b464293400] = *;
		*node[0x58b4642933a0] = 2;
		*node[0x58b4642933d0] = 1;
		*node[0x58b464293490] = ;;
		*node[0x58b4642936a0] = =;
		*node[0x58b4642934c0] = 13;
		*node[0x58b464293670] = /;
		*node[0x58b4642935b0] = +;
		*node[0x58b464293550] = -;
		*node[0x58b4642934f0] = 0;
		*node[0x58b464293520] = 2;
		*node[0x58b464293580] = 15;
		*node[0x58b464293640] = *;
		*node[0x58b4642935e0] = 2;
		*node[0x58b464293610] = 1;
		*node[0x58b4642936d0] = ;;
		*node[0x58b464293700] = print;
		*node[0x58b464293730] = 11;
		*node[0x58b464293760] = ;;
		*node[0x58b464293790] = print;
		*node[0x58b4642937c0] = 12;
		*node[0x58b4642937f0] = 13;
		*node[0x58b464293820] = if;
		*node[0x58b464293850] = op_no;
		*node[0x58b4642938e0] = ==;
		*node[0x58b464293880] = 14;
		*node[0x58b4642938b0] = 0;
		*node[0x58b464293910] = ;;
		*node[0x58b464293ac0] = =;
		*node[0x58b464293940] = 10;
		*node[0x58b464293a90] = /;
		*node[0x58b4642939d0] = -;
		*node[0x58b464293970] = 0;
		*node[0x58b4642939a0] = 2;
		*node[0x58b464293a60] = *;
		*node[0x58b464293a00] = 2;
		*node[0x58b464293a30] = 1;
		*node[0x58b464293af0] = ;;
		*node[0x58b464293b20] = print;
		*node[0x58b464293b50] = 8;
		*node[0x58b464293b80] = ;;
		*node[0x58b464293bb0] = print;
		*node[0x58b464293be0] = 10;
		*node[0x58b464293c10] = ;;
		*node[0x58b464293c40] = print;
		*node[0x58b464293c70] = 7;
		*node[0x58b464293ca0] = ;;
		*node[0x58b464293cd0] = return;
		*node[0x58b464293d00] = 0;
		*node[0x58b464293d30] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe80e757e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6455bee2e610] = ;;
		*node[0x6455bee2e640] = 0;
		*node[0x6455bee2e670] = ;;
		*node[0x6455bee2e6a0] = input;
		*node[0x6455bee2e6d0] = 1;
		*node[0x6455bee2e700] = 2;
		*node[0x6455bee2e730] = 3;
		*node[0x6455bee2e760] = ;;
		*node[0x6455bee2e7f0] = 1;
		*node[0x6455bee2e820] = 2;
		*node[0x6455bee2e850] = 3;
		*node[0x6455bee2e7c0] = 4;
		*node[0x6455bee2e880] = ;;
		*node[0x6455bee2e8b0] = 0;
		*node[0x6455bee2e8e0] = 1;
		*node[0x6455bee2e910] = 2;
		*node[0x6455bee2e940] = 3;
		*node[0x6455bee2e970] = ;;
		*node[0x6455bee2e9a0] = if;
		*node[0x6455bee2e9d0] = op_no;
		*node[0x6455bee2ea60] = ==;
		*node[0x6455bee2ea00] = 1;
		*node[0x6455bee2ea30] = 0;
		*node[0x6455bee2ea90] = ;;
		*node[0x6455bee2eb20] = 2;
		*node[0x6455bee2eb50] = 3;
		*node[0x6455bee2eaf0] = 5;
		*node[0x6455bee2eb80] = ;;
		*node[0x6455bee2ec10] = 1;
		*node[0x6455bee2ec40] = 2;
		*node[0x6455bee2ec70] = 3;
		*node[0x6455bee2ebe0] = 6;
		*node[0x6455bee2eca0] = ;;
		*node[0x6455bee2ecd0] = 0;
		*node[0x6455bee2ed00] = 1;
		*node[0x6455bee2ed30] = 2;
		*node[0x6455bee2ed60] = ;;
		*node[0x6455bee2edf0] = =;
		*node[0x6455bee2ed90] = 7;
		*node[0x6455bee2ee20] = ;;
		*node[0x6455bee2eeb0] = =;
		*node[0x6455bee2ee50] = 8;
		*node[0x6455bee2ee80] = 1;
		*node[0x6455bee2eee0] = ;;
		*node[0x6455bee2ef70] = =;
		*node[0x6455bee2ef10] = 9;
		*node[0x6455bee2ef40] = 1000;
		*node[0x6455bee2efa0] = ;;
		*node[0x6455bee2efd0] = if;
		*node[0x6455bee2f000] = op_no;
		*node[0x6455bee2f090] = ==;
		*node[0x6455bee2f030] = 1;
		*node[0x6455bee2f060] = 0;
		*node[0x6455bee2f0c0] = ;;
		*node[0x6455bee2f0f0] = if;
		*node[0x6455bee2f120] = op_no;
		*node[0x6455bee2f1b0] = ==;
		*node[0x6455bee2f150] = 2;
		*node[0x6455bee2f180] = 0;
		*node[0x6455bee2f1e0] = ;;
		*node[0x6455bee2f210] = print;
		*node[0x6455bee2f240] = 9;
		*node[0x6455bee2f270] = ;;
		*node[0x6455bee2f2a0] = print;
		*node[0x6455bee2f2d0] = 7;
		*node[0x6455bee2f300] = ;;
		*node[0x6455bee2f450] = =;
		*node[0x6455bee2f330] = 10;
		*node[0x6455bee2f420] = /;
		*node[0x6455bee2f3c0] = -;
		*node[0x6455bee2f360] = 0;
		*node[0x6455bee2f390] = 2;
		*node[0x6455bee2f3f0] = 1;
		*node[0x6455bee2f480] = ;;
		*node[0x6455bee2f4b0] = print;
		*node[0x6455bee2f4e0] = 8;
		*node[0x6455bee2f510] = ;;
		*node[0x6455bee2f540] = print;
		*node[0x6455bee2f570] = 10;
		*node[0x6455bee2f5a0] = ;;
		*node[0x6455bee2f5d0] = return;
		*node[0x6455bee2f600] = 0;
		*node[0x6455bee2f630] = ;;
		*node[0x6455bee2f660] = 0;
		*node[0x6455bee2f690] = 1;
		*node[0x6455bee2f6c0] = 2;
		*node[0x6455bee2f6f0] = 3;
		*node[0x6455bee2f720] = ;;
		*node[0x6455bee2f810] = =;
		*node[0x6455bee2f750] = 7;
		*node[0x6455bee2f7e0] = -;
		*node[0x6455bee2f780] = 0;
		*node[0x6455bee2f7b0] = 1;
		*node[0x6455bee2f840] = ;;
		*node[0x6455bee2f8d0] = =;
		*node[0x6455bee2f870] = 8;
		*node[0x6455bee2f8a0] = 1;
		*node[0x6455bee2f900] = ;;
		*node[0x6455bee2f990] = =;
		*node[0x6455bee2f930] = 11;
		*node[0x6455bee2f960] = 2;
		*node[0x6455bee2f9c0] = ;;
		*node[0x6455bee2f9f0] = if;
		*node[0x6455bee2fa20] = op_no;
		*node[0x6455bee2fab0] = ==;
		*node[0x6455bee2fa50] = 3;
		*node[0x6455bee2fa80] = 0;
		*node[0x6455bee2fae0] = ;;
		*node[0x6455bee2fb70] = =;
		*node[0x6455bee2fb10] = 12;
		*node[0x6455bee2fb40] = 0;
		*node[0x6455bee2fba0] = ;;
		*node[0x6455bee2fcf0] = =;
		*node[0x6455bee2fbd0] = 13;
		*node[0x6455bee2fcc0] = /;
		*node[0x6455bee2fc60] = -;
		*node[0x6455bee2fc00] = 0;
		*node[0x6455bee2fc30] = 2;
		*node[0x6455bee2fc90] = 1;
		*node[0x6455bee2fd20] = ;;
		*node[0x6455bee2fd50] = print;
		*node[0x6455bee2fd80] = 11;
		*node[0x6455bee2fdb0] = ;;
		*node[0x6455bee2fde0] = print;
		*node[0x6455bee2fe10] = 12;
		*node[0x6455bee2fe40] = 13;
		*node[0x6455bee2fe70] = ;;
		*node[0x6455bee30080] = =;
		*node[0x6455bee2fea0] = 14;
		*node[0x6455bee30050] = -;
		*node[0x6455bee2ff30] = *;
		*node[0x6455bee2fed0] = 2;
		*node[0x6455bee2ff00] = 2;
		*node[0x6455bee30020] = *;
		*node[0x6455bee2ffc0] = *;
		*node[0x6455bee2ff60] = 4;
		*node[0x6455bee2ff90] = 1;
		*node[0x6455bee2fff0] = 3;
		*node[0x6455bee300b0] = ;;
		*node[0x6455bee300e0] = if;
		*node[0x6455bee30110] = op_no;
		*node[0x6455bee301a0] = >;
		*node[0x6455bee30140] = 14;
		*node[0x6455bee30170] = 0;
		*node[0x6455bee301d0] = ;;
		*node[0x6455bee302c0] = =;
		*node[0x6455bee30200] = 15;
		*node[0x6455bee30290] = sqrt;
		*node[0x6455bee30260] = 1;
		*node[0x6455bee30230] = 14;
		*node[0x6455bee302f0] = ;;
		*node[0x6455bee30500] = =;
		*node[0x6455bee30320] = 12;
		*node[0x6455bee304d0] = /;
		*node[0x6455bee30410] = -;
		*node[0x6455bee303b0] = -;
		*node[0x6455bee30350] = 0;
		*node[0x6455bee30380] = 2;
		*node[0x6455bee303e0] = 15;
		*node[0x6455bee304a0] = *;
		*node[0x6455bee30440] = 2;
		*node[0x6455bee30470] = 1;
		*node[0x6455bee30530] = ;;
		*node[0x6455bee30740] = =;
		*node[0x6455bee30560] = 13;
		*node[0x6455bee30710] = /;
		*node[0x6455bee30650] = +;
		*node[0x6455bee305f0] = -;
		*node[0x6455bee30590] = 0;
		*node[0x6455bee305c0] = 2;
		*node[0x6455bee30620] = 15;
		*node[0x6455bee306e0] = *;
		*node[0x6455bee30680] = 2;
		*node[0x6455bee306b0] = 1;
		*node[0x6455bee30770] = ;;
		*node[0x6455bee307a0] = print;
		*node[0x6455bee307d0] = 11;
		*node[0x6455bee30800] = ;;
		*node[0x6455bee30830] = print;
		*node[0x6455bee30860] = 12;
		*node[0x6455bee30890] = 13;
		*node[0x6455bee308c0] = if;
		*node[0x6455bee308f0] = op_no;
		*node[0x6455bee30980] = ==;
		*node[0x6455bee30920] = 14;
		*node[0x6455bee30950] = 0;
		*node[0x6455bee309b0] = ;;
		*node[0x6455bee30b60] = =;
		*node[0x6455bee309e0] = 10;
		*node[0x6455bee30b30] = /;
		*node[0x6455bee30a70] = -;
		*node[0x6455bee30a10] = 0;
		*node[0x6455bee30a40] = 2;
		*node[0x6455bee30b00] = *;
		*node[0x6455bee30aa0] = 2;
		*node[0x6455bee30ad0] = 1;
		*node[0x6455bee30b90] = ;;
		*node[0x6455bee30bc0] = print;
		*node[0x6455bee30bf0] = 8;
		*node[0x6455bee30c20] = ;;
		*node[0x6455bee30c50] = print;
		*node[0x6455bee30c80] = 10;
		*node[0x6455bee30cb0] = ;;
		*node[0x6455bee30ce0] = print;
		*node[0x6455bee30d10] = 7;
		*node[0x6455bee30d40] = ;;
		*node[0x6455bee30d70] = return;
		*node[0x6455bee30da0] = 0;
		*node[0x6455bee30dd0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff4137a600] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5c428d7a4630] = ;;
		*node[0x5c428d7a4660] = 0;
		*node[0x5c428d7a4690] = ;;
		*node[0x5c428d7a46c0] = input;
		*node[0x5c428d7a46f0] = 1;
		*node[0x5c428d7a4720] = 2;
		*node[0x5c428d7a4750] = 3;
		*node[0x5c428d7a4780] = ;;
		*node[0x5c428d7a4810] = 1;
		*node[0x5c428d7a4840] = 2;
		*node[0x5c428d7a4870] = 3;
		*node[0x5c428d7a47e0] = 4;
		*node[0x5c428d7a48a0] = ;;
		*node[0x5c428d7a48d0] = 0;
		*node[0x5c428d7a4900] = 1;
		*node[0x5c428d7a4930] = 2;
		*node[0x5c428d7a4960] = 3;
		*node[0x5c428d7a4990] = ;;
		*node[0x5c428d7a49c0] = if;
		*node[0x5c428d7a49f0] = op_no;
		*node[0x5c428d7a4a80] = ==;
		*node[0x5c428d7a4a20] = 1;
		*node[0x5c428d7a4a50] = 0;
		*node[0x5c428d7a4ab0] = ;;
		*node[0x5c428d7a4b40] = 2;
		*node[0x5c428d7a4b70] = 3;
		*node[0x5c428d7a4b10] = 5;
		*node[0x5c428d7a4ba0] = ;;
		*node[0x5c428d7a4c30] = 1;
		*node[0x5c428d7a4c60] = 2;
		*node[0x5c428d7a4c90] = 3;
		*node[0x5c428d7a4c00] = 6;
		*node[0x5c428d7a4cc0] = ;;
		*node[0x5c428d7a4cf0] = 0;
		*node[0x5c428d7a4d20] = 1;
		*node[0x5c428d7a4d50] = 2;
		*node[0x5c428d7a4d80] = ;;
		*node[0x5c428d7a4e70] = =;
		*node[0x5c428d7a4db0] = 7;
		*node[0x5c428d7a4e40] = -;
		*node[0x5c428d7a4de0] = 0;
		*node[0x5c428d7a4e10] = 1;
		*node[0x5c428d7a4ea0] = ;;
		*node[0x5c428d7a4f30] = =;
		*node[0x5c428d7a4ed0] = 8;
		*node[0x5c428d7a4f00] = 1;
		*node[0x5c428d7a4f60] = ;;
		*node[0x5c428d7a4ff0] = =;
		*node[0x5c428d7a4f90] = 9;
		*node[0x5c428d7a4fc0] = 1000;
		*node[0x5c428d7a5020] = ;;
		*node[0x5c428d7a5050] = if;
		*node[0x5c428d7a5080] = op_no;
		*node[0x5c428d7a5110] = ==;
		*node[0x5c428d7a50b0] = 1;
		*node[0x5c428d7a50e0] = 0;
		*node[0x5c428d7a5140] = ;;
		*node[0x5c428d7a5170] = if;
		*node[0x5c428d7a51a0] = op_no;
		*node[0x5c428d7a5230] = ==;
		*node[0x5c428d7a51d0] = 2;
		*node[0x5c428d7a5200] = 0;
		*node[0x5c428d7a5260] = ;;
		*node[0x5c428d7a5290] = print;
		*node[0x5c428d7a52c0] = 9;
		*node[0x5c428d7a52f0] = ;;
		*node[0x5c428d7a5320] = print;
		*node[0x5c428d7a5350] = 7;
		*node[0x5c428d7a5380] = ;;
		*node[0x5c428d7a54d0] = =;
		*node[0x5c428d7a53b0] = 10;
		*node[0x5c428d7a54a0] = /;
		*node[0x5c428d7a5440] = -;
		*node[0x5c428d7a53e0] = 0;
		*node[0x5c428d7a5410] = 2;
		*node[0x5c428d7a5470] = 1;
		*node[0x5c428d7a5500] = ;;
		*node[0x5c428d7a5530] = print;
		*node[0x5c428d7a5560] = 8;
		*node[0x5c428d7a5590] = ;;
		*node[0x5c428d7a55c0] = print;
		*node[0x5c428d7a55f0] = 10;
		*node[0x5c428d7a5620] = ;;
		*node[0x5c428d7a5650] = return;
		*node[0x5c428d7a5680] = 0;
		*node[0x5c428d7a56b0] = ;;
		*node[0x5c428d7a56e0] = 0;
		*node[0x5c428d7a5710] = 1;
		*node[0x5c428d7a5740] = 2;
		*node[0x5c428d7a5770] = 3;
		*node[0x5c428d7a57a0] = ;;
		*node[0x5c428d7a5890] = =;
		*node[0x5c428d7a57d0] = 7;
		*node[0x5c428d7a5860] = -;
		*node[0x5c428d7a5800] = 0;
		*node[0x5c428d7a5830] = 1;
		*node[0x5c428d7a58c0] = ;;
		*node[0x5c428d7a5950] = =;
		*node[0x5c428d7a58f0] = 8;
		*node[0x5c428d7a5920] = 1;
		*node[0x5c428d7a5980] = ;;
		*node[0x5c428d7a5a10] = =;
		*node[0x5c428d7a59b0] = 11;
		*node[0x5c428d7a59e0] = 2;
		*node[0x5c428d7a5a40] = ;;
		*node[0x5c428d7a5a70] = if;
		*node[0x5c428d7a5aa0] = op_no;
		*node[0x5c428d7a5b30] = ==;
		*node[0x5c428d7a5ad0] = 3;
		*node[0x5c428d7a5b00] = 0;
		*node[0x5c428d7a5b60] = ;;
		*node[0x5c428d7a5bf0] = =;
		*node[0x5c428d7a5b90] = 12;
		*node[0x5c428d7a5bc0] = 0;
		*node[0x5c428d7a5c20] = ;;
		*node[0x5c428d7a5d70] = =;
		*node[0x5c428d7a5c50] = 13;
		*node[0x5c428d7a5d40] = /;
		*node[0x5c428d7a5ce0] = -;
		*node[0x5c428d7a5c80] = 0;
		*node[0x5c428d7a5cb0] = 2;
		*node[0x5c428d7a5d10] = 1;
		*node[0x5c428d7a5da0] = ;;
		*node[0x5c428d7a5dd0] = print;
		*node[0x5c428d7a5e00] = 11;
		*node[0x5c428d7a5e30] = ;;
		*node[0x5c428d7a5e60] = print;
		*node[0x5c428d7a5e90] = 12;
		*node[0x5c428d7a5ec0] = 13;
		*node[0x5c428d7a5ef0] = ;;
		*node[0x5c428d7a6100] = =;
		*node[0x5c428d7a5f20] = 14;
		*node[0x5c428d7a60d0] = -;
		*node[0x5c428d7a5fb0] = *;
		*node[0x5c428d7a5f50] = 2;
		*node[0x5c428d7a5f80] = 2;
		*node[0x5c428d7a60a0] = *;
		*node[0x5c428d7a6040] = *;
		*node[0x5c428d7a5fe0] = 4;
		*node[0x5c428d7a6010] = 1;
		*node[0x5c428d7a6070] = 3;
		*node[0x5c428d7a6130] = ;;
		*node[0x5c428d7a6160] = if;
		*node[0x5c428d7a6190] = op_no;
		*node[0x5c428d7a6220] = >;
		*node[0x5c428d7a61c0] = 14;
		*node[0x5c428d7a61f0] = 0;
		*node[0x5c428d7a6250] = ;;
		*node[0x5c428d7a6340] = =;
		*node[0x5c428d7a6280] = 15;
		*node[0x5c428d7a6310] = sqrt;
		*node[0x5c428d7a62e0] = 1;
		*node[0x5c428d7a62b0] = 14;
		*node[0x5c428d7a6370] = ;;
		*node[0x5c428d7a6580] = =;
		*node[0x5c428d7a63a0] = 12;
		*node[0x5c428d7a6550] = /;
		*node[0x5c428d7a6490] = -;
		*node[0x5c428d7a6430] = -;
		*node[0x5c428d7a63d0] = 0;
		*node[0x5c428d7a6400] = 2;
		*node[0x5c428d7a6460] = 15;
		*node[0x5c428d7a6520] = *;
		*node[0x5c428d7a64c0] = 2;
		*node[0x5c428d7a64f0] = 1;
		*node[0x5c428d7a65b0] = ;;
		*node[0x5c428d7a67c0] = =;
		*node[0x5c428d7a65e0] = 13;
		*node[0x5c428d7a6790] = /;
		*node[0x5c428d7a66d0] = +;
		*node[0x5c428d7a6670] = -;
		*node[0x5c428d7a6610] = 0;
		*node[0x5c428d7a6640] = 2;
		*node[0x5c428d7a66a0] = 15;
		*node[0x5c428d7a6760] = *;
		*node[0x5c428d7a6700] = 2;
		*node[0x5c428d7a6730] = 1;
		*node[0x5c428d7a67f0] = ;;
		*node[0x5c428d7a6820] = print;
		*node[0x5c428d7a6850] = 11;
		*node[0x5c428d7a6880] = ;;
		*node[0x5c428d7a68b0] = print;
		*node[0x5c428d7a68e0] = 12;
		*node[0x5c428d7a6910] = 13;
		*node[0x5c428d7a6940] = if;
		*node[0x5c428d7a6970] = op_no;
		*node[0x5c428d7a6a00] = ==;
		*node[0x5c428d7a69a0] = 14;
		*node[0x5c428d7a69d0] = 0;
		*node[0x5c428d7a6a30] = ;;
		*node[0x5c428d7a6be0] = =;
		*node[0x5c428d7a6a60] = 10;
		*node[0x5c428d7a6bb0] = /;
		*node[0x5c428d7a6af0] = -;
		*node[0x5c428d7a6a90] = 0;
		*node[0x5c428d7a6ac0] = 2;
		*node[0x5c428d7a6b80] = *;
		*node[0x5c428d7a6b20] = 2;
		*node[0x5c428d7a6b50] = 1;
		*node[0x5c428d7a6c10] = ;;
		*node[0x5c428d7a6c40] = print;
		*node[0x5c428d7a6c70] = 8;
		*node[0x5c428d7a6ca0] = ;;
		*node[0x5c428d7a6cd0] = print;
		*node[0x5c428d7a6d00] = 10;
		*node[0x5c428d7a6d30] = ;;
		*node[0x5c428d7a6d60] = print;
		*node[0x5c428d7a6d90] = 7;
		*node[0x5c428d7a6dc0] = ;;
		*node[0x5c428d7a6df0] = return;
		*node[0x5c428d7a6e20] = 0;
		*node[0x5c428d7a6e50] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe37bcb2c0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5dbecc964630] = ;;
		*node[0x5dbecc964660] = 0;
		*node[0x5dbecc964690] = ;;
		*node[0x5dbecc9646c0] = input;
		*node[0x5dbecc9646f0] = 1;
		*node[0x5dbecc964720] = 2;
		*node[0x5dbecc964750] = 3;
		*node[0x5dbecc964780] = ;;
		*node[0x5dbecc964810] = 1;
		*node[0x5dbecc964840] = 2;
		*node[0x5dbecc964870] = 3;
		*node[0x5dbecc9647e0] = 4;
		*node[0x5dbecc9648a0] = ;;
		*node[0x5dbecc9648d0] = 0;
		*node[0x5dbecc964900] = 1;
		*node[0x5dbecc964930] = 2;
		*node[0x5dbecc964960] = 3;
		*node[0x5dbecc964990] = ;;
		*node[0x5dbecc9649c0] = if;
		*node[0x5dbecc9649f0] = op_no;
		*node[0x5dbecc964a80] = ==;
		*node[0x5dbecc964a20] = 1;
		*node[0x5dbecc964a50] = 0;
		*node[0x5dbecc964ab0] = ;;
		*node[0x5dbecc964b40] = 2;
		*node[0x5dbecc964b70] = 3;
		*node[0x5dbecc964b10] = 5;
		*node[0x5dbecc964ba0] = ;;
		*node[0x5dbecc964c30] = 1;
		*node[0x5dbecc964c60] = 2;
		*node[0x5dbecc964c90] = 3;
		*node[0x5dbecc964c00] = 6;
		*node[0x5dbecc964cc0] = ;;
		*node[0x5dbecc964cf0] = 0;
		*node[0x5dbecc964d20] = 1;
		*node[0x5dbecc964d50] = 2;
		*node[0x5dbecc964d80] = ;;
		*node[0x5dbecc964e70] = =;
		*node[0x5dbecc964db0] = 7;
		*node[0x5dbecc964e40] = -;
		*node[0x5dbecc964de0] = 0;
		*node[0x5dbecc964e10] = 1;
		*node[0x5dbecc964ea0] = ;;
		*node[0x5dbecc964f30] = =;
		*node[0x5dbecc964ed0] = 8;
		*node[0x5dbecc964f00] = 1;
		*node[0x5dbecc964f60] = ;;
		*node[0x5dbecc964ff0] = =;
		*node[0x5dbecc964f90] = 9;
		*node[0x5dbecc964fc0] = 1000;
		*node[0x5dbecc965020] = ;;
		*node[0x5dbecc965050] = if;
		*node[0x5dbecc965080] = op_no;
		*node[0x5dbecc965110] = ==;
		*node[0x5dbecc9650b0] = 1;
		*node[0x5dbecc9650e0] = 0;
		*node[0x5dbecc965140] = ;;
		*node[0x5dbecc965170] = if;
		*node[0x5dbecc9651a0] = op_no;
		*node[0x5dbecc965230] = ==;
		*node[0x5dbecc9651d0] = 2;
		*node[0x5dbecc965200] = 0;
		*node[0x5dbecc965260] = ;;
		*node[0x5dbecc965290] = print;
		*node[0x5dbecc9652c0] = 9;
		*node[0x5dbecc9652f0] = ;;
		*node[0x5dbecc965320] = print;
		*node[0x5dbecc965350] = 7;
		*node[0x5dbecc965380] = ;;
		*node[0x5dbecc9654d0] = =;
		*node[0x5dbecc9653b0] = 10;
		*node[0x5dbecc9654a0] = /;
		*node[0x5dbecc965440] = -;
		*node[0x5dbecc9653e0] = 0;
		*node[0x5dbecc965410] = 2;
		*node[0x5dbecc965470] = 1;
		*node[0x5dbecc965500] = ;;
		*node[0x5dbecc965530] = print;
		*node[0x5dbecc965560] = 8;
		*node[0x5dbecc965590] = ;;
		*node[0x5dbecc9655c0] = print;
		*node[0x5dbecc9655f0] = 10;
		*node[0x5dbecc965620] = ;;
		*node[0x5dbecc965650] = return;
		*node[0x5dbecc965680] = 0;
		*node[0x5dbecc9656b0] = ;;
		*node[0x5dbecc9656e0] = 0;
		*node[0x5dbecc965710] = 1;
		*node[0x5dbecc965740] = 2;
		*node[0x5dbecc965770] = 3;
		*node[0x5dbecc9657a0] = ;;
		*node[0x5dbecc965890] = =;
		*node[0x5dbecc9657d0] = 7;
		*node[0x5dbecc965860] = -;
		*node[0x5dbecc965800] = 0;
		*node[0x5dbecc965830] = 1;
		*node[0x5dbecc9658c0] = ;;
		*node[0x5dbecc965950] = =;
		*node[0x5dbecc9658f0] = 8;
		*node[0x5dbecc965920] = 1;
		*node[0x5dbecc965980] = ;;
		*node[0x5dbecc965a10] = =;
		*node[0x5dbecc9659b0] = 11;
		*node[0x5dbecc9659e0] = 2;
		*node[0x5dbecc965a40] = ;;
		*node[0x5dbecc965a70] = if;
		*node[0x5dbecc965aa0] = op_no;
		*node[0x5dbecc965b30] = ==;
		*node[0x5dbecc965ad0] = 3;
		*node[0x5dbecc965b00] = 0;
		*node[0x5dbecc965b60] = ;;
		*node[0x5dbecc965bf0] = =;
		*node[0x5dbecc965b90] = 12;
		*node[0x5dbecc965bc0] = 0;
		*node[0x5dbecc965c20] = ;;
		*node[0x5dbecc965d70] = =;
		*node[0x5dbecc965c50] = 13;
		*node[0x5dbecc965d40] = /;
		*node[0x5dbecc965ce0] = -;
		*node[0x5dbecc965c80] = 0;
		*node[0x5dbecc965cb0] = 2;
		*node[0x5dbecc965d10] = 1;
		*node[0x5dbecc965da0] = ;;
		*node[0x5dbecc965dd0] = print;
		*node[0x5dbecc965e00] = 11;
		*node[0x5dbecc965e30] = ;;
		*node[0x5dbecc965e60] = print;
		*node[0x5dbecc965e90] = 12;
		*node[0x5dbecc965ec0] = 13;
		*node[0x5dbecc965ef0] = ;;
		*node[0x5dbecc966100] = =;
		*node[0x5dbecc965f20] = 14;
		*node[0x5dbecc9660d0] = -;
		*node[0x5dbecc965fb0] = *;
		*node[0x5dbecc965f50] = 2;
		*node[0x5dbecc965f80] = 2;
		*node[0x5dbecc9660a0] = *;
		*node[0x5dbecc966040] = *;
		*node[0x5dbecc965fe0] = 4;
		*node[0x5dbecc966010] = 1;
		*node[0x5dbecc966070] = 3;
		*node[0x5dbecc966130] = ;;
		*node[0x5dbecc966160] = if;
		*node[0x5dbecc966190] = op_no;
		*node[0x5dbecc966220] = >;
		*node[0x5dbecc9661c0] = 14;
		*node[0x5dbecc9661f0] = 0;
		*node[0x5dbecc966250] = ;;
		*node[0x5dbecc966340] = =;
		*node[0x5dbecc966280] = 15;
		*node[0x5dbecc966310] = sqrt;
		*node[0x5dbecc9662e0] = 1;
		*node[0x5dbecc9662b0] = 14;
		*node[0x5dbecc966370] = ;;
		*node[0x5dbecc966580] = =;
		*node[0x5dbecc9663a0] = 12;
		*node[0x5dbecc966550] = /;
		*node[0x5dbecc966490] = -;
		*node[0x5dbecc966430] = -;
		*node[0x5dbecc9663d0] = 0;
		*node[0x5dbecc966400] = 2;
		*node[0x5dbecc966460] = 15;
		*node[0x5dbecc966520] = *;
		*node[0x5dbecc9664c0] = 2;
		*node[0x5dbecc9664f0] = 1;
		*node[0x5dbecc9665b0] = ;;
		*node[0x5dbecc9667c0] = =;
		*node[0x5dbecc9665e0] = 13;
		*node[0x5dbecc966790] = /;
		*node[0x5dbecc9666d0] = +;
		*node[0x5dbecc966670] = -;
		*node[0x5dbecc966610] = 0;
		*node[0x5dbecc966640] = 2;
		*node[0x5dbecc9666a0] = 15;
		*node[0x5dbecc966760] = *;
		*node[0x5dbecc966700] = 2;
		*node[0x5dbecc966730] = 1;
		*node[0x5dbecc9667f0] = ;;
		*node[0x5dbecc966820] = print;
		*node[0x5dbecc966850] = 11;
		*node[0x5dbecc966880] = ;;
		*node[0x5dbecc9668b0] = print;
		*node[0x5dbecc9668e0] = 12;
		*node[0x5dbecc966910] = 13;
		*node[0x5dbecc966940] = if;
		*node[0x5dbecc966970] = op_no;
		*node[0x5dbecc966a00] = ==;
		*node[0x5dbecc9669a0] = 14;
		*node[0x5dbecc9669d0] = 0;
		*node[0x5dbecc966a30] = ;;
		*node[0x5dbecc966be0] = =;
		*node[0x5dbecc966a60] = 10;
		*node[0x5dbecc966bb0] = /;
		*node[0x5dbecc966af0] = -;
		*node[0x5dbecc966a90] = 0;
		*node[0x5dbecc966ac0] = 2;
		*node[0x5dbecc966b80] = *;
		*node[0x5dbecc966b20] = 2;
		*node[0x5dbecc966b50] = 1;
		*node[0x5dbecc966c10] = ;;
		*node[0x5dbecc966c40] = print;
		*node[0x5dbecc966c70] = 8;
		*node[0x5dbecc966ca0] = ;;
		*node[0x5dbecc966cd0] = print;
		*node[0x5dbecc966d00] = 10;
		*node[0x5dbecc966d30] = ;;
		*node[0x5dbecc966d60] = print;
		*node[0x5dbecc966d90] = 7;
		*node[0x5dbecc966dc0] = ;;
		*node[0x5dbecc966df0] = return;
		*node[0x5dbecc966e20] = 0;
		*node[0x5dbecc966e50] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff494aa180] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x55cfdfc54220] = ;;
		*node[0x55cfdfc54250] = 0;
		*node[0x55cfdfc54280] = ;;
		*node[0x55cfdfc542b0] = input;
		*node[0x55cfdfc542e0] = 1;
		*node[0x55cfdfc54310] = 2;
		*node[0x55cfdfc54340] = 3;
		*node[0x55cfdfc54370] = ;;
		*node[0x55cfdfc54400] = 1;
		*node[0x55cfdfc54430] = 2;
		*node[0x55cfdfc54460] = 3;
		*node[0x55cfdfc543d0] = 4;
		*node[0x55cfdfc54490] = ;;
		*node[0x55cfdfc544c0] = 0;
		*node[0x55cfdfc544f0] = 1;
		*node[0x55cfdfc54520] = 2;
		*node[0x55cfdfc54550] = 3;
		*node[0x55cfdfc54580] = ;;
		*node[0x55cfdfc545b0] = if;
		*node[0x55cfdfc545e0] = op_no;
		*node[0x55cfdfc54670] = ==;
		*node[0x55cfdfc54610] = 1;
		*node[0x55cfdfc54640] = 0;
		*node[0x55cfdfc546a0] = ;;
		*node[0x55cfdfc54730] = 2;
		*node[0x55cfdfc54760] = 3;
		*node[0x55cfdfc54700] = 5;
		*node[0x55cfdfc54790] = ;;
		*node[0x55cfdfc54820] = 1;
		*node[0x55cfdfc54850] = 2;
		*node[0x55cfdfc54880] = 3;
		*node[0x55cfdfc547f0] = 6;
		*node[0x55cfdfc548b0] = ;;
		*node[0x55cfdfc548e0] = 0;
		*node[0x55cfdfc54910] = 1;
		*node[0x55cfdfc54940] = 2;
		*node[0x55cfdfc54970] = ;;
		*node[0x55cfdfc54a60] = =;
		*node[0x55cfdfc549a0] = 7;
		*node[0x55cfdfc54a30] = -;
		*node[0x55cfdfc549d0] = 0;
		*node[0x55cfdfc54a00] = 1;
		*node[0x55cfdfc54a90] = ;;
		*node[0x55cfdfc54b20] = =;
		*node[0x55cfdfc54ac0] = 8;
		*node[0x55cfdfc54af0] = 1;
		*node[0x55cfdfc54b50] = ;;
		*node[0x55cfdfc54be0] = =;
		*node[0x55cfdfc54b80] = 9;
		*node[0x55cfdfc54bb0] = 1000;
		*node[0x55cfdfc54c10] = ;;
		*node[0x55cfdfc54c40] = if;
		*node[0x55cfdfc54c70] = op_no;
		*node[0x55cfdfc54d00] = ==;
		*node[0x55cfdfc54ca0] = 1;
		*node[0x55cfdfc54cd0] = 0;
		*node[0x55cfdfc54d30] = ;;
		*node[0x55cfdfc54d60] = if;
		*node[0x55cfdfc54d90] = op_no;
		*node[0x55cfdfc54e20] = ==;
		*node[0x55cfdfc54dc0] = 2;
		*node[0x55cfdfc54df0] = 0;
		*node[0x55cfdfc54e50] = ;;
		*node[0x55cfdfc54e80] = print;
		*node[0x55cfdfc54eb0] = 9;
		*node[0x55cfdfc54ee0] = ;;
		*node[0x55cfdfc54f10] = print;
		*node[0x55cfdfc54f40] = 7;
		*node[0x55cfdfc54f70] = ;;
		*node[0x55cfdfc550c0] = =;
		*node[0x55cfdfc54fa0] = 10;
		*node[0x55cfdfc55090] = /;
		*node[0x55cfdfc55030] = -;
		*node[0x55cfdfc54fd0] = 0;
		*node[0x55cfdfc55000] = 2;
		*node[0x55cfdfc55060] = 1;
		*node[0x55cfdfc550f0] = ;;
		*node[0x55cfdfc55120] = print;
		*node[0x55cfdfc55150] = 8;
		*node[0x55cfdfc55180] = ;;
		*node[0x55cfdfc551b0] = print;
		*node[0x55cfdfc551e0] = 10;
		*node[0x55cfdfc55210] = ;;
		*node[0x55cfdfc55240] = return;
		*node[0x55cfdfc55270] = 0;
		*node[0x55cfdfc552a0] = ;;
		*node[0x55cfdfc552d0] = 0;
		*node[0x55cfdfc55300] = 1;
		*node[0x55cfdfc55330] = 2;
		*node[0x55cfdfc55360] = 3;
		*node[0x55cfdfc55390] = ;;
		*node[0x55cfdfc55480] = =;
		*node[0x55cfdfc553c0] = 7;
		*node[0x55cfdfc55450] = -;
		*node[0x55cfdfc553f0] = 0;
		*node[0x55cfdfc55420] = 1;
		*node[0x55cfdfc554b0] = ;;
		*node[0x55cfdfc55540] = =;
		*node[0x55cfdfc554e0] = 8;
		*node[0x55cfdfc55510] = 1;
		*node[0x55cfdfc55570] = ;;
		*node[0x55cfdfc55600] = =;
		*node[0x55cfdfc555a0] = 11;
		*node[0x55cfdfc555d0] = 2;
		*node[0x55cfdfc55630] = ;;
		*node[0x55cfdfc55660] = if;
		*node[0x55cfdfc55690] = op_no;
		*node[0x55cfdfc55720] = ==;
		*node[0x55cfdfc556c0] = 3;
		*node[0x55cfdfc556f0] = 0;
		*node[0x55cfdfc55750] = ;;
		*node[0x55cfdfc557e0] = =;
		*node[0x55cfdfc55780] = 12;
		*node[0x55cfdfc557b0] = 0;
		*node[0x55cfdfc55810] = ;;
		*node[0x55cfdfc55960] = =;
		*node[0x55cfdfc55840] = 13;
		*node[0x55cfdfc55930] = /;
		*node[0x55cfdfc558d0] = -;
		*node[0x55cfdfc55870] = 0;
		*node[0x55cfdfc558a0] = 2;
		*node[0x55cfdfc55900] = 1;
		*node[0x55cfdfc55990] = ;;
		*node[0x55cfdfc559c0] = print;
		*node[0x55cfdfc559f0] = 11;
		*node[0x55cfdfc55a20] = ;;
		*node[0x55cfdfc55a50] = print;
		*node[0x55cfdfc55a80] = 12;
		*node[0x55cfdfc55ab0] = 13;
		*node[0x55cfdfc55ae0] = ;;
		*node[0x55cfdfc55cf0] = =;
		*node[0x55cfdfc55b10] = 14;
		*node[0x55cfdfc55cc0] = -;
		*node[0x55cfdfc55ba0] = *;
		*node[0x55cfdfc55b40] = 2;
		*node[0x55cfdfc55b70] = 2;
		*node[0x55cfdfc55c90] = *;
		*node[0x55cfdfc55c30] = *;
		*node[0x55cfdfc55bd0] = 4;
		*node[0x55cfdfc55c00] = 1;
		*node[0x55cfdfc55c60] = 3;
		*node[0x55cfdfc55d20] = ;;
		*node[0x55cfdfc55d50] = if;
		*node[0x55cfdfc55d80] = op_no;
		*node[0x55cfdfc55e10] = >;
		*node[0x55cfdfc55db0] = 14;
		*node[0x55cfdfc55de0] = 0;
		*node[0x55cfdfc55e40] = ;;
		*node[0x55cfdfc55f30] = =;
		*node[0x55cfdfc55e70] = 15;
		*node[0x55cfdfc55f00] = sqrt;
		*node[0x55cfdfc55ed0] = 1;
		*node[0x55cfdfc55ea0] = 14;
		*node[0x55cfdfc55f60] = ;;
		*node[0x55cfdfc56170] = =;
		*node[0x55cfdfc55f90] = 12;
		*node[0x55cfdfc56140] = /;
		*node[0x55cfdfc56080] = -;
		*node[0x55cfdfc56020] = -;
		*node[0x55cfdfc55fc0] = 0;
		*node[0x55cfdfc55ff0] = 2;
		*node[0x55cfdfc56050] = 15;
		*node[0x55cfdfc56110] = *;
		*node[0x55cfdfc560b0] = 2;
		*node[0x55cfdfc560e0] = 1;
		*node[0x55cfdfc561a0] = ;;
		*node[0x55cfdfc563b0] = =;
		*node[0x55cfdfc561d0] = 13;
		*node[0x55cfdfc56380] = /;
		*node[0x55cfdfc562c0] = +;
		*node[0x55cfdfc56260] = -;
		*node[0x55cfdfc56200] = 0;
		*node[0x55cfdfc56230] = 2;
		*node[0x55cfdfc56290] = 15;
		*node[0x55cfdfc56350] = *;
		*node[0x55cfdfc562f0] = 2;
		*node[0x55cfdfc56320] = 1;
		*node[0x55cfdfc563e0] = ;;
		*node[0x55cfdfc56410] = print;
		*node[0x55cfdfc56440] = 11;
		*node[0x55cfdfc56470] = ;;
		*node[0x55cfdfc564a0] = print;
		*node[0x55cfdfc564d0] = 12;
		*node[0x55cfdfc56500] = 13;
		*node[0x55cfdfc56530] = if;
		*node[0x55cfdfc56560] = op_no;
		*node[0x55cfdfc565f0] = ==;
		*node[0x55cfdfc56590] = 14;
		*node[0x55cfdfc565c0] = 0;
		*node[0x55cfdfc56620] = ;;
		*node[0x55cfdfc567d0] = =;
		*node[0x55cfdfc56650] = 10;
		*node[0x55cfdfc567a0] = /;
		*node[0x55cfdfc566e0] = -;
		*node[0x55cfdfc56680] = 0;
		*node[0x55cfdfc566b0] = 2;
		*node[0x55cfdfc56770] = *;
		*node[0x55cfdfc56710] = 2;
		*node[0x55cfdfc56740] = 1;
		*node[0x55cfdfc56800] = ;;
		*node[0x55cfdfc56830] = print;
		*node[0x55cfdfc56860] = 8;
		*node[0x55cfdfc56890] = ;;
		*node[0x55cfdfc568c0] = print;
		*node[0x55cfdfc568f0] = 10;
		*node[0x55cfdfc56920] = ;;
		*node[0x55cfdfc56950] = print;
		*node[0x55cfdfc56980] = 7;
		*node[0x55cfdfc569b0] = ;;
		*node[0x55cfdfc569e0] = return;
		*node[0x55cfdfc56a10] = 0;
		*node[0x55cfdfc56a40] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc8b9d6370] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5f3a575f3220] = ;;
		*node[0x5f3a575f3250] = 0;
		*node[0x5f3a575f3280] = ;;
		*node[0x5f3a575f32b0] = input;
		*node[0x5f3a575f32e0] = 1;
		*node[0x5f3a575f3310] = 2;
		*node[0x5f3a575f3340] = 3;
		*node[0x5f3a575f3370] = ;;
		*node[0x5f3a575f3400] = 1;
		*node[0x5f3a575f3430] = 2;
		*node[0x5f3a575f3460] = 3;
		*node[0x5f3a575f33d0] = 4;
		*node[0x5f3a575f3490] = ;;
		*node[0x5f3a575f34c0] = 4;
		*node[0x5f3a575f34f0] = 1;
		*node[0x5f3a575f3520] = 2;
		*node[0x5f3a575f3550] = 3;
		*node[0x5f3a575f3580] = ;;
		*node[0x5f3a575f35b0] = if;
		*node[0x5f3a575f35e0] = op_no;
		*node[0x5f3a575f3670] = ==;
		*node[0x5f3a575f3610] = 1;
		*node[0x5f3a575f3640] = 0;
		*node[0x5f3a575f36a0] = ;;
		*node[0x5f3a575f3730] = 2;
		*node[0x5f3a575f3760] = 3;
		*node[0x5f3a575f3700] = 5;
		*node[0x5f3a575f3790] = ;;
		*node[0x5f3a575f3820] = 1;
		*node[0x5f3a575f3850] = 2;
		*node[0x5f3a575f3880] = 3;
		*node[0x5f3a575f37f0] = 6;
		*node[0x5f3a575f38b0] = ;;
		*node[0x5f3a575f38e0] = 5;
		*node[0x5f3a575f3910] = 1;
		*node[0x5f3a575f3940] = 2;
		*node[0x5f3a575f3970] = ;;
		*node[0x5f3a575f3a60] = =;
		*node[0x5f3a575f39a0] = 7;
		*node[0x5f3a575f3a30] = -;
		*node[0x5f3a575f39d0] = 0;
		*node[0x5f3a575f3a00] = 1;
		*node[0x5f3a575f3a90] = ;;
		*node[0x5f3a575f3b20] = =;
		*node[0x5f3a575f3ac0] = 8;
		*node[0x5f3a575f3af0] = 1;
		*node[0x5f3a575f3b50] = ;;
		*node[0x5f3a575f3be0] = =;
		*node[0x5f3a575f3b80] = 9;
		*node[0x5f3a575f3bb0] = 1000;
		*node[0x5f3a575f3c10] = ;;
		*node[0x5f3a575f3c40] = if;
		*node[0x5f3a575f3c70] = op_no;
		*node[0x5f3a575f3d00] = ==;
		*node[0x5f3a575f3ca0] = 1;
		*node[0x5f3a575f3cd0] = 0;
		*node[0x5f3a575f3d30] = ;;
		*node[0x5f3a575f3d60] = if;
		*node[0x5f3a575f3d90] = op_no;
		*node[0x5f3a575f3e20] = ==;
		*node[0x5f3a575f3dc0] = 2;
		*node[0x5f3a575f3df0] = 0;
		*node[0x5f3a575f3e50] = ;;
		*node[0x5f3a575f3e80] = print;
		*node[0x5f3a575f3eb0] = 9;
		*node[0x5f3a575f3ee0] = ;;
		*node[0x5f3a575f3f10] = print;
		*node[0x5f3a575f3f40] = 7;
		*node[0x5f3a575f3f70] = ;;
		*node[0x5f3a575f40c0] = =;
		*node[0x5f3a575f3fa0] = 10;
		*node[0x5f3a575f4090] = /;
		*node[0x5f3a575f4030] = -;
		*node[0x5f3a575f3fd0] = 0;
		*node[0x5f3a575f4000] = 2;
		*node[0x5f3a575f4060] = 1;
		*node[0x5f3a575f40f0] = ;;
		*node[0x5f3a575f4120] = print;
		*node[0x5f3a575f4150] = 8;
		*node[0x5f3a575f4180] = ;;
		*node[0x5f3a575f41b0] = print;
		*node[0x5f3a575f41e0] = 10;
		*node[0x5f3a575f4210] = ;;
		*node[0x5f3a575f4240] = return;
		*node[0x5f3a575f4270] = 0;
		*node[0x5f3a575f42a0] = ;;
		*node[0x5f3a575f42d0] = 6;
		*node[0x5f3a575f4300] = 1;
		*node[0x5f3a575f4330] = 2;
		*node[0x5f3a575f4360] = 3;
		*node[0x5f3a575f4390] = ;;
		*node[0x5f3a575f4480] = =;
		*node[0x5f3a575f43c0] = 7;
		*node[0x5f3a575f4450] = -;
		*node[0x5f3a575f43f0] = 0;
		*node[0x5f3a575f4420] = 1;
		*node[0x5f3a575f44b0] = ;;
		*node[0x5f3a575f4540] = =;
		*node[0x5f3a575f44e0] = 8;
		*node[0x5f3a575f4510] = 1;
		*node[0x5f3a575f4570] = ;;
		*node[0x5f3a575f4600] = =;
		*node[0x5f3a575f45a0] = 11;
		*node[0x5f3a575f45d0] = 2;
		*node[0x5f3a575f4630] = ;;
		*node[0x5f3a575f4660] = if;
		*node[0x5f3a575f4690] = op_no;
		*node[0x5f3a575f4720] = ==;
		*node[0x5f3a575f46c0] = 3;
		*node[0x5f3a575f46f0] = 0;
		*node[0x5f3a575f4750] = ;;
		*node[0x5f3a575f47e0] = =;
		*node[0x5f3a575f4780] = 12;
		*node[0x5f3a575f47b0] = 0;
		*node[0x5f3a575f4810] = ;;
		*node[0x5f3a575f4960] = =;
		*node[0x5f3a575f4840] = 13;
		*node[0x5f3a575f4930] = /;
		*node[0x5f3a575f48d0] = -;
		*node[0x5f3a575f4870] = 0;
		*node[0x5f3a575f48a0] = 2;
		*node[0x5f3a575f4900] = 1;
		*node[0x5f3a575f4990] = ;;
		*node[0x5f3a575f49c0] = print;
		*node[0x5f3a575f49f0] = 11;
		*node[0x5f3a575f4a20] = ;;
		*node[0x5f3a575f4a50] = print;
		*node[0x5f3a575f4a80] = 12;
		*node[0x5f3a575f4ab0] = 13;
		*node[0x5f3a575f4ae0] = ;;
		*node[0x5f3a575f4cf0] = =;
		*node[0x5f3a575f4b10] = 14;
		*node[0x5f3a575f4cc0] = -;
		*node[0x5f3a575f4ba0] = *;
		*node[0x5f3a575f4b40] = 2;
		*node[0x5f3a575f4b70] = 2;
		*node[0x5f3a575f4c90] = *;
		*node[0x5f3a575f4c30] = *;
		*node[0x5f3a575f4bd0] = 4;
		*node[0x5f3a575f4c00] = 1;
		*node[0x5f3a575f4c60] = 3;
		*node[0x5f3a575f4d20] = ;;
		*node[0x5f3a575f4d50] = if;
		*node[0x5f3a575f4d80] = op_no;
		*node[0x5f3a575f4e10] = >;
		*node[0x5f3a575f4db0] = 14;
		*node[0x5f3a575f4de0] = 0;
		*node[0x5f3a575f4e40] = ;;
		*node[0x5f3a575f4f30] = =;
		*node[0x5f3a575f4e70] = 15;
		*node[0x5f3a575f4f00] = sqrt;
		*node[0x5f3a575f4ed0] = 1;
		*node[0x5f3a575f4ea0] = 14;
		*node[0x5f3a575f4f60] = ;;
		*node[0x5f3a575f5170] = =;
		*node[0x5f3a575f4f90] = 12;
		*node[0x5f3a575f5140] = /;
		*node[0x5f3a575f5080] = -;
		*node[0x5f3a575f5020] = -;
		*node[0x5f3a575f4fc0] = 0;
		*node[0x5f3a575f4ff0] = 2;
		*node[0x5f3a575f5050] = 15;
		*node[0x5f3a575f5110] = *;
		*node[0x5f3a575f50b0] = 2;
		*node[0x5f3a575f50e0] = 1;
		*node[0x5f3a575f51a0] = ;;
		*node[0x5f3a575f53b0] = =;
		*node[0x5f3a575f51d0] = 13;
		*node[0x5f3a575f5380] = /;
		*node[0x5f3a575f52c0] = +;
		*node[0x5f3a575f5260] = -;
		*node[0x5f3a575f5200] = 0;
		*node[0x5f3a575f5230] = 2;
		*node[0x5f3a575f5290] = 15;
		*node[0x5f3a575f5350] = *;
		*node[0x5f3a575f52f0] = 2;
		*node[0x5f3a575f5320] = 1;
		*node[0x5f3a575f53e0] = ;;
		*node[0x5f3a575f5410] = print;
		*node[0x5f3a575f5440] = 11;
		*node[0x5f3a575f5470] = ;;
		*node[0x5f3a575f54a0] = print;
		*node[0x5f3a575f54d0] = 12;
		*node[0x5f3a575f5500] = 13;
		*node[0x5f3a575f5530] = if;
		*node[0x5f3a575f5560] = op_no;
		*node[0x5f3a575f55f0] = ==;
		*node[0x5f3a575f5590] = 14;
		*node[0x5f3a575f55c0] = 0;
		*node[0x5f3a575f5620] = ;;
		*node[0x5f3a575f57d0] = =;
		*node[0x5f3a575f5650] = 10;
		*node[0x5f3a575f57a0] = /;
		*node[0x5f3a575f56e0] = -;
		*node[0x5f3a575f5680] = 0;
		*node[0x5f3a575f56b0] = 2;
		*node[0x5f3a575f5770] = *;
		*node[0x5f3a575f5710] = 2;
		*node[0x5f3a575f5740] = 1;
		*node[0x5f3a575f5800] = ;;
		*node[0x5f3a575f5830] = print;
		*node[0x5f3a575f5860] = 8;
		*node[0x5f3a575f5890] = ;;
		*node[0x5f3a575f58c0] = print;
		*node[0x5f3a575f58f0] = 10;
		*node[0x5f3a575f5920] = ;;
		*node[0x5f3a575f5950] = print;
		*node[0x5f3a575f5980] = 7;
		*node[0x5f3a575f59b0] = ;;
		*node[0x5f3a575f59e0] = return;
		*node[0x5f3a575f5a10] = 0;
		*node[0x5f3a575f5a40] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: an error occurred while opening the file[0m
tree[0x7ffd7f4428a0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd06074670] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5888dc5cdf40] = ;;
		*node[0x5888dc5cdf70] = 0;
		*node[0x5888dc5cdfa0] = ;;
		*node[0x5888dc5cdfd0] = input;
		*node[0x5888dc5ce000] = 1;
		*node[0x5888dc5ce030] = ;;
		*node[0x5888dc5ce0c0] = =;
		*node[0x5888dc5ce060] = 2;
		*node[0x5888dc5ce090] = 1;
		*node[0x5888dc5ce0f0] = ;;
		*node[0x5888dc5ce120] = if;
		*node[0x5888dc5ce150] = op_no;
		*node[0x5888dc5ce2a0] = ||;
		*node[0x5888dc5ce1e0] = <;
		*node[0x5888dc5ce180] = 1;
		*node[0x5888dc5ce1b0] = 0;
		*node[0x5888dc5ce270] = ==;
		*node[0x5888dc5ce210] = 1;
		*node[0x5888dc5ce240] = 0;
		*node[0x5888dc5ce2d0] = ;;
		*node[0x5888dc5ce300] = print;
		*node[0x5888dc5ce330] = 2;
		*node[0x5888dc5ce360] = if;
		*node[0x5888dc5ce390] = op_no;
		*node[0x5888dc5ce420] = ==;
		*node[0x5888dc5ce3c0] = 1;
		*node[0x5888dc5ce3f0] = 1;
		*node[0x5888dc5ce450] = ;;
		*node[0x5888dc5ce480] = print;
		*node[0x5888dc5ce4b0] = 1;
		*node[0x5888dc5ce4e0] = ;;
		*node[0x5888dc5ce570] = 1;
		*node[0x5888dc5ce540] = 3;
		*node[0x5888dc5ce5a0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc1ad68bb0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffc1ad68bb0] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffe6fa3f2e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffe6fa3f2e0] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd21b316d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffd21b316d0] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd1d30d870] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x561cfa297280] = ;;
		*node[0x561cfa2972b0] = 0;
		*node[0x561cfa2972e0] = ;;
		*node[0x561cfa297310] = input;
		*node[0x561cfa297340] = 1;
		*node[0x561cfa297370] = 2;
		*node[0x561cfa2973a0] = 3;
		*node[0x561cfa2973d0] = ;;
		*node[0x561cfa297460] = 1;
		*node[0x561cfa297490] = 2;
		*node[0x561cfa2974c0] = 3;
		*node[0x561cfa297430] = 4;
		*node[0x561cfa2974f0] = ;;
		*node[0x561cfa297520] = 4;
		*node[0x561cfa297550] = 1;
		*node[0x561cfa297580] = 2;
		*node[0x561cfa2975b0] = 3;
		*node[0x561cfa2975e0] = ;;
		*node[0x561cfa297610] = if;
		*node[0x561cfa297640] = op_no;
		*node[0x561cfa2976d0] = ==;
		*node[0x561cfa297670] = 1;
		*node[0x561cfa2976a0] = 0;
		*node[0x561cfa297700] = ;;
		*node[0x561cfa297790] = 2;
		*node[0x561cfa2977c0] = 3;
		*node[0x561cfa297760] = 5;
		*node[0x561cfa2977f0] = ;;
		*node[0x561cfa297880] = 1;
		*node[0x561cfa2978b0] = 2;
		*node[0x561cfa2978e0] = 3;
		*node[0x561cfa297850] = 6;
		*node[0x561cfa297910] = ;;
		*node[0x561cfa297940] = 5;
		*node[0x561cfa297970] = 1;
		*node[0x561cfa2979a0] = 2;
		*node[0x561cfa2979d0] = ;;
		*node[0x561cfa297ac0] = =;
		*node[0x561cfa297a00] = 7;
		*node[0x561cfa297a90] = -;
		*node[0x561cfa297a30] = 0;
		*node[0x561cfa297a60] = 1;
		*node[0x561cfa297af0] = ;;
		*node[0x561cfa297b80] = =;
		*node[0x561cfa297b20] = 8;
		*node[0x561cfa297b50] = 1;
		*node[0x561cfa297bb0] = ;;
		*node[0x561cfa297c40] = =;
		*node[0x561cfa297be0] = 9;
		*node[0x561cfa297c10] = 1000;
		*node[0x561cfa297c70] = ;;
		*node[0x561cfa297ca0] = if;
		*node[0x561cfa297cd0] = op_no;
		*node[0x561cfa297d60] = ==;
		*node[0x561cfa297d00] = 1;
		*node[0x561cfa297d30] = 0;
		*node[0x561cfa297d90] = ;;
		*node[0x561cfa297dc0] = if;
		*node[0x561cfa297df0] = op_no;
		*node[0x561cfa297e80] = ==;
		*node[0x561cfa297e20] = 2;
		*node[0x561cfa297e50] = 0;
		*node[0x561cfa297eb0] = ;;
		*node[0x561cfa297ee0] = print;
		*node[0x561cfa297f10] = 9;
		*node[0x561cfa297f40] = ;;
		*node[0x561cfa297f70] = print;
		*node[0x561cfa297fa0] = 7;
		*node[0x561cfa297fd0] = ;;
		*node[0x561cfa298120] = =;
		*node[0x561cfa298000] = 10;
		*node[0x561cfa2980f0] = /;
		*node[0x561cfa298090] = -;
		*node[0x561cfa298030] = 0;
		*node[0x561cfa298060] = 2;
		*node[0x561cfa2980c0] = 1;
		*node[0x561cfa298150] = ;;
		*node[0x561cfa298180] = print;
		*node[0x561cfa2981b0] = 8;
		*node[0x561cfa2981e0] = ;;
		*node[0x561cfa298210] = print;
		*node[0x561cfa298240] = 10;
		*node[0x561cfa298270] = ;;
		*node[0x561cfa2982a0] = return;
		*node[0x561cfa298330] = -;
		*node[0x561cfa2982d0] = 0;
		*node[0x561cfa298300] = 1;
		*node[0x561cfa298360] = ;;
		*node[0x561cfa298390] = 6;
		*node[0x561cfa2983c0] = 1;
		*node[0x561cfa2983f0] = 2;
		*node[0x561cfa298420] = 3;
		*node[0x561cfa298450] = ;;
		*node[0x561cfa298540] = =;
		*node[0x561cfa298480] = 7;
		*node[0x561cfa298510] = -;
		*node[0x561cfa2984b0] = 0;
		*node[0x561cfa2984e0] = 1;
		*node[0x561cfa298570] = ;;
		*node[0x561cfa298600] = =;
		*node[0x561cfa2985a0] = 8;
		*node[0x561cfa2985d0] = 1;
		*node[0x561cfa298630] = ;;
		*node[0x561cfa2986c0] = =;
		*node[0x561cfa298660] = 11;
		*node[0x561cfa298690] = 2;
		*node[0x561cfa2986f0] = ;;
		*node[0x561cfa298720] = if;
		*node[0x561cfa298750] = op_no;
		*node[0x561cfa2987e0] = ==;
		*node[0x561cfa298780] = 3;
		*node[0x561cfa2987b0] = 0;
		*node[0x561cfa298810] = ;;
		*node[0x561cfa2988a0] = =;
		*node[0x561cfa298840] = 12;
		*node[0x561cfa298870] = 0;
		*node[0x561cfa2988d0] = ;;
		*node[0x561cfa298a20] = =;
		*node[0x561cfa298900] = 13;
		*node[0x561cfa2989f0] = /;
		*node[0x561cfa298990] = -;
		*node[0x561cfa298930] = 0;
		*node[0x561cfa298960] = 2;
		*node[0x561cfa2989c0] = 1;
		*node[0x561cfa298a50] = ;;
		*node[0x561cfa298a80] = print;
		*node[0x561cfa298ab0] = 11;
		*node[0x561cfa298ae0] = ;;
		*node[0x561cfa298b10] = print;
		*node[0x561cfa298b40] = 12;
		*node[0x561cfa298b70] = 13;
		*node[0x561cfa298ba0] = ;;
		*node[0x561cfa298db0] = =;
		*node[0x561cfa298bd0] = 14;
		*node[0x561cfa298d80] = -;
		*node[0x561cfa298c60] = *;
		*node[0x561cfa298c00] = 2;
		*node[0x561cfa298c30] = 2;
		*node[0x561cfa298d50] = *;
		*node[0x561cfa298cf0] = *;
		*node[0x561cfa298c90] = 4;
		*node[0x561cfa298cc0] = 1;
		*node[0x561cfa298d20] = 3;
		*node[0x561cfa298de0] = ;;
		*node[0x561cfa298e10] = if;
		*node[0x561cfa298e40] = op_no;
		*node[0x561cfa298ed0] = >;
		*node[0x561cfa298e70] = 14;
		*node[0x561cfa298ea0] = 0;
		*node[0x561cfa298f00] = ;;
		*node[0x561cfa298ff0] = =;
		*node[0x561cfa298f30] = 15;
		*node[0x561cfa298fc0] = sqrt;
		*node[0x561cfa298f90] = 1;
		*node[0x561cfa298f60] = 14;
		*node[0x561cfa299020] = ;;
		*node[0x561cfa299230] = =;
		*node[0x561cfa299050] = 12;
		*node[0x561cfa299200] = /;
		*node[0x561cfa299140] = -;
		*node[0x561cfa2990e0] = -;
		*node[0x561cfa299080] = 0;
		*node[0x561cfa2990b0] = 2;
		*node[0x561cfa299110] = 15;
		*node[0x561cfa2991d0] = *;
		*node[0x561cfa299170] = 2;
		*node[0x561cfa2991a0] = 1;
		*node[0x561cfa299260] = ;;
		*node[0x561cfa299470] = =;
		*node[0x561cfa299290] = 13;
		*node[0x561cfa299440] = /;
		*node[0x561cfa299380] = +;
		*node[0x561cfa299320] = -;
		*node[0x561cfa2992c0] = 0;
		*node[0x561cfa2992f0] = 2;
		*node[0x561cfa299350] = 15;
		*node[0x561cfa299410] = *;
		*node[0x561cfa2993b0] = 2;
		*node[0x561cfa2993e0] = 1;
		*node[0x561cfa2994a0] = ;;
		*node[0x561cfa2994d0] = print;
		*node[0x561cfa299500] = 11;
		*node[0x561cfa299530] = ;;
		*node[0x561cfa299560] = print;
		*node[0x561cfa299590] = 12;
		*node[0x561cfa2995c0] = 13;
		*node[0x561cfa2995f0] = if;
		*node[0x561cfa299620] = op_no;
		*node[0x561cfa2996b0] = ==;
		*node[0x561cfa299650] = 14;
		*node[0x561cfa299680] = 0;
		*node[0x561cfa2996e0] = ;;
		*node[0x561cfa299890] = =;
		*node[0x561cfa299710] = 10;
		*node[0x561cfa299860] = /;
		*node[0x561cfa2997a0] = -;
		*node[0x561cfa299740] = 0;
		*node[0x561cfa299770] = 2;
		*node[0x561cfa299830] = *;
		*node[0x561cfa2997d0] = 2;
		*node[0x561cfa299800] = 1;
		*node[0x561cfa2998c0] = ;;
		*node[0x561cfa2998f0] = print;
		*node[0x561cfa299920] = 8;
		*node[0x561cfa299950] = ;;
		*node[0x561cfa299980] = print;
		*node[0x561cfa2999b0] = 10;
		*node[0x561cfa2999e0] = ;;
		*node[0x561cfa299a10] = print;
		*node[0x561cfa299a40] = 7;
		*node[0x561cfa299a70] = ;;
		*node[0x561cfa299aa0] = return;
		*node[0x561cfa299ad0] = 0;
		*node[0x561cfa299b00] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffcd0941440] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffcd0941440] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc256c9720] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffc256c9720] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fff96701fe0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7fff96701fe0] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd15e4f8d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x62c7811b73c0] = ;;
		*node[0x62c7811b73f0] = 0;
		*node[0x62c7811b7420] = ;;
		*node[0x62c7811b7450] = input;
		*node[0x62c7811b7480] = 1;
		*node[0x62c7811b74b0] = ;;
		*node[0x62c7811b7540] = =;
		*node[0x62c7811b74e0] = 2;
		*node[0x62c7811b7510] = 1;
		*node[0x62c7811b7570] = ;;
		*node[0x62c7811b75a0] = if;
		*node[0x62c7811b75d0] = op_no;
		*node[0x62c7811b7720] = ||;
		*node[0x62c7811b7660] = <;
		*node[0x62c7811b7600] = 1;
		*node[0x62c7811b7630] = 0;
		*node[0x62c7811b76f0] = ==;
		*node[0x62c7811b7690] = 1;
		*node[0x62c7811b76c0] = 0;
		*node[0x62c7811b7750] = ;;
		*node[0x62c7811b7780] = print;
		*node[0x62c7811b77b0] = 2;
		*node[0x62c7811b77e0] = if;
		*node[0x62c7811b7810] = op_no;
		*node[0x62c7811b78a0] = ==;
		*node[0x62c7811b7840] = 1;
		*node[0x62c7811b7870] = 1;
		*node[0x62c7811b78d0] = ;;
		*node[0x62c7811b7900] = print;
		*node[0x62c7811b7930] = 1;
		*node[0x62c7811b7960] = ;;
		*node[0x62c7811b7990] = print;
		*node[0x62c7811b79c0] = 3;
		*node[0x62c7811b79f0] = ;;
		*node[0x62c7811b7a20] = 4;
		*node[0x62c7811b7a50] = 1;
		*node[0x62c7811b7a80] = ;;
		*node[0x62c7811b7ab0] = if;
		*node[0x62c7811b7ae0] = op_no;
		*node[0x62c7811b7b70] = ==;
		*node[0x62c7811b7b10] = 1;
		*node[0x62c7811b7b40] = 1;
		*node[0x62c7811b7ba0] = ;;
		*node[0x62c7811b7bd0] = return;
		*node[0x62c7811b7c00] = 1;
		*node[0x62c7811b7c30] = ;;
		*node[0x62c7811b7c60] = return;
		*node[0x62c7811b7c90] = 1;
		*node[0x62c7811b7cc0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd027a4f30] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x55ce250bb220] = ;;
		*node[0x55ce250bb250] = 0;
		*node[0x55ce250bb280] = ;;
		*node[0x55ce250bb2b0] = input;
		*node[0x55ce250bb2e0] = 1;
		*node[0x55ce250bb310] = 2;
		*node[0x55ce250bb340] = 3;
		*node[0x55ce250bb370] = ;;
		*node[0x55ce250bb400] = 1;
		*node[0x55ce250bb430] = 2;
		*node[0x55ce250bb460] = 3;
		*node[0x55ce250bb3d0] = 4;
		*node[0x55ce250bb490] = ;;
		*node[0x55ce250bb4c0] = 4;
		*node[0x55ce250bb4f0] = 1;
		*node[0x55ce250bb520] = 2;
		*node[0x55ce250bb550] = 3;
		*node[0x55ce250bb580] = ;;
		*node[0x55ce250bb5b0] = if;
		*node[0x55ce250bb5e0] = op_no;
		*node[0x55ce250bb670] = ==;
		*node[0x55ce250bb610] = 1;
		*node[0x55ce250bb640] = 0;
		*node[0x55ce250bb6a0] = ;;
		*node[0x55ce250bb730] = 2;
		*node[0x55ce250bb760] = 3;
		*node[0x55ce250bb700] = 5;
		*node[0x55ce250bb790] = ;;
		*node[0x55ce250bb820] = 1;
		*node[0x55ce250bb850] = 2;
		*node[0x55ce250bb880] = 3;
		*node[0x55ce250bb7f0] = 6;
		*node[0x55ce250bb8b0] = ;;
		*node[0x55ce250bb8e0] = 5;
		*node[0x55ce250bb910] = 1;
		*node[0x55ce250bb940] = 2;
		*node[0x55ce250bb970] = ;;
		*node[0x55ce250bba60] = =;
		*node[0x55ce250bb9a0] = 7;
		*node[0x55ce250bba30] = -;
		*node[0x55ce250bb9d0] = 0;
		*node[0x55ce250bba00] = 1;
		*node[0x55ce250bba90] = ;;
		*node[0x55ce250bbb20] = =;
		*node[0x55ce250bbac0] = 8;
		*node[0x55ce250bbaf0] = 1;
		*node[0x55ce250bbb50] = ;;
		*node[0x55ce250bbbe0] = =;
		*node[0x55ce250bbb80] = 9;
		*node[0x55ce250bbbb0] = 1000;
		*node[0x55ce250bbc10] = ;;
		*node[0x55ce250bbc40] = if;
		*node[0x55ce250bbc70] = op_no;
		*node[0x55ce250bbd00] = ==;
		*node[0x55ce250bbca0] = 1;
		*node[0x55ce250bbcd0] = 0;
		*node[0x55ce250bbd30] = ;;
		*node[0x55ce250bbd60] = if;
		*node[0x55ce250bbd90] = op_no;
		*node[0x55ce250bbe20] = ==;
		*node[0x55ce250bbdc0] = 2;
		*node[0x55ce250bbdf0] = 0;
		*node[0x55ce250bbe50] = ;;
		*node[0x55ce250bbe80] = print;
		*node[0x55ce250bbeb0] = 9;
		*node[0x55ce250bbee0] = ;;
		*node[0x55ce250bbf10] = print;
		*node[0x55ce250bbf40] = 7;
		*node[0x55ce250bbf70] = ;;
		*node[0x55ce250bc0c0] = =;
		*node[0x55ce250bbfa0] = 10;
		*node[0x55ce250bc090] = /;
		*node[0x55ce250bc030] = -;
		*node[0x55ce250bbfd0] = 0;
		*node[0x55ce250bc000] = 2;
		*node[0x55ce250bc060] = 1;
		*node[0x55ce250bc0f0] = ;;
		*node[0x55ce250bc120] = print;
		*node[0x55ce250bc150] = 8;
		*node[0x55ce250bc180] = ;;
		*node[0x55ce250bc1b0] = print;
		*node[0x55ce250bc1e0] = 10;
		*node[0x55ce250bc210] = ;;
		*node[0x55ce250bc240] = return;
		*node[0x55ce250bc270] = 0;
		*node[0x55ce250bc2a0] = ;;
		*node[0x55ce250bc2d0] = 6;
		*node[0x55ce250bc300] = 1;
		*node[0x55ce250bc330] = 2;
		*node[0x55ce250bc360] = 3;
		*node[0x55ce250bc390] = ;;
		*node[0x55ce250bc480] = =;
		*node[0x55ce250bc3c0] = 7;
		*node[0x55ce250bc450] = -;
		*node[0x55ce250bc3f0] = 0;
		*node[0x55ce250bc420] = 1;
		*node[0x55ce250bc4b0] = ;;
		*node[0x55ce250bc540] = =;
		*node[0x55ce250bc4e0] = 8;
		*node[0x55ce250bc510] = 1;
		*node[0x55ce250bc570] = ;;
		*node[0x55ce250bc600] = =;
		*node[0x55ce250bc5a0] = 11;
		*node[0x55ce250bc5d0] = 2;
		*node[0x55ce250bc630] = ;;
		*node[0x55ce250bc660] = if;
		*node[0x55ce250bc690] = op_no;
		*node[0x55ce250bc720] = ==;
		*node[0x55ce250bc6c0] = 3;
		*node[0x55ce250bc6f0] = 0;
		*node[0x55ce250bc750] = ;;
		*node[0x55ce250bc7e0] = =;
		*node[0x55ce250bc780] = 12;
		*node[0x55ce250bc7b0] = 0;
		*node[0x55ce250bc810] = ;;
		*node[0x55ce250bc960] = =;
		*node[0x55ce250bc840] = 13;
		*node[0x55ce250bc930] = /;
		*node[0x55ce250bc8d0] = -;
		*node[0x55ce250bc870] = 0;
		*node[0x55ce250bc8a0] = 2;
		*node[0x55ce250bc900] = 1;
		*node[0x55ce250bc990] = ;;
		*node[0x55ce250bc9c0] = print;
		*node[0x55ce250bc9f0] = 11;
		*node[0x55ce250bca20] = ;;
		*node[0x55ce250bca50] = print;
		*node[0x55ce250bca80] = 12;
		*node[0x55ce250bcab0] = 13;
		*node[0x55ce250bcae0] = ;;
		*node[0x55ce250bccf0] = =;
		*node[0x55ce250bcb10] = 14;
		*node[0x55ce250bccc0] = -;
		*node[0x55ce250bcba0] = *;
		*node[0x55ce250bcb40] = 2;
		*node[0x55ce250bcb70] = 2;
		*node[0x55ce250bcc90] = *;
		*node[0x55ce250bcc30] = *;
		*node[0x55ce250bcbd0] = 4;
		*node[0x55ce250bcc00] = 1;
		*node[0x55ce250bcc60] = 3;
		*node[0x55ce250bcd20] = ;;
		*node[0x55ce250bcd50] = if;
		*node[0x55ce250bcd80] = op_no;
		*node[0x55ce250bce10] = >;
		*node[0x55ce250bcdb0] = 14;
		*node[0x55ce250bcde0] = 0;
		*node[0x55ce250bce40] = ;;
		*node[0x55ce250bcf30] = =;
		*node[0x55ce250bce70] = 15;
		*node[0x55ce250bcf00] = sqrt;
		*node[0x55ce250bced0] = 1;
		*node[0x55ce250bcea0] = 14;
		*node[0x55ce250bcf60] = ;;
		*node[0x55ce250bd170] = =;
		*node[0x55ce250bcf90] = 12;
		*node[0x55ce250bd140] = /;
		*node[0x55ce250bd080] = -;
		*node[0x55ce250bd020] = -;
		*node[0x55ce250bcfc0] = 0;
		*node[0x55ce250bcff0] = 2;
		*node[0x55ce250bd050] = 15;
		*node[0x55ce250bd110] = *;
		*node[0x55ce250bd0b0] = 2;
		*node[0x55ce250bd0e0] = 1;
		*node[0x55ce250bd1a0] = ;;
		*node[0x55ce250bd3b0] = =;
		*node[0x55ce250bd1d0] = 13;
		*node[0x55ce250bd380] = /;
		*node[0x55ce250bd2c0] = +;
		*node[0x55ce250bd260] = -;
		*node[0x55ce250bd200] = 0;
		*node[0x55ce250bd230] = 2;
		*node[0x55ce250bd290] = 15;
		*node[0x55ce250bd350] = *;
		*node[0x55ce250bd2f0] = 2;
		*node[0x55ce250bd320] = 1;
		*node[0x55ce250bd3e0] = ;;
		*node[0x55ce250bd410] = print;
		*node[0x55ce250bd440] = 11;
		*node[0x55ce250bd470] = ;;
		*node[0x55ce250bd4a0] = print;
		*node[0x55ce250bd4d0] = 12;
		*node[0x55ce250bd500] = 13;
		*node[0x55ce250bd530] = if;
		*node[0x55ce250bd560] = op_no;
		*node[0x55ce250bd5f0] = ==;
		*node[0x55ce250bd590] = 14;
		*node[0x55ce250bd5c0] = 0;
		*node[0x55ce250bd620] = ;;
		*node[0x55ce250bd7d0] = =;
		*node[0x55ce250bd650] = 10;
		*node[0x55ce250bd7a0] = /;
		*node[0x55ce250bd6e0] = -;
		*node[0x55ce250bd680] = 0;
		*node[0x55ce250bd6b0] = 2;
		*node[0x55ce250bd770] = *;
		*node[0x55ce250bd710] = 2;
		*node[0x55ce250bd740] = 1;
		*node[0x55ce250bd800] = ;;
		*node[0x55ce250bd830] = print;
		*node[0x55ce250bd860] = 8;
		*node[0x55ce250bd890] = ;;
		*node[0x55ce250bd8c0] = print;
		*node[0x55ce250bd8f0] = 10;
		*node[0x55ce250bd920] = ;;
		*node[0x55ce250bd950] = print;
		*node[0x55ce250bd980] = 7;
		*node[0x55ce250bd9b0] = ;;
		*node[0x55ce250bd9e0] = return;
		*node[0x55ce250bda10] = 0;
		*node[0x55ce250bda40] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffead19cc60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5cba6eb324d0] = ;;
		*node[0x5cba6eb32500] = 0;
		*node[0x5cba6eb32530] = ;;
		*node[0x5cba6eb32560] = input;
		*node[0x5cba6eb32590] = 1;
		*node[0x5cba6eb325c0] = ;;
		*node[0x5cba6eb32650] = =;
		*node[0x5cba6eb325f0] = 2;
		*node[0x5cba6eb32620] = 1;
		*node[0x5cba6eb32680] = ;;
		*node[0x5cba6eb326b0] = if;
		*node[0x5cba6eb326e0] = op_no;
		*node[0x5cba6eb32830] = ||;
		*node[0x5cba6eb32770] = <;
		*node[0x5cba6eb32710] = 1;
		*node[0x5cba6eb32740] = 0;
		*node[0x5cba6eb32800] = ==;
		*node[0x5cba6eb327a0] = 1;
		*node[0x5cba6eb327d0] = 0;
		*node[0x5cba6eb32860] = ;;
		*node[0x5cba6eb32890] = print;
		*node[0x5cba6eb328c0] = 2;
		*node[0x5cba6eb328f0] = if;
		*node[0x5cba6eb32920] = op_no;
		*node[0x5cba6eb329b0] = ==;
		*node[0x5cba6eb32950] = 1;
		*node[0x5cba6eb32980] = 1;
		*node[0x5cba6eb329e0] = ;;
		*node[0x5cba6eb32a10] = print;
		*node[0x5cba6eb32a40] = 1;
		*node[0x5cba6eb32a70] = ;;
		*node[0x5cba6eb32aa0] = print;
		*node[0x5cba6eb32ad0] = 3;
		*node[0x5cba6eb32b00] = ;;
		*node[0x5cba6eb32b30] = 4;
		*node[0x5cba6eb32b60] = 1;
		*node[0x5cba6eb32b90] = ;;
		*node[0x5cba6eb32bc0] = if;
		*node[0x5cba6eb32bf0] = op_no;
		*node[0x5cba6eb32c80] = ==;
		*node[0x5cba6eb32c20] = 1;
		*node[0x5cba6eb32c50] = 1;
		*node[0x5cba6eb32cb0] = ;;
		*node[0x5cba6eb32ce0] = return;
		*node[0x5cba6eb32d10] = 1;
		*node[0x5cba6eb32d40] = ;;
		*node[0x5cba6eb32e30] = =;
		*node[0x5cba6eb32d70] = 5;
		*node[0x5cba6eb32e00] = -;
		*node[0x5cba6eb32da0] = 1;
		*node[0x5cba6eb32dd0] = 1;
		*node[0x5cba6eb32e60] = ;;
		*node[0x5cba6eb32e90] = return;
		*node[0x5cba6eb32ec0] = 1;
		*node[0x5cba6eb32ef0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd77a4fd30] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e361e4bb220] = ;;
		*node[0x5e361e4bb250] = 0;
		*node[0x5e361e4bb280] = ;;
		*node[0x5e361e4bb2b0] = input;
		*node[0x5e361e4bb2e0] = 1;
		*node[0x5e361e4bb310] = 2;
		*node[0x5e361e4bb340] = 3;
		*node[0x5e361e4bb370] = ;;
		*node[0x5e361e4bb400] = 1;
		*node[0x5e361e4bb430] = 2;
		*node[0x5e361e4bb460] = 3;
		*node[0x5e361e4bb3d0] = 4;
		*node[0x5e361e4bb490] = ;;
		*node[0x5e361e4bb4c0] = 4;
		*node[0x5e361e4bb4f0] = 1;
		*node[0x5e361e4bb520] = 2;
		*node[0x5e361e4bb550] = 3;
		*node[0x5e361e4bb580] = ;;
		*node[0x5e361e4bb5b0] = if;
		*node[0x5e361e4bb5e0] = op_no;
		*node[0x5e361e4bb670] = ==;
		*node[0x5e361e4bb610] = 1;
		*node[0x5e361e4bb640] = 0;
		*node[0x5e361e4bb6a0] = ;;
		*node[0x5e361e4bb730] = 2;
		*node[0x5e361e4bb760] = 3;
		*node[0x5e361e4bb700] = 5;
		*node[0x5e361e4bb790] = ;;
		*node[0x5e361e4bb820] = 1;
		*node[0x5e361e4bb850] = 2;
		*node[0x5e361e4bb880] = 3;
		*node[0x5e361e4bb7f0] = 6;
		*node[0x5e361e4bb8b0] = ;;
		*node[0x5e361e4bb8e0] = 5;
		*node[0x5e361e4bb910] = 1;
		*node[0x5e361e4bb940] = 2;
		*node[0x5e361e4bb970] = ;;
		*node[0x5e361e4bba60] = =;
		*node[0x5e361e4bb9a0] = 7;
		*node[0x5e361e4bba30] = -;
		*node[0x5e361e4bb9d0] = 0;
		*node[0x5e361e4bba00] = 1;
		*node[0x5e361e4bba90] = ;;
		*node[0x5e361e4bbb20] = =;
		*node[0x5e361e4bbac0] = 8;
		*node[0x5e361e4bbaf0] = 1;
		*node[0x5e361e4bbb50] = ;;
		*node[0x5e361e4bbbe0] = =;
		*node[0x5e361e4bbb80] = 9;
		*node[0x5e361e4bbbb0] = 1000;
		*node[0x5e361e4bbc10] = ;;
		*node[0x5e361e4bbc40] = if;
		*node[0x5e361e4bbc70] = op_no;
		*node[0x5e361e4bbd00] = ==;
		*node[0x5e361e4bbca0] = 1;
		*node[0x5e361e4bbcd0] = 0;
		*node[0x5e361e4bbd30] = ;;
		*node[0x5e361e4bbd60] = if;
		*node[0x5e361e4bbd90] = op_no;
		*node[0x5e361e4bbe20] = ==;
		*node[0x5e361e4bbdc0] = 2;
		*node[0x5e361e4bbdf0] = 0;
		*node[0x5e361e4bbe50] = ;;
		*node[0x5e361e4bbe80] = print;
		*node[0x5e361e4bbeb0] = 9;
		*node[0x5e361e4bbee0] = ;;
		*node[0x5e361e4bbf10] = print;
		*node[0x5e361e4bbf40] = 7;
		*node[0x5e361e4bbf70] = ;;
		*node[0x5e361e4bc0c0] = =;
		*node[0x5e361e4bbfa0] = 10;
		*node[0x5e361e4bc090] = /;
		*node[0x5e361e4bc030] = -;
		*node[0x5e361e4bbfd0] = 0;
		*node[0x5e361e4bc000] = 2;
		*node[0x5e361e4bc060] = 1;
		*node[0x5e361e4bc0f0] = ;;
		*node[0x5e361e4bc120] = print;
		*node[0x5e361e4bc150] = 8;
		*node[0x5e361e4bc180] = ;;
		*node[0x5e361e4bc1b0] = print;
		*node[0x5e361e4bc1e0] = 10;
		*node[0x5e361e4bc210] = ;;
		*node[0x5e361e4bc240] = return;
		*node[0x5e361e4bc270] = 0;
		*node[0x5e361e4bc2a0] = ;;
		*node[0x5e361e4bc2d0] = 6;
		*node[0x5e361e4bc300] = 1;
		*node[0x5e361e4bc330] = 2;
		*node[0x5e361e4bc360] = 3;
		*node[0x5e361e4bc390] = ;;
		*node[0x5e361e4bc480] = =;
		*node[0x5e361e4bc3c0] = 7;
		*node[0x5e361e4bc450] = -;
		*node[0x5e361e4bc3f0] = 0;
		*node[0x5e361e4bc420] = 1;
		*node[0x5e361e4bc4b0] = ;;
		*node[0x5e361e4bc540] = =;
		*node[0x5e361e4bc4e0] = 8;
		*node[0x5e361e4bc510] = 1;
		*node[0x5e361e4bc570] = ;;
		*node[0x5e361e4bc600] = =;
		*node[0x5e361e4bc5a0] = 11;
		*node[0x5e361e4bc5d0] = 2;
		*node[0x5e361e4bc630] = ;;
		*node[0x5e361e4bc660] = if;
		*node[0x5e361e4bc690] = op_no;
		*node[0x5e361e4bc720] = ==;
		*node[0x5e361e4bc6c0] = 3;
		*node[0x5e361e4bc6f0] = 0;
		*node[0x5e361e4bc750] = ;;
		*node[0x5e361e4bc7e0] = =;
		*node[0x5e361e4bc780] = 12;
		*node[0x5e361e4bc7b0] = 0;
		*node[0x5e361e4bc810] = ;;
		*node[0x5e361e4bc960] = =;
		*node[0x5e361e4bc840] = 13;
		*node[0x5e361e4bc930] = /;
		*node[0x5e361e4bc8d0] = -;
		*node[0x5e361e4bc870] = 0;
		*node[0x5e361e4bc8a0] = 2;
		*node[0x5e361e4bc900] = 1;
		*node[0x5e361e4bc990] = ;;
		*node[0x5e361e4bc9c0] = print;
		*node[0x5e361e4bc9f0] = 11;
		*node[0x5e361e4bca20] = ;;
		*node[0x5e361e4bca50] = print;
		*node[0x5e361e4bca80] = 12;
		*node[0x5e361e4bcab0] = 13;
		*node[0x5e361e4bcae0] = ;;
		*node[0x5e361e4bccf0] = =;
		*node[0x5e361e4bcb10] = 14;
		*node[0x5e361e4bccc0] = -;
		*node[0x5e361e4bcba0] = *;
		*node[0x5e361e4bcb40] = 2;
		*node[0x5e361e4bcb70] = 2;
		*node[0x5e361e4bcc90] = *;
		*node[0x5e361e4bcc30] = *;
		*node[0x5e361e4bcbd0] = 4;
		*node[0x5e361e4bcc00] = 1;
		*node[0x5e361e4bcc60] = 3;
		*node[0x5e361e4bcd20] = ;;
		*node[0x5e361e4bcd50] = if;
		*node[0x5e361e4bcd80] = op_no;
		*node[0x5e361e4bce10] = >;
		*node[0x5e361e4bcdb0] = 14;
		*node[0x5e361e4bcde0] = 0;
		*node[0x5e361e4bce40] = ;;
		*node[0x5e361e4bcf30] = =;
		*node[0x5e361e4bce70] = 15;
		*node[0x5e361e4bcf00] = sqrt;
		*node[0x5e361e4bced0] = 1;
		*node[0x5e361e4bcea0] = 14;
		*node[0x5e361e4bcf60] = ;;
		*node[0x5e361e4bd170] = =;
		*node[0x5e361e4bcf90] = 12;
		*node[0x5e361e4bd140] = /;
		*node[0x5e361e4bd080] = -;
		*node[0x5e361e4bd020] = -;
		*node[0x5e361e4bcfc0] = 0;
		*node[0x5e361e4bcff0] = 2;
		*node[0x5e361e4bd050] = 15;
		*node[0x5e361e4bd110] = *;
		*node[0x5e361e4bd0b0] = 2;
		*node[0x5e361e4bd0e0] = 1;
		*node[0x5e361e4bd1a0] = ;;
		*node[0x5e361e4bd3b0] = =;
		*node[0x5e361e4bd1d0] = 13;
		*node[0x5e361e4bd380] = /;
		*node[0x5e361e4bd2c0] = +;
		*node[0x5e361e4bd260] = -;
		*node[0x5e361e4bd200] = 0;
		*node[0x5e361e4bd230] = 2;
		*node[0x5e361e4bd290] = 15;
		*node[0x5e361e4bd350] = *;
		*node[0x5e361e4bd2f0] = 2;
		*node[0x5e361e4bd320] = 1;
		*node[0x5e361e4bd3e0] = ;;
		*node[0x5e361e4bd410] = print;
		*node[0x5e361e4bd440] = 11;
		*node[0x5e361e4bd470] = ;;
		*node[0x5e361e4bd4a0] = print;
		*node[0x5e361e4bd4d0] = 12;
		*node[0x5e361e4bd500] = 13;
		*node[0x5e361e4bd530] = if;
		*node[0x5e361e4bd560] = op_no;
		*node[0x5e361e4bd5f0] = ==;
		*node[0x5e361e4bd590] = 14;
		*node[0x5e361e4bd5c0] = 0;
		*node[0x5e361e4bd620] = ;;
		*node[0x5e361e4bd7d0] = =;
		*node[0x5e361e4bd650] = 10;
		*node[0x5e361e4bd7a0] = /;
		*node[0x5e361e4bd6e0] = -;
		*node[0x5e361e4bd680] = 0;
		*node[0x5e361e4bd6b0] = 2;
		*node[0x5e361e4bd770] = *;
		*node[0x5e361e4bd710] = 2;
		*node[0x5e361e4bd740] = 1;
		*node[0x5e361e4bd800] = ;;
		*node[0x5e361e4bd830] = print;
		*node[0x5e361e4bd860] = 8;
		*node[0x5e361e4bd890] = ;;
		*node[0x5e361e4bd8c0] = print;
		*node[0x5e361e4bd8f0] = 10;
		*node[0x5e361e4bd920] = ;;
		*node[0x5e361e4bd950] = print;
		*node[0x5e361e4bd980] = 7;
		*node[0x5e361e4bd9b0] = ;;
		*node[0x5e361e4bd9e0] = return;
		*node[0x5e361e4bda10] = 0;
		*node[0x5e361e4bda40] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fff99a673e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7fff99a673e0] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff132a15b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x56acc4374710] = ;;
		*node[0x56acc4374740] = 0;
		*node[0x56acc4374770] = ;;
		*node[0x56acc43747a0] = input;
		*node[0x56acc43747d0] = 1;
		*node[0x56acc4374800] = ;;
		*node[0x56acc4374890] = =;
		*node[0x56acc4374830] = 2;
		*node[0x56acc4374860] = 1;
		*node[0x56acc43748c0] = ;;
		*node[0x56acc43748f0] = if;
		*node[0x56acc4374920] = op_no;
		*node[0x56acc4374a70] = ||;
		*node[0x56acc43749b0] = <;
		*node[0x56acc4374950] = 1;
		*node[0x56acc4374980] = 0;
		*node[0x56acc4374a40] = ==;
		*node[0x56acc43749e0] = 1;
		*node[0x56acc4374a10] = 0;
		*node[0x56acc4374aa0] = ;;
		*node[0x56acc4374ad0] = print;
		*node[0x56acc4374b00] = 2;
		*node[0x56acc4374b30] = if;
		*node[0x56acc4374b60] = op_no;
		*node[0x56acc4374bf0] = ==;
		*node[0x56acc4374b90] = 1;
		*node[0x56acc4374bc0] = 1;
		*node[0x56acc4374c20] = ;;
		*node[0x56acc4374c50] = print;
		*node[0x56acc4374c80] = 1;
		*node[0x56acc4374cb0] = ;;
		*node[0x56acc4374da0] = =;
		*node[0x56acc4374ce0] = 3;
		*node[0x56acc4374d70] = 1;
		*node[0x56acc4374d40] = 4;
		*node[0x56acc4374dd0] = ;;
		*node[0x56acc4374e00] = print;
		*node[0x56acc4374e30] = 3;
		*node[0x56acc4374e60] = ;;
		*node[0x56acc4374e90] = 4;
		*node[0x56acc4374ec0] = 1;
		*node[0x56acc4374ef0] = ;;
		*node[0x56acc4374f20] = if;
		*node[0x56acc4374f50] = op_no;
		*node[0x56acc4374fe0] = ==;
		*node[0x56acc4374f80] = 1;
		*node[0x56acc4374fb0] = 1;
		*node[0x56acc4375010] = ;;
		*node[0x56acc4375040] = return;
		*node[0x56acc4375070] = 1;
		*node[0x56acc43750a0] = ;;
		*node[0x56acc4375190] = =;
		*node[0x56acc43750d0] = 5;
		*node[0x56acc4375160] = -;
		*node[0x56acc4375100] = 1;
		*node[0x56acc4375130] = 1;
		*node[0x56acc43751c0] = ;;
		*node[0x56acc43751f0] = return;
		*node[0x56acc4375220] = 1;
		*node[0x56acc4375250] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe5118d2f0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5d700d6809a0] = ;;
		*node[0x5d700d6809d0] = 0;
		*node[0x5d700d680a00] = ;;
		*node[0x5d700d680a30] = input;
		*node[0x5d700d680a60] = 1;
		*node[0x5d700d680a90] = ;;
		*node[0x5d700d680b20] = =;
		*node[0x5d700d680ac0] = 2;
		*node[0x5d700d680af0] = 1;
		*node[0x5d700d680b50] = ;;
		*node[0x5d700d680b80] = if;
		*node[0x5d700d680bb0] = op_no;
		*node[0x5d700d680d00] = ||;
		*node[0x5d700d680c40] = <;
		*node[0x5d700d680be0] = 1;
		*node[0x5d700d680c10] = 0;
		*node[0x5d700d680cd0] = ==;
		*node[0x5d700d680c70] = 1;
		*node[0x5d700d680ca0] = 0;
		*node[0x5d700d680d30] = ;;
		*node[0x5d700d680d60] = print;
		*node[0x5d700d680d90] = 2;
		*node[0x5d700d680dc0] = if;
		*node[0x5d700d680df0] = op_no;
		*node[0x5d700d680e80] = ==;
		*node[0x5d700d680e20] = 1;
		*node[0x5d700d680e50] = 1;
		*node[0x5d700d680eb0] = ;;
		*node[0x5d700d680ee0] = print;
		*node[0x5d700d680f10] = 1;
		*node[0x5d700d680f40] = ;;
		*node[0x5d700d681030] = =;
		*node[0x5d700d680f70] = 3;
		*node[0x5d700d681000] = 1;
		*node[0x5d700d680fd0] = 4;
		*node[0x5d700d681060] = ;;
		*node[0x5d700d681090] = print;
		*node[0x5d700d6810c0] = 3;
		*node[0x5d700d6810f0] = ;;
		*node[0x5d700d681120] = 4;
		*node[0x5d700d681150] = 1;
		*node[0x5d700d681180] = ;;
		*node[0x5d700d6811b0] = if;
		*node[0x5d700d6811e0] = op_no;
		*node[0x5d700d681270] = ==;
		*node[0x5d700d681210] = 1;
		*node[0x5d700d681240] = 1;
		*node[0x5d700d6812a0] = ;;
		*node[0x5d700d6812d0] = return;
		*node[0x5d700d681300] = 1;
		*node[0x5d700d681330] = ;;
		*node[0x5d700d681420] = =;
		*node[0x5d700d681360] = 5;
		*node[0x5d700d6813f0] = -;
		*node[0x5d700d681390] = 1;
		*node[0x5d700d6813c0] = 1;
		*node[0x5d700d681450] = ;;
		*node[0x5d700d6815a0] = =;
		*node[0x5d700d681480] = 1;
		*node[0x5d700d681570] = *;
		*node[0x5d700d6814b0] = 1;
		*node[0x5d700d681540] = 5;
		*node[0x5d700d681510] = 4;
		*node[0x5d700d6815d0] = ;;
		*node[0x5d700d681600] = return;
		*node[0x5d700d681630] = 1;
		*node[0x5d700d681660] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff341fa880] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x652322fc2220] = ;;
		*node[0x652322fc2250] = 0;
		*node[0x652322fc2280] = ;;
		*node[0x652322fc22b0] = input;
		*node[0x652322fc22e0] = 1;
		*node[0x652322fc2310] = 2;
		*node[0x652322fc2340] = 3;
		*node[0x652322fc2370] = ;;
		*node[0x652322fc23d0] = 1;
		*node[0x652322fc2400] = 2;
		*node[0x652322fc2430] = 3;
		*node[0x652322fc2460] = ;;
		*node[0x652322fc2490] = 4;
		*node[0x652322fc24c0] = 1;
		*node[0x652322fc24f0] = 2;
		*node[0x652322fc2520] = 3;
		*node[0x652322fc2550] = ;;
		*node[0x652322fc2580] = if;
		*node[0x652322fc25b0] = op_no;
		*node[0x652322fc2640] = ==;
		*node[0x652322fc25e0] = 1;
		*node[0x652322fc2610] = 0;
		*node[0x652322fc2670] = ;;
		*node[0x652322fc26d0] = 2;
		*node[0x652322fc2700] = 3;
		*node[0x652322fc2730] = ;;
		*node[0x652322fc2790] = 1;
		*node[0x652322fc27c0] = 2;
		*node[0x652322fc27f0] = 3;
		*node[0x652322fc2820] = ;;
		*node[0x652322fc2850] = 5;
		*node[0x652322fc2880] = 1;
		*node[0x652322fc28b0] = 2;
		*node[0x652322fc28e0] = ;;
		*node[0x652322fc29d0] = =;
		*node[0x652322fc2910] = 7;
		*node[0x652322fc29a0] = -;
		*node[0x652322fc2940] = 0;
		*node[0x652322fc2970] = 1;
		*node[0x652322fc2a00] = ;;
		*node[0x652322fc2a90] = =;
		*node[0x652322fc2a30] = 8;
		*node[0x652322fc2a60] = 1;
		*node[0x652322fc2ac0] = ;;
		*node[0x652322fc2b50] = =;
		*node[0x652322fc2af0] = 9;
		*node[0x652322fc2b20] = 1000;
		*node[0x652322fc2b80] = ;;
		*node[0x652322fc2bb0] = if;
		*node[0x652322fc2be0] = op_no;
		*node[0x652322fc2c70] = ==;
		*node[0x652322fc2c10] = 1;
		*node[0x652322fc2c40] = 0;
		*node[0x652322fc2ca0] = ;;
		*node[0x652322fc2cd0] = if;
		*node[0x652322fc2d00] = op_no;
		*node[0x652322fc2d90] = ==;
		*node[0x652322fc2d30] = 2;
		*node[0x652322fc2d60] = 0;
		*node[0x652322fc2dc0] = ;;
		*node[0x652322fc2df0] = print;
		*node[0x652322fc2e20] = 9;
		*node[0x652322fc2e50] = ;;
		*node[0x652322fc2e80] = print;
		*node[0x652322fc2eb0] = 7;
		*node[0x652322fc2ee0] = ;;
		*node[0x652322fc3030] = =;
		*node[0x652322fc2f10] = 10;
		*node[0x652322fc3000] = /;
		*node[0x652322fc2fa0] = -;
		*node[0x652322fc2f40] = 0;
		*node[0x652322fc2f70] = 2;
		*node[0x652322fc2fd0] = 1;
		*node[0x652322fc3060] = ;;
		*node[0x652322fc3090] = print;
		*node[0x652322fc30c0] = 8;
		*node[0x652322fc30f0] = ;;
		*node[0x652322fc3120] = print;
		*node[0x652322fc3150] = 10;
		*node[0x652322fc3180] = ;;
		*node[0x652322fc31b0] = return;
		*node[0x652322fc31e0] = 0;
		*node[0x652322fc3210] = ;;
		*node[0x652322fc3240] = 6;
		*node[0x652322fc3270] = 1;
		*node[0x652322fc32a0] = 2;
		*node[0x652322fc32d0] = 3;
		*node[0x652322fc3300] = ;;
		*node[0x652322fc33f0] = =;
		*node[0x652322fc3330] = 7;
		*node[0x652322fc33c0] = -;
		*node[0x652322fc3360] = 0;
		*node[0x652322fc3390] = 1;
		*node[0x652322fc3420] = ;;
		*node[0x652322fc34b0] = =;
		*node[0x652322fc3450] = 8;
		*node[0x652322fc3480] = 1;
		*node[0x652322fc34e0] = ;;
		*node[0x652322fc3570] = =;
		*node[0x652322fc3510] = 11;
		*node[0x652322fc3540] = 2;
		*node[0x652322fc35a0] = ;;
		*node[0x652322fc35d0] = if;
		*node[0x652322fc3600] = op_no;
		*node[0x652322fc3690] = ==;
		*node[0x652322fc3630] = 3;
		*node[0x652322fc3660] = 0;
		*node[0x652322fc36c0] = ;;
		*node[0x652322fc3750] = =;
		*node[0x652322fc36f0] = 12;
		*node[0x652322fc3720] = 0;
		*node[0x652322fc3780] = ;;
		*node[0x652322fc38d0] = =;
		*node[0x652322fc37b0] = 13;
		*node[0x652322fc38a0] = /;
		*node[0x652322fc3840] = -;
		*node[0x652322fc37e0] = 0;
		*node[0x652322fc3810] = 2;
		*node[0x652322fc3870] = 1;
		*node[0x652322fc3900] = ;;
		*node[0x652322fc3930] = print;
		*node[0x652322fc3960] = 11;
		*node[0x652322fc3990] = ;;
		*node[0x652322fc39c0] = print;
		*node[0x652322fc39f0] = 12;
		*node[0x652322fc3a20] = 13;
		*node[0x652322fc3a50] = ;;
		*node[0x652322fc3c60] = =;
		*node[0x652322fc3a80] = 14;
		*node[0x652322fc3c30] = -;
		*node[0x652322fc3b10] = *;
		*node[0x652322fc3ab0] = 2;
		*node[0x652322fc3ae0] = 2;
		*node[0x652322fc3c00] = *;
		*node[0x652322fc3ba0] = *;
		*node[0x652322fc3b40] = 4;
		*node[0x652322fc3b70] = 1;
		*node[0x652322fc3bd0] = 3;
		*node[0x652322fc3c90] = ;;
		*node[0x652322fc3cc0] = if;
		*node[0x652322fc3cf0] = op_no;
		*node[0x652322fc3d80] = >;
		*node[0x652322fc3d20] = 14;
		*node[0x652322fc3d50] = 0;
		*node[0x652322fc3db0] = ;;
		*node[0x652322fc3ea0] = =;
		*node[0x652322fc3de0] = 15;
		*node[0x652322fc3e70] = sqrt;
		*node[0x652322fc3e40] = 1;
		*node[0x652322fc3e10] = 14;
		*node[0x652322fc3ed0] = ;;
		*node[0x652322fc40e0] = =;
		*node[0x652322fc3f00] = 12;
		*node[0x652322fc40b0] = /;
		*node[0x652322fc3ff0] = -;
		*node[0x652322fc3f90] = -;
		*node[0x652322fc3f30] = 0;
		*node[0x652322fc3f60] = 2;
		*node[0x652322fc3fc0] = 15;
		*node[0x652322fc4080] = *;
		*node[0x652322fc4020] = 2;
		*node[0x652322fc4050] = 1;
		*node[0x652322fc4110] = ;;
		*node[0x652322fc4320] = =;
		*node[0x652322fc4140] = 13;
		*node[0x652322fc42f0] = /;
		*node[0x652322fc4230] = +;
		*node[0x652322fc41d0] = -;
		*node[0x652322fc4170] = 0;
		*node[0x652322fc41a0] = 2;
		*node[0x652322fc4200] = 15;
		*node[0x652322fc42c0] = *;
		*node[0x652322fc4260] = 2;
		*node[0x652322fc4290] = 1;
		*node[0x652322fc4350] = ;;
		*node[0x652322fc4380] = print;
		*node[0x652322fc43b0] = 11;
		*node[0x652322fc43e0] = ;;
		*node[0x652322fc4410] = print;
		*node[0x652322fc4440] = 12;
		*node[0x652322fc4470] = 13;
		*node[0x652322fc44a0] = if;
		*node[0x652322fc44d0] = op_no;
		*node[0x652322fc4560] = ==;
		*node[0x652322fc4500] = 14;
		*node[0x652322fc4530] = 0;
		*node[0x652322fc4590] = ;;
		*node[0x652322fc4740] = =;
		*node[0x652322fc45c0] = 10;
		*node[0x652322fc4710] = /;
		*node[0x652322fc4650] = -;
		*node[0x652322fc45f0] = 0;
		*node[0x652322fc4620] = 2;
		*node[0x652322fc46e0] = *;
		*node[0x652322fc4680] = 2;
		*node[0x652322fc46b0] = 1;
		*node[0x652322fc4770] = ;;
		*node[0x652322fc47a0] = print;
		*node[0x652322fc47d0] = 8;
		*node[0x652322fc4800] = ;;
		*node[0x652322fc4830] = print;
		*node[0x652322fc4860] = 10;
		*node[0x652322fc4890] = ;;
		*node[0x652322fc48c0] = print;
		*node[0x652322fc48f0] = 7;
		*node[0x652322fc4920] = ;;
		*node[0x652322fc4950] = return;
		*node[0x652322fc4980] = 0;
		*node[0x652322fc49b0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff759b0040] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5d379e911220] = ;;
		*node[0x5d379e911250] = 0;
		*node[0x5d379e911280] = ;;
		*node[0x5d379e9112b0] = input;
		*node[0x5d379e9112e0] = 1;
		*node[0x5d379e911310] = 2;
		*node[0x5d379e911340] = 3;
		*node[0x5d379e911370] = ;;
		*node[0x5d379e9113d0] = 1;
		*node[0x5d379e911400] = 2;
		*node[0x5d379e911430] = 3;
		*node[0x5d379e911460] = ;;
		*node[0x5d379e911490] = 4;
		*node[0x5d379e9114c0] = 1;
		*node[0x5d379e9114f0] = 2;
		*node[0x5d379e911520] = 3;
		*node[0x5d379e911550] = ;;
		*node[0x5d379e911580] = if;
		*node[0x5d379e9115b0] = op_no;
		*node[0x5d379e911640] = ==;
		*node[0x5d379e9115e0] = 1;
		*node[0x5d379e911610] = 0;
		*node[0x5d379e911670] = ;;
		*node[0x5d379e9116d0] = 2;
		*node[0x5d379e911700] = 3;
		*node[0x5d379e911730] = ;;
		*node[0x5d379e911790] = 1;
		*node[0x5d379e9117c0] = 2;
		*node[0x5d379e9117f0] = 3;
		*node[0x5d379e911820] = ;;
		*node[0x5d379e911850] = 5;
		*node[0x5d379e911880] = 1;
		*node[0x5d379e9118b0] = 2;
		*node[0x5d379e9118e0] = ;;
		*node[0x5d379e9119d0] = =;
		*node[0x5d379e911910] = 7;
		*node[0x5d379e9119a0] = -;
		*node[0x5d379e911940] = 0;
		*node[0x5d379e911970] = 1;
		*node[0x5d379e911a00] = ;;
		*node[0x5d379e911a90] = =;
		*node[0x5d379e911a30] = 8;
		*node[0x5d379e911a60] = 1;
		*node[0x5d379e911ac0] = ;;
		*node[0x5d379e911b50] = =;
		*node[0x5d379e911af0] = 9;
		*node[0x5d379e911b20] = 1000;
		*node[0x5d379e911b80] = ;;
		*node[0x5d379e911bb0] = if;
		*node[0x5d379e911be0] = op_no;
		*node[0x5d379e911c70] = ==;
		*node[0x5d379e911c10] = 1;
		*node[0x5d379e911c40] = 0;
		*node[0x5d379e911ca0] = ;;
		*node[0x5d379e911cd0] = if;
		*node[0x5d379e911d00] = op_no;
		*node[0x5d379e911d90] = ==;
		*node[0x5d379e911d30] = 2;
		*node[0x5d379e911d60] = 0;
		*node[0x5d379e911dc0] = ;;
		*node[0x5d379e911df0] = print;
		*node[0x5d379e911e20] = 9;
		*node[0x5d379e911e50] = ;;
		*node[0x5d379e911e80] = print;
		*node[0x5d379e911eb0] = 7;
		*node[0x5d379e911ee0] = ;;
		*node[0x5d379e912030] = =;
		*node[0x5d379e911f10] = 10;
		*node[0x5d379e912000] = /;
		*node[0x5d379e911fa0] = -;
		*node[0x5d379e911f40] = 0;
		*node[0x5d379e911f70] = 2;
		*node[0x5d379e911fd0] = 1;
		*node[0x5d379e912060] = ;;
		*node[0x5d379e912090] = print;
		*node[0x5d379e9120c0] = 8;
		*node[0x5d379e9120f0] = ;;
		*node[0x5d379e912120] = print;
		*node[0x5d379e912150] = 10;
		*node[0x5d379e912180] = ;;
		*node[0x5d379e9121b0] = return;
		*node[0x5d379e9121e0] = 0;
		*node[0x5d379e912210] = ;;
		*node[0x5d379e912240] = 6;
		*node[0x5d379e912270] = 1;
		*node[0x5d379e9122a0] = 2;
		*node[0x5d379e9122d0] = 3;
		*node[0x5d379e912300] = ;;
		*node[0x5d379e9123f0] = =;
		*node[0x5d379e912330] = 7;
		*node[0x5d379e9123c0] = -;
		*node[0x5d379e912360] = 0;
		*node[0x5d379e912390] = 1;
		*node[0x5d379e912420] = ;;
		*node[0x5d379e9124b0] = =;
		*node[0x5d379e912450] = 8;
		*node[0x5d379e912480] = 1;
		*node[0x5d379e9124e0] = ;;
		*node[0x5d379e912570] = =;
		*node[0x5d379e912510] = 11;
		*node[0x5d379e912540] = 2;
		*node[0x5d379e9125a0] = ;;
		*node[0x5d379e9125d0] = if;
		*node[0x5d379e912600] = op_no;
		*node[0x5d379e912690] = ==;
		*node[0x5d379e912630] = 3;
		*node[0x5d379e912660] = 0;
		*node[0x5d379e9126c0] = ;;
		*node[0x5d379e912750] = =;
		*node[0x5d379e9126f0] = 12;
		*node[0x5d379e912720] = 0;
		*node[0x5d379e912780] = ;;
		*node[0x5d379e9128d0] = =;
		*node[0x5d379e9127b0] = 13;
		*node[0x5d379e9128a0] = /;
		*node[0x5d379e912840] = -;
		*node[0x5d379e9127e0] = 0;
		*node[0x5d379e912810] = 2;
		*node[0x5d379e912870] = 1;
		*node[0x5d379e912900] = ;;
		*node[0x5d379e912930] = print;
		*node[0x5d379e912960] = 11;
		*node[0x5d379e912990] = ;;
		*node[0x5d379e9129c0] = print;
		*node[0x5d379e9129f0] = 12;
		*node[0x5d379e912a20] = 13;
		*node[0x5d379e912a50] = ;;
		*node[0x5d379e912c60] = =;
		*node[0x5d379e912a80] = 14;
		*node[0x5d379e912c30] = -;
		*node[0x5d379e912b10] = *;
		*node[0x5d379e912ab0] = 2;
		*node[0x5d379e912ae0] = 2;
		*node[0x5d379e912c00] = *;
		*node[0x5d379e912ba0] = *;
		*node[0x5d379e912b40] = 4;
		*node[0x5d379e912b70] = 1;
		*node[0x5d379e912bd0] = 3;
		*node[0x5d379e912c90] = ;;
		*node[0x5d379e912cc0] = if;
		*node[0x5d379e912cf0] = op_no;
		*node[0x5d379e912d80] = >;
		*node[0x5d379e912d20] = 14;
		*node[0x5d379e912d50] = 0;
		*node[0x5d379e912db0] = ;;
		*node[0x5d379e912ea0] = =;
		*node[0x5d379e912de0] = 15;
		*node[0x5d379e912e70] = sqrt;
		*node[0x5d379e912e40] = 1;
		*node[0x5d379e912e10] = 14;
		*node[0x5d379e912ed0] = ;;
		*node[0x5d379e9130e0] = =;
		*node[0x5d379e912f00] = 12;
		*node[0x5d379e9130b0] = /;
		*node[0x5d379e912ff0] = -;
		*node[0x5d379e912f90] = -;
		*node[0x5d379e912f30] = 0;
		*node[0x5d379e912f60] = 2;
		*node[0x5d379e912fc0] = 15;
		*node[0x5d379e913080] = *;
		*node[0x5d379e913020] = 2;
		*node[0x5d379e913050] = 1;
		*node[0x5d379e913110] = ;;
		*node[0x5d379e913320] = =;
		*node[0x5d379e913140] = 13;
		*node[0x5d379e9132f0] = /;
		*node[0x5d379e913230] = +;
		*node[0x5d379e9131d0] = -;
		*node[0x5d379e913170] = 0;
		*node[0x5d379e9131a0] = 2;
		*node[0x5d379e913200] = 15;
		*node[0x5d379e9132c0] = *;
		*node[0x5d379e913260] = 2;
		*node[0x5d379e913290] = 1;
		*node[0x5d379e913350] = ;;
		*node[0x5d379e913380] = print;
		*node[0x5d379e9133b0] = 11;
		*node[0x5d379e9133e0] = ;;
		*node[0x5d379e913410] = print;
		*node[0x5d379e913440] = 12;
		*node[0x5d379e913470] = 13;
		*node[0x5d379e9134a0] = if;
		*node[0x5d379e9134d0] = op_no;
		*node[0x5d379e913560] = ==;
		*node[0x5d379e913500] = 14;
		*node[0x5d379e913530] = 0;
		*node[0x5d379e913590] = ;;
		*node[0x5d379e913740] = =;
		*node[0x5d379e9135c0] = 10;
		*node[0x5d379e913710] = /;
		*node[0x5d379e913650] = -;
		*node[0x5d379e9135f0] = 0;
		*node[0x5d379e913620] = 2;
		*node[0x5d379e9136e0] = *;
		*node[0x5d379e913680] = 2;
		*node[0x5d379e9136b0] = 1;
		*node[0x5d379e913770] = ;;
		*node[0x5d379e9137a0] = print;
		*node[0x5d379e9137d0] = 8;
		*node[0x5d379e913800] = ;;
		*node[0x5d379e913830] = print;
		*node[0x5d379e913860] = 10;
		*node[0x5d379e913890] = ;;
		*node[0x5d379e9138c0] = print;
		*node[0x5d379e9138f0] = 7;
		*node[0x5d379e913920] = ;;
		*node[0x5d379e913950] = return;
		*node[0x5d379e913980] = 0;
		*node[0x5d379e9139b0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd15946360] "tree" called from ./src/main.cpp(13) main
{
	is_init = 1
	{
		*node[0x64dda06a5f70] = ;;
		*node[0x64dda06a5fa0] = 0;
		*node[0x64dda06a5fd0] = ;;
		*node[0x64dda06a6000] = input;
		*node[0x64dda06a6030] = 1;
		*node[0x64dda06a6060] = 2;
		*node[0x64dda06a6090] = 3;
		*node[0x64dda06a60c0] = ;;
		*node[0x64dda06a6120] = 1;
		*node[0x64dda06a6150] = 2;
		*node[0x64dda06a6180] = 3;
		*node[0x64dda06a61b0] = ;;
		*node[0x64dda06a61e0] = 4;
		*node[0x64dda06a6210] = 1;
		*node[0x64dda06a6240] = 2;
		*node[0x64dda06a6270] = 3;
		*node[0x64dda06a62a0] = ;;
		*node[0x64dda06a62d0] = if;
		*node[0x64dda06a6300] = op_no;
		*node[0x64dda06a6330] = ==;
		*node[0x64dda06a6360] = 1;
		*node[0x64dda06a6390] = 0;
		*node[0x64dda06a63c0] = ;;
		*node[0x64dda06a6420] = 2;
		*node[0x64dda06a6450] = 3;
		*node[0x64dda06a6480] = ;;
		*node[0x64dda06a64e0] = 1;
		*node[0x64dda06a6510] = 2;
		*node[0x64dda06a6540] = 3;
		*node[0x64dda06a6570] = ;;
		*node[0x64dda06a65a0] = 5;
		*node[0x64dda06a65d0] = 1;
		*node[0x64dda06a6600] = 2;
		*node[0x64dda06a6630] = ;;
		*node[0x64dda06a6660] = =;
		*node[0x64dda06a6690] = 7;
		*node[0x64dda06a66c0] = -;
		*node[0x64dda06a66f0] = 0;
		*node[0x64dda06a6720] = 1;
		*node[0x64dda06a6750] = ;;
		*node[0x64dda06a6780] = =;
		*node[0x64dda06a67b0] = 8;
		*node[0x64dda06a67e0] = 1;
		*node[0x64dda06a6810] = ;;
		*node[0x64dda06a6840] = =;
		*node[0x64dda06a6870] = 9;
		*node[0x64dda06a68a0] = 1000;
		*node[0x64dda06a68d0] = ;;
		*node[0x64dda06a6900] = if;
		*node[0x64dda06a6930] = op_no;
		*node[0x64dda06a6960] = ==;
		*node[0x64dda06a6990] = 1;
		*node[0x64dda06a69c0] = 0;
		*node[0x64dda06a69f0] = ;;
		*node[0x64dda06a6a20] = if;
		*node[0x64dda06a6a50] = op_no;
		*node[0x64dda06a6a80] = ==;
		*node[0x64dda06a6ab0] = 2;
		*node[0x64dda06a6ae0] = 0;
		*node[0x64dda06a6b10] = ;;
		*node[0x64dda06a6b40] = print;
		*node[0x64dda06a6b70] = 9;
		*node[0x64dda06a6ba0] = ;;
		*node[0x64dda06a6bd0] = print;
		*node[0x64dda06a6c00] = 7;
		*node[0x64dda06a6c30] = ;;
		*node[0x64dda06a6c60] = =;
		*node[0x64dda06a6c90] = 10;
		*node[0x64dda06a6cc0] = /;
		*node[0x64dda06a6cf0] = -;
		*node[0x64dda06a6d20] = 0;
		*node[0x64dda06a6d50] = 2;
		*node[0x64dda06a6d80] = 1;
		*node[0x64dda06a6db0] = ;;
		*node[0x64dda06a6de0] = print;
		*node[0x64dda06a6e10] = 8;
		*node[0x64dda06a6e40] = ;;
		*node[0x64dda06a6e70] = print;
		*node[0x64dda06a6ea0] = 10;
		*node[0x64dda06a6ed0] = ;;
		*node[0x64dda06a6f00] = return;
		*node[0x64dda06a6f30] = 0;
		*node[0x64dda06a6f60] = ;;
		*node[0x64dda06a6f90] = 6;
		*node[0x64dda06a6fc0] = 1;
		*node[0x64dda06a6ff0] = 2;
		*node[0x64dda06a7020] = 3;
		*node[0x64dda06a7050] = ;;
		*node[0x64dda06a7080] = =;
		*node[0x64dda06a70b0] = 7;
		*node[0x64dda06a70e0] = -;
		*node[0x64dda06a7110] = 0;
		*node[0x64dda06a7140] = 1;
		*node[0x64dda06a7170] = ;;
		*node[0x64dda06a71a0] = =;
		*node[0x64dda06a71d0] = 8;
		*node[0x64dda06a7200] = 1;
		*node[0x64dda06a7230] = ;;
		*node[0x64dda06a7260] = =;
		*node[0x64dda06a7290] = 11;
		*node[0x64dda06a72c0] = 2;
		*node[0x64dda06a72f0] = ;;
		*node[0x64dda06a7320] = if;
		*node[0x64dda06a7350] = op_no;
		*node[0x64dda06a7380] = ==;
		*node[0x64dda06a73b0] = 3;
		*node[0x64dda06a73e0] = 0;
		*node[0x64dda06a7410] = ;;
		*node[0x64dda06a7440] = =;
		*node[0x64dda06a7470] = 12;
		*node[0x64dda06a74a0] = 0;
		*node[0x64dda06a74d0] = ;;
		*node[0x64dda06a7500] = =;
		*node[0x64dda06a7530] = 13;
		*node[0x64dda06a7560] = /;
		*node[0x64dda06a7590] = -;
		*node[0x64dda06a75c0] = 0;
		*node[0x64dda06a75f0] = 2;
		*node[0x64dda06a7620] = 1;
		*node[0x64dda06a7650] = ;;
		*node[0x64dda06a7680] = print;
		*node[0x64dda06a76b0] = 11;
		*node[0x64dda06a76e0] = ;;
		*node[0x64dda06a7710] = print;
		*node[0x64dda06a7740] = 12;
		*node[0x64dda06a7770] = 13;
		*node[0x64dda06a77a0] = ;;
		*node[0x64dda06a77d0] = =;
		*node[0x64dda06a7800] = 14;
		*node[0x64dda06a7830] = -;
		*node[0x64dda06a7860] = *;
		*node[0x64dda06a7890] = 2;
		*node[0x64dda06a78c0] = 2;
		*node[0x64dda06a78f0] = *;
		*node[0x64dda06a7920] = *;
		*node[0x64dda06a7950] = 4;
		*node[0x64dda06a7980] = 1;
		*node[0x64dda06a79b0] = 3;
		*node[0x64dda06a79e0] = ;;
		*node[0x64dda06a7a10] = if;
		*node[0x64dda06a7a40] = op_no;
		*node[0x64dda06a7a70] = >;
		*node[0x64dda06a7aa0] = 14;
		*node[0x64dda06a7ad0] = 0;
		*node[0x64dda06a7b00] = ;;
		*node[0x64dda06a7b30] = =;
		*node[0x64dda06a7b60] = 15;
		*node[0x64dda06a7b90] = sqrt;
		*node[0x64dda06a7bc0] = 1;
		*node[0x64dda06a7bf0] = 14;
		*node[0x64dda06a7c20] = ;;
		*node[0x64dda06a7c50] = =;
		*node[0x64dda06a7c80] = 12;
		*node[0x64dda06a7cb0] = /;
		*node[0x64dda06a7ce0] = -;
		*node[0x64dda06a7d10] = -;
		*node[0x64dda06a7d40] = 0;
		*node[0x64dda06a7d70] = 2;
		*node[0x64dda06a7da0] = 15;
		*node[0x64dda06a7dd0] = *;
		*node[0x64dda06a7e00] = 2;
		*node[0x64dda06a7e30] = 1;
		*node[0x64dda06a7e60] = ;;
		*node[0x64dda06a7e90] = =;
		*node[0x64dda06a7ec0] = 13;
		*node[0x64dda06a7ef0] = /;
		*node[0x64dda06a7f20] = +;
		*node[0x64dda06a7f50] = -;
		*node[0x64dda06a7f80] = 0;
		*node[0x64dda06a7fb0] = 2;
		*node[0x64dda06a7fe0] = 15;
		*node[0x64dda06a8010] = *;
		*node[0x64dda06a8040] = 2;
		*node[0x64dda06a8070] = 1;
		*node[0x64dda06a80a0] = ;;
		*node[0x64dda06a80d0] = print;
		*node[0x64dda06a8100] = 11;
		*node[0x64dda06a8130] = ;;
		*node[0x64dda06a8160] = print;
		*node[0x64dda06a8190] = 12;
		*node[0x64dda06a81c0] = 13;
		*node[0x64dda06a81f0] = if;
		*node[0x64dda06a8220] = op_no;
		*node[0x64dda06a8250] = ==;
		*node[0x64dda06a8280] = 14;
		*node[0x64dda06a82b0] = 0;
		*node[0x64dda06a82e0] = ;;
		*node[0x64dda06a8310] = =;
		*node[0x64dda06a8340] = 10;
		*node[0x64dda06a8370] = /;
		*node[0x64dda06a83a0] = -;
		*node[0x64dda06a83d0] = 0;
		*node[0x64dda06a8400] = 2;
		*node[0x64dda06a8430] = *;
		*node[0x64dda06a8460] = 2;
		*node[0x64dda06a8490] = 1;
		*node[0x64dda06a84c0] = ;;
		*node[0x64dda06a84f0] = print;
		*node[0x64dda06a8520] = 8;
		*node[0x64dda06a8550] = ;;
		*node[0x64dda06a8580] = print;
		*node[0x64dda06a85b0] = 10;
		*node[0x64dda06a85e0] = ;;
		*node[0x64dda06a8610] = print;
		*node[0x64dda06a8640] = 7;
		*node[0x64dda06a8670] = ;;
		*node[0x64dda06a86a0] = return;
		*node[0x64dda06a86d0] = 0;
		*node[0x64dda06a8700] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc03efafb0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5f2bee58bf70] = ;;
		*node[0x5f2bee58bfa0] = 0;
		*node[0x5f2bee58bfd0] = ;;
		*node[0x5f2bee58c000] = input;
		*node[0x5f2bee58c030] = 1;
		*node[0x5f2bee58c060] = 2;
		*node[0x5f2bee58c090] = 3;
		*node[0x5f2bee58c0c0] = ;;
		*node[0x5f2bee58c120] = 1;
		*node[0x5f2bee58c150] = 2;
		*node[0x5f2bee58c180] = 3;
		*node[0x5f2bee58c1b0] = ;;
		*node[0x5f2bee58c1e0] = 4;
		*node[0x5f2bee58c210] = 1;
		*node[0x5f2bee58c240] = 2;
		*node[0x5f2bee58c270] = 3;
		*node[0x5f2bee58c2a0] = ;;
		*node[0x5f2bee58c2d0] = if;
		*node[0x5f2bee58c300] = op_no;
		*node[0x5f2bee58c330] = ==;
		*node[0x5f2bee58c360] = 1;
		*node[0x5f2bee58c390] = 0;
		*node[0x5f2bee58c3c0] = ;;
		*node[0x5f2bee58c420] = 2;
		*node[0x5f2bee58c450] = 3;
		*node[0x5f2bee58c480] = ;;
		*node[0x5f2bee58c4e0] = 1;
		*node[0x5f2bee58c510] = 2;
		*node[0x5f2bee58c540] = 3;
		*node[0x5f2bee58c570] = ;;
		*node[0x5f2bee58c5a0] = 5;
		*node[0x5f2bee58c5d0] = 1;
		*node[0x5f2bee58c600] = 2;
		*node[0x5f2bee58c630] = ;;
		*node[0x5f2bee58c660] = =;
		*node[0x5f2bee58c690] = 7;
		*node[0x5f2bee58c6c0] = -;
		*node[0x5f2bee58c6f0] = 0;
		*node[0x5f2bee58c720] = 1;
		*node[0x5f2bee58c750] = ;;
		*node[0x5f2bee58c780] = =;
		*node[0x5f2bee58c7b0] = 8;
		*node[0x5f2bee58c7e0] = 1;
		*node[0x5f2bee58c810] = ;;
		*node[0x5f2bee58c840] = =;
		*node[0x5f2bee58c870] = 9;
		*node[0x5f2bee58c8a0] = 1000;
		*node[0x5f2bee58c8d0] = ;;
		*node[0x5f2bee58c900] = if;
		*node[0x5f2bee58c930] = op_no;
		*node[0x5f2bee58c960] = ==;
		*node[0x5f2bee58c990] = 1;
		*node[0x5f2bee58c9c0] = 0;
		*node[0x5f2bee58c9f0] = ;;
		*node[0x5f2bee58ca20] = if;
		*node[0x5f2bee58ca50] = op_no;
		*node[0x5f2bee58ca80] = ==;
		*node[0x5f2bee58cab0] = 2;
		*node[0x5f2bee58cae0] = 0;
		*node[0x5f2bee58cb10] = ;;
		*node[0x5f2bee58cb40] = print;
		*node[0x5f2bee58cb70] = 9;
		*node[0x5f2bee58cba0] = ;;
		*node[0x5f2bee58cbd0] = print;
		*node[0x5f2bee58cc00] = 7;
		*node[0x5f2bee58cc30] = ;;
		*node[0x5f2bee58cc60] = =;
		*node[0x5f2bee58cc90] = 10;
		*node[0x5f2bee58ccc0] = /;
		*node[0x5f2bee58ccf0] = -;
		*node[0x5f2bee58cd20] = 0;
		*node[0x5f2bee58cd50] = 2;
		*node[0x5f2bee58cd80] = 1;
		*node[0x5f2bee58cdb0] = ;;
		*node[0x5f2bee58cde0] = print;
		*node[0x5f2bee58ce10] = 8;
		*node[0x5f2bee58ce40] = ;;
		*node[0x5f2bee58ce70] = print;
		*node[0x5f2bee58cea0] = 10;
		*node[0x5f2bee58ced0] = ;;
		*node[0x5f2bee58cf00] = return;
		*node[0x5f2bee58cf30] = 0;
		*node[0x5f2bee58cf60] = ;;
		*node[0x5f2bee58cf90] = 6;
		*node[0x5f2bee58cfc0] = 1;
		*node[0x5f2bee58cff0] = 2;
		*node[0x5f2bee58d020] = 3;
		*node[0x5f2bee58d050] = ;;
		*node[0x5f2bee58d080] = =;
		*node[0x5f2bee58d0b0] = 7;
		*node[0x5f2bee58d0e0] = -;
		*node[0x5f2bee58d110] = 0;
		*node[0x5f2bee58d140] = 1;
		*node[0x5f2bee58d170] = ;;
		*node[0x5f2bee58d1a0] = =;
		*node[0x5f2bee58d1d0] = 8;
		*node[0x5f2bee58d200] = 1;
		*node[0x5f2bee58d230] = ;;
		*node[0x5f2bee58d260] = =;
		*node[0x5f2bee58d290] = 11;
		*node[0x5f2bee58d2c0] = 2;
		*node[0x5f2bee58d2f0] = ;;
		*node[0x5f2bee58d320] = if;
		*node[0x5f2bee58d350] = op_no;
		*node[0x5f2bee58d380] = ==;
		*node[0x5f2bee58d3b0] = 3;
		*node[0x5f2bee58d3e0] = 0;
		*node[0x5f2bee58d410] = ;;
		*node[0x5f2bee58d440] = =;
		*node[0x5f2bee58d470] = 12;
		*node[0x5f2bee58d4a0] = 0;
		*node[0x5f2bee58d4d0] = ;;
		*node[0x5f2bee58d500] = =;
		*node[0x5f2bee58d530] = 13;
		*node[0x5f2bee58d560] = /;
		*node[0x5f2bee58d590] = -;
		*node[0x5f2bee58d5c0] = 0;
		*node[0x5f2bee58d5f0] = 2;
		*node[0x5f2bee58d620] = 1;
		*node[0x5f2bee58d650] = ;;
		*node[0x5f2bee58d680] = print;
		*node[0x5f2bee58d6b0] = 11;
		*node[0x5f2bee58d6e0] = ;;
		*node[0x5f2bee58d710] = print;
		*node[0x5f2bee58d740] = 12;
		*node[0x5f2bee58d770] = 13;
		*node[0x5f2bee58d7a0] = ;;
		*node[0x5f2bee58d7d0] = =;
		*node[0x5f2bee58d800] = 14;
		*node[0x5f2bee58d830] = -;
		*node[0x5f2bee58d860] = *;
		*node[0x5f2bee58d890] = 2;
		*node[0x5f2bee58d8c0] = 2;
		*node[0x5f2bee58d8f0] = *;
		*node[0x5f2bee58d920] = *;
		*node[0x5f2bee58d950] = 4;
		*node[0x5f2bee58d980] = 1;
		*node[0x5f2bee58d9b0] = 3;
		*node[0x5f2bee58d9e0] = ;;
		*node[0x5f2bee58da10] = if;
		*node[0x5f2bee58da40] = op_no;
		*node[0x5f2bee58da70] = >;
		*node[0x5f2bee58daa0] = 14;
		*node[0x5f2bee58dad0] = 0;
		*node[0x5f2bee58db00] = ;;
		*node[0x5f2bee58db30] = =;
		*node[0x5f2bee58db60] = 15;
		*node[0x5f2bee58db90] = sqrt;
		*node[0x5f2bee58dbc0] = 1;
		*node[0x5f2bee58dbf0] = 14;
		*node[0x5f2bee58dc20] = ;;
		*node[0x5f2bee58dc50] = =;
		*node[0x5f2bee58dc80] = 12;
		*node[0x5f2bee58dcb0] = /;
		*node[0x5f2bee58dce0] = -;
		*node[0x5f2bee58dd10] = -;
		*node[0x5f2bee58dd40] = 0;
		*node[0x5f2bee58dd70] = 2;
		*node[0x5f2bee58dda0] = 15;
		*node[0x5f2bee58ddd0] = *;
		*node[0x5f2bee58de00] = 2;
		*node[0x5f2bee58de30] = 1;
		*node[0x5f2bee58de60] = ;;
		*node[0x5f2bee58de90] = =;
		*node[0x5f2bee58dec0] = 13;
		*node[0x5f2bee58def0] = /;
		*node[0x5f2bee58df20] = +;
		*node[0x5f2bee58df50] = -;
		*node[0x5f2bee58df80] = 0;
		*node[0x5f2bee58dfb0] = 2;
		*node[0x5f2bee58dfe0] = 15;
		*node[0x5f2bee58e010] = *;
		*node[0x5f2bee58e040] = 2;
		*node[0x5f2bee58e070] = 1;
		*node[0x5f2bee58e0a0] = ;;
		*node[0x5f2bee58e0d0] = print;
		*node[0x5f2bee58e100] = 11;
		*node[0x5f2bee58e130] = ;;
		*node[0x5f2bee58e160] = print;
		*node[0x5f2bee58e190] = 12;
		*node[0x5f2bee58e1c0] = 13;
		*node[0x5f2bee58e1f0] = if;
		*node[0x5f2bee58e220] = op_no;
		*node[0x5f2bee58e250] = ==;
		*node[0x5f2bee58e280] = 14;
		*node[0x5f2bee58e2b0] = 0;
		*node[0x5f2bee58e2e0] = ;;
		*node[0x5f2bee58e310] = =;
		*node[0x5f2bee58e340] = 10;
		*node[0x5f2bee58e370] = /;
		*node[0x5f2bee58e3a0] = -;
		*node[0x5f2bee58e3d0] = 0;
		*node[0x5f2bee58e400] = 2;
		*node[0x5f2bee58e430] = *;
		*node[0x5f2bee58e460] = 2;
		*node[0x5f2bee58e490] = 1;
		*node[0x5f2bee58e4c0] = ;;
		*node[0x5f2bee58e4f0] = print;
		*node[0x5f2bee58e520] = 8;
		*node[0x5f2bee58e550] = ;;
		*node[0x5f2bee58e580] = print;
		*node[0x5f2bee58e5b0] = 10;
		*node[0x5f2bee58e5e0] = ;;
		*node[0x5f2bee58e610] = print;
		*node[0x5f2bee58e640] = 7;
		*node[0x5f2bee58e670] = ;;
		*node[0x5f2bee58e6a0] = return;
		*node[0x5f2bee58e6d0] = 0;
		*node[0x5f2bee58e700] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc5a6308b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58441e850800] = ;;
		*node[0x58441e850830] = 0;
		*node[0x58441e850860] = ;;
		*node[0x58441e850890] = input;
		*node[0x58441e8508c0] = 1;
		*node[0x58441e8508f0] = 2;
		*node[0x58441e850920] = 3;
		*node[0x58441e850950] = ;;
		*node[0x58441e8509b0] = 1;
		*node[0x58441e8509e0] = 2;
		*node[0x58441e850a10] = 3;
		*node[0x58441e850a40] = ;;
		*node[0x58441e850a70] = 4;
		*node[0x58441e850aa0] = 1;
		*node[0x58441e850ad0] = 2;
		*node[0x58441e850b00] = 3;
		*node[0x58441e850b30] = ;;
		*node[0x58441e850b60] = if;
		*node[0x58441e850b90] = op_no;
		*node[0x58441e850bc0] = ==;
		*node[0x58441e850bf0] = 1;
		*node[0x58441e850c20] = 0;
		*node[0x58441e850c50] = ;;
		*node[0x58441e850cb0] = 2;
		*node[0x58441e850ce0] = 3;
		*node[0x58441e850d10] = ;;
		*node[0x58441e850d70] = 1;
		*node[0x58441e850da0] = 2;
		*node[0x58441e850dd0] = 3;
		*node[0x58441e850e00] = ;;
		*node[0x58441e850e30] = 5;
		*node[0x58441e850e60] = 1;
		*node[0x58441e850e90] = 2;
		*node[0x58441e850ec0] = ;;
		*node[0x58441e850ef0] = =;
		*node[0x58441e850f20] = 7;
		*node[0x58441e850f50] = -;
		*node[0x58441e850f80] = 0;
		*node[0x58441e850fb0] = 1;
		*node[0x58441e850fe0] = ;;
		*node[0x58441e851010] = =;
		*node[0x58441e851040] = 8;
		*node[0x58441e851070] = 1;
		*node[0x58441e8510a0] = ;;
		*node[0x58441e8510d0] = =;
		*node[0x58441e851100] = 9;
		*node[0x58441e851130] = 1000;
		*node[0x58441e851160] = ;;
		*node[0x58441e851190] = if;
		*node[0x58441e8511c0] = op_no;
		*node[0x58441e8511f0] = ==;
		*node[0x58441e851220] = 1;
		*node[0x58441e851250] = 0;
		*node[0x58441e851280] = ;;
		*node[0x58441e8512b0] = if;
		*node[0x58441e8512e0] = op_no;
		*node[0x58441e851310] = ==;
		*node[0x58441e851340] = 2;
		*node[0x58441e851370] = 0;
		*node[0x58441e8513a0] = ;;
		*node[0x58441e8513d0] = print;
		*node[0x58441e851400] = 9;
		*node[0x58441e851430] = ;;
		*node[0x58441e851460] = print;
		*node[0x58441e851490] = 7;
		*node[0x58441e8514c0] = ;;
		*node[0x58441e8514f0] = =;
		*node[0x58441e851520] = 10;
		*node[0x58441e851550] = /;
		*node[0x58441e851580] = -;
		*node[0x58441e8515b0] = 0;
		*node[0x58441e8515e0] = 2;
		*node[0x58441e851610] = 1;
		*node[0x58441e851640] = ;;
		*node[0x58441e851670] = print;
		*node[0x58441e8516a0] = 8;
		*node[0x58441e8516d0] = ;;
		*node[0x58441e851700] = print;
		*node[0x58441e851730] = 10;
		*node[0x58441e851760] = ;;
		*node[0x58441e851790] = return;
		*node[0x58441e8517c0] = 0;
		*node[0x58441e8517f0] = ;;
		*node[0x58441e851820] = 6;
		*node[0x58441e851850] = 1;
		*node[0x58441e851880] = 2;
		*node[0x58441e8518b0] = 3;
		*node[0x58441e8518e0] = ;;
		*node[0x58441e851910] = =;
		*node[0x58441e851940] = 7;
		*node[0x58441e851970] = -;
		*node[0x58441e8519a0] = 0;
		*node[0x58441e8519d0] = 1;
		*node[0x58441e851a00] = ;;
		*node[0x58441e851a30] = =;
		*node[0x58441e851a60] = 8;
		*node[0x58441e851a90] = 1;
		*node[0x58441e851ac0] = ;;
		*node[0x58441e851af0] = =;
		*node[0x58441e851b20] = 11;
		*node[0x58441e851b50] = 2;
		*node[0x58441e851b80] = ;;
		*node[0x58441e851bb0] = if;
		*node[0x58441e851be0] = op_no;
		*node[0x58441e851c10] = ==;
		*node[0x58441e851c40] = 3;
		*node[0x58441e851c70] = 0;
		*node[0x58441e851ca0] = ;;
		*node[0x58441e851cd0] = =;
		*node[0x58441e851d00] = 12;
		*node[0x58441e851d30] = 0;
		*node[0x58441e851d60] = ;;
		*node[0x58441e851d90] = =;
		*node[0x58441e851dc0] = 13;
		*node[0x58441e851df0] = /;
		*node[0x58441e851e20] = -;
		*node[0x58441e851e50] = 0;
		*node[0x58441e851e80] = 2;
		*node[0x58441e851eb0] = 1;
		*node[0x58441e851ee0] = ;;
		*node[0x58441e851f10] = print;
		*node[0x58441e851f40] = 11;
		*node[0x58441e851f70] = ;;
		*node[0x58441e851fa0] = print;
		*node[0x58441e851fd0] = 12;
		*node[0x58441e852000] = 13;
		*node[0x58441e852030] = ;;
		*node[0x58441e852060] = =;
		*node[0x58441e852090] = 14;
		*node[0x58441e8520c0] = -;
		*node[0x58441e8520f0] = *;
		*node[0x58441e852120] = 2;
		*node[0x58441e852150] = 2;
		*node[0x58441e852180] = *;
		*node[0x58441e8521b0] = *;
		*node[0x58441e8521e0] = 4;
		*node[0x58441e852210] = 1;
		*node[0x58441e852240] = 3;
		*node[0x58441e852270] = ;;
		*node[0x58441e8522a0] = if;
		*node[0x58441e8522d0] = op_no;
		*node[0x58441e852300] = >;
		*node[0x58441e852330] = 14;
		*node[0x58441e852360] = 0;
		*node[0x58441e852390] = ;;
		*node[0x58441e8523c0] = =;
		*node[0x58441e8523f0] = 15;
		*node[0x58441e852420] = sqrt;
		*node[0x58441e852450] = 1;
		*node[0x58441e852480] = 14;
		*node[0x58441e8524b0] = ;;
		*node[0x58441e8524e0] = =;
		*node[0x58441e852510] = 12;
		*node[0x58441e852540] = /;
		*node[0x58441e852570] = -;
		*node[0x58441e8525a0] = -;
		*node[0x58441e8525d0] = 0;
		*node[0x58441e852600] = 2;
		*node[0x58441e852630] = 15;
		*node[0x58441e852660] = *;
		*node[0x58441e852690] = 2;
		*node[0x58441e8526c0] = 1;
		*node[0x58441e8526f0] = ;;
		*node[0x58441e852720] = =;
		*node[0x58441e852750] = 13;
		*node[0x58441e852780] = /;
		*node[0x58441e8527b0] = +;
		*node[0x58441e8527e0] = -;
		*node[0x58441e852810] = 0;
		*node[0x58441e852840] = 2;
		*node[0x58441e852870] = 15;
		*node[0x58441e8528a0] = *;
		*node[0x58441e8528d0] = 2;
		*node[0x58441e852900] = 1;
		*node[0x58441e852930] = ;;
		*node[0x58441e852960] = print;
		*node[0x58441e852990] = 11;
		*node[0x58441e8529c0] = ;;
		*node[0x58441e8529f0] = print;
		*node[0x58441e852a20] = 12;
		*node[0x58441e852a50] = 13;
		*node[0x58441e852a80] = if;
		*node[0x58441e852ab0] = op_no;
		*node[0x58441e852ae0] = ==;
		*node[0x58441e852b10] = 14;
		*node[0x58441e852b40] = 0;
		*node[0x58441e852b70] = ;;
		*node[0x58441e852ba0] = =;
		*node[0x58441e852bd0] = 10;
		*node[0x58441e852c00] = /;
		*node[0x58441e852c30] = -;
		*node[0x58441e852c60] = 0;
		*node[0x58441e852c90] = 2;
		*node[0x58441e852cc0] = *;
		*node[0x58441e852cf0] = 2;
		*node[0x58441e852d20] = 1;
		*node[0x58441e852d50] = ;;
		*node[0x58441e852d80] = print;
		*node[0x58441e852db0] = 8;
		*node[0x58441e852de0] = ;;
		*node[0x58441e852e10] = print;
		*node[0x58441e852e40] = 10;
		*node[0x58441e852e70] = ;;
		*node[0x58441e852ea0] = print;
		*node[0x58441e852ed0] = 7;
		*node[0x58441e852f00] = ;;
		*node[0x58441e852f30] = return;
		*node[0x58441e852f60] = 0;
		*node[0x58441e852f90] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcdfd108c0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5c888236f090] = ;;
		*node[0x5c888236f0c0] = 0;
		*node[0x5c888236f0f0] = ;;
		*node[0x5c888236f120] = input;
		*node[0x5c888236f150] = 1;
		*node[0x5c888236f180] = 2;
		*node[0x5c888236f1b0] = 3;
		*node[0x5c888236f1e0] = ;;
		*node[0x5c888236f240] = 1;
		*node[0x5c888236f270] = 2;
		*node[0x5c888236f2a0] = 3;
		*node[0x5c888236f2d0] = ;;
		*node[0x5c888236f300] = 4;
		*node[0x5c888236f330] = 1;
		*node[0x5c888236f360] = 2;
		*node[0x5c888236f390] = 3;
		*node[0x5c888236f3c0] = ;;
		*node[0x5c888236f3f0] = if;
		*node[0x5c888236f420] = op_no;
		*node[0x5c888236f450] = ==;
		*node[0x5c888236f480] = 1;
		*node[0x5c888236f4b0] = 0;
		*node[0x5c888236f4e0] = ;;
		*node[0x5c888236f540] = 2;
		*node[0x5c888236f570] = 3;
		*node[0x5c888236f5a0] = ;;
		*node[0x5c888236f600] = 1;
		*node[0x5c888236f630] = 2;
		*node[0x5c888236f660] = 3;
		*node[0x5c888236f690] = ;;
		*node[0x5c888236f6c0] = 5;
		*node[0x5c888236f6f0] = 1;
		*node[0x5c888236f720] = 2;
		*node[0x5c888236f750] = ;;
		*node[0x5c888236f780] = =;
		*node[0x5c888236f7b0] = 7;
		*node[0x5c888236f7e0] = -;
		*node[0x5c888236f810] = 0;
		*node[0x5c888236f840] = 1;
		*node[0x5c888236f870] = ;;
		*node[0x5c888236f8a0] = =;
		*node[0x5c888236f8d0] = 8;
		*node[0x5c888236f900] = 1;
		*node[0x5c888236f930] = ;;
		*node[0x5c888236f960] = =;
		*node[0x5c888236f990] = 9;
		*node[0x5c888236f9c0] = 1000;
		*node[0x5c888236f9f0] = ;;
		*node[0x5c888236fa20] = if;
		*node[0x5c888236fa50] = op_no;
		*node[0x5c888236fa80] = ==;
		*node[0x5c888236fab0] = 1;
		*node[0x5c888236fae0] = 0;
		*node[0x5c888236fb10] = ;;
		*node[0x5c888236fb40] = if;
		*node[0x5c888236fb70] = op_no;
		*node[0x5c888236fba0] = ==;
		*node[0x5c888236fbd0] = 2;
		*node[0x5c888236fc00] = 0;
		*node[0x5c888236fc30] = ;;
		*node[0x5c888236fc60] = print;
		*node[0x5c888236fc90] = 9;
		*node[0x5c888236fcc0] = ;;
		*node[0x5c888236fcf0] = print;
		*node[0x5c888236fd20] = 7;
		*node[0x5c888236fd50] = ;;
		*node[0x5c888236fd80] = =;
		*node[0x5c888236fdb0] = 10;
		*node[0x5c888236fde0] = /;
		*node[0x5c888236fe10] = -;
		*node[0x5c888236fe40] = 0;
		*node[0x5c888236fe70] = 2;
		*node[0x5c888236fea0] = 1;
		*node[0x5c888236fed0] = ;;
		*node[0x5c888236ff00] = print;
		*node[0x5c888236ff30] = 8;
		*node[0x5c888236ff60] = ;;
		*node[0x5c888236ff90] = print;
		*node[0x5c888236ffc0] = 10;
		*node[0x5c888236fff0] = ;;
		*node[0x5c8882370020] = return;
		*node[0x5c8882370050] = 0;
		*node[0x5c8882370080] = ;;
		*node[0x5c88823700b0] = 6;
		*node[0x5c88823700e0] = 1;
		*node[0x5c8882370110] = 2;
		*node[0x5c8882370140] = 3;
		*node[0x5c8882370170] = ;;
		*node[0x5c88823701a0] = =;
		*node[0x5c88823701d0] = 7;
		*node[0x5c8882370200] = -;
		*node[0x5c8882370230] = 0;
		*node[0x5c8882370260] = 1;
		*node[0x5c8882370290] = ;;
		*node[0x5c88823702c0] = =;
		*node[0x5c88823702f0] = 8;
		*node[0x5c8882370320] = 1;
		*node[0x5c8882370350] = ;;
		*node[0x5c8882370380] = =;
		*node[0x5c88823703b0] = 11;
		*node[0x5c88823703e0] = 2;
		*node[0x5c8882370410] = ;;
		*node[0x5c8882370440] = if;
		*node[0x5c8882370470] = op_no;
		*node[0x5c88823704a0] = ==;
		*node[0x5c88823704d0] = 3;
		*node[0x5c8882370500] = 0;
		*node[0x5c8882370530] = ;;
		*node[0x5c8882370560] = =;
		*node[0x5c8882370590] = 12;
		*node[0x5c88823705c0] = 0;
		*node[0x5c88823705f0] = ;;
		*node[0x5c8882370620] = =;
		*node[0x5c8882370650] = 13;
		*node[0x5c8882370680] = /;
		*node[0x5c88823706b0] = -;
		*node[0x5c88823706e0] = 0;
		*node[0x5c8882370710] = 2;
		*node[0x5c8882370740] = 1;
		*node[0x5c8882370770] = ;;
		*node[0x5c88823707a0] = print;
		*node[0x5c88823707d0] = 11;
		*node[0x5c8882370800] = ;;
		*node[0x5c8882370830] = print;
		*node[0x5c8882370860] = 12;
		*node[0x5c8882370890] = 13;
		*node[0x5c88823708c0] = ;;
		*node[0x5c88823708f0] = =;
		*node[0x5c8882370920] = 14;
		*node[0x5c8882370950] = -;
		*node[0x5c8882370980] = *;
		*node[0x5c88823709b0] = 2;
		*node[0x5c88823709e0] = 2;
		*node[0x5c8882370a10] = *;
		*node[0x5c8882370a40] = *;
		*node[0x5c8882370a70] = 4;
		*node[0x5c8882370aa0] = 1;
		*node[0x5c8882370ad0] = 3;
		*node[0x5c8882370b00] = ;;
		*node[0x5c8882370b30] = if;
		*node[0x5c8882370b60] = op_no;
		*node[0x5c8882370b90] = >;
		*node[0x5c8882370bc0] = 14;
		*node[0x5c8882370bf0] = 0;
		*node[0x5c8882370c20] = ;;
		*node[0x5c8882370c50] = =;
		*node[0x5c8882370c80] = 15;
		*node[0x5c8882370cb0] = sqrt;
		*node[0x5c8882370ce0] = 1;
		*node[0x5c8882370d10] = 14;
		*node[0x5c8882370d40] = ;;
		*node[0x5c8882370d70] = =;
		*node[0x5c8882370da0] = 12;
		*node[0x5c8882370dd0] = /;
		*node[0x5c8882370e00] = -;
		*node[0x5c8882370e30] = -;
		*node[0x5c8882370e60] = 0;
		*node[0x5c8882370e90] = 2;
		*node[0x5c8882370ec0] = 15;
		*node[0x5c8882370ef0] = *;
		*node[0x5c8882370f20] = 2;
		*node[0x5c8882370f50] = 1;
		*node[0x5c8882370f80] = ;;
		*node[0x5c8882370fb0] = =;
		*node[0x5c8882370fe0] = 13;
		*node[0x5c8882371010] = /;
		*node[0x5c8882371040] = +;
		*node[0x5c8882371070] = -;
		*node[0x5c88823710a0] = 0;
		*node[0x5c88823710d0] = 2;
		*node[0x5c8882371100] = 15;
		*node[0x5c8882371130] = *;
		*node[0x5c8882371160] = 2;
		*node[0x5c8882371190] = 1;
		*node[0x5c88823711c0] = ;;
		*node[0x5c88823711f0] = print;
		*node[0x5c8882371220] = 11;
		*node[0x5c8882371250] = ;;
		*node[0x5c8882371280] = print;
		*node[0x5c88823712b0] = 12;
		*node[0x5c88823712e0] = 13;
		*node[0x5c8882371310] = if;
		*node[0x5c8882371340] = op_no;
		*node[0x5c8882371370] = ==;
		*node[0x5c88823713a0] = 14;
		*node[0x5c88823713d0] = 0;
		*node[0x5c8882371400] = ;;
		*node[0x5c8882371430] = =;
		*node[0x5c8882371460] = 10;
		*node[0x5c8882371490] = /;
		*node[0x5c88823714c0] = -;
		*node[0x5c88823714f0] = 0;
		*node[0x5c8882371520] = 2;
		*node[0x5c8882371550] = *;
		*node[0x5c8882371580] = 2;
		*node[0x5c88823715b0] = 1;
		*node[0x5c88823715e0] = ;;
		*node[0x5c8882371610] = print;
		*node[0x5c8882371640] = 8;
		*node[0x5c8882371670] = ;;
		*node[0x5c88823716a0] = print;
		*node[0x5c88823716d0] = 10;
		*node[0x5c8882371700] = ;;
		*node[0x5c8882371730] = print;
		*node[0x5c8882371760] = 7;
		*node[0x5c8882371790] = ;;
		*node[0x5c88823717c0] = return;
		*node[0x5c88823717f0] = 0;
		*node[0x5c8882371820] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffee6b776d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6419942cb930] = ;;
		*node[0x6419942cb960] = 0;
		*node[0x6419942cb990] = ;;
		*node[0x6419942cb9c0] = input;
		*node[0x6419942cb9f0] = 1;
		*node[0x6419942cba20] = 2;
		*node[0x6419942cba50] = 3;
		*node[0x6419942cba80] = ;;
		*node[0x6419942cbae0] = 1;
		*node[0x6419942cbb10] = 2;
		*node[0x6419942cbb40] = 3;
		*node[0x6419942cbb70] = ;;
		*node[0x6419942cbba0] = 4;
		*node[0x6419942cbbd0] = 1;
		*node[0x6419942cbc00] = 2;
		*node[0x6419942cbc30] = 3;
		*node[0x6419942cbc60] = ;;
		*node[0x6419942cbc90] = if;
		*node[0x6419942cbcc0] = op_no;
		*node[0x6419942cbcf0] = ==;
		*node[0x6419942cbd20] = 1;
		*node[0x6419942cbd50] = 0;
		*node[0x6419942cbd80] = ;;
		*node[0x6419942cbde0] = 2;
		*node[0x6419942cbe10] = 3;
		*node[0x6419942cbe40] = ;;
		*node[0x6419942cbea0] = 1;
		*node[0x6419942cbed0] = 2;
		*node[0x6419942cbf00] = 3;
		*node[0x6419942cbf30] = ;;
		*node[0x6419942cbf60] = 5;
		*node[0x6419942cbf90] = 1;
		*node[0x6419942cbfc0] = 2;
		*node[0x6419942cbff0] = ;;
		*node[0x6419942cc020] = =;
		*node[0x6419942cc050] = 7;
		*node[0x6419942cc080] = -;
		*node[0x6419942cc0b0] = 0;
		*node[0x6419942cc0e0] = 1;
		*node[0x6419942cc110] = ;;
		*node[0x6419942cc140] = =;
		*node[0x6419942cc170] = 8;
		*node[0x6419942cc1a0] = 1;
		*node[0x6419942cc1d0] = ;;
		*node[0x6419942cc200] = =;
		*node[0x6419942cc230] = 9;
		*node[0x6419942cc260] = 1000;
		*node[0x6419942cc290] = ;;
		*node[0x6419942cc2c0] = if;
		*node[0x6419942cc2f0] = op_no;
		*node[0x6419942cc320] = ==;
		*node[0x6419942cc350] = 1;
		*node[0x6419942cc380] = 0;
		*node[0x6419942cc3b0] = ;;
		*node[0x6419942cc3e0] = if;
		*node[0x6419942cc410] = op_no;
		*node[0x6419942cc440] = ==;
		*node[0x6419942cc470] = 2;
		*node[0x6419942cc4a0] = 0;
		*node[0x6419942cc4d0] = ;;
		*node[0x6419942cc500] = print;
		*node[0x6419942cc530] = 9;
		*node[0x6419942cc560] = ;;
		*node[0x6419942cc590] = print;
		*node[0x6419942cc5c0] = 7;
		*node[0x6419942cc5f0] = ;;
		*node[0x6419942cc620] = =;
		*node[0x6419942cc650] = 10;
		*node[0x6419942cc680] = /;
		*node[0x6419942cc6b0] = -;
		*node[0x6419942cc6e0] = 0;
		*node[0x6419942cc710] = 2;
		*node[0x6419942cc740] = 1;
		*node[0x6419942cc770] = ;;
		*node[0x6419942cc7a0] = print;
		*node[0x6419942cc7d0] = 8;
		*node[0x6419942cc800] = ;;
		*node[0x6419942cc830] = print;
		*node[0x6419942cc860] = 10;
		*node[0x6419942cc890] = ;;
		*node[0x6419942cc8c0] = return;
		*node[0x6419942cc8f0] = 0;
		*node[0x6419942cc920] = ;;
		*node[0x6419942cc950] = 6;
		*node[0x6419942cc980] = 1;
		*node[0x6419942cc9b0] = 2;
		*node[0x6419942cc9e0] = 3;
		*node[0x6419942cca10] = ;;
		*node[0x6419942cca40] = =;
		*node[0x6419942cca70] = 7;
		*node[0x6419942ccaa0] = -;
		*node[0x6419942ccad0] = 0;
		*node[0x6419942ccb00] = 1;
		*node[0x6419942ccb30] = ;;
		*node[0x6419942ccb60] = =;
		*node[0x6419942ccb90] = 8;
		*node[0x6419942ccbc0] = 1;
		*node[0x6419942ccbf0] = ;;
		*node[0x6419942ccc20] = =;
		*node[0x6419942ccc50] = 11;
		*node[0x6419942ccc80] = 2;
		*node[0x6419942cccb0] = ;;
		*node[0x6419942ccce0] = if;
		*node[0x6419942ccd10] = op_no;
		*node[0x6419942ccd40] = ==;
		*node[0x6419942ccd70] = 3;
		*node[0x6419942ccda0] = 0;
		*node[0x6419942ccdd0] = ;;
		*node[0x6419942cce00] = =;
		*node[0x6419942cce30] = 12;
		*node[0x6419942cce60] = 0;
		*node[0x6419942cce90] = ;;
		*node[0x6419942ccec0] = =;
		*node[0x6419942ccef0] = 13;
		*node[0x6419942ccf20] = /;
		*node[0x6419942ccf50] = -;
		*node[0x6419942ccf80] = 0;
		*node[0x6419942ccfb0] = 2;
		*node[0x6419942ccfe0] = 1;
		*node[0x6419942cd010] = ;;
		*node[0x6419942cd040] = print;
		*node[0x6419942cd070] = 11;
		*node[0x6419942cd0a0] = ;;
		*node[0x6419942cd0d0] = print;
		*node[0x6419942cd100] = 12;
		*node[0x6419942cd130] = 13;
		*node[0x6419942cd160] = ;;
		*node[0x6419942cd190] = =;
		*node[0x6419942cd1c0] = 14;
		*node[0x6419942cd1f0] = -;
		*node[0x6419942cd220] = *;
		*node[0x6419942cd250] = 2;
		*node[0x6419942cd280] = 2;
		*node[0x6419942cd2b0] = *;
		*node[0x6419942cd2e0] = *;
		*node[0x6419942cd310] = 4;
		*node[0x6419942cd340] = 1;
		*node[0x6419942cd370] = 3;
		*node[0x6419942cd3a0] = ;;
		*node[0x6419942cd3d0] = if;
		*node[0x6419942cd400] = op_no;
		*node[0x6419942cd430] = >;
		*node[0x6419942cd460] = 14;
		*node[0x6419942cd490] = 0;
		*node[0x6419942cd4c0] = ;;
		*node[0x6419942cd4f0] = =;
		*node[0x6419942cd520] = 15;
		*node[0x6419942cd550] = sqrt;
		*node[0x6419942cd580] = 1;
		*node[0x6419942cd5b0] = 14;
		*node[0x6419942cd5e0] = ;;
		*node[0x6419942cd610] = =;
		*node[0x6419942cd640] = 12;
		*node[0x6419942cd670] = /;
		*node[0x6419942cd6a0] = -;
		*node[0x6419942cd6d0] = -;
		*node[0x6419942cd700] = 0;
		*node[0x6419942cd730] = 2;
		*node[0x6419942cd760] = 15;
		*node[0x6419942cd790] = *;
		*node[0x6419942cd7c0] = 2;
		*node[0x6419942cd7f0] = 1;
		*node[0x6419942cd820] = ;;
		*node[0x6419942cd850] = =;
		*node[0x6419942cd880] = 13;
		*node[0x6419942cd8b0] = /;
		*node[0x6419942cd8e0] = +;
		*node[0x6419942cd910] = -;
		*node[0x6419942cd940] = 0;
		*node[0x6419942cd970] = 2;
		*node[0x6419942cd9a0] = 15;
		*node[0x6419942cd9d0] = *;
		*node[0x6419942cda00] = 2;
		*node[0x6419942cda30] = 1;
		*node[0x6419942cda60] = ;;
		*node[0x6419942cda90] = print;
		*node[0x6419942cdac0] = 11;
		*node[0x6419942cdaf0] = ;;
		*node[0x6419942cdb20] = print;
		*node[0x6419942cdb50] = 12;
		*node[0x6419942cdb80] = 13;
		*node[0x6419942cdbb0] = if;
		*node[0x6419942cdbe0] = op_no;
		*node[0x6419942cdc10] = ==;
		*node[0x6419942cdc40] = 14;
		*node[0x6419942cdc70] = 0;
		*node[0x6419942cdca0] = ;;
		*node[0x6419942cdcd0] = =;
		*node[0x6419942cdd00] = 10;
		*node[0x6419942cdd30] = /;
		*node[0x6419942cdd60] = -;
		*node[0x6419942cdd90] = 0;
		*node[0x6419942cddc0] = 2;
		*node[0x6419942cddf0] = *;
		*node[0x6419942cde20] = 2;
		*node[0x6419942cde50] = 1;
		*node[0x6419942cde80] = ;;
		*node[0x6419942cdeb0] = print;
		*node[0x6419942cdee0] = 8;
		*node[0x6419942cdf10] = ;;
		*node[0x6419942cdf40] = print;
		*node[0x6419942cdf70] = 10;
		*node[0x6419942cdfa0] = ;;
		*node[0x6419942cdfd0] = print;
		*node[0x6419942ce000] = 7;
		*node[0x6419942ce030] = ;;
		*node[0x6419942ce060] = return;
		*node[0x6419942ce090] = 0;
		*node[0x6419942ce0c0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffff7239740] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x59f286ab41c0] = ;;
		*node[0x59f286ab41f0] = 0;
		*node[0x59f286ab4220] = ;;
		*node[0x59f286ab4250] = input;
		*node[0x59f286ab4280] = 1;
		*node[0x59f286ab42b0] = 2;
		*node[0x59f286ab42e0] = 3;
		*node[0x59f286ab4310] = ;;
		*node[0x59f286ab4370] = 1;
		*node[0x59f286ab43a0] = 2;
		*node[0x59f286ab43d0] = 3;
		*node[0x59f286ab4400] = ;;
		*node[0x59f286ab4430] = 4;
		*node[0x59f286ab4460] = 1;
		*node[0x59f286ab4490] = 2;
		*node[0x59f286ab44c0] = 3;
		*node[0x59f286ab44f0] = ;;
		*node[0x59f286ab4520] = if;
		*node[0x59f286ab4550] = op_no;
		*node[0x59f286ab4580] = ==;
		*node[0x59f286ab45b0] = 1;
		*node[0x59f286ab45e0] = 0;
		*node[0x59f286ab4610] = ;;
		*node[0x59f286ab4670] = 2;
		*node[0x59f286ab46a0] = 3;
		*node[0x59f286ab46d0] = ;;
		*node[0x59f286ab4730] = 1;
		*node[0x59f286ab4760] = 2;
		*node[0x59f286ab4790] = 3;
		*node[0x59f286ab47c0] = ;;
		*node[0x59f286ab47f0] = 5;
		*node[0x59f286ab4820] = 1;
		*node[0x59f286ab4850] = 2;
		*node[0x59f286ab4880] = ;;
		*node[0x59f286ab48b0] = =;
		*node[0x59f286ab48e0] = 7;
		*node[0x59f286ab4910] = -;
		*node[0x59f286ab4940] = 0;
		*node[0x59f286ab4970] = 1;
		*node[0x59f286ab49a0] = ;;
		*node[0x59f286ab49d0] = =;
		*node[0x59f286ab4a00] = 8;
		*node[0x59f286ab4a30] = 1;
		*node[0x59f286ab4a60] = ;;
		*node[0x59f286ab4a90] = =;
		*node[0x59f286ab4ac0] = 9;
		*node[0x59f286ab4af0] = 1000;
		*node[0x59f286ab4b20] = ;;
		*node[0x59f286ab4b50] = if;
		*node[0x59f286ab4b80] = op_no;
		*node[0x59f286ab4bb0] = ==;
		*node[0x59f286ab4be0] = 1;
		*node[0x59f286ab4c10] = 0;
		*node[0x59f286ab4c40] = ;;
		*node[0x59f286ab4c70] = if;
		*node[0x59f286ab4ca0] = op_no;
		*node[0x59f286ab4cd0] = ==;
		*node[0x59f286ab4d00] = 2;
		*node[0x59f286ab4d30] = 0;
		*node[0x59f286ab4d60] = ;;
		*node[0x59f286ab4d90] = print;
		*node[0x59f286ab4dc0] = 9;
		*node[0x59f286ab4df0] = ;;
		*node[0x59f286ab4e20] = print;
		*node[0x59f286ab4e50] = 7;
		*node[0x59f286ab4e80] = ;;
		*node[0x59f286ab4eb0] = =;
		*node[0x59f286ab4ee0] = 10;
		*node[0x59f286ab4f10] = /;
		*node[0x59f286ab4f40] = -;
		*node[0x59f286ab4f70] = 0;
		*node[0x59f286ab4fa0] = 2;
		*node[0x59f286ab4fd0] = 1;
		*node[0x59f286ab5000] = ;;
		*node[0x59f286ab5030] = print;
		*node[0x59f286ab5060] = 8;
		*node[0x59f286ab5090] = ;;
		*node[0x59f286ab50c0] = print;
		*node[0x59f286ab50f0] = 10;
		*node[0x59f286ab5120] = ;;
		*node[0x59f286ab5150] = return;
		*node[0x59f286ab5180] = 0;
		*node[0x59f286ab51b0] = ;;
		*node[0x59f286ab51e0] = 6;
		*node[0x59f286ab5210] = 1;
		*node[0x59f286ab5240] = 2;
		*node[0x59f286ab5270] = 3;
		*node[0x59f286ab52a0] = ;;
		*node[0x59f286ab52d0] = =;
		*node[0x59f286ab5300] = 7;
		*node[0x59f286ab5330] = -;
		*node[0x59f286ab5360] = 0;
		*node[0x59f286ab5390] = 1;
		*node[0x59f286ab53c0] = ;;
		*node[0x59f286ab53f0] = =;
		*node[0x59f286ab5420] = 8;
		*node[0x59f286ab5450] = 1;
		*node[0x59f286ab5480] = ;;
		*node[0x59f286ab54b0] = =;
		*node[0x59f286ab54e0] = 11;
		*node[0x59f286ab5510] = 2;
		*node[0x59f286ab5540] = ;;
		*node[0x59f286ab5570] = if;
		*node[0x59f286ab55a0] = op_no;
		*node[0x59f286ab55d0] = ==;
		*node[0x59f286ab5600] = 3;
		*node[0x59f286ab5630] = 0;
		*node[0x59f286ab5660] = ;;
		*node[0x59f286ab5690] = =;
		*node[0x59f286ab56c0] = 12;
		*node[0x59f286ab56f0] = 0;
		*node[0x59f286ab5720] = ;;
		*node[0x59f286ab5750] = =;
		*node[0x59f286ab5780] = 13;
		*node[0x59f286ab57b0] = /;
		*node[0x59f286ab57e0] = -;
		*node[0x59f286ab5810] = 0;
		*node[0x59f286ab5840] = 2;
		*node[0x59f286ab5870] = 1;
		*node[0x59f286ab58a0] = ;;
		*node[0x59f286ab58d0] = print;
		*node[0x59f286ab5900] = 11;
		*node[0x59f286ab5930] = ;;
		*node[0x59f286ab5960] = print;
		*node[0x59f286ab5990] = 12;
		*node[0x59f286ab59c0] = 13;
		*node[0x59f286ab59f0] = ;;
		*node[0x59f286ab5a20] = =;
		*node[0x59f286ab5a50] = 14;
		*node[0x59f286ab5a80] = -;
		*node[0x59f286ab5ab0] = *;
		*node[0x59f286ab5ae0] = 2;
		*node[0x59f286ab5b10] = 2;
		*node[0x59f286ab5b40] = *;
		*node[0x59f286ab5b70] = *;
		*node[0x59f286ab5ba0] = 4;
		*node[0x59f286ab5bd0] = 1;
		*node[0x59f286ab5c00] = 3;
		*node[0x59f286ab5c30] = ;;
		*node[0x59f286ab5c60] = if;
		*node[0x59f286ab5c90] = op_no;
		*node[0x59f286ab5cc0] = >;
		*node[0x59f286ab5cf0] = 14;
		*node[0x59f286ab5d20] = 0;
		*node[0x59f286ab5d50] = ;;
		*node[0x59f286ab5d80] = =;
		*node[0x59f286ab5db0] = 15;
		*node[0x59f286ab5de0] = sqrt;
		*node[0x59f286ab5e10] = 1;
		*node[0x59f286ab5e40] = 14;
		*node[0x59f286ab5e70] = ;;
		*node[0x59f286ab5ea0] = =;
		*node[0x59f286ab5ed0] = 12;
		*node[0x59f286ab5f00] = /;
		*node[0x59f286ab5f30] = -;
		*node[0x59f286ab5f60] = -;
		*node[0x59f286ab5f90] = 0;
		*node[0x59f286ab5fc0] = 2;
		*node[0x59f286ab5ff0] = 15;
		*node[0x59f286ab6020] = *;
		*node[0x59f286ab6050] = 2;
		*node[0x59f286ab6080] = 1;
		*node[0x59f286ab60b0] = ;;
		*node[0x59f286ab60e0] = =;
		*node[0x59f286ab6110] = 13;
		*node[0x59f286ab6140] = /;
		*node[0x59f286ab6170] = +;
		*node[0x59f286ab61a0] = -;
		*node[0x59f286ab61d0] = 0;
		*node[0x59f286ab6200] = 2;
		*node[0x59f286ab6230] = 15;
		*node[0x59f286ab6260] = *;
		*node[0x59f286ab6290] = 2;
		*node[0x59f286ab62c0] = 1;
		*node[0x59f286ab62f0] = ;;
		*node[0x59f286ab6320] = print;
		*node[0x59f286ab6350] = 11;
		*node[0x59f286ab6380] = ;;
		*node[0x59f286ab63b0] = print;
		*node[0x59f286ab63e0] = 12;
		*node[0x59f286ab6410] = 13;
		*node[0x59f286ab6440] = if;
		*node[0x59f286ab6470] = op_no;
		*node[0x59f286ab64a0] = ==;
		*node[0x59f286ab64d0] = 14;
		*node[0x59f286ab6500] = 0;
		*node[0x59f286ab6530] = ;;
		*node[0x59f286ab6560] = =;
		*node[0x59f286ab6590] = 10;
		*node[0x59f286ab65c0] = /;
		*node[0x59f286ab65f0] = -;
		*node[0x59f286ab6620] = 0;
		*node[0x59f286ab6650] = 2;
		*node[0x59f286ab6680] = *;
		*node[0x59f286ab66b0] = 2;
		*node[0x59f286ab66e0] = 1;
		*node[0x59f286ab6710] = ;;
		*node[0x59f286ab6740] = print;
		*node[0x59f286ab6770] = 8;
		*node[0x59f286ab67a0] = ;;
		*node[0x59f286ab67d0] = print;
		*node[0x59f286ab6800] = 10;
		*node[0x59f286ab6830] = ;;
		*node[0x59f286ab6860] = print;
		*node[0x59f286ab6890] = 7;
		*node[0x59f286ab68c0] = ;;
		*node[0x59f286ab68f0] = return;
		*node[0x59f286ab6920] = 0;
		*node[0x59f286ab6950] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff4688a360] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x56ba55235a50] = ;;
		*node[0x56ba55235a80] = 0;
		*node[0x56ba55235ab0] = ;;
		*node[0x56ba55235ae0] = input;
		*node[0x56ba55235b10] = 1;
		*node[0x56ba55235b40] = 2;
		*node[0x56ba55235b70] = 3;
		*node[0x56ba55235ba0] = ;;
		*node[0x56ba55235c00] = 1;
		*node[0x56ba55235c30] = 2;
		*node[0x56ba55235c60] = 3;
		*node[0x56ba55235c90] = ;;
		*node[0x56ba55235cc0] = 4;
		*node[0x56ba55235cf0] = 1;
		*node[0x56ba55235d20] = 2;
		*node[0x56ba55235d50] = 3;
		*node[0x56ba55235d80] = ;;
		*node[0x56ba55235db0] = if;
		*node[0x56ba55235de0] = op_no;
		*node[0x56ba55235e10] = ==;
		*node[0x56ba55235e40] = 1;
		*node[0x56ba55235e70] = 0;
		*node[0x56ba55235ea0] = ;;
		*node[0x56ba55235f00] = 2;
		*node[0x56ba55235f30] = 3;
		*node[0x56ba55235f60] = ;;
		*node[0x56ba55235fc0] = 1;
		*node[0x56ba55235ff0] = 2;
		*node[0x56ba55236020] = 3;
		*node[0x56ba55236050] = ;;
		*node[0x56ba55236080] = 5;
		*node[0x56ba552360b0] = 1;
		*node[0x56ba552360e0] = 2;
		*node[0x56ba55236110] = ;;
		*node[0x56ba55236140] = =;
		*node[0x56ba55236170] = 7;
		*node[0x56ba552361a0] = -;
		*node[0x56ba552361d0] = 0;
		*node[0x56ba55236200] = 1;
		*node[0x56ba55236230] = ;;
		*node[0x56ba55236260] = =;
		*node[0x56ba55236290] = 8;
		*node[0x56ba552362c0] = 1;
		*node[0x56ba552362f0] = ;;
		*node[0x56ba55236320] = =;
		*node[0x56ba55236350] = 9;
		*node[0x56ba55236380] = 1000;
		*node[0x56ba552363b0] = ;;
		*node[0x56ba552363e0] = if;
		*node[0x56ba55236410] = op_no;
		*node[0x56ba55236440] = ==;
		*node[0x56ba55236470] = 1;
		*node[0x56ba552364a0] = 0;
		*node[0x56ba552364d0] = ;;
		*node[0x56ba55236500] = if;
		*node[0x56ba55236530] = op_no;
		*node[0x56ba55236560] = ==;
		*node[0x56ba55236590] = 2;
		*node[0x56ba552365c0] = 0;
		*node[0x56ba552365f0] = ;;
		*node[0x56ba55236620] = print;
		*node[0x56ba55236650] = 9;
		*node[0x56ba55236680] = ;;
		*node[0x56ba552366b0] = print;
		*node[0x56ba552366e0] = 7;
		*node[0x56ba55236710] = ;;
		*node[0x56ba55236740] = =;
		*node[0x56ba55236770] = 10;
		*node[0x56ba552367a0] = /;
		*node[0x56ba552367d0] = -;
		*node[0x56ba55236800] = 0;
		*node[0x56ba55236830] = 2;
		*node[0x56ba55236860] = 1;
		*node[0x56ba55236890] = ;;
		*node[0x56ba552368c0] = print;
		*node[0x56ba552368f0] = 8;
		*node[0x56ba55236920] = ;;
		*node[0x56ba55236950] = print;
		*node[0x56ba55236980] = 10;
		*node[0x56ba552369b0] = ;;
		*node[0x56ba552369e0] = return;
		*node[0x56ba55236a10] = 0;
		*node[0x56ba55236a40] = ;;
		*node[0x56ba55236a70] = 6;
		*node[0x56ba55236aa0] = 1;
		*node[0x56ba55236ad0] = 2;
		*node[0x56ba55236b00] = 3;
		*node[0x56ba55236b30] = ;;
		*node[0x56ba55236b60] = =;
		*node[0x56ba55236b90] = 7;
		*node[0x56ba55236bc0] = -;
		*node[0x56ba55236bf0] = 0;
		*node[0x56ba55236c20] = 1;
		*node[0x56ba55236c50] = ;;
		*node[0x56ba55236c80] = =;
		*node[0x56ba55236cb0] = 8;
		*node[0x56ba55236ce0] = 1;
		*node[0x56ba55236d10] = ;;
		*node[0x56ba55236d40] = =;
		*node[0x56ba55236d70] = 11;
		*node[0x56ba55236da0] = 2;
		*node[0x56ba55236dd0] = ;;
		*node[0x56ba55236e00] = if;
		*node[0x56ba55236e30] = op_no;
		*node[0x56ba55236e60] = ==;
		*node[0x56ba55236e90] = 3;
		*node[0x56ba55236ec0] = 0;
		*node[0x56ba55236ef0] = ;;
		*node[0x56ba55236f20] = =;
		*node[0x56ba55236f50] = 12;
		*node[0x56ba55236f80] = 0;
		*node[0x56ba55236fb0] = ;;
		*node[0x56ba55236fe0] = =;
		*node[0x56ba55237010] = 13;
		*node[0x56ba55237040] = /;
		*node[0x56ba55237070] = -;
		*node[0x56ba552370a0] = 0;
		*node[0x56ba552370d0] = 2;
		*node[0x56ba55237100] = 1;
		*node[0x56ba55237130] = ;;
		*node[0x56ba55237160] = print;
		*node[0x56ba55237190] = 11;
		*node[0x56ba552371c0] = ;;
		*node[0x56ba552371f0] = print;
		*node[0x56ba55237220] = 12;
		*node[0x56ba55237250] = 13;
		*node[0x56ba55237280] = ;;
		*node[0x56ba552372b0] = =;
		*node[0x56ba552372e0] = 14;
		*node[0x56ba55237310] = -;
		*node[0x56ba55237340] = *;
		*node[0x56ba55237370] = 2;
		*node[0x56ba552373a0] = 2;
		*node[0x56ba552373d0] = *;
		*node[0x56ba55237400] = *;
		*node[0x56ba55237430] = 4;
		*node[0x56ba55237460] = 1;
		*node[0x56ba55237490] = 3;
		*node[0x56ba552374c0] = ;;
		*node[0x56ba552374f0] = if;
		*node[0x56ba55237520] = op_no;
		*node[0x56ba55237550] = >;
		*node[0x56ba55237580] = 14;
		*node[0x56ba552375b0] = 0;
		*node[0x56ba552375e0] = ;;
		*node[0x56ba55237610] = =;
		*node[0x56ba55237640] = 15;
		*node[0x56ba55237670] = sqrt;
		*node[0x56ba552376a0] = 1;
		*node[0x56ba552376d0] = 14;
		*node[0x56ba55237700] = ;;
		*node[0x56ba55237730] = =;
		*node[0x56ba55237760] = 12;
		*node[0x56ba55237790] = /;
		*node[0x56ba552377c0] = -;
		*node[0x56ba552377f0] = -;
		*node[0x56ba55237820] = 0;
		*node[0x56ba55237850] = 2;
		*node[0x56ba55237880] = 15;
		*node[0x56ba552378b0] = *;
		*node[0x56ba552378e0] = 2;
		*node[0x56ba55237910] = 1;
		*node[0x56ba55237940] = ;;
		*node[0x56ba55237970] = =;
		*node[0x56ba552379a0] = 13;
		*node[0x56ba552379d0] = /;
		*node[0x56ba55237a00] = +;
		*node[0x56ba55237a30] = -;
		*node[0x56ba55237a60] = 0;
		*node[0x56ba55237a90] = 2;
		*node[0x56ba55237ac0] = 15;
		*node[0x56ba55237af0] = *;
		*node[0x56ba55237b20] = 2;
		*node[0x56ba55237b50] = 1;
		*node[0x56ba55237b80] = ;;
		*node[0x56ba55237bb0] = print;
		*node[0x56ba55237be0] = 11;
		*node[0x56ba55237c10] = ;;
		*node[0x56ba55237c40] = print;
		*node[0x56ba55237c70] = 12;
		*node[0x56ba55237ca0] = 13;
		*node[0x56ba55237cd0] = if;
		*node[0x56ba55237d00] = op_no;
		*node[0x56ba55237d30] = ==;
		*node[0x56ba55237d60] = 14;
		*node[0x56ba55237d90] = 0;
		*node[0x56ba55237dc0] = ;;
		*node[0x56ba55237df0] = =;
		*node[0x56ba55237e20] = 10;
		*node[0x56ba55237e50] = /;
		*node[0x56ba55237e80] = -;
		*node[0x56ba55237eb0] = 0;
		*node[0x56ba55237ee0] = 2;
		*node[0x56ba55237f10] = *;
		*node[0x56ba55237f40] = 2;
		*node[0x56ba55237f70] = 1;
		*node[0x56ba55237fa0] = ;;
		*node[0x56ba55237fd0] = print;
		*node[0x56ba55238000] = 8;
		*node[0x56ba55238030] = ;;
		*node[0x56ba55238060] = print;
		*node[0x56ba55238090] = 10;
		*node[0x56ba552380c0] = ;;
		*node[0x56ba552380f0] = print;
		*node[0x56ba55238120] = 7;
		*node[0x56ba55238150] = ;;
		*node[0x56ba55238180] = return;
		*node[0x56ba552381b0] = 0;
		*node[0x56ba552381e0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff231c20a0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58d7598312e0] = ;;
		*node[0x58d759831310] = 0;
		*node[0x58d759831340] = ;;
		*node[0x58d759831370] = input;
		*node[0x58d7598313a0] = 1;
		*node[0x58d7598313d0] = 2;
		*node[0x58d759831400] = 3;
		*node[0x58d759831430] = ;;
		*node[0x58d759831490] = 1;
		*node[0x58d7598314c0] = 2;
		*node[0x58d7598314f0] = 3;
		*node[0x58d759831520] = ;;
		*node[0x58d759831550] = 4;
		*node[0x58d759831580] = 1;
		*node[0x58d7598315b0] = 2;
		*node[0x58d7598315e0] = 3;
		*node[0x58d759831610] = ;;
		*node[0x58d759831640] = if;
		*node[0x58d759831670] = op_no;
		*node[0x58d7598316a0] = ==;
		*node[0x58d7598316d0] = 1;
		*node[0x58d759831700] = 0;
		*node[0x58d759831730] = ;;
		*node[0x58d759831790] = 2;
		*node[0x58d7598317c0] = 3;
		*node[0x58d7598317f0] = ;;
		*node[0x58d759831850] = 1;
		*node[0x58d759831880] = 2;
		*node[0x58d7598318b0] = 3;
		*node[0x58d7598318e0] = ;;
		*node[0x58d759831910] = 5;
		*node[0x58d759831940] = 1;
		*node[0x58d759831970] = 2;
		*node[0x58d7598319a0] = ;;
		*node[0x58d7598319d0] = =;
		*node[0x58d759831a00] = 7;
		*node[0x58d759831a30] = -;
		*node[0x58d759831a60] = 0;
		*node[0x58d759831a90] = 1;
		*node[0x58d759831ac0] = ;;
		*node[0x58d759831af0] = =;
		*node[0x58d759831b20] = 8;
		*node[0x58d759831b50] = 1;
		*node[0x58d759831b80] = ;;
		*node[0x58d759831bb0] = =;
		*node[0x58d759831be0] = 9;
		*node[0x58d759831c10] = 1000;
		*node[0x58d759831c40] = ;;
		*node[0x58d759831c70] = if;
		*node[0x58d759831ca0] = op_no;
		*node[0x58d759831cd0] = ==;
		*node[0x58d759831d00] = 1;
		*node[0x58d759831d30] = 0;
		*node[0x58d759831d60] = ;;
		*node[0x58d759831d90] = if;
		*node[0x58d759831dc0] = op_no;
		*node[0x58d759831df0] = ==;
		*node[0x58d759831e20] = 2;
		*node[0x58d759831e50] = 0;
		*node[0x58d759831e80] = ;;
		*node[0x58d759831eb0] = print;
		*node[0x58d759831ee0] = 9;
		*node[0x58d759831f10] = ;;
		*node[0x58d759831f40] = print;
		*node[0x58d759831f70] = 7;
		*node[0x58d759831fa0] = ;;
		*node[0x58d759831fd0] = =;
		*node[0x58d759832000] = 10;
		*node[0x58d759832030] = /;
		*node[0x58d759832060] = -;
		*node[0x58d759832090] = 0;
		*node[0x58d7598320c0] = 2;
		*node[0x58d7598320f0] = 1;
		*node[0x58d759832120] = ;;
		*node[0x58d759832150] = print;
		*node[0x58d759832180] = 8;
		*node[0x58d7598321b0] = ;;
		*node[0x58d7598321e0] = print;
		*node[0x58d759832210] = 10;
		*node[0x58d759832240] = ;;
		*node[0x58d759832270] = return;
		*node[0x58d7598322a0] = 0;
		*node[0x58d7598322d0] = ;;
		*node[0x58d759832300] = 6;
		*node[0x58d759832330] = 1;
		*node[0x58d759832360] = 2;
		*node[0x58d759832390] = 3;
		*node[0x58d7598323c0] = ;;
		*node[0x58d7598323f0] = =;
		*node[0x58d759832420] = 7;
		*node[0x58d759832450] = -;
		*node[0x58d759832480] = 0;
		*node[0x58d7598324b0] = 1;
		*node[0x58d7598324e0] = ;;
		*node[0x58d759832510] = =;
		*node[0x58d759832540] = 8;
		*node[0x58d759832570] = 1;
		*node[0x58d7598325a0] = ;;
		*node[0x58d7598325d0] = =;
		*node[0x58d759832600] = 11;
		*node[0x58d759832630] = 2;
		*node[0x58d759832660] = ;;
		*node[0x58d759832690] = if;
		*node[0x58d7598326c0] = op_no;
		*node[0x58d7598326f0] = ==;
		*node[0x58d759832720] = 3;
		*node[0x58d759832750] = 0;
		*node[0x58d759832780] = ;;
		*node[0x58d7598327b0] = =;
		*node[0x58d7598327e0] = 12;
		*node[0x58d759832810] = 0;
		*node[0x58d759832840] = ;;
		*node[0x58d759832870] = =;
		*node[0x58d7598328a0] = 13;
		*node[0x58d7598328d0] = /;
		*node[0x58d759832900] = -;
		*node[0x58d759832930] = 0;
		*node[0x58d759832960] = 2;
		*node[0x58d759832990] = 1;
		*node[0x58d7598329c0] = ;;
		*node[0x58d7598329f0] = print;
		*node[0x58d759832a20] = 11;
		*node[0x58d759832a50] = ;;
		*node[0x58d759832a80] = print;
		*node[0x58d759832ab0] = 12;
		*node[0x58d759832ae0] = 13;
		*node[0x58d759832b10] = ;;
		*node[0x58d759832b40] = =;
		*node[0x58d759832b70] = 14;
		*node[0x58d759832ba0] = -;
		*node[0x58d759832bd0] = *;
		*node[0x58d759832c00] = 2;
		*node[0x58d759832c30] = 2;
		*node[0x58d759832c60] = *;
		*node[0x58d759832c90] = *;
		*node[0x58d759832cc0] = 4;
		*node[0x58d759832cf0] = 1;
		*node[0x58d759832d20] = 3;
		*node[0x58d759832d50] = ;;
		*node[0x58d759832d80] = if;
		*node[0x58d759832db0] = op_no;
		*node[0x58d759832de0] = >;
		*node[0x58d759832e10] = 14;
		*node[0x58d759832e40] = 0;
		*node[0x58d759832e70] = ;;
		*node[0x58d759832ea0] = =;
		*node[0x58d759832ed0] = 15;
		*node[0x58d759832f00] = sqrt;
		*node[0x58d759832f30] = 1;
		*node[0x58d759832f60] = 14;
		*node[0x58d759832f90] = ;;
		*node[0x58d759832fc0] = =;
		*node[0x58d759832ff0] = 12;
		*node[0x58d759833020] = /;
		*node[0x58d759833050] = -;
		*node[0x58d759833080] = -;
		*node[0x58d7598330b0] = 0;
		*node[0x58d7598330e0] = 2;
		*node[0x58d759833110] = 15;
		*node[0x58d759833140] = *;
		*node[0x58d759833170] = 2;
		*node[0x58d7598331a0] = 1;
		*node[0x58d7598331d0] = ;;
		*node[0x58d759833200] = =;
		*node[0x58d759833230] = 13;
		*node[0x58d759833260] = /;
		*node[0x58d759833290] = +;
		*node[0x58d7598332c0] = -;
		*node[0x58d7598332f0] = 0;
		*node[0x58d759833320] = 2;
		*node[0x58d759833350] = 15;
		*node[0x58d759833380] = *;
		*node[0x58d7598333b0] = 2;
		*node[0x58d7598333e0] = 1;
		*node[0x58d759833410] = ;;
		*node[0x58d759833440] = print;
		*node[0x58d759833470] = 11;
		*node[0x58d7598334a0] = ;;
		*node[0x58d7598334d0] = print;
		*node[0x58d759833500] = 12;
		*node[0x58d759833530] = 13;
		*node[0x58d759833560] = if;
		*node[0x58d759833590] = op_no;
		*node[0x58d7598335c0] = ==;
		*node[0x58d7598335f0] = 14;
		*node[0x58d759833620] = 0;
		*node[0x58d759833650] = ;;
		*node[0x58d759833680] = =;
		*node[0x58d7598336b0] = 10;
		*node[0x58d7598336e0] = /;
		*node[0x58d759833710] = -;
		*node[0x58d759833740] = 0;
		*node[0x58d759833770] = 2;
		*node[0x58d7598337a0] = *;
		*node[0x58d7598337d0] = 2;
		*node[0x58d759833800] = 1;
		*node[0x58d759833830] = ;;
		*node[0x58d759833860] = print;
		*node[0x58d759833890] = 8;
		*node[0x58d7598338c0] = ;;
		*node[0x58d7598338f0] = print;
		*node[0x58d759833920] = 10;
		*node[0x58d759833950] = ;;
		*node[0x58d759833980] = print;
		*node[0x58d7598339b0] = 7;
		*node[0x58d7598339e0] = ;;
		*node[0x58d759833a10] = return;
		*node[0x58d759833a40] = 0;
		*node[0x58d759833a70] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffff0ade9b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x597825604b70] = ;;
		*node[0x597825604ba0] = 0;
		*node[0x597825604bd0] = ;;
		*node[0x597825604c00] = input;
		*node[0x597825604c30] = 1;
		*node[0x597825604c60] = 2;
		*node[0x597825604c90] = 3;
		*node[0x597825604cc0] = ;;
		*node[0x597825604d20] = 1;
		*node[0x597825604d50] = 2;
		*node[0x597825604d80] = 3;
		*node[0x597825604db0] = ;;
		*node[0x597825604de0] = 4;
		*node[0x597825604e10] = 1;
		*node[0x597825604e40] = 2;
		*node[0x597825604e70] = 3;
		*node[0x597825604ea0] = ;;
		*node[0x597825604ed0] = if;
		*node[0x597825604f00] = op_no;
		*node[0x597825604f30] = ==;
		*node[0x597825604f60] = 1;
		*node[0x597825604f90] = 0;
		*node[0x597825604fc0] = ;;
		*node[0x597825605020] = 2;
		*node[0x597825605050] = 3;
		*node[0x597825605080] = ;;
		*node[0x5978256050e0] = 1;
		*node[0x597825605110] = 2;
		*node[0x597825605140] = 3;
		*node[0x597825605170] = ;;
		*node[0x5978256051a0] = 5;
		*node[0x5978256051d0] = 1;
		*node[0x597825605200] = 2;
		*node[0x597825605230] = ;;
		*node[0x597825605260] = =;
		*node[0x597825605290] = 7;
		*node[0x5978256052c0] = -;
		*node[0x5978256052f0] = 0;
		*node[0x597825605320] = 1;
		*node[0x597825605350] = ;;
		*node[0x597825605380] = =;
		*node[0x5978256053b0] = 8;
		*node[0x5978256053e0] = 1;
		*node[0x597825605410] = ;;
		*node[0x597825605440] = =;
		*node[0x597825605470] = 9;
		*node[0x5978256054a0] = 1000;
		*node[0x5978256054d0] = ;;
		*node[0x597825605500] = if;
		*node[0x597825605530] = op_no;
		*node[0x597825605560] = ==;
		*node[0x597825605590] = 1;
		*node[0x5978256055c0] = 0;
		*node[0x5978256055f0] = ;;
		*node[0x597825605620] = if;
		*node[0x597825605650] = op_no;
		*node[0x597825605680] = ==;
		*node[0x5978256056b0] = 2;
		*node[0x5978256056e0] = 0;
		*node[0x597825605710] = ;;
		*node[0x597825605740] = print;
		*node[0x597825605770] = 9;
		*node[0x5978256057a0] = ;;
		*node[0x5978256057d0] = print;
		*node[0x597825605800] = 7;
		*node[0x597825605830] = ;;
		*node[0x597825605860] = =;
		*node[0x597825605890] = 10;
		*node[0x5978256058c0] = /;
		*node[0x5978256058f0] = -;
		*node[0x597825605920] = 0;
		*node[0x597825605950] = 2;
		*node[0x597825605980] = 1;
		*node[0x5978256059b0] = ;;
		*node[0x5978256059e0] = print;
		*node[0x597825605a10] = 8;
		*node[0x597825605a40] = ;;
		*node[0x597825605a70] = print;
		*node[0x597825605aa0] = 10;
		*node[0x597825605ad0] = ;;
		*node[0x597825605b00] = return;
		*node[0x597825605b30] = 0;
		*node[0x597825605b60] = ;;
		*node[0x597825605b90] = 6;
		*node[0x597825605bc0] = 1;
		*node[0x597825605bf0] = 2;
		*node[0x597825605c20] = 3;
		*node[0x597825605c50] = ;;
		*node[0x597825605c80] = =;
		*node[0x597825605cb0] = 7;
		*node[0x597825605ce0] = -;
		*node[0x597825605d10] = 0;
		*node[0x597825605d40] = 1;
		*node[0x597825605d70] = ;;
		*node[0x597825605da0] = =;
		*node[0x597825605dd0] = 8;
		*node[0x597825605e00] = 1;
		*node[0x597825605e30] = ;;
		*node[0x597825605e60] = =;
		*node[0x597825605e90] = 11;
		*node[0x597825605ec0] = 2;
		*node[0x597825605ef0] = ;;
		*node[0x597825605f20] = if;
		*node[0x597825605f50] = op_no;
		*node[0x597825605f80] = ==;
		*node[0x597825605fb0] = 3;
		*node[0x597825605fe0] = 0;
		*node[0x597825606010] = ;;
		*node[0x597825606040] = =;
		*node[0x597825606070] = 12;
		*node[0x5978256060a0] = 0;
		*node[0x5978256060d0] = ;;
		*node[0x597825606100] = =;
		*node[0x597825606130] = 13;
		*node[0x597825606160] = /;
		*node[0x597825606190] = -;
		*node[0x5978256061c0] = 0;
		*node[0x5978256061f0] = 2;
		*node[0x597825606220] = 1;
		*node[0x597825606250] = ;;
		*node[0x597825606280] = print;
		*node[0x5978256062b0] = 11;
		*node[0x5978256062e0] = ;;
		*node[0x597825606310] = print;
		*node[0x597825606340] = 12;
		*node[0x597825606370] = 13;
		*node[0x5978256063a0] = ;;
		*node[0x5978256063d0] = =;
		*node[0x597825606400] = 14;
		*node[0x597825606430] = -;
		*node[0x597825606460] = *;
		*node[0x597825606490] = 2;
		*node[0x5978256064c0] = 2;
		*node[0x5978256064f0] = *;
		*node[0x597825606520] = *;
		*node[0x597825606550] = 4;
		*node[0x597825606580] = 1;
		*node[0x5978256065b0] = 3;
		*node[0x5978256065e0] = ;;
		*node[0x597825606610] = if;
		*node[0x597825606640] = op_no;
		*node[0x597825606670] = >;
		*node[0x5978256066a0] = 14;
		*node[0x5978256066d0] = 0;
		*node[0x597825606700] = ;;
		*node[0x597825606730] = =;
		*node[0x597825606760] = 15;
		*node[0x597825606790] = sqrt;
		*node[0x5978256067c0] = 1;
		*node[0x5978256067f0] = 14;
		*node[0x597825606820] = ;;
		*node[0x597825606850] = =;
		*node[0x597825606880] = 12;
		*node[0x5978256068b0] = /;
		*node[0x5978256068e0] = -;
		*node[0x597825606910] = -;
		*node[0x597825606940] = 0;
		*node[0x597825606970] = 2;
		*node[0x5978256069a0] = 15;
		*node[0x5978256069d0] = *;
		*node[0x597825606a00] = 2;
		*node[0x597825606a30] = 1;
		*node[0x597825606a60] = ;;
		*node[0x597825606a90] = =;
		*node[0x597825606ac0] = 13;
		*node[0x597825606af0] = /;
		*node[0x597825606b20] = +;
		*node[0x597825606b50] = -;
		*node[0x597825606b80] = 0;
		*node[0x597825606bb0] = 2;
		*node[0x597825606be0] = 15;
		*node[0x597825606c10] = *;
		*node[0x597825606c40] = 2;
		*node[0x597825606c70] = 1;
		*node[0x597825606ca0] = ;;
		*node[0x597825606cd0] = print;
		*node[0x597825606d00] = 11;
		*node[0x597825606d30] = ;;
		*node[0x597825606d60] = print;
		*node[0x597825606d90] = 12;
		*node[0x597825606dc0] = 13;
		*node[0x597825606df0] = if;
		*node[0x597825606e20] = op_no;
		*node[0x597825606e50] = ==;
		*node[0x597825606e80] = 14;
		*node[0x597825606eb0] = 0;
		*node[0x597825606ee0] = ;;
		*node[0x597825606f10] = =;
		*node[0x597825606f40] = 10;
		*node[0x597825606f70] = /;
		*node[0x597825606fa0] = -;
		*node[0x597825606fd0] = 0;
		*node[0x597825607000] = 2;
		*node[0x597825607030] = *;
		*node[0x597825607060] = 2;
		*node[0x597825607090] = 1;
		*node[0x5978256070c0] = ;;
		*node[0x5978256070f0] = print;
		*node[0x597825607120] = 8;
		*node[0x597825607150] = ;;
		*node[0x597825607180] = print;
		*node[0x5978256071b0] = 10;
		*node[0x5978256071e0] = ;;
		*node[0x597825607210] = print;
		*node[0x597825607240] = 7;
		*node[0x597825607270] = ;;
		*node[0x5978256072a0] = return;
		*node[0x5978256072d0] = 0;
		*node[0x597825607300] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffa4d6c1f0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5a687c682400] = ;;
		*node[0x5a687c682430] = 0;
		*node[0x5a687c682460] = ;;
		*node[0x5a687c682490] = input;
		*node[0x5a687c6824c0] = 1;
		*node[0x5a687c6824f0] = 2;
		*node[0x5a687c682520] = 3;
		*node[0x5a687c682550] = ;;
		*node[0x5a687c6825b0] = 1;
		*node[0x5a687c6825e0] = 2;
		*node[0x5a687c682610] = 3;
		*node[0x5a687c682640] = ;;
		*node[0x5a687c682670] = 4;
		*node[0x5a687c6826a0] = 1;
		*node[0x5a687c6826d0] = 2;
		*node[0x5a687c682700] = 3;
		*node[0x5a687c682730] = ;;
		*node[0x5a687c682760] = if;
		*node[0x5a687c682790] = op_no;
		*node[0x5a687c6827c0] = ==;
		*node[0x5a687c6827f0] = 1;
		*node[0x5a687c682820] = 0;
		*node[0x5a687c682850] = ;;
		*node[0x5a687c6828b0] = 2;
		*node[0x5a687c6828e0] = 3;
		*node[0x5a687c682910] = ;;
		*node[0x5a687c682970] = 1;
		*node[0x5a687c6829a0] = 2;
		*node[0x5a687c6829d0] = 3;
		*node[0x5a687c682a00] = ;;
		*node[0x5a687c682a30] = 5;
		*node[0x5a687c682a60] = 1;
		*node[0x5a687c682a90] = 2;
		*node[0x5a687c682ac0] = ;;
		*node[0x5a687c682af0] = =;
		*node[0x5a687c682b20] = 7;
		*node[0x5a687c682b50] = -;
		*node[0x5a687c682b80] = 0;
		*node[0x5a687c682bb0] = 1;
		*node[0x5a687c682be0] = ;;
		*node[0x5a687c682c10] = =;
		*node[0x5a687c682c40] = 8;
		*node[0x5a687c682c70] = 1;
		*node[0x5a687c682ca0] = ;;
		*node[0x5a687c682cd0] = =;
		*node[0x5a687c682d00] = 9;
		*node[0x5a687c682d30] = 1000;
		*node[0x5a687c682d60] = ;;
		*node[0x5a687c682d90] = if;
		*node[0x5a687c682dc0] = op_no;
		*node[0x5a687c682df0] = ==;
		*node[0x5a687c682e20] = 1;
		*node[0x5a687c682e50] = 0;
		*node[0x5a687c682e80] = ;;
		*node[0x5a687c682eb0] = if;
		*node[0x5a687c682ee0] = op_no;
		*node[0x5a687c682f10] = ==;
		*node[0x5a687c682f40] = 2;
		*node[0x5a687c682f70] = 0;
		*node[0x5a687c682fa0] = ;;
		*node[0x5a687c682fd0] = print;
		*node[0x5a687c683000] = 9;
		*node[0x5a687c683030] = ;;
		*node[0x5a687c683060] = print;
		*node[0x5a687c683090] = 7;
		*node[0x5a687c6830c0] = ;;
		*node[0x5a687c6830f0] = =;
		*node[0x5a687c683120] = 10;
		*node[0x5a687c683150] = /;
		*node[0x5a687c683180] = -;
		*node[0x5a687c6831b0] = 0;
		*node[0x5a687c6831e0] = 2;
		*node[0x5a687c683210] = 1;
		*node[0x5a687c683240] = ;;
		*node[0x5a687c683270] = print;
		*node[0x5a687c6832a0] = 8;
		*node[0x5a687c6832d0] = ;;
		*node[0x5a687c683300] = print;
		*node[0x5a687c683330] = 10;
		*node[0x5a687c683360] = ;;
		*node[0x5a687c683390] = return;
		*node[0x5a687c6833c0] = 0;
		*node[0x5a687c6833f0] = ;;
		*node[0x5a687c683420] = 6;
		*node[0x5a687c683450] = 1;
		*node[0x5a687c683480] = 2;
		*node[0x5a687c6834b0] = 3;
		*node[0x5a687c6834e0] = ;;
		*node[0x5a687c683510] = =;
		*node[0x5a687c683540] = 7;
		*node[0x5a687c683570] = -;
		*node[0x5a687c6835a0] = 0;
		*node[0x5a687c6835d0] = 1;
		*node[0x5a687c683600] = ;;
		*node[0x5a687c683630] = =;
		*node[0x5a687c683660] = 8;
		*node[0x5a687c683690] = 1;
		*node[0x5a687c6836c0] = ;;
		*node[0x5a687c6836f0] = =;
		*node[0x5a687c683720] = 11;
		*node[0x5a687c683750] = 2;
		*node[0x5a687c683780] = ;;
		*node[0x5a687c6837b0] = if;
		*node[0x5a687c6837e0] = op_no;
		*node[0x5a687c683810] = ==;
		*node[0x5a687c683840] = 3;
		*node[0x5a687c683870] = 0;
		*node[0x5a687c6838a0] = ;;
		*node[0x5a687c6838d0] = =;
		*node[0x5a687c683900] = 12;
		*node[0x5a687c683930] = 0;
		*node[0x5a687c683960] = ;;
		*node[0x5a687c683990] = =;
		*node[0x5a687c6839c0] = 13;
		*node[0x5a687c6839f0] = /;
		*node[0x5a687c683a20] = -;
		*node[0x5a687c683a50] = 0;
		*node[0x5a687c683a80] = 2;
		*node[0x5a687c683ab0] = 1;
		*node[0x5a687c683ae0] = ;;
		*node[0x5a687c683b10] = print;
		*node[0x5a687c683b40] = 11;
		*node[0x5a687c683b70] = ;;
		*node[0x5a687c683ba0] = print;
		*node[0x5a687c683bd0] = 12;
		*node[0x5a687c683c00] = 13;
		*node[0x5a687c683c30] = ;;
		*node[0x5a687c683c60] = =;
		*node[0x5a687c683c90] = 14;
		*node[0x5a687c683cc0] = -;
		*node[0x5a687c683cf0] = *;
		*node[0x5a687c683d20] = 2;
		*node[0x5a687c683d50] = 2;
		*node[0x5a687c683d80] = *;
		*node[0x5a687c683db0] = *;
		*node[0x5a687c683de0] = 4;
		*node[0x5a687c683e10] = 1;
		*node[0x5a687c683e40] = 3;
		*node[0x5a687c683e70] = ;;
		*node[0x5a687c683ea0] = if;
		*node[0x5a687c683ed0] = op_no;
		*node[0x5a687c683f00] = >;
		*node[0x5a687c683f30] = 14;
		*node[0x5a687c683f60] = 0;
		*node[0x5a687c683f90] = ;;
		*node[0x5a687c683fc0] = =;
		*node[0x5a687c683ff0] = 15;
		*node[0x5a687c684020] = sqrt;
		*node[0x5a687c684050] = 1;
		*node[0x5a687c684080] = 14;
		*node[0x5a687c6840b0] = ;;
		*node[0x5a687c6840e0] = =;
		*node[0x5a687c684110] = 12;
		*node[0x5a687c684140] = /;
		*node[0x5a687c684170] = -;
		*node[0x5a687c6841a0] = -;
		*node[0x5a687c6841d0] = 0;
		*node[0x5a687c684200] = 2;
		*node[0x5a687c684230] = 15;
		*node[0x5a687c684260] = *;
		*node[0x5a687c684290] = 2;
		*node[0x5a687c6842c0] = 1;
		*node[0x5a687c6842f0] = ;;
		*node[0x5a687c684320] = =;
		*node[0x5a687c684350] = 13;
		*node[0x5a687c684380] = /;
		*node[0x5a687c6843b0] = +;
		*node[0x5a687c6843e0] = -;
		*node[0x5a687c684410] = 0;
		*node[0x5a687c684440] = 2;
		*node[0x5a687c684470] = 15;
		*node[0x5a687c6844a0] = *;
		*node[0x5a687c6844d0] = 2;
		*node[0x5a687c684500] = 1;
		*node[0x5a687c684530] = ;;
		*node[0x5a687c684560] = print;
		*node[0x5a687c684590] = 11;
		*node[0x5a687c6845c0] = ;;
		*node[0x5a687c6845f0] = print;
		*node[0x5a687c684620] = 12;
		*node[0x5a687c684650] = 13;
		*node[0x5a687c684680] = if;
		*node[0x5a687c6846b0] = op_no;
		*node[0x5a687c6846e0] = ==;
		*node[0x5a687c684710] = 14;
		*node[0x5a687c684740] = 0;
		*node[0x5a687c684770] = ;;
		*node[0x5a687c6847a0] = =;
		*node[0x5a687c6847d0] = 10;
		*node[0x5a687c684800] = /;
		*node[0x5a687c684830] = -;
		*node[0x5a687c684860] = 0;
		*node[0x5a687c684890] = 2;
		*node[0x5a687c6848c0] = *;
		*node[0x5a687c6848f0] = 2;
		*node[0x5a687c684920] = 1;
		*node[0x5a687c684950] = ;;
		*node[0x5a687c684980] = print;
		*node[0x5a687c6849b0] = 8;
		*node[0x5a687c6849e0] = ;;
		*node[0x5a687c684a10] = print;
		*node[0x5a687c684a40] = 10;
		*node[0x5a687c684a70] = ;;
		*node[0x5a687c684aa0] = print;
		*node[0x5a687c684ad0] = 7;
		*node[0x5a687c684b00] = ;;
		*node[0x5a687c684b30] = return;
		*node[0x5a687c684b60] = 0;
		*node[0x5a687c684b90] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffefa0baf90] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x609202253c90] = ;;
		*node[0x609202253cc0] = 0;
		*node[0x609202253cf0] = ;;
		*node[0x609202253d20] = input;
		*node[0x609202253d50] = 1;
		*node[0x609202253d80] = 2;
		*node[0x609202253db0] = 3;
		*node[0x609202253de0] = ;;
		*node[0x609202253e40] = 1;
		*node[0x609202253e70] = 2;
		*node[0x609202253ea0] = 3;
		*node[0x609202253ed0] = ;;
		*node[0x609202253f00] = 4;
		*node[0x609202253f30] = 1;
		*node[0x609202253f60] = 2;
		*node[0x609202253f90] = 3;
		*node[0x609202253fc0] = ;;
		*node[0x609202253ff0] = if;
		*node[0x609202254020] = op_no;
		*node[0x609202254050] = ==;
		*node[0x609202254080] = 1;
		*node[0x6092022540b0] = 0;
		*node[0x6092022540e0] = ;;
		*node[0x609202254140] = 2;
		*node[0x609202254170] = 3;
		*node[0x6092022541a0] = ;;
		*node[0x609202254200] = 1;
		*node[0x609202254230] = 2;
		*node[0x609202254260] = 3;
		*node[0x609202254290] = ;;
		*node[0x6092022542c0] = 5;
		*node[0x6092022542f0] = 1;
		*node[0x609202254320] = 2;
		*node[0x609202254350] = ;;
		*node[0x609202254380] = =;
		*node[0x6092022543b0] = 7;
		*node[0x6092022543e0] = -;
		*node[0x609202254410] = 0;
		*node[0x609202254440] = 1;
		*node[0x609202254470] = ;;
		*node[0x6092022544a0] = =;
		*node[0x6092022544d0] = 8;
		*node[0x609202254500] = 1;
		*node[0x609202254530] = ;;
		*node[0x609202254560] = =;
		*node[0x609202254590] = 9;
		*node[0x6092022545c0] = 1000;
		*node[0x6092022545f0] = ;;
		*node[0x609202254620] = if;
		*node[0x609202254650] = op_no;
		*node[0x609202254680] = ==;
		*node[0x6092022546b0] = 1;
		*node[0x6092022546e0] = 0;
		*node[0x609202254710] = ;;
		*node[0x609202254740] = if;
		*node[0x609202254770] = op_no;
		*node[0x6092022547a0] = ==;
		*node[0x6092022547d0] = 2;
		*node[0x609202254800] = 0;
		*node[0x609202254830] = ;;
		*node[0x609202254860] = print;
		*node[0x609202254890] = 9;
		*node[0x6092022548c0] = ;;
		*node[0x6092022548f0] = print;
		*node[0x609202254920] = 7;
		*node[0x609202254950] = ;;
		*node[0x609202254980] = =;
		*node[0x6092022549b0] = 10;
		*node[0x6092022549e0] = /;
		*node[0x609202254a10] = -;
		*node[0x609202254a40] = 0;
		*node[0x609202254a70] = 2;
		*node[0x609202254aa0] = 1;
		*node[0x609202254ad0] = ;;
		*node[0x609202254b00] = print;
		*node[0x609202254b30] = 8;
		*node[0x609202254b60] = ;;
		*node[0x609202254b90] = print;
		*node[0x609202254bc0] = 10;
		*node[0x609202254bf0] = ;;
		*node[0x609202254c20] = return;
		*node[0x609202254c50] = 0;
		*node[0x609202254c80] = ;;
		*node[0x609202254cb0] = 6;
		*node[0x609202254ce0] = 1;
		*node[0x609202254d10] = 2;
		*node[0x609202254d40] = 3;
		*node[0x609202254d70] = ;;
		*node[0x609202254da0] = =;
		*node[0x609202254dd0] = 7;
		*node[0x609202254e00] = -;
		*node[0x609202254e30] = 0;
		*node[0x609202254e60] = 1;
		*node[0x609202254e90] = ;;
		*node[0x609202254ec0] = =;
		*node[0x609202254ef0] = 8;
		*node[0x609202254f20] = 1;
		*node[0x609202254f50] = ;;
		*node[0x609202254f80] = =;
		*node[0x609202254fb0] = 11;
		*node[0x609202254fe0] = 2;
		*node[0x609202255010] = ;;
		*node[0x609202255040] = if;
		*node[0x609202255070] = op_no;
		*node[0x6092022550a0] = ==;
		*node[0x6092022550d0] = 3;
		*node[0x609202255100] = 0;
		*node[0x609202255130] = ;;
		*node[0x609202255160] = =;
		*node[0x609202255190] = 12;
		*node[0x6092022551c0] = 0;
		*node[0x6092022551f0] = ;;
		*node[0x609202255220] = =;
		*node[0x609202255250] = 13;
		*node[0x609202255280] = /;
		*node[0x6092022552b0] = -;
		*node[0x6092022552e0] = 0;
		*node[0x609202255310] = 2;
		*node[0x609202255340] = 1;
		*node[0x609202255370] = ;;
		*node[0x6092022553a0] = print;
		*node[0x6092022553d0] = 11;
		*node[0x609202255400] = ;;
		*node[0x609202255430] = print;
		*node[0x609202255460] = 12;
		*node[0x609202255490] = 13;
		*node[0x6092022554c0] = ;;
		*node[0x6092022554f0] = =;
		*node[0x609202255520] = 14;
		*node[0x609202255550] = -;
		*node[0x609202255580] = *;
		*node[0x6092022555b0] = 2;
		*node[0x6092022555e0] = 2;
		*node[0x609202255610] = *;
		*node[0x609202255640] = *;
		*node[0x609202255670] = 4;
		*node[0x6092022556a0] = 1;
		*node[0x6092022556d0] = 3;
		*node[0x609202255700] = ;;
		*node[0x609202255730] = if;
		*node[0x609202255760] = op_no;
		*node[0x609202255790] = >;
		*node[0x6092022557c0] = 14;
		*node[0x6092022557f0] = 0;
		*node[0x609202255820] = ;;
		*node[0x609202255850] = =;
		*node[0x609202255880] = 15;
		*node[0x6092022558b0] = sqrt;
		*node[0x6092022558e0] = 1;
		*node[0x609202255910] = 14;
		*node[0x609202255940] = ;;
		*node[0x609202255970] = =;
		*node[0x6092022559a0] = 12;
		*node[0x6092022559d0] = /;
		*node[0x609202255a00] = -;
		*node[0x609202255a30] = -;
		*node[0x609202255a60] = 0;
		*node[0x609202255a90] = 2;
		*node[0x609202255ac0] = 15;
		*node[0x609202255af0] = *;
		*node[0x609202255b20] = 2;
		*node[0x609202255b50] = 1;
		*node[0x609202255b80] = ;;
		*node[0x609202255bb0] = =;
		*node[0x609202255be0] = 13;
		*node[0x609202255c10] = /;
		*node[0x609202255c40] = +;
		*node[0x609202255c70] = -;
		*node[0x609202255ca0] = 0;
		*node[0x609202255cd0] = 2;
		*node[0x609202255d00] = 15;
		*node[0x609202255d30] = *;
		*node[0x609202255d60] = 2;
		*node[0x609202255d90] = 1;
		*node[0x609202255dc0] = ;;
		*node[0x609202255df0] = print;
		*node[0x609202255e20] = 11;
		*node[0x609202255e50] = ;;
		*node[0x609202255e80] = print;
		*node[0x609202255eb0] = 12;
		*node[0x609202255ee0] = 13;
		*node[0x609202255f10] = if;
		*node[0x609202255f40] = op_no;
		*node[0x609202255f70] = ==;
		*node[0x609202255fa0] = 14;
		*node[0x609202255fd0] = 0;
		*node[0x609202256000] = ;;
		*node[0x609202256030] = =;
		*node[0x609202256060] = 10;
		*node[0x609202256090] = /;
		*node[0x6092022560c0] = -;
		*node[0x6092022560f0] = 0;
		*node[0x609202256120] = 2;
		*node[0x609202256150] = *;
		*node[0x609202256180] = 2;
		*node[0x6092022561b0] = 1;
		*node[0x6092022561e0] = ;;
		*node[0x609202256210] = print;
		*node[0x609202256240] = 8;
		*node[0x609202256270] = ;;
		*node[0x6092022562a0] = print;
		*node[0x6092022562d0] = 10;
		*node[0x609202256300] = ;;
		*node[0x609202256330] = print;
		*node[0x609202256360] = 7;
		*node[0x609202256390] = ;;
		*node[0x6092022563c0] = return;
		*node[0x6092022563f0] = 0;
		*node[0x609202256420] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc2168a8a0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5b5dfe072520] = ;;
		*node[0x5b5dfe072550] = 0;
		*node[0x5b5dfe072580] = ;;
		*node[0x5b5dfe0725b0] = input;
		*node[0x5b5dfe0725e0] = 1;
		*node[0x5b5dfe072610] = 2;
		*node[0x5b5dfe072640] = 3;
		*node[0x5b5dfe072670] = ;;
		*node[0x5b5dfe0726d0] = 1;
		*node[0x5b5dfe072700] = 2;
		*node[0x5b5dfe072730] = 3;
		*node[0x5b5dfe072760] = ;;
		*node[0x5b5dfe072790] = 4;
		*node[0x5b5dfe0727c0] = 1;
		*node[0x5b5dfe0727f0] = 2;
		*node[0x5b5dfe072820] = 3;
		*node[0x5b5dfe072850] = ;;
		*node[0x5b5dfe072880] = if;
		*node[0x5b5dfe0728b0] = op_no;
		*node[0x5b5dfe0728e0] = ==;
		*node[0x5b5dfe072910] = 1;
		*node[0x5b5dfe072940] = 0;
		*node[0x5b5dfe072970] = ;;
		*node[0x5b5dfe0729d0] = 2;
		*node[0x5b5dfe072a00] = 3;
		*node[0x5b5dfe072a30] = ;;
		*node[0x5b5dfe072a90] = 1;
		*node[0x5b5dfe072ac0] = 2;
		*node[0x5b5dfe072af0] = 3;
		*node[0x5b5dfe072b20] = ;;
		*node[0x5b5dfe072b50] = 5;
		*node[0x5b5dfe072b80] = 1;
		*node[0x5b5dfe072bb0] = 2;
		*node[0x5b5dfe072be0] = ;;
		*node[0x5b5dfe072c10] = =;
		*node[0x5b5dfe072c40] = 7;
		*node[0x5b5dfe072c70] = -;
		*node[0x5b5dfe072ca0] = 0;
		*node[0x5b5dfe072cd0] = 1;
		*node[0x5b5dfe072d00] = ;;
		*node[0x5b5dfe072d30] = =;
		*node[0x5b5dfe072d60] = 8;
		*node[0x5b5dfe072d90] = 1;
		*node[0x5b5dfe072dc0] = ;;
		*node[0x5b5dfe072df0] = =;
		*node[0x5b5dfe072e20] = 9;
		*node[0x5b5dfe072e50] = 1000;
		*node[0x5b5dfe072e80] = ;;
		*node[0x5b5dfe072eb0] = if;
		*node[0x5b5dfe072ee0] = op_no;
		*node[0x5b5dfe072f10] = ==;
		*node[0x5b5dfe072f40] = 1;
		*node[0x5b5dfe072f70] = 0;
		*node[0x5b5dfe072fa0] = ;;
		*node[0x5b5dfe072fd0] = if;
		*node[0x5b5dfe073000] = op_no;
		*node[0x5b5dfe073030] = ==;
		*node[0x5b5dfe073060] = 2;
		*node[0x5b5dfe073090] = 0;
		*node[0x5b5dfe0730c0] = ;;
		*node[0x5b5dfe0730f0] = print;
		*node[0x5b5dfe073120] = 9;
		*node[0x5b5dfe073150] = ;;
		*node[0x5b5dfe073180] = print;
		*node[0x5b5dfe0731b0] = 7;
		*node[0x5b5dfe0731e0] = ;;
		*node[0x5b5dfe073210] = =;
		*node[0x5b5dfe073240] = 10;
		*node[0x5b5dfe073270] = /;
		*node[0x5b5dfe0732a0] = -;
		*node[0x5b5dfe0732d0] = 0;
		*node[0x5b5dfe073300] = 2;
		*node[0x5b5dfe073330] = 1;
		*node[0x5b5dfe073360] = ;;
		*node[0x5b5dfe073390] = print;
		*node[0x5b5dfe0733c0] = 8;
		*node[0x5b5dfe0733f0] = ;;
		*node[0x5b5dfe073420] = print;
		*node[0x5b5dfe073450] = 10;
		*node[0x5b5dfe073480] = ;;
		*node[0x5b5dfe0734b0] = return;
		*node[0x5b5dfe0734e0] = 0;
		*node[0x5b5dfe073510] = ;;
		*node[0x5b5dfe073540] = 6;
		*node[0x5b5dfe073570] = 1;
		*node[0x5b5dfe0735a0] = 2;
		*node[0x5b5dfe0735d0] = 3;
		*node[0x5b5dfe073600] = ;;
		*node[0x5b5dfe073630] = =;
		*node[0x5b5dfe073660] = 7;
		*node[0x5b5dfe073690] = -;
		*node[0x5b5dfe0736c0] = 0;
		*node[0x5b5dfe0736f0] = 1;
		*node[0x5b5dfe073720] = ;;
		*node[0x5b5dfe073750] = =;
		*node[0x5b5dfe073780] = 8;
		*node[0x5b5dfe0737b0] = 1;
		*node[0x5b5dfe0737e0] = ;;
		*node[0x5b5dfe073810] = =;
		*node[0x5b5dfe073840] = 11;
		*node[0x5b5dfe073870] = 2;
		*node[0x5b5dfe0738a0] = ;;
		*node[0x5b5dfe0738d0] = if;
		*node[0x5b5dfe073900] = op_no;
		*node[0x5b5dfe073930] = ==;
		*node[0x5b5dfe073960] = 3;
		*node[0x5b5dfe073990] = 0;
		*node[0x5b5dfe0739c0] = ;;
		*node[0x5b5dfe0739f0] = =;
		*node[0x5b5dfe073a20] = 12;
		*node[0x5b5dfe073a50] = 0;
		*node[0x5b5dfe073a80] = ;;
		*node[0x5b5dfe073ab0] = =;
		*node[0x5b5dfe073ae0] = 13;
		*node[0x5b5dfe073b10] = /;
		*node[0x5b5dfe073b40] = -;
		*node[0x5b5dfe073b70] = 0;
		*node[0x5b5dfe073ba0] = 2;
		*node[0x5b5dfe073bd0] = 1;
		*node[0x5b5dfe073c00] = ;;
		*node[0x5b5dfe073c30] = print;
		*node[0x5b5dfe073c60] = 11;
		*node[0x5b5dfe073c90] = ;;
		*node[0x5b5dfe073cc0] = print;
		*node[0x5b5dfe073cf0] = 12;
		*node[0x5b5dfe073d20] = 13;
		*node[0x5b5dfe073d50] = ;;
		*node[0x5b5dfe073d80] = =;
		*node[0x5b5dfe073db0] = 14;
		*node[0x5b5dfe073de0] = -;
		*node[0x5b5dfe073e10] = *;
		*node[0x5b5dfe073e40] = 2;
		*node[0x5b5dfe073e70] = 2;
		*node[0x5b5dfe073ea0] = *;
		*node[0x5b5dfe073ed0] = *;
		*node[0x5b5dfe073f00] = 4;
		*node[0x5b5dfe073f30] = 1;
		*node[0x5b5dfe073f60] = 3;
		*node[0x5b5dfe073f90] = ;;
		*node[0x5b5dfe073fc0] = if;
		*node[0x5b5dfe073ff0] = op_no;
		*node[0x5b5dfe074020] = >;
		*node[0x5b5dfe074050] = 14;
		*node[0x5b5dfe074080] = 0;
		*node[0x5b5dfe0740b0] = ;;
		*node[0x5b5dfe0740e0] = =;
		*node[0x5b5dfe074110] = 15;
		*node[0x5b5dfe074140] = sqrt;
		*node[0x5b5dfe074170] = 1;
		*node[0x5b5dfe0741a0] = 14;
		*node[0x5b5dfe0741d0] = ;;
		*node[0x5b5dfe074200] = =;
		*node[0x5b5dfe074230] = 12;
		*node[0x5b5dfe074260] = /;
		*node[0x5b5dfe074290] = -;
		*node[0x5b5dfe0742c0] = -;
		*node[0x5b5dfe0742f0] = 0;
		*node[0x5b5dfe074320] = 2;
		*node[0x5b5dfe074350] = 15;
		*node[0x5b5dfe074380] = *;
		*node[0x5b5dfe0743b0] = 2;
		*node[0x5b5dfe0743e0] = 1;
		*node[0x5b5dfe074410] = ;;
		*node[0x5b5dfe074440] = =;
		*node[0x5b5dfe074470] = 13;
		*node[0x5b5dfe0744a0] = /;
		*node[0x5b5dfe0744d0] = +;
		*node[0x5b5dfe074500] = -;
		*node[0x5b5dfe074530] = 0;
		*node[0x5b5dfe074560] = 2;
		*node[0x5b5dfe074590] = 15;
		*node[0x5b5dfe0745c0] = *;
		*node[0x5b5dfe0745f0] = 2;
		*node[0x5b5dfe074620] = 1;
		*node[0x5b5dfe074650] = ;;
		*node[0x5b5dfe074680] = print;
		*node[0x5b5dfe0746b0] = 11;
		*node[0x5b5dfe0746e0] = ;;
		*node[0x5b5dfe074710] = print;
		*node[0x5b5dfe074740] = 12;
		*node[0x5b5dfe074770] = 13;
		*node[0x5b5dfe0747a0] = if;
		*node[0x5b5dfe0747d0] = op_no;
		*node[0x5b5dfe074800] = ==;
		*node[0x5b5dfe074830] = 14;
		*node[0x5b5dfe074860] = 0;
		*node[0x5b5dfe074890] = ;;
		*node[0x5b5dfe0748c0] = =;
		*node[0x5b5dfe0748f0] = 10;
		*node[0x5b5dfe074920] = /;
		*node[0x5b5dfe074950] = -;
		*node[0x5b5dfe074980] = 0;
		*node[0x5b5dfe0749b0] = 2;
		*node[0x5b5dfe0749e0] = *;
		*node[0x5b5dfe074a10] = 2;
		*node[0x5b5dfe074a40] = 1;
		*node[0x5b5dfe074a70] = ;;
		*node[0x5b5dfe074aa0] = print;
		*node[0x5b5dfe074ad0] = 8;
		*node[0x5b5dfe074b00] = ;;
		*node[0x5b5dfe074b30] = print;
		*node[0x5b5dfe074b60] = 10;
		*node[0x5b5dfe074b90] = ;;
		*node[0x5b5dfe074bc0] = print;
		*node[0x5b5dfe074bf0] = 7;
		*node[0x5b5dfe074c20] = ;;
		*node[0x5b5dfe074c50] = return;
		*node[0x5b5dfe074c80] = 0;
		*node[0x5b5dfe074cb0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffea472d960] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x62ab72d96dc0] = ;;
		*node[0x62ab72d96df0] = 0;
		*node[0x62ab72d96e20] = ;;
		*node[0x62ab72d96e50] = input;
		*node[0x62ab72d96e80] = 1;
		*node[0x62ab72d96eb0] = 2;
		*node[0x62ab72d96ee0] = 3;
		*node[0x62ab72d96f10] = ;;
		*node[0x62ab72d96f70] = 1;
		*node[0x62ab72d96fa0] = 2;
		*node[0x62ab72d96fd0] = 3;
		*node[0x62ab72d97000] = ;;
		*node[0x62ab72d97030] = 4;
		*node[0x62ab72d97060] = 1;
		*node[0x62ab72d97090] = 2;
		*node[0x62ab72d970c0] = 3;
		*node[0x62ab72d970f0] = ;;
		*node[0x62ab72d97120] = if;
		*node[0x62ab72d97150] = op_no;
		*node[0x62ab72d97180] = ==;
		*node[0x62ab72d971b0] = 1;
		*node[0x62ab72d971e0] = 0;
		*node[0x62ab72d97210] = ;;
		*node[0x62ab72d97270] = 2;
		*node[0x62ab72d972a0] = 3;
		*node[0x62ab72d972d0] = ;;
		*node[0x62ab72d97330] = 1;
		*node[0x62ab72d97360] = 2;
		*node[0x62ab72d97390] = 3;
		*node[0x62ab72d973c0] = ;;
		*node[0x62ab72d973f0] = 5;
		*node[0x62ab72d97420] = 1;
		*node[0x62ab72d97450] = 2;
		*node[0x62ab72d97480] = ;;
		*node[0x62ab72d974b0] = =;
		*node[0x62ab72d974e0] = 7;
		*node[0x62ab72d97510] = -;
		*node[0x62ab72d97540] = 0;
		*node[0x62ab72d97570] = 1;
		*node[0x62ab72d975a0] = ;;
		*node[0x62ab72d975d0] = =;
		*node[0x62ab72d97600] = 8;
		*node[0x62ab72d97630] = 1;
		*node[0x62ab72d97660] = ;;
		*node[0x62ab72d97690] = =;
		*node[0x62ab72d976c0] = 9;
		*node[0x62ab72d976f0] = 1000;
		*node[0x62ab72d97720] = ;;
		*node[0x62ab72d97750] = if;
		*node[0x62ab72d97780] = op_no;
		*node[0x62ab72d977b0] = ==;
		*node[0x62ab72d977e0] = 1;
		*node[0x62ab72d97810] = 0;
		*node[0x62ab72d97840] = ;;
		*node[0x62ab72d97870] = if;
		*node[0x62ab72d978a0] = op_no;
		*node[0x62ab72d978d0] = ==;
		*node[0x62ab72d97900] = 2;
		*node[0x62ab72d97930] = 0;
		*node[0x62ab72d97960] = ;;
		*node[0x62ab72d97990] = print;
		*node[0x62ab72d979c0] = 9;
		*node[0x62ab72d979f0] = ;;
		*node[0x62ab72d97a20] = print;
		*node[0x62ab72d97a50] = 7;
		*node[0x62ab72d97a80] = ;;
		*node[0x62ab72d97ab0] = =;
		*node[0x62ab72d97ae0] = 10;
		*node[0x62ab72d97b10] = /;
		*node[0x62ab72d97b40] = -;
		*node[0x62ab72d97b70] = 0;
		*node[0x62ab72d97ba0] = 2;
		*node[0x62ab72d97bd0] = 1;
		*node[0x62ab72d97c00] = ;;
		*node[0x62ab72d97c30] = print;
		*node[0x62ab72d97c60] = 8;
		*node[0x62ab72d97c90] = ;;
		*node[0x62ab72d97cc0] = print;
		*node[0x62ab72d97cf0] = 10;
		*node[0x62ab72d97d20] = ;;
		*node[0x62ab72d97d50] = return;
		*node[0x62ab72d97d80] = 0;
		*node[0x62ab72d97db0] = ;;
		*node[0x62ab72d97de0] = 6;
		*node[0x62ab72d97e10] = 1;
		*node[0x62ab72d97e40] = 2;
		*node[0x62ab72d97e70] = 3;
		*node[0x62ab72d97ea0] = ;;
		*node[0x62ab72d97ed0] = =;
		*node[0x62ab72d97f00] = 7;
		*node[0x62ab72d97f30] = -;
		*node[0x62ab72d97f60] = 0;
		*node[0x62ab72d97f90] = 1;
		*node[0x62ab72d97fc0] = ;;
		*node[0x62ab72d97ff0] = =;
		*node[0x62ab72d98020] = 8;
		*node[0x62ab72d98050] = 1;
		*node[0x62ab72d98080] = ;;
		*node[0x62ab72d980b0] = =;
		*node[0x62ab72d980e0] = 11;
		*node[0x62ab72d98110] = 2;
		*node[0x62ab72d98140] = ;;
		*node[0x62ab72d98170] = if;
		*node[0x62ab72d981a0] = op_no;
		*node[0x62ab72d981d0] = ==;
		*node[0x62ab72d98200] = 3;
		*node[0x62ab72d98230] = 0;
		*node[0x62ab72d98260] = ;;
		*node[0x62ab72d98290] = =;
		*node[0x62ab72d982c0] = 12;
		*node[0x62ab72d982f0] = 0;
		*node[0x62ab72d98320] = ;;
		*node[0x62ab72d98350] = =;
		*node[0x62ab72d98380] = 13;
		*node[0x62ab72d983b0] = /;
		*node[0x62ab72d983e0] = -;
		*node[0x62ab72d98410] = 0;
		*node[0x62ab72d98440] = 2;
		*node[0x62ab72d98470] = 1;
		*node[0x62ab72d984a0] = ;;
		*node[0x62ab72d984d0] = print;
		*node[0x62ab72d98500] = 11;
		*node[0x62ab72d98530] = ;;
		*node[0x62ab72d98560] = print;
		*node[0x62ab72d98590] = 12;
		*node[0x62ab72d985c0] = 13;
		*node[0x62ab72d985f0] = ;;
		*node[0x62ab72d98620] = =;
		*node[0x62ab72d98650] = 14;
		*node[0x62ab72d98680] = -;
		*node[0x62ab72d986b0] = *;
		*node[0x62ab72d986e0] = 2;
		*node[0x62ab72d98710] = 2;
		*node[0x62ab72d98740] = *;
		*node[0x62ab72d98770] = *;
		*node[0x62ab72d987a0] = 4;
		*node[0x62ab72d987d0] = 1;
		*node[0x62ab72d98800] = 3;
		*node[0x62ab72d98830] = ;;
		*node[0x62ab72d98860] = if;
		*node[0x62ab72d98890] = op_no;
		*node[0x62ab72d988c0] = >;
		*node[0x62ab72d988f0] = 14;
		*node[0x62ab72d98920] = 0;
		*node[0x62ab72d98950] = ;;
		*node[0x62ab72d98980] = =;
		*node[0x62ab72d989b0] = 15;
		*node[0x62ab72d989e0] = sqrt;
		*node[0x62ab72d98a10] = 1;
		*node[0x62ab72d98a40] = 14;
		*node[0x62ab72d98a70] = ;;
		*node[0x62ab72d98aa0] = =;
		*node[0x62ab72d98ad0] = 12;
		*node[0x62ab72d98b00] = /;
		*node[0x62ab72d98b30] = -;
		*node[0x62ab72d98b60] = -;
		*node[0x62ab72d98b90] = 0;
		*node[0x62ab72d98bc0] = 2;
		*node[0x62ab72d98bf0] = 15;
		*node[0x62ab72d98c20] = *;
		*node[0x62ab72d98c50] = 2;
		*node[0x62ab72d98c80] = 1;
		*node[0x62ab72d98cb0] = ;;
		*node[0x62ab72d98ce0] = =;
		*node[0x62ab72d98d10] = 13;
		*node[0x62ab72d98d40] = /;
		*node[0x62ab72d98d70] = +;
		*node[0x62ab72d98da0] = -;
		*node[0x62ab72d98dd0] = 0;
		*node[0x62ab72d98e00] = 2;
		*node[0x62ab72d98e30] = 15;
		*node[0x62ab72d98e60] = *;
		*node[0x62ab72d98e90] = 2;
		*node[0x62ab72d98ec0] = 1;
		*node[0x62ab72d98ef0] = ;;
		*node[0x62ab72d98f20] = print;
		*node[0x62ab72d98f50] = 11;
		*node[0x62ab72d98f80] = ;;
		*node[0x62ab72d98fb0] = print;
		*node[0x62ab72d98fe0] = 12;
		*node[0x62ab72d99010] = 13;
		*node[0x62ab72d99040] = if;
		*node[0x62ab72d99070] = op_no;
		*node[0x62ab72d990a0] = ==;
		*node[0x62ab72d990d0] = 14;
		*node[0x62ab72d99100] = 0;
		*node[0x62ab72d99130] = ;;
		*node[0x62ab72d99160] = =;
		*node[0x62ab72d99190] = 10;
		*node[0x62ab72d991c0] = /;
		*node[0x62ab72d991f0] = -;
		*node[0x62ab72d99220] = 0;
		*node[0x62ab72d99250] = 2;
		*node[0x62ab72d99280] = *;
		*node[0x62ab72d992b0] = 2;
		*node[0x62ab72d992e0] = 1;
		*node[0x62ab72d99310] = ;;
		*node[0x62ab72d99340] = print;
		*node[0x62ab72d99370] = 8;
		*node[0x62ab72d993a0] = ;;
		*node[0x62ab72d993d0] = print;
		*node[0x62ab72d99400] = 10;
		*node[0x62ab72d99430] = ;;
		*node[0x62ab72d99460] = print;
		*node[0x62ab72d99490] = 7;
		*node[0x62ab72d994c0] = ;;
		*node[0x62ab72d994f0] = return;
		*node[0x62ab72d99520] = 0;
		*node[0x62ab72d99550] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe71c18340] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x636122431220] = ;;
		*node[0x636122431250] = 0;
		*node[0x636122431280] = ;;
		*node[0x6361224312b0] = input;
		*node[0x6361224312e0] = 1;
		*node[0x636122431310] = 2;
		*node[0x636122431340] = 3;
		*node[0x636122431370] = ;;
		*node[0x6361224313d0] = 1;
		*node[0x636122431400] = 2;
		*node[0x636122431430] = 3;
		*node[0x636122431460] = ;;
		*node[0x636122431490] = 4;
		*node[0x6361224314c0] = 1;
		*node[0x6361224314f0] = 2;
		*node[0x636122431520] = 3;
		*node[0x636122431550] = ;;
		*node[0x636122431580] = if;
		*node[0x6361224315b0] = op_no;
		*node[0x636122431640] = ==;
		*node[0x6361224315e0] = 1;
		*node[0x636122431610] = 0;
		*node[0x636122431670] = ;;
		*node[0x6361224316d0] = 2;
		*node[0x636122431700] = 3;
		*node[0x636122431730] = ;;
		*node[0x636122431790] = 1;
		*node[0x6361224317c0] = 2;
		*node[0x6361224317f0] = 3;
		*node[0x636122431820] = ;;
		*node[0x636122431850] = 5;
		*node[0x636122431880] = 1;
		*node[0x6361224318b0] = 2;
		*node[0x6361224318e0] = ;;
		*node[0x6361224319d0] = =;
		*node[0x636122431910] = 7;
		*node[0x6361224319a0] = -;
		*node[0x636122431940] = 0;
		*node[0x636122431970] = 1;
		*node[0x636122431a00] = ;;
		*node[0x636122431a90] = =;
		*node[0x636122431a30] = 8;
		*node[0x636122431a60] = 1;
		*node[0x636122431ac0] = ;;
		*node[0x636122431b50] = =;
		*node[0x636122431af0] = 9;
		*node[0x636122431b20] = 1000;
		*node[0x636122431b80] = ;;
		*node[0x636122431bb0] = if;
		*node[0x636122431be0] = op_no;
		*node[0x636122431c70] = ==;
		*node[0x636122431c10] = 1;
		*node[0x636122431c40] = 0;
		*node[0x636122431ca0] = ;;
		*node[0x636122431cd0] = if;
		*node[0x636122431d00] = op_no;
		*node[0x636122431d90] = ==;
		*node[0x636122431d30] = 2;
		*node[0x636122431d60] = 0;
		*node[0x636122431dc0] = ;;
		*node[0x636122431df0] = print;
		*node[0x636122431e20] = 9;
		*node[0x636122431e50] = ;;
		*node[0x636122431e80] = print;
		*node[0x636122431eb0] = 7;
		*node[0x636122431ee0] = ;;
		*node[0x636122432030] = =;
		*node[0x636122431f10] = 10;
		*node[0x636122432000] = /;
		*node[0x636122431fa0] = -;
		*node[0x636122431f40] = 0;
		*node[0x636122431f70] = 2;
		*node[0x636122431fd0] = 1;
		*node[0x636122432060] = ;;
		*node[0x636122432090] = print;
		*node[0x6361224320c0] = 8;
		*node[0x6361224320f0] = ;;
		*node[0x636122432120] = print;
		*node[0x636122432150] = 10;
		*node[0x636122432180] = ;;
		*node[0x6361224321b0] = return;
		*node[0x6361224321e0] = 0;
		*node[0x636122432210] = ;;
		*node[0x636122432240] = 6;
		*node[0x636122432270] = 1;
		*node[0x6361224322a0] = 2;
		*node[0x6361224322d0] = 3;
		*node[0x636122432300] = ;;
		*node[0x6361224323f0] = =;
		*node[0x636122432330] = 7;
		*node[0x6361224323c0] = -;
		*node[0x636122432360] = 0;
		*node[0x636122432390] = 1;
		*node[0x636122432420] = ;;
		*node[0x6361224324b0] = =;
		*node[0x636122432450] = 8;
		*node[0x636122432480] = 1;
		*node[0x6361224324e0] = ;;
		*node[0x636122432570] = =;
		*node[0x636122432510] = 11;
		*node[0x636122432540] = 2;
		*node[0x6361224325a0] = ;;
		*node[0x6361224325d0] = if;
		*node[0x636122432600] = op_no;
		*node[0x636122432690] = ==;
		*node[0x636122432630] = 3;
		*node[0x636122432660] = 0;
		*node[0x6361224326c0] = ;;
		*node[0x636122432750] = =;
		*node[0x6361224326f0] = 12;
		*node[0x636122432720] = 0;
		*node[0x636122432780] = ;;
		*node[0x6361224328d0] = =;
		*node[0x6361224327b0] = 13;
		*node[0x6361224328a0] = /;
		*node[0x636122432840] = -;
		*node[0x6361224327e0] = 0;
		*node[0x636122432810] = 2;
		*node[0x636122432870] = 1;
		*node[0x636122432900] = ;;
		*node[0x636122432930] = print;
		*node[0x636122432960] = 11;
		*node[0x636122432990] = ;;
		*node[0x6361224329c0] = print;
		*node[0x6361224329f0] = 12;
		*node[0x636122432a20] = 13;
		*node[0x636122432a50] = ;;
		*node[0x636122432c60] = =;
		*node[0x636122432a80] = 14;
		*node[0x636122432c30] = -;
		*node[0x636122432b10] = *;
		*node[0x636122432ab0] = 2;
		*node[0x636122432ae0] = 2;
		*node[0x636122432c00] = *;
		*node[0x636122432ba0] = *;
		*node[0x636122432b40] = 4;
		*node[0x636122432b70] = 1;
		*node[0x636122432bd0] = 3;
		*node[0x636122432c90] = ;;
		*node[0x636122432cc0] = if;
		*node[0x636122432cf0] = op_no;
		*node[0x636122432d80] = >;
		*node[0x636122432d20] = 14;
		*node[0x636122432d50] = 0;
		*node[0x636122432db0] = ;;
		*node[0x636122432ea0] = =;
		*node[0x636122432de0] = 15;
		*node[0x636122432e70] = sqrt;
		*node[0x636122432e40] = 1;
		*node[0x636122432e10] = 14;
		*node[0x636122432ed0] = ;;
		*node[0x6361224330e0] = =;
		*node[0x636122432f00] = 12;
		*node[0x6361224330b0] = /;
		*node[0x636122432ff0] = -;
		*node[0x636122432f90] = -;
		*node[0x636122432f30] = 0;
		*node[0x636122432f60] = 2;
		*node[0x636122432fc0] = 15;
		*node[0x636122433080] = *;
		*node[0x636122433020] = 2;
		*node[0x636122433050] = 1;
		*node[0x636122433110] = ;;
		*node[0x636122433320] = =;
		*node[0x636122433140] = 13;
		*node[0x6361224332f0] = /;
		*node[0x636122433230] = +;
		*node[0x6361224331d0] = -;
		*node[0x636122433170] = 0;
		*node[0x6361224331a0] = 2;
		*node[0x636122433200] = 15;
		*node[0x6361224332c0] = *;
		*node[0x636122433260] = 2;
		*node[0x636122433290] = 1;
		*node[0x636122433350] = ;;
		*node[0x636122433380] = print;
		*node[0x6361224333b0] = 11;
		*node[0x6361224333e0] = ;;
		*node[0x636122433410] = print;
		*node[0x636122433440] = 12;
		*node[0x636122433470] = 13;
		*node[0x6361224334a0] = if;
		*node[0x6361224334d0] = op_no;
		*node[0x636122433560] = ==;
		*node[0x636122433500] = 14;
		*node[0x636122433530] = 0;
		*node[0x636122433590] = ;;
		*node[0x636122433740] = =;
		*node[0x6361224335c0] = 10;
		*node[0x636122433710] = /;
		*node[0x636122433650] = -;
		*node[0x6361224335f0] = 0;
		*node[0x636122433620] = 2;
		*node[0x6361224336e0] = *;
		*node[0x636122433680] = 2;
		*node[0x6361224336b0] = 1;
		*node[0x636122433770] = ;;
		*node[0x6361224337a0] = print;
		*node[0x6361224337d0] = 8;
		*node[0x636122433800] = ;;
		*node[0x636122433830] = print;
		*node[0x636122433860] = 10;
		*node[0x636122433890] = ;;
		*node[0x6361224338c0] = print;
		*node[0x6361224338f0] = 7;
		*node[0x636122433920] = ;;
		*node[0x636122433950] = return;
		*node[0x636122433980] = 0;
		*node[0x6361224339b0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe625c4630] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x561c93e55f70] = ;;
		*node[0x561c93e55fa0] = 0;
		*node[0x561c93e55fd0] = ;;
		*node[0x561c93e56000] = input;
		*node[0x561c93e56030] = 1;
		*node[0x561c93e56060] = 2;
		*node[0x561c93e56090] = 3;
		*node[0x561c93e560c0] = ;;
		*node[0x561c93e56120] = 1;
		*node[0x561c93e56150] = 2;
		*node[0x561c93e56180] = 3;
		*node[0x561c93e561b0] = ;;
		*node[0x561c93e561e0] = 4;
		*node[0x561c93e56210] = 1;
		*node[0x561c93e56240] = 2;
		*node[0x561c93e56270] = 3;
		*node[0x561c93e562a0] = ;;
		*node[0x561c93e562d0] = if;
		*node[0x561c93e56300] = op_no;
		*node[0x561c93e56330] = ==;
		*node[0x561c93e56360] = 1;
		*node[0x561c93e56390] = 0;
		*node[0x561c93e563c0] = ;;
		*node[0x561c93e56420] = 2;
		*node[0x561c93e56450] = 3;
		*node[0x561c93e56480] = ;;
		*node[0x561c93e564e0] = 1;
		*node[0x561c93e56510] = 2;
		*node[0x561c93e56540] = 3;
		*node[0x561c93e56570] = ;;
		*node[0x561c93e565a0] = 5;
		*node[0x561c93e565d0] = 1;
		*node[0x561c93e56600] = 2;
		*node[0x561c93e56630] = ;;
		*node[0x561c93e56660] = =;
		*node[0x561c93e56690] = 7;
		*node[0x561c93e566c0] = -;
		*node[0x561c93e566f0] = 0;
		*node[0x561c93e56720] = 1;
		*node[0x561c93e56750] = ;;
		*node[0x561c93e56780] = =;
		*node[0x561c93e567b0] = 8;
		*node[0x561c93e567e0] = 1;
		*node[0x561c93e56810] = ;;
		*node[0x561c93e56840] = =;
		*node[0x561c93e56870] = 9;
		*node[0x561c93e568a0] = 1000;
		*node[0x561c93e568d0] = ;;
		*node[0x561c93e56900] = if;
		*node[0x561c93e56930] = op_no;
		*node[0x561c93e56960] = ==;
		*node[0x561c93e56990] = 1;
		*node[0x561c93e569c0] = 0;
		*node[0x561c93e569f0] = ;;
		*node[0x561c93e56a20] = if;
		*node[0x561c93e56a50] = op_no;
		*node[0x561c93e56a80] = ==;
		*node[0x561c93e56ab0] = 2;
		*node[0x561c93e56ae0] = 0;
		*node[0x561c93e56b10] = ;;
		*node[0x561c93e56b40] = print;
		*node[0x561c93e56b70] = 9;
		*node[0x561c93e56ba0] = ;;
		*node[0x561c93e56bd0] = print;
		*node[0x561c93e56c00] = 7;
		*node[0x561c93e56c30] = ;;
		*node[0x561c93e56c60] = =;
		*node[0x561c93e56c90] = 10;
		*node[0x561c93e56cc0] = /;
		*node[0x561c93e56cf0] = -;
		*node[0x561c93e56d20] = 0;
		*node[0x561c93e56d50] = 2;
		*node[0x561c93e56d80] = 1;
		*node[0x561c93e56db0] = ;;
		*node[0x561c93e56de0] = print;
		*node[0x561c93e56e10] = 8;
		*node[0x561c93e56e40] = ;;
		*node[0x561c93e56e70] = print;
		*node[0x561c93e56ea0] = 10;
		*node[0x561c93e56ed0] = ;;
		*node[0x561c93e56f00] = return;
		*node[0x561c93e56f30] = 0;
		*node[0x561c93e56f60] = ;;
		*node[0x561c93e56f90] = 6;
		*node[0x561c93e56fc0] = 1;
		*node[0x561c93e56ff0] = 2;
		*node[0x561c93e57020] = 3;
		*node[0x561c93e57050] = ;;
		*node[0x561c93e57080] = =;
		*node[0x561c93e570b0] = 7;
		*node[0x561c93e570e0] = -;
		*node[0x561c93e57110] = 0;
		*node[0x561c93e57140] = 1;
		*node[0x561c93e57170] = ;;
		*node[0x561c93e571a0] = =;
		*node[0x561c93e571d0] = 8;
		*node[0x561c93e57200] = 1;
		*node[0x561c93e57230] = ;;
		*node[0x561c93e57260] = =;
		*node[0x561c93e57290] = 11;
		*node[0x561c93e572c0] = 2;
		*node[0x561c93e572f0] = ;;
		*node[0x561c93e57320] = if;
		*node[0x561c93e57350] = op_no;
		*node[0x561c93e57380] = ==;
		*node[0x561c93e573b0] = 3;
		*node[0x561c93e573e0] = 0;
		*node[0x561c93e57410] = ;;
		*node[0x561c93e57440] = =;
		*node[0x561c93e57470] = 12;
		*node[0x561c93e574a0] = 0;
		*node[0x561c93e574d0] = ;;
		*node[0x561c93e57500] = =;
		*node[0x561c93e57530] = 13;
		*node[0x561c93e57560] = /;
		*node[0x561c93e57590] = -;
		*node[0x561c93e575c0] = 0;
		*node[0x561c93e575f0] = 2;
		*node[0x561c93e57620] = 1;
		*node[0x561c93e57650] = ;;
		*node[0x561c93e57680] = print;
		*node[0x561c93e576b0] = 11;
		*node[0x561c93e576e0] = ;;
		*node[0x561c93e57710] = print;
		*node[0x561c93e57740] = 12;
		*node[0x561c93e57770] = 13;
		*node[0x561c93e577a0] = ;;
		*node[0x561c93e577d0] = =;
		*node[0x561c93e57800] = 14;
		*node[0x561c93e57830] = -;
		*node[0x561c93e57860] = *;
		*node[0x561c93e57890] = 2;
		*node[0x561c93e578c0] = 2;
		*node[0x561c93e578f0] = *;
		*node[0x561c93e57920] = *;
		*node[0x561c93e57950] = 4;
		*node[0x561c93e57980] = 1;
		*node[0x561c93e579b0] = 3;
		*node[0x561c93e579e0] = ;;
		*node[0x561c93e57a10] = if;
		*node[0x561c93e57a40] = op_no;
		*node[0x561c93e57a70] = >;
		*node[0x561c93e57aa0] = 14;
		*node[0x561c93e57ad0] = 0;
		*node[0x561c93e57b00] = ;;
		*node[0x561c93e57b30] = =;
		*node[0x561c93e57b60] = 15;
		*node[0x561c93e57b90] = sqrt;
		*node[0x561c93e57bc0] = 1;
		*node[0x561c93e57bf0] = 14;
		*node[0x561c93e57c20] = ;;
		*node[0x561c93e57c50] = =;
		*node[0x561c93e57c80] = 12;
		*node[0x561c93e57cb0] = /;
		*node[0x561c93e57ce0] = -;
		*node[0x561c93e57d10] = -;
		*node[0x561c93e57d40] = 0;
		*node[0x561c93e57d70] = 2;
		*node[0x561c93e57da0] = 15;
		*node[0x561c93e57dd0] = *;
		*node[0x561c93e57e00] = 2;
		*node[0x561c93e57e30] = 1;
		*node[0x561c93e57e60] = ;;
		*node[0x561c93e57e90] = =;
		*node[0x561c93e57ec0] = 13;
		*node[0x561c93e57ef0] = /;
		*node[0x561c93e57f20] = +;
		*node[0x561c93e57f50] = -;
		*node[0x561c93e57f80] = 0;
		*node[0x561c93e57fb0] = 2;
		*node[0x561c93e57fe0] = 15;
		*node[0x561c93e58010] = *;
		*node[0x561c93e58040] = 2;
		*node[0x561c93e58070] = 1;
		*node[0x561c93e580a0] = ;;
		*node[0x561c93e580d0] = print;
		*node[0x561c93e58100] = 11;
		*node[0x561c93e58130] = ;;
		*node[0x561c93e58160] = print;
		*node[0x561c93e58190] = 12;
		*node[0x561c93e581c0] = 13;
		*node[0x561c93e581f0] = if;
		*node[0x561c93e58220] = op_no;
		*node[0x561c93e58250] = ==;
		*node[0x561c93e58280] = 14;
		*node[0x561c93e582b0] = 0;
		*node[0x561c93e582e0] = ;;
		*node[0x561c93e58310] = =;
		*node[0x561c93e58340] = 10;
		*node[0x561c93e58370] = /;
		*node[0x561c93e583a0] = -;
		*node[0x561c93e583d0] = 0;
		*node[0x561c93e58400] = 2;
		*node[0x561c93e58430] = *;
		*node[0x561c93e58460] = 2;
		*node[0x561c93e58490] = 1;
		*node[0x561c93e584c0] = ;;
		*node[0x561c93e584f0] = print;
		*node[0x561c93e58520] = 8;
		*node[0x561c93e58550] = ;;
		*node[0x561c93e58580] = print;
		*node[0x561c93e585b0] = 10;
		*node[0x561c93e585e0] = ;;
		*node[0x561c93e58610] = print;
		*node[0x561c93e58640] = 7;
		*node[0x561c93e58670] = ;;
		*node[0x561c93e586a0] = return;
		*node[0x561c93e586d0] = 0;
		*node[0x561c93e58700] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: an error occurred while opening the file[0m
tree[0x7ffe9133f890] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: an error occurred while opening the file[0m
tree[0x7ffc5de95b80] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff7591a840] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x55672316e810] = ;;
		*node[0x55672316e840] = 0;
		*node[0x55672316e870] = ;;
		*node[0x55672316e8a0] = input;
		*node[0x55672316e8d0] = 1;
		*node[0x55672316e900] = 2;
		*node[0x55672316e930] = 3;
		*node[0x55672316e960] = ;;
		*node[0x55672316e9c0] = 1;
		*node[0x55672316e9f0] = 2;
		*node[0x55672316ea20] = 3;
		*node[0x55672316ea50] = ;;
		*node[0x55672316ea80] = 4;
		*node[0x55672316eab0] = 1;
		*node[0x55672316eae0] = 2;
		*node[0x55672316eb10] = 3;
		*node[0x55672316eb40] = ;;
		*node[0x55672316eb70] = if;
		*node[0x55672316eba0] = op_no;
		*node[0x55672316ebd0] = ==;
		*node[0x55672316ec00] = 1;
		*node[0x55672316ec30] = 0;
		*node[0x55672316ec60] = ;;
		*node[0x55672316ecc0] = 2;
		*node[0x55672316ecf0] = 3;
		*node[0x55672316ed20] = ;;
		*node[0x55672316ed80] = 1;
		*node[0x55672316edb0] = 2;
		*node[0x55672316ede0] = 3;
		*node[0x55672316ee10] = ;;
		*node[0x55672316ee40] = 5;
		*node[0x55672316ee70] = 1;
		*node[0x55672316eea0] = 2;
		*node[0x55672316eed0] = ;;
		*node[0x55672316ef00] = =;
		*node[0x55672316ef30] = 7;
		*node[0x5567231715c0] = -1;
		*node[0x55672316eff0] = ;;
		*node[0x55672316f020] = =;
		*node[0x55672316f050] = 8;
		*node[0x55672316f080] = 1;
		*node[0x55672316f0b0] = ;;
		*node[0x55672316f0e0] = =;
		*node[0x55672316f110] = 9;
		*node[0x55672316f140] = 1000;
		*node[0x55672316f170] = ;;
		*node[0x55672316f1a0] = if;
		*node[0x55672316f1d0] = op_no;
		*node[0x55672316f200] = ==;
		*node[0x55672316f230] = 1;
		*node[0x55672316f260] = 0;
		*node[0x55672316f290] = ;;
		*node[0x55672316f2c0] = if;
		*node[0x55672316f2f0] = op_no;
		*node[0x55672316f320] = ==;
		*node[0x55672316f350] = 2;
		*node[0x55672316f380] = 0;
		*node[0x55672316f3b0] = ;;
		*node[0x55672316f3e0] = print;
		*node[0x55672316f410] = 9;
		*node[0x55672316f440] = ;;
		*node[0x55672316f470] = print;
		*node[0x55672316f4a0] = 7;
		*node[0x55672316f4d0] = ;;
		*node[0x55672316f500] = =;
		*node[0x55672316f530] = 10;
		*node[0x55672316f560] = /;
		*node[0x55672316f590] = -;
		*node[0x55672316f5c0] = 0;
		*node[0x55672316f5f0] = 2;
		*node[0x55672316f620] = 1;
		*node[0x55672316f650] = ;;
		*node[0x55672316f680] = print;
		*node[0x55672316f6b0] = 8;
		*node[0x55672316f6e0] = ;;
		*node[0x55672316f710] = print;
		*node[0x55672316f740] = 10;
		*node[0x55672316f770] = ;;
		*node[0x55672316f7a0] = return;
		*node[0x55672316f7d0] = 0;
		*node[0x55672316f800] = ;;
		*node[0x55672316f830] = 6;
		*node[0x55672316f860] = 1;
		*node[0x55672316f890] = 2;
		*node[0x55672316f8c0] = 3;
		*node[0x55672316f8f0] = ;;
		*node[0x55672316f920] = =;
		*node[0x55672316f950] = 7;
		*node[0x5567231715f0] = -1;
		*node[0x55672316fa10] = ;;
		*node[0x55672316fa40] = =;
		*node[0x55672316fa70] = 8;
		*node[0x55672316faa0] = 1;
		*node[0x55672316fad0] = ;;
		*node[0x55672316fb00] = =;
		*node[0x55672316fb30] = 11;
		*node[0x55672316fb60] = 2;
		*node[0x55672316fb90] = ;;
		*node[0x55672316fbc0] = if;
		*node[0x55672316fbf0] = op_no;
		*node[0x55672316fc20] = ==;
		*node[0x55672316fc50] = 3;
		*node[0x55672316fc80] = 0;
		*node[0x55672316fcb0] = ;;
		*node[0x55672316fce0] = =;
		*node[0x55672316fd10] = 12;
		*node[0x55672316fd40] = 0;
		*node[0x55672316fd70] = ;;
		*node[0x55672316fda0] = =;
		*node[0x55672316fdd0] = 13;
		*node[0x55672316fe00] = /;
		*node[0x55672316fe30] = -;
		*node[0x55672316fe60] = 0;
		*node[0x55672316fe90] = 2;
		*node[0x55672316fec0] = 1;
		*node[0x55672316fef0] = ;;
		*node[0x55672316ff20] = print;
		*node[0x55672316ff50] = 11;
		*node[0x55672316ff80] = ;;
		*node[0x55672316ffb0] = print;
		*node[0x55672316ffe0] = 12;
		*node[0x556723170010] = 13;
		*node[0x556723170040] = ;;
		*node[0x556723170070] = =;
		*node[0x5567231700a0] = 14;
		*node[0x5567231700d0] = -;
		*node[0x556723170100] = *;
		*node[0x556723170130] = 2;
		*node[0x556723170160] = 2;
		*node[0x556723170190] = *;
		*node[0x5567231701c0] = *;
		*node[0x5567231701f0] = 4;
		*node[0x556723170220] = 1;
		*node[0x556723170250] = 3;
		*node[0x556723170280] = ;;
		*node[0x5567231702b0] = if;
		*node[0x5567231702e0] = op_no;
		*node[0x556723170310] = >;
		*node[0x556723170340] = 14;
		*node[0x556723170370] = 0;
		*node[0x5567231703a0] = ;;
		*node[0x5567231703d0] = =;
		*node[0x556723170400] = 15;
		*node[0x556723170430] = sqrt;
		*node[0x556723170460] = 1;
		*node[0x556723170490] = 14;
		*node[0x5567231704c0] = ;;
		*node[0x5567231704f0] = =;
		*node[0x556723170520] = 12;
		*node[0x556723170550] = /;
		*node[0x556723170580] = -;
		*node[0x5567231705b0] = -;
		*node[0x5567231705e0] = 0;
		*node[0x556723170610] = 2;
		*node[0x556723170640] = 15;
		*node[0x556723170670] = *;
		*node[0x5567231706a0] = 2;
		*node[0x5567231706d0] = 1;
		*node[0x556723170700] = ;;
		*node[0x556723170730] = =;
		*node[0x556723170760] = 13;
		*node[0x556723170790] = /;
		*node[0x5567231707c0] = +;
		*node[0x5567231707f0] = -;
		*node[0x556723170820] = 0;
		*node[0x556723170850] = 2;
		*node[0x556723170880] = 15;
		*node[0x5567231708b0] = *;
		*node[0x5567231708e0] = 2;
		*node[0x556723170910] = 1;
		*node[0x556723170940] = ;;
		*node[0x556723170970] = print;
		*node[0x5567231709a0] = 11;
		*node[0x5567231709d0] = ;;
		*node[0x556723170a00] = print;
		*node[0x556723170a30] = 12;
		*node[0x556723170a60] = 13;
		*node[0x556723170a90] = if;
		*node[0x556723170ac0] = op_no;
		*node[0x556723170af0] = ==;
		*node[0x556723170b20] = 14;
		*node[0x556723170b50] = 0;
		*node[0x556723170b80] = ;;
		*node[0x556723170bb0] = =;
		*node[0x556723170be0] = 10;
		*node[0x556723170c10] = /;
		*node[0x556723170c40] = -;
		*node[0x556723170c70] = 0;
		*node[0x556723170ca0] = 2;
		*node[0x556723170cd0] = *;
		*node[0x556723170d00] = 2;
		*node[0x556723170d30] = 1;
		*node[0x556723170d60] = ;;
		*node[0x556723170d90] = print;
		*node[0x556723170dc0] = 8;
		*node[0x556723170df0] = ;;
		*node[0x556723170e20] = print;
		*node[0x556723170e50] = 10;
		*node[0x556723170e80] = ;;
		*node[0x556723170eb0] = print;
		*node[0x556723170ee0] = 7;
		*node[0x556723170f10] = ;;
		*node[0x556723170f40] = return;
		*node[0x556723170f70] = 0;
		*node[0x556723170fa0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe77a8c5d0] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x56a947f83080] = ;;
		*node[0x56a947f830b0] = 0;
		*node[0x56a947f830e0] = ;;
		*node[0x56a947f83110] = input;
		*node[0x56a947f83140] = 1;
		*node[0x56a947f83170] = 2;
		*node[0x56a947f831a0] = 3;
		*node[0x56a947f831d0] = ;;
		*node[0x56a947f83230] = 1;
		*node[0x56a947f83260] = 2;
		*node[0x56a947f83290] = 3;
		*node[0x56a947f832c0] = ;;
		*node[0x56a947f832f0] = 4;
		*node[0x56a947f83320] = 1;
		*node[0x56a947f83350] = 2;
		*node[0x56a947f83380] = 3;
		*node[0x56a947f833b0] = ;;
		*node[0x56a947f833e0] = if;
		*node[0x56a947f83410] = op_no;
		*node[0x56a947f83440] = ==;
		*node[0x56a947f83470] = 1;
		*node[0x56a947f834a0] = 0;
		*node[0x56a947f834d0] = ;;
		*node[0x56a947f83530] = 2;
		*node[0x56a947f83560] = 3;
		*node[0x56a947f83590] = ;;
		*node[0x56a947f835f0] = 1;
		*node[0x56a947f83620] = 2;
		*node[0x56a947f83650] = 3;
		*node[0x56a947f83680] = ;;
		*node[0x56a947f836b0] = 5;
		*node[0x56a947f836e0] = 1;
		*node[0x56a947f83710] = 2;
		*node[0x56a947f83740] = ;;
		*node[0x56a947f83770] = =;
		*node[0x56a947f837a0] = 7;
		*node[0x56a947f85a20] = -1;
		*node[0x56a947f83860] = ;;
		*node[0x56a947f83890] = =;
		*node[0x56a947f838c0] = 8;
		*node[0x56a947f838f0] = 1;
		*node[0x56a947f83920] = ;;
		*node[0x56a947f83950] = =;
		*node[0x56a947f83980] = 9;
		*node[0x56a947f839b0] = 1000;
		*node[0x56a947f839e0] = ;;
		*node[0x56a947f83a10] = if;
		*node[0x56a947f83a40] = op_no;
		*node[0x56a947f83a70] = ==;
		*node[0x56a947f83aa0] = 1;
		*node[0x56a947f83ad0] = 0;
		*node[0x56a947f83b00] = ;;
		*node[0x56a947f83b30] = if;
		*node[0x56a947f83b60] = op_no;
		*node[0x56a947f83b90] = ==;
		*node[0x56a947f83bc0] = 2;
		*node[0x56a947f83bf0] = 0;
		*node[0x56a947f83c20] = ;;
		*node[0x56a947f83c50] = print;
		*node[0x56a947f83c80] = 9;
		*node[0x56a947f83cb0] = ;;
		*node[0x56a947f83ce0] = print;
		*node[0x56a947f83d10] = 7;
		*node[0x56a947f83d40] = ;;
		*node[0x56a947f83d70] = =;
		*node[0x56a947f83da0] = 10;
		*node[0x56a947f83dd0] = /;
		*node[0x56a947f83e00] = -;
		*node[0x56a947f83e30] = 0;
		*node[0x56a947f83e60] = 2;
		*node[0x56a947f83e90] = 1;
		*node[0x56a947f83ec0] = ;;
		*node[0x56a947f83ef0] = print;
		*node[0x56a947f83f20] = 8;
		*node[0x56a947f83f50] = ;;
		*node[0x56a947f83f80] = print;
		*node[0x56a947f83fb0] = 10;
		*node[0x56a947f83fe0] = ;;
		*node[0x56a947f84010] = return;
		*node[0x56a947f84040] = 0;
		*node[0x56a947f84070] = ;;
		*node[0x56a947f840a0] = 6;
		*node[0x56a947f840d0] = 1;
		*node[0x56a947f84100] = 2;
		*node[0x56a947f84130] = 3;
		*node[0x56a947f84160] = ;;
		*node[0x56a947f84190] = =;
		*node[0x56a947f841c0] = 7;
		*node[0x56a947f85a50] = -1;
		*node[0x56a947f84280] = ;;
		*node[0x56a947f842b0] = =;
		*node[0x56a947f842e0] = 8;
		*node[0x56a947f84310] = 1;
		*node[0x56a947f84340] = ;;
		*node[0x56a947f84370] = =;
		*node[0x56a947f843a0] = 11;
		*node[0x56a947f843d0] = 2;
		*node[0x56a947f84400] = ;;
		*node[0x56a947f84430] = if;
		*node[0x56a947f84460] = op_no;
		*node[0x56a947f84490] = ==;
		*node[0x56a947f844c0] = 3;
		*node[0x56a947f844f0] = 0;
		*node[0x56a947f84520] = ;;
		*node[0x56a947f84550] = =;
		*node[0x56a947f84580] = 12;
		*node[0x56a947f845b0] = 0;
		*node[0x56a947f845e0] = ;;
		*node[0x56a947f84610] = =;
		*node[0x56a947f84640] = 13;
		*node[0x56a947f84670] = /;
		*node[0x56a947f846a0] = -;
		*node[0x56a947f846d0] = 0;
		*node[0x56a947f84700] = 2;
		*node[0x56a947f84730] = 1;
		*node[0x56a947f84760] = ;;
		*node[0x56a947f84790] = print;
		*node[0x56a947f847c0] = 11;
		*node[0x56a947f847f0] = ;;
		*node[0x56a947f84820] = print;
		*node[0x56a947f84850] = 12;
		*node[0x56a947f84880] = 13;
		*node[0x56a947f848b0] = ;;
		*node[0x56a947f848e0] = =;
		*node[0x56a947f84910] = 14;
		*node[0x56a947f84940] = -;
		*node[0x56a947f84970] = *;
		*node[0x56a947f849a0] = 2;
		*node[0x56a947f849d0] = 2;
		*node[0x56a947f84a00] = *;
		*node[0x56a947f84a30] = *;
		*node[0x56a947f84a60] = 4;
		*node[0x56a947f84a90] = 1;
		*node[0x56a947f84ac0] = 3;
		*node[0x56a947f84af0] = ;;
		*node[0x56a947f84b20] = if;
		*node[0x56a947f84b50] = op_no;
		*node[0x56a947f84b80] = >;
		*node[0x56a947f84bb0] = 14;
		*node[0x56a947f84be0] = 0;
		*node[0x56a947f84c10] = ;;
		*node[0x56a947f84c40] = =;
		*node[0x56a947f84c70] = 15;
		*node[0x56a947f84ca0] = sqrt;
		*node[0x56a947f84cd0] = 1;
		*node[0x56a947f84d00] = 14;
		*node[0x56a947f84d30] = ;;
		*node[0x56a947f84d60] = =;
		*node[0x56a947f84d90] = 12;
		*node[0x56a947f84dc0] = /;
		*node[0x56a947f84df0] = -;
		*node[0x56a947f84e20] = -;
		*node[0x56a947f84e50] = 0;
		*node[0x56a947f84e80] = 2;
		*node[0x56a947f84eb0] = 15;
		*node[0x56a947f84ee0] = *;
		*node[0x56a947f84f10] = 2;
		*node[0x56a947f84f40] = 1;
		*node[0x56a947f84f70] = ;;
		*node[0x56a947f84fa0] = =;
		*node[0x56a947f84fd0] = 13;
		*node[0x56a947f85000] = /;
		*node[0x56a947f85030] = +;
		*node[0x56a947f85060] = -;
		*node[0x56a947f85090] = 0;
		*node[0x56a947f850c0] = 2;
		*node[0x56a947f850f0] = 15;
		*node[0x56a947f85120] = *;
		*node[0x56a947f85150] = 2;
		*node[0x56a947f85180] = 1;
		*node[0x56a947f851b0] = ;;
		*node[0x56a947f851e0] = print;
		*node[0x56a947f85210] = 11;
		*node[0x56a947f85240] = ;;
		*node[0x56a947f85270] = print;
		*node[0x56a947f852a0] = 12;
		*node[0x56a947f852d0] = 13;
		*node[0x56a947f85300] = if;
		*node[0x56a947f85330] = op_no;
		*node[0x56a947f85360] = ==;
		*node[0x56a947f85390] = 14;
		*node[0x56a947f853c0] = 0;
		*node[0x56a947f853f0] = ;;
		*node[0x56a947f85420] = =;
		*node[0x56a947f85450] = 10;
		*node[0x56a947f85480] = /;
		*node[0x56a947f854b0] = -;
		*node[0x56a947f854e0] = 0;
		*node[0x56a947f85510] = 2;
		*node[0x56a947f85540] = *;
		*node[0x56a947f85570] = 2;
		*node[0x56a947f855a0] = 1;
		*node[0x56a947f855d0] = ;;
		*node[0x56a947f85600] = print;
		*node[0x56a947f85630] = 8;
		*node[0x56a947f85660] = ;;
		*node[0x56a947f85690] = print;
		*node[0x56a947f856c0] = 10;
		*node[0x56a947f856f0] = ;;
		*node[0x56a947f85720] = print;
		*node[0x56a947f85750] = 7;
		*node[0x56a947f85780] = ;;
		*node[0x56a947f857b0] = return;
		*node[0x56a947f857e0] = 0;
		*node[0x56a947f85810] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc4e5da4e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5c761ac4f220] = ;;
		*node[0x5c761ac4f250] = 0;
		*node[0x5c761ac4f280] = ;;
		*node[0x5c761ac4f2b0] = input;
		*node[0x5c761ac4f2e0] = 1;
		*node[0x5c761ac4f310] = 2;
		*node[0x5c761ac4f340] = 3;
		*node[0x5c761ac4f370] = ;;
		*node[0x5c761ac4f3d0] = 1;
		*node[0x5c761ac4f400] = 2;
		*node[0x5c761ac4f430] = 3;
		*node[0x5c761ac4f460] = ;;
		*node[0x5c761ac4f490] = 4;
		*node[0x5c761ac4f4c0] = 1;
		*node[0x5c761ac4f4f0] = 2;
		*node[0x5c761ac4f520] = 3;
		*node[0x5c761ac4f550] = ;;
		*node[0x5c761ac4f580] = if;
		*node[0x5c761ac4f5b0] = op_no;
		*node[0x5c761ac4f640] = ==;
		*node[0x5c761ac4f5e0] = 1;
		*node[0x5c761ac4f610] = 0;
		*node[0x5c761ac4f670] = ;;
		*node[0x5c761ac4f6d0] = 2;
		*node[0x5c761ac4f700] = 3;
		*node[0x5c761ac4f730] = ;;
		*node[0x5c761ac4f790] = 1;
		*node[0x5c761ac4f7c0] = 2;
		*node[0x5c761ac4f7f0] = 3;
		*node[0x5c761ac4f820] = ;;
		*node[0x5c761ac4f850] = 5;
		*node[0x5c761ac4f880] = 1;
		*node[0x5c761ac4f8b0] = 2;
		*node[0x5c761ac4f8e0] = ;;
		*node[0x5c761ac4f9d0] = =;
		*node[0x5c761ac4f910] = 7;
		*node[0x5c761ac4f9a0] = -;
		*node[0x5c761ac4f940] = 0;
		*node[0x5c761ac4f970] = 1;
		*node[0x5c761ac4fa00] = ;;
		*node[0x5c761ac4fa90] = =;
		*node[0x5c761ac4fa30] = 8;
		*node[0x5c761ac4fa60] = 1;
		*node[0x5c761ac4fac0] = ;;
		*node[0x5c761ac4fb50] = =;
		*node[0x5c761ac4faf0] = 9;
		*node[0x5c761ac4fb20] = 1000;
		*node[0x5c761ac4fb80] = ;;
		*node[0x5c761ac4fbb0] = if;
		*node[0x5c761ac4fbe0] = op_no;
		*node[0x5c761ac4fc70] = ==;
		*node[0x5c761ac4fc10] = 1;
		*node[0x5c761ac4fc40] = 0;
		*node[0x5c761ac4fca0] = ;;
		*node[0x5c761ac4fcd0] = if;
		*node[0x5c761ac4fd00] = op_no;
		*node[0x5c761ac4fd90] = ==;
		*node[0x5c761ac4fd30] = 2;
		*node[0x5c761ac4fd60] = 0;
		*node[0x5c761ac4fdc0] = ;;
		*node[0x5c761ac4fdf0] = print;
		*node[0x5c761ac4fe20] = 9;
		*node[0x5c761ac4fe50] = ;;
		*node[0x5c761ac4fe80] = print;
		*node[0x5c761ac4feb0] = 7;
		*node[0x5c761ac4fee0] = ;;
		*node[0x5c761ac50030] = =;
		*node[0x5c761ac4ff10] = 10;
		*node[0x5c761ac50000] = /;
		*node[0x5c761ac4ffa0] = -;
		*node[0x5c761ac4ff40] = 0;
		*node[0x5c761ac4ff70] = 2;
		*node[0x5c761ac4ffd0] = 1;
		*node[0x5c761ac50060] = ;;
		*node[0x5c761ac50090] = print;
		*node[0x5c761ac500c0] = 8;
		*node[0x5c761ac500f0] = ;;
		*node[0x5c761ac50120] = print;
		*node[0x5c761ac50150] = 10;
		*node[0x5c761ac50180] = ;;
		*node[0x5c761ac501b0] = return;
		*node[0x5c761ac501e0] = 0;
		*node[0x5c761ac50210] = ;;
		*node[0x5c761ac50240] = 6;
		*node[0x5c761ac50270] = 1;
		*node[0x5c761ac502a0] = 2;
		*node[0x5c761ac502d0] = 3;
		*node[0x5c761ac50300] = ;;
		*node[0x5c761ac503f0] = =;
		*node[0x5c761ac50330] = 7;
		*node[0x5c761ac503c0] = -;
		*node[0x5c761ac50360] = 0;
		*node[0x5c761ac50390] = 1;
		*node[0x5c761ac50420] = ;;
		*node[0x5c761ac504b0] = =;
		*node[0x5c761ac50450] = 8;
		*node[0x5c761ac50480] = 1;
		*node[0x5c761ac504e0] = ;;
		*node[0x5c761ac50570] = =;
		*node[0x5c761ac50510] = 11;
		*node[0x5c761ac50540] = 2;
		*node[0x5c761ac505a0] = ;;
		*node[0x5c761ac505d0] = if;
		*node[0x5c761ac50600] = op_no;
		*node[0x5c761ac50690] = ==;
		*node[0x5c761ac50630] = 3;
		*node[0x5c761ac50660] = 0;
		*node[0x5c761ac506c0] = ;;
		*node[0x5c761ac50750] = =;
		*node[0x5c761ac506f0] = 12;
		*node[0x5c761ac50720] = 0;
		*node[0x5c761ac50780] = ;;
		*node[0x5c761ac508d0] = =;
		*node[0x5c761ac507b0] = 13;
		*node[0x5c761ac508a0] = /;
		*node[0x5c761ac50840] = -;
		*node[0x5c761ac507e0] = 0;
		*node[0x5c761ac50810] = 2;
		*node[0x5c761ac50870] = 1;
		*node[0x5c761ac50900] = ;;
		*node[0x5c761ac50930] = print;
		*node[0x5c761ac50960] = 11;
		*node[0x5c761ac50990] = ;;
		*node[0x5c761ac509c0] = print;
		*node[0x5c761ac509f0] = 12;
		*node[0x5c761ac50a20] = 13;
		*node[0x5c761ac50a50] = ;;
		*node[0x5c761ac50c60] = =;
		*node[0x5c761ac50a80] = 14;
		*node[0x5c761ac50c30] = -;
		*node[0x5c761ac50b10] = *;
		*node[0x5c761ac50ab0] = 2;
		*node[0x5c761ac50ae0] = 2;
		*node[0x5c761ac50c00] = *;
		*node[0x5c761ac50ba0] = *;
		*node[0x5c761ac50b40] = 4;
		*node[0x5c761ac50b70] = 1;
		*node[0x5c761ac50bd0] = 3;
		*node[0x5c761ac50c90] = ;;
		*node[0x5c761ac50cc0] = if;
		*node[0x5c761ac50cf0] = op_no;
		*node[0x5c761ac50d80] = >;
		*node[0x5c761ac50d20] = 14;
		*node[0x5c761ac50d50] = 0;
		*node[0x5c761ac50db0] = ;;
		*node[0x5c761ac50ea0] = =;
		*node[0x5c761ac50de0] = 15;
		*node[0x5c761ac50e70] = sqrt;
		*node[0x5c761ac50e40] = 1;
		*node[0x5c761ac50e10] = 14;
		*node[0x5c761ac50ed0] = ;;
		*node[0x5c761ac510e0] = =;
		*node[0x5c761ac50f00] = 12;
		*node[0x5c761ac510b0] = /;
		*node[0x5c761ac50ff0] = -;
		*node[0x5c761ac50f90] = -;
		*node[0x5c761ac50f30] = 0;
		*node[0x5c761ac50f60] = 2;
		*node[0x5c761ac50fc0] = 15;
		*node[0x5c761ac51080] = *;
		*node[0x5c761ac51020] = 2;
		*node[0x5c761ac51050] = 1;
		*node[0x5c761ac51110] = ;;
		*node[0x5c761ac51320] = =;
		*node[0x5c761ac51140] = 13;
		*node[0x5c761ac512f0] = /;
		*node[0x5c761ac51230] = +;
		*node[0x5c761ac511d0] = -;
		*node[0x5c761ac51170] = 0;
		*node[0x5c761ac511a0] = 2;
		*node[0x5c761ac51200] = 15;
		*node[0x5c761ac512c0] = *;
		*node[0x5c761ac51260] = 2;
		*node[0x5c761ac51290] = 1;
		*node[0x5c761ac51350] = ;;
		*node[0x5c761ac51380] = print;
		*node[0x5c761ac513b0] = 11;
		*node[0x5c761ac513e0] = ;;
		*node[0x5c761ac51410] = print;
		*node[0x5c761ac51440] = 12;
		*node[0x5c761ac51470] = 13;
		*node[0x5c761ac514a0] = if;
		*node[0x5c761ac514d0] = op_no;
		*node[0x5c761ac51560] = ==;
		*node[0x5c761ac51500] = 14;
		*node[0x5c761ac51530] = 0;
		*node[0x5c761ac51590] = ;;
		*node[0x5c761ac51740] = =;
		*node[0x5c761ac515c0] = 10;
		*node[0x5c761ac51710] = /;
		*node[0x5c761ac51650] = -;
		*node[0x5c761ac515f0] = 0;
		*node[0x5c761ac51620] = 2;
		*node[0x5c761ac516e0] = *;
		*node[0x5c761ac51680] = 2;
		*node[0x5c761ac516b0] = 1;
		*node[0x5c761ac51770] = ;;
		*node[0x5c761ac517a0] = print;
		*node[0x5c761ac517d0] = 8;
		*node[0x5c761ac51800] = ;;
		*node[0x5c761ac51830] = print;
		*node[0x5c761ac51860] = 10;
		*node[0x5c761ac51890] = ;;
		*node[0x5c761ac518c0] = print;
		*node[0x5c761ac518f0] = 7;
		*node[0x5c761ac51920] = ;;
		*node[0x5c761ac51950] = return;
		*node[0x5c761ac51980] = 0;
		*node[0x5c761ac519b0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcaa10c140] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5834ead59220] = ;;

		*node[0x5834ead59250] = 0;

		*node[0x5834ead59280] = ;;

		*node[0x5834ead592b0] = input;

		*node[0x5834ead592e0] = 1;

		*node[0x5834ead59310] = 2;

		*node[0x5834ead59340] = 3;

		*node[0x5834ead59370] = ;;

		*node[0x5834ead593d0] = 1;

		*node[0x5834ead59400] = 2;

		*node[0x5834ead59430] = 3;

		*node[0x5834ead59460] = ;;

		*node[0x5834ead59490] = 4;

		*node[0x5834ead594c0] = 1;

		*node[0x5834ead594f0] = 2;

		*node[0x5834ead59520] = 3;

		*node[0x5834ead59550] = ;;

		*node[0x5834ead59580] = if;

		*node[0x5834ead595b0] = op_no;

		*node[0x5834ead59640] = ==;

		*node[0x5834ead595e0] = 1;

		*node[0x5834ead59610] = 0;

		*node[0x5834ead59670] = ;;

		*node[0x5834ead596d0] = 2;

		*node[0x5834ead59700] = 3;

		*node[0x5834ead59730] = ;;

		*node[0x5834ead59790] = 1;

		*node[0x5834ead597c0] = 2;

		*node[0x5834ead597f0] = 3;

		*node[0x5834ead59820] = ;;

		*node[0x5834ead59850] = 5;

		*node[0x5834ead59880] = 1;

		*node[0x5834ead598b0] = 2;

		*node[0x5834ead598e0] = ;;

		*node[0x5834ead599d0] = =;

		*node[0x5834ead59910] = 7;

		*node[0x5834ead599a0] = -;

		*node[0x5834ead59940] = 0;

		*node[0x5834ead59970] = 1;

		*node[0x5834ead59a00] = ;;

		*node[0x5834ead59a90] = =;

		*node[0x5834ead59a30] = 8;

		*node[0x5834ead59a60] = 1;

		*node[0x5834ead59ac0] = ;;

		*node[0x5834ead59b50] = =;

		*node[0x5834ead59af0] = 9;

		*node[0x5834ead59b20] = 1000;

		*node[0x5834ead59b80] = ;;

		*node[0x5834ead59bb0] = if;

		*node[0x5834ead59be0] = op_no;

		*node[0x5834ead59c70] = ==;

		*node[0x5834ead59c10] = 1;

		*node[0x5834ead59c40] = 0;

		*node[0x5834ead59ca0] = ;;

		*node[0x5834ead59cd0] = if;

		*node[0x5834ead59d00] = op_no;

		*node[0x5834ead59d90] = ==;

		*node[0x5834ead59d30] = 2;

		*node[0x5834ead59d60] = 0;

		*node[0x5834ead59dc0] = ;;

		*node[0x5834ead59df0] = print;

		*node[0x5834ead59e20] = 9;

		*node[0x5834ead59e50] = ;;

		*node[0x5834ead59e80] = print;

		*node[0x5834ead59eb0] = 7;

		*node[0x5834ead59ee0] = ;;

		*node[0x5834ead5a030] = =;

		*node[0x5834ead59f10] = 10;

		*node[0x5834ead5a000] = /;

		*node[0x5834ead59fa0] = -;

		*node[0x5834ead59f40] = 0;

		*node[0x5834ead59f70] = 2;

		*node[0x5834ead59fd0] = 1;

		*node[0x5834ead5a060] = ;;

		*node[0x5834ead5a090] = print;

		*node[0x5834ead5a0c0] = 8;

		*node[0x5834ead5a0f0] = ;;

		*node[0x5834ead5a120] = print;

		*node[0x5834ead5a150] = 10;

		*node[0x5834ead5a180] = ;;

		*node[0x5834ead5a1b0] = return;

		*node[0x5834ead5a1e0] = 0;

		*node[0x5834ead5a210] = ;;

		*node[0x5834ead5a240] = 6;

		*node[0x5834ead5a270] = 1;

		*node[0x5834ead5a2a0] = 2;

		*node[0x5834ead5a2d0] = 3;

		*node[0x5834ead5a300] = ;;

		*node[0x5834ead5a3f0] = =;

		*node[0x5834ead5a330] = 7;

		*node[0x5834ead5a3c0] = -;

		*node[0x5834ead5a360] = 0;

		*node[0x5834ead5a390] = 1;

		*node[0x5834ead5a420] = ;;

		*node[0x5834ead5a4b0] = =;

		*node[0x5834ead5a450] = 8;

		*node[0x5834ead5a480] = 1;

		*node[0x5834ead5a4e0] = ;;

		*node[0x5834ead5a570] = =;

		*node[0x5834ead5a510] = 11;

		*node[0x5834ead5a540] = 2;

		*node[0x5834ead5a5a0] = ;;

		*node[0x5834ead5a5d0] = if;

		*node[0x5834ead5a600] = op_no;

		*node[0x5834ead5a690] = ==;

		*node[0x5834ead5a630] = 3;

		*node[0x5834ead5a660] = 0;

		*node[0x5834ead5a6c0] = ;;

		*node[0x5834ead5a750] = =;

		*node[0x5834ead5a6f0] = 12;

		*node[0x5834ead5a720] = 0;

		*node[0x5834ead5a780] = ;;

		*node[0x5834ead5a8d0] = =;

		*node[0x5834ead5a7b0] = 13;

		*node[0x5834ead5a8a0] = /;

		*node[0x5834ead5a840] = -;

		*node[0x5834ead5a7e0] = 0;

		*node[0x5834ead5a810] = 2;

		*node[0x5834ead5a870] = 1;

		*node[0x5834ead5a900] = ;;

		*node[0x5834ead5a930] = print;

		*node[0x5834ead5a960] = 11;

		*node[0x5834ead5a990] = ;;

		*node[0x5834ead5a9c0] = print;

		*node[0x5834ead5a9f0] = 12;

		*node[0x5834ead5aa20] = 13;

		*node[0x5834ead5aa50] = ;;

		*node[0x5834ead5ac60] = =;

		*node[0x5834ead5aa80] = 14;

		*node[0x5834ead5ac30] = -;

		*node[0x5834ead5ab10] = *;

		*node[0x5834ead5aab0] = 2;

		*node[0x5834ead5aae0] = 2;

		*node[0x5834ead5ac00] = *;

		*node[0x5834ead5aba0] = *;

		*node[0x5834ead5ab40] = 4;

		*node[0x5834ead5ab70] = 1;

		*node[0x5834ead5abd0] = 3;

		*node[0x5834ead5ac90] = ;;

		*node[0x5834ead5acc0] = if;

		*node[0x5834ead5acf0] = op_no;

		*node[0x5834ead5ad80] = >;

		*node[0x5834ead5ad20] = 14;

		*node[0x5834ead5ad50] = 0;

		*node[0x5834ead5adb0] = ;;

		*node[0x5834ead5aea0] = =;

		*node[0x5834ead5ade0] = 15;

		*node[0x5834ead5ae70] = sqrt;

		*node[0x5834ead5ae40] = 1;

		*node[0x5834ead5ae10] = 14;

		*node[0x5834ead5aed0] = ;;

		*node[0x5834ead5b0e0] = =;

		*node[0x5834ead5af00] = 12;

		*node[0x5834ead5b0b0] = /;

		*node[0x5834ead5aff0] = -;

		*node[0x5834ead5af90] = -;

		*node[0x5834ead5af30] = 0;

		*node[0x5834ead5af60] = 2;

		*node[0x5834ead5afc0] = 15;

		*node[0x5834ead5b080] = *;

		*node[0x5834ead5b020] = 2;

		*node[0x5834ead5b050] = 1;

		*node[0x5834ead5b110] = ;;

		*node[0x5834ead5b320] = =;

		*node[0x5834ead5b140] = 13;

		*node[0x5834ead5b2f0] = /;

		*node[0x5834ead5b230] = +;

		*node[0x5834ead5b1d0] = -;

		*node[0x5834ead5b170] = 0;

		*node[0x5834ead5b1a0] = 2;

		*node[0x5834ead5b200] = 15;

		*node[0x5834ead5b2c0] = *;

		*node[0x5834ead5b260] = 2;

		*node[0x5834ead5b290] = 1;

		*node[0x5834ead5b350] = ;;

		*node[0x5834ead5b380] = print;

		*node[0x5834ead5b3b0] = 11;

		*node[0x5834ead5b3e0] = ;;

		*node[0x5834ead5b410] = print;

		*node[0x5834ead5b440] = 12;

		*node[0x5834ead5b470] = 13;

		*node[0x5834ead5b4a0] = if;

		*node[0x5834ead5b4d0] = op_no;

		*node[0x5834ead5b560] = ==;

		*node[0x5834ead5b500] = 14;

		*node[0x5834ead5b530] = 0;

		*node[0x5834ead5b590] = ;;

		*node[0x5834ead5b740] = =;

		*node[0x5834ead5b5c0] = 10;

		*node[0x5834ead5b710] = /;

		*node[0x5834ead5b650] = -;

		*node[0x5834ead5b5f0] = 0;

		*node[0x5834ead5b620] = 2;

		*node[0x5834ead5b6e0] = *;

		*node[0x5834ead5b680] = 2;

		*node[0x5834ead5b6b0] = 1;

		*node[0x5834ead5b770] = ;;

		*node[0x5834ead5b7a0] = print;

		*node[0x5834ead5b7d0] = 8;

		*node[0x5834ead5b800] = ;;

		*node[0x5834ead5b830] = print;

		*node[0x5834ead5b860] = 10;

		*node[0x5834ead5b890] = ;;

		*node[0x5834ead5b8c0] = print;

		*node[0x5834ead5b8f0] = 7;

		*node[0x5834ead5b920] = ;;

		*node[0x5834ead5b950] = return;

		*node[0x5834ead5b980] = 0;

		*node[0x5834ead5b9b0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffeaac11620] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x59a72e32b220] = ;;

		*node[0x59a72e32b250] = 0;

		*node[0x59a72e32b280] = ;;

		*node[0x59a72e32b2b0] = input;

		*node[0x59a72e32b2e0] = 1;

		*node[0x59a72e32b310] = 2;

		*node[0x59a72e32b340] = 3;

		*node[0x59a72e32b370] = ;;

		*node[0x59a72e32b3d0] = 1;

		*node[0x59a72e32b400] = 2;

		*node[0x59a72e32b430] = 3;

		*node[0x59a72e32b460] = ;;

		*node[0x59a72e32b490] = 4;

		*node[0x59a72e32b4c0] = 1;

		*node[0x59a72e32b4f0] = 2;

		*node[0x59a72e32b520] = 3;

		*node[0x59a72e32b550] = ;;

		*node[0x59a72e32b580] = if;

		*node[0x59a72e32b5b0] = op_no;

		*node[0x59a72e32b640] = ==;

		*node[0x59a72e32b5e0] = 1;

		*node[0x59a72e32b610] = 0;

		*node[0x59a72e32b670] = ;;

		*node[0x59a72e32b6d0] = 2;

		*node[0x59a72e32b700] = 3;

		*node[0x59a72e32b730] = ;;

		*node[0x59a72e32b790] = 1;

		*node[0x59a72e32b7c0] = 2;

		*node[0x59a72e32b7f0] = 3;

		*node[0x59a72e32b820] = ;;

		*node[0x59a72e32b850] = 5;

		*node[0x59a72e32b880] = 1;

		*node[0x59a72e32b8b0] = 2;

		*node[0x59a72e32b8e0] = ;;

		*node[0x59a72e32b9d0] = =;

		*node[0x59a72e32b910] = 7;

		*node[0x59a72e32b9a0] = -;

		*node[0x59a72e32b940] = 0;

		*node[0x59a72e32b970] = 1;

		*node[0x59a72e32ba00] = ;;

		*node[0x59a72e32ba90] = =;

		*node[0x59a72e32ba30] = 8;

		*node[0x59a72e32ba60] = 1;

		*node[0x59a72e32bac0] = ;;

		*node[0x59a72e32bb50] = =;

		*node[0x59a72e32baf0] = 9;

		*node[0x59a72e32bb20] = 1000;

		*node[0x59a72e32bb80] = ;;

		*node[0x59a72e32bbb0] = if;

		*node[0x59a72e32bbe0] = op_no;

		*node[0x59a72e32bc70] = ==;

		*node[0x59a72e32bc10] = 1;

		*node[0x59a72e32bc40] = 0;

		*node[0x59a72e32bca0] = ;;

		*node[0x59a72e32bcd0] = if;

		*node[0x59a72e32bd00] = op_no;

		*node[0x59a72e32bd90] = ==;

		*node[0x59a72e32bd30] = 2;

		*node[0x59a72e32bd60] = 0;

		*node[0x59a72e32bdc0] = ;;

		*node[0x59a72e32bdf0] = print;

		*node[0x59a72e32be20] = 9;

		*node[0x59a72e32be50] = ;;

		*node[0x59a72e32be80] = print;

		*node[0x59a72e32beb0] = 7;

		*node[0x59a72e32bee0] = ;;

		*node[0x59a72e32c030] = =;

		*node[0x59a72e32bf10] = 10;

		*node[0x59a72e32c000] = /;

		*node[0x59a72e32bfa0] = -;

		*node[0x59a72e32bf40] = 0;

		*node[0x59a72e32bf70] = 2;

		*node[0x59a72e32bfd0] = 1;

		*node[0x59a72e32c060] = ;;

		*node[0x59a72e32c090] = print;

		*node[0x59a72e32c0c0] = 8;

		*node[0x59a72e32c0f0] = ;;

		*node[0x59a72e32c120] = print;

		*node[0x59a72e32c150] = 10;

		*node[0x59a72e32c180] = ;;

		*node[0x59a72e32c1b0] = return;

		*node[0x59a72e32c1e0] = 0;

		*node[0x59a72e32c210] = ;;

		*node[0x59a72e32c240] = 6;

		*node[0x59a72e32c270] = 1;

		*node[0x59a72e32c2a0] = 2;

		*node[0x59a72e32c2d0] = 3;

		*node[0x59a72e32c300] = ;;

		*node[0x59a72e32c3f0] = =;

		*node[0x59a72e32c330] = 7;

		*node[0x59a72e32c3c0] = -;

		*node[0x59a72e32c360] = 0;

		*node[0x59a72e32c390] = 1;

		*node[0x59a72e32c420] = ;;

		*node[0x59a72e32c4b0] = =;

		*node[0x59a72e32c450] = 8;

		*node[0x59a72e32c480] = 1;

		*node[0x59a72e32c4e0] = ;;

		*node[0x59a72e32c570] = =;

		*node[0x59a72e32c510] = 11;

		*node[0x59a72e32c540] = 2;

		*node[0x59a72e32c5a0] = ;;

		*node[0x59a72e32c5d0] = if;

		*node[0x59a72e32c600] = op_no;

		*node[0x59a72e32c690] = ==;

		*node[0x59a72e32c630] = 3;

		*node[0x59a72e32c660] = 0;

		*node[0x59a72e32c6c0] = ;;

		*node[0x59a72e32c750] = =;

		*node[0x59a72e32c6f0] = 12;

		*node[0x59a72e32c720] = 0;

		*node[0x59a72e32c780] = ;;

		*node[0x59a72e32c8d0] = =;

		*node[0x59a72e32c7b0] = 13;

		*node[0x59a72e32c8a0] = /;

		*node[0x59a72e32c840] = -;

		*node[0x59a72e32c7e0] = 0;

		*node[0x59a72e32c810] = 2;

		*node[0x59a72e32c870] = 1;

		*node[0x59a72e32c900] = ;;

		*node[0x59a72e32c930] = print;

		*node[0x59a72e32c960] = 11;

		*node[0x59a72e32c990] = ;;

		*node[0x59a72e32c9c0] = print;

		*node[0x59a72e32c9f0] = 12;

		*node[0x59a72e32ca20] = 13;

		*node[0x59a72e32ca50] = ;;

		*node[0x59a72e32cc60] = =;

		*node[0x59a72e32ca80] = 14;

		*node[0x59a72e32cc30] = -;

		*node[0x59a72e32cb10] = *;

		*node[0x59a72e32cab0] = 2;

		*node[0x59a72e32cae0] = 2;

		*node[0x59a72e32cc00] = *;

		*node[0x59a72e32cba0] = *;

		*node[0x59a72e32cb40] = 4;

		*node[0x59a72e32cb70] = 1;

		*node[0x59a72e32cbd0] = 3;

		*node[0x59a72e32cc90] = ;;

		*node[0x59a72e32ccc0] = if;

		*node[0x59a72e32ccf0] = op_no;

		*node[0x59a72e32cd80] = >;

		*node[0x59a72e32cd20] = 14;

		*node[0x59a72e32cd50] = 0;

		*node[0x59a72e32cdb0] = ;;

		*node[0x59a72e32ce70] = =;

		*node[0x59a72e32cde0] = 15;

		*node[0x59a72e32ce40] = sqrt;

		*node[0x59a72e32ce10] = 14;

		*node[0x59a72e32cea0] = ;;

		*node[0x59a72e32d0b0] = =;

		*node[0x59a72e32ced0] = 12;

		*node[0x59a72e32d080] = /;

		*node[0x59a72e32cfc0] = -;

		*node[0x59a72e32cf60] = -;

		*node[0x59a72e32cf00] = 0;

		*node[0x59a72e32cf30] = 2;

		*node[0x59a72e32cf90] = 15;

		*node[0x59a72e32d050] = *;

		*node[0x59a72e32cff0] = 2;

		*node[0x59a72e32d020] = 1;

		*node[0x59a72e32d0e0] = ;;

		*node[0x59a72e32d2f0] = =;

		*node[0x59a72e32d110] = 13;

		*node[0x59a72e32d2c0] = /;

		*node[0x59a72e32d200] = +;

		*node[0x59a72e32d1a0] = -;

		*node[0x59a72e32d140] = 0;

		*node[0x59a72e32d170] = 2;

		*node[0x59a72e32d1d0] = 15;

		*node[0x59a72e32d290] = *;

		*node[0x59a72e32d230] = 2;

		*node[0x59a72e32d260] = 1;

		*node[0x59a72e32d320] = ;;

		*node[0x59a72e32d350] = print;

		*node[0x59a72e32d380] = 11;

		*node[0x59a72e32d3b0] = ;;

		*node[0x59a72e32d3e0] = print;

		*node[0x59a72e32d410] = 12;

		*node[0x59a72e32d440] = 13;

		*node[0x59a72e32d470] = if;

		*node[0x59a72e32d4a0] = op_no;

		*node[0x59a72e32d530] = ==;

		*node[0x59a72e32d4d0] = 14;

		*node[0x59a72e32d500] = 0;

		*node[0x59a72e32d560] = ;;

		*node[0x59a72e32d710] = =;

		*node[0x59a72e32d590] = 10;

		*node[0x59a72e32d6e0] = /;

		*node[0x59a72e32d620] = -;

		*node[0x59a72e32d5c0] = 0;

		*node[0x59a72e32d5f0] = 2;

		*node[0x59a72e32d6b0] = *;

		*node[0x59a72e32d650] = 2;

		*node[0x59a72e32d680] = 1;

		*node[0x59a72e32d740] = ;;

		*node[0x59a72e32d770] = print;

		*node[0x59a72e32d7a0] = 8;

		*node[0x59a72e32d7d0] = ;;

		*node[0x59a72e32d800] = print;

		*node[0x59a72e32d830] = 10;

		*node[0x59a72e32d860] = ;;

		*node[0x59a72e32d890] = print;

		*node[0x59a72e32d8c0] = 7;

		*node[0x59a72e32d8f0] = ;;

		*node[0x59a72e32d920] = return;

		*node[0x59a72e32d950] = 0;

		*node[0x59a72e32d980] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffdff06d590] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffdff06d590] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fffe3e1b040] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7fffe3e1b040] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffce4afda60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffce4afda60] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffeaf10fc60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffeaf10fc60] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fff048c6e00] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7fff048c6e00] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcbe217860] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x63a1d48f5620] = ;;

		*node[0x63a1d48f5650] = 0;

		*node[0x63a1d48f5680] = ;;

		*node[0x63a1d48f56b0] = input;

		*node[0x63a1d48f56e0] = 1;

		*node[0x63a1d48f5710] = 2;

		*node[0x63a1d48f5740] = 3;

		*node[0x63a1d48f5770] = ;;

		*node[0x63a1d48f57d0] = 1;

		*node[0x63a1d48f5800] = 2;

		*node[0x63a1d48f5830] = 3;

		*node[0x63a1d48f5860] = ;;

		*node[0x63a1d48f5890] = 4;

		*node[0x63a1d48f58c0] = 1;

		*node[0x63a1d48f58f0] = 2;

		*node[0x63a1d48f5920] = 3;

		*node[0x63a1d48f5950] = ;;

		*node[0x63a1d48f5980] = if;

		*node[0x63a1d48f59b0] = op_no;

		*node[0x63a1d48f5a40] = ==;

		*node[0x63a1d48f59e0] = 1;

		*node[0x63a1d48f5a10] = 0;

		*node[0x63a1d48f5a70] = ;;

		*node[0x63a1d48f5ad0] = 2;

		*node[0x63a1d48f5b00] = 3;

		*node[0x63a1d48f5b30] = else;

		*node[0x63a1d48f5b60] = op_no;

		*node[0x63a1d48f5b90] = ;;

		*node[0x63a1d48f5bf0] = 1;

		*node[0x63a1d48f5c20] = 2;

		*node[0x63a1d48f5c50] = 3;

		*node[0x63a1d48f5c80] = ;;

		*node[0x63a1d48f5cb0] = 5;

		*node[0x63a1d48f5ce0] = 1;

		*node[0x63a1d48f5d10] = 2;

		*node[0x63a1d48f5d40] = ;;

		*node[0x63a1d48f5e30] = =;

		*node[0x63a1d48f5d70] = 7;

		*node[0x63a1d48f5e00] = -;

		*node[0x63a1d48f5da0] = 0;

		*node[0x63a1d48f5dd0] = 1;

		*node[0x63a1d48f5e60] = ;;

		*node[0x63a1d48f5ef0] = =;

		*node[0x63a1d48f5e90] = 8;

		*node[0x63a1d48f5ec0] = 1;

		*node[0x63a1d48f5f20] = ;;

		*node[0x63a1d48f5fb0] = =;

		*node[0x63a1d48f5f50] = 9;

		*node[0x63a1d48f5f80] = 1000;

		*node[0x63a1d48f5fe0] = ;;

		*node[0x63a1d48f6010] = if;

		*node[0x63a1d48f6040] = op_no;

		*node[0x63a1d48f60d0] = ==;

		*node[0x63a1d48f6070] = 1;

		*node[0x63a1d48f60a0] = 0;

		*node[0x63a1d48f6100] = ;;

		*node[0x63a1d48f6130] = if;

		*node[0x63a1d48f6160] = op_no;

		*node[0x63a1d48f61f0] = ==;

		*node[0x63a1d48f6190] = 2;

		*node[0x63a1d48f61c0] = 0;

		*node[0x63a1d48f6220] = ;;

		*node[0x63a1d48f6250] = print;

		*node[0x63a1d48f6280] = 9;

		*node[0x63a1d48f62b0] = else;

		*node[0x63a1d48f62e0] = op_no;

		*node[0x63a1d48f6310] = ;;

		*node[0x63a1d48f6340] = print;

		*node[0x63a1d48f6370] = 7;

		*node[0x63a1d48f63a0] = else;

		*node[0x63a1d48f63d0] = op_no;

		*node[0x63a1d48f6400] = ;;

		*node[0x63a1d48f6550] = =;

		*node[0x63a1d48f6430] = 10;

		*node[0x63a1d48f6520] = /;

		*node[0x63a1d48f64c0] = -;

		*node[0x63a1d48f6460] = 0;

		*node[0x63a1d48f6490] = 2;

		*node[0x63a1d48f64f0] = 1;

		*node[0x63a1d48f6580] = ;;

		*node[0x63a1d48f65b0] = print;

		*node[0x63a1d48f65e0] = 8;

		*node[0x63a1d48f6610] = ;;

		*node[0x63a1d48f6640] = print;

		*node[0x63a1d48f6670] = 10;

		*node[0x63a1d48f66a0] = ;;

		*node[0x63a1d48f66d0] = return;

		*node[0x63a1d48f6700] = 0;

		*node[0x63a1d48f6730] = ;;

		*node[0x63a1d48f6760] = 6;

		*node[0x63a1d48f6790] = 1;

		*node[0x63a1d48f67c0] = 2;

		*node[0x63a1d48f67f0] = 3;

		*node[0x63a1d48f6820] = ;;

		*node[0x63a1d48f6910] = =;

		*node[0x63a1d48f6850] = 7;

		*node[0x63a1d48f68e0] = -;

		*node[0x63a1d48f6880] = 0;

		*node[0x63a1d48f68b0] = 1;

		*node[0x63a1d48f6940] = ;;

		*node[0x63a1d48f69d0] = =;

		*node[0x63a1d48f6970] = 8;

		*node[0x63a1d48f69a0] = 1;

		*node[0x63a1d48f6a00] = ;;

		*node[0x63a1d48f6a90] = =;

		*node[0x63a1d48f6a30] = 11;

		*node[0x63a1d48f6a60] = 2;

		*node[0x63a1d48f6ac0] = ;;

		*node[0x63a1d48f6af0] = if;

		*node[0x63a1d48f6b20] = op_no;

		*node[0x63a1d48f6bb0] = ==;

		*node[0x63a1d48f6b50] = 3;

		*node[0x63a1d48f6b80] = 0;

		*node[0x63a1d48f6be0] = ;;

		*node[0x63a1d48f6c70] = =;

		*node[0x63a1d48f6c10] = 12;

		*node[0x63a1d48f6c40] = 0;

		*node[0x63a1d48f6ca0] = ;;

		*node[0x63a1d48f6df0] = =;

		*node[0x63a1d48f6cd0] = 13;

		*node[0x63a1d48f6dc0] = /;

		*node[0x63a1d48f6d60] = -;

		*node[0x63a1d48f6d00] = 0;

		*node[0x63a1d48f6d30] = 2;

		*node[0x63a1d48f6d90] = 1;

		*node[0x63a1d48f6e20] = ;;

		*node[0x63a1d48f6e50] = print;

		*node[0x63a1d48f6e80] = 11;

		*node[0x63a1d48f6eb0] = ;;

		*node[0x63a1d48f6ee0] = print;

		*node[0x63a1d48f6f10] = 12;

		*node[0x63a1d48f6f40] = 13;

		*node[0x63a1d48f6f70] = else;

		*node[0x63a1d48f6fa0] = op_no;

		*node[0x63a1d48f6fd0] = ;;

		*node[0x63a1d48f71e0] = =;

		*node[0x63a1d48f7000] = 14;

		*node[0x63a1d48f71b0] = -;

		*node[0x63a1d48f7090] = *;

		*node[0x63a1d48f7030] = 2;

		*node[0x63a1d48f7060] = 2;

		*node[0x63a1d48f7180] = *;

		*node[0x63a1d48f7120] = *;

		*node[0x63a1d48f70c0] = 4;

		*node[0x63a1d48f70f0] = 1;

		*node[0x63a1d48f7150] = 3;

		*node[0x63a1d48f7210] = ;;

		*node[0x63a1d48f7240] = if;

		*node[0x63a1d48f7270] = op_no;

		*node[0x63a1d48f7300] = >;

		*node[0x63a1d48f72a0] = 14;

		*node[0x63a1d48f72d0] = 0;

		*node[0x63a1d48f7330] = ;;

		*node[0x63a1d48f73f0] = =;

		*node[0x63a1d48f7360] = 15;

		*node[0x63a1d48f73c0] = sqrt;

		*node[0x63a1d48f7390] = 14;

		*node[0x63a1d48f7420] = ;;

		*node[0x63a1d48f7630] = =;

		*node[0x63a1d48f7450] = 12;

		*node[0x63a1d48f7600] = /;

		*node[0x63a1d48f7540] = -;

		*node[0x63a1d48f74e0] = -;

		*node[0x63a1d48f7480] = 0;

		*node[0x63a1d48f74b0] = 2;

		*node[0x63a1d48f7510] = 15;

		*node[0x63a1d48f75d0] = *;

		*node[0x63a1d48f7570] = 2;

		*node[0x63a1d48f75a0] = 1;

		*node[0x63a1d48f7660] = ;;

		*node[0x63a1d48f7870] = =;

		*node[0x63a1d48f7690] = 13;

		*node[0x63a1d48f7840] = /;

		*node[0x63a1d48f7780] = +;

		*node[0x63a1d48f7720] = -;

		*node[0x63a1d48f76c0] = 0;

		*node[0x63a1d48f76f0] = 2;

		*node[0x63a1d48f7750] = 15;

		*node[0x63a1d48f7810] = *;

		*node[0x63a1d48f77b0] = 2;

		*node[0x63a1d48f77e0] = 1;

		*node[0x63a1d48f78a0] = ;;

		*node[0x63a1d48f78d0] = print;

		*node[0x63a1d48f7900] = 11;

		*node[0x63a1d48f7930] = ;;

		*node[0x63a1d48f7960] = print;

		*node[0x63a1d48f7990] = 12;

		*node[0x63a1d48f79c0] = 13;

		*node[0x63a1d48f79f0] = elseif;

		*node[0x63a1d48f7a20] = op_no;

		*node[0x63a1d48f7ab0] = ==;

		*node[0x63a1d48f7a50] = 14;

		*node[0x63a1d48f7a80] = 0;

		*node[0x63a1d48f7ae0] = ;;

		*node[0x63a1d48f7c90] = =;

		*node[0x63a1d48f7b10] = 10;

		*node[0x63a1d48f7c60] = /;

		*node[0x63a1d48f7ba0] = -;

		*node[0x63a1d48f7b40] = 0;

		*node[0x63a1d48f7b70] = 2;

		*node[0x63a1d48f7c30] = *;

		*node[0x63a1d48f7bd0] = 2;

		*node[0x63a1d48f7c00] = 1;

		*node[0x63a1d48f7cc0] = ;;

		*node[0x63a1d48f7cf0] = print;

		*node[0x63a1d48f7d20] = 8;

		*node[0x63a1d48f7d50] = ;;

		*node[0x63a1d48f7d80] = print;

		*node[0x63a1d48f7db0] = 10;

		*node[0x63a1d48f7de0] = else;

		*node[0x63a1d48f7e10] = op_no;

		*node[0x63a1d48f7e40] = ;;

		*node[0x63a1d48f7e70] = print;

		*node[0x63a1d48f7ea0] = 7;

		*node[0x63a1d48f7ed0] = ;;

		*node[0x63a1d48f7f00] = return;

		*node[0x63a1d48f7f30] = 0;

		*node[0x63a1d48f7f60] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffc3a57e20] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x653e9e6f9210] = ;;

		*node[0x653e9e6f9240] = 0;

		*node[0x653e9e6f9270] = ;;

		*node[0x653e9e6f92a0] = input;

		*node[0x653e9e6f92d0] = 1;

		*node[0x653e9e6f9300] = 2;

		*node[0x653e9e6f9330] = 3;

		*node[0x653e9e6f9360] = ;;

		*node[0x653e9e6f93c0] = 1;

		*node[0x653e9e6f93f0] = 2;

		*node[0x653e9e6f9420] = 3;

		*node[0x653e9e6f9450] = ;;

		*node[0x653e9e6f9480] = 4;

		*node[0x653e9e6f94b0] = 1;

		*node[0x653e9e6f94e0] = 2;

		*node[0x653e9e6f9510] = 3;

		*node[0x653e9e6f9540] = ;;

		*node[0x653e9e6f9570] = if;

		*node[0x653e9e6f95a0] = op_no;

		*node[0x653e9e6f9630] = ==;

		*node[0x653e9e6f95d0] = 1;

		*node[0x653e9e6f9600] = 0;

		*node[0x653e9e6f9660] = ;;

		*node[0x653e9e6f96c0] = 2;

		*node[0x653e9e6f96f0] = 3;

		*node[0x653e9e6f9720] = else;

		*node[0x653e9e6f9750] = op_no;

		*node[0x653e9e6f9b90] = ;;

		*node[0x653e9e6f9bf0] = 1;

		*node[0x653e9e6f9c20] = 2;

		*node[0x653e9e6f9c50] = 3;

		*node[0x653e9e6f9c80] = ;;

		*node[0x653e9e6f9cb0] = 5;

		*node[0x653e9e6f9ce0] = 1;

		*node[0x653e9e6f9d10] = 2;

		*node[0x653e9e6f9d40] = ;;

		*node[0x653e9e6f9e30] = =;

		*node[0x653e9e6f9d70] = 7;

		*node[0x653e9e6f9e00] = -;

		*node[0x653e9e6f9da0] = 0;

		*node[0x653e9e6f9dd0] = 1;

		*node[0x653e9e6f9e60] = ;;

		*node[0x653e9e6f9ef0] = =;

		*node[0x653e9e6f9e90] = 8;

		*node[0x653e9e6f9ec0] = 1;

		*node[0x653e9e6f9f20] = ;;

		*node[0x653e9e6f9fb0] = =;

		*node[0x653e9e6f9f50] = 9;

		*node[0x653e9e6f9f80] = 1000;

		*node[0x653e9e6f9fe0] = ;;

		*node[0x653e9e6fa010] = if;

		*node[0x653e9e6fa040] = op_no;

		*node[0x653e9e6fa0d0] = ==;

		*node[0x653e9e6fa070] = 1;

		*node[0x653e9e6fa0a0] = 0;

		*node[0x653e9e6fa100] = ;;

		*node[0x653e9e6fa130] = if;

		*node[0x653e9e6fa160] = op_no;

		*node[0x653e9e6fa1f0] = ==;

		*node[0x653e9e6fa190] = 2;

		*node[0x653e9e6fa1c0] = 0;

		*node[0x653e9e6fa220] = ;;

		*node[0x653e9e6fa250] = print;

		*node[0x653e9e6fa280] = 9;

		*node[0x653e9e6fa2b0] = else;

		*node[0x653e9e6fa2e0] = op_no;

		*node[0x653e9e6fa310] = ;;

		*node[0x653e9e6fa340] = print;

		*node[0x653e9e6fa370] = 7;

		*node[0x653e9e6fa3a0] = else;

		*node[0x653e9e6fa3d0] = op_no;

		*node[0x653e9e6fa400] = ;;

		*node[0x653e9e6fa550] = =;

		*node[0x653e9e6fa430] = 10;

		*node[0x653e9e6fa520] = /;

		*node[0x653e9e6fa4c0] = -;

		*node[0x653e9e6fa460] = 0;

		*node[0x653e9e6fa490] = 2;

		*node[0x653e9e6fa4f0] = 1;

		*node[0x653e9e6fa580] = ;;

		*node[0x653e9e6fa5b0] = print;

		*node[0x653e9e6fa5e0] = 8;

		*node[0x653e9e6fa610] = ;;

		*node[0x653e9e6fa640] = print;

		*node[0x653e9e6fa670] = 10;

		*node[0x653e9e6fa6a0] = ;;

		*node[0x653e9e6fa6d0] = return;

		*node[0x653e9e6fa700] = 0;

		*node[0x653e9e6fa730] = ;;

		*node[0x653e9e6fa760] = 6;

		*node[0x653e9e6fa790] = 1;

		*node[0x653e9e6fa7c0] = 2;

		*node[0x653e9e6fa7f0] = 3;

		*node[0x653e9e6fa820] = ;;

		*node[0x653e9e6fa910] = =;

		*node[0x653e9e6fa850] = 7;

		*node[0x653e9e6fa8e0] = -;

		*node[0x653e9e6fa880] = 0;

		*node[0x653e9e6fa8b0] = 1;

		*node[0x653e9e6fa940] = ;;

		*node[0x653e9e6fa9d0] = =;

		*node[0x653e9e6fa970] = 8;

		*node[0x653e9e6fa9a0] = 1;

		*node[0x653e9e6faa00] = ;;

		*node[0x653e9e6faa90] = =;

		*node[0x653e9e6faa30] = 11;

		*node[0x653e9e6faa60] = 2;

		*node[0x653e9e6faac0] = ;;

		*node[0x653e9e6faaf0] = if;

		*node[0x653e9e6fab20] = op_no;

		*node[0x653e9e6fabb0] = ==;

		*node[0x653e9e6fab50] = 3;

		*node[0x653e9e6fab80] = 0;

		*node[0x653e9e6fabe0] = ;;

		*node[0x653e9e6fac70] = =;

		*node[0x653e9e6fac10] = 12;

		*node[0x653e9e6fac40] = 0;

		*node[0x653e9e6faca0] = ;;

		*node[0x653e9e6fadf0] = =;

		*node[0x653e9e6facd0] = 13;

		*node[0x653e9e6fadc0] = /;

		*node[0x653e9e6fad60] = -;

		*node[0x653e9e6fad00] = 0;

		*node[0x653e9e6fad30] = 2;

		*node[0x653e9e6fad90] = 1;

		*node[0x653e9e6fae20] = ;;

		*node[0x653e9e6fae50] = print;

		*node[0x653e9e6fae80] = 11;

		*node[0x653e9e6faeb0] = ;;

		*node[0x653e9e6faee0] = print;

		*node[0x653e9e6faf10] = 12;

		*node[0x653e9e6faf40] = 13;

		*node[0x653e9e6faf70] = else;

		*node[0x653e9e6fafa0] = op_no;

		*node[0x653e9e6fafd0] = ;;

		*node[0x653e9e6fb1e0] = =;

		*node[0x653e9e6fb000] = 14;

		*node[0x653e9e6fb1b0] = -;

		*node[0x653e9e6fb090] = *;

		*node[0x653e9e6fb030] = 2;

		*node[0x653e9e6fb060] = 2;

		*node[0x653e9e6fb180] = *;

		*node[0x653e9e6fb120] = *;

		*node[0x653e9e6fb0c0] = 4;

		*node[0x653e9e6fb0f0] = 1;

		*node[0x653e9e6fb150] = 3;

		*node[0x653e9e6fb210] = ;;

		*node[0x653e9e6fb240] = if;

		*node[0x653e9e6fb270] = op_no;

		*node[0x653e9e6fb300] = >;

		*node[0x653e9e6fb2a0] = 14;

		*node[0x653e9e6fb2d0] = 0;

		*node[0x653e9e6fb330] = ;;

		*node[0x653e9e6fb3f0] = =;

		*node[0x653e9e6fb360] = 15;

		*node[0x653e9e6fb3c0] = sqrt;

		*node[0x653e9e6fb390] = 14;

		*node[0x653e9e6fb420] = ;;

		*node[0x653e9e6fb630] = =;

		*node[0x653e9e6fb450] = 12;

		*node[0x653e9e6fb600] = /;

		*node[0x653e9e6fb540] = -;

		*node[0x653e9e6fb4e0] = -;

		*node[0x653e9e6fb480] = 0;

		*node[0x653e9e6fb4b0] = 2;

		*node[0x653e9e6fb510] = 15;

		*node[0x653e9e6fb5d0] = *;

		*node[0x653e9e6fb570] = 2;

		*node[0x653e9e6fb5a0] = 1;

		*node[0x653e9e6fb660] = ;;

		*node[0x653e9e6fb870] = =;

		*node[0x653e9e6fb690] = 13;

		*node[0x653e9e6fb840] = /;

		*node[0x653e9e6fb780] = +;

		*node[0x653e9e6fb720] = -;

		*node[0x653e9e6fb6c0] = 0;

		*node[0x653e9e6fb6f0] = 2;

		*node[0x653e9e6fb750] = 15;

		*node[0x653e9e6fb810] = *;

		*node[0x653e9e6fb7b0] = 2;

		*node[0x653e9e6fb7e0] = 1;

		*node[0x653e9e6fb8a0] = ;;

		*node[0x653e9e6fb8d0] = print;

		*node[0x653e9e6fb900] = 11;

		*node[0x653e9e6fb930] = ;;

		*node[0x653e9e6fb960] = print;

		*node[0x653e9e6fb990] = 12;

		*node[0x653e9e6fb9c0] = 13;

		*node[0x653e9e6fb9f0] = elseif;

		*node[0x653e9e6fba20] = op_no;

		*node[0x653e9e6fbab0] = ==;

		*node[0x653e9e6fba50] = 14;

		*node[0x653e9e6fba80] = 0;

		*node[0x653e9e6fbae0] = ;;

		*node[0x653e9e6fbc90] = =;

		*node[0x653e9e6fbb10] = 10;

		*node[0x653e9e6fbc60] = /;

		*node[0x653e9e6fbba0] = -;

		*node[0x653e9e6fbb40] = 0;

		*node[0x653e9e6fbb70] = 2;

		*node[0x653e9e6fbc30] = *;

		*node[0x653e9e6fbbd0] = 2;

		*node[0x653e9e6fbc00] = 1;

		*node[0x653e9e6fbcc0] = ;;

		*node[0x653e9e6fbcf0] = print;

		*node[0x653e9e6fbd20] = 8;

		*node[0x653e9e6fbd50] = ;;

		*node[0x653e9e6fbd80] = print;

		*node[0x653e9e6fbdb0] = 10;

		*node[0x653e9e6fbde0] = else;

		*node[0x653e9e6fbe10] = op_no;

		*node[0x653e9e6fbe40] = ;;

		*node[0x653e9e6fbe70] = print;

		*node[0x653e9e6fbea0] = 7;

		*node[0x653e9e6fbed0] = ;;

		*node[0x653e9e6fbf00] = return;

		*node[0x653e9e6fbf30] = 0;

		*node[0x653e9e6fbf60] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffff703bc40] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5913057d3210] = ;;

		*node[0x5913057d3240] = 0;

		*node[0x5913057d3270] = ;;

		*node[0x5913057d32a0] = input;

		*node[0x5913057d32d0] = 1;

		*node[0x5913057d3300] = 2;

		*node[0x5913057d3330] = 3;

		*node[0x5913057d3360] = ;;

		*node[0x5913057d33c0] = 1;

		*node[0x5913057d33f0] = 2;

		*node[0x5913057d3420] = 3;

		*node[0x5913057d3450] = ;;

		*node[0x5913057d3480] = 4;

		*node[0x5913057d34b0] = 1;

		*node[0x5913057d34e0] = 2;

		*node[0x5913057d3510] = 3;

		*node[0x5913057d3540] = ;;

		*node[0x5913057d3570] = if;

		*node[0x5913057d35a0] = op_no;

		*node[0x5913057d3630] = ==;

		*node[0x5913057d35d0] = 1;

		*node[0x5913057d3600] = 0;

		*node[0x5913057d3660] = ;;

		*node[0x5913057d36c0] = 2;

		*node[0x5913057d36f0] = 3;

		*node[0x5913057d3720] = else;

		*node[0x5913057d3750] = op_no;

		*node[0x5913057d3780] = ;;

		*node[0x5913057d37e0] = 1;

		*node[0x5913057d3810] = 2;

		*node[0x5913057d3840] = 3;

		*node[0x5913057d3870] = ;;

		*node[0x5913057d38a0] = 5;

		*node[0x5913057d38d0] = 1;

		*node[0x5913057d3900] = 2;

		*node[0x5913057d3930] = ;;

		*node[0x5913057d3a20] = =;

		*node[0x5913057d3960] = 7;

		*node[0x5913057d39f0] = -;

		*node[0x5913057d3990] = 0;

		*node[0x5913057d39c0] = 1;

		*node[0x5913057d3a50] = ;;

		*node[0x5913057d3ae0] = =;

		*node[0x5913057d3a80] = 8;

		*node[0x5913057d3ab0] = 1;

		*node[0x5913057d3b10] = ;;

		*node[0x5913057d3ba0] = =;

		*node[0x5913057d3b40] = 9;

		*node[0x5913057d3b70] = 1000;

		*node[0x5913057d3bd0] = ;;

		*node[0x5913057d3c00] = if;

		*node[0x5913057d3c30] = op_no;

		*node[0x5913057d3cc0] = ==;

		*node[0x5913057d3c60] = 1;

		*node[0x5913057d3c90] = 0;

		*node[0x5913057d3cf0] = ;;

		*node[0x5913057d3d20] = if;

		*node[0x5913057d3d50] = op_no;

		*node[0x5913057d3de0] = ==;

		*node[0x5913057d3d80] = 2;

		*node[0x5913057d3db0] = 0;

		*node[0x5913057d3e10] = ;;

		*node[0x5913057d3e40] = print;

		*node[0x5913057d3e70] = 9;

		*node[0x5913057d3ea0] = else;

		*node[0x5913057d3ed0] = op_no;

		*node[0x5913057d3f00] = ;;

		*node[0x5913057d3f30] = print;

		*node[0x5913057d3f60] = 7;

		*node[0x5913057d3f90] = else;

		*node[0x5913057d3fc0] = op_no;

		*node[0x5913057d3ff0] = ;;

		*node[0x5913057d4140] = =;

		*node[0x5913057d4020] = 10;

		*node[0x5913057d4110] = /;

		*node[0x5913057d40b0] = -;

		*node[0x5913057d4050] = 0;

		*node[0x5913057d4080] = 2;

		*node[0x5913057d40e0] = 1;

		*node[0x5913057d4170] = ;;

		*node[0x5913057d41a0] = print;

		*node[0x5913057d41d0] = 8;

		*node[0x5913057d4200] = ;;

		*node[0x5913057d4230] = print;

		*node[0x5913057d4260] = 10;

		*node[0x5913057d4290] = ;;

		*node[0x5913057d42c0] = return;

		*node[0x5913057d42f0] = 0;

		*node[0x5913057d4320] = ;;

		*node[0x5913057d4350] = 6;

		*node[0x5913057d4380] = 1;

		*node[0x5913057d43b0] = 2;

		*node[0x5913057d43e0] = 3;

		*node[0x5913057d4410] = ;;

		*node[0x5913057d4500] = =;

		*node[0x5913057d4440] = 7;

		*node[0x5913057d44d0] = -;

		*node[0x5913057d4470] = 0;

		*node[0x5913057d44a0] = 1;

		*node[0x5913057d4530] = ;;

		*node[0x5913057d45c0] = =;

		*node[0x5913057d4560] = 8;

		*node[0x5913057d4590] = 1;

		*node[0x5913057d45f0] = ;;

		*node[0x5913057d4680] = =;

		*node[0x5913057d4620] = 11;

		*node[0x5913057d4650] = 2;

		*node[0x5913057d46b0] = ;;

		*node[0x5913057d46e0] = if;

		*node[0x5913057d4710] = op_no;

		*node[0x5913057d47a0] = ==;

		*node[0x5913057d4740] = 3;

		*node[0x5913057d4770] = 0;

		*node[0x5913057d47d0] = ;;

		*node[0x5913057d4860] = =;

		*node[0x5913057d4800] = 12;

		*node[0x5913057d4830] = 0;

		*node[0x5913057d4890] = ;;

		*node[0x5913057d49e0] = =;

		*node[0x5913057d48c0] = 13;

		*node[0x5913057d49b0] = /;

		*node[0x5913057d4950] = -;

		*node[0x5913057d48f0] = 0;

		*node[0x5913057d4920] = 2;

		*node[0x5913057d4980] = 1;

		*node[0x5913057d4a10] = ;;

		*node[0x5913057d4a40] = print;

		*node[0x5913057d4a70] = 11;

		*node[0x5913057d4aa0] = ;;

		*node[0x5913057d4ad0] = print;

		*node[0x5913057d4b00] = 12;

		*node[0x5913057d4b30] = 13;

		*node[0x5913057d4b60] = else;

		*node[0x5913057d4b90] = op_no;

		*node[0x5913057d4bc0] = ;;

		*node[0x5913057d4dd0] = =;

		*node[0x5913057d4bf0] = 14;

		*node[0x5913057d4da0] = -;

		*node[0x5913057d4c80] = *;

		*node[0x5913057d4c20] = 2;

		*node[0x5913057d4c50] = 2;

		*node[0x5913057d4d70] = *;

		*node[0x5913057d4d10] = *;

		*node[0x5913057d4cb0] = 4;

		*node[0x5913057d4ce0] = 1;

		*node[0x5913057d4d40] = 3;

		*node[0x5913057d4e00] = ;;

		*node[0x5913057d4e30] = if;

		*node[0x5913057d4e60] = op_no;

		*node[0x5913057d4ef0] = >;

		*node[0x5913057d4e90] = 14;

		*node[0x5913057d4ec0] = 0;

		*node[0x5913057d4f20] = ;;

		*node[0x5913057d4fe0] = =;

		*node[0x5913057d4f50] = 15;

		*node[0x5913057d4fb0] = sqrt;

		*node[0x5913057d4f80] = 14;

		*node[0x5913057d5010] = ;;

		*node[0x5913057d5220] = =;

		*node[0x5913057d5040] = 12;

		*node[0x5913057d51f0] = /;

		*node[0x5913057d5130] = -;

		*node[0x5913057d50d0] = -;

		*node[0x5913057d5070] = 0;

		*node[0x5913057d50a0] = 2;

		*node[0x5913057d5100] = 15;

		*node[0x5913057d51c0] = *;

		*node[0x5913057d5160] = 2;

		*node[0x5913057d5190] = 1;

		*node[0x5913057d5250] = ;;

		*node[0x5913057d5460] = =;

		*node[0x5913057d5280] = 13;

		*node[0x5913057d5430] = /;

		*node[0x5913057d5370] = +;

		*node[0x5913057d5310] = -;

		*node[0x5913057d52b0] = 0;

		*node[0x5913057d52e0] = 2;

		*node[0x5913057d5340] = 15;

		*node[0x5913057d5400] = *;

		*node[0x5913057d53a0] = 2;

		*node[0x5913057d53d0] = 1;

		*node[0x5913057d5490] = ;;

		*node[0x5913057d54c0] = print;

		*node[0x5913057d54f0] = 11;

		*node[0x5913057d5520] = ;;

		*node[0x5913057d5550] = print;

		*node[0x5913057d5580] = 12;

		*node[0x5913057d55b0] = 13;

		*node[0x5913057d55e0] = elseif;

		*node[0x5913057d5610] = op_no;

		*node[0x5913057d56a0] = ==;

		*node[0x5913057d5640] = 14;

		*node[0x5913057d5670] = 0;

		*node[0x5913057d56d0] = ;;

		*node[0x5913057d5880] = =;

		*node[0x5913057d5700] = 10;

		*node[0x5913057d5850] = /;

		*node[0x5913057d5790] = -;

		*node[0x5913057d5730] = 0;

		*node[0x5913057d5760] = 2;

		*node[0x5913057d5820] = *;

		*node[0x5913057d57c0] = 2;

		*node[0x5913057d57f0] = 1;

		*node[0x5913057d58b0] = ;;

		*node[0x5913057d58e0] = print;

		*node[0x5913057d5910] = 8;

		*node[0x5913057d5940] = ;;

		*node[0x5913057d5970] = print;

		*node[0x5913057d59a0] = 10;

		*node[0x5913057d59d0] = else;

		*node[0x5913057d5a00] = op_no;

		*node[0x5913057d5a30] = ;;

		*node[0x5913057d5a60] = print;

		*node[0x5913057d5a90] = 7;

		*node[0x5913057d5ac0] = ;;

		*node[0x5913057d5af0] = return;

		*node[0x5913057d5b20] = 0;

		*node[0x5913057d5b50] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffecf067fb0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5838f1fe1210] = ;;

		*node[0x5838f1fe1240] = 0;

		*node[0x5838f1fe1270] = ;;

		*node[0x5838f1fe12a0] = input;

		*node[0x5838f1fe12d0] = 1;

		*node[0x5838f1fe1300] = 2;

		*node[0x5838f1fe1330] = 3;

		*node[0x5838f1fe1360] = ;;

		*node[0x5838f1fe13c0] = 1;

		*node[0x5838f1fe13f0] = 2;

		*node[0x5838f1fe1420] = 3;

		*node[0x5838f1fe1450] = ;;

		*node[0x5838f1fe1480] = 4;

		*node[0x5838f1fe14b0] = 1;

		*node[0x5838f1fe14e0] = 2;

		*node[0x5838f1fe1510] = 3;

		*node[0x5838f1fe1540] = ;;

		*node[0x5838f1fe1570] = if;

		*node[0x5838f1fe15a0] = op_no;

		*node[0x5838f1fe1630] = ==;

		*node[0x5838f1fe15d0] = 1;

		*node[0x5838f1fe1600] = 0;

		*node[0x5838f1fe1660] = ;;

		*node[0x5838f1fe16c0] = 2;

		*node[0x5838f1fe16f0] = 3;

		*node[0x5838f1fe1720] = else;

		*node[0x5838f1fe1750] = op_no;

		*node[0x5838f1fe1780] = ;;

		*node[0x5838f1fe17e0] = 1;

		*node[0x5838f1fe1810] = 2;

		*node[0x5838f1fe1840] = 3;

		*node[0x5838f1fe1870] = ;;

		*node[0x5838f1fe18a0] = 5;

		*node[0x5838f1fe18d0] = 1;

		*node[0x5838f1fe1900] = 2;

		*node[0x5838f1fe1930] = ;;

		*node[0x5838f1fe1a20] = =;

		*node[0x5838f1fe1960] = 7;

		*node[0x5838f1fe19f0] = -;

		*node[0x5838f1fe1990] = 0;

		*node[0x5838f1fe19c0] = 1;

		*node[0x5838f1fe1a50] = ;;

		*node[0x5838f1fe1ae0] = =;

		*node[0x5838f1fe1a80] = 8;

		*node[0x5838f1fe1ab0] = 1;

		*node[0x5838f1fe1b10] = ;;

		*node[0x5838f1fe1ba0] = =;

		*node[0x5838f1fe1b40] = 9;

		*node[0x5838f1fe1b70] = 1000;

		*node[0x5838f1fe1bd0] = ;;

		*node[0x5838f1fe1c00] = if;

		*node[0x5838f1fe1c30] = op_no;

		*node[0x5838f1fe1cc0] = ==;

		*node[0x5838f1fe1c60] = 1;

		*node[0x5838f1fe1c90] = 0;

		*node[0x5838f1fe1cf0] = ;;

		*node[0x5838f1fe1d20] = if;

		*node[0x5838f1fe1d50] = op_no;

		*node[0x5838f1fe1de0] = ==;

		*node[0x5838f1fe1d80] = 2;

		*node[0x5838f1fe1db0] = 0;

		*node[0x5838f1fe1e10] = ;;

		*node[0x5838f1fe1e40] = print;

		*node[0x5838f1fe1e70] = 9;

		*node[0x5838f1fe1ea0] = else;

		*node[0x5838f1fe1ed0] = op_no;

		*node[0x5838f1fe1f00] = ;;

		*node[0x5838f1fe1f30] = print;

		*node[0x5838f1fe1f60] = 7;

		*node[0x5838f1fe1f90] = else;

		*node[0x5838f1fe1fc0] = op_no;

		*node[0x5838f1fe1ff0] = ;;

		*node[0x5838f1fe2140] = =;

		*node[0x5838f1fe2020] = 10;

		*node[0x5838f1fe2110] = /;

		*node[0x5838f1fe20b0] = -;

		*node[0x5838f1fe2050] = 0;

		*node[0x5838f1fe2080] = 2;

		*node[0x5838f1fe20e0] = 1;

		*node[0x5838f1fe2170] = ;;

		*node[0x5838f1fe21a0] = print;

		*node[0x5838f1fe21d0] = 8;

		*node[0x5838f1fe2200] = ;;

		*node[0x5838f1fe2230] = print;

		*node[0x5838f1fe2260] = 10;

		*node[0x5838f1fe2290] = ;;

		*node[0x5838f1fe22c0] = return;

		*node[0x5838f1fe22f0] = 0;

		*node[0x5838f1fe2320] = ;;

		*node[0x5838f1fe2350] = 6;

		*node[0x5838f1fe2380] = 1;

		*node[0x5838f1fe23b0] = 2;

		*node[0x5838f1fe23e0] = 3;

		*node[0x5838f1fe2410] = ;;

		*node[0x5838f1fe2500] = =;

		*node[0x5838f1fe2440] = 7;

		*node[0x5838f1fe24d0] = -;

		*node[0x5838f1fe2470] = 0;

		*node[0x5838f1fe24a0] = 1;

		*node[0x5838f1fe2530] = ;;

		*node[0x5838f1fe25c0] = =;

		*node[0x5838f1fe2560] = 8;

		*node[0x5838f1fe2590] = 1;

		*node[0x5838f1fe25f0] = ;;

		*node[0x5838f1fe2680] = =;

		*node[0x5838f1fe2620] = 11;

		*node[0x5838f1fe2650] = 2;

		*node[0x5838f1fe26b0] = ;;

		*node[0x5838f1fe26e0] = if;

		*node[0x5838f1fe2710] = op_no;

		*node[0x5838f1fe27a0] = ==;

		*node[0x5838f1fe2740] = 3;

		*node[0x5838f1fe2770] = 0;

		*node[0x5838f1fe27d0] = ;;

		*node[0x5838f1fe2860] = =;

		*node[0x5838f1fe2800] = 12;

		*node[0x5838f1fe2830] = 0;

		*node[0x5838f1fe2890] = ;;

		*node[0x5838f1fe29e0] = =;

		*node[0x5838f1fe28c0] = 13;

		*node[0x5838f1fe29b0] = /;

		*node[0x5838f1fe2950] = -;

		*node[0x5838f1fe28f0] = 0;

		*node[0x5838f1fe2920] = 2;

		*node[0x5838f1fe2980] = 1;

		*node[0x5838f1fe2a10] = ;;

		*node[0x5838f1fe2a40] = print;

		*node[0x5838f1fe2a70] = 11;

		*node[0x5838f1fe2aa0] = ;;

		*node[0x5838f1fe2ad0] = print;

		*node[0x5838f1fe2b00] = 12;

		*node[0x5838f1fe2b30] = 13;

		*node[0x5838f1fe2b60] = else;

		*node[0x5838f1fe2b90] = op_no;

		*node[0x5838f1fe2bc0] = ;;

		*node[0x5838f1fe2dd0] = =;

		*node[0x5838f1fe2bf0] = 14;

		*node[0x5838f1fe2da0] = -;

		*node[0x5838f1fe2c80] = *;

		*node[0x5838f1fe2c20] = 2;

		*node[0x5838f1fe2c50] = 2;

		*node[0x5838f1fe2d70] = *;

		*node[0x5838f1fe2d10] = *;

		*node[0x5838f1fe2cb0] = 4;

		*node[0x5838f1fe2ce0] = 1;

		*node[0x5838f1fe2d40] = 3;

		*node[0x5838f1fe2e00] = ;;

		*node[0x5838f1fe2e30] = if;

		*node[0x5838f1fe2e60] = op_no;

		*node[0x5838f1fe2ef0] = >;

		*node[0x5838f1fe2e90] = 14;

		*node[0x5838f1fe2ec0] = 0;

		*node[0x5838f1fe2f20] = ;;

		*node[0x5838f1fe2fe0] = =;

		*node[0x5838f1fe2f50] = 15;

		*node[0x5838f1fe2fb0] = sqrt;

		*node[0x5838f1fe2f80] = 14;

		*node[0x5838f1fe3010] = ;;

		*node[0x5838f1fe3220] = =;

		*node[0x5838f1fe3040] = 12;

		*node[0x5838f1fe31f0] = /;

		*node[0x5838f1fe3130] = -;

		*node[0x5838f1fe30d0] = -;

		*node[0x5838f1fe3070] = 0;

		*node[0x5838f1fe30a0] = 2;

		*node[0x5838f1fe3100] = 15;

		*node[0x5838f1fe31c0] = *;

		*node[0x5838f1fe3160] = 2;

		*node[0x5838f1fe3190] = 1;

		*node[0x5838f1fe3250] = ;;

		*node[0x5838f1fe3460] = =;

		*node[0x5838f1fe3280] = 13;

		*node[0x5838f1fe3430] = /;

		*node[0x5838f1fe3370] = +;

		*node[0x5838f1fe3310] = -;

		*node[0x5838f1fe32b0] = 0;

		*node[0x5838f1fe32e0] = 2;

		*node[0x5838f1fe3340] = 15;

		*node[0x5838f1fe3400] = *;

		*node[0x5838f1fe33a0] = 2;

		*node[0x5838f1fe33d0] = 1;

		*node[0x5838f1fe3490] = ;;

		*node[0x5838f1fe34c0] = print;

		*node[0x5838f1fe34f0] = 11;

		*node[0x5838f1fe3520] = ;;

		*node[0x5838f1fe3550] = print;

		*node[0x5838f1fe3580] = 12;

		*node[0x5838f1fe35b0] = 13;

		*node[0x5838f1fe35e0] = elseif;

		*node[0x5838f1fe3610] = op_no;

		*node[0x5838f1fe36a0] = ==;

		*node[0x5838f1fe3640] = 14;

		*node[0x5838f1fe3670] = 0;

		*node[0x5838f1fe36d0] = ;;

		*node[0x5838f1fe3880] = =;

		*node[0x5838f1fe3700] = 10;

		*node[0x5838f1fe3850] = /;

		*node[0x5838f1fe3790] = -;

		*node[0x5838f1fe3730] = 0;

		*node[0x5838f1fe3760] = 2;

		*node[0x5838f1fe3820] = *;

		*node[0x5838f1fe37c0] = 2;

		*node[0x5838f1fe37f0] = 1;

		*node[0x5838f1fe38b0] = ;;

		*node[0x5838f1fe38e0] = print;

		*node[0x5838f1fe3910] = 8;

		*node[0x5838f1fe3940] = ;;

		*node[0x5838f1fe3970] = print;

		*node[0x5838f1fe39a0] = 10;

		*node[0x5838f1fe39d0] = else;

		*node[0x5838f1fe3a00] = op_no;

		*node[0x5838f1fe3a30] = ;;

		*node[0x5838f1fe3a60] = print;

		*node[0x5838f1fe3a90] = 7;

		*node[0x5838f1fe3ac0] = ;;

		*node[0x5838f1fe3af0] = return;

		*node[0x5838f1fe3b20] = 0;

		*node[0x5838f1fe3b50] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcfee41070] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x592bf3def210] = ;;

		*node[0x592bf3def240] = 0;

		*node[0x592bf3def270] = ;;

		*node[0x592bf3def2a0] = input;

		*node[0x592bf3def2d0] = 1;

		*node[0x592bf3def300] = 2;

		*node[0x592bf3def330] = 3;

		*node[0x592bf3def360] = ;;

		*node[0x592bf3def3c0] = 1;

		*node[0x592bf3def3f0] = 2;

		*node[0x592bf3def420] = 3;

		*node[0x592bf3def450] = ;;

		*node[0x592bf3def480] = 4;

		*node[0x592bf3def4b0] = 1;

		*node[0x592bf3def4e0] = 2;

		*node[0x592bf3def510] = 3;

		*node[0x592bf3def540] = ;;

		*node[0x592bf3def570] = if;

		*node[0x592bf3def5a0] = op_no;

		*node[0x592bf3def630] = ==;

		*node[0x592bf3def5d0] = 1;

		*node[0x592bf3def600] = 0;

		*node[0x592bf3def660] = ;;

		*node[0x592bf3def6c0] = 2;

		*node[0x592bf3def6f0] = 3;

		*node[0x592bf3def720] = else;

		*node[0x592bf3def750] = op_no;

		*node[0x592bf3def780] = ;;

		*node[0x592bf3def7e0] = 1;

		*node[0x592bf3def810] = 2;

		*node[0x592bf3def840] = 3;

		*node[0x592bf3def870] = ;;

		*node[0x592bf3def8a0] = 5;

		*node[0x592bf3def8d0] = 1;

		*node[0x592bf3def900] = 2;

		*node[0x592bf3def930] = ;;

		*node[0x592bf3defa20] = =;

		*node[0x592bf3def960] = 7;

		*node[0x592bf3def9f0] = -;

		*node[0x592bf3def990] = 0;

		*node[0x592bf3def9c0] = 1;

		*node[0x592bf3defa50] = ;;

		*node[0x592bf3defae0] = =;

		*node[0x592bf3defa80] = 8;

		*node[0x592bf3defab0] = 1;

		*node[0x592bf3defb10] = ;;

		*node[0x592bf3defba0] = =;

		*node[0x592bf3defb40] = 9;

		*node[0x592bf3defb70] = 1000;

		*node[0x592bf3defbd0] = ;;

		*node[0x592bf3defc00] = if;

		*node[0x592bf3defc30] = op_no;

		*node[0x592bf3defcc0] = ==;

		*node[0x592bf3defc60] = 1;

		*node[0x592bf3defc90] = 0;

		*node[0x592bf3defcf0] = ;;

		*node[0x592bf3defd20] = if;

		*node[0x592bf3defd50] = op_no;

		*node[0x592bf3defde0] = ==;

		*node[0x592bf3defd80] = 2;

		*node[0x592bf3defdb0] = 0;

		*node[0x592bf3defe10] = ;;

		*node[0x592bf3defe40] = print;

		*node[0x592bf3defe70] = 9;

		*node[0x592bf3defea0] = else;

		*node[0x592bf3defed0] = op_no;

		*node[0x592bf3deff00] = ;;

		*node[0x592bf3deff30] = print;

		*node[0x592bf3deff60] = 7;

		*node[0x592bf3deff90] = else;

		*node[0x592bf3deffc0] = op_no;

		*node[0x592bf3defff0] = ;;

		*node[0x592bf3df0140] = =;

		*node[0x592bf3df0020] = 10;

		*node[0x592bf3df0110] = /;

		*node[0x592bf3df00b0] = -;

		*node[0x592bf3df0050] = 0;

		*node[0x592bf3df0080] = 2;

		*node[0x592bf3df00e0] = 1;

		*node[0x592bf3df0170] = ;;

		*node[0x592bf3df01a0] = print;

		*node[0x592bf3df01d0] = 8;

		*node[0x592bf3df0200] = ;;

		*node[0x592bf3df0230] = print;

		*node[0x592bf3df0260] = 10;

		*node[0x592bf3df0290] = ;;

		*node[0x592bf3df02c0] = return;

		*node[0x592bf3df02f0] = 0;

		*node[0x592bf3df0320] = ;;

		*node[0x592bf3df0350] = 6;

		*node[0x592bf3df0380] = 1;

		*node[0x592bf3df03b0] = 2;

		*node[0x592bf3df03e0] = 3;

		*node[0x592bf3df0410] = ;;

		*node[0x592bf3df0500] = =;

		*node[0x592bf3df0440] = 7;

		*node[0x592bf3df04d0] = -;

		*node[0x592bf3df0470] = 0;

		*node[0x592bf3df04a0] = 1;

		*node[0x592bf3df0530] = ;;

		*node[0x592bf3df05c0] = =;

		*node[0x592bf3df0560] = 8;

		*node[0x592bf3df0590] = 1;

		*node[0x592bf3df05f0] = ;;

		*node[0x592bf3df0680] = =;

		*node[0x592bf3df0620] = 11;

		*node[0x592bf3df0650] = 2;

		*node[0x592bf3df06b0] = ;;

		*node[0x592bf3df06e0] = if;

		*node[0x592bf3df0710] = op_no;

		*node[0x592bf3df07a0] = ==;

		*node[0x592bf3df0740] = 3;

		*node[0x592bf3df0770] = 0;

		*node[0x592bf3df07d0] = ;;

		*node[0x592bf3df0860] = =;

		*node[0x592bf3df0800] = 12;

		*node[0x592bf3df0830] = 0;

		*node[0x592bf3df0890] = ;;

		*node[0x592bf3df09e0] = =;

		*node[0x592bf3df08c0] = 13;

		*node[0x592bf3df09b0] = /;

		*node[0x592bf3df0950] = -;

		*node[0x592bf3df08f0] = 0;

		*node[0x592bf3df0920] = 2;

		*node[0x592bf3df0980] = 1;

		*node[0x592bf3df0a10] = ;;

		*node[0x592bf3df0a40] = print;

		*node[0x592bf3df0a70] = 11;

		*node[0x592bf3df0aa0] = ;;

		*node[0x592bf3df0ad0] = print;

		*node[0x592bf3df0b00] = 12;

		*node[0x592bf3df0b30] = 13;

		*node[0x592bf3df0b60] = else;

		*node[0x592bf3df0b90] = op_no;

		*node[0x592bf3df0bc0] = ;;

		*node[0x592bf3df0dd0] = =;

		*node[0x592bf3df0bf0] = 14;

		*node[0x592bf3df0da0] = -;

		*node[0x592bf3df0c80] = *;

		*node[0x592bf3df0c20] = 2;

		*node[0x592bf3df0c50] = 2;

		*node[0x592bf3df0d70] = *;

		*node[0x592bf3df0d10] = *;

		*node[0x592bf3df0cb0] = 4;

		*node[0x592bf3df0ce0] = 1;

		*node[0x592bf3df0d40] = 3;

		*node[0x592bf3df0e00] = ;;

		*node[0x592bf3df0e30] = if;

		*node[0x592bf3df0e60] = op_no;

		*node[0x592bf3df0ef0] = >;

		*node[0x592bf3df0e90] = 14;

		*node[0x592bf3df0ec0] = 0;

		*node[0x592bf3df0f20] = ;;

		*node[0x592bf3df0fe0] = =;

		*node[0x592bf3df0f50] = 15;

		*node[0x592bf3df0fb0] = sqrt;

		*node[0x592bf3df0f80] = 14;

		*node[0x592bf3df1010] = ;;

		*node[0x592bf3df1220] = =;

		*node[0x592bf3df1040] = 12;

		*node[0x592bf3df11f0] = /;

		*node[0x592bf3df1130] = -;

		*node[0x592bf3df10d0] = -;

		*node[0x592bf3df1070] = 0;

		*node[0x592bf3df10a0] = 2;

		*node[0x592bf3df1100] = 15;

		*node[0x592bf3df11c0] = *;

		*node[0x592bf3df1160] = 2;

		*node[0x592bf3df1190] = 1;

		*node[0x592bf3df1250] = ;;

		*node[0x592bf3df1460] = =;

		*node[0x592bf3df1280] = 13;

		*node[0x592bf3df1430] = /;

		*node[0x592bf3df1370] = +;

		*node[0x592bf3df1310] = -;

		*node[0x592bf3df12b0] = 0;

		*node[0x592bf3df12e0] = 2;

		*node[0x592bf3df1340] = 15;

		*node[0x592bf3df1400] = *;

		*node[0x592bf3df13a0] = 2;

		*node[0x592bf3df13d0] = 1;

		*node[0x592bf3df1490] = ;;

		*node[0x592bf3df14c0] = print;

		*node[0x592bf3df14f0] = 11;

		*node[0x592bf3df1520] = ;;

		*node[0x592bf3df1550] = print;

		*node[0x592bf3df1580] = 12;

		*node[0x592bf3df15b0] = 13;

		*node[0x592bf3df15e0] = elseif;

		*node[0x592bf3df1610] = op_no;

		*node[0x592bf3df16a0] = ==;

		*node[0x592bf3df1640] = 14;

		*node[0x592bf3df1670] = 0;

		*node[0x592bf3df16d0] = ;;

		*node[0x592bf3df1880] = =;

		*node[0x592bf3df1700] = 10;

		*node[0x592bf3df1850] = /;

		*node[0x592bf3df1790] = -;

		*node[0x592bf3df1730] = 0;

		*node[0x592bf3df1760] = 2;

		*node[0x592bf3df1820] = *;

		*node[0x592bf3df17c0] = 2;

		*node[0x592bf3df17f0] = 1;

		*node[0x592bf3df18b0] = ;;

		*node[0x592bf3df18e0] = print;

		*node[0x592bf3df1910] = 8;

		*node[0x592bf3df1940] = ;;

		*node[0x592bf3df1970] = print;

		*node[0x592bf3df19a0] = 10;

		*node[0x592bf3df19d0] = else;

		*node[0x592bf3df1a00] = op_no;

		*node[0x592bf3df1a30] = ;;

		*node[0x592bf3df1a60] = print;

		*node[0x592bf3df1a90] = 7;

		*node[0x592bf3df1ac0] = ;;

		*node[0x592bf3df1af0] = return;

		*node[0x592bf3df1b20] = 0;

		*node[0x592bf3df1b50] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe46eea9d0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x57903d9e4fd0] = ;;

		*node[0x57903d9e5000] = 0;

		*node[0x57903d9e5030] = ;;

		*node[0x57903d9e5060] = input;

		*node[0x57903d9e5090] = 1;

		*node[0x57903d9e50c0] = 2;

		*node[0x57903d9e50f0] = 3;

		*node[0x57903d9e5120] = ;;

		*node[0x57903d9e5180] = 1;

		*node[0x57903d9e51b0] = 2;

		*node[0x57903d9e51e0] = 3;

		*node[0x57903d9e5210] = ;;

		*node[0x57903d9e5240] = 4;

		*node[0x57903d9e5270] = 1;

		*node[0x57903d9e52a0] = 2;

		*node[0x57903d9e52d0] = 3;

		*node[0x57903d9e5300] = ;;

		*node[0x57903d9e5330] = if;

		*node[0x57903d9e5360] = op_no;

		*node[0x57903d9e5390] = ==;

		*node[0x57903d9e53c0] = 1;

		*node[0x57903d9e53f0] = 0;

		*node[0x57903d9e5420] = ;;

		*node[0x57903d9e5480] = 2;

		*node[0x57903d9e54b0] = 3;

		*node[0x57903d9e54e0] = else;

		*node[0x57903d9e5510] = op_no;

		*node[0x57903d9e5540] = ;;

		*node[0x57903d9e55a0] = 1;

		*node[0x57903d9e55d0] = 2;

		*node[0x57903d9e5600] = 3;

		*node[0x57903d9e5630] = ;;

		*node[0x57903d9e5660] = 5;

		*node[0x57903d9e5690] = 1;

		*node[0x57903d9e56c0] = 2;

		*node[0x57903d9e56f0] = ;;

		*node[0x57903d9e5720] = =;

		*node[0x57903d9e5750] = 7;

		*node[0x57903d9e5780] = -;

		*node[0x57903d9e57b0] = 0;

		*node[0x57903d9e57e0] = 1;

		*node[0x57903d9e5810] = ;;

		*node[0x57903d9e5840] = =;

		*node[0x57903d9e5870] = 8;

		*node[0x57903d9e58a0] = 1;

		*node[0x57903d9e58d0] = ;;

		*node[0x57903d9e5900] = =;

		*node[0x57903d9e5930] = 9;

		*node[0x57903d9e5960] = 1000;

		*node[0x57903d9e5990] = ;;

		*node[0x57903d9e59c0] = if;

		*node[0x57903d9e59f0] = op_no;

		*node[0x57903d9e5a20] = ==;

		*node[0x57903d9e5a50] = 1;

		*node[0x57903d9e5a80] = 0;

		*node[0x57903d9e5ab0] = ;;

		*node[0x57903d9e5ae0] = if;

		*node[0x57903d9e5b10] = op_no;

		*node[0x57903d9e5b40] = ==;

		*node[0x57903d9e5b70] = 2;

		*node[0x57903d9e5ba0] = 0;

		*node[0x57903d9e5bd0] = ;;

		*node[0x57903d9e5c00] = print;

		*node[0x57903d9e5c30] = 9;

		*node[0x57903d9e5c60] = else;

		*node[0x57903d9e5c90] = op_no;

		*node[0x57903d9e5cc0] = ;;

		*node[0x57903d9e5cf0] = print;

		*node[0x57903d9e5d20] = 7;

		*node[0x57903d9e5d50] = else;

		*node[0x57903d9e5d80] = op_no;

		*node[0x57903d9e5db0] = ;;

		*node[0x57903d9e5de0] = =;

		*node[0x57903d9e5e10] = 10;

		*node[0x57903d9e5e40] = /;

		*node[0x57903d9e5e70] = -;

		*node[0x57903d9e5ea0] = 0;

		*node[0x57903d9e5ed0] = 2;

		*node[0x57903d9e5f00] = 1;

		*node[0x57903d9e5f30] = ;;

		*node[0x57903d9e5f60] = print;

		*node[0x57903d9e5f90] = 8;

		*node[0x57903d9e5fc0] = ;;

		*node[0x57903d9e5ff0] = print;

		*node[0x57903d9e6020] = 10;

		*node[0x57903d9e6050] = ;;

		*node[0x57903d9e6080] = return;

		*node[0x57903d9e60b0] = 0;

		*node[0x57903d9e60e0] = ;;

		*node[0x57903d9e6110] = 6;

		*node[0x57903d9e6140] = 1;

		*node[0x57903d9e6170] = 2;

		*node[0x57903d9e61a0] = 3;

		*node[0x57903d9e61d0] = ;;

		*node[0x57903d9e6200] = =;

		*node[0x57903d9e6230] = 7;

		*node[0x57903d9e6260] = -;

		*node[0x57903d9e6290] = 0;

		*node[0x57903d9e62c0] = 1;

		*node[0x57903d9e62f0] = ;;

		*node[0x57903d9e6320] = =;

		*node[0x57903d9e6350] = 8;

		*node[0x57903d9e6380] = 1;

		*node[0x57903d9e63b0] = ;;

		*node[0x57903d9e63e0] = =;

		*node[0x57903d9e6410] = 11;

		*node[0x57903d9e6440] = 2;

		*node[0x57903d9e6470] = ;;

		*node[0x57903d9e64a0] = if;

		*node[0x57903d9e64d0] = op_no;

		*node[0x57903d9e6500] = ==;

		*node[0x57903d9e6530] = 3;

		*node[0x57903d9e6560] = 0;

		*node[0x57903d9e6590] = ;;

		*node[0x57903d9e65c0] = =;

		*node[0x57903d9e65f0] = 12;

		*node[0x57903d9e6620] = 0;

		*node[0x57903d9e6650] = ;;

		*node[0x57903d9e6680] = =;

		*node[0x57903d9e66b0] = 13;

		*node[0x57903d9e66e0] = /;

		*node[0x57903d9e6710] = -;

		*node[0x57903d9e6740] = 0;

		*node[0x57903d9e6770] = 2;

		*node[0x57903d9e67a0] = 1;

		*node[0x57903d9e67d0] = ;;

		*node[0x57903d9e6800] = print;

		*node[0x57903d9e6830] = 11;

		*node[0x57903d9e6860] = ;;

		*node[0x57903d9e6890] = print;

		*node[0x57903d9e68c0] = 12;

		*node[0x57903d9e68f0] = 13;

		*node[0x57903d9e6920] = else;

		*node[0x57903d9e6950] = op_no;

		*node[0x57903d9e6980] = ;;

		*node[0x57903d9e69b0] = =;

		*node[0x57903d9e69e0] = 14;

		*node[0x57903d9e6a10] = -;

		*node[0x57903d9e6a40] = *;

		*node[0x57903d9e6a70] = 2;

		*node[0x57903d9e6aa0] = 2;

		*node[0x57903d9e6ad0] = *;

		*node[0x57903d9e6b00] = *;

		*node[0x57903d9e6b30] = 4;

		*node[0x57903d9e6b60] = 1;

		*node[0x57903d9e6b90] = 3;

		*node[0x57903d9e6bc0] = ;;

		*node[0x57903d9e6bf0] = if;

		*node[0x57903d9e6c20] = op_no;

		*node[0x57903d9e6c50] = >;

		*node[0x57903d9e6c80] = 14;

		*node[0x57903d9e6cb0] = 0;

		*node[0x57903d9e6ce0] = ;;

		*node[0x57903d9e6d10] = =;

		*node[0x57903d9e6d40] = 15;

		*node[0x57903d9e6d70] = sqrt;

		*node[0x57903d9e6da0] = 14;

		*node[0x57903d9e6dd0] = ;;

		*node[0x57903d9e6e00] = =;

		*node[0x57903d9e6e30] = 12;

		*node[0x57903d9e6e60] = /;

		*node[0x57903d9e6e90] = -;

		*node[0x57903d9e6ec0] = -;

		*node[0x57903d9e6ef0] = 0;

		*node[0x57903d9e6f20] = 2;

		*node[0x57903d9e6f50] = 15;

		*node[0x57903d9e6f80] = *;

		*node[0x57903d9e6fb0] = 2;

		*node[0x57903d9e6fe0] = 1;

		*node[0x57903d9e7010] = ;;

		*node[0x57903d9e7040] = =;

		*node[0x57903d9e7070] = 13;

		*node[0x57903d9e70a0] = /;

		*node[0x57903d9e70d0] = +;

		*node[0x57903d9e7100] = -;

		*node[0x57903d9e7130] = 0;

		*node[0x57903d9e7160] = 2;

		*node[0x57903d9e7190] = 15;

		*node[0x57903d9e71c0] = *;

		*node[0x57903d9e71f0] = 2;

		*node[0x57903d9e7220] = 1;

		*node[0x57903d9e7250] = ;;

		*node[0x57903d9e7280] = print;

		*node[0x57903d9e72b0] = 11;

		*node[0x57903d9e72e0] = ;;

		*node[0x57903d9e7310] = print;

		*node[0x57903d9e7340] = 12;

		*node[0x57903d9e7370] = 13;

		*node[0x57903d9e73a0] = elseif;

		*node[0x57903d9e73d0] = op_no;

		*node[0x57903d9e7400] = ==;

		*node[0x57903d9e7430] = 14;

		*node[0x57903d9e7460] = 0;

		*node[0x57903d9e7490] = ;;

		*node[0x57903d9e74c0] = =;

		*node[0x57903d9e74f0] = 10;

		*node[0x57903d9e7520] = /;

		*node[0x57903d9e7550] = -;

		*node[0x57903d9e7580] = 0;

		*node[0x57903d9e75b0] = 2;

		*node[0x57903d9e75e0] = *;

		*node[0x57903d9e7610] = 2;

		*node[0x57903d9e7640] = 1;

		*node[0x57903d9e7670] = ;;

		*node[0x57903d9e76a0] = print;

		*node[0x57903d9e76d0] = 8;

		*node[0x57903d9e7700] = ;;

		*node[0x57903d9e7730] = print;

		*node[0x57903d9e7760] = 10;

		*node[0x57903d9e7790] = else;

		*node[0x57903d9e77c0] = op_no;

		*node[0x57903d9e77f0] = ;;

		*node[0x57903d9e7820] = print;

		*node[0x57903d9e7850] = 7;

		*node[0x57903d9e7880] = ;;

		*node[0x57903d9e78b0] = return;

		*node[0x57903d9e78e0] = 0;

		*node[0x57903d9e7910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff27301d70] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5ceda833afd0] = ;;

		*node[0x5ceda833b000] = 0;

		*node[0x5ceda833b030] = ;;

		*node[0x5ceda833b060] = input;

		*node[0x5ceda833b090] = 1;

		*node[0x5ceda833b0c0] = 2;

		*node[0x5ceda833b0f0] = 3;

		*node[0x5ceda833b120] = ;;

		*node[0x5ceda833b180] = 1;

		*node[0x5ceda833b1b0] = 2;

		*node[0x5ceda833b1e0] = 3;

		*node[0x5ceda833b210] = ;;

		*node[0x5ceda833b240] = 4;

		*node[0x5ceda833b270] = 1;

		*node[0x5ceda833b2a0] = 2;

		*node[0x5ceda833b2d0] = 3;

		*node[0x5ceda833b300] = ;;

		*node[0x5ceda833b330] = if;

		*node[0x5ceda833b360] = op_no;

		*node[0x5ceda833b390] = ==;

		*node[0x5ceda833b3c0] = 1;

		*node[0x5ceda833b3f0] = 0;

		*node[0x5ceda833b420] = ;;

		*node[0x5ceda833b480] = 2;

		*node[0x5ceda833b4b0] = 3;

		*node[0x5ceda833b4e0] = else;

		*node[0x5ceda833b510] = op_no;

		*node[0x5ceda833b540] = ;;

		*node[0x5ceda833b5a0] = 1;

		*node[0x5ceda833b5d0] = 2;

		*node[0x5ceda833b600] = 3;

		*node[0x5ceda833b630] = ;;

		*node[0x5ceda833b660] = 5;

		*node[0x5ceda833b690] = 1;

		*node[0x5ceda833b6c0] = 2;

		*node[0x5ceda833b6f0] = ;;

		*node[0x5ceda833b720] = =;

		*node[0x5ceda833b750] = 7;

		*node[0x5ceda833b780] = -;

		*node[0x5ceda833b7b0] = 0;

		*node[0x5ceda833b7e0] = 1;

		*node[0x5ceda833b810] = ;;

		*node[0x5ceda833b840] = =;

		*node[0x5ceda833b870] = 8;

		*node[0x5ceda833b8a0] = 1;

		*node[0x5ceda833b8d0] = ;;

		*node[0x5ceda833b900] = =;

		*node[0x5ceda833b930] = 9;

		*node[0x5ceda833b960] = 1000;

		*node[0x5ceda833b990] = ;;

		*node[0x5ceda833b9c0] = if;

		*node[0x5ceda833b9f0] = op_no;

		*node[0x5ceda833ba20] = ==;

		*node[0x5ceda833ba50] = 1;

		*node[0x5ceda833ba80] = 0;

		*node[0x5ceda833bab0] = ;;

		*node[0x5ceda833bae0] = if;

		*node[0x5ceda833bb10] = op_no;

		*node[0x5ceda833bb40] = ==;

		*node[0x5ceda833bb70] = 2;

		*node[0x5ceda833bba0] = 0;

		*node[0x5ceda833bbd0] = ;;

		*node[0x5ceda833bc00] = print;

		*node[0x5ceda833bc30] = 9;

		*node[0x5ceda833bc60] = else;

		*node[0x5ceda833bc90] = op_no;

		*node[0x5ceda833bcc0] = ;;

		*node[0x5ceda833bcf0] = print;

		*node[0x5ceda833bd20] = 7;

		*node[0x5ceda833bd50] = else;

		*node[0x5ceda833bd80] = op_no;

		*node[0x5ceda833bdb0] = ;;

		*node[0x5ceda833bde0] = =;

		*node[0x5ceda833be10] = 10;

		*node[0x5ceda833be40] = /;

		*node[0x5ceda833be70] = -;

		*node[0x5ceda833bea0] = 0;

		*node[0x5ceda833bed0] = 2;

		*node[0x5ceda833bf00] = 1;

		*node[0x5ceda833bf30] = ;;

		*node[0x5ceda833bf60] = print;

		*node[0x5ceda833bf90] = 8;

		*node[0x5ceda833bfc0] = ;;

		*node[0x5ceda833bff0] = print;

		*node[0x5ceda833c020] = 10;

		*node[0x5ceda833c050] = ;;

		*node[0x5ceda833c080] = return;

		*node[0x5ceda833c0b0] = 0;

		*node[0x5ceda833c0e0] = ;;

		*node[0x5ceda833c110] = 6;

		*node[0x5ceda833c140] = 1;

		*node[0x5ceda833c170] = 2;

		*node[0x5ceda833c1a0] = 3;

		*node[0x5ceda833c1d0] = ;;

		*node[0x5ceda833c200] = =;

		*node[0x5ceda833c230] = 7;

		*node[0x5ceda833c260] = -;

		*node[0x5ceda833c290] = 0;

		*node[0x5ceda833c2c0] = 1;

		*node[0x5ceda833c2f0] = ;;

		*node[0x5ceda833c320] = =;

		*node[0x5ceda833c350] = 8;

		*node[0x5ceda833c380] = 1;

		*node[0x5ceda833c3b0] = ;;

		*node[0x5ceda833c3e0] = =;

		*node[0x5ceda833c410] = 11;

		*node[0x5ceda833c440] = 2;

		*node[0x5ceda833c470] = ;;

		*node[0x5ceda833c4a0] = if;

		*node[0x5ceda833c4d0] = op_no;

		*node[0x5ceda833c500] = ==;

		*node[0x5ceda833c530] = 3;

		*node[0x5ceda833c560] = 0;

		*node[0x5ceda833c590] = ;;

		*node[0x5ceda833c5c0] = =;

		*node[0x5ceda833c5f0] = 12;

		*node[0x5ceda833c620] = 0;

		*node[0x5ceda833c650] = ;;

		*node[0x5ceda833c680] = =;

		*node[0x5ceda833c6b0] = 13;

		*node[0x5ceda833c6e0] = /;

		*node[0x5ceda833c710] = -;

		*node[0x5ceda833c740] = 0;

		*node[0x5ceda833c770] = 2;

		*node[0x5ceda833c7a0] = 1;

		*node[0x5ceda833c7d0] = ;;

		*node[0x5ceda833c800] = print;

		*node[0x5ceda833c830] = 11;

		*node[0x5ceda833c860] = ;;

		*node[0x5ceda833c890] = print;

		*node[0x5ceda833c8c0] = 12;

		*node[0x5ceda833c8f0] = 13;

		*node[0x5ceda833c920] = else;

		*node[0x5ceda833c950] = op_no;

		*node[0x5ceda833c980] = ;;

		*node[0x5ceda833c9b0] = =;

		*node[0x5ceda833c9e0] = 14;

		*node[0x5ceda833ca10] = -;

		*node[0x5ceda833ca40] = *;

		*node[0x5ceda833ca70] = 2;

		*node[0x5ceda833caa0] = 2;

		*node[0x5ceda833cad0] = *;

		*node[0x5ceda833cb00] = *;

		*node[0x5ceda833cb30] = 4;

		*node[0x5ceda833cb60] = 1;

		*node[0x5ceda833cb90] = 3;

		*node[0x5ceda833cbc0] = ;;

		*node[0x5ceda833cbf0] = if;

		*node[0x5ceda833cc20] = op_no;

		*node[0x5ceda833cc50] = >;

		*node[0x5ceda833cc80] = 14;

		*node[0x5ceda833ccb0] = 0;

		*node[0x5ceda833cce0] = ;;

		*node[0x5ceda833cd10] = =;

		*node[0x5ceda833cd40] = 15;

		*node[0x5ceda833cd70] = sqrt;

		*node[0x5ceda833cda0] = 14;

		*node[0x5ceda833cdd0] = ;;

		*node[0x5ceda833ce00] = =;

		*node[0x5ceda833ce30] = 12;

		*node[0x5ceda833ce60] = /;

		*node[0x5ceda833ce90] = -;

		*node[0x5ceda833cec0] = -;

		*node[0x5ceda833cef0] = 0;

		*node[0x5ceda833cf20] = 2;

		*node[0x5ceda833cf50] = 15;

		*node[0x5ceda833cf80] = *;

		*node[0x5ceda833cfb0] = 2;

		*node[0x5ceda833cfe0] = 1;

		*node[0x5ceda833d010] = ;;

		*node[0x5ceda833d040] = =;

		*node[0x5ceda833d070] = 13;

		*node[0x5ceda833d0a0] = /;

		*node[0x5ceda833d0d0] = +;

		*node[0x5ceda833d100] = -;

		*node[0x5ceda833d130] = 0;

		*node[0x5ceda833d160] = 2;

		*node[0x5ceda833d190] = 15;

		*node[0x5ceda833d1c0] = *;

		*node[0x5ceda833d1f0] = 2;

		*node[0x5ceda833d220] = 1;

		*node[0x5ceda833d250] = ;;

		*node[0x5ceda833d280] = print;

		*node[0x5ceda833d2b0] = 11;

		*node[0x5ceda833d2e0] = ;;

		*node[0x5ceda833d310] = print;

		*node[0x5ceda833d340] = 12;

		*node[0x5ceda833d370] = 13;

		*node[0x5ceda833d3a0] = elseif;

		*node[0x5ceda833d3d0] = op_no;

		*node[0x5ceda833d400] = ==;

		*node[0x5ceda833d430] = 14;

		*node[0x5ceda833d460] = 0;

		*node[0x5ceda833d490] = ;;

		*node[0x5ceda833d4c0] = =;

		*node[0x5ceda833d4f0] = 10;

		*node[0x5ceda833d520] = /;

		*node[0x5ceda833d550] = -;

		*node[0x5ceda833d580] = 0;

		*node[0x5ceda833d5b0] = 2;

		*node[0x5ceda833d5e0] = *;

		*node[0x5ceda833d610] = 2;

		*node[0x5ceda833d640] = 1;

		*node[0x5ceda833d670] = ;;

		*node[0x5ceda833d6a0] = print;

		*node[0x5ceda833d6d0] = 8;

		*node[0x5ceda833d700] = ;;

		*node[0x5ceda833d730] = print;

		*node[0x5ceda833d760] = 10;

		*node[0x5ceda833d790] = else;

		*node[0x5ceda833d7c0] = op_no;

		*node[0x5ceda833d7f0] = ;;

		*node[0x5ceda833d820] = print;

		*node[0x5ceda833d850] = 7;

		*node[0x5ceda833d880] = ;;

		*node[0x5ceda833d8b0] = return;

		*node[0x5ceda833d8e0] = 0;

		*node[0x5ceda833d910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffd06dfb00] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5f258c8bbfd0] = ;;

		*node[0x5f258c8bc000] = 0;

		*node[0x5f258c8bc030] = ;;

		*node[0x5f258c8bc060] = input;

		*node[0x5f258c8bc090] = 1;

		*node[0x5f258c8bc0c0] = 2;

		*node[0x5f258c8bc0f0] = 3;

		*node[0x5f258c8bc120] = ;;

		*node[0x5f258c8bc180] = 1;

		*node[0x5f258c8bc1b0] = 2;

		*node[0x5f258c8bc1e0] = 3;

		*node[0x5f258c8bc210] = ;;

		*node[0x5f258c8bc240] = 4;

		*node[0x5f258c8bc270] = 1;

		*node[0x5f258c8bc2a0] = 2;

		*node[0x5f258c8bc2d0] = 3;

		*node[0x5f258c8bc300] = ;;

		*node[0x5f258c8bc330] = if;

		*node[0x5f258c8bc360] = op_no;

		*node[0x5f258c8bc390] = ==;

		*node[0x5f258c8bc3c0] = 1;

		*node[0x5f258c8bc3f0] = 0;

		*node[0x5f258c8bc420] = ;;

		*node[0x5f258c8bc480] = 2;

		*node[0x5f258c8bc4b0] = 3;

		*node[0x5f258c8bc4e0] = else;

		*node[0x5f258c8bc510] = op_no;

		*node[0x5f258c8bc540] = ;;

		*node[0x5f258c8bc5a0] = 1;

		*node[0x5f258c8bc5d0] = 2;

		*node[0x5f258c8bc600] = 3;

		*node[0x5f258c8bc630] = ;;

		*node[0x5f258c8bc660] = 5;

		*node[0x5f258c8bc690] = 1;

		*node[0x5f258c8bc6c0] = 2;

		*node[0x5f258c8bc6f0] = ;;

		*node[0x5f258c8bc720] = =;

		*node[0x5f258c8bc750] = 7;

		*node[0x5f258c8bc780] = -;

		*node[0x5f258c8bc7b0] = 0;

		*node[0x5f258c8bc7e0] = 1;

		*node[0x5f258c8bc810] = ;;

		*node[0x5f258c8bc840] = =;

		*node[0x5f258c8bc870] = 8;

		*node[0x5f258c8bc8a0] = 1;

		*node[0x5f258c8bc8d0] = ;;

		*node[0x5f258c8bc900] = =;

		*node[0x5f258c8bc930] = 9;

		*node[0x5f258c8bc960] = 1000;

		*node[0x5f258c8bc990] = ;;

		*node[0x5f258c8bc9c0] = if;

		*node[0x5f258c8bc9f0] = op_no;

		*node[0x5f258c8bca20] = ==;

		*node[0x5f258c8bca50] = 1;

		*node[0x5f258c8bca80] = 0;

		*node[0x5f258c8bcab0] = ;;

		*node[0x5f258c8bcae0] = if;

		*node[0x5f258c8bcb10] = op_no;

		*node[0x5f258c8bcb40] = ==;

		*node[0x5f258c8bcb70] = 2;

		*node[0x5f258c8bcba0] = 0;

		*node[0x5f258c8bcbd0] = ;;

		*node[0x5f258c8bcc00] = print;

		*node[0x5f258c8bcc30] = 9;

		*node[0x5f258c8bcc60] = else;

		*node[0x5f258c8bcc90] = op_no;

		*node[0x5f258c8bccc0] = ;;

		*node[0x5f258c8bccf0] = print;

		*node[0x5f258c8bcd20] = 7;

		*node[0x5f258c8bcd50] = else;

		*node[0x5f258c8bcd80] = op_no;

		*node[0x5f258c8bcdb0] = ;;

		*node[0x5f258c8bcde0] = =;

		*node[0x5f258c8bce10] = 10;

		*node[0x5f258c8bce40] = /;

		*node[0x5f258c8bce70] = -;

		*node[0x5f258c8bcea0] = 0;

		*node[0x5f258c8bced0] = 2;

		*node[0x5f258c8bcf00] = 1;

		*node[0x5f258c8bcf30] = ;;

		*node[0x5f258c8bcf60] = print;

		*node[0x5f258c8bcf90] = 8;

		*node[0x5f258c8bcfc0] = ;;

		*node[0x5f258c8bcff0] = print;

		*node[0x5f258c8bd020] = 10;

		*node[0x5f258c8bd050] = ;;

		*node[0x5f258c8bd080] = return;

		*node[0x5f258c8bd0b0] = 0;

		*node[0x5f258c8bd0e0] = ;;

		*node[0x5f258c8bd110] = 6;

		*node[0x5f258c8bd140] = 1;

		*node[0x5f258c8bd170] = 2;

		*node[0x5f258c8bd1a0] = 3;

		*node[0x5f258c8bd1d0] = ;;

		*node[0x5f258c8bd200] = =;

		*node[0x5f258c8bd230] = 7;

		*node[0x5f258c8bd260] = -;

		*node[0x5f258c8bd290] = 0;

		*node[0x5f258c8bd2c0] = 1;

		*node[0x5f258c8bd2f0] = ;;

		*node[0x5f258c8bd320] = =;

		*node[0x5f258c8bd350] = 8;

		*node[0x5f258c8bd380] = 1;

		*node[0x5f258c8bd3b0] = ;;

		*node[0x5f258c8bd3e0] = =;

		*node[0x5f258c8bd410] = 11;

		*node[0x5f258c8bd440] = 2;

		*node[0x5f258c8bd470] = ;;

		*node[0x5f258c8bd4a0] = if;

		*node[0x5f258c8bd4d0] = op_no;

		*node[0x5f258c8bd500] = ==;

		*node[0x5f258c8bd530] = 3;

		*node[0x5f258c8bd560] = 0;

		*node[0x5f258c8bd590] = ;;

		*node[0x5f258c8bd5c0] = =;

		*node[0x5f258c8bd5f0] = 12;

		*node[0x5f258c8bd620] = 0;

		*node[0x5f258c8bd650] = ;;

		*node[0x5f258c8bd680] = =;

		*node[0x5f258c8bd6b0] = 13;

		*node[0x5f258c8bd6e0] = /;

		*node[0x5f258c8bd710] = -;

		*node[0x5f258c8bd740] = 0;

		*node[0x5f258c8bd770] = 2;

		*node[0x5f258c8bd7a0] = 1;

		*node[0x5f258c8bd7d0] = ;;

		*node[0x5f258c8bd800] = print;

		*node[0x5f258c8bd830] = 11;

		*node[0x5f258c8bd860] = ;;

		*node[0x5f258c8bd890] = print;

		*node[0x5f258c8bd8c0] = 12;

		*node[0x5f258c8bd8f0] = 13;

		*node[0x5f258c8bd920] = else;

		*node[0x5f258c8bd950] = op_no;

		*node[0x5f258c8bd980] = ;;

		*node[0x5f258c8bd9b0] = =;

		*node[0x5f258c8bd9e0] = 14;

		*node[0x5f258c8bda10] = -;

		*node[0x5f258c8bda40] = *;

		*node[0x5f258c8bda70] = 2;

		*node[0x5f258c8bdaa0] = 2;

		*node[0x5f258c8bdad0] = *;

		*node[0x5f258c8bdb00] = *;

		*node[0x5f258c8bdb30] = 4;

		*node[0x5f258c8bdb60] = 1;

		*node[0x5f258c8bdb90] = 3;

		*node[0x5f258c8bdbc0] = ;;

		*node[0x5f258c8bdbf0] = if;

		*node[0x5f258c8bdc20] = op_no;

		*node[0x5f258c8bdc50] = >;

		*node[0x5f258c8bdc80] = 14;

		*node[0x5f258c8bdcb0] = 0;

		*node[0x5f258c8bdce0] = ;;

		*node[0x5f258c8bdd10] = =;

		*node[0x5f258c8bdd40] = 15;

		*node[0x5f258c8bdd70] = sqrt;

		*node[0x5f258c8bdda0] = 14;

		*node[0x5f258c8bddd0] = ;;

		*node[0x5f258c8bde00] = =;

		*node[0x5f258c8bde30] = 12;

		*node[0x5f258c8bde60] = /;

		*node[0x5f258c8bde90] = -;

		*node[0x5f258c8bdec0] = -;

		*node[0x5f258c8bdef0] = 0;

		*node[0x5f258c8bdf20] = 2;

		*node[0x5f258c8bdf50] = 15;

		*node[0x5f258c8bdf80] = *;

		*node[0x5f258c8bdfb0] = 2;

		*node[0x5f258c8bdfe0] = 1;

		*node[0x5f258c8be010] = ;;

		*node[0x5f258c8be040] = =;

		*node[0x5f258c8be070] = 13;

		*node[0x5f258c8be0a0] = /;

		*node[0x5f258c8be0d0] = +;

		*node[0x5f258c8be100] = -;

		*node[0x5f258c8be130] = 0;

		*node[0x5f258c8be160] = 2;

		*node[0x5f258c8be190] = 15;

		*node[0x5f258c8be1c0] = *;

		*node[0x5f258c8be1f0] = 2;

		*node[0x5f258c8be220] = 1;

		*node[0x5f258c8be250] = ;;

		*node[0x5f258c8be280] = print;

		*node[0x5f258c8be2b0] = 11;

		*node[0x5f258c8be2e0] = ;;

		*node[0x5f258c8be310] = print;

		*node[0x5f258c8be340] = 12;

		*node[0x5f258c8be370] = 13;

		*node[0x5f258c8be3a0] = elseif;

		*node[0x5f258c8be3d0] = op_no;

		*node[0x5f258c8be400] = ==;

		*node[0x5f258c8be430] = 14;

		*node[0x5f258c8be460] = 0;

		*node[0x5f258c8be490] = ;;

		*node[0x5f258c8be4c0] = =;

		*node[0x5f258c8be4f0] = 10;

		*node[0x5f258c8be520] = /;

		*node[0x5f258c8be550] = -;

		*node[0x5f258c8be580] = 0;

		*node[0x5f258c8be5b0] = 2;

		*node[0x5f258c8be5e0] = *;

		*node[0x5f258c8be610] = 2;

		*node[0x5f258c8be640] = 1;

		*node[0x5f258c8be670] = ;;

		*node[0x5f258c8be6a0] = print;

		*node[0x5f258c8be6d0] = 8;

		*node[0x5f258c8be700] = ;;

		*node[0x5f258c8be730] = print;

		*node[0x5f258c8be760] = 10;

		*node[0x5f258c8be790] = else;

		*node[0x5f258c8be7c0] = op_no;

		*node[0x5f258c8be7f0] = ;;

		*node[0x5f258c8be820] = print;

		*node[0x5f258c8be850] = 7;

		*node[0x5f258c8be880] = ;;

		*node[0x5f258c8be8b0] = return;

		*node[0x5f258c8be8e0] = 0;

		*node[0x5f258c8be910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: an error occurred while opening the file[0m
tree[0x7ffd90578f60] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffeff9ad680] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5664b7fc8fd0] = ;;

		*node[0x5664b7fc9000] = 0;

		*node[0x5664b7fc9030] = ;;

		*node[0x5664b7fc9060] = input;

		*node[0x5664b7fc9090] = 1;

		*node[0x5664b7fc90c0] = 2;

		*node[0x5664b7fc90f0] = 3;

		*node[0x5664b7fc9120] = ;;

		*node[0x5664b7fc9180] = 1;

		*node[0x5664b7fc91b0] = 2;

		*node[0x5664b7fc91e0] = 3;

		*node[0x5664b7fc9210] = ;;

		*node[0x5664b7fc9240] = 4;

		*node[0x5664b7fc9270] = 1;

		*node[0x5664b7fc92a0] = 2;

		*node[0x5664b7fc92d0] = 3;

		*node[0x5664b7fc9300] = ;;

		*node[0x5664b7fc9330] = if;

		*node[0x5664b7fc9360] = op_no;

		*node[0x5664b7fc9390] = ==;

		*node[0x5664b7fc93c0] = 1;

		*node[0x5664b7fc93f0] = 0;

		*node[0x5664b7fc9420] = ;;

		*node[0x5664b7fc9480] = 2;

		*node[0x5664b7fc94b0] = 3;

		*node[0x5664b7fc94e0] = else;

		*node[0x5664b7fc9510] = op_no;

		*node[0x5664b7fc9540] = ;;

		*node[0x5664b7fc95a0] = 1;

		*node[0x5664b7fc95d0] = 2;

		*node[0x5664b7fc9600] = 3;

		*node[0x5664b7fc9630] = ;;

		*node[0x5664b7fc9660] = 5;

		*node[0x5664b7fc9690] = 1;

		*node[0x5664b7fc96c0] = 2;

		*node[0x5664b7fc96f0] = ;;

		*node[0x5664b7fc9720] = =;

		*node[0x5664b7fc9750] = 7;

		*node[0x5664b7fc9780] = -;

		*node[0x5664b7fc97b0] = 0;

		*node[0x5664b7fc97e0] = 1;

		*node[0x5664b7fc9810] = ;;

		*node[0x5664b7fc9840] = =;

		*node[0x5664b7fc9870] = 8;

		*node[0x5664b7fc98a0] = 1;

		*node[0x5664b7fc98d0] = ;;

		*node[0x5664b7fc9900] = =;

		*node[0x5664b7fc9930] = 9;

		*node[0x5664b7fc9960] = 1000;

		*node[0x5664b7fc9990] = ;;

		*node[0x5664b7fc99c0] = if;

		*node[0x5664b7fc99f0] = op_no;

		*node[0x5664b7fc9a20] = ==;

		*node[0x5664b7fc9a50] = 1;

		*node[0x5664b7fc9a80] = 0;

		*node[0x5664b7fc9ab0] = ;;

		*node[0x5664b7fc9ae0] = if;

		*node[0x5664b7fc9b10] = op_no;

		*node[0x5664b7fc9b40] = ==;

		*node[0x5664b7fc9b70] = 2;

		*node[0x5664b7fc9ba0] = 0;

		*node[0x5664b7fc9bd0] = ;;

		*node[0x5664b7fc9c00] = print;

		*node[0x5664b7fc9c30] = 9;

		*node[0x5664b7fc9c60] = else;

		*node[0x5664b7fc9c90] = op_no;

		*node[0x5664b7fc9cc0] = ;;

		*node[0x5664b7fc9cf0] = print;

		*node[0x5664b7fc9d20] = 7;

		*node[0x5664b7fc9d50] = else;

		*node[0x5664b7fc9d80] = op_no;

		*node[0x5664b7fc9db0] = ;;

		*node[0x5664b7fc9de0] = =;

		*node[0x5664b7fc9e10] = 10;

		*node[0x5664b7fc9e40] = /;

		*node[0x5664b7fc9e70] = -;

		*node[0x5664b7fc9ea0] = 0;

		*node[0x5664b7fc9ed0] = 2;

		*node[0x5664b7fc9f00] = 1;

		*node[0x5664b7fc9f30] = ;;

		*node[0x5664b7fc9f60] = print;

		*node[0x5664b7fc9f90] = 8;

		*node[0x5664b7fc9fc0] = ;;

		*node[0x5664b7fc9ff0] = print;

		*node[0x5664b7fca020] = 10;

		*node[0x5664b7fca050] = ;;

		*node[0x5664b7fca080] = return;

		*node[0x5664b7fca0b0] = 0;

		*node[0x5664b7fca0e0] = ;;

		*node[0x5664b7fca110] = 6;

		*node[0x5664b7fca140] = 1;

		*node[0x5664b7fca170] = 2;

		*node[0x5664b7fca1a0] = 3;

		*node[0x5664b7fca1d0] = ;;

		*node[0x5664b7fca200] = =;

		*node[0x5664b7fca230] = 7;

		*node[0x5664b7fca260] = -;

		*node[0x5664b7fca290] = 0;

		*node[0x5664b7fca2c0] = 1;

		*node[0x5664b7fca2f0] = ;;

		*node[0x5664b7fca320] = =;

		*node[0x5664b7fca350] = 8;

		*node[0x5664b7fca380] = 1;

		*node[0x5664b7fca3b0] = ;;

		*node[0x5664b7fca3e0] = =;

		*node[0x5664b7fca410] = 11;

		*node[0x5664b7fca440] = 2;

		*node[0x5664b7fca470] = ;;

		*node[0x5664b7fca4a0] = if;

		*node[0x5664b7fca4d0] = op_no;

		*node[0x5664b7fca500] = ==;

		*node[0x5664b7fca530] = 3;

		*node[0x5664b7fca560] = 0;

		*node[0x5664b7fca590] = ;;

		*node[0x5664b7fca5c0] = =;

		*node[0x5664b7fca5f0] = 12;

		*node[0x5664b7fca620] = 0;

		*node[0x5664b7fca650] = ;;

		*node[0x5664b7fca680] = =;

		*node[0x5664b7fca6b0] = 13;

		*node[0x5664b7fca6e0] = /;

		*node[0x5664b7fca710] = -;

		*node[0x5664b7fca740] = 0;

		*node[0x5664b7fca770] = 2;

		*node[0x5664b7fca7a0] = 1;

		*node[0x5664b7fca7d0] = ;;

		*node[0x5664b7fca800] = print;

		*node[0x5664b7fca830] = 11;

		*node[0x5664b7fca860] = ;;

		*node[0x5664b7fca890] = print;

		*node[0x5664b7fca8c0] = 12;

		*node[0x5664b7fca8f0] = 13;

		*node[0x5664b7fca920] = else;

		*node[0x5664b7fca950] = op_no;

		*node[0x5664b7fca980] = ;;

		*node[0x5664b7fca9b0] = =;

		*node[0x5664b7fca9e0] = 14;

		*node[0x5664b7fcaa10] = -;

		*node[0x5664b7fcaa40] = *;

		*node[0x5664b7fcaa70] = 2;

		*node[0x5664b7fcaaa0] = 2;

		*node[0x5664b7fcaad0] = *;

		*node[0x5664b7fcab00] = *;

		*node[0x5664b7fcab30] = 4;

		*node[0x5664b7fcab60] = 1;

		*node[0x5664b7fcab90] = 3;

		*node[0x5664b7fcabc0] = ;;

		*node[0x5664b7fcabf0] = if;

		*node[0x5664b7fcac20] = op_no;

		*node[0x5664b7fcac50] = >;

		*node[0x5664b7fcac80] = 14;

		*node[0x5664b7fcacb0] = 0;

		*node[0x5664b7fcace0] = ;;

		*node[0x5664b7fcad10] = =;

		*node[0x5664b7fcad40] = 15;

		*node[0x5664b7fcad70] = sqrt;

		*node[0x5664b7fcada0] = 14;

		*node[0x5664b7fcadd0] = ;;

		*node[0x5664b7fcae00] = =;

		*node[0x5664b7fcae30] = 12;

		*node[0x5664b7fcae60] = /;

		*node[0x5664b7fcae90] = -;

		*node[0x5664b7fcaec0] = -;

		*node[0x5664b7fcaef0] = 0;

		*node[0x5664b7fcaf20] = 2;

		*node[0x5664b7fcaf50] = 15;

		*node[0x5664b7fcaf80] = *;

		*node[0x5664b7fcafb0] = 2;

		*node[0x5664b7fcafe0] = 1;

		*node[0x5664b7fcb010] = ;;

		*node[0x5664b7fcb040] = =;

		*node[0x5664b7fcb070] = 13;

		*node[0x5664b7fcb0a0] = /;

		*node[0x5664b7fcb0d0] = +;

		*node[0x5664b7fcb100] = -;

		*node[0x5664b7fcb130] = 0;

		*node[0x5664b7fcb160] = 2;

		*node[0x5664b7fcb190] = 15;

		*node[0x5664b7fcb1c0] = *;

		*node[0x5664b7fcb1f0] = 2;

		*node[0x5664b7fcb220] = 1;

		*node[0x5664b7fcb250] = ;;

		*node[0x5664b7fcb280] = print;

		*node[0x5664b7fcb2b0] = 11;

		*node[0x5664b7fcb2e0] = ;;

		*node[0x5664b7fcb310] = print;

		*node[0x5664b7fcb340] = 12;

		*node[0x5664b7fcb370] = 13;

		*node[0x5664b7fcb3a0] = elseif;

		*node[0x5664b7fcb3d0] = op_no;

		*node[0x5664b7fcb400] = ==;

		*node[0x5664b7fcb430] = 14;

		*node[0x5664b7fcb460] = 0;

		*node[0x5664b7fcb490] = ;;

		*node[0x5664b7fcb4c0] = =;

		*node[0x5664b7fcb4f0] = 10;

		*node[0x5664b7fcb520] = /;

		*node[0x5664b7fcb550] = -;

		*node[0x5664b7fcb580] = 0;

		*node[0x5664b7fcb5b0] = 2;

		*node[0x5664b7fcb5e0] = *;

		*node[0x5664b7fcb610] = 2;

		*node[0x5664b7fcb640] = 1;

		*node[0x5664b7fcb670] = ;;

		*node[0x5664b7fcb6a0] = print;

		*node[0x5664b7fcb6d0] = 8;

		*node[0x5664b7fcb700] = ;;

		*node[0x5664b7fcb730] = print;

		*node[0x5664b7fcb760] = 10;

		*node[0x5664b7fcb790] = else;

		*node[0x5664b7fcb7c0] = op_no;

		*node[0x5664b7fcb7f0] = ;;

		*node[0x5664b7fcb820] = print;

		*node[0x5664b7fcb850] = 7;

		*node[0x5664b7fcb880] = ;;

		*node[0x5664b7fcb8b0] = return;

		*node[0x5664b7fcb8e0] = 0;

		*node[0x5664b7fcb910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd592534e0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e051d284fd0] = ;;

		*node[0x5e051d285000] = 0;

		*node[0x5e051d285030] = ;;

		*node[0x5e051d285060] = input;

		*node[0x5e051d285090] = 1;

		*node[0x5e051d2850c0] = 2;

		*node[0x5e051d2850f0] = 3;

		*node[0x5e051d285120] = ;;

		*node[0x5e051d285180] = 1;

		*node[0x5e051d2851b0] = 2;

		*node[0x5e051d2851e0] = 3;

		*node[0x5e051d285210] = ;;

		*node[0x5e051d285240] = 4;

		*node[0x5e051d285270] = 1;

		*node[0x5e051d2852a0] = 2;

		*node[0x5e051d2852d0] = 3;

		*node[0x5e051d285300] = ;;

		*node[0x5e051d285330] = if;

		*node[0x5e051d285360] = op_no;

		*node[0x5e051d285390] = ==;

		*node[0x5e051d2853c0] = 1;

		*node[0x5e051d2853f0] = 0;

		*node[0x5e051d285420] = ;;

		*node[0x5e051d285480] = 2;

		*node[0x5e051d2854b0] = 3;

		*node[0x5e051d2854e0] = else;

		*node[0x5e051d285510] = op_no;

		*node[0x5e051d285540] = ;;

		*node[0x5e051d2855a0] = 1;

		*node[0x5e051d2855d0] = 2;

		*node[0x5e051d285600] = 3;

		*node[0x5e051d285630] = ;;

		*node[0x5e051d285660] = 5;

		*node[0x5e051d285690] = 1;

		*node[0x5e051d2856c0] = 2;

		*node[0x5e051d2856f0] = ;;

		*node[0x5e051d285720] = =;

		*node[0x5e051d285750] = 7;

		*node[0x5e051d285780] = -;

		*node[0x5e051d2857b0] = 0;

		*node[0x5e051d2857e0] = 1;

		*node[0x5e051d285810] = ;;

		*node[0x5e051d285840] = =;

		*node[0x5e051d285870] = 8;

		*node[0x5e051d2858a0] = 1;

		*node[0x5e051d2858d0] = ;;

		*node[0x5e051d285900] = =;

		*node[0x5e051d285930] = 9;

		*node[0x5e051d285960] = 1000;

		*node[0x5e051d285990] = ;;

		*node[0x5e051d2859c0] = if;

		*node[0x5e051d2859f0] = op_no;

		*node[0x5e051d285a20] = ==;

		*node[0x5e051d285a50] = 1;

		*node[0x5e051d285a80] = 0;

		*node[0x5e051d285ab0] = ;;

		*node[0x5e051d285ae0] = if;

		*node[0x5e051d285b10] = op_no;

		*node[0x5e051d285b40] = ==;

		*node[0x5e051d285b70] = 2;

		*node[0x5e051d285ba0] = 0;

		*node[0x5e051d285bd0] = ;;

		*node[0x5e051d285c00] = print;

		*node[0x5e051d285c30] = 9;

		*node[0x5e051d285c60] = else;

		*node[0x5e051d285c90] = op_no;

		*node[0x5e051d285cc0] = ;;

		*node[0x5e051d285cf0] = print;

		*node[0x5e051d285d20] = 7;

		*node[0x5e051d285d50] = else;

		*node[0x5e051d285d80] = op_no;

		*node[0x5e051d285db0] = ;;

		*node[0x5e051d285de0] = =;

		*node[0x5e051d285e10] = 10;

		*node[0x5e051d285e40] = /;

		*node[0x5e051d285e70] = -;

		*node[0x5e051d285ea0] = 0;

		*node[0x5e051d285ed0] = 2;

		*node[0x5e051d285f00] = 1;

		*node[0x5e051d285f30] = ;;

		*node[0x5e051d285f60] = print;

		*node[0x5e051d285f90] = 8;

		*node[0x5e051d285fc0] = ;;

		*node[0x5e051d285ff0] = print;

		*node[0x5e051d286020] = 10;

		*node[0x5e051d286050] = ;;

		*node[0x5e051d286080] = return;

		*node[0x5e051d2860b0] = 0;

		*node[0x5e051d2860e0] = ;;

		*node[0x5e051d286110] = 6;

		*node[0x5e051d286140] = 1;

		*node[0x5e051d286170] = 2;

		*node[0x5e051d2861a0] = 3;

		*node[0x5e051d2861d0] = ;;

		*node[0x5e051d286200] = =;

		*node[0x5e051d286230] = 7;

		*node[0x5e051d286260] = -;

		*node[0x5e051d286290] = 0;

		*node[0x5e051d2862c0] = 1;

		*node[0x5e051d2862f0] = ;;

		*node[0x5e051d286320] = =;

		*node[0x5e051d286350] = 8;

		*node[0x5e051d286380] = 1;

		*node[0x5e051d2863b0] = ;;

		*node[0x5e051d2863e0] = =;

		*node[0x5e051d286410] = 11;

		*node[0x5e051d286440] = 2;

		*node[0x5e051d286470] = ;;

		*node[0x5e051d2864a0] = if;

		*node[0x5e051d2864d0] = op_no;

		*node[0x5e051d286500] = ==;

		*node[0x5e051d286530] = 3;

		*node[0x5e051d286560] = 0;

		*node[0x5e051d286590] = ;;

		*node[0x5e051d2865c0] = =;

		*node[0x5e051d2865f0] = 12;

		*node[0x5e051d286620] = 0;

		*node[0x5e051d286650] = ;;

		*node[0x5e051d286680] = =;

		*node[0x5e051d2866b0] = 13;

		*node[0x5e051d2866e0] = /;

		*node[0x5e051d286710] = -;

		*node[0x5e051d286740] = 0;

		*node[0x5e051d286770] = 2;

		*node[0x5e051d2867a0] = 1;

		*node[0x5e051d2867d0] = ;;

		*node[0x5e051d286800] = print;

		*node[0x5e051d286830] = 11;

		*node[0x5e051d286860] = ;;

		*node[0x5e051d286890] = print;

		*node[0x5e051d2868c0] = 12;

		*node[0x5e051d2868f0] = 13;

		*node[0x5e051d286920] = else;

		*node[0x5e051d286950] = op_no;

		*node[0x5e051d286980] = ;;

		*node[0x5e051d2869b0] = =;

		*node[0x5e051d2869e0] = 14;

		*node[0x5e051d286a10] = -;

		*node[0x5e051d286a40] = *;

		*node[0x5e051d286a70] = 2;

		*node[0x5e051d286aa0] = 2;

		*node[0x5e051d286ad0] = *;

		*node[0x5e051d286b00] = *;

		*node[0x5e051d286b30] = 4;

		*node[0x5e051d286b60] = 1;

		*node[0x5e051d286b90] = 3;

		*node[0x5e051d286bc0] = ;;

		*node[0x5e051d286bf0] = if;

		*node[0x5e051d286c20] = op_no;

		*node[0x5e051d286c50] = >;

		*node[0x5e051d286c80] = 14;

		*node[0x5e051d286cb0] = 0;

		*node[0x5e051d286ce0] = ;;

		*node[0x5e051d286d10] = =;

		*node[0x5e051d286d40] = 15;

		*node[0x5e051d286d70] = sqrt;

		*node[0x5e051d286da0] = 14;

		*node[0x5e051d286dd0] = ;;

		*node[0x5e051d286e00] = =;

		*node[0x5e051d286e30] = 12;

		*node[0x5e051d286e60] = /;

		*node[0x5e051d286e90] = -;

		*node[0x5e051d286ec0] = -;

		*node[0x5e051d286ef0] = 0;

		*node[0x5e051d286f20] = 2;

		*node[0x5e051d286f50] = 15;

		*node[0x5e051d286f80] = *;

		*node[0x5e051d286fb0] = 2;

		*node[0x5e051d286fe0] = 1;

		*node[0x5e051d287010] = ;;

		*node[0x5e051d287040] = =;

		*node[0x5e051d287070] = 13;

		*node[0x5e051d2870a0] = /;

		*node[0x5e051d2870d0] = +;

		*node[0x5e051d287100] = -;

		*node[0x5e051d287130] = 0;

		*node[0x5e051d287160] = 2;

		*node[0x5e051d287190] = 15;

		*node[0x5e051d2871c0] = *;

		*node[0x5e051d2871f0] = 2;

		*node[0x5e051d287220] = 1;

		*node[0x5e051d287250] = ;;

		*node[0x5e051d287280] = print;

		*node[0x5e051d2872b0] = 11;

		*node[0x5e051d2872e0] = ;;

		*node[0x5e051d287310] = print;

		*node[0x5e051d287340] = 12;

		*node[0x5e051d287370] = 13;

		*node[0x5e051d2873a0] = elseif;

		*node[0x5e051d2873d0] = op_no;

		*node[0x5e051d287400] = ==;

		*node[0x5e051d287430] = 14;

		*node[0x5e051d287460] = 0;

		*node[0x5e051d287490] = ;;

		*node[0x5e051d2874c0] = =;

		*node[0x5e051d2874f0] = 10;

		*node[0x5e051d287520] = /;

		*node[0x5e051d287550] = -;

		*node[0x5e051d287580] = 0;

		*node[0x5e051d2875b0] = 2;

		*node[0x5e051d2875e0] = *;

		*node[0x5e051d287610] = 2;

		*node[0x5e051d287640] = 1;

		*node[0x5e051d287670] = ;;

		*node[0x5e051d2876a0] = print;

		*node[0x5e051d2876d0] = 8;

		*node[0x5e051d287700] = ;;

		*node[0x5e051d287730] = print;

		*node[0x5e051d287760] = 10;

		*node[0x5e051d287790] = else;

		*node[0x5e051d2877c0] = op_no;

		*node[0x5e051d2877f0] = ;;

		*node[0x5e051d287820] = print;

		*node[0x5e051d287850] = 7;

		*node[0x5e051d287880] = ;;

		*node[0x5e051d2878b0] = return;

		*node[0x5e051d2878e0] = 0;

		*node[0x5e051d287910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffefccb4940] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x569d6a0d9fd0] = ;;

		*node[0x569d6a0da000] = 0;

		*node[0x569d6a0da030] = ;;

		*node[0x569d6a0da060] = input;

		*node[0x569d6a0da090] = 1;

		*node[0x569d6a0da0c0] = 2;

		*node[0x569d6a0da0f0] = 3;

		*node[0x569d6a0da120] = ;;

		*node[0x569d6a0da180] = 1;

		*node[0x569d6a0da1b0] = 2;

		*node[0x569d6a0da1e0] = 3;

		*node[0x569d6a0da210] = ;;

		*node[0x569d6a0da240] = 4;

		*node[0x569d6a0da270] = 1;

		*node[0x569d6a0da2a0] = 2;

		*node[0x569d6a0da2d0] = 3;

		*node[0x569d6a0da300] = ;;

		*node[0x569d6a0da330] = if;

		*node[0x569d6a0da360] = op_no;

		*node[0x569d6a0da390] = ==;

		*node[0x569d6a0da3c0] = 1;

		*node[0x569d6a0da3f0] = 0;

		*node[0x569d6a0da420] = ;;

		*node[0x569d6a0da480] = 2;

		*node[0x569d6a0da4b0] = 3;

		*node[0x569d6a0da4e0] = else;

		*node[0x569d6a0da510] = op_no;

		*node[0x569d6a0da540] = ;;

		*node[0x569d6a0da5a0] = 1;

		*node[0x569d6a0da5d0] = 2;

		*node[0x569d6a0da600] = 3;

		*node[0x569d6a0da630] = ;;

		*node[0x569d6a0da660] = 5;

		*node[0x569d6a0da690] = 1;

		*node[0x569d6a0da6c0] = 2;

		*node[0x569d6a0da6f0] = ;;

		*node[0x569d6a0da720] = =;

		*node[0x569d6a0da750] = 7;

		*node[0x569d6a0da780] = -;

		*node[0x569d6a0da7b0] = 0;

		*node[0x569d6a0da7e0] = 1;

		*node[0x569d6a0da810] = ;;

		*node[0x569d6a0da840] = =;

		*node[0x569d6a0da870] = 8;

		*node[0x569d6a0da8a0] = 1;

		*node[0x569d6a0da8d0] = ;;

		*node[0x569d6a0da900] = =;

		*node[0x569d6a0da930] = 9;

		*node[0x569d6a0da960] = 1000;

		*node[0x569d6a0da990] = ;;

		*node[0x569d6a0da9c0] = if;

		*node[0x569d6a0da9f0] = op_no;

		*node[0x569d6a0daa20] = ==;

		*node[0x569d6a0daa50] = 1;

		*node[0x569d6a0daa80] = 0;

		*node[0x569d6a0daab0] = ;;

		*node[0x569d6a0daae0] = if;

		*node[0x569d6a0dab10] = op_no;

		*node[0x569d6a0dab40] = ==;

		*node[0x569d6a0dab70] = 2;

		*node[0x569d6a0daba0] = 0;

		*node[0x569d6a0dabd0] = ;;

		*node[0x569d6a0dac00] = print;

		*node[0x569d6a0dac30] = 9;

		*node[0x569d6a0dac60] = else;

		*node[0x569d6a0dac90] = op_no;

		*node[0x569d6a0dacc0] = ;;

		*node[0x569d6a0dacf0] = print;

		*node[0x569d6a0dad20] = 7;

		*node[0x569d6a0dad50] = else;

		*node[0x569d6a0dad80] = op_no;

		*node[0x569d6a0dadb0] = ;;

		*node[0x569d6a0dade0] = =;

		*node[0x569d6a0dae10] = 10;

		*node[0x569d6a0dae40] = /;

		*node[0x569d6a0dae70] = -;

		*node[0x569d6a0daea0] = 0;

		*node[0x569d6a0daed0] = 2;

		*node[0x569d6a0daf00] = 1;

		*node[0x569d6a0daf30] = ;;

		*node[0x569d6a0daf60] = print;

		*node[0x569d6a0daf90] = 8;

		*node[0x569d6a0dafc0] = ;;

		*node[0x569d6a0daff0] = print;

		*node[0x569d6a0db020] = 10;

		*node[0x569d6a0db050] = ;;

		*node[0x569d6a0db080] = return;

		*node[0x569d6a0db0b0] = 0;

		*node[0x569d6a0db0e0] = ;;

		*node[0x569d6a0db110] = 6;

		*node[0x569d6a0db140] = 1;

		*node[0x569d6a0db170] = 2;

		*node[0x569d6a0db1a0] = 3;

		*node[0x569d6a0db1d0] = ;;

		*node[0x569d6a0db200] = =;

		*node[0x569d6a0db230] = 7;

		*node[0x569d6a0db260] = -;

		*node[0x569d6a0db290] = 0;

		*node[0x569d6a0db2c0] = 1;

		*node[0x569d6a0db2f0] = ;;

		*node[0x569d6a0db320] = =;

		*node[0x569d6a0db350] = 8;

		*node[0x569d6a0db380] = 1;

		*node[0x569d6a0db3b0] = ;;

		*node[0x569d6a0db3e0] = =;

		*node[0x569d6a0db410] = 11;

		*node[0x569d6a0db440] = 2;

		*node[0x569d6a0db470] = ;;

		*node[0x569d6a0db4a0] = if;

		*node[0x569d6a0db4d0] = op_no;

		*node[0x569d6a0db500] = ==;

		*node[0x569d6a0db530] = 3;

		*node[0x569d6a0db560] = 0;

		*node[0x569d6a0db590] = ;;

		*node[0x569d6a0db5c0] = =;

		*node[0x569d6a0db5f0] = 12;

		*node[0x569d6a0db620] = 0;

		*node[0x569d6a0db650] = ;;

		*node[0x569d6a0db680] = =;

		*node[0x569d6a0db6b0] = 13;

		*node[0x569d6a0db6e0] = /;

		*node[0x569d6a0db710] = -;

		*node[0x569d6a0db740] = 0;

		*node[0x569d6a0db770] = 2;

		*node[0x569d6a0db7a0] = 1;

		*node[0x569d6a0db7d0] = ;;

		*node[0x569d6a0db800] = print;

		*node[0x569d6a0db830] = 11;

		*node[0x569d6a0db860] = ;;

		*node[0x569d6a0db890] = print;

		*node[0x569d6a0db8c0] = 12;

		*node[0x569d6a0db8f0] = 13;

		*node[0x569d6a0db920] = else;

		*node[0x569d6a0db950] = op_no;

		*node[0x569d6a0db980] = ;;

		*node[0x569d6a0db9b0] = =;

		*node[0x569d6a0db9e0] = 14;

		*node[0x569d6a0dba10] = -;

		*node[0x569d6a0dba40] = *;

		*node[0x569d6a0dba70] = 2;

		*node[0x569d6a0dbaa0] = 2;

		*node[0x569d6a0dbad0] = *;

		*node[0x569d6a0dbb00] = *;

		*node[0x569d6a0dbb30] = 4;

		*node[0x569d6a0dbb60] = 1;

		*node[0x569d6a0dbb90] = 3;

		*node[0x569d6a0dbbc0] = ;;

		*node[0x569d6a0dbbf0] = if;

		*node[0x569d6a0dbc20] = op_no;

		*node[0x569d6a0dbc50] = >;

		*node[0x569d6a0dbc80] = 14;

		*node[0x569d6a0dbcb0] = 0;

		*node[0x569d6a0dbce0] = ;;

		*node[0x569d6a0dbd10] = =;

		*node[0x569d6a0dbd40] = 15;

		*node[0x569d6a0dbd70] = sqrt;

		*node[0x569d6a0dbda0] = 14;

		*node[0x569d6a0dbdd0] = ;;

		*node[0x569d6a0dbe00] = =;

		*node[0x569d6a0dbe30] = 12;

		*node[0x569d6a0dbe60] = /;

		*node[0x569d6a0dbe90] = -;

		*node[0x569d6a0dbec0] = -;

		*node[0x569d6a0dbef0] = 0;

		*node[0x569d6a0dbf20] = 2;

		*node[0x569d6a0dbf50] = 15;

		*node[0x569d6a0dbf80] = *;

		*node[0x569d6a0dbfb0] = 2;

		*node[0x569d6a0dbfe0] = 1;

		*node[0x569d6a0dc010] = ;;

		*node[0x569d6a0dc040] = =;

		*node[0x569d6a0dc070] = 13;

		*node[0x569d6a0dc0a0] = /;

		*node[0x569d6a0dc0d0] = +;

		*node[0x569d6a0dc100] = -;

		*node[0x569d6a0dc130] = 0;

		*node[0x569d6a0dc160] = 2;

		*node[0x569d6a0dc190] = 15;

		*node[0x569d6a0dc1c0] = *;

		*node[0x569d6a0dc1f0] = 2;

		*node[0x569d6a0dc220] = 1;

		*node[0x569d6a0dc250] = ;;

		*node[0x569d6a0dc280] = print;

		*node[0x569d6a0dc2b0] = 11;

		*node[0x569d6a0dc2e0] = ;;

		*node[0x569d6a0dc310] = print;

		*node[0x569d6a0dc340] = 12;

		*node[0x569d6a0dc370] = 13;

		*node[0x569d6a0dc3a0] = elseif;

		*node[0x569d6a0dc3d0] = op_no;

		*node[0x569d6a0dc400] = ==;

		*node[0x569d6a0dc430] = 14;

		*node[0x569d6a0dc460] = 0;

		*node[0x569d6a0dc490] = ;;

		*node[0x569d6a0dc4c0] = =;

		*node[0x569d6a0dc4f0] = 10;

		*node[0x569d6a0dc520] = /;

		*node[0x569d6a0dc550] = -;

		*node[0x569d6a0dc580] = 0;

		*node[0x569d6a0dc5b0] = 2;

		*node[0x569d6a0dc5e0] = *;

		*node[0x569d6a0dc610] = 2;

		*node[0x569d6a0dc640] = 1;

		*node[0x569d6a0dc670] = ;;

		*node[0x569d6a0dc6a0] = print;

		*node[0x569d6a0dc6d0] = 8;

		*node[0x569d6a0dc700] = ;;

		*node[0x569d6a0dc730] = print;

		*node[0x569d6a0dc760] = 10;

		*node[0x569d6a0dc790] = else;

		*node[0x569d6a0dc7c0] = op_no;

		*node[0x569d6a0dc7f0] = ;;

		*node[0x569d6a0dc820] = print;

		*node[0x569d6a0dc850] = 7;

		*node[0x569d6a0dc880] = ;;

		*node[0x569d6a0dc8b0] = return;

		*node[0x569d6a0dc8e0] = 0;

		*node[0x569d6a0dc910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff498c7af0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x645b41d83fd0] = ;;

		*node[0x645b41d84000] = 0;

		*node[0x645b41d84030] = ;;

		*node[0x645b41d84060] = input;

		*node[0x645b41d84090] = 1;

		*node[0x645b41d840c0] = 2;

		*node[0x645b41d840f0] = 3;

		*node[0x645b41d84120] = ;;

		*node[0x645b41d84180] = 1;

		*node[0x645b41d841b0] = 2;

		*node[0x645b41d841e0] = 3;

		*node[0x645b41d84210] = ;;

		*node[0x645b41d84240] = 4;

		*node[0x645b41d84270] = 1;

		*node[0x645b41d842a0] = 2;

		*node[0x645b41d842d0] = 3;

		*node[0x645b41d84300] = ;;

		*node[0x645b41d84330] = if;

		*node[0x645b41d84360] = op_no;

		*node[0x645b41d84390] = ==;

		*node[0x645b41d843c0] = 1;

		*node[0x645b41d843f0] = 0;

		*node[0x645b41d84420] = ;;

		*node[0x645b41d84480] = 2;

		*node[0x645b41d844b0] = 3;

		*node[0x645b41d844e0] = else;

		*node[0x645b41d84510] = op_no;

		*node[0x645b41d84540] = ;;

		*node[0x645b41d845a0] = 1;

		*node[0x645b41d845d0] = 2;

		*node[0x645b41d84600] = 3;

		*node[0x645b41d84630] = ;;

		*node[0x645b41d84660] = 5;

		*node[0x645b41d84690] = 1;

		*node[0x645b41d846c0] = 2;

		*node[0x645b41d846f0] = ;;

		*node[0x645b41d84720] = =;

		*node[0x645b41d84750] = 7;

		*node[0x645b41d84780] = -;

		*node[0x645b41d847b0] = 0;

		*node[0x645b41d847e0] = 1;

		*node[0x645b41d84810] = ;;

		*node[0x645b41d84840] = =;

		*node[0x645b41d84870] = 8;

		*node[0x645b41d848a0] = 1;

		*node[0x645b41d848d0] = ;;

		*node[0x645b41d84900] = =;

		*node[0x645b41d84930] = 9;

		*node[0x645b41d84960] = 1000;

		*node[0x645b41d84990] = ;;

		*node[0x645b41d849c0] = if;

		*node[0x645b41d849f0] = op_no;

		*node[0x645b41d84a20] = ==;

		*node[0x645b41d84a50] = 1;

		*node[0x645b41d84a80] = 0;

		*node[0x645b41d84ab0] = ;;

		*node[0x645b41d84ae0] = if;

		*node[0x645b41d84b10] = op_no;

		*node[0x645b41d84b40] = ==;

		*node[0x645b41d84b70] = 2;

		*node[0x645b41d84ba0] = 0;

		*node[0x645b41d84bd0] = ;;

		*node[0x645b41d84c00] = print;

		*node[0x645b41d84c30] = 9;

		*node[0x645b41d84c60] = else;

		*node[0x645b41d84c90] = op_no;

		*node[0x645b41d84cc0] = ;;

		*node[0x645b41d84cf0] = print;

		*node[0x645b41d84d20] = 7;

		*node[0x645b41d84d50] = else;

		*node[0x645b41d84d80] = op_no;

		*node[0x645b41d84db0] = ;;

		*node[0x645b41d84de0] = =;

		*node[0x645b41d84e10] = 10;

		*node[0x645b41d84e40] = /;

		*node[0x645b41d84e70] = -;

		*node[0x645b41d84ea0] = 0;

		*node[0x645b41d84ed0] = 2;

		*node[0x645b41d84f00] = 1;

		*node[0x645b41d84f30] = ;;

		*node[0x645b41d84f60] = print;

		*node[0x645b41d84f90] = 8;

		*node[0x645b41d84fc0] = ;;

		*node[0x645b41d84ff0] = print;

		*node[0x645b41d85020] = 10;

		*node[0x645b41d85050] = ;;

		*node[0x645b41d85080] = return;

		*node[0x645b41d850b0] = 0;

		*node[0x645b41d850e0] = ;;

		*node[0x645b41d85110] = 6;

		*node[0x645b41d85140] = 1;

		*node[0x645b41d85170] = 2;

		*node[0x645b41d851a0] = 3;

		*node[0x645b41d851d0] = ;;

		*node[0x645b41d85200] = =;

		*node[0x645b41d85230] = 7;

		*node[0x645b41d85260] = -;

		*node[0x645b41d85290] = 0;

		*node[0x645b41d852c0] = 1;

		*node[0x645b41d852f0] = ;;

		*node[0x645b41d85320] = =;

		*node[0x645b41d85350] = 8;

		*node[0x645b41d85380] = 1;

		*node[0x645b41d853b0] = ;;

		*node[0x645b41d853e0] = =;

		*node[0x645b41d85410] = 11;

		*node[0x645b41d85440] = 2;

		*node[0x645b41d85470] = ;;

		*node[0x645b41d854a0] = if;

		*node[0x645b41d854d0] = op_no;

		*node[0x645b41d85500] = ==;

		*node[0x645b41d85530] = 3;

		*node[0x645b41d85560] = 0;

		*node[0x645b41d85590] = ;;

		*node[0x645b41d855c0] = =;

		*node[0x645b41d855f0] = 12;

		*node[0x645b41d85620] = 0;

		*node[0x645b41d85650] = ;;

		*node[0x645b41d85680] = =;

		*node[0x645b41d856b0] = 13;

		*node[0x645b41d856e0] = /;

		*node[0x645b41d85710] = -;

		*node[0x645b41d85740] = 0;

		*node[0x645b41d85770] = 2;

		*node[0x645b41d857a0] = 1;

		*node[0x645b41d857d0] = ;;

		*node[0x645b41d85800] = print;

		*node[0x645b41d85830] = 11;

		*node[0x645b41d85860] = ;;

		*node[0x645b41d85890] = print;

		*node[0x645b41d858c0] = 12;

		*node[0x645b41d858f0] = 13;

		*node[0x645b41d85920] = else;

		*node[0x645b41d85950] = op_no;

		*node[0x645b41d85980] = ;;

		*node[0x645b41d859b0] = =;

		*node[0x645b41d859e0] = 14;

		*node[0x645b41d85a10] = -;

		*node[0x645b41d85a40] = *;

		*node[0x645b41d85a70] = 2;

		*node[0x645b41d85aa0] = 2;

		*node[0x645b41d85ad0] = *;

		*node[0x645b41d85b00] = *;

		*node[0x645b41d85b30] = 4;

		*node[0x645b41d85b60] = 1;

		*node[0x645b41d85b90] = 3;

		*node[0x645b41d85bc0] = ;;

		*node[0x645b41d85bf0] = if;

		*node[0x645b41d85c20] = op_no;

		*node[0x645b41d85c50] = >;

		*node[0x645b41d85c80] = 14;

		*node[0x645b41d85cb0] = 0;

		*node[0x645b41d85ce0] = ;;

		*node[0x645b41d85d10] = =;

		*node[0x645b41d85d40] = 15;

		*node[0x645b41d85d70] = sqrt;

		*node[0x645b41d85da0] = 14;

		*node[0x645b41d85dd0] = ;;

		*node[0x645b41d85e00] = =;

		*node[0x645b41d85e30] = 12;

		*node[0x645b41d85e60] = /;

		*node[0x645b41d85e90] = -;

		*node[0x645b41d85ec0] = -;

		*node[0x645b41d85ef0] = 0;

		*node[0x645b41d85f20] = 2;

		*node[0x645b41d85f50] = 15;

		*node[0x645b41d85f80] = *;

		*node[0x645b41d85fb0] = 2;

		*node[0x645b41d85fe0] = 1;

		*node[0x645b41d86010] = ;;

		*node[0x645b41d86040] = =;

		*node[0x645b41d86070] = 13;

		*node[0x645b41d860a0] = /;

		*node[0x645b41d860d0] = +;

		*node[0x645b41d86100] = -;

		*node[0x645b41d86130] = 0;

		*node[0x645b41d86160] = 2;

		*node[0x645b41d86190] = 15;

		*node[0x645b41d861c0] = *;

		*node[0x645b41d861f0] = 2;

		*node[0x645b41d86220] = 1;

		*node[0x645b41d86250] = ;;

		*node[0x645b41d86280] = print;

		*node[0x645b41d862b0] = 11;

		*node[0x645b41d862e0] = ;;

		*node[0x645b41d86310] = print;

		*node[0x645b41d86340] = 12;

		*node[0x645b41d86370] = 13;

		*node[0x645b41d863a0] = elseif;

		*node[0x645b41d863d0] = op_no;

		*node[0x645b41d86400] = ==;

		*node[0x645b41d86430] = 14;

		*node[0x645b41d86460] = 0;

		*node[0x645b41d86490] = ;;

		*node[0x645b41d864c0] = =;

		*node[0x645b41d864f0] = 10;

		*node[0x645b41d86520] = /;

		*node[0x645b41d86550] = -;

		*node[0x645b41d86580] = 0;

		*node[0x645b41d865b0] = 2;

		*node[0x645b41d865e0] = *;

		*node[0x645b41d86610] = 2;

		*node[0x645b41d86640] = 1;

		*node[0x645b41d86670] = ;;

		*node[0x645b41d866a0] = print;

		*node[0x645b41d866d0] = 8;

		*node[0x645b41d86700] = ;;

		*node[0x645b41d86730] = print;

		*node[0x645b41d86760] = 10;

		*node[0x645b41d86790] = else;

		*node[0x645b41d867c0] = op_no;

		*node[0x645b41d867f0] = ;;

		*node[0x645b41d86820] = print;

		*node[0x645b41d86850] = 7;

		*node[0x645b41d86880] = ;;

		*node[0x645b41d868b0] = return;

		*node[0x645b41d868e0] = 0;

		*node[0x645b41d86910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff3d79c310] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x62c382fc5fd0] = ;;

		*node[0x62c382fc6000] = 0;

		*node[0x62c382fc6030] = ;;

		*node[0x62c382fc6060] = input;

		*node[0x62c382fc6090] = 1;

		*node[0x62c382fc60c0] = 2;

		*node[0x62c382fc60f0] = 3;

		*node[0x62c382fc6120] = ;;

		*node[0x62c382fc6180] = 1;

		*node[0x62c382fc61b0] = 2;

		*node[0x62c382fc61e0] = 3;

		*node[0x62c382fc6210] = ;;

		*node[0x62c382fc6240] = 4;

		*node[0x62c382fc6270] = 1;

		*node[0x62c382fc62a0] = 2;

		*node[0x62c382fc62d0] = 3;

		*node[0x62c382fc6300] = ;;

		*node[0x62c382fc6330] = if;

		*node[0x62c382fc6360] = op_no;

		*node[0x62c382fc6390] = ==;

		*node[0x62c382fc63c0] = 1;

		*node[0x62c382fc63f0] = 0;

		*node[0x62c382fc6420] = ;;

		*node[0x62c382fc6480] = 2;

		*node[0x62c382fc64b0] = 3;

		*node[0x62c382fc64e0] = else;

		*node[0x62c382fc6510] = op_no;

		*node[0x62c382fc6540] = ;;

		*node[0x62c382fc65a0] = 1;

		*node[0x62c382fc65d0] = 2;

		*node[0x62c382fc6600] = 3;

		*node[0x62c382fc6630] = ;;

		*node[0x62c382fc6660] = 5;

		*node[0x62c382fc6690] = 1;

		*node[0x62c382fc66c0] = 2;

		*node[0x62c382fc66f0] = ;;

		*node[0x62c382fc6720] = =;

		*node[0x62c382fc6750] = 7;

		*node[0x62c382fc6780] = -;

		*node[0x62c382fc67b0] = 0;

		*node[0x62c382fc67e0] = 1;

		*node[0x62c382fc6810] = ;;

		*node[0x62c382fc6840] = =;

		*node[0x62c382fc6870] = 8;

		*node[0x62c382fc68a0] = 1;

		*node[0x62c382fc68d0] = ;;

		*node[0x62c382fc6900] = =;

		*node[0x62c382fc6930] = 9;

		*node[0x62c382fc6960] = 1000;

		*node[0x62c382fc6990] = ;;

		*node[0x62c382fc69c0] = if;

		*node[0x62c382fc69f0] = op_no;

		*node[0x62c382fc6a20] = ==;

		*node[0x62c382fc6a50] = 1;

		*node[0x62c382fc6a80] = 0;

		*node[0x62c382fc6ab0] = ;;

		*node[0x62c382fc6ae0] = if;

		*node[0x62c382fc6b10] = op_no;

		*node[0x62c382fc6b40] = ==;

		*node[0x62c382fc6b70] = 2;

		*node[0x62c382fc6ba0] = 0;

		*node[0x62c382fc6bd0] = ;;

		*node[0x62c382fc6c00] = print;

		*node[0x62c382fc6c30] = 9;

		*node[0x62c382fc6c60] = else;

		*node[0x62c382fc6c90] = op_no;

		*node[0x62c382fc6cc0] = ;;

		*node[0x62c382fc6cf0] = print;

		*node[0x62c382fc6d20] = 7;

		*node[0x62c382fc6d50] = else;

		*node[0x62c382fc6d80] = op_no;

		*node[0x62c382fc6db0] = ;;

		*node[0x62c382fc6de0] = =;

		*node[0x62c382fc6e10] = 10;

		*node[0x62c382fc6e40] = /;

		*node[0x62c382fc6e70] = -;

		*node[0x62c382fc6ea0] = 0;

		*node[0x62c382fc6ed0] = 2;

		*node[0x62c382fc6f00] = 1;

		*node[0x62c382fc6f30] = ;;

		*node[0x62c382fc6f60] = print;

		*node[0x62c382fc6f90] = 8;

		*node[0x62c382fc6fc0] = ;;

		*node[0x62c382fc6ff0] = print;

		*node[0x62c382fc7020] = 10;

		*node[0x62c382fc7050] = ;;

		*node[0x62c382fc7080] = return;

		*node[0x62c382fc70b0] = 0;

		*node[0x62c382fc70e0] = ;;

		*node[0x62c382fc7110] = 6;

		*node[0x62c382fc7140] = 1;

		*node[0x62c382fc7170] = 2;

		*node[0x62c382fc71a0] = 3;

		*node[0x62c382fc71d0] = ;;

		*node[0x62c382fc7200] = =;

		*node[0x62c382fc7230] = 7;

		*node[0x62c382fc7260] = -;

		*node[0x62c382fc7290] = 0;

		*node[0x62c382fc72c0] = 1;

		*node[0x62c382fc72f0] = ;;

		*node[0x62c382fc7320] = =;

		*node[0x62c382fc7350] = 8;

		*node[0x62c382fc7380] = 1;

		*node[0x62c382fc73b0] = ;;

		*node[0x62c382fc73e0] = =;

		*node[0x62c382fc7410] = 11;

		*node[0x62c382fc7440] = 2;

		*node[0x62c382fc7470] = ;;

		*node[0x62c382fc74a0] = if;

		*node[0x62c382fc74d0] = op_no;

		*node[0x62c382fc7500] = ==;

		*node[0x62c382fc7530] = 3;

		*node[0x62c382fc7560] = 0;

		*node[0x62c382fc7590] = ;;

		*node[0x62c382fc75c0] = =;

		*node[0x62c382fc75f0] = 12;

		*node[0x62c382fc7620] = 0;

		*node[0x62c382fc7650] = ;;

		*node[0x62c382fc7680] = =;

		*node[0x62c382fc76b0] = 13;

		*node[0x62c382fc76e0] = /;

		*node[0x62c382fc7710] = -;

		*node[0x62c382fc7740] = 0;

		*node[0x62c382fc7770] = 2;

		*node[0x62c382fc77a0] = 1;

		*node[0x62c382fc77d0] = ;;

		*node[0x62c382fc7800] = print;

		*node[0x62c382fc7830] = 11;

		*node[0x62c382fc7860] = ;;

		*node[0x62c382fc7890] = print;

		*node[0x62c382fc78c0] = 12;

		*node[0x62c382fc78f0] = 13;

		*node[0x62c382fc7920] = else;

		*node[0x62c382fc7950] = op_no;

		*node[0x62c382fc7980] = ;;

		*node[0x62c382fc79b0] = =;

		*node[0x62c382fc79e0] = 14;

		*node[0x62c382fc7a10] = -;

		*node[0x62c382fc7a40] = *;

		*node[0x62c382fc7a70] = 2;

		*node[0x62c382fc7aa0] = 2;

		*node[0x62c382fc7ad0] = *;

		*node[0x62c382fc7b00] = *;

		*node[0x62c382fc7b30] = 4;

		*node[0x62c382fc7b60] = 1;

		*node[0x62c382fc7b90] = 3;

		*node[0x62c382fc7bc0] = ;;

		*node[0x62c382fc7bf0] = if;

		*node[0x62c382fc7c20] = op_no;

		*node[0x62c382fc7c50] = >;

		*node[0x62c382fc7c80] = 14;

		*node[0x62c382fc7cb0] = 0;

		*node[0x62c382fc7ce0] = ;;

		*node[0x62c382fc7d10] = =;

		*node[0x62c382fc7d40] = 15;

		*node[0x62c382fc7d70] = sqrt;

		*node[0x62c382fc7da0] = 14;

		*node[0x62c382fc7dd0] = ;;

		*node[0x62c382fc7e00] = =;

		*node[0x62c382fc7e30] = 12;

		*node[0x62c382fc7e60] = /;

		*node[0x62c382fc7e90] = -;

		*node[0x62c382fc7ec0] = -;

		*node[0x62c382fc7ef0] = 0;

		*node[0x62c382fc7f20] = 2;

		*node[0x62c382fc7f50] = 15;

		*node[0x62c382fc7f80] = *;

		*node[0x62c382fc7fb0] = 2;

		*node[0x62c382fc7fe0] = 1;

		*node[0x62c382fc8010] = ;;

		*node[0x62c382fc8040] = =;

		*node[0x62c382fc8070] = 13;

		*node[0x62c382fc80a0] = /;

		*node[0x62c382fc80d0] = +;

		*node[0x62c382fc8100] = -;

		*node[0x62c382fc8130] = 0;

		*node[0x62c382fc8160] = 2;

		*node[0x62c382fc8190] = 15;

		*node[0x62c382fc81c0] = *;

		*node[0x62c382fc81f0] = 2;

		*node[0x62c382fc8220] = 1;

		*node[0x62c382fc8250] = ;;

		*node[0x62c382fc8280] = print;

		*node[0x62c382fc82b0] = 11;

		*node[0x62c382fc82e0] = ;;

		*node[0x62c382fc8310] = print;

		*node[0x62c382fc8340] = 12;

		*node[0x62c382fc8370] = 13;

		*node[0x62c382fc83a0] = elseif;

		*node[0x62c382fc83d0] = op_no;

		*node[0x62c382fc8400] = ==;

		*node[0x62c382fc8430] = 14;

		*node[0x62c382fc8460] = 0;

		*node[0x62c382fc8490] = ;;

		*node[0x62c382fc84c0] = =;

		*node[0x62c382fc84f0] = 10;

		*node[0x62c382fc8520] = /;

		*node[0x62c382fc8550] = -;

		*node[0x62c382fc8580] = 0;

		*node[0x62c382fc85b0] = 2;

		*node[0x62c382fc85e0] = *;

		*node[0x62c382fc8610] = 2;

		*node[0x62c382fc8640] = 1;

		*node[0x62c382fc8670] = ;;

		*node[0x62c382fc86a0] = print;

		*node[0x62c382fc86d0] = 8;

		*node[0x62c382fc8700] = ;;

		*node[0x62c382fc8730] = print;

		*node[0x62c382fc8760] = 10;

		*node[0x62c382fc8790] = else;

		*node[0x62c382fc87c0] = op_no;

		*node[0x62c382fc87f0] = ;;

		*node[0x62c382fc8820] = print;

		*node[0x62c382fc8850] = 7;

		*node[0x62c382fc8880] = ;;

		*node[0x62c382fc88b0] = return;

		*node[0x62c382fc88e0] = 0;

		*node[0x62c382fc8910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe73fa7710] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x55c190143fd0] = ;;

		*node[0x55c190144000] = 0;

		*node[0x55c190144030] = ;;

		*node[0x55c190144060] = input;

		*node[0x55c190144090] = 1;

		*node[0x55c1901440c0] = 2;

		*node[0x55c1901440f0] = 3;

		*node[0x55c190144120] = ;;

		*node[0x55c190144180] = 1;

		*node[0x55c1901441b0] = 2;

		*node[0x55c1901441e0] = 3;

		*node[0x55c190144210] = ;;

		*node[0x55c190144240] = 4;

		*node[0x55c190144270] = 1;

		*node[0x55c1901442a0] = 2;

		*node[0x55c1901442d0] = 3;

		*node[0x55c190144300] = ;;

		*node[0x55c190144330] = if;

		*node[0x55c190144360] = op_no;

		*node[0x55c190144390] = ==;

		*node[0x55c1901443c0] = 1;

		*node[0x55c1901443f0] = 0;

		*node[0x55c190144420] = ;;

		*node[0x55c190144480] = 2;

		*node[0x55c1901444b0] = 3;

		*node[0x55c1901444e0] = else;

		*node[0x55c190144510] = op_no;

		*node[0x55c190144540] = ;;

		*node[0x55c1901445a0] = 1;

		*node[0x55c1901445d0] = 2;

		*node[0x55c190144600] = 3;

		*node[0x55c190144630] = ;;

		*node[0x55c190144660] = 5;

		*node[0x55c190144690] = 1;

		*node[0x55c1901446c0] = 2;

		*node[0x55c1901446f0] = ;;

		*node[0x55c190144720] = =;

		*node[0x55c190144750] = 7;

		*node[0x55c190144780] = -;

		*node[0x55c1901447b0] = 0;

		*node[0x55c1901447e0] = 1;

		*node[0x55c190144810] = ;;

		*node[0x55c190144840] = =;

		*node[0x55c190144870] = 8;

		*node[0x55c1901448a0] = 1;

		*node[0x55c1901448d0] = ;;

		*node[0x55c190144900] = =;

		*node[0x55c190144930] = 9;

		*node[0x55c190144960] = 1000;

		*node[0x55c190144990] = ;;

		*node[0x55c1901449c0] = if;

		*node[0x55c1901449f0] = op_no;

		*node[0x55c190144a20] = ==;

		*node[0x55c190144a50] = 1;

		*node[0x55c190144a80] = 0;

		*node[0x55c190144ab0] = ;;

		*node[0x55c190144ae0] = if;

		*node[0x55c190144b10] = op_no;

		*node[0x55c190144b40] = ==;

		*node[0x55c190144b70] = 2;

		*node[0x55c190144ba0] = 0;

		*node[0x55c190144bd0] = ;;

		*node[0x55c190144c00] = print;

		*node[0x55c190144c30] = 9;

		*node[0x55c190144c60] = else;

		*node[0x55c190144c90] = op_no;

		*node[0x55c190144cc0] = ;;

		*node[0x55c190144cf0] = print;

		*node[0x55c190144d20] = 7;

		*node[0x55c190144d50] = else;

		*node[0x55c190144d80] = op_no;

		*node[0x55c190144db0] = ;;

		*node[0x55c190144de0] = =;

		*node[0x55c190144e10] = 10;

		*node[0x55c190144e40] = /;

		*node[0x55c190144e70] = -;

		*node[0x55c190144ea0] = 0;

		*node[0x55c190144ed0] = 2;

		*node[0x55c190144f00] = 1;

		*node[0x55c190144f30] = ;;

		*node[0x55c190144f60] = print;

		*node[0x55c190144f90] = 8;

		*node[0x55c190144fc0] = ;;

		*node[0x55c190144ff0] = print;

		*node[0x55c190145020] = 10;

		*node[0x55c190145050] = ;;

		*node[0x55c190145080] = return;

		*node[0x55c1901450b0] = 0;

		*node[0x55c1901450e0] = ;;

		*node[0x55c190145110] = 6;

		*node[0x55c190145140] = 1;

		*node[0x55c190145170] = 2;

		*node[0x55c1901451a0] = 3;

		*node[0x55c1901451d0] = ;;

		*node[0x55c190145200] = =;

		*node[0x55c190145230] = 7;

		*node[0x55c190145260] = -;

		*node[0x55c190145290] = 0;

		*node[0x55c1901452c0] = 1;

		*node[0x55c1901452f0] = ;;

		*node[0x55c190145320] = =;

		*node[0x55c190145350] = 8;

		*node[0x55c190145380] = 1;

		*node[0x55c1901453b0] = ;;

		*node[0x55c1901453e0] = =;

		*node[0x55c190145410] = 11;

		*node[0x55c190145440] = 2;

		*node[0x55c190145470] = ;;

		*node[0x55c1901454a0] = if;

		*node[0x55c1901454d0] = op_no;

		*node[0x55c190145500] = ==;

		*node[0x55c190145530] = 3;

		*node[0x55c190145560] = 0;

		*node[0x55c190145590] = ;;

		*node[0x55c1901455c0] = =;

		*node[0x55c1901455f0] = 12;

		*node[0x55c190145620] = 0;

		*node[0x55c190145650] = ;;

		*node[0x55c190145680] = =;

		*node[0x55c1901456b0] = 13;

		*node[0x55c1901456e0] = /;

		*node[0x55c190145710] = -;

		*node[0x55c190145740] = 0;

		*node[0x55c190145770] = 2;

		*node[0x55c1901457a0] = 1;

		*node[0x55c1901457d0] = ;;

		*node[0x55c190145800] = print;

		*node[0x55c190145830] = 11;

		*node[0x55c190145860] = ;;

		*node[0x55c190145890] = print;

		*node[0x55c1901458c0] = 12;

		*node[0x55c1901458f0] = 13;

		*node[0x55c190145920] = else;

		*node[0x55c190145950] = op_no;

		*node[0x55c190145980] = ;;

		*node[0x55c1901459b0] = =;

		*node[0x55c1901459e0] = 14;

		*node[0x55c190145a10] = -;

		*node[0x55c190145a40] = *;

		*node[0x55c190145a70] = 2;

		*node[0x55c190145aa0] = 2;

		*node[0x55c190145ad0] = *;

		*node[0x55c190145b00] = *;

		*node[0x55c190145b30] = 4;

		*node[0x55c190145b60] = 1;

		*node[0x55c190145b90] = 3;

		*node[0x55c190145bc0] = ;;

		*node[0x55c190145bf0] = if;

		*node[0x55c190145c20] = op_no;

		*node[0x55c190145c50] = >;

		*node[0x55c190145c80] = 14;

		*node[0x55c190145cb0] = 0;

		*node[0x55c190145ce0] = ;;

		*node[0x55c190145d10] = =;

		*node[0x55c190145d40] = 15;

		*node[0x55c190145d70] = sqrt;

		*node[0x55c190145da0] = 14;

		*node[0x55c190145dd0] = ;;

		*node[0x55c190145e00] = =;

		*node[0x55c190145e30] = 12;

		*node[0x55c190145e60] = /;

		*node[0x55c190145e90] = -;

		*node[0x55c190145ec0] = -;

		*node[0x55c190145ef0] = 0;

		*node[0x55c190145f20] = 2;

		*node[0x55c190145f50] = 15;

		*node[0x55c190145f80] = *;

		*node[0x55c190145fb0] = 2;

		*node[0x55c190145fe0] = 1;

		*node[0x55c190146010] = ;;

		*node[0x55c190146040] = =;

		*node[0x55c190146070] = 13;

		*node[0x55c1901460a0] = /;

		*node[0x55c1901460d0] = +;

		*node[0x55c190146100] = -;

		*node[0x55c190146130] = 0;

		*node[0x55c190146160] = 2;

		*node[0x55c190146190] = 15;

		*node[0x55c1901461c0] = *;

		*node[0x55c1901461f0] = 2;

		*node[0x55c190146220] = 1;

		*node[0x55c190146250] = ;;

		*node[0x55c190146280] = print;

		*node[0x55c1901462b0] = 11;

		*node[0x55c1901462e0] = ;;

		*node[0x55c190146310] = print;

		*node[0x55c190146340] = 12;

		*node[0x55c190146370] = 13;

		*node[0x55c1901463a0] = elseif;

		*node[0x55c1901463d0] = op_no;

		*node[0x55c190146400] = ==;

		*node[0x55c190146430] = 14;

		*node[0x55c190146460] = 0;

		*node[0x55c190146490] = ;;

		*node[0x55c1901464c0] = =;

		*node[0x55c1901464f0] = 10;

		*node[0x55c190146520] = /;

		*node[0x55c190146550] = -;

		*node[0x55c190146580] = 0;

		*node[0x55c1901465b0] = 2;

		*node[0x55c1901465e0] = *;

		*node[0x55c190146610] = 2;

		*node[0x55c190146640] = 1;

		*node[0x55c190146670] = ;;

		*node[0x55c1901466a0] = print;

		*node[0x55c1901466d0] = 8;

		*node[0x55c190146700] = ;;

		*node[0x55c190146730] = print;

		*node[0x55c190146760] = 10;

		*node[0x55c190146790] = else;

		*node[0x55c1901467c0] = op_no;

		*node[0x55c1901467f0] = ;;

		*node[0x55c190146820] = print;

		*node[0x55c190146850] = 7;

		*node[0x55c190146880] = ;;

		*node[0x55c1901468b0] = return;

		*node[0x55c1901468e0] = 0;

		*node[0x55c190146910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffecc0e3ab0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x56ae78364fd0] = ;;

		*node[0x56ae78365000] = 0;

		*node[0x56ae78365030] = ;;

		*node[0x56ae78365060] = input;

		*node[0x56ae78365090] = 1;

		*node[0x56ae783650c0] = 2;

		*node[0x56ae783650f0] = 3;

		*node[0x56ae78365120] = ;;

		*node[0x56ae78365180] = 1;

		*node[0x56ae783651b0] = 2;

		*node[0x56ae783651e0] = 3;

		*node[0x56ae78365210] = ;;

		*node[0x56ae78365240] = 4;

		*node[0x56ae78365270] = 1;

		*node[0x56ae783652a0] = 2;

		*node[0x56ae783652d0] = 3;

		*node[0x56ae78365300] = ;;

		*node[0x56ae78365330] = if;

		*node[0x56ae78365360] = op_no;

		*node[0x56ae78365390] = ==;

		*node[0x56ae783653c0] = 1;

		*node[0x56ae783653f0] = 0;

		*node[0x56ae78365420] = ;;

		*node[0x56ae78365480] = 2;

		*node[0x56ae783654b0] = 3;

		*node[0x56ae783654e0] = else;

		*node[0x56ae78365510] = op_no;

		*node[0x56ae78365540] = ;;

		*node[0x56ae783655a0] = 1;

		*node[0x56ae783655d0] = 2;

		*node[0x56ae78365600] = 3;

		*node[0x56ae78365630] = ;;

		*node[0x56ae78365660] = 5;

		*node[0x56ae78365690] = 1;

		*node[0x56ae783656c0] = 2;

		*node[0x56ae783656f0] = ;;

		*node[0x56ae78365720] = =;

		*node[0x56ae78365750] = 7;

		*node[0x56ae78365780] = -;

		*node[0x56ae783657b0] = 0;

		*node[0x56ae783657e0] = 1;

		*node[0x56ae78365810] = ;;

		*node[0x56ae78365840] = =;

		*node[0x56ae78365870] = 8;

		*node[0x56ae783658a0] = 1;

		*node[0x56ae783658d0] = ;;

		*node[0x56ae78365900] = =;

		*node[0x56ae78365930] = 9;

		*node[0x56ae78365960] = 1000;

		*node[0x56ae78365990] = ;;

		*node[0x56ae783659c0] = if;

		*node[0x56ae783659f0] = op_no;

		*node[0x56ae78365a20] = ==;

		*node[0x56ae78365a50] = 1;

		*node[0x56ae78365a80] = 0;

		*node[0x56ae78365ab0] = ;;

		*node[0x56ae78365ae0] = if;

		*node[0x56ae78365b10] = op_no;

		*node[0x56ae78365b40] = ==;

		*node[0x56ae78365b70] = 2;

		*node[0x56ae78365ba0] = 0;

		*node[0x56ae78365bd0] = ;;

		*node[0x56ae78365c00] = print;

		*node[0x56ae78365c30] = 9;

		*node[0x56ae78365c60] = else;

		*node[0x56ae78365c90] = op_no;

		*node[0x56ae78365cc0] = ;;

		*node[0x56ae78365cf0] = print;

		*node[0x56ae78365d20] = 7;

		*node[0x56ae78365d50] = else;

		*node[0x56ae78365d80] = op_no;

		*node[0x56ae78365db0] = ;;

		*node[0x56ae78365de0] = =;

		*node[0x56ae78365e10] = 10;

		*node[0x56ae78365e40] = /;

		*node[0x56ae78365e70] = -;

		*node[0x56ae78365ea0] = 0;

		*node[0x56ae78365ed0] = 2;

		*node[0x56ae78365f00] = 1;

		*node[0x56ae78365f30] = ;;

		*node[0x56ae78365f60] = print;

		*node[0x56ae78365f90] = 8;

		*node[0x56ae78365fc0] = ;;

		*node[0x56ae78365ff0] = print;

		*node[0x56ae78366020] = 10;

		*node[0x56ae78366050] = ;;

		*node[0x56ae78366080] = return;

		*node[0x56ae783660b0] = 0;

		*node[0x56ae783660e0] = ;;

		*node[0x56ae78366110] = 6;

		*node[0x56ae78366140] = 1;

		*node[0x56ae78366170] = 2;

		*node[0x56ae783661a0] = 3;

		*node[0x56ae783661d0] = ;;

		*node[0x56ae78366200] = =;

		*node[0x56ae78366230] = 7;

		*node[0x56ae78366260] = -;

		*node[0x56ae78366290] = 0;

		*node[0x56ae783662c0] = 1;

		*node[0x56ae783662f0] = ;;

		*node[0x56ae78366320] = =;

		*node[0x56ae78366350] = 8;

		*node[0x56ae78366380] = 1;

		*node[0x56ae783663b0] = ;;

		*node[0x56ae783663e0] = =;

		*node[0x56ae78366410] = 11;

		*node[0x56ae78366440] = 2;

		*node[0x56ae78366470] = ;;

		*node[0x56ae783664a0] = if;

		*node[0x56ae783664d0] = op_no;

		*node[0x56ae78366500] = ==;

		*node[0x56ae78366530] = 3;

		*node[0x56ae78366560] = 0;

		*node[0x56ae78366590] = ;;

		*node[0x56ae783665c0] = =;

		*node[0x56ae783665f0] = 12;

		*node[0x56ae78366620] = 0;

		*node[0x56ae78366650] = ;;

		*node[0x56ae78366680] = =;

		*node[0x56ae783666b0] = 13;

		*node[0x56ae783666e0] = /;

		*node[0x56ae78366710] = -;

		*node[0x56ae78366740] = 0;

		*node[0x56ae78366770] = 2;

		*node[0x56ae783667a0] = 1;

		*node[0x56ae783667d0] = ;;

		*node[0x56ae78366800] = print;

		*node[0x56ae78366830] = 11;

		*node[0x56ae78366860] = ;;

		*node[0x56ae78366890] = print;

		*node[0x56ae783668c0] = 12;

		*node[0x56ae783668f0] = 13;

		*node[0x56ae78366920] = else;

		*node[0x56ae78366950] = op_no;

		*node[0x56ae78366980] = ;;

		*node[0x56ae783669b0] = =;

		*node[0x56ae783669e0] = 14;

		*node[0x56ae78366a10] = -;

		*node[0x56ae78366a40] = *;

		*node[0x56ae78366a70] = 2;

		*node[0x56ae78366aa0] = 2;

		*node[0x56ae78366ad0] = *;

		*node[0x56ae78366b00] = *;

		*node[0x56ae78366b30] = 4;

		*node[0x56ae78366b60] = 1;

		*node[0x56ae78366b90] = 3;

		*node[0x56ae78366bc0] = ;;

		*node[0x56ae78366bf0] = if;

		*node[0x56ae78366c20] = op_no;

		*node[0x56ae78366c50] = >;

		*node[0x56ae78366c80] = 14;

		*node[0x56ae78366cb0] = 0;

		*node[0x56ae78366ce0] = ;;

		*node[0x56ae78366d10] = =;

		*node[0x56ae78366d40] = 15;

		*node[0x56ae78366d70] = sqrt;

		*node[0x56ae78366da0] = 14;

		*node[0x56ae78366dd0] = ;;

		*node[0x56ae78366e00] = =;

		*node[0x56ae78366e30] = 12;

		*node[0x56ae78366e60] = /;

		*node[0x56ae78366e90] = -;

		*node[0x56ae78366ec0] = -;

		*node[0x56ae78366ef0] = 0;

		*node[0x56ae78366f20] = 2;

		*node[0x56ae78366f50] = 15;

		*node[0x56ae78366f80] = *;

		*node[0x56ae78366fb0] = 2;

		*node[0x56ae78366fe0] = 1;

		*node[0x56ae78367010] = ;;

		*node[0x56ae78367040] = =;

		*node[0x56ae78367070] = 13;

		*node[0x56ae783670a0] = /;

		*node[0x56ae783670d0] = +;

		*node[0x56ae78367100] = -;

		*node[0x56ae78367130] = 0;

		*node[0x56ae78367160] = 2;

		*node[0x56ae78367190] = 15;

		*node[0x56ae783671c0] = *;

		*node[0x56ae783671f0] = 2;

		*node[0x56ae78367220] = 1;

		*node[0x56ae78367250] = ;;

		*node[0x56ae78367280] = print;

		*node[0x56ae783672b0] = 11;

		*node[0x56ae783672e0] = ;;

		*node[0x56ae78367310] = print;

		*node[0x56ae78367340] = 12;

		*node[0x56ae78367370] = 13;

		*node[0x56ae783673a0] = elseif;

		*node[0x56ae783673d0] = op_no;

		*node[0x56ae78367400] = ==;

		*node[0x56ae78367430] = 14;

		*node[0x56ae78367460] = 0;

		*node[0x56ae78367490] = ;;

		*node[0x56ae783674c0] = =;

		*node[0x56ae783674f0] = 10;

		*node[0x56ae78367520] = /;

		*node[0x56ae78367550] = -;

		*node[0x56ae78367580] = 0;

		*node[0x56ae783675b0] = 2;

		*node[0x56ae783675e0] = *;

		*node[0x56ae78367610] = 2;

		*node[0x56ae78367640] = 1;

		*node[0x56ae78367670] = ;;

		*node[0x56ae783676a0] = print;

		*node[0x56ae783676d0] = 8;

		*node[0x56ae78367700] = ;;

		*node[0x56ae78367730] = print;

		*node[0x56ae78367760] = 10;

		*node[0x56ae78367790] = else;

		*node[0x56ae783677c0] = op_no;

		*node[0x56ae783677f0] = ;;

		*node[0x56ae78367820] = print;

		*node[0x56ae78367850] = 7;

		*node[0x56ae78367880] = ;;

		*node[0x56ae783678b0] = return;

		*node[0x56ae783678e0] = 0;

		*node[0x56ae78367910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd83985370] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x55d31eca4fd0] = ;;

		*node[0x55d31eca5000] = 0;

		*node[0x55d31eca5030] = ;;

		*node[0x55d31eca5060] = input;

		*node[0x55d31eca5090] = 1;

		*node[0x55d31eca50c0] = 2;

		*node[0x55d31eca50f0] = 3;

		*node[0x55d31eca5120] = ;;

		*node[0x55d31eca5180] = 1;

		*node[0x55d31eca51b0] = 2;

		*node[0x55d31eca51e0] = 3;

		*node[0x55d31eca5210] = ;;

		*node[0x55d31eca5240] = 4;

		*node[0x55d31eca5270] = 1;

		*node[0x55d31eca52a0] = 2;

		*node[0x55d31eca52d0] = 3;

		*node[0x55d31eca5300] = ;;

		*node[0x55d31eca5330] = if;

		*node[0x55d31eca5360] = op_no;

		*node[0x55d31eca5390] = ==;

		*node[0x55d31eca53c0] = 1;

		*node[0x55d31eca53f0] = 0;

		*node[0x55d31eca5420] = ;;

		*node[0x55d31eca5480] = 2;

		*node[0x55d31eca54b0] = 3;

		*node[0x55d31eca54e0] = else;

		*node[0x55d31eca5510] = op_no;

		*node[0x55d31eca5540] = ;;

		*node[0x55d31eca55a0] = 1;

		*node[0x55d31eca55d0] = 2;

		*node[0x55d31eca5600] = 3;

		*node[0x55d31eca5630] = ;;

		*node[0x55d31eca5660] = 5;

		*node[0x55d31eca5690] = 1;

		*node[0x55d31eca56c0] = 2;

		*node[0x55d31eca56f0] = ;;

		*node[0x55d31eca5720] = =;

		*node[0x55d31eca5750] = 7;

		*node[0x55d31eca5780] = -;

		*node[0x55d31eca57b0] = 0;

		*node[0x55d31eca57e0] = 1;

		*node[0x55d31eca5810] = ;;

		*node[0x55d31eca5840] = =;

		*node[0x55d31eca5870] = 8;

		*node[0x55d31eca58a0] = 1;

		*node[0x55d31eca58d0] = ;;

		*node[0x55d31eca5900] = =;

		*node[0x55d31eca5930] = 9;

		*node[0x55d31eca5960] = 1000;

		*node[0x55d31eca5990] = ;;

		*node[0x55d31eca59c0] = if;

		*node[0x55d31eca59f0] = op_no;

		*node[0x55d31eca5a20] = ==;

		*node[0x55d31eca5a50] = 1;

		*node[0x55d31eca5a80] = 0;

		*node[0x55d31eca5ab0] = ;;

		*node[0x55d31eca5ae0] = if;

		*node[0x55d31eca5b10] = op_no;

		*node[0x55d31eca5b40] = ==;

		*node[0x55d31eca5b70] = 2;

		*node[0x55d31eca5ba0] = 0;

		*node[0x55d31eca5bd0] = ;;

		*node[0x55d31eca5c00] = print;

		*node[0x55d31eca5c30] = 9;

		*node[0x55d31eca5c60] = else;

		*node[0x55d31eca5c90] = op_no;

		*node[0x55d31eca5cc0] = ;;

		*node[0x55d31eca5cf0] = print;

		*node[0x55d31eca5d20] = 7;

		*node[0x55d31eca5d50] = else;

		*node[0x55d31eca5d80] = op_no;

		*node[0x55d31eca5db0] = ;;

		*node[0x55d31eca5de0] = =;

		*node[0x55d31eca5e10] = 10;

		*node[0x55d31eca5e40] = /;

		*node[0x55d31eca5e70] = -;

		*node[0x55d31eca5ea0] = 0;

		*node[0x55d31eca5ed0] = 2;

		*node[0x55d31eca5f00] = 1;

		*node[0x55d31eca5f30] = ;;

		*node[0x55d31eca5f60] = print;

		*node[0x55d31eca5f90] = 8;

		*node[0x55d31eca5fc0] = ;;

		*node[0x55d31eca5ff0] = print;

		*node[0x55d31eca6020] = 10;

		*node[0x55d31eca6050] = ;;

		*node[0x55d31eca6080] = return;

		*node[0x55d31eca60b0] = 0;

		*node[0x55d31eca60e0] = ;;

		*node[0x55d31eca6110] = 6;

		*node[0x55d31eca6140] = 1;

		*node[0x55d31eca6170] = 2;

		*node[0x55d31eca61a0] = 3;

		*node[0x55d31eca61d0] = ;;

		*node[0x55d31eca6200] = =;

		*node[0x55d31eca6230] = 7;

		*node[0x55d31eca6260] = -;

		*node[0x55d31eca6290] = 0;

		*node[0x55d31eca62c0] = 1;

		*node[0x55d31eca62f0] = ;;

		*node[0x55d31eca6320] = =;

		*node[0x55d31eca6350] = 8;

		*node[0x55d31eca6380] = 1;

		*node[0x55d31eca63b0] = ;;

		*node[0x55d31eca63e0] = =;

		*node[0x55d31eca6410] = 11;

		*node[0x55d31eca6440] = 2;

		*node[0x55d31eca6470] = ;;

		*node[0x55d31eca64a0] = if;

		*node[0x55d31eca64d0] = op_no;

		*node[0x55d31eca6500] = ==;

		*node[0x55d31eca6530] = 3;

		*node[0x55d31eca6560] = 0;

		*node[0x55d31eca6590] = ;;

		*node[0x55d31eca65c0] = =;

		*node[0x55d31eca65f0] = 12;

		*node[0x55d31eca6620] = 0;

		*node[0x55d31eca6650] = ;;

		*node[0x55d31eca6680] = =;

		*node[0x55d31eca66b0] = 13;

		*node[0x55d31eca66e0] = /;

		*node[0x55d31eca6710] = -;

		*node[0x55d31eca6740] = 0;

		*node[0x55d31eca6770] = 2;

		*node[0x55d31eca67a0] = 1;

		*node[0x55d31eca67d0] = ;;

		*node[0x55d31eca6800] = print;

		*node[0x55d31eca6830] = 11;

		*node[0x55d31eca6860] = ;;

		*node[0x55d31eca6890] = print;

		*node[0x55d31eca68c0] = 12;

		*node[0x55d31eca68f0] = 13;

		*node[0x55d31eca6920] = else;

		*node[0x55d31eca6950] = op_no;

		*node[0x55d31eca6980] = ;;

		*node[0x55d31eca69b0] = =;

		*node[0x55d31eca69e0] = 14;

		*node[0x55d31eca6a10] = -;

		*node[0x55d31eca6a40] = *;

		*node[0x55d31eca6a70] = 2;

		*node[0x55d31eca6aa0] = 2;

		*node[0x55d31eca6ad0] = *;

		*node[0x55d31eca6b00] = *;

		*node[0x55d31eca6b30] = 4;

		*node[0x55d31eca6b60] = 1;

		*node[0x55d31eca6b90] = 3;

		*node[0x55d31eca6bc0] = ;;

		*node[0x55d31eca6bf0] = if;

		*node[0x55d31eca6c20] = op_no;

		*node[0x55d31eca6c50] = >;

		*node[0x55d31eca6c80] = 14;

		*node[0x55d31eca6cb0] = 0;

		*node[0x55d31eca6ce0] = ;;

		*node[0x55d31eca6d10] = =;

		*node[0x55d31eca6d40] = 15;

		*node[0x55d31eca6d70] = sqrt;

		*node[0x55d31eca6da0] = 14;

		*node[0x55d31eca6dd0] = ;;

		*node[0x55d31eca6e00] = =;

		*node[0x55d31eca6e30] = 12;

		*node[0x55d31eca6e60] = /;

		*node[0x55d31eca6e90] = -;

		*node[0x55d31eca6ec0] = -;

		*node[0x55d31eca6ef0] = 0;

		*node[0x55d31eca6f20] = 2;

		*node[0x55d31eca6f50] = 15;

		*node[0x55d31eca6f80] = *;

		*node[0x55d31eca6fb0] = 2;

		*node[0x55d31eca6fe0] = 1;

		*node[0x55d31eca7010] = ;;

		*node[0x55d31eca7040] = =;

		*node[0x55d31eca7070] = 13;

		*node[0x55d31eca70a0] = /;

		*node[0x55d31eca70d0] = +;

		*node[0x55d31eca7100] = -;

		*node[0x55d31eca7130] = 0;

		*node[0x55d31eca7160] = 2;

		*node[0x55d31eca7190] = 15;

		*node[0x55d31eca71c0] = *;

		*node[0x55d31eca71f0] = 2;

		*node[0x55d31eca7220] = 1;

		*node[0x55d31eca7250] = ;;

		*node[0x55d31eca7280] = print;

		*node[0x55d31eca72b0] = 11;

		*node[0x55d31eca72e0] = ;;

		*node[0x55d31eca7310] = print;

		*node[0x55d31eca7340] = 12;

		*node[0x55d31eca7370] = 13;

		*node[0x55d31eca73a0] = elseif;

		*node[0x55d31eca73d0] = op_no;

		*node[0x55d31eca7400] = ==;

		*node[0x55d31eca7430] = 14;

		*node[0x55d31eca7460] = 0;

		*node[0x55d31eca7490] = ;;

		*node[0x55d31eca74c0] = =;

		*node[0x55d31eca74f0] = 10;

		*node[0x55d31eca7520] = /;

		*node[0x55d31eca7550] = -;

		*node[0x55d31eca7580] = 0;

		*node[0x55d31eca75b0] = 2;

		*node[0x55d31eca75e0] = *;

		*node[0x55d31eca7610] = 2;

		*node[0x55d31eca7640] = 1;

		*node[0x55d31eca7670] = ;;

		*node[0x55d31eca76a0] = print;

		*node[0x55d31eca76d0] = 8;

		*node[0x55d31eca7700] = ;;

		*node[0x55d31eca7730] = print;

		*node[0x55d31eca7760] = 10;

		*node[0x55d31eca7790] = else;

		*node[0x55d31eca77c0] = op_no;

		*node[0x55d31eca77f0] = ;;

		*node[0x55d31eca7820] = print;

		*node[0x55d31eca7850] = 7;

		*node[0x55d31eca7880] = ;;

		*node[0x55d31eca78b0] = return;

		*node[0x55d31eca78e0] = 0;

		*node[0x55d31eca7910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe1ed1dab0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e1df35b7fd0] = ;;

		*node[0x5e1df35b8000] = 0;

		*node[0x5e1df35b8030] = ;;

		*node[0x5e1df35b8060] = input;

		*node[0x5e1df35b8090] = 1;

		*node[0x5e1df35b80c0] = 2;

		*node[0x5e1df35b80f0] = 3;

		*node[0x5e1df35b8120] = ;;

		*node[0x5e1df35b8180] = 1;

		*node[0x5e1df35b81b0] = 2;

		*node[0x5e1df35b81e0] = 3;

		*node[0x5e1df35b8210] = ;;

		*node[0x5e1df35b8240] = 4;

		*node[0x5e1df35b8270] = 1;

		*node[0x5e1df35b82a0] = 2;

		*node[0x5e1df35b82d0] = 3;

		*node[0x5e1df35b8300] = ;;

		*node[0x5e1df35b8330] = if;

		*node[0x5e1df35b8360] = op_no;

		*node[0x5e1df35b8390] = ==;

		*node[0x5e1df35b83c0] = 1;

		*node[0x5e1df35b83f0] = 0;

		*node[0x5e1df35b8420] = ;;

		*node[0x5e1df35b8480] = 2;

		*node[0x5e1df35b84b0] = 3;

		*node[0x5e1df35b84e0] = else;

		*node[0x5e1df35b8510] = op_no;

		*node[0x5e1df35b8540] = ;;

		*node[0x5e1df35b85a0] = 1;

		*node[0x5e1df35b85d0] = 2;

		*node[0x5e1df35b8600] = 3;

		*node[0x5e1df35b8630] = ;;

		*node[0x5e1df35b8660] = 5;

		*node[0x5e1df35b8690] = 1;

		*node[0x5e1df35b86c0] = 2;

		*node[0x5e1df35b86f0] = ;;

		*node[0x5e1df35b8720] = =;

		*node[0x5e1df35b8750] = 7;

		*node[0x5e1df35b8780] = -;

		*node[0x5e1df35b87b0] = 0;

		*node[0x5e1df35b87e0] = 1;

		*node[0x5e1df35b8810] = ;;

		*node[0x5e1df35b8840] = =;

		*node[0x5e1df35b8870] = 8;

		*node[0x5e1df35b88a0] = 1;

		*node[0x5e1df35b88d0] = ;;

		*node[0x5e1df35b8900] = =;

		*node[0x5e1df35b8930] = 9;

		*node[0x5e1df35b8960] = 1000;

		*node[0x5e1df35b8990] = ;;

		*node[0x5e1df35b89c0] = if;

		*node[0x5e1df35b89f0] = op_no;

		*node[0x5e1df35b8a20] = ==;

		*node[0x5e1df35b8a50] = 1;

		*node[0x5e1df35b8a80] = 0;

		*node[0x5e1df35b8ab0] = ;;

		*node[0x5e1df35b8ae0] = if;

		*node[0x5e1df35b8b10] = op_no;

		*node[0x5e1df35b8b40] = ==;

		*node[0x5e1df35b8b70] = 2;

		*node[0x5e1df35b8ba0] = 0;

		*node[0x5e1df35b8bd0] = ;;

		*node[0x5e1df35b8c00] = print;

		*node[0x5e1df35b8c30] = 9;

		*node[0x5e1df35b8c60] = else;

		*node[0x5e1df35b8c90] = op_no;

		*node[0x5e1df35b8cc0] = ;;

		*node[0x5e1df35b8cf0] = print;

		*node[0x5e1df35b8d20] = 7;

		*node[0x5e1df35b8d50] = else;

		*node[0x5e1df35b8d80] = op_no;

		*node[0x5e1df35b8db0] = ;;

		*node[0x5e1df35b8de0] = =;

		*node[0x5e1df35b8e10] = 10;

		*node[0x5e1df35b8e40] = /;

		*node[0x5e1df35b8e70] = -;

		*node[0x5e1df35b8ea0] = 0;

		*node[0x5e1df35b8ed0] = 2;

		*node[0x5e1df35b8f00] = 1;

		*node[0x5e1df35b8f30] = ;;

		*node[0x5e1df35b8f60] = print;

		*node[0x5e1df35b8f90] = 8;

		*node[0x5e1df35b8fc0] = ;;

		*node[0x5e1df35b8ff0] = print;

		*node[0x5e1df35b9020] = 10;

		*node[0x5e1df35b9050] = ;;

		*node[0x5e1df35b9080] = return;

		*node[0x5e1df35b90b0] = 0;

		*node[0x5e1df35b90e0] = ;;

		*node[0x5e1df35b9110] = 6;

		*node[0x5e1df35b9140] = 1;

		*node[0x5e1df35b9170] = 2;

		*node[0x5e1df35b91a0] = 3;

		*node[0x5e1df35b91d0] = ;;

		*node[0x5e1df35b9200] = =;

		*node[0x5e1df35b9230] = 7;

		*node[0x5e1df35b9260] = -;

		*node[0x5e1df35b9290] = 0;

		*node[0x5e1df35b92c0] = 1;

		*node[0x5e1df35b92f0] = ;;

		*node[0x5e1df35b9320] = =;

		*node[0x5e1df35b9350] = 8;

		*node[0x5e1df35b9380] = 1;

		*node[0x5e1df35b93b0] = ;;

		*node[0x5e1df35b93e0] = =;

		*node[0x5e1df35b9410] = 11;

		*node[0x5e1df35b9440] = 2;

		*node[0x5e1df35b9470] = ;;

		*node[0x5e1df35b94a0] = if;

		*node[0x5e1df35b94d0] = op_no;

		*node[0x5e1df35b9500] = ==;

		*node[0x5e1df35b9530] = 3;

		*node[0x5e1df35b9560] = 0;

		*node[0x5e1df35b9590] = ;;

		*node[0x5e1df35b95c0] = =;

		*node[0x5e1df35b95f0] = 12;

		*node[0x5e1df35b9620] = 0;

		*node[0x5e1df35b9650] = ;;

		*node[0x5e1df35b9680] = =;

		*node[0x5e1df35b96b0] = 13;

		*node[0x5e1df35b96e0] = /;

		*node[0x5e1df35b9710] = -;

		*node[0x5e1df35b9740] = 0;

		*node[0x5e1df35b9770] = 2;

		*node[0x5e1df35b97a0] = 1;

		*node[0x5e1df35b97d0] = ;;

		*node[0x5e1df35b9800] = print;

		*node[0x5e1df35b9830] = 11;

		*node[0x5e1df35b9860] = ;;

		*node[0x5e1df35b9890] = print;

		*node[0x5e1df35b98c0] = 12;

		*node[0x5e1df35b98f0] = 13;

		*node[0x5e1df35b9920] = else;

		*node[0x5e1df35b9950] = op_no;

		*node[0x5e1df35b9980] = ;;

		*node[0x5e1df35b99b0] = =;

		*node[0x5e1df35b99e0] = 14;

		*node[0x5e1df35b9a10] = -;

		*node[0x5e1df35b9a40] = *;

		*node[0x5e1df35b9a70] = 2;

		*node[0x5e1df35b9aa0] = 2;

		*node[0x5e1df35b9ad0] = *;

		*node[0x5e1df35b9b00] = *;

		*node[0x5e1df35b9b30] = 4;

		*node[0x5e1df35b9b60] = 1;

		*node[0x5e1df35b9b90] = 3;

		*node[0x5e1df35b9bc0] = ;;

		*node[0x5e1df35b9bf0] = if;

		*node[0x5e1df35b9c20] = op_no;

		*node[0x5e1df35b9c50] = >;

		*node[0x5e1df35b9c80] = 14;

		*node[0x5e1df35b9cb0] = 0;

		*node[0x5e1df35b9ce0] = ;;

		*node[0x5e1df35b9d10] = =;

		*node[0x5e1df35b9d40] = 15;

		*node[0x5e1df35b9d70] = sqrt;

		*node[0x5e1df35b9da0] = 14;

		*node[0x5e1df35b9dd0] = ;;

		*node[0x5e1df35b9e00] = =;

		*node[0x5e1df35b9e30] = 12;

		*node[0x5e1df35b9e60] = /;

		*node[0x5e1df35b9e90] = -;

		*node[0x5e1df35b9ec0] = -;

		*node[0x5e1df35b9ef0] = 0;

		*node[0x5e1df35b9f20] = 2;

		*node[0x5e1df35b9f50] = 15;

		*node[0x5e1df35b9f80] = *;

		*node[0x5e1df35b9fb0] = 2;

		*node[0x5e1df35b9fe0] = 1;

		*node[0x5e1df35ba010] = ;;

		*node[0x5e1df35ba040] = =;

		*node[0x5e1df35ba070] = 13;

		*node[0x5e1df35ba0a0] = /;

		*node[0x5e1df35ba0d0] = +;

		*node[0x5e1df35ba100] = -;

		*node[0x5e1df35ba130] = 0;

		*node[0x5e1df35ba160] = 2;

		*node[0x5e1df35ba190] = 15;

		*node[0x5e1df35ba1c0] = *;

		*node[0x5e1df35ba1f0] = 2;

		*node[0x5e1df35ba220] = 1;

		*node[0x5e1df35ba250] = ;;

		*node[0x5e1df35ba280] = print;

		*node[0x5e1df35ba2b0] = 11;

		*node[0x5e1df35ba2e0] = ;;

		*node[0x5e1df35ba310] = print;

		*node[0x5e1df35ba340] = 12;

		*node[0x5e1df35ba370] = 13;

		*node[0x5e1df35ba3a0] = elseif;

		*node[0x5e1df35ba3d0] = op_no;

		*node[0x5e1df35ba400] = ==;

		*node[0x5e1df35ba430] = 14;

		*node[0x5e1df35ba460] = 0;

		*node[0x5e1df35ba490] = ;;

		*node[0x5e1df35ba4c0] = =;

		*node[0x5e1df35ba4f0] = 10;

		*node[0x5e1df35ba520] = /;

		*node[0x5e1df35ba550] = -;

		*node[0x5e1df35ba580] = 0;

		*node[0x5e1df35ba5b0] = 2;

		*node[0x5e1df35ba5e0] = *;

		*node[0x5e1df35ba610] = 2;

		*node[0x5e1df35ba640] = 1;

		*node[0x5e1df35ba670] = ;;

		*node[0x5e1df35ba6a0] = print;

		*node[0x5e1df35ba6d0] = 8;

		*node[0x5e1df35ba700] = ;;

		*node[0x5e1df35ba730] = print;

		*node[0x5e1df35ba760] = 10;

		*node[0x5e1df35ba790] = else;

		*node[0x5e1df35ba7c0] = op_no;

		*node[0x5e1df35ba7f0] = ;;

		*node[0x5e1df35ba820] = print;

		*node[0x5e1df35ba850] = 7;

		*node[0x5e1df35ba880] = ;;

		*node[0x5e1df35ba8b0] = return;

		*node[0x5e1df35ba8e0] = 0;

		*node[0x5e1df35ba910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffce203c920] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5cc12db37fd0] = ;;

		*node[0x5cc12db38000] = 0;

		*node[0x5cc12db38030] = ;;

		*node[0x5cc12db38060] = input;

		*node[0x5cc12db38090] = 1;

		*node[0x5cc12db380c0] = 2;

		*node[0x5cc12db380f0] = 3;

		*node[0x5cc12db38120] = ;;

		*node[0x5cc12db38180] = 1;

		*node[0x5cc12db381b0] = 2;

		*node[0x5cc12db381e0] = 3;

		*node[0x5cc12db38210] = ;;

		*node[0x5cc12db38240] = 4;

		*node[0x5cc12db38270] = 1;

		*node[0x5cc12db382a0] = 2;

		*node[0x5cc12db382d0] = 3;

		*node[0x5cc12db38300] = ;;

		*node[0x5cc12db38330] = if;

		*node[0x5cc12db38360] = op_no;

		*node[0x5cc12db38390] = ==;

		*node[0x5cc12db383c0] = 1;

		*node[0x5cc12db383f0] = 0;

		*node[0x5cc12db38420] = ;;

		*node[0x5cc12db38480] = 2;

		*node[0x5cc12db384b0] = 3;

		*node[0x5cc12db384e0] = else;

		*node[0x5cc12db38510] = op_no;

		*node[0x5cc12db38540] = ;;

		*node[0x5cc12db385a0] = 1;

		*node[0x5cc12db385d0] = 2;

		*node[0x5cc12db38600] = 3;

		*node[0x5cc12db38630] = ;;

		*node[0x5cc12db38660] = 5;

		*node[0x5cc12db38690] = 1;

		*node[0x5cc12db386c0] = 2;

		*node[0x5cc12db386f0] = ;;

		*node[0x5cc12db38720] = =;

		*node[0x5cc12db38750] = 7;

		*node[0x5cc12db38780] = -;

		*node[0x5cc12db387b0] = 0;

		*node[0x5cc12db387e0] = 1;

		*node[0x5cc12db38810] = ;;

		*node[0x5cc12db38840] = =;

		*node[0x5cc12db38870] = 8;

		*node[0x5cc12db388a0] = 1;

		*node[0x5cc12db388d0] = ;;

		*node[0x5cc12db38900] = =;

		*node[0x5cc12db38930] = 9;

		*node[0x5cc12db38960] = 1000;

		*node[0x5cc12db38990] = ;;

		*node[0x5cc12db389c0] = if;

		*node[0x5cc12db389f0] = op_no;

		*node[0x5cc12db38a20] = ==;

		*node[0x5cc12db38a50] = 1;

		*node[0x5cc12db38a80] = 0;

		*node[0x5cc12db38ab0] = ;;

		*node[0x5cc12db38ae0] = if;

		*node[0x5cc12db38b10] = op_no;

		*node[0x5cc12db38b40] = ==;

		*node[0x5cc12db38b70] = 2;

		*node[0x5cc12db38ba0] = 0;

		*node[0x5cc12db38bd0] = ;;

		*node[0x5cc12db38c00] = print;

		*node[0x5cc12db38c30] = 9;

		*node[0x5cc12db38c60] = else;

		*node[0x5cc12db38c90] = op_no;

		*node[0x5cc12db38cc0] = ;;

		*node[0x5cc12db38cf0] = print;

		*node[0x5cc12db38d20] = 7;

		*node[0x5cc12db38d50] = else;

		*node[0x5cc12db38d80] = op_no;

		*node[0x5cc12db38db0] = ;;

		*node[0x5cc12db38de0] = =;

		*node[0x5cc12db38e10] = 10;

		*node[0x5cc12db38e40] = /;

		*node[0x5cc12db38e70] = -;

		*node[0x5cc12db38ea0] = 0;

		*node[0x5cc12db38ed0] = 2;

		*node[0x5cc12db38f00] = 1;

		*node[0x5cc12db38f30] = ;;

		*node[0x5cc12db38f60] = print;

		*node[0x5cc12db38f90] = 8;

		*node[0x5cc12db38fc0] = ;;

		*node[0x5cc12db38ff0] = print;

		*node[0x5cc12db39020] = 10;

		*node[0x5cc12db39050] = ;;

		*node[0x5cc12db39080] = return;

		*node[0x5cc12db390b0] = 0;

		*node[0x5cc12db390e0] = ;;

		*node[0x5cc12db39110] = 6;

		*node[0x5cc12db39140] = 1;

		*node[0x5cc12db39170] = 2;

		*node[0x5cc12db391a0] = 3;

		*node[0x5cc12db391d0] = ;;

		*node[0x5cc12db39200] = =;

		*node[0x5cc12db39230] = 7;

		*node[0x5cc12db39260] = -;

		*node[0x5cc12db39290] = 0;

		*node[0x5cc12db392c0] = 1;

		*node[0x5cc12db392f0] = ;;

		*node[0x5cc12db39320] = =;

		*node[0x5cc12db39350] = 8;

		*node[0x5cc12db39380] = 1;

		*node[0x5cc12db393b0] = ;;

		*node[0x5cc12db393e0] = =;

		*node[0x5cc12db39410] = 11;

		*node[0x5cc12db39440] = 2;

		*node[0x5cc12db39470] = ;;

		*node[0x5cc12db394a0] = if;

		*node[0x5cc12db394d0] = op_no;

		*node[0x5cc12db39500] = ==;

		*node[0x5cc12db39530] = 3;

		*node[0x5cc12db39560] = 0;

		*node[0x5cc12db39590] = ;;

		*node[0x5cc12db395c0] = =;

		*node[0x5cc12db395f0] = 12;

		*node[0x5cc12db39620] = 0;

		*node[0x5cc12db39650] = ;;

		*node[0x5cc12db39680] = =;

		*node[0x5cc12db396b0] = 13;

		*node[0x5cc12db396e0] = /;

		*node[0x5cc12db39710] = -;

		*node[0x5cc12db39740] = 0;

		*node[0x5cc12db39770] = 2;

		*node[0x5cc12db397a0] = 1;

		*node[0x5cc12db397d0] = ;;

		*node[0x5cc12db39800] = print;

		*node[0x5cc12db39830] = 11;

		*node[0x5cc12db39860] = ;;

		*node[0x5cc12db39890] = print;

		*node[0x5cc12db398c0] = 12;

		*node[0x5cc12db398f0] = 13;

		*node[0x5cc12db39920] = else;

		*node[0x5cc12db39950] = op_no;

		*node[0x5cc12db39980] = ;;

		*node[0x5cc12db399b0] = =;

		*node[0x5cc12db399e0] = 14;

		*node[0x5cc12db39a10] = -;

		*node[0x5cc12db39a40] = *;

		*node[0x5cc12db39a70] = 2;

		*node[0x5cc12db39aa0] = 2;

		*node[0x5cc12db39ad0] = *;

		*node[0x5cc12db39b00] = *;

		*node[0x5cc12db39b30] = 4;

		*node[0x5cc12db39b60] = 1;

		*node[0x5cc12db39b90] = 3;

		*node[0x5cc12db39bc0] = ;;

		*node[0x5cc12db39bf0] = if;

		*node[0x5cc12db39c20] = op_no;

		*node[0x5cc12db39c50] = >;

		*node[0x5cc12db39c80] = 14;

		*node[0x5cc12db39cb0] = 0;

		*node[0x5cc12db39ce0] = ;;

		*node[0x5cc12db39d10] = =;

		*node[0x5cc12db39d40] = 15;

		*node[0x5cc12db39d70] = sqrt;

		*node[0x5cc12db39da0] = 14;

		*node[0x5cc12db39dd0] = ;;

		*node[0x5cc12db39e00] = =;

		*node[0x5cc12db39e30] = 12;

		*node[0x5cc12db39e60] = /;

		*node[0x5cc12db39e90] = -;

		*node[0x5cc12db39ec0] = -;

		*node[0x5cc12db39ef0] = 0;

		*node[0x5cc12db39f20] = 2;

		*node[0x5cc12db39f50] = 15;

		*node[0x5cc12db39f80] = *;

		*node[0x5cc12db39fb0] = 2;

		*node[0x5cc12db39fe0] = 1;

		*node[0x5cc12db3a010] = ;;

		*node[0x5cc12db3a040] = =;

		*node[0x5cc12db3a070] = 13;

		*node[0x5cc12db3a0a0] = /;

		*node[0x5cc12db3a0d0] = +;

		*node[0x5cc12db3a100] = -;

		*node[0x5cc12db3a130] = 0;

		*node[0x5cc12db3a160] = 2;

		*node[0x5cc12db3a190] = 15;

		*node[0x5cc12db3a1c0] = *;

		*node[0x5cc12db3a1f0] = 2;

		*node[0x5cc12db3a220] = 1;

		*node[0x5cc12db3a250] = ;;

		*node[0x5cc12db3a280] = print;

		*node[0x5cc12db3a2b0] = 11;

		*node[0x5cc12db3a2e0] = ;;

		*node[0x5cc12db3a310] = print;

		*node[0x5cc12db3a340] = 12;

		*node[0x5cc12db3a370] = 13;

		*node[0x5cc12db3a3a0] = elseif;

		*node[0x5cc12db3a3d0] = op_no;

		*node[0x5cc12db3a400] = ==;

		*node[0x5cc12db3a430] = 14;

		*node[0x5cc12db3a460] = 0;

		*node[0x5cc12db3a490] = ;;

		*node[0x5cc12db3a4c0] = =;

		*node[0x5cc12db3a4f0] = 10;

		*node[0x5cc12db3a520] = /;

		*node[0x5cc12db3a550] = -;

		*node[0x5cc12db3a580] = 0;

		*node[0x5cc12db3a5b0] = 2;

		*node[0x5cc12db3a5e0] = *;

		*node[0x5cc12db3a610] = 2;

		*node[0x5cc12db3a640] = 1;

		*node[0x5cc12db3a670] = ;;

		*node[0x5cc12db3a6a0] = print;

		*node[0x5cc12db3a6d0] = 8;

		*node[0x5cc12db3a700] = ;;

		*node[0x5cc12db3a730] = print;

		*node[0x5cc12db3a760] = 10;

		*node[0x5cc12db3a790] = else;

		*node[0x5cc12db3a7c0] = op_no;

		*node[0x5cc12db3a7f0] = ;;

		*node[0x5cc12db3a820] = print;

		*node[0x5cc12db3a850] = 7;

		*node[0x5cc12db3a880] = ;;

		*node[0x5cc12db3a8b0] = return;

		*node[0x5cc12db3a8e0] = 0;

		*node[0x5cc12db3a910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcacf47d60] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x58ab1e354fd0] = ;;

		*node[0x58ab1e355000] = 0;

		*node[0x58ab1e355030] = ;;

		*node[0x58ab1e355060] = input;

		*node[0x58ab1e355090] = 1;

		*node[0x58ab1e3550c0] = 2;

		*node[0x58ab1e3550f0] = 3;

		*node[0x58ab1e355120] = ;;

		*node[0x58ab1e355180] = 1;

		*node[0x58ab1e3551b0] = 2;

		*node[0x58ab1e3551e0] = 3;

		*node[0x58ab1e355210] = ;;

		*node[0x58ab1e355240] = 4;

		*node[0x58ab1e355270] = 1;

		*node[0x58ab1e3552a0] = 2;

		*node[0x58ab1e3552d0] = 3;

		*node[0x58ab1e355300] = ;;

		*node[0x58ab1e355330] = if;

		*node[0x58ab1e355360] = op_no;

		*node[0x58ab1e355390] = ==;

		*node[0x58ab1e3553c0] = 1;

		*node[0x58ab1e3553f0] = 0;

		*node[0x58ab1e355420] = ;;

		*node[0x58ab1e355480] = 2;

		*node[0x58ab1e3554b0] = 3;

		*node[0x58ab1e3554e0] = else;

		*node[0x58ab1e355510] = op_no;

		*node[0x58ab1e355540] = ;;

		*node[0x58ab1e3555a0] = 1;

		*node[0x58ab1e3555d0] = 2;

		*node[0x58ab1e355600] = 3;

		*node[0x58ab1e355630] = ;;

		*node[0x58ab1e355660] = 5;

		*node[0x58ab1e355690] = 1;

		*node[0x58ab1e3556c0] = 2;

		*node[0x58ab1e3556f0] = ;;

		*node[0x58ab1e355720] = =;

		*node[0x58ab1e355750] = 7;

		*node[0x58ab1e355780] = -;

		*node[0x58ab1e3557b0] = 0;

		*node[0x58ab1e3557e0] = 1;

		*node[0x58ab1e355810] = ;;

		*node[0x58ab1e355840] = =;

		*node[0x58ab1e355870] = 8;

		*node[0x58ab1e3558a0] = 1;

		*node[0x58ab1e3558d0] = ;;

		*node[0x58ab1e355900] = =;

		*node[0x58ab1e355930] = 9;

		*node[0x58ab1e355960] = 1000;

		*node[0x58ab1e355990] = ;;

		*node[0x58ab1e3559c0] = if;

		*node[0x58ab1e3559f0] = op_no;

		*node[0x58ab1e355a20] = ==;

		*node[0x58ab1e355a50] = 1;

		*node[0x58ab1e355a80] = 0;

		*node[0x58ab1e355ab0] = ;;

		*node[0x58ab1e355ae0] = if;

		*node[0x58ab1e355b10] = op_no;

		*node[0x58ab1e355b40] = ==;

		*node[0x58ab1e355b70] = 2;

		*node[0x58ab1e355ba0] = 0;

		*node[0x58ab1e355bd0] = ;;

		*node[0x58ab1e355c00] = print;

		*node[0x58ab1e355c30] = 9;

		*node[0x58ab1e355c60] = else;

		*node[0x58ab1e355c90] = op_no;

		*node[0x58ab1e355cc0] = ;;

		*node[0x58ab1e355cf0] = print;

		*node[0x58ab1e355d20] = 7;

		*node[0x58ab1e355d50] = else;

		*node[0x58ab1e355d80] = op_no;

		*node[0x58ab1e355db0] = ;;

		*node[0x58ab1e355de0] = =;

		*node[0x58ab1e355e10] = 10;

		*node[0x58ab1e355e40] = /;

		*node[0x58ab1e355e70] = -;

		*node[0x58ab1e355ea0] = 0;

		*node[0x58ab1e355ed0] = 2;

		*node[0x58ab1e355f00] = 1;

		*node[0x58ab1e355f30] = ;;

		*node[0x58ab1e355f60] = print;

		*node[0x58ab1e355f90] = 8;

		*node[0x58ab1e355fc0] = ;;

		*node[0x58ab1e355ff0] = print;

		*node[0x58ab1e356020] = 10;

		*node[0x58ab1e356050] = ;;

		*node[0x58ab1e356080] = return;

		*node[0x58ab1e3560b0] = 0;

		*node[0x58ab1e3560e0] = ;;

		*node[0x58ab1e356110] = 6;

		*node[0x58ab1e356140] = 1;

		*node[0x58ab1e356170] = 2;

		*node[0x58ab1e3561a0] = 3;

		*node[0x58ab1e3561d0] = ;;

		*node[0x58ab1e356200] = =;

		*node[0x58ab1e356230] = 7;

		*node[0x58ab1e356260] = -;

		*node[0x58ab1e356290] = 0;

		*node[0x58ab1e3562c0] = 1;

		*node[0x58ab1e3562f0] = ;;

		*node[0x58ab1e356320] = =;

		*node[0x58ab1e356350] = 8;

		*node[0x58ab1e356380] = 1;

		*node[0x58ab1e3563b0] = ;;

		*node[0x58ab1e3563e0] = =;

		*node[0x58ab1e356410] = 11;

		*node[0x58ab1e356440] = 2;

		*node[0x58ab1e356470] = ;;

		*node[0x58ab1e3564a0] = if;

		*node[0x58ab1e3564d0] = op_no;

		*node[0x58ab1e356500] = ==;

		*node[0x58ab1e356530] = 3;

		*node[0x58ab1e356560] = 0;

		*node[0x58ab1e356590] = ;;

		*node[0x58ab1e3565c0] = =;

		*node[0x58ab1e3565f0] = 12;

		*node[0x58ab1e356620] = 0;

		*node[0x58ab1e356650] = ;;

		*node[0x58ab1e356680] = =;

		*node[0x58ab1e3566b0] = 13;

		*node[0x58ab1e3566e0] = /;

		*node[0x58ab1e356710] = -;

		*node[0x58ab1e356740] = 0;

		*node[0x58ab1e356770] = 2;

		*node[0x58ab1e3567a0] = 1;

		*node[0x58ab1e3567d0] = ;;

		*node[0x58ab1e356800] = print;

		*node[0x58ab1e356830] = 11;

		*node[0x58ab1e356860] = ;;

		*node[0x58ab1e356890] = print;

		*node[0x58ab1e3568c0] = 12;

		*node[0x58ab1e3568f0] = 13;

		*node[0x58ab1e356920] = else;

		*node[0x58ab1e356950] = op_no;

		*node[0x58ab1e356980] = ;;

		*node[0x58ab1e3569b0] = =;

		*node[0x58ab1e3569e0] = 14;

		*node[0x58ab1e356a10] = -;

		*node[0x58ab1e356a40] = *;

		*node[0x58ab1e356a70] = 2;

		*node[0x58ab1e356aa0] = 2;

		*node[0x58ab1e356ad0] = *;

		*node[0x58ab1e356b00] = *;

		*node[0x58ab1e356b30] = 4;

		*node[0x58ab1e356b60] = 1;

		*node[0x58ab1e356b90] = 3;

		*node[0x58ab1e356bc0] = ;;

		*node[0x58ab1e356bf0] = if;

		*node[0x58ab1e356c20] = op_no;

		*node[0x58ab1e356c50] = >;

		*node[0x58ab1e356c80] = 14;

		*node[0x58ab1e356cb0] = 0;

		*node[0x58ab1e356ce0] = ;;

		*node[0x58ab1e356d10] = =;

		*node[0x58ab1e356d40] = 15;

		*node[0x58ab1e356d70] = sqrt;

		*node[0x58ab1e356da0] = 14;

		*node[0x58ab1e356dd0] = ;;

		*node[0x58ab1e356e00] = =;

		*node[0x58ab1e356e30] = 12;

		*node[0x58ab1e356e60] = /;

		*node[0x58ab1e356e90] = -;

		*node[0x58ab1e356ec0] = -;

		*node[0x58ab1e356ef0] = 0;

		*node[0x58ab1e356f20] = 2;

		*node[0x58ab1e356f50] = 15;

		*node[0x58ab1e356f80] = *;

		*node[0x58ab1e356fb0] = 2;

		*node[0x58ab1e356fe0] = 1;

		*node[0x58ab1e357010] = ;;

		*node[0x58ab1e357040] = =;

		*node[0x58ab1e357070] = 13;

		*node[0x58ab1e3570a0] = /;

		*node[0x58ab1e3570d0] = +;

		*node[0x58ab1e357100] = -;

		*node[0x58ab1e357130] = 0;

		*node[0x58ab1e357160] = 2;

		*node[0x58ab1e357190] = 15;

		*node[0x58ab1e3571c0] = *;

		*node[0x58ab1e3571f0] = 2;

		*node[0x58ab1e357220] = 1;

		*node[0x58ab1e357250] = ;;

		*node[0x58ab1e357280] = print;

		*node[0x58ab1e3572b0] = 11;

		*node[0x58ab1e3572e0] = ;;

		*node[0x58ab1e357310] = print;

		*node[0x58ab1e357340] = 12;

		*node[0x58ab1e357370] = 13;

		*node[0x58ab1e3573a0] = elseif;

		*node[0x58ab1e3573d0] = op_no;

		*node[0x58ab1e357400] = ==;

		*node[0x58ab1e357430] = 14;

		*node[0x58ab1e357460] = 0;

		*node[0x58ab1e357490] = ;;

		*node[0x58ab1e3574c0] = =;

		*node[0x58ab1e3574f0] = 10;

		*node[0x58ab1e357520] = /;

		*node[0x58ab1e357550] = -;

		*node[0x58ab1e357580] = 0;

		*node[0x58ab1e3575b0] = 2;

		*node[0x58ab1e3575e0] = *;

		*node[0x58ab1e357610] = 2;

		*node[0x58ab1e357640] = 1;

		*node[0x58ab1e357670] = ;;

		*node[0x58ab1e3576a0] = print;

		*node[0x58ab1e3576d0] = 8;

		*node[0x58ab1e357700] = ;;

		*node[0x58ab1e357730] = print;

		*node[0x58ab1e357760] = 10;

		*node[0x58ab1e357790] = else;

		*node[0x58ab1e3577c0] = op_no;

		*node[0x58ab1e3577f0] = ;;

		*node[0x58ab1e357820] = print;

		*node[0x58ab1e357850] = 7;

		*node[0x58ab1e357880] = ;;

		*node[0x58ab1e3578b0] = return;

		*node[0x58ab1e3578e0] = 0;

		*node[0x58ab1e357910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff0e041610] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x595a5c3fffd0] = ;;

		*node[0x595a5c400000] = 0;

		*node[0x595a5c400030] = ;;

		*node[0x595a5c400060] = input;

		*node[0x595a5c400090] = 1;

		*node[0x595a5c4000c0] = 2;

		*node[0x595a5c4000f0] = 3;

		*node[0x595a5c400120] = ;;

		*node[0x595a5c400180] = 1;

		*node[0x595a5c4001b0] = 2;

		*node[0x595a5c4001e0] = 3;

		*node[0x595a5c400210] = ;;

		*node[0x595a5c400240] = 4;

		*node[0x595a5c400270] = 1;

		*node[0x595a5c4002a0] = 2;

		*node[0x595a5c4002d0] = 3;

		*node[0x595a5c400300] = ;;

		*node[0x595a5c400330] = if;

		*node[0x595a5c400360] = op_no;

		*node[0x595a5c400390] = ==;

		*node[0x595a5c4003c0] = 1;

		*node[0x595a5c4003f0] = 0;

		*node[0x595a5c400420] = ;;

		*node[0x595a5c400480] = 2;

		*node[0x595a5c4004b0] = 3;

		*node[0x595a5c4004e0] = else;

		*node[0x595a5c400510] = op_no;

		*node[0x595a5c400540] = ;;

		*node[0x595a5c4005a0] = 1;

		*node[0x595a5c4005d0] = 2;

		*node[0x595a5c400600] = 3;

		*node[0x595a5c400630] = ;;

		*node[0x595a5c400660] = 5;

		*node[0x595a5c400690] = 1;

		*node[0x595a5c4006c0] = 2;

		*node[0x595a5c4006f0] = ;;

		*node[0x595a5c400720] = =;

		*node[0x595a5c400750] = 7;

		*node[0x595a5c400780] = -;

		*node[0x595a5c4007b0] = 0;

		*node[0x595a5c4007e0] = 1;

		*node[0x595a5c400810] = ;;

		*node[0x595a5c400840] = =;

		*node[0x595a5c400870] = 8;

		*node[0x595a5c4008a0] = 1;

		*node[0x595a5c4008d0] = ;;

		*node[0x595a5c400900] = =;

		*node[0x595a5c400930] = 9;

		*node[0x595a5c400960] = 1000;

		*node[0x595a5c400990] = ;;

		*node[0x595a5c4009c0] = if;

		*node[0x595a5c4009f0] = op_no;

		*node[0x595a5c400a20] = ==;

		*node[0x595a5c400a50] = 1;

		*node[0x595a5c400a80] = 0;

		*node[0x595a5c400ab0] = ;;

		*node[0x595a5c400ae0] = if;

		*node[0x595a5c400b10] = op_no;

		*node[0x595a5c400b40] = ==;

		*node[0x595a5c400b70] = 2;

		*node[0x595a5c400ba0] = 0;

		*node[0x595a5c400bd0] = ;;

		*node[0x595a5c400c00] = print;

		*node[0x595a5c400c30] = 9;

		*node[0x595a5c400c60] = else;

		*node[0x595a5c400c90] = op_no;

		*node[0x595a5c400cc0] = ;;

		*node[0x595a5c400cf0] = print;

		*node[0x595a5c400d20] = 7;

		*node[0x595a5c400d50] = else;

		*node[0x595a5c400d80] = op_no;

		*node[0x595a5c400db0] = ;;

		*node[0x595a5c400de0] = =;

		*node[0x595a5c400e10] = 10;

		*node[0x595a5c400e40] = /;

		*node[0x595a5c400e70] = -;

		*node[0x595a5c400ea0] = 0;

		*node[0x595a5c400ed0] = 2;

		*node[0x595a5c400f00] = 1;

		*node[0x595a5c400f30] = ;;

		*node[0x595a5c400f60] = print;

		*node[0x595a5c400f90] = 8;

		*node[0x595a5c400fc0] = ;;

		*node[0x595a5c400ff0] = print;

		*node[0x595a5c401020] = 10;

		*node[0x595a5c401050] = ;;

		*node[0x595a5c401080] = return;

		*node[0x595a5c4010b0] = 0;

		*node[0x595a5c4010e0] = ;;

		*node[0x595a5c401110] = 6;

		*node[0x595a5c401140] = 1;

		*node[0x595a5c401170] = 2;

		*node[0x595a5c4011a0] = 3;

		*node[0x595a5c4011d0] = ;;

		*node[0x595a5c401200] = =;

		*node[0x595a5c401230] = 7;

		*node[0x595a5c401260] = -;

		*node[0x595a5c401290] = 0;

		*node[0x595a5c4012c0] = 1;

		*node[0x595a5c4012f0] = ;;

		*node[0x595a5c401320] = =;

		*node[0x595a5c401350] = 8;

		*node[0x595a5c401380] = 1;

		*node[0x595a5c4013b0] = ;;

		*node[0x595a5c4013e0] = =;

		*node[0x595a5c401410] = 11;

		*node[0x595a5c401440] = 2;

		*node[0x595a5c401470] = ;;

		*node[0x595a5c4014a0] = if;

		*node[0x595a5c4014d0] = op_no;

		*node[0x595a5c401500] = ==;

		*node[0x595a5c401530] = 3;

		*node[0x595a5c401560] = 0;

		*node[0x595a5c401590] = ;;

		*node[0x595a5c4015c0] = =;

		*node[0x595a5c4015f0] = 12;

		*node[0x595a5c401620] = 0;

		*node[0x595a5c401650] = ;;

		*node[0x595a5c401680] = =;

		*node[0x595a5c4016b0] = 13;

		*node[0x595a5c4016e0] = /;

		*node[0x595a5c401710] = -;

		*node[0x595a5c401740] = 0;

		*node[0x595a5c401770] = 2;

		*node[0x595a5c4017a0] = 1;

		*node[0x595a5c4017d0] = ;;

		*node[0x595a5c401800] = print;

		*node[0x595a5c401830] = 11;

		*node[0x595a5c401860] = ;;

		*node[0x595a5c401890] = print;

		*node[0x595a5c4018c0] = 12;

		*node[0x595a5c4018f0] = 13;

		*node[0x595a5c401920] = else;

		*node[0x595a5c401950] = op_no;

		*node[0x595a5c401980] = ;;

		*node[0x595a5c4019b0] = =;

		*node[0x595a5c4019e0] = 14;

		*node[0x595a5c401a10] = -;

		*node[0x595a5c401a40] = *;

		*node[0x595a5c401a70] = 2;

		*node[0x595a5c401aa0] = 2;

		*node[0x595a5c401ad0] = *;

		*node[0x595a5c401b00] = *;

		*node[0x595a5c401b30] = 4;

		*node[0x595a5c401b60] = 1;

		*node[0x595a5c401b90] = 3;

		*node[0x595a5c401bc0] = ;;

		*node[0x595a5c401bf0] = if;

		*node[0x595a5c401c20] = op_no;

		*node[0x595a5c401c50] = >;

		*node[0x595a5c401c80] = 14;

		*node[0x595a5c401cb0] = 0;

		*node[0x595a5c401ce0] = ;;

		*node[0x595a5c401d10] = =;

		*node[0x595a5c401d40] = 15;

		*node[0x595a5c401d70] = sqrt;

		*node[0x595a5c401da0] = 14;

		*node[0x595a5c401dd0] = ;;

		*node[0x595a5c401e00] = =;

		*node[0x595a5c401e30] = 12;

		*node[0x595a5c401e60] = /;

		*node[0x595a5c401e90] = -;

		*node[0x595a5c401ec0] = -;

		*node[0x595a5c401ef0] = 0;

		*node[0x595a5c401f20] = 2;

		*node[0x595a5c401f50] = 15;

		*node[0x595a5c401f80] = *;

		*node[0x595a5c401fb0] = 2;

		*node[0x595a5c401fe0] = 1;

		*node[0x595a5c402010] = ;;

		*node[0x595a5c402040] = =;

		*node[0x595a5c402070] = 13;

		*node[0x595a5c4020a0] = /;

		*node[0x595a5c4020d0] = +;

		*node[0x595a5c402100] = -;

		*node[0x595a5c402130] = 0;

		*node[0x595a5c402160] = 2;

		*node[0x595a5c402190] = 15;

		*node[0x595a5c4021c0] = *;

		*node[0x595a5c4021f0] = 2;

		*node[0x595a5c402220] = 1;

		*node[0x595a5c402250] = ;;

		*node[0x595a5c402280] = print;

		*node[0x595a5c4022b0] = 11;

		*node[0x595a5c4022e0] = ;;

		*node[0x595a5c402310] = print;

		*node[0x595a5c402340] = 12;

		*node[0x595a5c402370] = 13;

		*node[0x595a5c4023a0] = elseif;

		*node[0x595a5c4023d0] = op_no;

		*node[0x595a5c402400] = ==;

		*node[0x595a5c402430] = 14;

		*node[0x595a5c402460] = 0;

		*node[0x595a5c402490] = ;;

		*node[0x595a5c4024c0] = =;

		*node[0x595a5c4024f0] = 10;

		*node[0x595a5c402520] = /;

		*node[0x595a5c402550] = -;

		*node[0x595a5c402580] = 0;

		*node[0x595a5c4025b0] = 2;

		*node[0x595a5c4025e0] = *;

		*node[0x595a5c402610] = 2;

		*node[0x595a5c402640] = 1;

		*node[0x595a5c402670] = ;;

		*node[0x595a5c4026a0] = print;

		*node[0x595a5c4026d0] = 8;

		*node[0x595a5c402700] = ;;

		*node[0x595a5c402730] = print;

		*node[0x595a5c402760] = 10;

		*node[0x595a5c402790] = else;

		*node[0x595a5c4027c0] = op_no;

		*node[0x595a5c4027f0] = ;;

		*node[0x595a5c402820] = print;

		*node[0x595a5c402850] = 7;

		*node[0x595a5c402880] = ;;

		*node[0x595a5c4028b0] = return;

		*node[0x595a5c4028e0] = 0;

		*node[0x595a5c402910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe48098e90] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e223ac4efd0] = ;;

		*node[0x5e223ac4f000] = 0;

		*node[0x5e223ac4f030] = ;;

		*node[0x5e223ac4f060] = input;

		*node[0x5e223ac4f090] = 1;

		*node[0x5e223ac4f0c0] = 2;

		*node[0x5e223ac4f0f0] = 3;

		*node[0x5e223ac4f120] = ;;

		*node[0x5e223ac4f180] = 1;

		*node[0x5e223ac4f1b0] = 2;

		*node[0x5e223ac4f1e0] = 3;

		*node[0x5e223ac4f210] = ;;

		*node[0x5e223ac4f240] = 4;

		*node[0x5e223ac4f270] = 1;

		*node[0x5e223ac4f2a0] = 2;

		*node[0x5e223ac4f2d0] = 3;

		*node[0x5e223ac4f300] = ;;

		*node[0x5e223ac4f330] = if;

		*node[0x5e223ac4f360] = op_no;

		*node[0x5e223ac4f390] = ==;

		*node[0x5e223ac4f3c0] = 1;

		*node[0x5e223ac4f3f0] = 0;

		*node[0x5e223ac4f420] = ;;

		*node[0x5e223ac4f480] = 2;

		*node[0x5e223ac4f4b0] = 3;

		*node[0x5e223ac4f4e0] = else;

		*node[0x5e223ac4f510] = op_no;

		*node[0x5e223ac4f540] = ;;

		*node[0x5e223ac4f5a0] = 1;

		*node[0x5e223ac4f5d0] = 2;

		*node[0x5e223ac4f600] = 3;

		*node[0x5e223ac4f630] = ;;

		*node[0x5e223ac4f660] = 5;

		*node[0x5e223ac4f690] = 1;

		*node[0x5e223ac4f6c0] = 2;

		*node[0x5e223ac4f6f0] = ;;

		*node[0x5e223ac4f720] = =;

		*node[0x5e223ac4f750] = 7;

		*node[0x5e223ac4f780] = -;

		*node[0x5e223ac4f7b0] = 0;

		*node[0x5e223ac4f7e0] = 1;

		*node[0x5e223ac4f810] = ;;

		*node[0x5e223ac4f840] = =;

		*node[0x5e223ac4f870] = 8;

		*node[0x5e223ac4f8a0] = 1;

		*node[0x5e223ac4f8d0] = ;;

		*node[0x5e223ac4f900] = =;

		*node[0x5e223ac4f930] = 9;

		*node[0x5e223ac4f960] = 1000;

		*node[0x5e223ac4f990] = ;;

		*node[0x5e223ac4f9c0] = if;

		*node[0x5e223ac4f9f0] = op_no;

		*node[0x5e223ac4fa20] = ==;

		*node[0x5e223ac4fa50] = 1;

		*node[0x5e223ac4fa80] = 0;

		*node[0x5e223ac4fab0] = ;;

		*node[0x5e223ac4fae0] = if;

		*node[0x5e223ac4fb10] = op_no;

		*node[0x5e223ac4fb40] = ==;

		*node[0x5e223ac4fb70] = 2;

		*node[0x5e223ac4fba0] = 0;

		*node[0x5e223ac4fbd0] = ;;

		*node[0x5e223ac4fc00] = print;

		*node[0x5e223ac4fc30] = 9;

		*node[0x5e223ac4fc60] = else;

		*node[0x5e223ac4fc90] = op_no;

		*node[0x5e223ac4fcc0] = ;;

		*node[0x5e223ac4fcf0] = print;

		*node[0x5e223ac4fd20] = 7;

		*node[0x5e223ac4fd50] = else;

		*node[0x5e223ac4fd80] = op_no;

		*node[0x5e223ac4fdb0] = ;;

		*node[0x5e223ac4fde0] = =;

		*node[0x5e223ac4fe10] = 10;

		*node[0x5e223ac4fe40] = /;

		*node[0x5e223ac4fe70] = -;

		*node[0x5e223ac4fea0] = 0;

		*node[0x5e223ac4fed0] = 2;

		*node[0x5e223ac4ff00] = 1;

		*node[0x5e223ac4ff30] = ;;

		*node[0x5e223ac4ff60] = print;

		*node[0x5e223ac4ff90] = 8;

		*node[0x5e223ac4ffc0] = ;;

		*node[0x5e223ac4fff0] = print;

		*node[0x5e223ac50020] = 10;

		*node[0x5e223ac50050] = ;;

		*node[0x5e223ac50080] = return;

		*node[0x5e223ac500b0] = 0;

		*node[0x5e223ac500e0] = ;;

		*node[0x5e223ac50110] = 6;

		*node[0x5e223ac50140] = 1;

		*node[0x5e223ac50170] = 2;

		*node[0x5e223ac501a0] = 3;

		*node[0x5e223ac501d0] = ;;

		*node[0x5e223ac50200] = =;

		*node[0x5e223ac50230] = 7;

		*node[0x5e223ac50260] = -;

		*node[0x5e223ac50290] = 0;

		*node[0x5e223ac502c0] = 1;

		*node[0x5e223ac502f0] = ;;

		*node[0x5e223ac50320] = =;

		*node[0x5e223ac50350] = 8;

		*node[0x5e223ac50380] = 1;

		*node[0x5e223ac503b0] = ;;

		*node[0x5e223ac503e0] = =;

		*node[0x5e223ac50410] = 11;

		*node[0x5e223ac50440] = 2;

		*node[0x5e223ac50470] = ;;

		*node[0x5e223ac504a0] = if;

		*node[0x5e223ac504d0] = op_no;

		*node[0x5e223ac50500] = ==;

		*node[0x5e223ac50530] = 3;

		*node[0x5e223ac50560] = 0;

		*node[0x5e223ac50590] = ;;

		*node[0x5e223ac505c0] = =;

		*node[0x5e223ac505f0] = 12;

		*node[0x5e223ac50620] = 0;

		*node[0x5e223ac50650] = ;;

		*node[0x5e223ac50680] = =;

		*node[0x5e223ac506b0] = 13;

		*node[0x5e223ac506e0] = /;

		*node[0x5e223ac50710] = -;

		*node[0x5e223ac50740] = 0;

		*node[0x5e223ac50770] = 2;

		*node[0x5e223ac507a0] = 1;

		*node[0x5e223ac507d0] = ;;

		*node[0x5e223ac50800] = print;

		*node[0x5e223ac50830] = 11;

		*node[0x5e223ac50860] = ;;

		*node[0x5e223ac50890] = print;

		*node[0x5e223ac508c0] = 12;

		*node[0x5e223ac508f0] = 13;

		*node[0x5e223ac50920] = else;

		*node[0x5e223ac50950] = op_no;

		*node[0x5e223ac50980] = ;;

		*node[0x5e223ac509b0] = =;

		*node[0x5e223ac509e0] = 14;

		*node[0x5e223ac50a10] = -;

		*node[0x5e223ac50a40] = *;

		*node[0x5e223ac50a70] = 2;

		*node[0x5e223ac50aa0] = 2;

		*node[0x5e223ac50ad0] = *;

		*node[0x5e223ac50b00] = *;

		*node[0x5e223ac50b30] = 4;

		*node[0x5e223ac50b60] = 1;

		*node[0x5e223ac50b90] = 3;

		*node[0x5e223ac50bc0] = ;;

		*node[0x5e223ac50bf0] = if;

		*node[0x5e223ac50c20] = op_no;

		*node[0x5e223ac50c50] = >;

		*node[0x5e223ac50c80] = 14;

		*node[0x5e223ac50cb0] = 0;

		*node[0x5e223ac50ce0] = ;;

		*node[0x5e223ac50d10] = =;

		*node[0x5e223ac50d40] = 15;

		*node[0x5e223ac50d70] = sqrt;

		*node[0x5e223ac50da0] = 14;

		*node[0x5e223ac50dd0] = ;;

		*node[0x5e223ac50e00] = =;

		*node[0x5e223ac50e30] = 12;

		*node[0x5e223ac50e60] = /;

		*node[0x5e223ac50e90] = -;

		*node[0x5e223ac50ec0] = -;

		*node[0x5e223ac50ef0] = 0;

		*node[0x5e223ac50f20] = 2;

		*node[0x5e223ac50f50] = 15;

		*node[0x5e223ac50f80] = *;

		*node[0x5e223ac50fb0] = 2;

		*node[0x5e223ac50fe0] = 1;

		*node[0x5e223ac51010] = ;;

		*node[0x5e223ac51040] = =;

		*node[0x5e223ac51070] = 13;

		*node[0x5e223ac510a0] = /;

		*node[0x5e223ac510d0] = +;

		*node[0x5e223ac51100] = -;

		*node[0x5e223ac51130] = 0;

		*node[0x5e223ac51160] = 2;

		*node[0x5e223ac51190] = 15;

		*node[0x5e223ac511c0] = *;

		*node[0x5e223ac511f0] = 2;

		*node[0x5e223ac51220] = 1;

		*node[0x5e223ac51250] = ;;

		*node[0x5e223ac51280] = print;

		*node[0x5e223ac512b0] = 11;

		*node[0x5e223ac512e0] = ;;

		*node[0x5e223ac51310] = print;

		*node[0x5e223ac51340] = 12;

		*node[0x5e223ac51370] = 13;

		*node[0x5e223ac513a0] = elseif;

		*node[0x5e223ac513d0] = op_no;

		*node[0x5e223ac51400] = ==;

		*node[0x5e223ac51430] = 14;

		*node[0x5e223ac51460] = 0;

		*node[0x5e223ac51490] = ;;

		*node[0x5e223ac514c0] = =;

		*node[0x5e223ac514f0] = 10;

		*node[0x5e223ac51520] = /;

		*node[0x5e223ac51550] = -;

		*node[0x5e223ac51580] = 0;

		*node[0x5e223ac515b0] = 2;

		*node[0x5e223ac515e0] = *;

		*node[0x5e223ac51610] = 2;

		*node[0x5e223ac51640] = 1;

		*node[0x5e223ac51670] = ;;

		*node[0x5e223ac516a0] = print;

		*node[0x5e223ac516d0] = 8;

		*node[0x5e223ac51700] = ;;

		*node[0x5e223ac51730] = print;

		*node[0x5e223ac51760] = 10;

		*node[0x5e223ac51790] = else;

		*node[0x5e223ac517c0] = op_no;

		*node[0x5e223ac517f0] = ;;

		*node[0x5e223ac51820] = print;

		*node[0x5e223ac51850] = 7;

		*node[0x5e223ac51880] = ;;

		*node[0x5e223ac518b0] = return;

		*node[0x5e223ac518e0] = 0;

		*node[0x5e223ac51910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffeb3717850] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5dc437868fd0] = ;;

		*node[0x5dc437869000] = 0;

		*node[0x5dc437869030] = ;;

		*node[0x5dc437869060] = input;

		*node[0x5dc437869090] = 1;

		*node[0x5dc4378690c0] = 2;

		*node[0x5dc4378690f0] = 3;

		*node[0x5dc437869120] = ;;

		*node[0x5dc437869180] = 1;

		*node[0x5dc4378691b0] = 2;

		*node[0x5dc4378691e0] = 3;

		*node[0x5dc437869210] = ;;

		*node[0x5dc437869240] = 4;

		*node[0x5dc437869270] = 1;

		*node[0x5dc4378692a0] = 2;

		*node[0x5dc4378692d0] = 3;

		*node[0x5dc437869300] = ;;

		*node[0x5dc437869330] = if;

		*node[0x5dc437869360] = op_no;

		*node[0x5dc437869390] = ==;

		*node[0x5dc4378693c0] = 1;

		*node[0x5dc4378693f0] = 0;

		*node[0x5dc437869420] = ;;

		*node[0x5dc437869480] = 2;

		*node[0x5dc4378694b0] = 3;

		*node[0x5dc4378694e0] = else;

		*node[0x5dc437869510] = op_no;

		*node[0x5dc437869540] = ;;

		*node[0x5dc4378695a0] = 1;

		*node[0x5dc4378695d0] = 2;

		*node[0x5dc437869600] = 3;

		*node[0x5dc437869630] = ;;

		*node[0x5dc437869660] = 5;

		*node[0x5dc437869690] = 1;

		*node[0x5dc4378696c0] = 2;

		*node[0x5dc4378696f0] = ;;

		*node[0x5dc437869720] = =;

		*node[0x5dc437869750] = 7;

		*node[0x5dc437869780] = -;

		*node[0x5dc4378697b0] = 0;

		*node[0x5dc4378697e0] = 1;

		*node[0x5dc437869810] = ;;

		*node[0x5dc437869840] = =;

		*node[0x5dc437869870] = 8;

		*node[0x5dc4378698a0] = 1;

		*node[0x5dc4378698d0] = ;;

		*node[0x5dc437869900] = =;

		*node[0x5dc437869930] = 9;

		*node[0x5dc437869960] = 1000;

		*node[0x5dc437869990] = ;;

		*node[0x5dc4378699c0] = if;

		*node[0x5dc4378699f0] = op_no;

		*node[0x5dc437869a20] = ==;

		*node[0x5dc437869a50] = 1;

		*node[0x5dc437869a80] = 0;

		*node[0x5dc437869ab0] = ;;

		*node[0x5dc437869ae0] = if;

		*node[0x5dc437869b10] = op_no;

		*node[0x5dc437869b40] = ==;

		*node[0x5dc437869b70] = 2;

		*node[0x5dc437869ba0] = 0;

		*node[0x5dc437869bd0] = ;;

		*node[0x5dc437869c00] = print;

		*node[0x5dc437869c30] = 9;

		*node[0x5dc437869c60] = else;

		*node[0x5dc437869c90] = op_no;

		*node[0x5dc437869cc0] = ;;

		*node[0x5dc437869cf0] = print;

		*node[0x5dc437869d20] = 7;

		*node[0x5dc437869d50] = else;

		*node[0x5dc437869d80] = op_no;

		*node[0x5dc437869db0] = ;;

		*node[0x5dc437869de0] = =;

		*node[0x5dc437869e10] = 10;

		*node[0x5dc437869e40] = /;

		*node[0x5dc437869e70] = -;

		*node[0x5dc437869ea0] = 0;

		*node[0x5dc437869ed0] = 2;

		*node[0x5dc437869f00] = 1;

		*node[0x5dc437869f30] = ;;

		*node[0x5dc437869f60] = print;

		*node[0x5dc437869f90] = 8;

		*node[0x5dc437869fc0] = ;;

		*node[0x5dc437869ff0] = print;

		*node[0x5dc43786a020] = 10;

		*node[0x5dc43786a050] = ;;

		*node[0x5dc43786a080] = return;

		*node[0x5dc43786a0b0] = 0;

		*node[0x5dc43786a0e0] = ;;

		*node[0x5dc43786a110] = 6;

		*node[0x5dc43786a140] = 1;

		*node[0x5dc43786a170] = 2;

		*node[0x5dc43786a1a0] = 3;

		*node[0x5dc43786a1d0] = ;;

		*node[0x5dc43786a200] = =;

		*node[0x5dc43786a230] = 7;

		*node[0x5dc43786a260] = -;

		*node[0x5dc43786a290] = 0;

		*node[0x5dc43786a2c0] = 1;

		*node[0x5dc43786a2f0] = ;;

		*node[0x5dc43786a320] = =;

		*node[0x5dc43786a350] = 8;

		*node[0x5dc43786a380] = 1;

		*node[0x5dc43786a3b0] = ;;

		*node[0x5dc43786a3e0] = =;

		*node[0x5dc43786a410] = 11;

		*node[0x5dc43786a440] = 2;

		*node[0x5dc43786a470] = ;;

		*node[0x5dc43786a4a0] = if;

		*node[0x5dc43786a4d0] = op_no;

		*node[0x5dc43786a500] = ==;

		*node[0x5dc43786a530] = 3;

		*node[0x5dc43786a560] = 0;

		*node[0x5dc43786a590] = ;;

		*node[0x5dc43786a5c0] = =;

		*node[0x5dc43786a5f0] = 12;

		*node[0x5dc43786a620] = 0;

		*node[0x5dc43786a650] = ;;

		*node[0x5dc43786a680] = =;

		*node[0x5dc43786a6b0] = 13;

		*node[0x5dc43786a6e0] = /;

		*node[0x5dc43786a710] = -;

		*node[0x5dc43786a740] = 0;

		*node[0x5dc43786a770] = 2;

		*node[0x5dc43786a7a0] = 1;

		*node[0x5dc43786a7d0] = ;;

		*node[0x5dc43786a800] = print;

		*node[0x5dc43786a830] = 11;

		*node[0x5dc43786a860] = ;;

		*node[0x5dc43786a890] = print;

		*node[0x5dc43786a8c0] = 12;

		*node[0x5dc43786a8f0] = 13;

		*node[0x5dc43786a920] = else;

		*node[0x5dc43786a950] = op_no;

		*node[0x5dc43786a980] = ;;

		*node[0x5dc43786a9b0] = =;

		*node[0x5dc43786a9e0] = 14;

		*node[0x5dc43786aa10] = -;

		*node[0x5dc43786aa40] = *;

		*node[0x5dc43786aa70] = 2;

		*node[0x5dc43786aaa0] = 2;

		*node[0x5dc43786aad0] = *;

		*node[0x5dc43786ab00] = *;

		*node[0x5dc43786ab30] = 4;

		*node[0x5dc43786ab60] = 1;

		*node[0x5dc43786ab90] = 3;

		*node[0x5dc43786abc0] = ;;

		*node[0x5dc43786abf0] = if;

		*node[0x5dc43786ac20] = op_no;

		*node[0x5dc43786ac50] = >;

		*node[0x5dc43786ac80] = 14;

		*node[0x5dc43786acb0] = 0;

		*node[0x5dc43786ace0] = ;;

		*node[0x5dc43786ad10] = =;

		*node[0x5dc43786ad40] = 15;

		*node[0x5dc43786ad70] = sqrt;

		*node[0x5dc43786ada0] = 14;

		*node[0x5dc43786add0] = ;;

		*node[0x5dc43786ae00] = =;

		*node[0x5dc43786ae30] = 12;

		*node[0x5dc43786ae60] = /;

		*node[0x5dc43786ae90] = -;

		*node[0x5dc43786aec0] = -;

		*node[0x5dc43786aef0] = 0;

		*node[0x5dc43786af20] = 2;

		*node[0x5dc43786af50] = 15;

		*node[0x5dc43786af80] = *;

		*node[0x5dc43786afb0] = 2;

		*node[0x5dc43786afe0] = 1;

		*node[0x5dc43786b010] = ;;

		*node[0x5dc43786b040] = =;

		*node[0x5dc43786b070] = 13;

		*node[0x5dc43786b0a0] = /;

		*node[0x5dc43786b0d0] = +;

		*node[0x5dc43786b100] = -;

		*node[0x5dc43786b130] = 0;

		*node[0x5dc43786b160] = 2;

		*node[0x5dc43786b190] = 15;

		*node[0x5dc43786b1c0] = *;

		*node[0x5dc43786b1f0] = 2;

		*node[0x5dc43786b220] = 1;

		*node[0x5dc43786b250] = ;;

		*node[0x5dc43786b280] = print;

		*node[0x5dc43786b2b0] = 11;

		*node[0x5dc43786b2e0] = ;;

		*node[0x5dc43786b310] = print;

		*node[0x5dc43786b340] = 12;

		*node[0x5dc43786b370] = 13;

		*node[0x5dc43786b3a0] = elseif;

		*node[0x5dc43786b3d0] = op_no;

		*node[0x5dc43786b400] = ==;

		*node[0x5dc43786b430] = 14;

		*node[0x5dc43786b460] = 0;

		*node[0x5dc43786b490] = ;;

		*node[0x5dc43786b4c0] = =;

		*node[0x5dc43786b4f0] = 10;

		*node[0x5dc43786b520] = /;

		*node[0x5dc43786b550] = -;

		*node[0x5dc43786b580] = 0;

		*node[0x5dc43786b5b0] = 2;

		*node[0x5dc43786b5e0] = *;

		*node[0x5dc43786b610] = 2;

		*node[0x5dc43786b640] = 1;

		*node[0x5dc43786b670] = ;;

		*node[0x5dc43786b6a0] = print;

		*node[0x5dc43786b6d0] = 8;

		*node[0x5dc43786b700] = ;;

		*node[0x5dc43786b730] = print;

		*node[0x5dc43786b760] = 10;

		*node[0x5dc43786b790] = else;

		*node[0x5dc43786b7c0] = op_no;

		*node[0x5dc43786b7f0] = ;;

		*node[0x5dc43786b820] = print;

		*node[0x5dc43786b850] = 7;

		*node[0x5dc43786b880] = ;;

		*node[0x5dc43786b8b0] = return;

		*node[0x5dc43786b8e0] = 0;

		*node[0x5dc43786b910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff32ccc060] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x57028279cfd0] = ;;

		*node[0x57028279d000] = 0;

		*node[0x57028279d030] = ;;

		*node[0x57028279d060] = input;

		*node[0x57028279d090] = 1;

		*node[0x57028279d0c0] = 2;

		*node[0x57028279d0f0] = 3;

		*node[0x57028279d120] = ;;

		*node[0x57028279d180] = 1;

		*node[0x57028279d1b0] = 2;

		*node[0x57028279d1e0] = 3;

		*node[0x57028279d210] = ;;

		*node[0x57028279d240] = 4;

		*node[0x57028279d270] = 1;

		*node[0x57028279d2a0] = 2;

		*node[0x57028279d2d0] = 3;

		*node[0x57028279d300] = ;;

		*node[0x57028279d330] = if;

		*node[0x57028279d360] = op_no;

		*node[0x57028279d390] = ==;

		*node[0x57028279d3c0] = 1;

		*node[0x57028279d3f0] = 0;

		*node[0x57028279d420] = ;;

		*node[0x57028279d480] = 2;

		*node[0x57028279d4b0] = 3;

		*node[0x57028279d4e0] = else;

		*node[0x57028279d510] = op_no;

		*node[0x57028279d540] = ;;

		*node[0x57028279d5a0] = 1;

		*node[0x57028279d5d0] = 2;

		*node[0x57028279d600] = 3;

		*node[0x57028279d630] = ;;

		*node[0x57028279d660] = 5;

		*node[0x57028279d690] = 1;

		*node[0x57028279d6c0] = 2;

		*node[0x57028279d6f0] = ;;

		*node[0x57028279d720] = =;

		*node[0x57028279d750] = 7;

		*node[0x57028279d780] = -;

		*node[0x57028279d7b0] = 0;

		*node[0x57028279d7e0] = 1;

		*node[0x57028279d810] = ;;

		*node[0x57028279d840] = =;

		*node[0x57028279d870] = 8;

		*node[0x57028279d8a0] = 1;

		*node[0x57028279d8d0] = ;;

		*node[0x57028279d900] = =;

		*node[0x57028279d930] = 9;

		*node[0x57028279d960] = 1000;

		*node[0x57028279d990] = ;;

		*node[0x57028279d9c0] = if;

		*node[0x57028279d9f0] = op_no;

		*node[0x57028279da20] = ==;

		*node[0x57028279da50] = 1;

		*node[0x57028279da80] = 0;

		*node[0x57028279dab0] = ;;

		*node[0x57028279dae0] = if;

		*node[0x57028279db10] = op_no;

		*node[0x57028279db40] = ==;

		*node[0x57028279db70] = 2;

		*node[0x57028279dba0] = 0;

		*node[0x57028279dbd0] = ;;

		*node[0x57028279dc00] = print;

		*node[0x57028279dc30] = 9;

		*node[0x57028279dc60] = else;

		*node[0x57028279dc90] = op_no;

		*node[0x57028279dcc0] = ;;

		*node[0x57028279dcf0] = print;

		*node[0x57028279dd20] = 7;

		*node[0x57028279dd50] = else;

		*node[0x57028279dd80] = op_no;

		*node[0x57028279ddb0] = ;;

		*node[0x57028279dde0] = =;

		*node[0x57028279de10] = 10;

		*node[0x57028279de40] = /;

		*node[0x57028279de70] = -;

		*node[0x57028279dea0] = 0;

		*node[0x57028279ded0] = 2;

		*node[0x57028279df00] = 1;

		*node[0x57028279df30] = ;;

		*node[0x57028279df60] = print;

		*node[0x57028279df90] = 8;

		*node[0x57028279dfc0] = ;;

		*node[0x57028279dff0] = print;

		*node[0x57028279e020] = 10;

		*node[0x57028279e050] = ;;

		*node[0x57028279e080] = return;

		*node[0x57028279e0b0] = 0;

		*node[0x57028279e0e0] = ;;

		*node[0x57028279e110] = 6;

		*node[0x57028279e140] = 1;

		*node[0x57028279e170] = 2;

		*node[0x57028279e1a0] = 3;

		*node[0x57028279e1d0] = ;;

		*node[0x57028279e200] = =;

		*node[0x57028279e230] = 7;

		*node[0x57028279e260] = -;

		*node[0x57028279e290] = 0;

		*node[0x57028279e2c0] = 1;

		*node[0x57028279e2f0] = ;;

		*node[0x57028279e320] = =;

		*node[0x57028279e350] = 8;

		*node[0x57028279e380] = 1;

		*node[0x57028279e3b0] = ;;

		*node[0x57028279e3e0] = =;

		*node[0x57028279e410] = 11;

		*node[0x57028279e440] = 2;

		*node[0x57028279e470] = ;;

		*node[0x57028279e4a0] = if;

		*node[0x57028279e4d0] = op_no;

		*node[0x57028279e500] = ==;

		*node[0x57028279e530] = 3;

		*node[0x57028279e560] = 0;

		*node[0x57028279e590] = ;;

		*node[0x57028279e5c0] = =;

		*node[0x57028279e5f0] = 12;

		*node[0x57028279e620] = 0;

		*node[0x57028279e650] = ;;

		*node[0x57028279e680] = =;

		*node[0x57028279e6b0] = 13;

		*node[0x57028279e6e0] = /;

		*node[0x57028279e710] = -;

		*node[0x57028279e740] = 0;

		*node[0x57028279e770] = 2;

		*node[0x57028279e7a0] = 1;

		*node[0x57028279e7d0] = ;;

		*node[0x57028279e800] = print;

		*node[0x57028279e830] = 11;

		*node[0x57028279e860] = ;;

		*node[0x57028279e890] = print;

		*node[0x57028279e8c0] = 12;

		*node[0x57028279e8f0] = 13;

		*node[0x57028279e920] = else;

		*node[0x57028279e950] = op_no;

		*node[0x57028279e980] = ;;

		*node[0x57028279e9b0] = =;

		*node[0x57028279e9e0] = 14;

		*node[0x57028279ea10] = -;

		*node[0x57028279ea40] = *;

		*node[0x57028279ea70] = 2;

		*node[0x57028279eaa0] = 2;

		*node[0x57028279ead0] = *;

		*node[0x57028279eb00] = *;

		*node[0x57028279eb30] = 4;

		*node[0x57028279eb60] = 1;

		*node[0x57028279eb90] = 3;

		*node[0x57028279ebc0] = ;;

		*node[0x57028279ebf0] = if;

		*node[0x57028279ec20] = op_no;

		*node[0x57028279ec50] = >;

		*node[0x57028279ec80] = 14;

		*node[0x57028279ecb0] = 0;

		*node[0x57028279ece0] = ;;

		*node[0x57028279ed10] = =;

		*node[0x57028279ed40] = 15;

		*node[0x57028279ed70] = sqrt;

		*node[0x57028279eda0] = 14;

		*node[0x57028279edd0] = ;;

		*node[0x57028279ee00] = =;

		*node[0x57028279ee30] = 12;

		*node[0x57028279ee60] = /;

		*node[0x57028279ee90] = -;

		*node[0x57028279eec0] = -;

		*node[0x57028279eef0] = 0;

		*node[0x57028279ef20] = 2;

		*node[0x57028279ef50] = 15;

		*node[0x57028279ef80] = *;

		*node[0x57028279efb0] = 2;

		*node[0x57028279efe0] = 1;

		*node[0x57028279f010] = ;;

		*node[0x57028279f040] = =;

		*node[0x57028279f070] = 13;

		*node[0x57028279f0a0] = /;

		*node[0x57028279f0d0] = +;

		*node[0x57028279f100] = -;

		*node[0x57028279f130] = 0;

		*node[0x57028279f160] = 2;

		*node[0x57028279f190] = 15;

		*node[0x57028279f1c0] = *;

		*node[0x57028279f1f0] = 2;

		*node[0x57028279f220] = 1;

		*node[0x57028279f250] = ;;

		*node[0x57028279f280] = print;

		*node[0x57028279f2b0] = 11;

		*node[0x57028279f2e0] = ;;

		*node[0x57028279f310] = print;

		*node[0x57028279f340] = 12;

		*node[0x57028279f370] = 13;

		*node[0x57028279f3a0] = elseif;

		*node[0x57028279f3d0] = op_no;

		*node[0x57028279f400] = ==;

		*node[0x57028279f430] = 14;

		*node[0x57028279f460] = 0;

		*node[0x57028279f490] = ;;

		*node[0x57028279f4c0] = =;

		*node[0x57028279f4f0] = 10;

		*node[0x57028279f520] = /;

		*node[0x57028279f550] = -;

		*node[0x57028279f580] = 0;

		*node[0x57028279f5b0] = 2;

		*node[0x57028279f5e0] = *;

		*node[0x57028279f610] = 2;

		*node[0x57028279f640] = 1;

		*node[0x57028279f670] = ;;

		*node[0x57028279f6a0] = print;

		*node[0x57028279f6d0] = 8;

		*node[0x57028279f700] = ;;

		*node[0x57028279f730] = print;

		*node[0x57028279f760] = 10;

		*node[0x57028279f790] = else;

		*node[0x57028279f7c0] = op_no;

		*node[0x57028279f7f0] = ;;

		*node[0x57028279f820] = print;

		*node[0x57028279f850] = 7;

		*node[0x57028279f880] = ;;

		*node[0x57028279f8b0] = return;

		*node[0x57028279f8e0] = 0;

		*node[0x57028279f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc6fddccd0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x55f9e2b34fd0] = ;;

		*node[0x55f9e2b35000] = 0;

		*node[0x55f9e2b35030] = ;;

		*node[0x55f9e2b35060] = input;

		*node[0x55f9e2b35090] = 1;

		*node[0x55f9e2b350c0] = 2;

		*node[0x55f9e2b350f0] = 3;

		*node[0x55f9e2b35120] = ;;

		*node[0x55f9e2b35180] = 1;

		*node[0x55f9e2b351b0] = 2;

		*node[0x55f9e2b351e0] = 3;

		*node[0x55f9e2b35210] = ;;

		*node[0x55f9e2b35240] = 4;

		*node[0x55f9e2b35270] = 1;

		*node[0x55f9e2b352a0] = 2;

		*node[0x55f9e2b352d0] = 3;

		*node[0x55f9e2b35300] = ;;

		*node[0x55f9e2b35330] = if;

		*node[0x55f9e2b35360] = op_no;

		*node[0x55f9e2b35390] = ==;

		*node[0x55f9e2b353c0] = 1;

		*node[0x55f9e2b353f0] = 0;

		*node[0x55f9e2b35420] = ;;

		*node[0x55f9e2b35480] = 2;

		*node[0x55f9e2b354b0] = 3;

		*node[0x55f9e2b354e0] = else;

		*node[0x55f9e2b35510] = op_no;

		*node[0x55f9e2b35540] = ;;

		*node[0x55f9e2b355a0] = 1;

		*node[0x55f9e2b355d0] = 2;

		*node[0x55f9e2b35600] = 3;

		*node[0x55f9e2b35630] = ;;

		*node[0x55f9e2b35660] = 5;

		*node[0x55f9e2b35690] = 1;

		*node[0x55f9e2b356c0] = 2;

		*node[0x55f9e2b356f0] = ;;

		*node[0x55f9e2b35720] = =;

		*node[0x55f9e2b35750] = 7;

		*node[0x55f9e2b35780] = -;

		*node[0x55f9e2b357b0] = 0;

		*node[0x55f9e2b357e0] = 1;

		*node[0x55f9e2b35810] = ;;

		*node[0x55f9e2b35840] = =;

		*node[0x55f9e2b35870] = 8;

		*node[0x55f9e2b358a0] = 1;

		*node[0x55f9e2b358d0] = ;;

		*node[0x55f9e2b35900] = =;

		*node[0x55f9e2b35930] = 9;

		*node[0x55f9e2b35960] = 1000;

		*node[0x55f9e2b35990] = ;;

		*node[0x55f9e2b359c0] = if;

		*node[0x55f9e2b359f0] = op_no;

		*node[0x55f9e2b35a20] = ==;

		*node[0x55f9e2b35a50] = 1;

		*node[0x55f9e2b35a80] = 0;

		*node[0x55f9e2b35ab0] = ;;

		*node[0x55f9e2b35ae0] = if;

		*node[0x55f9e2b35b10] = op_no;

		*node[0x55f9e2b35b40] = ==;

		*node[0x55f9e2b35b70] = 2;

		*node[0x55f9e2b35ba0] = 0;

		*node[0x55f9e2b35bd0] = ;;

		*node[0x55f9e2b35c00] = print;

		*node[0x55f9e2b35c30] = 9;

		*node[0x55f9e2b35c60] = else;

		*node[0x55f9e2b35c90] = op_no;

		*node[0x55f9e2b35cc0] = ;;

		*node[0x55f9e2b35cf0] = print;

		*node[0x55f9e2b35d20] = 7;

		*node[0x55f9e2b35d50] = else;

		*node[0x55f9e2b35d80] = op_no;

		*node[0x55f9e2b35db0] = ;;

		*node[0x55f9e2b35de0] = =;

		*node[0x55f9e2b35e10] = 10;

		*node[0x55f9e2b35e40] = /;

		*node[0x55f9e2b35e70] = -;

		*node[0x55f9e2b35ea0] = 0;

		*node[0x55f9e2b35ed0] = 2;

		*node[0x55f9e2b35f00] = 1;

		*node[0x55f9e2b35f30] = ;;

		*node[0x55f9e2b35f60] = print;

		*node[0x55f9e2b35f90] = 8;

		*node[0x55f9e2b35fc0] = ;;

		*node[0x55f9e2b35ff0] = print;

		*node[0x55f9e2b36020] = 10;

		*node[0x55f9e2b36050] = ;;

		*node[0x55f9e2b36080] = return;

		*node[0x55f9e2b360b0] = 0;

		*node[0x55f9e2b360e0] = ;;

		*node[0x55f9e2b36110] = 6;

		*node[0x55f9e2b36140] = 1;

		*node[0x55f9e2b36170] = 2;

		*node[0x55f9e2b361a0] = 3;

		*node[0x55f9e2b361d0] = ;;

		*node[0x55f9e2b36200] = =;

		*node[0x55f9e2b36230] = 7;

		*node[0x55f9e2b36260] = -;

		*node[0x55f9e2b36290] = 0;

		*node[0x55f9e2b362c0] = 1;

		*node[0x55f9e2b362f0] = ;;

		*node[0x55f9e2b36320] = =;

		*node[0x55f9e2b36350] = 8;

		*node[0x55f9e2b36380] = 1;

		*node[0x55f9e2b363b0] = ;;

		*node[0x55f9e2b363e0] = =;

		*node[0x55f9e2b36410] = 11;

		*node[0x55f9e2b36440] = 2;

		*node[0x55f9e2b36470] = ;;

		*node[0x55f9e2b364a0] = if;

		*node[0x55f9e2b364d0] = op_no;

		*node[0x55f9e2b36500] = ==;

		*node[0x55f9e2b36530] = 3;

		*node[0x55f9e2b36560] = 0;

		*node[0x55f9e2b36590] = ;;

		*node[0x55f9e2b365c0] = =;

		*node[0x55f9e2b365f0] = 12;

		*node[0x55f9e2b36620] = 0;

		*node[0x55f9e2b36650] = ;;

		*node[0x55f9e2b36680] = =;

		*node[0x55f9e2b366b0] = 13;

		*node[0x55f9e2b366e0] = /;

		*node[0x55f9e2b36710] = -;

		*node[0x55f9e2b36740] = 0;

		*node[0x55f9e2b36770] = 2;

		*node[0x55f9e2b367a0] = 1;

		*node[0x55f9e2b367d0] = ;;

		*node[0x55f9e2b36800] = print;

		*node[0x55f9e2b36830] = 11;

		*node[0x55f9e2b36860] = ;;

		*node[0x55f9e2b36890] = print;

		*node[0x55f9e2b368c0] = 12;

		*node[0x55f9e2b368f0] = 13;

		*node[0x55f9e2b36920] = else;

		*node[0x55f9e2b36950] = op_no;

		*node[0x55f9e2b36980] = ;;

		*node[0x55f9e2b369b0] = =;

		*node[0x55f9e2b369e0] = 14;

		*node[0x55f9e2b36a10] = -;

		*node[0x55f9e2b36a40] = *;

		*node[0x55f9e2b36a70] = 2;

		*node[0x55f9e2b36aa0] = 2;

		*node[0x55f9e2b36ad0] = *;

		*node[0x55f9e2b36b00] = *;

		*node[0x55f9e2b36b30] = 4;

		*node[0x55f9e2b36b60] = 1;

		*node[0x55f9e2b36b90] = 3;

		*node[0x55f9e2b36bc0] = ;;

		*node[0x55f9e2b36bf0] = if;

		*node[0x55f9e2b36c20] = op_no;

		*node[0x55f9e2b36c50] = >;

		*node[0x55f9e2b36c80] = 14;

		*node[0x55f9e2b36cb0] = 0;

		*node[0x55f9e2b36ce0] = ;;

		*node[0x55f9e2b36d10] = =;

		*node[0x55f9e2b36d40] = 15;

		*node[0x55f9e2b36d70] = sqrt;

		*node[0x55f9e2b36da0] = 14;

		*node[0x55f9e2b36dd0] = ;;

		*node[0x55f9e2b36e00] = =;

		*node[0x55f9e2b36e30] = 12;

		*node[0x55f9e2b36e60] = /;

		*node[0x55f9e2b36e90] = -;

		*node[0x55f9e2b36ec0] = -;

		*node[0x55f9e2b36ef0] = 0;

		*node[0x55f9e2b36f20] = 2;

		*node[0x55f9e2b36f50] = 15;

		*node[0x55f9e2b36f80] = *;

		*node[0x55f9e2b36fb0] = 2;

		*node[0x55f9e2b36fe0] = 1;

		*node[0x55f9e2b37010] = ;;

		*node[0x55f9e2b37040] = =;

		*node[0x55f9e2b37070] = 13;

		*node[0x55f9e2b370a0] = /;

		*node[0x55f9e2b370d0] = +;

		*node[0x55f9e2b37100] = -;

		*node[0x55f9e2b37130] = 0;

		*node[0x55f9e2b37160] = 2;

		*node[0x55f9e2b37190] = 15;

		*node[0x55f9e2b371c0] = *;

		*node[0x55f9e2b371f0] = 2;

		*node[0x55f9e2b37220] = 1;

		*node[0x55f9e2b37250] = ;;

		*node[0x55f9e2b37280] = print;

		*node[0x55f9e2b372b0] = 11;

		*node[0x55f9e2b372e0] = ;;

		*node[0x55f9e2b37310] = print;

		*node[0x55f9e2b37340] = 12;

		*node[0x55f9e2b37370] = 13;

		*node[0x55f9e2b373a0] = elseif;

		*node[0x55f9e2b373d0] = op_no;

		*node[0x55f9e2b37400] = ==;

		*node[0x55f9e2b37430] = 14;

		*node[0x55f9e2b37460] = 0;

		*node[0x55f9e2b37490] = ;;

		*node[0x55f9e2b374c0] = =;

		*node[0x55f9e2b374f0] = 10;

		*node[0x55f9e2b37520] = /;

		*node[0x55f9e2b37550] = -;

		*node[0x55f9e2b37580] = 0;

		*node[0x55f9e2b375b0] = 2;

		*node[0x55f9e2b375e0] = *;

		*node[0x55f9e2b37610] = 2;

		*node[0x55f9e2b37640] = 1;

		*node[0x55f9e2b37670] = ;;

		*node[0x55f9e2b376a0] = print;

		*node[0x55f9e2b376d0] = 8;

		*node[0x55f9e2b37700] = ;;

		*node[0x55f9e2b37730] = print;

		*node[0x55f9e2b37760] = 10;

		*node[0x55f9e2b37790] = else;

		*node[0x55f9e2b377c0] = op_no;

		*node[0x55f9e2b377f0] = ;;

		*node[0x55f9e2b37820] = print;

		*node[0x55f9e2b37850] = 7;

		*node[0x55f9e2b37880] = ;;

		*node[0x55f9e2b378b0] = return;

		*node[0x55f9e2b378e0] = 0;

		*node[0x55f9e2b37910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc508938f0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x58e8a4734fd0] = ;;

		*node[0x58e8a4735000] = 0;

		*node[0x58e8a4735030] = ;;

		*node[0x58e8a4735060] = input;

		*node[0x58e8a4735090] = 1;

		*node[0x58e8a47350c0] = 2;

		*node[0x58e8a47350f0] = 3;

		*node[0x58e8a4735120] = ;;

		*node[0x58e8a4735180] = 1;

		*node[0x58e8a47351b0] = 2;

		*node[0x58e8a47351e0] = 3;

		*node[0x58e8a4735210] = ;;

		*node[0x58e8a4735240] = 4;

		*node[0x58e8a4735270] = 1;

		*node[0x58e8a47352a0] = 2;

		*node[0x58e8a47352d0] = 3;

		*node[0x58e8a4735300] = ;;

		*node[0x58e8a4735330] = if;

		*node[0x58e8a4735360] = op_no;

		*node[0x58e8a4735390] = ==;

		*node[0x58e8a47353c0] = 1;

		*node[0x58e8a47353f0] = 0;

		*node[0x58e8a4735420] = ;;

		*node[0x58e8a4735480] = 2;

		*node[0x58e8a47354b0] = 3;

		*node[0x58e8a47354e0] = else;

		*node[0x58e8a4735510] = op_no;

		*node[0x58e8a4735540] = ;;

		*node[0x58e8a47355a0] = 1;

		*node[0x58e8a47355d0] = 2;

		*node[0x58e8a4735600] = 3;

		*node[0x58e8a4735630] = ;;

		*node[0x58e8a4735660] = 5;

		*node[0x58e8a4735690] = 1;

		*node[0x58e8a47356c0] = 2;

		*node[0x58e8a47356f0] = ;;

		*node[0x58e8a4735720] = =;

		*node[0x58e8a4735750] = 7;

		*node[0x58e8a4735780] = -;

		*node[0x58e8a47357b0] = 0;

		*node[0x58e8a47357e0] = 1;

		*node[0x58e8a4735810] = ;;

		*node[0x58e8a4735840] = =;

		*node[0x58e8a4735870] = 8;

		*node[0x58e8a47358a0] = 1;

		*node[0x58e8a47358d0] = ;;

		*node[0x58e8a4735900] = =;

		*node[0x58e8a4735930] = 9;

		*node[0x58e8a4735960] = 1000;

		*node[0x58e8a4735990] = ;;

		*node[0x58e8a47359c0] = if;

		*node[0x58e8a47359f0] = op_no;

		*node[0x58e8a4735a20] = ==;

		*node[0x58e8a4735a50] = 1;

		*node[0x58e8a4735a80] = 0;

		*node[0x58e8a4735ab0] = ;;

		*node[0x58e8a4735ae0] = if;

		*node[0x58e8a4735b10] = op_no;

		*node[0x58e8a4735b40] = ==;

		*node[0x58e8a4735b70] = 2;

		*node[0x58e8a4735ba0] = 0;

		*node[0x58e8a4735bd0] = ;;

		*node[0x58e8a4735c00] = print;

		*node[0x58e8a4735c30] = 9;

		*node[0x58e8a4735c60] = else;

		*node[0x58e8a4735c90] = op_no;

		*node[0x58e8a4735cc0] = ;;

		*node[0x58e8a4735cf0] = print;

		*node[0x58e8a4735d20] = 7;

		*node[0x58e8a4735d50] = else;

		*node[0x58e8a4735d80] = op_no;

		*node[0x58e8a4735db0] = ;;

		*node[0x58e8a4735de0] = =;

		*node[0x58e8a4735e10] = 10;

		*node[0x58e8a4735e40] = /;

		*node[0x58e8a4735e70] = -;

		*node[0x58e8a4735ea0] = 0;

		*node[0x58e8a4735ed0] = 2;

		*node[0x58e8a4735f00] = 1;

		*node[0x58e8a4735f30] = ;;

		*node[0x58e8a4735f60] = print;

		*node[0x58e8a4735f90] = 8;

		*node[0x58e8a4735fc0] = ;;

		*node[0x58e8a4735ff0] = print;

		*node[0x58e8a4736020] = 10;

		*node[0x58e8a4736050] = ;;

		*node[0x58e8a4736080] = return;

		*node[0x58e8a47360b0] = 0;

		*node[0x58e8a47360e0] = ;;

		*node[0x58e8a4736110] = 6;

		*node[0x58e8a4736140] = 1;

		*node[0x58e8a4736170] = 2;

		*node[0x58e8a47361a0] = 3;

		*node[0x58e8a47361d0] = ;;

		*node[0x58e8a4736200] = =;

		*node[0x58e8a4736230] = 7;

		*node[0x58e8a4736260] = -;

		*node[0x58e8a4736290] = 0;

		*node[0x58e8a47362c0] = 1;

		*node[0x58e8a47362f0] = ;;

		*node[0x58e8a4736320] = =;

		*node[0x58e8a4736350] = 8;

		*node[0x58e8a4736380] = 1;

		*node[0x58e8a47363b0] = ;;

		*node[0x58e8a47363e0] = =;

		*node[0x58e8a4736410] = 11;

		*node[0x58e8a4736440] = 2;

		*node[0x58e8a4736470] = ;;

		*node[0x58e8a47364a0] = if;

		*node[0x58e8a47364d0] = op_no;

		*node[0x58e8a4736500] = ==;

		*node[0x58e8a4736530] = 3;

		*node[0x58e8a4736560] = 0;

		*node[0x58e8a4736590] = ;;

		*node[0x58e8a47365c0] = =;

		*node[0x58e8a47365f0] = 12;

		*node[0x58e8a4736620] = 0;

		*node[0x58e8a4736650] = ;;

		*node[0x58e8a4736680] = =;

		*node[0x58e8a47366b0] = 13;

		*node[0x58e8a47366e0] = /;

		*node[0x58e8a4736710] = -;

		*node[0x58e8a4736740] = 0;

		*node[0x58e8a4736770] = 2;

		*node[0x58e8a47367a0] = 1;

		*node[0x58e8a47367d0] = ;;

		*node[0x58e8a4736800] = print;

		*node[0x58e8a4736830] = 11;

		*node[0x58e8a4736860] = ;;

		*node[0x58e8a4736890] = print;

		*node[0x58e8a47368c0] = 12;

		*node[0x58e8a47368f0] = 13;

		*node[0x58e8a4736920] = else;

		*node[0x58e8a4736950] = op_no;

		*node[0x58e8a4736980] = ;;

		*node[0x58e8a47369b0] = =;

		*node[0x58e8a47369e0] = 14;

		*node[0x58e8a4736a10] = -;

		*node[0x58e8a4736a40] = *;

		*node[0x58e8a4736a70] = 2;

		*node[0x58e8a4736aa0] = 2;

		*node[0x58e8a4736ad0] = *;

		*node[0x58e8a4736b00] = *;

		*node[0x58e8a4736b30] = 4;

		*node[0x58e8a4736b60] = 1;

		*node[0x58e8a4736b90] = 3;

		*node[0x58e8a4736bc0] = ;;

		*node[0x58e8a4736bf0] = if;

		*node[0x58e8a4736c20] = op_no;

		*node[0x58e8a4736c50] = >;

		*node[0x58e8a4736c80] = 14;

		*node[0x58e8a4736cb0] = 0;

		*node[0x58e8a4736ce0] = ;;

		*node[0x58e8a4736d10] = =;

		*node[0x58e8a4736d40] = 15;

		*node[0x58e8a4736d70] = sqrt;

		*node[0x58e8a4736da0] = 14;

		*node[0x58e8a4736dd0] = ;;

		*node[0x58e8a4736e00] = =;

		*node[0x58e8a4736e30] = 12;

		*node[0x58e8a4736e60] = /;

		*node[0x58e8a4736e90] = -;

		*node[0x58e8a4736ec0] = -;

		*node[0x58e8a4736ef0] = 0;

		*node[0x58e8a4736f20] = 2;

		*node[0x58e8a4736f50] = 15;

		*node[0x58e8a4736f80] = *;

		*node[0x58e8a4736fb0] = 2;

		*node[0x58e8a4736fe0] = 1;

		*node[0x58e8a4737010] = ;;

		*node[0x58e8a4737040] = =;

		*node[0x58e8a4737070] = 13;

		*node[0x58e8a47370a0] = /;

		*node[0x58e8a47370d0] = +;

		*node[0x58e8a4737100] = -;

		*node[0x58e8a4737130] = 0;

		*node[0x58e8a4737160] = 2;

		*node[0x58e8a4737190] = 15;

		*node[0x58e8a47371c0] = *;

		*node[0x58e8a47371f0] = 2;

		*node[0x58e8a4737220] = 1;

		*node[0x58e8a4737250] = ;;

		*node[0x58e8a4737280] = print;

		*node[0x58e8a47372b0] = 11;

		*node[0x58e8a47372e0] = ;;

		*node[0x58e8a4737310] = print;

		*node[0x58e8a4737340] = 12;

		*node[0x58e8a4737370] = 13;

		*node[0x58e8a47373a0] = elseif;

		*node[0x58e8a47373d0] = op_no;

		*node[0x58e8a4737400] = ==;

		*node[0x58e8a4737430] = 14;

		*node[0x58e8a4737460] = 0;

		*node[0x58e8a4737490] = ;;

		*node[0x58e8a47374c0] = =;

		*node[0x58e8a47374f0] = 10;

		*node[0x58e8a4737520] = /;

		*node[0x58e8a4737550] = -;

		*node[0x58e8a4737580] = 0;

		*node[0x58e8a47375b0] = 2;

		*node[0x58e8a47375e0] = *;

		*node[0x58e8a4737610] = 2;

		*node[0x58e8a4737640] = 1;

		*node[0x58e8a4737670] = ;;

		*node[0x58e8a47376a0] = print;

		*node[0x58e8a47376d0] = 8;

		*node[0x58e8a4737700] = ;;

		*node[0x58e8a4737730] = print;

		*node[0x58e8a4737760] = 10;

		*node[0x58e8a4737790] = else;

		*node[0x58e8a47377c0] = op_no;

		*node[0x58e8a47377f0] = ;;

		*node[0x58e8a4737820] = print;

		*node[0x58e8a4737850] = 7;

		*node[0x58e8a4737880] = ;;

		*node[0x58e8a47378b0] = return;

		*node[0x58e8a47378e0] = 0;

		*node[0x58e8a4737910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd8bfe0ab0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e43c9416fd0] = ;;

		*node[0x5e43c9417000] = 0;

		*node[0x5e43c9417030] = ;;

		*node[0x5e43c9417060] = input;

		*node[0x5e43c9417090] = 1;

		*node[0x5e43c94170c0] = 2;

		*node[0x5e43c94170f0] = 3;

		*node[0x5e43c9417120] = ;;

		*node[0x5e43c9417180] = 1;

		*node[0x5e43c94171b0] = 2;

		*node[0x5e43c94171e0] = 3;

		*node[0x5e43c9417210] = ;;

		*node[0x5e43c9417240] = 4;

		*node[0x5e43c9417270] = 1;

		*node[0x5e43c94172a0] = 2;

		*node[0x5e43c94172d0] = 3;

		*node[0x5e43c9417300] = ;;

		*node[0x5e43c9417330] = if;

		*node[0x5e43c9417360] = op_no;

		*node[0x5e43c9417390] = ==;

		*node[0x5e43c94173c0] = 1;

		*node[0x5e43c94173f0] = 0;

		*node[0x5e43c9417420] = ;;

		*node[0x5e43c9417480] = 2;

		*node[0x5e43c94174b0] = 3;

		*node[0x5e43c94174e0] = else;

		*node[0x5e43c9417510] = op_no;

		*node[0x5e43c9417540] = ;;

		*node[0x5e43c94175a0] = 1;

		*node[0x5e43c94175d0] = 2;

		*node[0x5e43c9417600] = 3;

		*node[0x5e43c9417630] = ;;

		*node[0x5e43c9417660] = 5;

		*node[0x5e43c9417690] = 1;

		*node[0x5e43c94176c0] = 2;

		*node[0x5e43c94176f0] = ;;

		*node[0x5e43c9417720] = =;

		*node[0x5e43c9417750] = 7;

		*node[0x5e43c9417780] = -;

		*node[0x5e43c94177b0] = 0;

		*node[0x5e43c94177e0] = 1;

		*node[0x5e43c9417810] = ;;

		*node[0x5e43c9417840] = =;

		*node[0x5e43c9417870] = 8;

		*node[0x5e43c94178a0] = 1;

		*node[0x5e43c94178d0] = ;;

		*node[0x5e43c9417900] = =;

		*node[0x5e43c9417930] = 9;

		*node[0x5e43c9417960] = 1000;

		*node[0x5e43c9417990] = ;;

		*node[0x5e43c94179c0] = if;

		*node[0x5e43c94179f0] = op_no;

		*node[0x5e43c9417a20] = ==;

		*node[0x5e43c9417a50] = 1;

		*node[0x5e43c9417a80] = 0;

		*node[0x5e43c9417ab0] = ;;

		*node[0x5e43c9417ae0] = if;

		*node[0x5e43c9417b10] = op_no;

		*node[0x5e43c9417b40] = ==;

		*node[0x5e43c9417b70] = 2;

		*node[0x5e43c9417ba0] = 0;

		*node[0x5e43c9417bd0] = ;;

		*node[0x5e43c9417c00] = print;

		*node[0x5e43c9417c30] = 9;

		*node[0x5e43c9417c60] = else;

		*node[0x5e43c9417c90] = op_no;

		*node[0x5e43c9417cc0] = ;;

		*node[0x5e43c9417cf0] = print;

		*node[0x5e43c9417d20] = 7;

		*node[0x5e43c9417d50] = else;

		*node[0x5e43c9417d80] = op_no;

		*node[0x5e43c9417db0] = ;;

		*node[0x5e43c9417de0] = =;

		*node[0x5e43c9417e10] = 10;

		*node[0x5e43c9417e40] = /;

		*node[0x5e43c9417e70] = -;

		*node[0x5e43c9417ea0] = 0;

		*node[0x5e43c9417ed0] = 2;

		*node[0x5e43c9417f00] = 1;

		*node[0x5e43c9417f30] = ;;

		*node[0x5e43c9417f60] = print;

		*node[0x5e43c9417f90] = 8;

		*node[0x5e43c9417fc0] = ;;

		*node[0x5e43c9417ff0] = print;

		*node[0x5e43c9418020] = 10;

		*node[0x5e43c9418050] = ;;

		*node[0x5e43c9418080] = return;

		*node[0x5e43c94180b0] = 0;

		*node[0x5e43c94180e0] = ;;

		*node[0x5e43c9418110] = 6;

		*node[0x5e43c9418140] = 1;

		*node[0x5e43c9418170] = 2;

		*node[0x5e43c94181a0] = 3;

		*node[0x5e43c94181d0] = ;;

		*node[0x5e43c9418200] = =;

		*node[0x5e43c9418230] = 7;

		*node[0x5e43c9418260] = -;

		*node[0x5e43c9418290] = 0;

		*node[0x5e43c94182c0] = 1;

		*node[0x5e43c94182f0] = ;;

		*node[0x5e43c9418320] = =;

		*node[0x5e43c9418350] = 8;

		*node[0x5e43c9418380] = 1;

		*node[0x5e43c94183b0] = ;;

		*node[0x5e43c94183e0] = =;

		*node[0x5e43c9418410] = 11;

		*node[0x5e43c9418440] = 2;

		*node[0x5e43c9418470] = ;;

		*node[0x5e43c94184a0] = if;

		*node[0x5e43c94184d0] = op_no;

		*node[0x5e43c9418500] = ==;

		*node[0x5e43c9418530] = 3;

		*node[0x5e43c9418560] = 0;

		*node[0x5e43c9418590] = ;;

		*node[0x5e43c94185c0] = =;

		*node[0x5e43c94185f0] = 12;

		*node[0x5e43c9418620] = 0;

		*node[0x5e43c9418650] = ;;

		*node[0x5e43c9418680] = =;

		*node[0x5e43c94186b0] = 13;

		*node[0x5e43c94186e0] = /;

		*node[0x5e43c9418710] = -;

		*node[0x5e43c9418740] = 0;

		*node[0x5e43c9418770] = 2;

		*node[0x5e43c94187a0] = 1;

		*node[0x5e43c94187d0] = ;;

		*node[0x5e43c9418800] = print;

		*node[0x5e43c9418830] = 11;

		*node[0x5e43c9418860] = ;;

		*node[0x5e43c9418890] = print;

		*node[0x5e43c94188c0] = 12;

		*node[0x5e43c94188f0] = 13;

		*node[0x5e43c9418920] = else;

		*node[0x5e43c9418950] = op_no;

		*node[0x5e43c9418980] = ;;

		*node[0x5e43c94189b0] = =;

		*node[0x5e43c94189e0] = 14;

		*node[0x5e43c9418a10] = -;

		*node[0x5e43c9418a40] = *;

		*node[0x5e43c9418a70] = 2;

		*node[0x5e43c9418aa0] = 2;

		*node[0x5e43c9418ad0] = *;

		*node[0x5e43c9418b00] = *;

		*node[0x5e43c9418b30] = 4;

		*node[0x5e43c9418b60] = 1;

		*node[0x5e43c9418b90] = 3;

		*node[0x5e43c9418bc0] = ;;

		*node[0x5e43c9418bf0] = if;

		*node[0x5e43c9418c20] = op_no;

		*node[0x5e43c9418c50] = >;

		*node[0x5e43c9418c80] = 14;

		*node[0x5e43c9418cb0] = 0;

		*node[0x5e43c9418ce0] = ;;

		*node[0x5e43c9418d10] = =;

		*node[0x5e43c9418d40] = 15;

		*node[0x5e43c9418d70] = sqrt;

		*node[0x5e43c9418da0] = 14;

		*node[0x5e43c9418dd0] = ;;

		*node[0x5e43c9418e00] = =;

		*node[0x5e43c9418e30] = 12;

		*node[0x5e43c9418e60] = /;

		*node[0x5e43c9418e90] = -;

		*node[0x5e43c9418ec0] = -;

		*node[0x5e43c9418ef0] = 0;

		*node[0x5e43c9418f20] = 2;

		*node[0x5e43c9418f50] = 15;

		*node[0x5e43c9418f80] = *;

		*node[0x5e43c9418fb0] = 2;

		*node[0x5e43c9418fe0] = 1;

		*node[0x5e43c9419010] = ;;

		*node[0x5e43c9419040] = =;

		*node[0x5e43c9419070] = 13;

		*node[0x5e43c94190a0] = /;

		*node[0x5e43c94190d0] = +;

		*node[0x5e43c9419100] = -;

		*node[0x5e43c9419130] = 0;

		*node[0x5e43c9419160] = 2;

		*node[0x5e43c9419190] = 15;

		*node[0x5e43c94191c0] = *;

		*node[0x5e43c94191f0] = 2;

		*node[0x5e43c9419220] = 1;

		*node[0x5e43c9419250] = ;;

		*node[0x5e43c9419280] = print;

		*node[0x5e43c94192b0] = 11;

		*node[0x5e43c94192e0] = ;;

		*node[0x5e43c9419310] = print;

		*node[0x5e43c9419340] = 12;

		*node[0x5e43c9419370] = 13;

		*node[0x5e43c94193a0] = elseif;

		*node[0x5e43c94193d0] = op_no;

		*node[0x5e43c9419400] = ==;

		*node[0x5e43c9419430] = 14;

		*node[0x5e43c9419460] = 0;

		*node[0x5e43c9419490] = ;;

		*node[0x5e43c94194c0] = =;

		*node[0x5e43c94194f0] = 10;

		*node[0x5e43c9419520] = /;

		*node[0x5e43c9419550] = -;

		*node[0x5e43c9419580] = 0;

		*node[0x5e43c94195b0] = 2;

		*node[0x5e43c94195e0] = *;

		*node[0x5e43c9419610] = 2;

		*node[0x5e43c9419640] = 1;

		*node[0x5e43c9419670] = ;;

		*node[0x5e43c94196a0] = print;

		*node[0x5e43c94196d0] = 8;

		*node[0x5e43c9419700] = ;;

		*node[0x5e43c9419730] = print;

		*node[0x5e43c9419760] = 10;

		*node[0x5e43c9419790] = else;

		*node[0x5e43c94197c0] = op_no;

		*node[0x5e43c94197f0] = ;;

		*node[0x5e43c9419820] = print;

		*node[0x5e43c9419850] = 7;

		*node[0x5e43c9419880] = ;;

		*node[0x5e43c94198b0] = return;

		*node[0x5e43c94198e0] = 0;

		*node[0x5e43c9419910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc80ad8940] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x564f9f7fbfd0] = ;;

		*node[0x564f9f7fc000] = 0;

		*node[0x564f9f7fc030] = ;;

		*node[0x564f9f7fc060] = input;

		*node[0x564f9f7fc090] = 1;

		*node[0x564f9f7fc0c0] = 2;

		*node[0x564f9f7fc0f0] = 3;

		*node[0x564f9f7fc120] = ;;

		*node[0x564f9f7fc180] = 1;

		*node[0x564f9f7fc1b0] = 2;

		*node[0x564f9f7fc1e0] = 3;

		*node[0x564f9f7fc210] = ;;

		*node[0x564f9f7fc240] = 4;

		*node[0x564f9f7fc270] = 1;

		*node[0x564f9f7fc2a0] = 2;

		*node[0x564f9f7fc2d0] = 3;

		*node[0x564f9f7fc300] = ;;

		*node[0x564f9f7fc330] = if;

		*node[0x564f9f7fc360] = op_no;

		*node[0x564f9f7fc390] = ==;

		*node[0x564f9f7fc3c0] = 1;

		*node[0x564f9f7fc3f0] = 0;

		*node[0x564f9f7fc420] = ;;

		*node[0x564f9f7fc480] = 2;

		*node[0x564f9f7fc4b0] = 3;

		*node[0x564f9f7fc4e0] = else;

		*node[0x564f9f7fc510] = op_no;

		*node[0x564f9f7fc540] = ;;

		*node[0x564f9f7fc5a0] = 1;

		*node[0x564f9f7fc5d0] = 2;

		*node[0x564f9f7fc600] = 3;

		*node[0x564f9f7fc630] = ;;

		*node[0x564f9f7fc660] = 5;

		*node[0x564f9f7fc690] = 1;

		*node[0x564f9f7fc6c0] = 2;

		*node[0x564f9f7fc6f0] = ;;

		*node[0x564f9f7fc720] = =;

		*node[0x564f9f7fc750] = 7;

		*node[0x564f9f7fc780] = -;

		*node[0x564f9f7fc7b0] = 0;

		*node[0x564f9f7fc7e0] = 1;

		*node[0x564f9f7fc810] = ;;

		*node[0x564f9f7fc840] = =;

		*node[0x564f9f7fc870] = 8;

		*node[0x564f9f7fc8a0] = 1;

		*node[0x564f9f7fc8d0] = ;;

		*node[0x564f9f7fc900] = =;

		*node[0x564f9f7fc930] = 9;

		*node[0x564f9f7fc960] = 1000;

		*node[0x564f9f7fc990] = ;;

		*node[0x564f9f7fc9c0] = if;

		*node[0x564f9f7fc9f0] = op_no;

		*node[0x564f9f7fca20] = ==;

		*node[0x564f9f7fca50] = 1;

		*node[0x564f9f7fca80] = 0;

		*node[0x564f9f7fcab0] = ;;

		*node[0x564f9f7fcae0] = if;

		*node[0x564f9f7fcb10] = op_no;

		*node[0x564f9f7fcb40] = ==;

		*node[0x564f9f7fcb70] = 2;

		*node[0x564f9f7fcba0] = 0;

		*node[0x564f9f7fcbd0] = ;;

		*node[0x564f9f7fcc00] = print;

		*node[0x564f9f7fcc30] = 9;

		*node[0x564f9f7fcc60] = else;

		*node[0x564f9f7fcc90] = op_no;

		*node[0x564f9f7fccc0] = ;;

		*node[0x564f9f7fccf0] = print;

		*node[0x564f9f7fcd20] = 7;

		*node[0x564f9f7fcd50] = else;

		*node[0x564f9f7fcd80] = op_no;

		*node[0x564f9f7fcdb0] = ;;

		*node[0x564f9f7fcde0] = =;

		*node[0x564f9f7fce10] = 10;

		*node[0x564f9f7fce40] = /;

		*node[0x564f9f7fce70] = -;

		*node[0x564f9f7fcea0] = 0;

		*node[0x564f9f7fced0] = 2;

		*node[0x564f9f7fcf00] = 1;

		*node[0x564f9f7fcf30] = ;;

		*node[0x564f9f7fcf60] = print;

		*node[0x564f9f7fcf90] = 8;

		*node[0x564f9f7fcfc0] = ;;

		*node[0x564f9f7fcff0] = print;

		*node[0x564f9f7fd020] = 10;

		*node[0x564f9f7fd050] = ;;

		*node[0x564f9f7fd080] = return;

		*node[0x564f9f7fd0b0] = 0;

		*node[0x564f9f7fd0e0] = ;;

		*node[0x564f9f7fd110] = 6;

		*node[0x564f9f7fd140] = 1;

		*node[0x564f9f7fd170] = 2;

		*node[0x564f9f7fd1a0] = 3;

		*node[0x564f9f7fd1d0] = ;;

		*node[0x564f9f7fd200] = =;

		*node[0x564f9f7fd230] = 7;

		*node[0x564f9f7fd260] = -;

		*node[0x564f9f7fd290] = 0;

		*node[0x564f9f7fd2c0] = 1;

		*node[0x564f9f7fd2f0] = ;;

		*node[0x564f9f7fd320] = =;

		*node[0x564f9f7fd350] = 8;

		*node[0x564f9f7fd380] = 1;

		*node[0x564f9f7fd3b0] = ;;

		*node[0x564f9f7fd3e0] = =;

		*node[0x564f9f7fd410] = 11;

		*node[0x564f9f7fd440] = 2;

		*node[0x564f9f7fd470] = ;;

		*node[0x564f9f7fd4a0] = if;

		*node[0x564f9f7fd4d0] = op_no;

		*node[0x564f9f7fd500] = ==;

		*node[0x564f9f7fd530] = 3;

		*node[0x564f9f7fd560] = 0;

		*node[0x564f9f7fd590] = ;;

		*node[0x564f9f7fd5c0] = =;

		*node[0x564f9f7fd5f0] = 12;

		*node[0x564f9f7fd620] = 0;

		*node[0x564f9f7fd650] = ;;

		*node[0x564f9f7fd680] = =;

		*node[0x564f9f7fd6b0] = 13;

		*node[0x564f9f7fd6e0] = /;

		*node[0x564f9f7fd710] = -;

		*node[0x564f9f7fd740] = 0;

		*node[0x564f9f7fd770] = 2;

		*node[0x564f9f7fd7a0] = 1;

		*node[0x564f9f7fd7d0] = ;;

		*node[0x564f9f7fd800] = print;

		*node[0x564f9f7fd830] = 11;

		*node[0x564f9f7fd860] = ;;

		*node[0x564f9f7fd890] = print;

		*node[0x564f9f7fd8c0] = 12;

		*node[0x564f9f7fd8f0] = 13;

		*node[0x564f9f7fd920] = else;

		*node[0x564f9f7fd950] = op_no;

		*node[0x564f9f7fd980] = ;;

		*node[0x564f9f7fd9b0] = =;

		*node[0x564f9f7fd9e0] = 14;

		*node[0x564f9f7fda10] = -;

		*node[0x564f9f7fda40] = *;

		*node[0x564f9f7fda70] = 2;

		*node[0x564f9f7fdaa0] = 2;

		*node[0x564f9f7fdad0] = *;

		*node[0x564f9f7fdb00] = *;

		*node[0x564f9f7fdb30] = 4;

		*node[0x564f9f7fdb60] = 1;

		*node[0x564f9f7fdb90] = 3;

		*node[0x564f9f7fdbc0] = ;;

		*node[0x564f9f7fdbf0] = if;

		*node[0x564f9f7fdc20] = op_no;

		*node[0x564f9f7fdc50] = >;

		*node[0x564f9f7fdc80] = 14;

		*node[0x564f9f7fdcb0] = 0;

		*node[0x564f9f7fdce0] = ;;

		*node[0x564f9f7fdd10] = =;

		*node[0x564f9f7fdd40] = 15;

		*node[0x564f9f7fdd70] = sqrt;

		*node[0x564f9f7fdda0] = 14;

		*node[0x564f9f7fddd0] = ;;

		*node[0x564f9f7fde00] = =;

		*node[0x564f9f7fde30] = 12;

		*node[0x564f9f7fde60] = /;

		*node[0x564f9f7fde90] = -;

		*node[0x564f9f7fdec0] = -;

		*node[0x564f9f7fdef0] = 0;

		*node[0x564f9f7fdf20] = 2;

		*node[0x564f9f7fdf50] = 15;

		*node[0x564f9f7fdf80] = *;

		*node[0x564f9f7fdfb0] = 2;

		*node[0x564f9f7fdfe0] = 1;

		*node[0x564f9f7fe010] = ;;

		*node[0x564f9f7fe040] = =;

		*node[0x564f9f7fe070] = 13;

		*node[0x564f9f7fe0a0] = /;

		*node[0x564f9f7fe0d0] = +;

		*node[0x564f9f7fe100] = -;

		*node[0x564f9f7fe130] = 0;

		*node[0x564f9f7fe160] = 2;

		*node[0x564f9f7fe190] = 15;

		*node[0x564f9f7fe1c0] = *;

		*node[0x564f9f7fe1f0] = 2;

		*node[0x564f9f7fe220] = 1;

		*node[0x564f9f7fe250] = ;;

		*node[0x564f9f7fe280] = print;

		*node[0x564f9f7fe2b0] = 11;

		*node[0x564f9f7fe2e0] = ;;

		*node[0x564f9f7fe310] = print;

		*node[0x564f9f7fe340] = 12;

		*node[0x564f9f7fe370] = 13;

		*node[0x564f9f7fe3a0] = elseif;

		*node[0x564f9f7fe3d0] = op_no;

		*node[0x564f9f7fe400] = ==;

		*node[0x564f9f7fe430] = 14;

		*node[0x564f9f7fe460] = 0;

		*node[0x564f9f7fe490] = ;;

		*node[0x564f9f7fe4c0] = =;

		*node[0x564f9f7fe4f0] = 10;

		*node[0x564f9f7fe520] = /;

		*node[0x564f9f7fe550] = -;

		*node[0x564f9f7fe580] = 0;

		*node[0x564f9f7fe5b0] = 2;

		*node[0x564f9f7fe5e0] = *;

		*node[0x564f9f7fe610] = 2;

		*node[0x564f9f7fe640] = 1;

		*node[0x564f9f7fe670] = ;;

		*node[0x564f9f7fe6a0] = print;

		*node[0x564f9f7fe6d0] = 8;

		*node[0x564f9f7fe700] = ;;

		*node[0x564f9f7fe730] = print;

		*node[0x564f9f7fe760] = 10;

		*node[0x564f9f7fe790] = else;

		*node[0x564f9f7fe7c0] = op_no;

		*node[0x564f9f7fe7f0] = ;;

		*node[0x564f9f7fe820] = print;

		*node[0x564f9f7fe850] = 7;

		*node[0x564f9f7fe880] = ;;

		*node[0x564f9f7fe8b0] = return;

		*node[0x564f9f7fe8e0] = 0;

		*node[0x564f9f7fe910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd85650da0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5dd27b04dfd0] = ;;

		*node[0x5dd27b04e000] = 0;

		*node[0x5dd27b04e030] = ;;

		*node[0x5dd27b04e060] = input;

		*node[0x5dd27b04e090] = 1;

		*node[0x5dd27b04e0c0] = 2;

		*node[0x5dd27b04e0f0] = 3;

		*node[0x5dd27b04e120] = ;;

		*node[0x5dd27b04e180] = 1;

		*node[0x5dd27b04e1b0] = 2;

		*node[0x5dd27b04e1e0] = 3;

		*node[0x5dd27b04e210] = ;;

		*node[0x5dd27b04e240] = 4;

		*node[0x5dd27b04e270] = 1;

		*node[0x5dd27b04e2a0] = 2;

		*node[0x5dd27b04e2d0] = 3;

		*node[0x5dd27b04e300] = ;;

		*node[0x5dd27b04e330] = if;

		*node[0x5dd27b04e360] = op_no;

		*node[0x5dd27b04e390] = ==;

		*node[0x5dd27b04e3c0] = 1;

		*node[0x5dd27b04e3f0] = 0;

		*node[0x5dd27b04e420] = ;;

		*node[0x5dd27b04e480] = 2;

		*node[0x5dd27b04e4b0] = 3;

		*node[0x5dd27b04e4e0] = else;

		*node[0x5dd27b04e510] = op_no;

		*node[0x5dd27b04e540] = ;;

		*node[0x5dd27b04e5a0] = 1;

		*node[0x5dd27b04e5d0] = 2;

		*node[0x5dd27b04e600] = 3;

		*node[0x5dd27b04e630] = ;;

		*node[0x5dd27b04e660] = 5;

		*node[0x5dd27b04e690] = 1;

		*node[0x5dd27b04e6c0] = 2;

		*node[0x5dd27b04e6f0] = ;;

		*node[0x5dd27b04e720] = =;

		*node[0x5dd27b04e750] = 7;

		*node[0x5dd27b04e780] = -;

		*node[0x5dd27b04e7b0] = 0;

		*node[0x5dd27b04e7e0] = 1;

		*node[0x5dd27b04e810] = ;;

		*node[0x5dd27b04e840] = =;

		*node[0x5dd27b04e870] = 8;

		*node[0x5dd27b04e8a0] = 1;

		*node[0x5dd27b04e8d0] = ;;

		*node[0x5dd27b04e900] = =;

		*node[0x5dd27b04e930] = 9;

		*node[0x5dd27b04e960] = 1000;

		*node[0x5dd27b04e990] = ;;

		*node[0x5dd27b04e9c0] = if;

		*node[0x5dd27b04e9f0] = op_no;

		*node[0x5dd27b04ea20] = ==;

		*node[0x5dd27b04ea50] = 1;

		*node[0x5dd27b04ea80] = 0;

		*node[0x5dd27b04eab0] = ;;

		*node[0x5dd27b04eae0] = if;

		*node[0x5dd27b04eb10] = op_no;

		*node[0x5dd27b04eb40] = ==;

		*node[0x5dd27b04eb70] = 2;

		*node[0x5dd27b04eba0] = 0;

		*node[0x5dd27b04ebd0] = ;;

		*node[0x5dd27b04ec00] = print;

		*node[0x5dd27b04ec30] = 9;

		*node[0x5dd27b04ec60] = else;

		*node[0x5dd27b04ec90] = op_no;

		*node[0x5dd27b04ecc0] = ;;

		*node[0x5dd27b04ecf0] = print;

		*node[0x5dd27b04ed20] = 7;

		*node[0x5dd27b04ed50] = else;

		*node[0x5dd27b04ed80] = op_no;

		*node[0x5dd27b04edb0] = ;;

		*node[0x5dd27b04ede0] = =;

		*node[0x5dd27b04ee10] = 10;

		*node[0x5dd27b04ee40] = /;

		*node[0x5dd27b04ee70] = -;

		*node[0x5dd27b04eea0] = 0;

		*node[0x5dd27b04eed0] = 2;

		*node[0x5dd27b04ef00] = 1;

		*node[0x5dd27b04ef30] = ;;

		*node[0x5dd27b04ef60] = print;

		*node[0x5dd27b04ef90] = 8;

		*node[0x5dd27b04efc0] = ;;

		*node[0x5dd27b04eff0] = print;

		*node[0x5dd27b04f020] = 10;

		*node[0x5dd27b04f050] = ;;

		*node[0x5dd27b04f080] = return;

		*node[0x5dd27b04f0b0] = 0;

		*node[0x5dd27b04f0e0] = ;;

		*node[0x5dd27b04f110] = 6;

		*node[0x5dd27b04f140] = 1;

		*node[0x5dd27b04f170] = 2;

		*node[0x5dd27b04f1a0] = 3;

		*node[0x5dd27b04f1d0] = ;;

		*node[0x5dd27b04f200] = =;

		*node[0x5dd27b04f230] = 7;

		*node[0x5dd27b04f260] = -;

		*node[0x5dd27b04f290] = 0;

		*node[0x5dd27b04f2c0] = 1;

		*node[0x5dd27b04f2f0] = ;;

		*node[0x5dd27b04f320] = =;

		*node[0x5dd27b04f350] = 8;

		*node[0x5dd27b04f380] = 1;

		*node[0x5dd27b04f3b0] = ;;

		*node[0x5dd27b04f3e0] = =;

		*node[0x5dd27b04f410] = 11;

		*node[0x5dd27b04f440] = 2;

		*node[0x5dd27b04f470] = ;;

		*node[0x5dd27b04f4a0] = if;

		*node[0x5dd27b04f4d0] = op_no;

		*node[0x5dd27b04f500] = ==;

		*node[0x5dd27b04f530] = 3;

		*node[0x5dd27b04f560] = 0;

		*node[0x5dd27b04f590] = ;;

		*node[0x5dd27b04f5c0] = =;

		*node[0x5dd27b04f5f0] = 12;

		*node[0x5dd27b04f620] = 0;

		*node[0x5dd27b04f650] = ;;

		*node[0x5dd27b04f680] = =;

		*node[0x5dd27b04f6b0] = 13;

		*node[0x5dd27b04f6e0] = /;

		*node[0x5dd27b04f710] = -;

		*node[0x5dd27b04f740] = 0;

		*node[0x5dd27b04f770] = 2;

		*node[0x5dd27b04f7a0] = 1;

		*node[0x5dd27b04f7d0] = ;;

		*node[0x5dd27b04f800] = print;

		*node[0x5dd27b04f830] = 11;

		*node[0x5dd27b04f860] = ;;

		*node[0x5dd27b04f890] = print;

		*node[0x5dd27b04f8c0] = 12;

		*node[0x5dd27b04f8f0] = 13;

		*node[0x5dd27b04f920] = else;

		*node[0x5dd27b04f950] = op_no;

		*node[0x5dd27b04f980] = ;;

		*node[0x5dd27b04f9b0] = =;

		*node[0x5dd27b04f9e0] = 14;

		*node[0x5dd27b04fa10] = -;

		*node[0x5dd27b04fa40] = *;

		*node[0x5dd27b04fa70] = 2;

		*node[0x5dd27b04faa0] = 2;

		*node[0x5dd27b04fad0] = *;

		*node[0x5dd27b04fb00] = *;

		*node[0x5dd27b04fb30] = 4;

		*node[0x5dd27b04fb60] = 1;

		*node[0x5dd27b04fb90] = 3;

		*node[0x5dd27b04fbc0] = ;;

		*node[0x5dd27b04fbf0] = if;

		*node[0x5dd27b04fc20] = op_no;

		*node[0x5dd27b04fc50] = >;

		*node[0x5dd27b04fc80] = 14;

		*node[0x5dd27b04fcb0] = 0;

		*node[0x5dd27b04fce0] = ;;

		*node[0x5dd27b04fd10] = =;

		*node[0x5dd27b04fd40] = 15;

		*node[0x5dd27b04fd70] = sqrt;

		*node[0x5dd27b04fda0] = 14;

		*node[0x5dd27b04fdd0] = ;;

		*node[0x5dd27b04fe00] = =;

		*node[0x5dd27b04fe30] = 12;

		*node[0x5dd27b04fe60] = /;

		*node[0x5dd27b04fe90] = -;

		*node[0x5dd27b04fec0] = -;

		*node[0x5dd27b04fef0] = 0;

		*node[0x5dd27b04ff20] = 2;

		*node[0x5dd27b04ff50] = 15;

		*node[0x5dd27b04ff80] = *;

		*node[0x5dd27b04ffb0] = 2;

		*node[0x5dd27b04ffe0] = 1;

		*node[0x5dd27b050010] = ;;

		*node[0x5dd27b050040] = =;

		*node[0x5dd27b050070] = 13;

		*node[0x5dd27b0500a0] = /;

		*node[0x5dd27b0500d0] = +;

		*node[0x5dd27b050100] = -;

		*node[0x5dd27b050130] = 0;

		*node[0x5dd27b050160] = 2;

		*node[0x5dd27b050190] = 15;

		*node[0x5dd27b0501c0] = *;

		*node[0x5dd27b0501f0] = 2;

		*node[0x5dd27b050220] = 1;

		*node[0x5dd27b050250] = ;;

		*node[0x5dd27b050280] = print;

		*node[0x5dd27b0502b0] = 11;

		*node[0x5dd27b0502e0] = ;;

		*node[0x5dd27b050310] = print;

		*node[0x5dd27b050340] = 12;

		*node[0x5dd27b050370] = 13;

		*node[0x5dd27b0503a0] = elseif;

		*node[0x5dd27b0503d0] = op_no;

		*node[0x5dd27b050400] = ==;

		*node[0x5dd27b050430] = 14;

		*node[0x5dd27b050460] = 0;

		*node[0x5dd27b050490] = ;;

		*node[0x5dd27b0504c0] = =;

		*node[0x5dd27b0504f0] = 10;

		*node[0x5dd27b050520] = /;

		*node[0x5dd27b050550] = -;

		*node[0x5dd27b050580] = 0;

		*node[0x5dd27b0505b0] = 2;

		*node[0x5dd27b0505e0] = *;

		*node[0x5dd27b050610] = 2;

		*node[0x5dd27b050640] = 1;

		*node[0x5dd27b050670] = ;;

		*node[0x5dd27b0506a0] = print;

		*node[0x5dd27b0506d0] = 8;

		*node[0x5dd27b050700] = ;;

		*node[0x5dd27b050730] = print;

		*node[0x5dd27b050760] = 10;

		*node[0x5dd27b050790] = else;

		*node[0x5dd27b0507c0] = op_no;

		*node[0x5dd27b0507f0] = ;;

		*node[0x5dd27b050820] = print;

		*node[0x5dd27b050850] = 7;

		*node[0x5dd27b050880] = ;;

		*node[0x5dd27b0508b0] = return;

		*node[0x5dd27b0508e0] = 0;

		*node[0x5dd27b050910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd5b2f2e10] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x58dda8ef0fd0] = ;;

		*node[0x58dda8ef1000] = 0;

		*node[0x58dda8ef1030] = ;;

		*node[0x58dda8ef1060] = input;

		*node[0x58dda8ef1090] = 1;

		*node[0x58dda8ef10c0] = 2;

		*node[0x58dda8ef10f0] = 3;

		*node[0x58dda8ef1120] = ;;

		*node[0x58dda8ef1180] = 1;

		*node[0x58dda8ef11b0] = 2;

		*node[0x58dda8ef11e0] = 3;

		*node[0x58dda8ef1210] = ;;

		*node[0x58dda8ef1240] = 4;

		*node[0x58dda8ef1270] = 1;

		*node[0x58dda8ef12a0] = 2;

		*node[0x58dda8ef12d0] = 3;

		*node[0x58dda8ef1300] = ;;

		*node[0x58dda8ef1330] = if;

		*node[0x58dda8ef1360] = op_no;

		*node[0x58dda8ef1390] = ==;

		*node[0x58dda8ef13c0] = 1;

		*node[0x58dda8ef13f0] = 0;

		*node[0x58dda8ef1420] = ;;

		*node[0x58dda8ef1480] = 2;

		*node[0x58dda8ef14b0] = 3;

		*node[0x58dda8ef14e0] = else;

		*node[0x58dda8ef1510] = op_no;

		*node[0x58dda8ef1540] = ;;

		*node[0x58dda8ef15a0] = 1;

		*node[0x58dda8ef15d0] = 2;

		*node[0x58dda8ef1600] = 3;

		*node[0x58dda8ef1630] = ;;

		*node[0x58dda8ef1660] = 5;

		*node[0x58dda8ef1690] = 1;

		*node[0x58dda8ef16c0] = 2;

		*node[0x58dda8ef16f0] = ;;

		*node[0x58dda8ef1720] = =;

		*node[0x58dda8ef1750] = 7;

		*node[0x58dda8ef1780] = -;

		*node[0x58dda8ef17b0] = 0;

		*node[0x58dda8ef17e0] = 1;

		*node[0x58dda8ef1810] = ;;

		*node[0x58dda8ef1840] = =;

		*node[0x58dda8ef1870] = 8;

		*node[0x58dda8ef18a0] = 1;

		*node[0x58dda8ef18d0] = ;;

		*node[0x58dda8ef1900] = =;

		*node[0x58dda8ef1930] = 9;

		*node[0x58dda8ef1960] = 1000;

		*node[0x58dda8ef1990] = ;;

		*node[0x58dda8ef19c0] = if;

		*node[0x58dda8ef19f0] = op_no;

		*node[0x58dda8ef1a20] = ==;

		*node[0x58dda8ef1a50] = 1;

		*node[0x58dda8ef1a80] = 0;

		*node[0x58dda8ef1ab0] = ;;

		*node[0x58dda8ef1ae0] = if;

		*node[0x58dda8ef1b10] = op_no;

		*node[0x58dda8ef1b40] = ==;

		*node[0x58dda8ef1b70] = 2;

		*node[0x58dda8ef1ba0] = 0;

		*node[0x58dda8ef1bd0] = ;;

		*node[0x58dda8ef1c00] = print;

		*node[0x58dda8ef1c30] = 9;

		*node[0x58dda8ef1c60] = else;

		*node[0x58dda8ef1c90] = op_no;

		*node[0x58dda8ef1cc0] = ;;

		*node[0x58dda8ef1cf0] = print;

		*node[0x58dda8ef1d20] = 7;

		*node[0x58dda8ef1d50] = else;

		*node[0x58dda8ef1d80] = op_no;

		*node[0x58dda8ef1db0] = ;;

		*node[0x58dda8ef1de0] = =;

		*node[0x58dda8ef1e10] = 10;

		*node[0x58dda8ef1e40] = /;

		*node[0x58dda8ef1e70] = -;

		*node[0x58dda8ef1ea0] = 0;

		*node[0x58dda8ef1ed0] = 2;

		*node[0x58dda8ef1f00] = 1;

		*node[0x58dda8ef1f30] = ;;

		*node[0x58dda8ef1f60] = print;

		*node[0x58dda8ef1f90] = 8;

		*node[0x58dda8ef1fc0] = ;;

		*node[0x58dda8ef1ff0] = print;

		*node[0x58dda8ef2020] = 10;

		*node[0x58dda8ef2050] = ;;

		*node[0x58dda8ef2080] = return;

		*node[0x58dda8ef20b0] = 0;

		*node[0x58dda8ef20e0] = ;;

		*node[0x58dda8ef2110] = 6;

		*node[0x58dda8ef2140] = 1;

		*node[0x58dda8ef2170] = 2;

		*node[0x58dda8ef21a0] = 3;

		*node[0x58dda8ef21d0] = ;;

		*node[0x58dda8ef2200] = =;

		*node[0x58dda8ef2230] = 7;

		*node[0x58dda8ef2260] = -;

		*node[0x58dda8ef2290] = 0;

		*node[0x58dda8ef22c0] = 1;

		*node[0x58dda8ef22f0] = ;;

		*node[0x58dda8ef2320] = =;

		*node[0x58dda8ef2350] = 8;

		*node[0x58dda8ef2380] = 1;

		*node[0x58dda8ef23b0] = ;;

		*node[0x58dda8ef23e0] = =;

		*node[0x58dda8ef2410] = 11;

		*node[0x58dda8ef2440] = 2;

		*node[0x58dda8ef2470] = ;;

		*node[0x58dda8ef24a0] = if;

		*node[0x58dda8ef24d0] = op_no;

		*node[0x58dda8ef2500] = ==;

		*node[0x58dda8ef2530] = 3;

		*node[0x58dda8ef2560] = 0;

		*node[0x58dda8ef2590] = ;;

		*node[0x58dda8ef25c0] = =;

		*node[0x58dda8ef25f0] = 12;

		*node[0x58dda8ef2620] = 0;

		*node[0x58dda8ef2650] = ;;

		*node[0x58dda8ef2680] = =;

		*node[0x58dda8ef26b0] = 13;

		*node[0x58dda8ef26e0] = /;

		*node[0x58dda8ef2710] = -;

		*node[0x58dda8ef2740] = 0;

		*node[0x58dda8ef2770] = 2;

		*node[0x58dda8ef27a0] = 1;

		*node[0x58dda8ef27d0] = ;;

		*node[0x58dda8ef2800] = print;

		*node[0x58dda8ef2830] = 11;

		*node[0x58dda8ef2860] = ;;

		*node[0x58dda8ef2890] = print;

		*node[0x58dda8ef28c0] = 12;

		*node[0x58dda8ef28f0] = 13;

		*node[0x58dda8ef2920] = else;

		*node[0x58dda8ef2950] = op_no;

		*node[0x58dda8ef2980] = ;;

		*node[0x58dda8ef29b0] = =;

		*node[0x58dda8ef29e0] = 14;

		*node[0x58dda8ef2a10] = -;

		*node[0x58dda8ef2a40] = *;

		*node[0x58dda8ef2a70] = 2;

		*node[0x58dda8ef2aa0] = 2;

		*node[0x58dda8ef2ad0] = *;

		*node[0x58dda8ef2b00] = *;

		*node[0x58dda8ef2b30] = 4;

		*node[0x58dda8ef2b60] = 1;

		*node[0x58dda8ef2b90] = 3;

		*node[0x58dda8ef2bc0] = ;;

		*node[0x58dda8ef2bf0] = if;

		*node[0x58dda8ef2c20] = op_no;

		*node[0x58dda8ef2c50] = >;

		*node[0x58dda8ef2c80] = 14;

		*node[0x58dda8ef2cb0] = 0;

		*node[0x58dda8ef2ce0] = ;;

		*node[0x58dda8ef2d10] = =;

		*node[0x58dda8ef2d40] = 15;

		*node[0x58dda8ef2d70] = sqrt;

		*node[0x58dda8ef2da0] = 14;

		*node[0x58dda8ef2dd0] = ;;

		*node[0x58dda8ef2e00] = =;

		*node[0x58dda8ef2e30] = 12;

		*node[0x58dda8ef2e60] = /;

		*node[0x58dda8ef2e90] = -;

		*node[0x58dda8ef2ec0] = -;

		*node[0x58dda8ef2ef0] = 0;

		*node[0x58dda8ef2f20] = 2;

		*node[0x58dda8ef2f50] = 15;

		*node[0x58dda8ef2f80] = *;

		*node[0x58dda8ef2fb0] = 2;

		*node[0x58dda8ef2fe0] = 1;

		*node[0x58dda8ef3010] = ;;

		*node[0x58dda8ef3040] = =;

		*node[0x58dda8ef3070] = 13;

		*node[0x58dda8ef30a0] = /;

		*node[0x58dda8ef30d0] = +;

		*node[0x58dda8ef3100] = -;

		*node[0x58dda8ef3130] = 0;

		*node[0x58dda8ef3160] = 2;

		*node[0x58dda8ef3190] = 15;

		*node[0x58dda8ef31c0] = *;

		*node[0x58dda8ef31f0] = 2;

		*node[0x58dda8ef3220] = 1;

		*node[0x58dda8ef3250] = ;;

		*node[0x58dda8ef3280] = print;

		*node[0x58dda8ef32b0] = 11;

		*node[0x58dda8ef32e0] = ;;

		*node[0x58dda8ef3310] = print;

		*node[0x58dda8ef3340] = 12;

		*node[0x58dda8ef3370] = 13;

		*node[0x58dda8ef33a0] = elseif;

		*node[0x58dda8ef33d0] = op_no;

		*node[0x58dda8ef3400] = ==;

		*node[0x58dda8ef3430] = 14;

		*node[0x58dda8ef3460] = 0;

		*node[0x58dda8ef3490] = ;;

		*node[0x58dda8ef34c0] = =;

		*node[0x58dda8ef34f0] = 10;

		*node[0x58dda8ef3520] = /;

		*node[0x58dda8ef3550] = -;

		*node[0x58dda8ef3580] = 0;

		*node[0x58dda8ef35b0] = 2;

		*node[0x58dda8ef35e0] = *;

		*node[0x58dda8ef3610] = 2;

		*node[0x58dda8ef3640] = 1;

		*node[0x58dda8ef3670] = ;;

		*node[0x58dda8ef36a0] = print;

		*node[0x58dda8ef36d0] = 8;

		*node[0x58dda8ef3700] = ;;

		*node[0x58dda8ef3730] = print;

		*node[0x58dda8ef3760] = 10;

		*node[0x58dda8ef3790] = else;

		*node[0x58dda8ef37c0] = op_no;

		*node[0x58dda8ef37f0] = ;;

		*node[0x58dda8ef3820] = print;

		*node[0x58dda8ef3850] = 7;

		*node[0x58dda8ef3880] = ;;

		*node[0x58dda8ef38b0] = return;

		*node[0x58dda8ef38e0] = 0;

		*node[0x58dda8ef3910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffed22f54f0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x578d2c15cfd0] = ;;

		*node[0x578d2c15d000] = 0;

		*node[0x578d2c15d030] = ;;

		*node[0x578d2c15d060] = input;

		*node[0x578d2c15d090] = 1;

		*node[0x578d2c15d0c0] = 2;

		*node[0x578d2c15d0f0] = 3;

		*node[0x578d2c15d120] = ;;

		*node[0x578d2c15d180] = 1;

		*node[0x578d2c15d1b0] = 2;

		*node[0x578d2c15d1e0] = 3;

		*node[0x578d2c15d210] = ;;

		*node[0x578d2c15d240] = 4;

		*node[0x578d2c15d270] = 1;

		*node[0x578d2c15d2a0] = 2;

		*node[0x578d2c15d2d0] = 3;

		*node[0x578d2c15d300] = ;;

		*node[0x578d2c15d330] = if;

		*node[0x578d2c15d360] = op_no;

		*node[0x578d2c15d390] = ==;

		*node[0x578d2c15d3c0] = 1;

		*node[0x578d2c15d3f0] = 0;

		*node[0x578d2c15d420] = ;;

		*node[0x578d2c15d480] = 2;

		*node[0x578d2c15d4b0] = 3;

		*node[0x578d2c15d4e0] = else;

		*node[0x578d2c15d510] = op_no;

		*node[0x578d2c15d540] = ;;

		*node[0x578d2c15d5a0] = 1;

		*node[0x578d2c15d5d0] = 2;

		*node[0x578d2c15d600] = 3;

		*node[0x578d2c15d630] = ;;

		*node[0x578d2c15d660] = 5;

		*node[0x578d2c15d690] = 1;

		*node[0x578d2c15d6c0] = 2;

		*node[0x578d2c15d6f0] = ;;

		*node[0x578d2c15d720] = =;

		*node[0x578d2c15d750] = 7;

		*node[0x578d2c15d780] = -;

		*node[0x578d2c15d7b0] = 0;

		*node[0x578d2c15d7e0] = 1;

		*node[0x578d2c15d810] = ;;

		*node[0x578d2c15d840] = =;

		*node[0x578d2c15d870] = 8;

		*node[0x578d2c15d8a0] = 1;

		*node[0x578d2c15d8d0] = ;;

		*node[0x578d2c15d900] = =;

		*node[0x578d2c15d930] = 9;

		*node[0x578d2c15d960] = 1000;

		*node[0x578d2c15d990] = ;;

		*node[0x578d2c15d9c0] = if;

		*node[0x578d2c15d9f0] = op_no;

		*node[0x578d2c15da20] = ==;

		*node[0x578d2c15da50] = 1;

		*node[0x578d2c15da80] = 0;

		*node[0x578d2c15dab0] = ;;

		*node[0x578d2c15dae0] = if;

		*node[0x578d2c15db10] = op_no;

		*node[0x578d2c15db40] = ==;

		*node[0x578d2c15db70] = 2;

		*node[0x578d2c15dba0] = 0;

		*node[0x578d2c15dbd0] = ;;

		*node[0x578d2c15dc00] = print;

		*node[0x578d2c15dc30] = 9;

		*node[0x578d2c15dc60] = else;

		*node[0x578d2c15dc90] = op_no;

		*node[0x578d2c15dcc0] = ;;

		*node[0x578d2c15dcf0] = print;

		*node[0x578d2c15dd20] = 7;

		*node[0x578d2c15dd50] = else;

		*node[0x578d2c15dd80] = op_no;

		*node[0x578d2c15ddb0] = ;;

		*node[0x578d2c15dde0] = =;

		*node[0x578d2c15de10] = 10;

		*node[0x578d2c15de40] = /;

		*node[0x578d2c15de70] = -;

		*node[0x578d2c15dea0] = 0;

		*node[0x578d2c15ded0] = 2;

		*node[0x578d2c15df00] = 1;

		*node[0x578d2c15df30] = ;;

		*node[0x578d2c15df60] = print;

		*node[0x578d2c15df90] = 8;

		*node[0x578d2c15dfc0] = ;;

		*node[0x578d2c15dff0] = print;

		*node[0x578d2c15e020] = 10;

		*node[0x578d2c15e050] = ;;

		*node[0x578d2c15e080] = return;

		*node[0x578d2c15e0b0] = 0;

		*node[0x578d2c15e0e0] = ;;

		*node[0x578d2c15e110] = 6;

		*node[0x578d2c15e140] = 1;

		*node[0x578d2c15e170] = 2;

		*node[0x578d2c15e1a0] = 3;

		*node[0x578d2c15e1d0] = ;;

		*node[0x578d2c15e200] = =;

		*node[0x578d2c15e230] = 7;

		*node[0x578d2c15e260] = -;

		*node[0x578d2c15e290] = 0;

		*node[0x578d2c15e2c0] = 1;

		*node[0x578d2c15e2f0] = ;;

		*node[0x578d2c15e320] = =;

		*node[0x578d2c15e350] = 8;

		*node[0x578d2c15e380] = 1;

		*node[0x578d2c15e3b0] = ;;

		*node[0x578d2c15e3e0] = =;

		*node[0x578d2c15e410] = 11;

		*node[0x578d2c15e440] = 2;

		*node[0x578d2c15e470] = ;;

		*node[0x578d2c15e4a0] = if;

		*node[0x578d2c15e4d0] = op_no;

		*node[0x578d2c15e500] = ==;

		*node[0x578d2c15e530] = 3;

		*node[0x578d2c15e560] = 0;

		*node[0x578d2c15e590] = ;;

		*node[0x578d2c15e5c0] = =;

		*node[0x578d2c15e5f0] = 12;

		*node[0x578d2c15e620] = 0;

		*node[0x578d2c15e650] = ;;

		*node[0x578d2c15e680] = =;

		*node[0x578d2c15e6b0] = 13;

		*node[0x578d2c15e6e0] = /;

		*node[0x578d2c15e710] = -;

		*node[0x578d2c15e740] = 0;

		*node[0x578d2c15e770] = 2;

		*node[0x578d2c15e7a0] = 1;

		*node[0x578d2c15e7d0] = ;;

		*node[0x578d2c15e800] = print;

		*node[0x578d2c15e830] = 11;

		*node[0x578d2c15e860] = ;;

		*node[0x578d2c15e890] = print;

		*node[0x578d2c15e8c0] = 12;

		*node[0x578d2c15e8f0] = 13;

		*node[0x578d2c15e920] = else;

		*node[0x578d2c15e950] = op_no;

		*node[0x578d2c15e980] = ;;

		*node[0x578d2c15e9b0] = =;

		*node[0x578d2c15e9e0] = 14;

		*node[0x578d2c15ea10] = -;

		*node[0x578d2c15ea40] = *;

		*node[0x578d2c15ea70] = 2;

		*node[0x578d2c15eaa0] = 2;

		*node[0x578d2c15ead0] = *;

		*node[0x578d2c15eb00] = *;

		*node[0x578d2c15eb30] = 4;

		*node[0x578d2c15eb60] = 1;

		*node[0x578d2c15eb90] = 3;

		*node[0x578d2c15ebc0] = ;;

		*node[0x578d2c15ebf0] = if;

		*node[0x578d2c15ec20] = op_no;

		*node[0x578d2c15ec50] = >;

		*node[0x578d2c15ec80] = 14;

		*node[0x578d2c15ecb0] = 0;

		*node[0x578d2c15ece0] = ;;

		*node[0x578d2c15ed10] = =;

		*node[0x578d2c15ed40] = 15;

		*node[0x578d2c15ed70] = sqrt;

		*node[0x578d2c15eda0] = 14;

		*node[0x578d2c15edd0] = ;;

		*node[0x578d2c15ee00] = =;

		*node[0x578d2c15ee30] = 12;

		*node[0x578d2c15ee60] = /;

		*node[0x578d2c15ee90] = -;

		*node[0x578d2c15eec0] = -;

		*node[0x578d2c15eef0] = 0;

		*node[0x578d2c15ef20] = 2;

		*node[0x578d2c15ef50] = 15;

		*node[0x578d2c15ef80] = *;

		*node[0x578d2c15efb0] = 2;

		*node[0x578d2c15efe0] = 1;

		*node[0x578d2c15f010] = ;;

		*node[0x578d2c15f040] = =;

		*node[0x578d2c15f070] = 13;

		*node[0x578d2c15f0a0] = /;

		*node[0x578d2c15f0d0] = +;

		*node[0x578d2c15f100] = -;

		*node[0x578d2c15f130] = 0;

		*node[0x578d2c15f160] = 2;

		*node[0x578d2c15f190] = 15;

		*node[0x578d2c15f1c0] = *;

		*node[0x578d2c15f1f0] = 2;

		*node[0x578d2c15f220] = 1;

		*node[0x578d2c15f250] = ;;

		*node[0x578d2c15f280] = print;

		*node[0x578d2c15f2b0] = 11;

		*node[0x578d2c15f2e0] = ;;

		*node[0x578d2c15f310] = print;

		*node[0x578d2c15f340] = 12;

		*node[0x578d2c15f370] = 13;

		*node[0x578d2c15f3a0] = elseif;

		*node[0x578d2c15f3d0] = op_no;

		*node[0x578d2c15f400] = ==;

		*node[0x578d2c15f430] = 14;

		*node[0x578d2c15f460] = 0;

		*node[0x578d2c15f490] = ;;

		*node[0x578d2c15f4c0] = =;

		*node[0x578d2c15f4f0] = 10;

		*node[0x578d2c15f520] = /;

		*node[0x578d2c15f550] = -;

		*node[0x578d2c15f580] = 0;

		*node[0x578d2c15f5b0] = 2;

		*node[0x578d2c15f5e0] = *;

		*node[0x578d2c15f610] = 2;

		*node[0x578d2c15f640] = 1;

		*node[0x578d2c15f670] = ;;

		*node[0x578d2c15f6a0] = print;

		*node[0x578d2c15f6d0] = 8;

		*node[0x578d2c15f700] = ;;

		*node[0x578d2c15f730] = print;

		*node[0x578d2c15f760] = 10;

		*node[0x578d2c15f790] = else;

		*node[0x578d2c15f7c0] = op_no;

		*node[0x578d2c15f7f0] = ;;

		*node[0x578d2c15f820] = print;

		*node[0x578d2c15f850] = 7;

		*node[0x578d2c15f880] = ;;

		*node[0x578d2c15f8b0] = return;

		*node[0x578d2c15f8e0] = 0;

		*node[0x578d2c15f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe2671a820] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x6015e13a9fd0] = ;;

		*node[0x6015e13aa000] = 0;

		*node[0x6015e13aa030] = ;;

		*node[0x6015e13aa060] = input;

		*node[0x6015e13aa090] = 1;

		*node[0x6015e13aa0c0] = 2;

		*node[0x6015e13aa0f0] = 3;

		*node[0x6015e13aa120] = ;;

		*node[0x6015e13aa180] = 1;

		*node[0x6015e13aa1b0] = 2;

		*node[0x6015e13aa1e0] = 3;

		*node[0x6015e13aa210] = ;;

		*node[0x6015e13aa240] = 4;

		*node[0x6015e13aa270] = 1;

		*node[0x6015e13aa2a0] = 2;

		*node[0x6015e13aa2d0] = 3;

		*node[0x6015e13aa300] = ;;

		*node[0x6015e13aa330] = if;

		*node[0x6015e13aa360] = op_no;

		*node[0x6015e13aa390] = ==;

		*node[0x6015e13aa3c0] = 1;

		*node[0x6015e13aa3f0] = 0;

		*node[0x6015e13aa420] = ;;

		*node[0x6015e13aa480] = 2;

		*node[0x6015e13aa4b0] = 3;

		*node[0x6015e13aa4e0] = else;

		*node[0x6015e13aa510] = op_no;

		*node[0x6015e13aa540] = ;;

		*node[0x6015e13aa5a0] = 1;

		*node[0x6015e13aa5d0] = 2;

		*node[0x6015e13aa600] = 3;

		*node[0x6015e13aa630] = ;;

		*node[0x6015e13aa660] = 5;

		*node[0x6015e13aa690] = 1;

		*node[0x6015e13aa6c0] = 2;

		*node[0x6015e13aa6f0] = ;;

		*node[0x6015e13aa720] = =;

		*node[0x6015e13aa750] = 7;

		*node[0x6015e13aa780] = -;

		*node[0x6015e13aa7b0] = 0;

		*node[0x6015e13aa7e0] = 1;

		*node[0x6015e13aa810] = ;;

		*node[0x6015e13aa840] = =;

		*node[0x6015e13aa870] = 8;

		*node[0x6015e13aa8a0] = 1;

		*node[0x6015e13aa8d0] = ;;

		*node[0x6015e13aa900] = =;

		*node[0x6015e13aa930] = 9;

		*node[0x6015e13aa960] = 1000;

		*node[0x6015e13aa990] = ;;

		*node[0x6015e13aa9c0] = if;

		*node[0x6015e13aa9f0] = op_no;

		*node[0x6015e13aaa20] = ==;

		*node[0x6015e13aaa50] = 1;

		*node[0x6015e13aaa80] = 0;

		*node[0x6015e13aaab0] = ;;

		*node[0x6015e13aaae0] = if;

		*node[0x6015e13aab10] = op_no;

		*node[0x6015e13aab40] = ==;

		*node[0x6015e13aab70] = 2;

		*node[0x6015e13aaba0] = 0;

		*node[0x6015e13aabd0] = ;;

		*node[0x6015e13aac00] = print;

		*node[0x6015e13aac30] = 9;

		*node[0x6015e13aac60] = else;

		*node[0x6015e13aac90] = op_no;

		*node[0x6015e13aacc0] = ;;

		*node[0x6015e13aacf0] = print;

		*node[0x6015e13aad20] = 7;

		*node[0x6015e13aad50] = else;

		*node[0x6015e13aad80] = op_no;

		*node[0x6015e13aadb0] = ;;

		*node[0x6015e13aade0] = =;

		*node[0x6015e13aae10] = 10;

		*node[0x6015e13aae40] = /;

		*node[0x6015e13aae70] = -;

		*node[0x6015e13aaea0] = 0;

		*node[0x6015e13aaed0] = 2;

		*node[0x6015e13aaf00] = 1;

		*node[0x6015e13aaf30] = ;;

		*node[0x6015e13aaf60] = print;

		*node[0x6015e13aaf90] = 8;

		*node[0x6015e13aafc0] = ;;

		*node[0x6015e13aaff0] = print;

		*node[0x6015e13ab020] = 10;

		*node[0x6015e13ab050] = ;;

		*node[0x6015e13ab080] = return;

		*node[0x6015e13ab0b0] = 0;

		*node[0x6015e13ab0e0] = ;;

		*node[0x6015e13ab110] = 6;

		*node[0x6015e13ab140] = 1;

		*node[0x6015e13ab170] = 2;

		*node[0x6015e13ab1a0] = 3;

		*node[0x6015e13ab1d0] = ;;

		*node[0x6015e13ab200] = =;

		*node[0x6015e13ab230] = 7;

		*node[0x6015e13ab260] = -;

		*node[0x6015e13ab290] = 0;

		*node[0x6015e13ab2c0] = 1;

		*node[0x6015e13ab2f0] = ;;

		*node[0x6015e13ab320] = =;

		*node[0x6015e13ab350] = 8;

		*node[0x6015e13ab380] = 1;

		*node[0x6015e13ab3b0] = ;;

		*node[0x6015e13ab3e0] = =;

		*node[0x6015e13ab410] = 11;

		*node[0x6015e13ab440] = 2;

		*node[0x6015e13ab470] = ;;

		*node[0x6015e13ab4a0] = if;

		*node[0x6015e13ab4d0] = op_no;

		*node[0x6015e13ab500] = ==;

		*node[0x6015e13ab530] = 3;

		*node[0x6015e13ab560] = 0;

		*node[0x6015e13ab590] = ;;

		*node[0x6015e13ab5c0] = =;

		*node[0x6015e13ab5f0] = 12;

		*node[0x6015e13ab620] = 0;

		*node[0x6015e13ab650] = ;;

		*node[0x6015e13ab680] = =;

		*node[0x6015e13ab6b0] = 13;

		*node[0x6015e13ab6e0] = /;

		*node[0x6015e13ab710] = -;

		*node[0x6015e13ab740] = 0;

		*node[0x6015e13ab770] = 2;

		*node[0x6015e13ab7a0] = 1;

		*node[0x6015e13ab7d0] = ;;

		*node[0x6015e13ab800] = print;

		*node[0x6015e13ab830] = 11;

		*node[0x6015e13ab860] = ;;

		*node[0x6015e13ab890] = print;

		*node[0x6015e13ab8c0] = 12;

		*node[0x6015e13ab8f0] = 13;

		*node[0x6015e13ab920] = else;

		*node[0x6015e13ab950] = op_no;

		*node[0x6015e13ab980] = ;;

		*node[0x6015e13ab9b0] = =;

		*node[0x6015e13ab9e0] = 14;

		*node[0x6015e13aba10] = -;

		*node[0x6015e13aba40] = *;

		*node[0x6015e13aba70] = 2;

		*node[0x6015e13abaa0] = 2;

		*node[0x6015e13abad0] = *;

		*node[0x6015e13abb00] = *;

		*node[0x6015e13abb30] = 4;

		*node[0x6015e13abb60] = 1;

		*node[0x6015e13abb90] = 3;

		*node[0x6015e13abbc0] = ;;

		*node[0x6015e13abbf0] = if;

		*node[0x6015e13abc20] = op_no;

		*node[0x6015e13abc50] = >;

		*node[0x6015e13abc80] = 14;

		*node[0x6015e13abcb0] = 0;

		*node[0x6015e13abce0] = ;;

		*node[0x6015e13abd10] = =;

		*node[0x6015e13abd40] = 15;

		*node[0x6015e13abd70] = sqrt;

		*node[0x6015e13abda0] = 14;

		*node[0x6015e13abdd0] = ;;

		*node[0x6015e13abe00] = =;

		*node[0x6015e13abe30] = 12;

		*node[0x6015e13abe60] = /;

		*node[0x6015e13abe90] = -;

		*node[0x6015e13abec0] = -;

		*node[0x6015e13abef0] = 0;

		*node[0x6015e13abf20] = 2;

		*node[0x6015e13abf50] = 15;

		*node[0x6015e13abf80] = *;

		*node[0x6015e13abfb0] = 2;

		*node[0x6015e13abfe0] = 1;

		*node[0x6015e13ac010] = ;;

		*node[0x6015e13ac040] = =;

		*node[0x6015e13ac070] = 13;

		*node[0x6015e13ac0a0] = /;

		*node[0x6015e13ac0d0] = +;

		*node[0x6015e13ac100] = -;

		*node[0x6015e13ac130] = 0;

		*node[0x6015e13ac160] = 2;

		*node[0x6015e13ac190] = 15;

		*node[0x6015e13ac1c0] = *;

		*node[0x6015e13ac1f0] = 2;

		*node[0x6015e13ac220] = 1;

		*node[0x6015e13ac250] = ;;

		*node[0x6015e13ac280] = print;

		*node[0x6015e13ac2b0] = 11;

		*node[0x6015e13ac2e0] = ;;

		*node[0x6015e13ac310] = print;

		*node[0x6015e13ac340] = 12;

		*node[0x6015e13ac370] = 13;

		*node[0x6015e13ac3a0] = elseif;

		*node[0x6015e13ac3d0] = op_no;

		*node[0x6015e13ac400] = ==;

		*node[0x6015e13ac430] = 14;

		*node[0x6015e13ac460] = 0;

		*node[0x6015e13ac490] = ;;

		*node[0x6015e13ac4c0] = =;

		*node[0x6015e13ac4f0] = 10;

		*node[0x6015e13ac520] = /;

		*node[0x6015e13ac550] = -;

		*node[0x6015e13ac580] = 0;

		*node[0x6015e13ac5b0] = 2;

		*node[0x6015e13ac5e0] = *;

		*node[0x6015e13ac610] = 2;

		*node[0x6015e13ac640] = 1;

		*node[0x6015e13ac670] = ;;

		*node[0x6015e13ac6a0] = print;

		*node[0x6015e13ac6d0] = 8;

		*node[0x6015e13ac700] = ;;

		*node[0x6015e13ac730] = print;

		*node[0x6015e13ac760] = 10;

		*node[0x6015e13ac790] = else;

		*node[0x6015e13ac7c0] = op_no;

		*node[0x6015e13ac7f0] = ;;

		*node[0x6015e13ac820] = print;

		*node[0x6015e13ac850] = 7;

		*node[0x6015e13ac880] = ;;

		*node[0x6015e13ac8b0] = return;

		*node[0x6015e13ac8e0] = 0;

		*node[0x6015e13ac910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffdfaff5850] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x581bb1555fd0] = ;;

		*node[0x581bb1556000] = 0;

		*node[0x581bb1556030] = ;;

		*node[0x581bb1556060] = input;

		*node[0x581bb1556090] = 1;

		*node[0x581bb15560c0] = 2;

		*node[0x581bb15560f0] = 3;

		*node[0x581bb1556120] = ;;

		*node[0x581bb1556180] = 1;

		*node[0x581bb15561b0] = 2;

		*node[0x581bb15561e0] = 3;

		*node[0x581bb1556210] = ;;

		*node[0x581bb1556240] = 4;

		*node[0x581bb1556270] = 1;

		*node[0x581bb15562a0] = 2;

		*node[0x581bb15562d0] = 3;

		*node[0x581bb1556300] = ;;

		*node[0x581bb1556330] = if;

		*node[0x581bb1556360] = op_no;

		*node[0x581bb1556390] = ==;

		*node[0x581bb15563c0] = 1;

		*node[0x581bb15563f0] = 0;

		*node[0x581bb1556420] = ;;

		*node[0x581bb1556480] = 2;

		*node[0x581bb15564b0] = 3;

		*node[0x581bb15564e0] = else;

		*node[0x581bb1556510] = op_no;

		*node[0x581bb1556540] = ;;

		*node[0x581bb15565a0] = 1;

		*node[0x581bb15565d0] = 2;

		*node[0x581bb1556600] = 3;

		*node[0x581bb1556630] = ;;

		*node[0x581bb1556660] = 5;

		*node[0x581bb1556690] = 1;

		*node[0x581bb15566c0] = 2;

		*node[0x581bb15566f0] = ;;

		*node[0x581bb1556720] = =;

		*node[0x581bb1556750] = 7;

		*node[0x581bb1556780] = -;

		*node[0x581bb15567b0] = 0;

		*node[0x581bb15567e0] = 1;

		*node[0x581bb1556810] = ;;

		*node[0x581bb1556840] = =;

		*node[0x581bb1556870] = 8;

		*node[0x581bb15568a0] = 1;

		*node[0x581bb15568d0] = ;;

		*node[0x581bb1556900] = =;

		*node[0x581bb1556930] = 9;

		*node[0x581bb1556960] = 1000;

		*node[0x581bb1556990] = ;;

		*node[0x581bb15569c0] = if;

		*node[0x581bb15569f0] = op_no;

		*node[0x581bb1556a20] = ==;

		*node[0x581bb1556a50] = 1;

		*node[0x581bb1556a80] = 0;

		*node[0x581bb1556ab0] = ;;

		*node[0x581bb1556ae0] = if;

		*node[0x581bb1556b10] = op_no;

		*node[0x581bb1556b40] = ==;

		*node[0x581bb1556b70] = 2;

		*node[0x581bb1556ba0] = 0;

		*node[0x581bb1556bd0] = ;;

		*node[0x581bb1556c00] = print;

		*node[0x581bb1556c30] = 9;

		*node[0x581bb1556c60] = else;

		*node[0x581bb1556c90] = op_no;

		*node[0x581bb1556cc0] = ;;

		*node[0x581bb1556cf0] = print;

		*node[0x581bb1556d20] = 7;

		*node[0x581bb1556d50] = else;

		*node[0x581bb1556d80] = op_no;

		*node[0x581bb1556db0] = ;;

		*node[0x581bb1556de0] = =;

		*node[0x581bb1556e10] = 10;

		*node[0x581bb1556e40] = /;

		*node[0x581bb1556e70] = -;

		*node[0x581bb1556ea0] = 0;

		*node[0x581bb1556ed0] = 2;

		*node[0x581bb1556f00] = 1;

		*node[0x581bb1556f30] = ;;

		*node[0x581bb1556f60] = print;

		*node[0x581bb1556f90] = 8;

		*node[0x581bb1556fc0] = ;;

		*node[0x581bb1556ff0] = print;

		*node[0x581bb1557020] = 10;

		*node[0x581bb1557050] = ;;

		*node[0x581bb1557080] = return;

		*node[0x581bb15570b0] = 0;

		*node[0x581bb15570e0] = ;;

		*node[0x581bb1557110] = 6;

		*node[0x581bb1557140] = 1;

		*node[0x581bb1557170] = 2;

		*node[0x581bb15571a0] = 3;

		*node[0x581bb15571d0] = ;;

		*node[0x581bb1557200] = =;

		*node[0x581bb1557230] = 7;

		*node[0x581bb1557260] = -;

		*node[0x581bb1557290] = 0;

		*node[0x581bb15572c0] = 1;

		*node[0x581bb15572f0] = ;;

		*node[0x581bb1557320] = =;

		*node[0x581bb1557350] = 8;

		*node[0x581bb1557380] = 1;

		*node[0x581bb15573b0] = ;;

		*node[0x581bb15573e0] = =;

		*node[0x581bb1557410] = 11;

		*node[0x581bb1557440] = 2;

		*node[0x581bb1557470] = ;;

		*node[0x581bb15574a0] = if;

		*node[0x581bb15574d0] = op_no;

		*node[0x581bb1557500] = ==;

		*node[0x581bb1557530] = 3;

		*node[0x581bb1557560] = 0;

		*node[0x581bb1557590] = ;;

		*node[0x581bb15575c0] = =;

		*node[0x581bb15575f0] = 12;

		*node[0x581bb1557620] = 0;

		*node[0x581bb1557650] = ;;

		*node[0x581bb1557680] = =;

		*node[0x581bb15576b0] = 13;

		*node[0x581bb15576e0] = /;

		*node[0x581bb1557710] = -;

		*node[0x581bb1557740] = 0;

		*node[0x581bb1557770] = 2;

		*node[0x581bb15577a0] = 1;

		*node[0x581bb15577d0] = ;;

		*node[0x581bb1557800] = print;

		*node[0x581bb1557830] = 11;

		*node[0x581bb1557860] = ;;

		*node[0x581bb1557890] = print;

		*node[0x581bb15578c0] = 12;

		*node[0x581bb15578f0] = 13;

		*node[0x581bb1557920] = else;

		*node[0x581bb1557950] = op_no;

		*node[0x581bb1557980] = ;;

		*node[0x581bb15579b0] = =;

		*node[0x581bb15579e0] = 14;

		*node[0x581bb1557a10] = -;

		*node[0x581bb1557a40] = *;

		*node[0x581bb1557a70] = 2;

		*node[0x581bb1557aa0] = 2;

		*node[0x581bb1557ad0] = *;

		*node[0x581bb1557b00] = *;

		*node[0x581bb1557b30] = 4;

		*node[0x581bb1557b60] = 1;

		*node[0x581bb1557b90] = 3;

		*node[0x581bb1557bc0] = ;;

		*node[0x581bb1557bf0] = if;

		*node[0x581bb1557c20] = op_no;

		*node[0x581bb1557c50] = >;

		*node[0x581bb1557c80] = 14;

		*node[0x581bb1557cb0] = 0;

		*node[0x581bb1557ce0] = ;;

		*node[0x581bb1557d10] = =;

		*node[0x581bb1557d40] = 15;

		*node[0x581bb1557d70] = sqrt;

		*node[0x581bb1557da0] = 14;

		*node[0x581bb1557dd0] = ;;

		*node[0x581bb1557e00] = =;

		*node[0x581bb1557e30] = 12;

		*node[0x581bb1557e60] = /;

		*node[0x581bb1557e90] = -;

		*node[0x581bb1557ec0] = -;

		*node[0x581bb1557ef0] = 0;

		*node[0x581bb1557f20] = 2;

		*node[0x581bb1557f50] = 15;

		*node[0x581bb1557f80] = *;

		*node[0x581bb1557fb0] = 2;

		*node[0x581bb1557fe0] = 1;

		*node[0x581bb1558010] = ;;

		*node[0x581bb1558040] = =;

		*node[0x581bb1558070] = 13;

		*node[0x581bb15580a0] = /;

		*node[0x581bb15580d0] = +;

		*node[0x581bb1558100] = -;

		*node[0x581bb1558130] = 0;

		*node[0x581bb1558160] = 2;

		*node[0x581bb1558190] = 15;

		*node[0x581bb15581c0] = *;

		*node[0x581bb15581f0] = 2;

		*node[0x581bb1558220] = 1;

		*node[0x581bb1558250] = ;;

		*node[0x581bb1558280] = print;

		*node[0x581bb15582b0] = 11;

		*node[0x581bb15582e0] = ;;

		*node[0x581bb1558310] = print;

		*node[0x581bb1558340] = 12;

		*node[0x581bb1558370] = 13;

		*node[0x581bb15583a0] = elseif;

		*node[0x581bb15583d0] = op_no;

		*node[0x581bb1558400] = ==;

		*node[0x581bb1558430] = 14;

		*node[0x581bb1558460] = 0;

		*node[0x581bb1558490] = ;;

		*node[0x581bb15584c0] = =;

		*node[0x581bb15584f0] = 10;

		*node[0x581bb1558520] = /;

		*node[0x581bb1558550] = -;

		*node[0x581bb1558580] = 0;

		*node[0x581bb15585b0] = 2;

		*node[0x581bb15585e0] = *;

		*node[0x581bb1558610] = 2;

		*node[0x581bb1558640] = 1;

		*node[0x581bb1558670] = ;;

		*node[0x581bb15586a0] = print;

		*node[0x581bb15586d0] = 8;

		*node[0x581bb1558700] = ;;

		*node[0x581bb1558730] = print;

		*node[0x581bb1558760] = 10;

		*node[0x581bb1558790] = else;

		*node[0x581bb15587c0] = op_no;

		*node[0x581bb15587f0] = ;;

		*node[0x581bb1558820] = print;

		*node[0x581bb1558850] = 7;

		*node[0x581bb1558880] = ;;

		*node[0x581bb15588b0] = return;

		*node[0x581bb15588e0] = 0;

		*node[0x581bb1558910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff1a034750] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x64cbde192fd0] = ;;

		*node[0x64cbde193000] = 0;

		*node[0x64cbde193030] = ;;

		*node[0x64cbde193060] = input;

		*node[0x64cbde193090] = 1;

		*node[0x64cbde1930c0] = 2;

		*node[0x64cbde1930f0] = 3;

		*node[0x64cbde193120] = ;;

		*node[0x64cbde193180] = 1;

		*node[0x64cbde1931b0] = 2;

		*node[0x64cbde1931e0] = 3;

		*node[0x64cbde193210] = ;;

		*node[0x64cbde193240] = 4;

		*node[0x64cbde193270] = 1;

		*node[0x64cbde1932a0] = 2;

		*node[0x64cbde1932d0] = 3;

		*node[0x64cbde193300] = ;;

		*node[0x64cbde193330] = if;

		*node[0x64cbde193360] = op_no;

		*node[0x64cbde193390] = ==;

		*node[0x64cbde1933c0] = 1;

		*node[0x64cbde1933f0] = 0;

		*node[0x64cbde193420] = ;;

		*node[0x64cbde193480] = 2;

		*node[0x64cbde1934b0] = 3;

		*node[0x64cbde1934e0] = else;

		*node[0x64cbde193510] = op_no;

		*node[0x64cbde193540] = ;;

		*node[0x64cbde1935a0] = 1;

		*node[0x64cbde1935d0] = 2;

		*node[0x64cbde193600] = 3;

		*node[0x64cbde193630] = ;;

		*node[0x64cbde193660] = 5;

		*node[0x64cbde193690] = 1;

		*node[0x64cbde1936c0] = 2;

		*node[0x64cbde1936f0] = ;;

		*node[0x64cbde193720] = =;

		*node[0x64cbde193750] = 7;

		*node[0x64cbde193780] = -;

		*node[0x64cbde1937b0] = 0;

		*node[0x64cbde1937e0] = 1;

		*node[0x64cbde193810] = ;;

		*node[0x64cbde193840] = =;

		*node[0x64cbde193870] = 8;

		*node[0x64cbde1938a0] = 1;

		*node[0x64cbde1938d0] = ;;

		*node[0x64cbde193900] = =;

		*node[0x64cbde193930] = 9;

		*node[0x64cbde193960] = 1000;

		*node[0x64cbde193990] = ;;

		*node[0x64cbde1939c0] = if;

		*node[0x64cbde1939f0] = op_no;

		*node[0x64cbde193a20] = ==;

		*node[0x64cbde193a50] = 1;

		*node[0x64cbde193a80] = 0;

		*node[0x64cbde193ab0] = ;;

		*node[0x64cbde193ae0] = if;

		*node[0x64cbde193b10] = op_no;

		*node[0x64cbde193b40] = ==;

		*node[0x64cbde193b70] = 2;

		*node[0x64cbde193ba0] = 0;

		*node[0x64cbde193bd0] = ;;

		*node[0x64cbde193c00] = print;

		*node[0x64cbde193c30] = 9;

		*node[0x64cbde193c60] = else;

		*node[0x64cbde193c90] = op_no;

		*node[0x64cbde193cc0] = ;;

		*node[0x64cbde193cf0] = print;

		*node[0x64cbde193d20] = 7;

		*node[0x64cbde193d50] = else;

		*node[0x64cbde193d80] = op_no;

		*node[0x64cbde193db0] = ;;

		*node[0x64cbde193de0] = =;

		*node[0x64cbde193e10] = 10;

		*node[0x64cbde193e40] = /;

		*node[0x64cbde193e70] = -;

		*node[0x64cbde193ea0] = 0;

		*node[0x64cbde193ed0] = 2;

		*node[0x64cbde193f00] = 1;

		*node[0x64cbde193f30] = ;;

		*node[0x64cbde193f60] = print;

		*node[0x64cbde193f90] = 8;

		*node[0x64cbde193fc0] = ;;

		*node[0x64cbde193ff0] = print;

		*node[0x64cbde194020] = 10;

		*node[0x64cbde194050] = ;;

		*node[0x64cbde194080] = return;

		*node[0x64cbde1940b0] = 0;

		*node[0x64cbde1940e0] = ;;

		*node[0x64cbde194110] = 6;

		*node[0x64cbde194140] = 1;

		*node[0x64cbde194170] = 2;

		*node[0x64cbde1941a0] = 3;

		*node[0x64cbde1941d0] = ;;

		*node[0x64cbde194200] = =;

		*node[0x64cbde194230] = 7;

		*node[0x64cbde194260] = -;

		*node[0x64cbde194290] = 0;

		*node[0x64cbde1942c0] = 1;

		*node[0x64cbde1942f0] = ;;

		*node[0x64cbde194320] = =;

		*node[0x64cbde194350] = 8;

		*node[0x64cbde194380] = 1;

		*node[0x64cbde1943b0] = ;;

		*node[0x64cbde1943e0] = =;

		*node[0x64cbde194410] = 11;

		*node[0x64cbde194440] = 2;

		*node[0x64cbde194470] = ;;

		*node[0x64cbde1944a0] = if;

		*node[0x64cbde1944d0] = op_no;

		*node[0x64cbde194500] = ==;

		*node[0x64cbde194530] = 3;

		*node[0x64cbde194560] = 0;

		*node[0x64cbde194590] = ;;

		*node[0x64cbde1945c0] = =;

		*node[0x64cbde1945f0] = 12;

		*node[0x64cbde194620] = 0;

		*node[0x64cbde194650] = ;;

		*node[0x64cbde194680] = =;

		*node[0x64cbde1946b0] = 13;

		*node[0x64cbde1946e0] = /;

		*node[0x64cbde194710] = -;

		*node[0x64cbde194740] = 0;

		*node[0x64cbde194770] = 2;

		*node[0x64cbde1947a0] = 1;

		*node[0x64cbde1947d0] = ;;

		*node[0x64cbde194800] = print;

		*node[0x64cbde194830] = 11;

		*node[0x64cbde194860] = ;;

		*node[0x64cbde194890] = print;

		*node[0x64cbde1948c0] = 12;

		*node[0x64cbde1948f0] = 13;

		*node[0x64cbde194920] = else;

		*node[0x64cbde194950] = op_no;

		*node[0x64cbde194980] = ;;

		*node[0x64cbde1949b0] = =;

		*node[0x64cbde1949e0] = 14;

		*node[0x64cbde194a10] = -;

		*node[0x64cbde194a40] = *;

		*node[0x64cbde194a70] = 2;

		*node[0x64cbde194aa0] = 2;

		*node[0x64cbde194ad0] = *;

		*node[0x64cbde194b00] = *;

		*node[0x64cbde194b30] = 4;

		*node[0x64cbde194b60] = 1;

		*node[0x64cbde194b90] = 3;

		*node[0x64cbde194bc0] = ;;

		*node[0x64cbde194bf0] = if;

		*node[0x64cbde194c20] = op_no;

		*node[0x64cbde194c50] = >;

		*node[0x64cbde194c80] = 14;

		*node[0x64cbde194cb0] = 0;

		*node[0x64cbde194ce0] = ;;

		*node[0x64cbde194d10] = =;

		*node[0x64cbde194d40] = 15;

		*node[0x64cbde194d70] = sqrt;

		*node[0x64cbde194da0] = 14;

		*node[0x64cbde194dd0] = ;;

		*node[0x64cbde194e00] = =;

		*node[0x64cbde194e30] = 12;

		*node[0x64cbde194e60] = /;

		*node[0x64cbde194e90] = -;

		*node[0x64cbde194ec0] = -;

		*node[0x64cbde194ef0] = 0;

		*node[0x64cbde194f20] = 2;

		*node[0x64cbde194f50] = 15;

		*node[0x64cbde194f80] = *;

		*node[0x64cbde194fb0] = 2;

		*node[0x64cbde194fe0] = 1;

		*node[0x64cbde195010] = ;;

		*node[0x64cbde195040] = =;

		*node[0x64cbde195070] = 13;

		*node[0x64cbde1950a0] = /;

		*node[0x64cbde1950d0] = +;

		*node[0x64cbde195100] = -;

		*node[0x64cbde195130] = 0;

		*node[0x64cbde195160] = 2;

		*node[0x64cbde195190] = 15;

		*node[0x64cbde1951c0] = *;

		*node[0x64cbde1951f0] = 2;

		*node[0x64cbde195220] = 1;

		*node[0x64cbde195250] = ;;

		*node[0x64cbde195280] = print;

		*node[0x64cbde1952b0] = 11;

		*node[0x64cbde1952e0] = ;;

		*node[0x64cbde195310] = print;

		*node[0x64cbde195340] = 12;

		*node[0x64cbde195370] = 13;

		*node[0x64cbde1953a0] = elseif;

		*node[0x64cbde1953d0] = op_no;

		*node[0x64cbde195400] = ==;

		*node[0x64cbde195430] = 14;

		*node[0x64cbde195460] = 0;

		*node[0x64cbde195490] = ;;

		*node[0x64cbde1954c0] = =;

		*node[0x64cbde1954f0] = 10;

		*node[0x64cbde195520] = /;

		*node[0x64cbde195550] = -;

		*node[0x64cbde195580] = 0;

		*node[0x64cbde1955b0] = 2;

		*node[0x64cbde1955e0] = *;

		*node[0x64cbde195610] = 2;

		*node[0x64cbde195640] = 1;

		*node[0x64cbde195670] = ;;

		*node[0x64cbde1956a0] = print;

		*node[0x64cbde1956d0] = 8;

		*node[0x64cbde195700] = ;;

		*node[0x64cbde195730] = print;

		*node[0x64cbde195760] = 10;

		*node[0x64cbde195790] = else;

		*node[0x64cbde1957c0] = op_no;

		*node[0x64cbde1957f0] = ;;

		*node[0x64cbde195820] = print;

		*node[0x64cbde195850] = 7;

		*node[0x64cbde195880] = ;;

		*node[0x64cbde1958b0] = return;

		*node[0x64cbde1958e0] = 0;

		*node[0x64cbde195910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffd5385c10] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x558adca5cfd0] = ;;

		*node[0x558adca5d000] = 0;

		*node[0x558adca5d030] = ;;

		*node[0x558adca5d060] = input;

		*node[0x558adca5d090] = 1;

		*node[0x558adca5d0c0] = 2;

		*node[0x558adca5d0f0] = 3;

		*node[0x558adca5d120] = ;;

		*node[0x558adca5d180] = 1;

		*node[0x558adca5d1b0] = 2;

		*node[0x558adca5d1e0] = 3;

		*node[0x558adca5d210] = ;;

		*node[0x558adca5d240] = 4;

		*node[0x558adca5d270] = 1;

		*node[0x558adca5d2a0] = 2;

		*node[0x558adca5d2d0] = 3;

		*node[0x558adca5d300] = ;;

		*node[0x558adca5d330] = if;

		*node[0x558adca5d360] = op_no;

		*node[0x558adca5d390] = ==;

		*node[0x558adca5d3c0] = 1;

		*node[0x558adca5d3f0] = 0;

		*node[0x558adca5d420] = ;;

		*node[0x558adca5d480] = 2;

		*node[0x558adca5d4b0] = 3;

		*node[0x558adca5d4e0] = else;

		*node[0x558adca5d510] = op_no;

		*node[0x558adca5d540] = ;;

		*node[0x558adca5d5a0] = 1;

		*node[0x558adca5d5d0] = 2;

		*node[0x558adca5d600] = 3;

		*node[0x558adca5d630] = ;;

		*node[0x558adca5d660] = 5;

		*node[0x558adca5d690] = 1;

		*node[0x558adca5d6c0] = 2;

		*node[0x558adca5d6f0] = ;;

		*node[0x558adca5d720] = =;

		*node[0x558adca5d750] = 7;

		*node[0x558adca5d780] = -;

		*node[0x558adca5d7b0] = 0;

		*node[0x558adca5d7e0] = 1;

		*node[0x558adca5d810] = ;;

		*node[0x558adca5d840] = =;

		*node[0x558adca5d870] = 8;

		*node[0x558adca5d8a0] = 1;

		*node[0x558adca5d8d0] = ;;

		*node[0x558adca5d900] = =;

		*node[0x558adca5d930] = 9;

		*node[0x558adca5d960] = 1000;

		*node[0x558adca5d990] = ;;

		*node[0x558adca5d9c0] = if;

		*node[0x558adca5d9f0] = op_no;

		*node[0x558adca5da20] = ==;

		*node[0x558adca5da50] = 1;

		*node[0x558adca5da80] = 0;

		*node[0x558adca5dab0] = ;;

		*node[0x558adca5dae0] = if;

		*node[0x558adca5db10] = op_no;

		*node[0x558adca5db40] = ==;

		*node[0x558adca5db70] = 2;

		*node[0x558adca5dba0] = 0;

		*node[0x558adca5dbd0] = ;;

		*node[0x558adca5dc00] = print;

		*node[0x558adca5dc30] = 9;

		*node[0x558adca5dc60] = else;

		*node[0x558adca5dc90] = op_no;

		*node[0x558adca5dcc0] = ;;

		*node[0x558adca5dcf0] = print;

		*node[0x558adca5dd20] = 7;

		*node[0x558adca5dd50] = else;

		*node[0x558adca5dd80] = op_no;

		*node[0x558adca5ddb0] = ;;

		*node[0x558adca5dde0] = =;

		*node[0x558adca5de10] = 10;

		*node[0x558adca5de40] = /;

		*node[0x558adca5de70] = -;

		*node[0x558adca5dea0] = 0;

		*node[0x558adca5ded0] = 2;

		*node[0x558adca5df00] = 1;

		*node[0x558adca5df30] = ;;

		*node[0x558adca5df60] = print;

		*node[0x558adca5df90] = 8;

		*node[0x558adca5dfc0] = ;;

		*node[0x558adca5dff0] = print;

		*node[0x558adca5e020] = 10;

		*node[0x558adca5e050] = ;;

		*node[0x558adca5e080] = return;

		*node[0x558adca5e0b0] = 0;

		*node[0x558adca5e0e0] = ;;

		*node[0x558adca5e110] = 6;

		*node[0x558adca5e140] = 1;

		*node[0x558adca5e170] = 2;

		*node[0x558adca5e1a0] = 3;

		*node[0x558adca5e1d0] = ;;

		*node[0x558adca5e200] = =;

		*node[0x558adca5e230] = 7;

		*node[0x558adca5e260] = -;

		*node[0x558adca5e290] = 0;

		*node[0x558adca5e2c0] = 1;

		*node[0x558adca5e2f0] = ;;

		*node[0x558adca5e320] = =;

		*node[0x558adca5e350] = 8;

		*node[0x558adca5e380] = 1;

		*node[0x558adca5e3b0] = ;;

		*node[0x558adca5e3e0] = =;

		*node[0x558adca5e410] = 11;

		*node[0x558adca5e440] = 2;

		*node[0x558adca5e470] = ;;

		*node[0x558adca5e4a0] = if;

		*node[0x558adca5e4d0] = op_no;

		*node[0x558adca5e500] = ==;

		*node[0x558adca5e530] = 3;

		*node[0x558adca5e560] = 0;

		*node[0x558adca5e590] = ;;

		*node[0x558adca5e5c0] = =;

		*node[0x558adca5e5f0] = 12;

		*node[0x558adca5e620] = 0;

		*node[0x558adca5e650] = ;;

		*node[0x558adca5e680] = =;

		*node[0x558adca5e6b0] = 13;

		*node[0x558adca5e6e0] = /;

		*node[0x558adca5e710] = -;

		*node[0x558adca5e740] = 0;

		*node[0x558adca5e770] = 2;

		*node[0x558adca5e7a0] = 1;

		*node[0x558adca5e7d0] = ;;

		*node[0x558adca5e800] = print;

		*node[0x558adca5e830] = 11;

		*node[0x558adca5e860] = ;;

		*node[0x558adca5e890] = print;

		*node[0x558adca5e8c0] = 12;

		*node[0x558adca5e8f0] = 13;

		*node[0x558adca5e920] = else;

		*node[0x558adca5e950] = op_no;

		*node[0x558adca5e980] = ;;

		*node[0x558adca5e9b0] = =;

		*node[0x558adca5e9e0] = 14;

		*node[0x558adca5ea10] = -;

		*node[0x558adca5ea40] = *;

		*node[0x558adca5ea70] = 2;

		*node[0x558adca5eaa0] = 2;

		*node[0x558adca5ead0] = *;

		*node[0x558adca5eb00] = *;

		*node[0x558adca5eb30] = 4;

		*node[0x558adca5eb60] = 1;

		*node[0x558adca5eb90] = 3;

		*node[0x558adca5ebc0] = ;;

		*node[0x558adca5ebf0] = if;

		*node[0x558adca5ec20] = op_no;

		*node[0x558adca5ec50] = >;

		*node[0x558adca5ec80] = 14;

		*node[0x558adca5ecb0] = 0;

		*node[0x558adca5ece0] = ;;

		*node[0x558adca5ed10] = =;

		*node[0x558adca5ed40] = 15;

		*node[0x558adca5ed70] = sqrt;

		*node[0x558adca5eda0] = 14;

		*node[0x558adca5edd0] = ;;

		*node[0x558adca5ee00] = =;

		*node[0x558adca5ee30] = 12;

		*node[0x558adca5ee60] = /;

		*node[0x558adca5ee90] = -;

		*node[0x558adca5eec0] = -;

		*node[0x558adca5eef0] = 0;

		*node[0x558adca5ef20] = 2;

		*node[0x558adca5ef50] = 15;

		*node[0x558adca5ef80] = *;

		*node[0x558adca5efb0] = 2;

		*node[0x558adca5efe0] = 1;

		*node[0x558adca5f010] = ;;

		*node[0x558adca5f040] = =;

		*node[0x558adca5f070] = 13;

		*node[0x558adca5f0a0] = /;

		*node[0x558adca5f0d0] = +;

		*node[0x558adca5f100] = -;

		*node[0x558adca5f130] = 0;

		*node[0x558adca5f160] = 2;

		*node[0x558adca5f190] = 15;

		*node[0x558adca5f1c0] = *;

		*node[0x558adca5f1f0] = 2;

		*node[0x558adca5f220] = 1;

		*node[0x558adca5f250] = ;;

		*node[0x558adca5f280] = print;

		*node[0x558adca5f2b0] = 11;

		*node[0x558adca5f2e0] = ;;

		*node[0x558adca5f310] = print;

		*node[0x558adca5f340] = 12;

		*node[0x558adca5f370] = 13;

		*node[0x558adca5f3a0] = elseif;

		*node[0x558adca5f3d0] = op_no;

		*node[0x558adca5f400] = ==;

		*node[0x558adca5f430] = 14;

		*node[0x558adca5f460] = 0;

		*node[0x558adca5f490] = ;;

		*node[0x558adca5f4c0] = =;

		*node[0x558adca5f4f0] = 10;

		*node[0x558adca5f520] = /;

		*node[0x558adca5f550] = -;

		*node[0x558adca5f580] = 0;

		*node[0x558adca5f5b0] = 2;

		*node[0x558adca5f5e0] = *;

		*node[0x558adca5f610] = 2;

		*node[0x558adca5f640] = 1;

		*node[0x558adca5f670] = ;;

		*node[0x558adca5f6a0] = print;

		*node[0x558adca5f6d0] = 8;

		*node[0x558adca5f700] = ;;

		*node[0x558adca5f730] = print;

		*node[0x558adca5f760] = 10;

		*node[0x558adca5f790] = else;

		*node[0x558adca5f7c0] = op_no;

		*node[0x558adca5f7f0] = ;;

		*node[0x558adca5f820] = print;

		*node[0x558adca5f850] = 7;

		*node[0x558adca5f880] = ;;

		*node[0x558adca5f8b0] = return;

		*node[0x558adca5f8e0] = 0;

		*node[0x558adca5f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff2e6c7980] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x646d555cdfd0] = ;;

		*node[0x646d555ce000] = 0;

		*node[0x646d555ce030] = ;;

		*node[0x646d555ce060] = input;

		*node[0x646d555ce090] = 1;

		*node[0x646d555ce0c0] = 2;

		*node[0x646d555ce0f0] = 3;

		*node[0x646d555ce120] = ;;

		*node[0x646d555ce180] = 1;

		*node[0x646d555ce1b0] = 2;

		*node[0x646d555ce1e0] = 3;

		*node[0x646d555ce210] = ;;

		*node[0x646d555ce240] = 4;

		*node[0x646d555ce270] = 1;

		*node[0x646d555ce2a0] = 2;

		*node[0x646d555ce2d0] = 3;

		*node[0x646d555ce300] = ;;

		*node[0x646d555ce330] = if;

		*node[0x646d555ce360] = op_no;

		*node[0x646d555ce390] = ==;

		*node[0x646d555ce3c0] = 1;

		*node[0x646d555ce3f0] = 0;

		*node[0x646d555ce420] = ;;

		*node[0x646d555ce480] = 2;

		*node[0x646d555ce4b0] = 3;

		*node[0x646d555ce4e0] = else;

		*node[0x646d555ce510] = op_no;

		*node[0x646d555ce540] = ;;

		*node[0x646d555ce5a0] = 1;

		*node[0x646d555ce5d0] = 2;

		*node[0x646d555ce600] = 3;

		*node[0x646d555ce630] = ;;

		*node[0x646d555ce660] = 5;

		*node[0x646d555ce690] = 1;

		*node[0x646d555ce6c0] = 2;

		*node[0x646d555ce6f0] = ;;

		*node[0x646d555ce720] = =;

		*node[0x646d555ce750] = 7;

		*node[0x646d555ce780] = -;

		*node[0x646d555ce7b0] = 0;

		*node[0x646d555ce7e0] = 1;

		*node[0x646d555ce810] = ;;

		*node[0x646d555ce840] = =;

		*node[0x646d555ce870] = 8;

		*node[0x646d555ce8a0] = 1;

		*node[0x646d555ce8d0] = ;;

		*node[0x646d555ce900] = =;

		*node[0x646d555ce930] = 9;

		*node[0x646d555ce960] = 1000;

		*node[0x646d555ce990] = ;;

		*node[0x646d555ce9c0] = if;

		*node[0x646d555ce9f0] = op_no;

		*node[0x646d555cea20] = ==;

		*node[0x646d555cea50] = 1;

		*node[0x646d555cea80] = 0;

		*node[0x646d555ceab0] = ;;

		*node[0x646d555ceae0] = if;

		*node[0x646d555ceb10] = op_no;

		*node[0x646d555ceb40] = ==;

		*node[0x646d555ceb70] = 2;

		*node[0x646d555ceba0] = 0;

		*node[0x646d555cebd0] = ;;

		*node[0x646d555cec00] = print;

		*node[0x646d555cec30] = 9;

		*node[0x646d555cec60] = else;

		*node[0x646d555cec90] = op_no;

		*node[0x646d555cecc0] = ;;

		*node[0x646d555cecf0] = print;

		*node[0x646d555ced20] = 7;

		*node[0x646d555ced50] = else;

		*node[0x646d555ced80] = op_no;

		*node[0x646d555cedb0] = ;;

		*node[0x646d555cede0] = =;

		*node[0x646d555cee10] = 10;

		*node[0x646d555cee40] = /;

		*node[0x646d555cee70] = -;

		*node[0x646d555ceea0] = 0;

		*node[0x646d555ceed0] = 2;

		*node[0x646d555cef00] = 1;

		*node[0x646d555cef30] = ;;

		*node[0x646d555cef60] = print;

		*node[0x646d555cef90] = 8;

		*node[0x646d555cefc0] = ;;

		*node[0x646d555ceff0] = print;

		*node[0x646d555cf020] = 10;

		*node[0x646d555cf050] = ;;

		*node[0x646d555cf080] = return;

		*node[0x646d555cf0b0] = 0;

		*node[0x646d555cf0e0] = ;;

		*node[0x646d555cf110] = 6;

		*node[0x646d555cf140] = 1;

		*node[0x646d555cf170] = 2;

		*node[0x646d555cf1a0] = 3;

		*node[0x646d555cf1d0] = ;;

		*node[0x646d555cf200] = =;

		*node[0x646d555cf230] = 7;

		*node[0x646d555cf260] = -;

		*node[0x646d555cf290] = 0;

		*node[0x646d555cf2c0] = 1;

		*node[0x646d555cf2f0] = ;;

		*node[0x646d555cf320] = =;

		*node[0x646d555cf350] = 8;

		*node[0x646d555cf380] = 1;

		*node[0x646d555cf3b0] = ;;

		*node[0x646d555cf3e0] = =;

		*node[0x646d555cf410] = 11;

		*node[0x646d555cf440] = 2;

		*node[0x646d555cf470] = ;;

		*node[0x646d555cf4a0] = if;

		*node[0x646d555cf4d0] = op_no;

		*node[0x646d555cf500] = ==;

		*node[0x646d555cf530] = 3;

		*node[0x646d555cf560] = 0;

		*node[0x646d555cf590] = ;;

		*node[0x646d555cf5c0] = =;

		*node[0x646d555cf5f0] = 12;

		*node[0x646d555cf620] = 0;

		*node[0x646d555cf650] = ;;

		*node[0x646d555cf680] = =;

		*node[0x646d555cf6b0] = 13;

		*node[0x646d555cf6e0] = /;

		*node[0x646d555cf710] = -;

		*node[0x646d555cf740] = 0;

		*node[0x646d555cf770] = 2;

		*node[0x646d555cf7a0] = 1;

		*node[0x646d555cf7d0] = ;;

		*node[0x646d555cf800] = print;

		*node[0x646d555cf830] = 11;

		*node[0x646d555cf860] = ;;

		*node[0x646d555cf890] = print;

		*node[0x646d555cf8c0] = 12;

		*node[0x646d555cf8f0] = 13;

		*node[0x646d555cf920] = else;

		*node[0x646d555cf950] = op_no;

		*node[0x646d555cf980] = ;;

		*node[0x646d555cf9b0] = =;

		*node[0x646d555cf9e0] = 14;

		*node[0x646d555cfa10] = -;

		*node[0x646d555cfa40] = *;

		*node[0x646d555cfa70] = 2;

		*node[0x646d555cfaa0] = 2;

		*node[0x646d555cfad0] = *;

		*node[0x646d555cfb00] = *;

		*node[0x646d555cfb30] = 4;

		*node[0x646d555cfb60] = 1;

		*node[0x646d555cfb90] = 3;

		*node[0x646d555cfbc0] = ;;

		*node[0x646d555cfbf0] = if;

		*node[0x646d555cfc20] = op_no;

		*node[0x646d555cfc50] = >;

		*node[0x646d555cfc80] = 14;

		*node[0x646d555cfcb0] = 0;

		*node[0x646d555cfce0] = ;;

		*node[0x646d555cfd10] = =;

		*node[0x646d555cfd40] = 15;

		*node[0x646d555cfd70] = sqrt;

		*node[0x646d555cfda0] = 14;

		*node[0x646d555cfdd0] = ;;

		*node[0x646d555cfe00] = =;

		*node[0x646d555cfe30] = 12;

		*node[0x646d555cfe60] = /;

		*node[0x646d555cfe90] = -;

		*node[0x646d555cfec0] = -;

		*node[0x646d555cfef0] = 0;

		*node[0x646d555cff20] = 2;

		*node[0x646d555cff50] = 15;

		*node[0x646d555cff80] = *;

		*node[0x646d555cffb0] = 2;

		*node[0x646d555cffe0] = 1;

		*node[0x646d555d0010] = ;;

		*node[0x646d555d0040] = =;

		*node[0x646d555d0070] = 13;

		*node[0x646d555d00a0] = /;

		*node[0x646d555d00d0] = +;

		*node[0x646d555d0100] = -;

		*node[0x646d555d0130] = 0;

		*node[0x646d555d0160] = 2;

		*node[0x646d555d0190] = 15;

		*node[0x646d555d01c0] = *;

		*node[0x646d555d01f0] = 2;

		*node[0x646d555d0220] = 1;

		*node[0x646d555d0250] = ;;

		*node[0x646d555d0280] = print;

		*node[0x646d555d02b0] = 11;

		*node[0x646d555d02e0] = ;;

		*node[0x646d555d0310] = print;

		*node[0x646d555d0340] = 12;

		*node[0x646d555d0370] = 13;

		*node[0x646d555d03a0] = elseif;

		*node[0x646d555d03d0] = op_no;

		*node[0x646d555d0400] = ==;

		*node[0x646d555d0430] = 14;

		*node[0x646d555d0460] = 0;

		*node[0x646d555d0490] = ;;

		*node[0x646d555d04c0] = =;

		*node[0x646d555d04f0] = 10;

		*node[0x646d555d0520] = /;

		*node[0x646d555d0550] = -;

		*node[0x646d555d0580] = 0;

		*node[0x646d555d05b0] = 2;

		*node[0x646d555d05e0] = *;

		*node[0x646d555d0610] = 2;

		*node[0x646d555d0640] = 1;

		*node[0x646d555d0670] = ;;

		*node[0x646d555d06a0] = print;

		*node[0x646d555d06d0] = 8;

		*node[0x646d555d0700] = ;;

		*node[0x646d555d0730] = print;

		*node[0x646d555d0760] = 10;

		*node[0x646d555d0790] = else;

		*node[0x646d555d07c0] = op_no;

		*node[0x646d555d07f0] = ;;

		*node[0x646d555d0820] = print;

		*node[0x646d555d0850] = 7;

		*node[0x646d555d0880] = ;;

		*node[0x646d555d08b0] = return;

		*node[0x646d555d08e0] = 0;

		*node[0x646d555d0910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcae7465b0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x57c1d001ffd0] = ;;

		*node[0x57c1d0020000] = 0;

		*node[0x57c1d0020030] = ;;

		*node[0x57c1d0020060] = input;

		*node[0x57c1d0020090] = 1;

		*node[0x57c1d00200c0] = 2;

		*node[0x57c1d00200f0] = 3;

		*node[0x57c1d0020120] = ;;

		*node[0x57c1d0020180] = 1;

		*node[0x57c1d00201b0] = 2;

		*node[0x57c1d00201e0] = 3;

		*node[0x57c1d0020210] = ;;

		*node[0x57c1d0020240] = 4;

		*node[0x57c1d0020270] = 1;

		*node[0x57c1d00202a0] = 2;

		*node[0x57c1d00202d0] = 3;

		*node[0x57c1d0020300] = ;;

		*node[0x57c1d0020330] = if;

		*node[0x57c1d0020360] = op_no;

		*node[0x57c1d0020390] = ==;

		*node[0x57c1d00203c0] = 1;

		*node[0x57c1d00203f0] = 0;

		*node[0x57c1d0020420] = ;;

		*node[0x57c1d0020480] = 2;

		*node[0x57c1d00204b0] = 3;

		*node[0x57c1d00204e0] = else;

		*node[0x57c1d0020510] = op_no;

		*node[0x57c1d0020540] = ;;

		*node[0x57c1d00205a0] = 1;

		*node[0x57c1d00205d0] = 2;

		*node[0x57c1d0020600] = 3;

		*node[0x57c1d0020630] = ;;

		*node[0x57c1d0020660] = 5;

		*node[0x57c1d0020690] = 1;

		*node[0x57c1d00206c0] = 2;

		*node[0x57c1d00206f0] = ;;

		*node[0x57c1d0020720] = =;

		*node[0x57c1d0020750] = 7;

		*node[0x57c1d0020780] = -;

		*node[0x57c1d00207b0] = 0;

		*node[0x57c1d00207e0] = 1;

		*node[0x57c1d0020810] = ;;

		*node[0x57c1d0020840] = =;

		*node[0x57c1d0020870] = 8;

		*node[0x57c1d00208a0] = 1;

		*node[0x57c1d00208d0] = ;;

		*node[0x57c1d0020900] = =;

		*node[0x57c1d0020930] = 9;

		*node[0x57c1d0020960] = 1000;

		*node[0x57c1d0020990] = ;;

		*node[0x57c1d00209c0] = if;

		*node[0x57c1d00209f0] = op_no;

		*node[0x57c1d0020a20] = ==;

		*node[0x57c1d0020a50] = 1;

		*node[0x57c1d0020a80] = 0;

		*node[0x57c1d0020ab0] = ;;

		*node[0x57c1d0020ae0] = if;

		*node[0x57c1d0020b10] = op_no;

		*node[0x57c1d0020b40] = ==;

		*node[0x57c1d0020b70] = 2;

		*node[0x57c1d0020ba0] = 0;

		*node[0x57c1d0020bd0] = ;;

		*node[0x57c1d0020c00] = print;

		*node[0x57c1d0020c30] = 9;

		*node[0x57c1d0020c60] = else;

		*node[0x57c1d0020c90] = op_no;

		*node[0x57c1d0020cc0] = ;;

		*node[0x57c1d0020cf0] = print;

		*node[0x57c1d0020d20] = 7;

		*node[0x57c1d0020d50] = else;

		*node[0x57c1d0020d80] = op_no;

		*node[0x57c1d0020db0] = ;;

		*node[0x57c1d0020de0] = =;

		*node[0x57c1d0020e10] = 10;

		*node[0x57c1d0020e40] = /;

		*node[0x57c1d0020e70] = -;

		*node[0x57c1d0020ea0] = 0;

		*node[0x57c1d0020ed0] = 2;

		*node[0x57c1d0020f00] = 1;

		*node[0x57c1d0020f30] = ;;

		*node[0x57c1d0020f60] = print;

		*node[0x57c1d0020f90] = 8;

		*node[0x57c1d0020fc0] = ;;

		*node[0x57c1d0020ff0] = print;

		*node[0x57c1d0021020] = 10;

		*node[0x57c1d0021050] = ;;

		*node[0x57c1d0021080] = return;

		*node[0x57c1d00210b0] = 0;

		*node[0x57c1d00210e0] = ;;

		*node[0x57c1d0021110] = 6;

		*node[0x57c1d0021140] = 1;

		*node[0x57c1d0021170] = 2;

		*node[0x57c1d00211a0] = 3;

		*node[0x57c1d00211d0] = ;;

		*node[0x57c1d0021200] = =;

		*node[0x57c1d0021230] = 7;

		*node[0x57c1d0021260] = -;

		*node[0x57c1d0021290] = 0;

		*node[0x57c1d00212c0] = 1;

		*node[0x57c1d00212f0] = ;;

		*node[0x57c1d0021320] = =;

		*node[0x57c1d0021350] = 8;

		*node[0x57c1d0021380] = 1;

		*node[0x57c1d00213b0] = ;;

		*node[0x57c1d00213e0] = =;

		*node[0x57c1d0021410] = 11;

		*node[0x57c1d0021440] = 2;

		*node[0x57c1d0021470] = ;;

		*node[0x57c1d00214a0] = if;

		*node[0x57c1d00214d0] = op_no;

		*node[0x57c1d0021500] = ==;

		*node[0x57c1d0021530] = 3;

		*node[0x57c1d0021560] = 0;

		*node[0x57c1d0021590] = ;;

		*node[0x57c1d00215c0] = =;

		*node[0x57c1d00215f0] = 12;

		*node[0x57c1d0021620] = 0;

		*node[0x57c1d0021650] = ;;

		*node[0x57c1d0021680] = =;

		*node[0x57c1d00216b0] = 13;

		*node[0x57c1d00216e0] = /;

		*node[0x57c1d0021710] = -;

		*node[0x57c1d0021740] = 0;

		*node[0x57c1d0021770] = 2;

		*node[0x57c1d00217a0] = 1;

		*node[0x57c1d00217d0] = ;;

		*node[0x57c1d0021800] = print;

		*node[0x57c1d0021830] = 11;

		*node[0x57c1d0021860] = ;;

		*node[0x57c1d0021890] = print;

		*node[0x57c1d00218c0] = 12;

		*node[0x57c1d00218f0] = 13;

		*node[0x57c1d0021920] = else;

		*node[0x57c1d0021950] = op_no;

		*node[0x57c1d0021980] = ;;

		*node[0x57c1d00219b0] = =;

		*node[0x57c1d00219e0] = 14;

		*node[0x57c1d0021a10] = -;

		*node[0x57c1d0021a40] = *;

		*node[0x57c1d0021a70] = 2;

		*node[0x57c1d0021aa0] = 2;

		*node[0x57c1d0021ad0] = *;

		*node[0x57c1d0021b00] = *;

		*node[0x57c1d0021b30] = 4;

		*node[0x57c1d0021b60] = 1;

		*node[0x57c1d0021b90] = 3;

		*node[0x57c1d0021bc0] = ;;

		*node[0x57c1d0021bf0] = if;

		*node[0x57c1d0021c20] = op_no;

		*node[0x57c1d0021c50] = >;

		*node[0x57c1d0021c80] = 14;

		*node[0x57c1d0021cb0] = 0;

		*node[0x57c1d0021ce0] = ;;

		*node[0x57c1d0021d10] = =;

		*node[0x57c1d0021d40] = 15;

		*node[0x57c1d0021d70] = sqrt;

		*node[0x57c1d0021da0] = 14;

		*node[0x57c1d0021dd0] = ;;

		*node[0x57c1d0021e00] = =;

		*node[0x57c1d0021e30] = 12;

		*node[0x57c1d0021e60] = /;

		*node[0x57c1d0021e90] = -;

		*node[0x57c1d0021ec0] = -;

		*node[0x57c1d0021ef0] = 0;

		*node[0x57c1d0021f20] = 2;

		*node[0x57c1d0021f50] = 15;

		*node[0x57c1d0021f80] = *;

		*node[0x57c1d0021fb0] = 2;

		*node[0x57c1d0021fe0] = 1;

		*node[0x57c1d0022010] = ;;

		*node[0x57c1d0022040] = =;

		*node[0x57c1d0022070] = 13;

		*node[0x57c1d00220a0] = /;

		*node[0x57c1d00220d0] = +;

		*node[0x57c1d0022100] = -;

		*node[0x57c1d0022130] = 0;

		*node[0x57c1d0022160] = 2;

		*node[0x57c1d0022190] = 15;

		*node[0x57c1d00221c0] = *;

		*node[0x57c1d00221f0] = 2;

		*node[0x57c1d0022220] = 1;

		*node[0x57c1d0022250] = ;;

		*node[0x57c1d0022280] = print;

		*node[0x57c1d00222b0] = 11;

		*node[0x57c1d00222e0] = ;;

		*node[0x57c1d0022310] = print;

		*node[0x57c1d0022340] = 12;

		*node[0x57c1d0022370] = 13;

		*node[0x57c1d00223a0] = elseif;

		*node[0x57c1d00223d0] = op_no;

		*node[0x57c1d0022400] = ==;

		*node[0x57c1d0022430] = 14;

		*node[0x57c1d0022460] = 0;

		*node[0x57c1d0022490] = ;;

		*node[0x57c1d00224c0] = =;

		*node[0x57c1d00224f0] = 10;

		*node[0x57c1d0022520] = /;

		*node[0x57c1d0022550] = -;

		*node[0x57c1d0022580] = 0;

		*node[0x57c1d00225b0] = 2;

		*node[0x57c1d00225e0] = *;

		*node[0x57c1d0022610] = 2;

		*node[0x57c1d0022640] = 1;

		*node[0x57c1d0022670] = ;;

		*node[0x57c1d00226a0] = print;

		*node[0x57c1d00226d0] = 8;

		*node[0x57c1d0022700] = ;;

		*node[0x57c1d0022730] = print;

		*node[0x57c1d0022760] = 10;

		*node[0x57c1d0022790] = else;

		*node[0x57c1d00227c0] = op_no;

		*node[0x57c1d00227f0] = ;;

		*node[0x57c1d0022820] = print;

		*node[0x57c1d0022850] = 7;

		*node[0x57c1d0022880] = ;;

		*node[0x57c1d00228b0] = return;

		*node[0x57c1d00228e0] = 0;

		*node[0x57c1d0022910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcc2245fc0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x630331079fd0] = ;;

		*node[0x63033107a000] = 0;

		*node[0x63033107a030] = ;;

		*node[0x63033107a060] = input;

		*node[0x63033107a090] = 1;

		*node[0x63033107a0c0] = 2;

		*node[0x63033107a0f0] = 3;

		*node[0x63033107a120] = ;;

		*node[0x63033107a180] = 1;

		*node[0x63033107a1b0] = 2;

		*node[0x63033107a1e0] = 3;

		*node[0x63033107a210] = ;;

		*node[0x63033107a240] = 4;

		*node[0x63033107a270] = 1;

		*node[0x63033107a2a0] = 2;

		*node[0x63033107a2d0] = 3;

		*node[0x63033107a300] = ;;

		*node[0x63033107a330] = if;

		*node[0x63033107a360] = op_no;

		*node[0x63033107a390] = ==;

		*node[0x63033107a3c0] = 1;

		*node[0x63033107a3f0] = 0;

		*node[0x63033107a420] = ;;

		*node[0x63033107a480] = 2;

		*node[0x63033107a4b0] = 3;

		*node[0x63033107a4e0] = else;

		*node[0x63033107a510] = op_no;

		*node[0x63033107a540] = ;;

		*node[0x63033107a5a0] = 1;

		*node[0x63033107a5d0] = 2;

		*node[0x63033107a600] = 3;

		*node[0x63033107a630] = ;;

		*node[0x63033107a660] = 5;

		*node[0x63033107a690] = 1;

		*node[0x63033107a6c0] = 2;

		*node[0x63033107a6f0] = ;;

		*node[0x63033107a720] = =;

		*node[0x63033107a750] = 7;

		*node[0x63033107a780] = -;

		*node[0x63033107a7b0] = 0;

		*node[0x63033107a7e0] = 1;

		*node[0x63033107a810] = ;;

		*node[0x63033107a840] = =;

		*node[0x63033107a870] = 8;

		*node[0x63033107a8a0] = 1;

		*node[0x63033107a8d0] = ;;

		*node[0x63033107a900] = =;

		*node[0x63033107a930] = 9;

		*node[0x63033107a960] = 1000;

		*node[0x63033107a990] = ;;

		*node[0x63033107a9c0] = if;

		*node[0x63033107a9f0] = op_no;

		*node[0x63033107aa20] = ==;

		*node[0x63033107aa50] = 1;

		*node[0x63033107aa80] = 0;

		*node[0x63033107aab0] = ;;

		*node[0x63033107aae0] = if;

		*node[0x63033107ab10] = op_no;

		*node[0x63033107ab40] = ==;

		*node[0x63033107ab70] = 2;

		*node[0x63033107aba0] = 0;

		*node[0x63033107abd0] = ;;

		*node[0x63033107ac00] = print;

		*node[0x63033107ac30] = 9;

		*node[0x63033107ac60] = else;

		*node[0x63033107ac90] = op_no;

		*node[0x63033107acc0] = ;;

		*node[0x63033107acf0] = print;

		*node[0x63033107ad20] = 7;

		*node[0x63033107ad50] = else;

		*node[0x63033107ad80] = op_no;

		*node[0x63033107adb0] = ;;

		*node[0x63033107ade0] = =;

		*node[0x63033107ae10] = 10;

		*node[0x63033107ae40] = /;

		*node[0x63033107ae70] = -;

		*node[0x63033107aea0] = 0;

		*node[0x63033107aed0] = 2;

		*node[0x63033107af00] = 1;

		*node[0x63033107af30] = ;;

		*node[0x63033107af60] = print;

		*node[0x63033107af90] = 8;

		*node[0x63033107afc0] = ;;

		*node[0x63033107aff0] = print;

		*node[0x63033107b020] = 10;

		*node[0x63033107b050] = ;;

		*node[0x63033107b080] = return;

		*node[0x63033107b0b0] = 0;

		*node[0x63033107b0e0] = ;;

		*node[0x63033107b110] = 6;

		*node[0x63033107b140] = 1;

		*node[0x63033107b170] = 2;

		*node[0x63033107b1a0] = 3;

		*node[0x63033107b1d0] = ;;

		*node[0x63033107b200] = =;

		*node[0x63033107b230] = 7;

		*node[0x63033107b260] = -;

		*node[0x63033107b290] = 0;

		*node[0x63033107b2c0] = 1;

		*node[0x63033107b2f0] = ;;

		*node[0x63033107b320] = =;

		*node[0x63033107b350] = 8;

		*node[0x63033107b380] = 1;

		*node[0x63033107b3b0] = ;;

		*node[0x63033107b3e0] = =;

		*node[0x63033107b410] = 11;

		*node[0x63033107b440] = 2;

		*node[0x63033107b470] = ;;

		*node[0x63033107b4a0] = if;

		*node[0x63033107b4d0] = op_no;

		*node[0x63033107b500] = ==;

		*node[0x63033107b530] = 3;

		*node[0x63033107b560] = 0;

		*node[0x63033107b590] = ;;

		*node[0x63033107b5c0] = =;

		*node[0x63033107b5f0] = 12;

		*node[0x63033107b620] = 0;

		*node[0x63033107b650] = ;;

		*node[0x63033107b680] = =;

		*node[0x63033107b6b0] = 13;

		*node[0x63033107b6e0] = /;

		*node[0x63033107b710] = -;

		*node[0x63033107b740] = 0;

		*node[0x63033107b770] = 2;

		*node[0x63033107b7a0] = 1;

		*node[0x63033107b7d0] = ;;

		*node[0x63033107b800] = print;

		*node[0x63033107b830] = 11;

		*node[0x63033107b860] = ;;

		*node[0x63033107b890] = print;

		*node[0x63033107b8c0] = 12;

		*node[0x63033107b8f0] = 13;

		*node[0x63033107b920] = else;

		*node[0x63033107b950] = op_no;

		*node[0x63033107b980] = ;;

		*node[0x63033107b9b0] = =;

		*node[0x63033107b9e0] = 14;

		*node[0x63033107ba10] = -;

		*node[0x63033107ba40] = *;

		*node[0x63033107ba70] = 2;

		*node[0x63033107baa0] = 2;

		*node[0x63033107bad0] = *;

		*node[0x63033107bb00] = *;

		*node[0x63033107bb30] = 4;

		*node[0x63033107bb60] = 1;

		*node[0x63033107bb90] = 3;

		*node[0x63033107bbc0] = ;;

		*node[0x63033107bbf0] = if;

		*node[0x63033107bc20] = op_no;

		*node[0x63033107bc50] = >;

		*node[0x63033107bc80] = 14;

		*node[0x63033107bcb0] = 0;

		*node[0x63033107bce0] = ;;

		*node[0x63033107bd10] = =;

		*node[0x63033107bd40] = 15;

		*node[0x63033107bd70] = sqrt;

		*node[0x63033107bda0] = 14;

		*node[0x63033107bdd0] = ;;

		*node[0x63033107be00] = =;

		*node[0x63033107be30] = 12;

		*node[0x63033107be60] = /;

		*node[0x63033107be90] = -;

		*node[0x63033107bec0] = -;

		*node[0x63033107bef0] = 0;

		*node[0x63033107bf20] = 2;

		*node[0x63033107bf50] = 15;

		*node[0x63033107bf80] = *;

		*node[0x63033107bfb0] = 2;

		*node[0x63033107bfe0] = 1;

		*node[0x63033107c010] = ;;

		*node[0x63033107c040] = =;

		*node[0x63033107c070] = 13;

		*node[0x63033107c0a0] = /;

		*node[0x63033107c0d0] = +;

		*node[0x63033107c100] = -;

		*node[0x63033107c130] = 0;

		*node[0x63033107c160] = 2;

		*node[0x63033107c190] = 15;

		*node[0x63033107c1c0] = *;

		*node[0x63033107c1f0] = 2;

		*node[0x63033107c220] = 1;

		*node[0x63033107c250] = ;;

		*node[0x63033107c280] = print;

		*node[0x63033107c2b0] = 11;

		*node[0x63033107c2e0] = ;;

		*node[0x63033107c310] = print;

		*node[0x63033107c340] = 12;

		*node[0x63033107c370] = 13;

		*node[0x63033107c3a0] = elseif;

		*node[0x63033107c3d0] = op_no;

		*node[0x63033107c400] = ==;

		*node[0x63033107c430] = 14;

		*node[0x63033107c460] = 0;

		*node[0x63033107c490] = ;;

		*node[0x63033107c4c0] = =;

		*node[0x63033107c4f0] = 10;

		*node[0x63033107c520] = /;

		*node[0x63033107c550] = -;

		*node[0x63033107c580] = 0;

		*node[0x63033107c5b0] = 2;

		*node[0x63033107c5e0] = *;

		*node[0x63033107c610] = 2;

		*node[0x63033107c640] = 1;

		*node[0x63033107c670] = ;;

		*node[0x63033107c6a0] = print;

		*node[0x63033107c6d0] = 8;

		*node[0x63033107c700] = ;;

		*node[0x63033107c730] = print;

		*node[0x63033107c760] = 10;

		*node[0x63033107c790] = else;

		*node[0x63033107c7c0] = op_no;

		*node[0x63033107c7f0] = ;;

		*node[0x63033107c820] = print;

		*node[0x63033107c850] = 7;

		*node[0x63033107c880] = ;;

		*node[0x63033107c8b0] = return;

		*node[0x63033107c8e0] = 0;

		*node[0x63033107c910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffdecb89940] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x57eca6cbbfd0] = ;;

		*node[0x57eca6cbc000] = 0;

		*node[0x57eca6cbc030] = ;;

		*node[0x57eca6cbc060] = input;

		*node[0x57eca6cbc090] = 1;

		*node[0x57eca6cbc0c0] = 2;

		*node[0x57eca6cbc0f0] = 3;

		*node[0x57eca6cbc120] = ;;

		*node[0x57eca6cbc180] = 1;

		*node[0x57eca6cbc1b0] = 2;

		*node[0x57eca6cbc1e0] = 3;

		*node[0x57eca6cbc210] = ;;

		*node[0x57eca6cbc240] = 4;

		*node[0x57eca6cbc270] = 1;

		*node[0x57eca6cbc2a0] = 2;

		*node[0x57eca6cbc2d0] = 3;

		*node[0x57eca6cbc300] = ;;

		*node[0x57eca6cbc330] = if;

		*node[0x57eca6cbc360] = op_no;

		*node[0x57eca6cbc390] = ==;

		*node[0x57eca6cbc3c0] = 1;

		*node[0x57eca6cbc3f0] = 0;

		*node[0x57eca6cbc420] = ;;

		*node[0x57eca6cbc480] = 2;

		*node[0x57eca6cbc4b0] = 3;

		*node[0x57eca6cbc4e0] = else;

		*node[0x57eca6cbc510] = op_no;

		*node[0x57eca6cbc540] = ;;

		*node[0x57eca6cbc5a0] = 1;

		*node[0x57eca6cbc5d0] = 2;

		*node[0x57eca6cbc600] = 3;

		*node[0x57eca6cbc630] = ;;

		*node[0x57eca6cbc660] = 5;

		*node[0x57eca6cbc690] = 1;

		*node[0x57eca6cbc6c0] = 2;

		*node[0x57eca6cbc6f0] = ;;

		*node[0x57eca6cbc720] = =;

		*node[0x57eca6cbc750] = 7;

		*node[0x57eca6cbc780] = -;

		*node[0x57eca6cbc7b0] = 0;

		*node[0x57eca6cbc7e0] = 1;

		*node[0x57eca6cbc810] = ;;

		*node[0x57eca6cbc840] = =;

		*node[0x57eca6cbc870] = 8;

		*node[0x57eca6cbc8a0] = 1;

		*node[0x57eca6cbc8d0] = ;;

		*node[0x57eca6cbc900] = =;

		*node[0x57eca6cbc930] = 9;

		*node[0x57eca6cbc960] = 1000;

		*node[0x57eca6cbc990] = ;;

		*node[0x57eca6cbc9c0] = if;

		*node[0x57eca6cbc9f0] = op_no;

		*node[0x57eca6cbca20] = ==;

		*node[0x57eca6cbca50] = 1;

		*node[0x57eca6cbca80] = 0;

		*node[0x57eca6cbcab0] = ;;

		*node[0x57eca6cbcae0] = if;

		*node[0x57eca6cbcb10] = op_no;

		*node[0x57eca6cbcb40] = ==;

		*node[0x57eca6cbcb70] = 2;

		*node[0x57eca6cbcba0] = 0;

		*node[0x57eca6cbcbd0] = ;;

		*node[0x57eca6cbcc00] = print;

		*node[0x57eca6cbcc30] = 9;

		*node[0x57eca6cbcc60] = else;

		*node[0x57eca6cbcc90] = op_no;

		*node[0x57eca6cbccc0] = ;;

		*node[0x57eca6cbccf0] = print;

		*node[0x57eca6cbcd20] = 7;

		*node[0x57eca6cbcd50] = else;

		*node[0x57eca6cbcd80] = op_no;

		*node[0x57eca6cbcdb0] = ;;

		*node[0x57eca6cbcde0] = =;

		*node[0x57eca6cbce10] = 10;

		*node[0x57eca6cbce40] = /;

		*node[0x57eca6cbce70] = -;

		*node[0x57eca6cbcea0] = 0;

		*node[0x57eca6cbced0] = 2;

		*node[0x57eca6cbcf00] = 1;

		*node[0x57eca6cbcf30] = ;;

		*node[0x57eca6cbcf60] = print;

		*node[0x57eca6cbcf90] = 8;

		*node[0x57eca6cbcfc0] = ;;

		*node[0x57eca6cbcff0] = print;

		*node[0x57eca6cbd020] = 10;

		*node[0x57eca6cbd050] = ;;

		*node[0x57eca6cbd080] = return;

		*node[0x57eca6cbd0b0] = 0;

		*node[0x57eca6cbd0e0] = ;;

		*node[0x57eca6cbd110] = 6;

		*node[0x57eca6cbd140] = 1;

		*node[0x57eca6cbd170] = 2;

		*node[0x57eca6cbd1a0] = 3;

		*node[0x57eca6cbd1d0] = ;;

		*node[0x57eca6cbd200] = =;

		*node[0x57eca6cbd230] = 7;

		*node[0x57eca6cbd260] = -;

		*node[0x57eca6cbd290] = 0;

		*node[0x57eca6cbd2c0] = 1;

		*node[0x57eca6cbd2f0] = ;;

		*node[0x57eca6cbd320] = =;

		*node[0x57eca6cbd350] = 8;

		*node[0x57eca6cbd380] = 1;

		*node[0x57eca6cbd3b0] = ;;

		*node[0x57eca6cbd3e0] = =;

		*node[0x57eca6cbd410] = 11;

		*node[0x57eca6cbd440] = 2;

		*node[0x57eca6cbd470] = ;;

		*node[0x57eca6cbd4a0] = if;

		*node[0x57eca6cbd4d0] = op_no;

		*node[0x57eca6cbd500] = ==;

		*node[0x57eca6cbd530] = 3;

		*node[0x57eca6cbd560] = 0;

		*node[0x57eca6cbd590] = ;;

		*node[0x57eca6cbd5c0] = =;

		*node[0x57eca6cbd5f0] = 12;

		*node[0x57eca6cbd620] = 0;

		*node[0x57eca6cbd650] = ;;

		*node[0x57eca6cbd680] = =;

		*node[0x57eca6cbd6b0] = 13;

		*node[0x57eca6cbd6e0] = /;

		*node[0x57eca6cbd710] = -;

		*node[0x57eca6cbd740] = 0;

		*node[0x57eca6cbd770] = 2;

		*node[0x57eca6cbd7a0] = 1;

		*node[0x57eca6cbd7d0] = ;;

		*node[0x57eca6cbd800] = print;

		*node[0x57eca6cbd830] = 11;

		*node[0x57eca6cbd860] = ;;

		*node[0x57eca6cbd890] = print;

		*node[0x57eca6cbd8c0] = 12;

		*node[0x57eca6cbd8f0] = 13;

		*node[0x57eca6cbd920] = else;

		*node[0x57eca6cbd950] = op_no;

		*node[0x57eca6cbd980] = ;;

		*node[0x57eca6cbd9b0] = =;

		*node[0x57eca6cbd9e0] = 14;

		*node[0x57eca6cbda10] = -;

		*node[0x57eca6cbda40] = *;

		*node[0x57eca6cbda70] = 2;

		*node[0x57eca6cbdaa0] = 2;

		*node[0x57eca6cbdad0] = *;

		*node[0x57eca6cbdb00] = *;

		*node[0x57eca6cbdb30] = 4;

		*node[0x57eca6cbdb60] = 1;

		*node[0x57eca6cbdb90] = 3;

		*node[0x57eca6cbdbc0] = ;;

		*node[0x57eca6cbdbf0] = if;

		*node[0x57eca6cbdc20] = op_no;

		*node[0x57eca6cbdc50] = >;

		*node[0x57eca6cbdc80] = 14;

		*node[0x57eca6cbdcb0] = 0;

		*node[0x57eca6cbdce0] = ;;

		*node[0x57eca6cbdd10] = =;

		*node[0x57eca6cbdd40] = 15;

		*node[0x57eca6cbdd70] = sqrt;

		*node[0x57eca6cbdda0] = 14;

		*node[0x57eca6cbddd0] = ;;

		*node[0x57eca6cbde00] = =;

		*node[0x57eca6cbde30] = 12;

		*node[0x57eca6cbde60] = /;

		*node[0x57eca6cbde90] = -;

		*node[0x57eca6cbdec0] = -;

		*node[0x57eca6cbdef0] = 0;

		*node[0x57eca6cbdf20] = 2;

		*node[0x57eca6cbdf50] = 15;

		*node[0x57eca6cbdf80] = *;

		*node[0x57eca6cbdfb0] = 2;

		*node[0x57eca6cbdfe0] = 1;

		*node[0x57eca6cbe010] = ;;

		*node[0x57eca6cbe040] = =;

		*node[0x57eca6cbe070] = 13;

		*node[0x57eca6cbe0a0] = /;

		*node[0x57eca6cbe0d0] = +;

		*node[0x57eca6cbe100] = -;

		*node[0x57eca6cbe130] = 0;

		*node[0x57eca6cbe160] = 2;

		*node[0x57eca6cbe190] = 15;

		*node[0x57eca6cbe1c0] = *;

		*node[0x57eca6cbe1f0] = 2;

		*node[0x57eca6cbe220] = 1;

		*node[0x57eca6cbe250] = ;;

		*node[0x57eca6cbe280] = print;

		*node[0x57eca6cbe2b0] = 11;

		*node[0x57eca6cbe2e0] = ;;

		*node[0x57eca6cbe310] = print;

		*node[0x57eca6cbe340] = 12;

		*node[0x57eca6cbe370] = 13;

		*node[0x57eca6cbe3a0] = elseif;

		*node[0x57eca6cbe3d0] = op_no;

		*node[0x57eca6cbe400] = ==;

		*node[0x57eca6cbe430] = 14;

		*node[0x57eca6cbe460] = 0;

		*node[0x57eca6cbe490] = ;;

		*node[0x57eca6cbe4c0] = =;

		*node[0x57eca6cbe4f0] = 10;

		*node[0x57eca6cbe520] = /;

		*node[0x57eca6cbe550] = -;

		*node[0x57eca6cbe580] = 0;

		*node[0x57eca6cbe5b0] = 2;

		*node[0x57eca6cbe5e0] = *;

		*node[0x57eca6cbe610] = 2;

		*node[0x57eca6cbe640] = 1;

		*node[0x57eca6cbe670] = ;;

		*node[0x57eca6cbe6a0] = print;

		*node[0x57eca6cbe6d0] = 8;

		*node[0x57eca6cbe700] = ;;

		*node[0x57eca6cbe730] = print;

		*node[0x57eca6cbe760] = 10;

		*node[0x57eca6cbe790] = else;

		*node[0x57eca6cbe7c0] = op_no;

		*node[0x57eca6cbe7f0] = ;;

		*node[0x57eca6cbe820] = print;

		*node[0x57eca6cbe850] = 7;

		*node[0x57eca6cbe880] = ;;

		*node[0x57eca6cbe8b0] = return;

		*node[0x57eca6cbe8e0] = 0;

		*node[0x57eca6cbe910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc4087b190] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e9d594a1fd0] = ;;

		*node[0x5e9d594a2000] = 0;

		*node[0x5e9d594a2030] = ;;

		*node[0x5e9d594a2060] = input;

		*node[0x5e9d594a2090] = 1;

		*node[0x5e9d594a20c0] = 2;

		*node[0x5e9d594a20f0] = 3;

		*node[0x5e9d594a2120] = ;;

		*node[0x5e9d594a2180] = 1;

		*node[0x5e9d594a21b0] = 2;

		*node[0x5e9d594a21e0] = 3;

		*node[0x5e9d594a2210] = ;;

		*node[0x5e9d594a2240] = 4;

		*node[0x5e9d594a2270] = 1;

		*node[0x5e9d594a22a0] = 2;

		*node[0x5e9d594a22d0] = 3;

		*node[0x5e9d594a2300] = ;;

		*node[0x5e9d594a2330] = if;

		*node[0x5e9d594a2360] = op_no;

		*node[0x5e9d594a2390] = ==;

		*node[0x5e9d594a23c0] = 1;

		*node[0x5e9d594a23f0] = 0;

		*node[0x5e9d594a2420] = ;;

		*node[0x5e9d594a2480] = 2;

		*node[0x5e9d594a24b0] = 3;

		*node[0x5e9d594a24e0] = else;

		*node[0x5e9d594a2510] = op_no;

		*node[0x5e9d594a2540] = ;;

		*node[0x5e9d594a25a0] = 1;

		*node[0x5e9d594a25d0] = 2;

		*node[0x5e9d594a2600] = 3;

		*node[0x5e9d594a2630] = ;;

		*node[0x5e9d594a2660] = 5;

		*node[0x5e9d594a2690] = 1;

		*node[0x5e9d594a26c0] = 2;

		*node[0x5e9d594a26f0] = ;;

		*node[0x5e9d594a2720] = =;

		*node[0x5e9d594a2750] = 7;

		*node[0x5e9d594a2780] = -;

		*node[0x5e9d594a27b0] = 0;

		*node[0x5e9d594a27e0] = 1;

		*node[0x5e9d594a2810] = ;;

		*node[0x5e9d594a2840] = =;

		*node[0x5e9d594a2870] = 8;

		*node[0x5e9d594a28a0] = 1;

		*node[0x5e9d594a28d0] = ;;

		*node[0x5e9d594a2900] = =;

		*node[0x5e9d594a2930] = 9;

		*node[0x5e9d594a2960] = 1000;

		*node[0x5e9d594a2990] = ;;

		*node[0x5e9d594a29c0] = if;

		*node[0x5e9d594a29f0] = op_no;

		*node[0x5e9d594a2a20] = ==;

		*node[0x5e9d594a2a50] = 1;

		*node[0x5e9d594a2a80] = 0;

		*node[0x5e9d594a2ab0] = ;;

		*node[0x5e9d594a2ae0] = if;

		*node[0x5e9d594a2b10] = op_no;

		*node[0x5e9d594a2b40] = ==;

		*node[0x5e9d594a2b70] = 2;

		*node[0x5e9d594a2ba0] = 0;

		*node[0x5e9d594a2bd0] = ;;

		*node[0x5e9d594a2c00] = print;

		*node[0x5e9d594a2c30] = 9;

		*node[0x5e9d594a2c60] = else;

		*node[0x5e9d594a2c90] = op_no;

		*node[0x5e9d594a2cc0] = ;;

		*node[0x5e9d594a2cf0] = print;

		*node[0x5e9d594a2d20] = 7;

		*node[0x5e9d594a2d50] = else;

		*node[0x5e9d594a2d80] = op_no;

		*node[0x5e9d594a2db0] = ;;

		*node[0x5e9d594a2de0] = =;

		*node[0x5e9d594a2e10] = 10;

		*node[0x5e9d594a2e40] = /;

		*node[0x5e9d594a2e70] = -;

		*node[0x5e9d594a2ea0] = 0;

		*node[0x5e9d594a2ed0] = 2;

		*node[0x5e9d594a2f00] = 1;

		*node[0x5e9d594a2f30] = ;;

		*node[0x5e9d594a2f60] = print;

		*node[0x5e9d594a2f90] = 8;

		*node[0x5e9d594a2fc0] = ;;

		*node[0x5e9d594a2ff0] = print;

		*node[0x5e9d594a3020] = 10;

		*node[0x5e9d594a3050] = ;;

		*node[0x5e9d594a3080] = return;

		*node[0x5e9d594a30b0] = 0;

		*node[0x5e9d594a30e0] = ;;

		*node[0x5e9d594a3110] = 6;

		*node[0x5e9d594a3140] = 1;

		*node[0x5e9d594a3170] = 2;

		*node[0x5e9d594a31a0] = 3;

		*node[0x5e9d594a31d0] = ;;

		*node[0x5e9d594a3200] = =;

		*node[0x5e9d594a3230] = 7;

		*node[0x5e9d594a3260] = -;

		*node[0x5e9d594a3290] = 0;

		*node[0x5e9d594a32c0] = 1;

		*node[0x5e9d594a32f0] = ;;

		*node[0x5e9d594a3320] = =;

		*node[0x5e9d594a3350] = 8;

		*node[0x5e9d594a3380] = 1;

		*node[0x5e9d594a33b0] = ;;

		*node[0x5e9d594a33e0] = =;

		*node[0x5e9d594a3410] = 11;

		*node[0x5e9d594a3440] = 2;

		*node[0x5e9d594a3470] = ;;

		*node[0x5e9d594a34a0] = if;

		*node[0x5e9d594a34d0] = op_no;

		*node[0x5e9d594a3500] = ==;

		*node[0x5e9d594a3530] = 3;

		*node[0x5e9d594a3560] = 0;

		*node[0x5e9d594a3590] = ;;

		*node[0x5e9d594a35c0] = =;

		*node[0x5e9d594a35f0] = 12;

		*node[0x5e9d594a3620] = 0;

		*node[0x5e9d594a3650] = ;;

		*node[0x5e9d594a3680] = =;

		*node[0x5e9d594a36b0] = 13;

		*node[0x5e9d594a36e0] = /;

		*node[0x5e9d594a3710] = -;

		*node[0x5e9d594a3740] = 0;

		*node[0x5e9d594a3770] = 2;

		*node[0x5e9d594a37a0] = 1;

		*node[0x5e9d594a37d0] = ;;

		*node[0x5e9d594a3800] = print;

		*node[0x5e9d594a3830] = 11;

		*node[0x5e9d594a3860] = ;;

		*node[0x5e9d594a3890] = print;

		*node[0x5e9d594a38c0] = 12;

		*node[0x5e9d594a38f0] = 13;

		*node[0x5e9d594a3920] = else;

		*node[0x5e9d594a3950] = op_no;

		*node[0x5e9d594a3980] = ;;

		*node[0x5e9d594a39b0] = =;

		*node[0x5e9d594a39e0] = 14;

		*node[0x5e9d594a3a10] = -;

		*node[0x5e9d594a3a40] = *;

		*node[0x5e9d594a3a70] = 2;

		*node[0x5e9d594a3aa0] = 2;

		*node[0x5e9d594a3ad0] = *;

		*node[0x5e9d594a3b00] = *;

		*node[0x5e9d594a3b30] = 4;

		*node[0x5e9d594a3b60] = 1;

		*node[0x5e9d594a3b90] = 3;

		*node[0x5e9d594a3bc0] = ;;

		*node[0x5e9d594a3bf0] = if;

		*node[0x5e9d594a3c20] = op_no;

		*node[0x5e9d594a3c50] = >;

		*node[0x5e9d594a3c80] = 14;

		*node[0x5e9d594a3cb0] = 0;

		*node[0x5e9d594a3ce0] = ;;

		*node[0x5e9d594a3d10] = =;

		*node[0x5e9d594a3d40] = 15;

		*node[0x5e9d594a3d70] = sqrt;

		*node[0x5e9d594a3da0] = 14;

		*node[0x5e9d594a3dd0] = ;;

		*node[0x5e9d594a3e00] = =;

		*node[0x5e9d594a3e30] = 12;

		*node[0x5e9d594a3e60] = /;

		*node[0x5e9d594a3e90] = -;

		*node[0x5e9d594a3ec0] = -;

		*node[0x5e9d594a3ef0] = 0;

		*node[0x5e9d594a3f20] = 2;

		*node[0x5e9d594a3f50] = 15;

		*node[0x5e9d594a3f80] = *;

		*node[0x5e9d594a3fb0] = 2;

		*node[0x5e9d594a3fe0] = 1;

		*node[0x5e9d594a4010] = ;;

		*node[0x5e9d594a4040] = =;

		*node[0x5e9d594a4070] = 13;

		*node[0x5e9d594a40a0] = /;

		*node[0x5e9d594a40d0] = +;

		*node[0x5e9d594a4100] = -;

		*node[0x5e9d594a4130] = 0;

		*node[0x5e9d594a4160] = 2;

		*node[0x5e9d594a4190] = 15;

		*node[0x5e9d594a41c0] = *;

		*node[0x5e9d594a41f0] = 2;

		*node[0x5e9d594a4220] = 1;

		*node[0x5e9d594a4250] = ;;

		*node[0x5e9d594a4280] = print;

		*node[0x5e9d594a42b0] = 11;

		*node[0x5e9d594a42e0] = ;;

		*node[0x5e9d594a4310] = print;

		*node[0x5e9d594a4340] = 12;

		*node[0x5e9d594a4370] = 13;

		*node[0x5e9d594a43a0] = elseif;

		*node[0x5e9d594a43d0] = op_no;

		*node[0x5e9d594a4400] = ==;

		*node[0x5e9d594a4430] = 14;

		*node[0x5e9d594a4460] = 0;

		*node[0x5e9d594a4490] = ;;

		*node[0x5e9d594a44c0] = =;

		*node[0x5e9d594a44f0] = 10;

		*node[0x5e9d594a4520] = /;

		*node[0x5e9d594a4550] = -;

		*node[0x5e9d594a4580] = 0;

		*node[0x5e9d594a45b0] = 2;

		*node[0x5e9d594a45e0] = *;

		*node[0x5e9d594a4610] = 2;

		*node[0x5e9d594a4640] = 1;

		*node[0x5e9d594a4670] = ;;

		*node[0x5e9d594a46a0] = print;

		*node[0x5e9d594a46d0] = 8;

		*node[0x5e9d594a4700] = ;;

		*node[0x5e9d594a4730] = print;

		*node[0x5e9d594a4760] = 10;

		*node[0x5e9d594a4790] = else;

		*node[0x5e9d594a47c0] = op_no;

		*node[0x5e9d594a47f0] = ;;

		*node[0x5e9d594a4820] = print;

		*node[0x5e9d594a4850] = 7;

		*node[0x5e9d594a4880] = ;;

		*node[0x5e9d594a48b0] = return;

		*node[0x5e9d594a48e0] = 0;

		*node[0x5e9d594a4910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff232c2690] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5d81162cbfd0] = ;;

		*node[0x5d81162cc000] = 0;

		*node[0x5d81162cc030] = ;;

		*node[0x5d81162cc060] = input;

		*node[0x5d81162cc090] = 1;

		*node[0x5d81162cc0c0] = 2;

		*node[0x5d81162cc0f0] = 3;

		*node[0x5d81162cc120] = ;;

		*node[0x5d81162cc180] = 1;

		*node[0x5d81162cc1b0] = 2;

		*node[0x5d81162cc1e0] = 3;

		*node[0x5d81162cc210] = ;;

		*node[0x5d81162cc240] = 4;

		*node[0x5d81162cc270] = 1;

		*node[0x5d81162cc2a0] = 2;

		*node[0x5d81162cc2d0] = 3;

		*node[0x5d81162cc300] = ;;

		*node[0x5d81162cc330] = if;

		*node[0x5d81162cc360] = op_no;

		*node[0x5d81162cc390] = ==;

		*node[0x5d81162cc3c0] = 1;

		*node[0x5d81162cc3f0] = 0;

		*node[0x5d81162cc420] = ;;

		*node[0x5d81162cc480] = 2;

		*node[0x5d81162cc4b0] = 3;

		*node[0x5d81162cc4e0] = else;

		*node[0x5d81162cc510] = op_no;

		*node[0x5d81162cc540] = ;;

		*node[0x5d81162cc5a0] = 1;

		*node[0x5d81162cc5d0] = 2;

		*node[0x5d81162cc600] = 3;

		*node[0x5d81162cc630] = ;;

		*node[0x5d81162cc660] = 5;

		*node[0x5d81162cc690] = 1;

		*node[0x5d81162cc6c0] = 2;

		*node[0x5d81162cc6f0] = ;;

		*node[0x5d81162cc720] = =;

		*node[0x5d81162cc750] = 7;

		*node[0x5d81162cc780] = -;

		*node[0x5d81162cc7b0] = 0;

		*node[0x5d81162cc7e0] = 1;

		*node[0x5d81162cc810] = ;;

		*node[0x5d81162cc840] = =;

		*node[0x5d81162cc870] = 8;

		*node[0x5d81162cc8a0] = 1;

		*node[0x5d81162cc8d0] = ;;

		*node[0x5d81162cc900] = =;

		*node[0x5d81162cc930] = 9;

		*node[0x5d81162cc960] = 1000;

		*node[0x5d81162cc990] = ;;

		*node[0x5d81162cc9c0] = if;

		*node[0x5d81162cc9f0] = op_no;

		*node[0x5d81162cca20] = ==;

		*node[0x5d81162cca50] = 1;

		*node[0x5d81162cca80] = 0;

		*node[0x5d81162ccab0] = ;;

		*node[0x5d81162ccae0] = if;

		*node[0x5d81162ccb10] = op_no;

		*node[0x5d81162ccb40] = ==;

		*node[0x5d81162ccb70] = 2;

		*node[0x5d81162ccba0] = 0;

		*node[0x5d81162ccbd0] = ;;

		*node[0x5d81162ccc00] = print;

		*node[0x5d81162ccc30] = 9;

		*node[0x5d81162ccc60] = else;

		*node[0x5d81162ccc90] = op_no;

		*node[0x5d81162cccc0] = ;;

		*node[0x5d81162cccf0] = print;

		*node[0x5d81162ccd20] = 7;

		*node[0x5d81162ccd50] = else;

		*node[0x5d81162ccd80] = op_no;

		*node[0x5d81162ccdb0] = ;;

		*node[0x5d81162ccde0] = =;

		*node[0x5d81162cce10] = 10;

		*node[0x5d81162cce40] = /;

		*node[0x5d81162cce70] = -;

		*node[0x5d81162ccea0] = 0;

		*node[0x5d81162cced0] = 2;

		*node[0x5d81162ccf00] = 1;

		*node[0x5d81162ccf30] = ;;

		*node[0x5d81162ccf60] = print;

		*node[0x5d81162ccf90] = 8;

		*node[0x5d81162ccfc0] = ;;

		*node[0x5d81162ccff0] = print;

		*node[0x5d81162cd020] = 10;

		*node[0x5d81162cd050] = ;;

		*node[0x5d81162cd080] = return;

		*node[0x5d81162cd0b0] = 0;

		*node[0x5d81162cd0e0] = ;;

		*node[0x5d81162cd110] = 6;

		*node[0x5d81162cd140] = 1;

		*node[0x5d81162cd170] = 2;

		*node[0x5d81162cd1a0] = 3;

		*node[0x5d81162cd1d0] = ;;

		*node[0x5d81162cd200] = =;

		*node[0x5d81162cd230] = 7;

		*node[0x5d81162cd260] = -;

		*node[0x5d81162cd290] = 0;

		*node[0x5d81162cd2c0] = 1;

		*node[0x5d81162cd2f0] = ;;

		*node[0x5d81162cd320] = =;

		*node[0x5d81162cd350] = 8;

		*node[0x5d81162cd380] = 1;

		*node[0x5d81162cd3b0] = ;;

		*node[0x5d81162cd3e0] = =;

		*node[0x5d81162cd410] = 11;

		*node[0x5d81162cd440] = 2;

		*node[0x5d81162cd470] = ;;

		*node[0x5d81162cd4a0] = if;

		*node[0x5d81162cd4d0] = op_no;

		*node[0x5d81162cd500] = ==;

		*node[0x5d81162cd530] = 3;

		*node[0x5d81162cd560] = 0;

		*node[0x5d81162cd590] = ;;

		*node[0x5d81162cd5c0] = =;

		*node[0x5d81162cd5f0] = 12;

		*node[0x5d81162cd620] = 0;

		*node[0x5d81162cd650] = ;;

		*node[0x5d81162cd680] = =;

		*node[0x5d81162cd6b0] = 13;

		*node[0x5d81162cd6e0] = /;

		*node[0x5d81162cd710] = -;

		*node[0x5d81162cd740] = 0;

		*node[0x5d81162cd770] = 2;

		*node[0x5d81162cd7a0] = 1;

		*node[0x5d81162cd7d0] = ;;

		*node[0x5d81162cd800] = print;

		*node[0x5d81162cd830] = 11;

		*node[0x5d81162cd860] = ;;

		*node[0x5d81162cd890] = print;

		*node[0x5d81162cd8c0] = 12;

		*node[0x5d81162cd8f0] = 13;

		*node[0x5d81162cd920] = else;

		*node[0x5d81162cd950] = op_no;

		*node[0x5d81162cd980] = ;;

		*node[0x5d81162cd9b0] = =;

		*node[0x5d81162cd9e0] = 14;

		*node[0x5d81162cda10] = -;

		*node[0x5d81162cda40] = *;

		*node[0x5d81162cda70] = 2;

		*node[0x5d81162cdaa0] = 2;

		*node[0x5d81162cdad0] = *;

		*node[0x5d81162cdb00] = *;

		*node[0x5d81162cdb30] = 4;

		*node[0x5d81162cdb60] = 1;

		*node[0x5d81162cdb90] = 3;

		*node[0x5d81162cdbc0] = ;;

		*node[0x5d81162cdbf0] = if;

		*node[0x5d81162cdc20] = op_no;

		*node[0x5d81162cdc50] = >;

		*node[0x5d81162cdc80] = 14;

		*node[0x5d81162cdcb0] = 0;

		*node[0x5d81162cdce0] = ;;

		*node[0x5d81162cdd10] = =;

		*node[0x5d81162cdd40] = 15;

		*node[0x5d81162cdd70] = sqrt;

		*node[0x5d81162cdda0] = 14;

		*node[0x5d81162cddd0] = ;;

		*node[0x5d81162cde00] = =;

		*node[0x5d81162cde30] = 12;

		*node[0x5d81162cde60] = /;

		*node[0x5d81162cde90] = -;

		*node[0x5d81162cdec0] = -;

		*node[0x5d81162cdef0] = 0;

		*node[0x5d81162cdf20] = 2;

		*node[0x5d81162cdf50] = 15;

		*node[0x5d81162cdf80] = *;

		*node[0x5d81162cdfb0] = 2;

		*node[0x5d81162cdfe0] = 1;

		*node[0x5d81162ce010] = ;;

		*node[0x5d81162ce040] = =;

		*node[0x5d81162ce070] = 13;

		*node[0x5d81162ce0a0] = /;

		*node[0x5d81162ce0d0] = +;

		*node[0x5d81162ce100] = -;

		*node[0x5d81162ce130] = 0;

		*node[0x5d81162ce160] = 2;

		*node[0x5d81162ce190] = 15;

		*node[0x5d81162ce1c0] = *;

		*node[0x5d81162ce1f0] = 2;

		*node[0x5d81162ce220] = 1;

		*node[0x5d81162ce250] = ;;

		*node[0x5d81162ce280] = print;

		*node[0x5d81162ce2b0] = 11;

		*node[0x5d81162ce2e0] = ;;

		*node[0x5d81162ce310] = print;

		*node[0x5d81162ce340] = 12;

		*node[0x5d81162ce370] = 13;

		*node[0x5d81162ce3a0] = elseif;

		*node[0x5d81162ce3d0] = op_no;

		*node[0x5d81162ce400] = ==;

		*node[0x5d81162ce430] = 14;

		*node[0x5d81162ce460] = 0;

		*node[0x5d81162ce490] = ;;

		*node[0x5d81162ce4c0] = =;

		*node[0x5d81162ce4f0] = 10;

		*node[0x5d81162ce520] = /;

		*node[0x5d81162ce550] = -;

		*node[0x5d81162ce580] = 0;

		*node[0x5d81162ce5b0] = 2;

		*node[0x5d81162ce5e0] = *;

		*node[0x5d81162ce610] = 2;

		*node[0x5d81162ce640] = 1;

		*node[0x5d81162ce670] = ;;

		*node[0x5d81162ce6a0] = print;

		*node[0x5d81162ce6d0] = 8;

		*node[0x5d81162ce700] = ;;

		*node[0x5d81162ce730] = print;

		*node[0x5d81162ce760] = 10;

		*node[0x5d81162ce790] = else;

		*node[0x5d81162ce7c0] = op_no;

		*node[0x5d81162ce7f0] = ;;

		*node[0x5d81162ce820] = print;

		*node[0x5d81162ce850] = 7;

		*node[0x5d81162ce880] = ;;

		*node[0x5d81162ce8b0] = return;

		*node[0x5d81162ce8e0] = 0;

		*node[0x5d81162ce910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd0fdcf080] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5c56c07c5fd0] = ;;

		*node[0x5c56c07c6000] = 0;

		*node[0x5c56c07c6030] = ;;

		*node[0x5c56c07c6060] = input;

		*node[0x5c56c07c6090] = 1;

		*node[0x5c56c07c60c0] = 2;

		*node[0x5c56c07c60f0] = 3;

		*node[0x5c56c07c6120] = ;;

		*node[0x5c56c07c6180] = 1;

		*node[0x5c56c07c61b0] = 2;

		*node[0x5c56c07c61e0] = 3;

		*node[0x5c56c07c6210] = ;;

		*node[0x5c56c07c6240] = 4;

		*node[0x5c56c07c6270] = 1;

		*node[0x5c56c07c62a0] = 2;

		*node[0x5c56c07c62d0] = 3;

		*node[0x5c56c07c6300] = ;;

		*node[0x5c56c07c6330] = if;

		*node[0x5c56c07c6360] = op_no;

		*node[0x5c56c07c6390] = ==;

		*node[0x5c56c07c63c0] = 1;

		*node[0x5c56c07c63f0] = 0;

		*node[0x5c56c07c6420] = ;;

		*node[0x5c56c07c6480] = 2;

		*node[0x5c56c07c64b0] = 3;

		*node[0x5c56c07c64e0] = else;

		*node[0x5c56c07c6510] = op_no;

		*node[0x5c56c07c6540] = ;;

		*node[0x5c56c07c65a0] = 1;

		*node[0x5c56c07c65d0] = 2;

		*node[0x5c56c07c6600] = 3;

		*node[0x5c56c07c6630] = ;;

		*node[0x5c56c07c6660] = 5;

		*node[0x5c56c07c6690] = 1;

		*node[0x5c56c07c66c0] = 2;

		*node[0x5c56c07c66f0] = ;;

		*node[0x5c56c07c6720] = =;

		*node[0x5c56c07c6750] = 7;

		*node[0x5c56c07c6780] = -;

		*node[0x5c56c07c67b0] = 0;

		*node[0x5c56c07c67e0] = 1;

		*node[0x5c56c07c6810] = ;;

		*node[0x5c56c07c6840] = =;

		*node[0x5c56c07c6870] = 8;

		*node[0x5c56c07c68a0] = 1;

		*node[0x5c56c07c68d0] = ;;

		*node[0x5c56c07c6900] = =;

		*node[0x5c56c07c6930] = 9;

		*node[0x5c56c07c6960] = 1000;

		*node[0x5c56c07c6990] = ;;

		*node[0x5c56c07c69c0] = if;

		*node[0x5c56c07c69f0] = op_no;

		*node[0x5c56c07c6a20] = ==;

		*node[0x5c56c07c6a50] = 1;

		*node[0x5c56c07c6a80] = 0;

		*node[0x5c56c07c6ab0] = ;;

		*node[0x5c56c07c6ae0] = if;

		*node[0x5c56c07c6b10] = op_no;

		*node[0x5c56c07c6b40] = ==;

		*node[0x5c56c07c6b70] = 2;

		*node[0x5c56c07c6ba0] = 0;

		*node[0x5c56c07c6bd0] = ;;

		*node[0x5c56c07c6c00] = print;

		*node[0x5c56c07c6c30] = 9;

		*node[0x5c56c07c6c60] = else;

		*node[0x5c56c07c6c90] = op_no;

		*node[0x5c56c07c6cc0] = ;;

		*node[0x5c56c07c6cf0] = print;

		*node[0x5c56c07c6d20] = 7;

		*node[0x5c56c07c6d50] = else;

		*node[0x5c56c07c6d80] = op_no;

		*node[0x5c56c07c6db0] = ;;

		*node[0x5c56c07c6de0] = =;

		*node[0x5c56c07c6e10] = 10;

		*node[0x5c56c07c6e40] = /;

		*node[0x5c56c07c6e70] = -;

		*node[0x5c56c07c6ea0] = 0;

		*node[0x5c56c07c6ed0] = 2;

		*node[0x5c56c07c6f00] = 1;

		*node[0x5c56c07c6f30] = ;;

		*node[0x5c56c07c6f60] = print;

		*node[0x5c56c07c6f90] = 8;

		*node[0x5c56c07c6fc0] = ;;

		*node[0x5c56c07c6ff0] = print;

		*node[0x5c56c07c7020] = 10;

		*node[0x5c56c07c7050] = ;;

		*node[0x5c56c07c7080] = return;

		*node[0x5c56c07c70b0] = 0;

		*node[0x5c56c07c70e0] = ;;

		*node[0x5c56c07c7110] = 6;

		*node[0x5c56c07c7140] = 1;

		*node[0x5c56c07c7170] = 2;

		*node[0x5c56c07c71a0] = 3;

		*node[0x5c56c07c71d0] = ;;

		*node[0x5c56c07c7200] = =;

		*node[0x5c56c07c7230] = 7;

		*node[0x5c56c07c7260] = -;

		*node[0x5c56c07c7290] = 0;

		*node[0x5c56c07c72c0] = 1;

		*node[0x5c56c07c72f0] = ;;

		*node[0x5c56c07c7320] = =;

		*node[0x5c56c07c7350] = 8;

		*node[0x5c56c07c7380] = 1;

		*node[0x5c56c07c73b0] = ;;

		*node[0x5c56c07c73e0] = =;

		*node[0x5c56c07c7410] = 11;

		*node[0x5c56c07c7440] = 2;

		*node[0x5c56c07c7470] = ;;

		*node[0x5c56c07c74a0] = if;

		*node[0x5c56c07c74d0] = op_no;

		*node[0x5c56c07c7500] = ==;

		*node[0x5c56c07c7530] = 3;

		*node[0x5c56c07c7560] = 0;

		*node[0x5c56c07c7590] = ;;

		*node[0x5c56c07c75c0] = =;

		*node[0x5c56c07c75f0] = 12;

		*node[0x5c56c07c7620] = 0;

		*node[0x5c56c07c7650] = ;;

		*node[0x5c56c07c7680] = =;

		*node[0x5c56c07c76b0] = 13;

		*node[0x5c56c07c76e0] = /;

		*node[0x5c56c07c7710] = -;

		*node[0x5c56c07c7740] = 0;

		*node[0x5c56c07c7770] = 2;

		*node[0x5c56c07c77a0] = 1;

		*node[0x5c56c07c77d0] = ;;

		*node[0x5c56c07c7800] = print;

		*node[0x5c56c07c7830] = 11;

		*node[0x5c56c07c7860] = ;;

		*node[0x5c56c07c7890] = print;

		*node[0x5c56c07c78c0] = 12;

		*node[0x5c56c07c78f0] = 13;

		*node[0x5c56c07c7920] = else;

		*node[0x5c56c07c7950] = op_no;

		*node[0x5c56c07c7980] = ;;

		*node[0x5c56c07c79b0] = =;

		*node[0x5c56c07c79e0] = 14;

		*node[0x5c56c07c7a10] = -;

		*node[0x5c56c07c7a40] = *;

		*node[0x5c56c07c7a70] = 2;

		*node[0x5c56c07c7aa0] = 2;

		*node[0x5c56c07c7ad0] = *;

		*node[0x5c56c07c7b00] = *;

		*node[0x5c56c07c7b30] = 4;

		*node[0x5c56c07c7b60] = 1;

		*node[0x5c56c07c7b90] = 3;

		*node[0x5c56c07c7bc0] = ;;

		*node[0x5c56c07c7bf0] = if;

		*node[0x5c56c07c7c20] = op_no;

		*node[0x5c56c07c7c50] = >;

		*node[0x5c56c07c7c80] = 14;

		*node[0x5c56c07c7cb0] = 0;

		*node[0x5c56c07c7ce0] = ;;

		*node[0x5c56c07c7d10] = =;

		*node[0x5c56c07c7d40] = 15;

		*node[0x5c56c07c7d70] = sqrt;

		*node[0x5c56c07c7da0] = 14;

		*node[0x5c56c07c7dd0] = ;;

		*node[0x5c56c07c7e00] = =;

		*node[0x5c56c07c7e30] = 12;

		*node[0x5c56c07c7e60] = /;

		*node[0x5c56c07c7e90] = -;

		*node[0x5c56c07c7ec0] = -;

		*node[0x5c56c07c7ef0] = 0;

		*node[0x5c56c07c7f20] = 2;

		*node[0x5c56c07c7f50] = 15;

		*node[0x5c56c07c7f80] = *;

		*node[0x5c56c07c7fb0] = 2;

		*node[0x5c56c07c7fe0] = 1;

		*node[0x5c56c07c8010] = ;;

		*node[0x5c56c07c8040] = =;

		*node[0x5c56c07c8070] = 13;

		*node[0x5c56c07c80a0] = /;

		*node[0x5c56c07c80d0] = +;

		*node[0x5c56c07c8100] = -;

		*node[0x5c56c07c8130] = 0;

		*node[0x5c56c07c8160] = 2;

		*node[0x5c56c07c8190] = 15;

		*node[0x5c56c07c81c0] = *;

		*node[0x5c56c07c81f0] = 2;

		*node[0x5c56c07c8220] = 1;

		*node[0x5c56c07c8250] = ;;

		*node[0x5c56c07c8280] = print;

		*node[0x5c56c07c82b0] = 11;

		*node[0x5c56c07c82e0] = ;;

		*node[0x5c56c07c8310] = print;

		*node[0x5c56c07c8340] = 12;

		*node[0x5c56c07c8370] = 13;

		*node[0x5c56c07c83a0] = elseif;

		*node[0x5c56c07c83d0] = op_no;

		*node[0x5c56c07c8400] = ==;

		*node[0x5c56c07c8430] = 14;

		*node[0x5c56c07c8460] = 0;

		*node[0x5c56c07c8490] = ;;

		*node[0x5c56c07c84c0] = =;

		*node[0x5c56c07c84f0] = 10;

		*node[0x5c56c07c8520] = /;

		*node[0x5c56c07c8550] = -;

		*node[0x5c56c07c8580] = 0;

		*node[0x5c56c07c85b0] = 2;

		*node[0x5c56c07c85e0] = *;

		*node[0x5c56c07c8610] = 2;

		*node[0x5c56c07c8640] = 1;

		*node[0x5c56c07c8670] = ;;

		*node[0x5c56c07c86a0] = print;

		*node[0x5c56c07c86d0] = 8;

		*node[0x5c56c07c8700] = ;;

		*node[0x5c56c07c8730] = print;

		*node[0x5c56c07c8760] = 10;

		*node[0x5c56c07c8790] = else;

		*node[0x5c56c07c87c0] = op_no;

		*node[0x5c56c07c87f0] = ;;

		*node[0x5c56c07c8820] = print;

		*node[0x5c56c07c8850] = 7;

		*node[0x5c56c07c8880] = ;;

		*node[0x5c56c07c88b0] = return;

		*node[0x5c56c07c88e0] = 0;

		*node[0x5c56c07c8910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff29e5f8e0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5f080b30efd0] = ;;

		*node[0x5f080b30f000] = 0;

		*node[0x5f080b30f030] = ;;

		*node[0x5f080b30f060] = input;

		*node[0x5f080b30f090] = 1;

		*node[0x5f080b30f0c0] = 2;

		*node[0x5f080b30f0f0] = 3;

		*node[0x5f080b30f120] = ;;

		*node[0x5f080b30f180] = 1;

		*node[0x5f080b30f1b0] = 2;

		*node[0x5f080b30f1e0] = 3;

		*node[0x5f080b30f210] = ;;

		*node[0x5f080b30f240] = 4;

		*node[0x5f080b30f270] = 1;

		*node[0x5f080b30f2a0] = 2;

		*node[0x5f080b30f2d0] = 3;

		*node[0x5f080b30f300] = ;;

		*node[0x5f080b30f330] = if;

		*node[0x5f080b30f360] = op_no;

		*node[0x5f080b30f390] = ==;

		*node[0x5f080b30f3c0] = 1;

		*node[0x5f080b30f3f0] = 0;

		*node[0x5f080b30f420] = ;;

		*node[0x5f080b30f480] = 2;

		*node[0x5f080b30f4b0] = 3;

		*node[0x5f080b30f4e0] = else;

		*node[0x5f080b30f510] = op_no;

		*node[0x5f080b30f540] = ;;

		*node[0x5f080b30f5a0] = 1;

		*node[0x5f080b30f5d0] = 2;

		*node[0x5f080b30f600] = 3;

		*node[0x5f080b30f630] = ;;

		*node[0x5f080b30f660] = 5;

		*node[0x5f080b30f690] = 1;

		*node[0x5f080b30f6c0] = 2;

		*node[0x5f080b30f6f0] = ;;

		*node[0x5f080b30f720] = =;

		*node[0x5f080b30f750] = 7;

		*node[0x5f080b30f780] = -;

		*node[0x5f080b30f7b0] = 0;

		*node[0x5f080b30f7e0] = 1;

		*node[0x5f080b30f810] = ;;

		*node[0x5f080b30f840] = =;

		*node[0x5f080b30f870] = 8;

		*node[0x5f080b30f8a0] = 1;

		*node[0x5f080b30f8d0] = ;;

		*node[0x5f080b30f900] = =;

		*node[0x5f080b30f930] = 9;

		*node[0x5f080b30f960] = 1000;

		*node[0x5f080b30f990] = ;;

		*node[0x5f080b30f9c0] = if;

		*node[0x5f080b30f9f0] = op_no;

		*node[0x5f080b30fa20] = ==;

		*node[0x5f080b30fa50] = 1;

		*node[0x5f080b30fa80] = 0;

		*node[0x5f080b30fab0] = ;;

		*node[0x5f080b30fae0] = if;

		*node[0x5f080b30fb10] = op_no;

		*node[0x5f080b30fb40] = ==;

		*node[0x5f080b30fb70] = 2;

		*node[0x5f080b30fba0] = 0;

		*node[0x5f080b30fbd0] = ;;

		*node[0x5f080b30fc00] = print;

		*node[0x5f080b30fc30] = 9;

		*node[0x5f080b30fc60] = else;

		*node[0x5f080b30fc90] = op_no;

		*node[0x5f080b30fcc0] = ;;

		*node[0x5f080b30fcf0] = print;

		*node[0x5f080b30fd20] = 7;

		*node[0x5f080b30fd50] = else;

		*node[0x5f080b30fd80] = op_no;

		*node[0x5f080b30fdb0] = ;;

		*node[0x5f080b30fde0] = =;

		*node[0x5f080b30fe10] = 10;

		*node[0x5f080b30fe40] = /;

		*node[0x5f080b30fe70] = -;

		*node[0x5f080b30fea0] = 0;

		*node[0x5f080b30fed0] = 2;

		*node[0x5f080b30ff00] = 1;

		*node[0x5f080b30ff30] = ;;

		*node[0x5f080b30ff60] = print;

		*node[0x5f080b30ff90] = 8;

		*node[0x5f080b30ffc0] = ;;

		*node[0x5f080b30fff0] = print;

		*node[0x5f080b310020] = 10;

		*node[0x5f080b310050] = ;;

		*node[0x5f080b310080] = return;

		*node[0x5f080b3100b0] = 0;

		*node[0x5f080b3100e0] = ;;

		*node[0x5f080b310110] = 6;

		*node[0x5f080b310140] = 1;

		*node[0x5f080b310170] = 2;

		*node[0x5f080b3101a0] = 3;

		*node[0x5f080b3101d0] = ;;

		*node[0x5f080b310200] = =;

		*node[0x5f080b310230] = 7;

		*node[0x5f080b310260] = -;

		*node[0x5f080b310290] = 0;

		*node[0x5f080b3102c0] = 1;

		*node[0x5f080b3102f0] = ;;

		*node[0x5f080b310320] = =;

		*node[0x5f080b310350] = 8;

		*node[0x5f080b310380] = 1;

		*node[0x5f080b3103b0] = ;;

		*node[0x5f080b3103e0] = =;

		*node[0x5f080b310410] = 11;

		*node[0x5f080b310440] = 2;

		*node[0x5f080b310470] = ;;

		*node[0x5f080b3104a0] = if;

		*node[0x5f080b3104d0] = op_no;

		*node[0x5f080b310500] = ==;

		*node[0x5f080b310530] = 3;

		*node[0x5f080b310560] = 0;

		*node[0x5f080b310590] = ;;

		*node[0x5f080b3105c0] = =;

		*node[0x5f080b3105f0] = 12;

		*node[0x5f080b310620] = 0;

		*node[0x5f080b310650] = ;;

		*node[0x5f080b310680] = =;

		*node[0x5f080b3106b0] = 13;

		*node[0x5f080b3106e0] = /;

		*node[0x5f080b310710] = -;

		*node[0x5f080b310740] = 0;

		*node[0x5f080b310770] = 2;

		*node[0x5f080b3107a0] = 1;

		*node[0x5f080b3107d0] = ;;

		*node[0x5f080b310800] = print;

		*node[0x5f080b310830] = 11;

		*node[0x5f080b310860] = ;;

		*node[0x5f080b310890] = print;

		*node[0x5f080b3108c0] = 12;

		*node[0x5f080b3108f0] = 13;

		*node[0x5f080b310920] = else;

		*node[0x5f080b310950] = op_no;

		*node[0x5f080b310980] = ;;

		*node[0x5f080b3109b0] = =;

		*node[0x5f080b3109e0] = 14;

		*node[0x5f080b310a10] = -;

		*node[0x5f080b310a40] = *;

		*node[0x5f080b310a70] = 2;

		*node[0x5f080b310aa0] = 2;

		*node[0x5f080b310ad0] = *;

		*node[0x5f080b310b00] = *;

		*node[0x5f080b310b30] = 4;

		*node[0x5f080b310b60] = 1;

		*node[0x5f080b310b90] = 3;

		*node[0x5f080b310bc0] = ;;

		*node[0x5f080b310bf0] = if;

		*node[0x5f080b310c20] = op_no;

		*node[0x5f080b310c50] = >;

		*node[0x5f080b310c80] = 14;

		*node[0x5f080b310cb0] = 0;

		*node[0x5f080b310ce0] = ;;

		*node[0x5f080b310d10] = =;

		*node[0x5f080b310d40] = 15;

		*node[0x5f080b310d70] = sqrt;

		*node[0x5f080b310da0] = 14;

		*node[0x5f080b310dd0] = ;;

		*node[0x5f080b310e00] = =;

		*node[0x5f080b310e30] = 12;

		*node[0x5f080b310e60] = /;

		*node[0x5f080b310e90] = -;

		*node[0x5f080b310ec0] = -;

		*node[0x5f080b310ef0] = 0;

		*node[0x5f080b310f20] = 2;

		*node[0x5f080b310f50] = 15;

		*node[0x5f080b310f80] = *;

		*node[0x5f080b310fb0] = 2;

		*node[0x5f080b310fe0] = 1;

		*node[0x5f080b311010] = ;;

		*node[0x5f080b311040] = =;

		*node[0x5f080b311070] = 13;

		*node[0x5f080b3110a0] = /;

		*node[0x5f080b3110d0] = +;

		*node[0x5f080b311100] = -;

		*node[0x5f080b311130] = 0;

		*node[0x5f080b311160] = 2;

		*node[0x5f080b311190] = 15;

		*node[0x5f080b3111c0] = *;

		*node[0x5f080b3111f0] = 2;

		*node[0x5f080b311220] = 1;

		*node[0x5f080b311250] = ;;

		*node[0x5f080b311280] = print;

		*node[0x5f080b3112b0] = 11;

		*node[0x5f080b3112e0] = ;;

		*node[0x5f080b311310] = print;

		*node[0x5f080b311340] = 12;

		*node[0x5f080b311370] = 13;

		*node[0x5f080b3113a0] = elseif;

		*node[0x5f080b3113d0] = op_no;

		*node[0x5f080b311400] = ==;

		*node[0x5f080b311430] = 14;

		*node[0x5f080b311460] = 0;

		*node[0x5f080b311490] = ;;

		*node[0x5f080b3114c0] = =;

		*node[0x5f080b3114f0] = 10;

		*node[0x5f080b311520] = /;

		*node[0x5f080b311550] = -;

		*node[0x5f080b311580] = 0;

		*node[0x5f080b3115b0] = 2;

		*node[0x5f080b3115e0] = *;

		*node[0x5f080b311610] = 2;

		*node[0x5f080b311640] = 1;

		*node[0x5f080b311670] = ;;

		*node[0x5f080b3116a0] = print;

		*node[0x5f080b3116d0] = 8;

		*node[0x5f080b311700] = ;;

		*node[0x5f080b311730] = print;

		*node[0x5f080b311760] = 10;

		*node[0x5f080b311790] = else;

		*node[0x5f080b3117c0] = op_no;

		*node[0x5f080b3117f0] = ;;

		*node[0x5f080b311820] = print;

		*node[0x5f080b311850] = 7;

		*node[0x5f080b311880] = ;;

		*node[0x5f080b3118b0] = return;

		*node[0x5f080b3118e0] = 0;

		*node[0x5f080b311910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc3d2168c0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5726b0b94fd0] = ;;

		*node[0x5726b0b95000] = 0;

		*node[0x5726b0b95030] = ;;

		*node[0x5726b0b95060] = input;

		*node[0x5726b0b95090] = 1;

		*node[0x5726b0b950c0] = 2;

		*node[0x5726b0b950f0] = 3;

		*node[0x5726b0b95120] = ;;

		*node[0x5726b0b95180] = 1;

		*node[0x5726b0b951b0] = 2;

		*node[0x5726b0b951e0] = 3;

		*node[0x5726b0b95210] = ;;

		*node[0x5726b0b95240] = 4;

		*node[0x5726b0b95270] = 1;

		*node[0x5726b0b952a0] = 2;

		*node[0x5726b0b952d0] = 3;

		*node[0x5726b0b95300] = ;;

		*node[0x5726b0b95330] = if;

		*node[0x5726b0b95360] = op_no;

		*node[0x5726b0b95390] = ==;

		*node[0x5726b0b953c0] = 1;

		*node[0x5726b0b953f0] = 0;

		*node[0x5726b0b95420] = ;;

		*node[0x5726b0b95480] = 2;

		*node[0x5726b0b954b0] = 3;

		*node[0x5726b0b954e0] = else;

		*node[0x5726b0b95510] = op_no;

		*node[0x5726b0b95540] = ;;

		*node[0x5726b0b955a0] = 1;

		*node[0x5726b0b955d0] = 2;

		*node[0x5726b0b95600] = 3;

		*node[0x5726b0b95630] = ;;

		*node[0x5726b0b95660] = 5;

		*node[0x5726b0b95690] = 1;

		*node[0x5726b0b956c0] = 2;

		*node[0x5726b0b956f0] = ;;

		*node[0x5726b0b95720] = =;

		*node[0x5726b0b95750] = 7;

		*node[0x5726b0b95780] = -;

		*node[0x5726b0b957b0] = 0;

		*node[0x5726b0b957e0] = 1;

		*node[0x5726b0b95810] = ;;

		*node[0x5726b0b95840] = =;

		*node[0x5726b0b95870] = 8;

		*node[0x5726b0b958a0] = 1;

		*node[0x5726b0b958d0] = ;;

		*node[0x5726b0b95900] = =;

		*node[0x5726b0b95930] = 9;

		*node[0x5726b0b95960] = 1000;

		*node[0x5726b0b95990] = ;;

		*node[0x5726b0b959c0] = if;

		*node[0x5726b0b959f0] = op_no;

		*node[0x5726b0b95a20] = ==;

		*node[0x5726b0b95a50] = 1;

		*node[0x5726b0b95a80] = 0;

		*node[0x5726b0b95ab0] = ;;

		*node[0x5726b0b95ae0] = if;

		*node[0x5726b0b95b10] = op_no;

		*node[0x5726b0b95b40] = ==;

		*node[0x5726b0b95b70] = 2;

		*node[0x5726b0b95ba0] = 0;

		*node[0x5726b0b95bd0] = ;;

		*node[0x5726b0b95c00] = print;

		*node[0x5726b0b95c30] = 9;

		*node[0x5726b0b95c60] = else;

		*node[0x5726b0b95c90] = op_no;

		*node[0x5726b0b95cc0] = ;;

		*node[0x5726b0b95cf0] = print;

		*node[0x5726b0b95d20] = 7;

		*node[0x5726b0b95d50] = else;

		*node[0x5726b0b95d80] = op_no;

		*node[0x5726b0b95db0] = ;;

		*node[0x5726b0b95de0] = =;

		*node[0x5726b0b95e10] = 10;

		*node[0x5726b0b95e40] = /;

		*node[0x5726b0b95e70] = -;

		*node[0x5726b0b95ea0] = 0;

		*node[0x5726b0b95ed0] = 2;

		*node[0x5726b0b95f00] = 1;

		*node[0x5726b0b95f30] = ;;

		*node[0x5726b0b95f60] = print;

		*node[0x5726b0b95f90] = 8;

		*node[0x5726b0b95fc0] = ;;

		*node[0x5726b0b95ff0] = print;

		*node[0x5726b0b96020] = 10;

		*node[0x5726b0b96050] = ;;

		*node[0x5726b0b96080] = return;

		*node[0x5726b0b960b0] = 0;

		*node[0x5726b0b960e0] = ;;

		*node[0x5726b0b96110] = 6;

		*node[0x5726b0b96140] = 1;

		*node[0x5726b0b96170] = 2;

		*node[0x5726b0b961a0] = 3;

		*node[0x5726b0b961d0] = ;;

		*node[0x5726b0b96200] = =;

		*node[0x5726b0b96230] = 7;

		*node[0x5726b0b96260] = -;

		*node[0x5726b0b96290] = 0;

		*node[0x5726b0b962c0] = 1;

		*node[0x5726b0b962f0] = ;;

		*node[0x5726b0b96320] = =;

		*node[0x5726b0b96350] = 8;

		*node[0x5726b0b96380] = 1;

		*node[0x5726b0b963b0] = ;;

		*node[0x5726b0b963e0] = =;

		*node[0x5726b0b96410] = 11;

		*node[0x5726b0b96440] = 2;

		*node[0x5726b0b96470] = ;;

		*node[0x5726b0b964a0] = if;

		*node[0x5726b0b964d0] = op_no;

		*node[0x5726b0b96500] = ==;

		*node[0x5726b0b96530] = 3;

		*node[0x5726b0b96560] = 0;

		*node[0x5726b0b96590] = ;;

		*node[0x5726b0b965c0] = =;

		*node[0x5726b0b965f0] = 12;

		*node[0x5726b0b96620] = 0;

		*node[0x5726b0b96650] = ;;

		*node[0x5726b0b96680] = =;

		*node[0x5726b0b966b0] = 13;

		*node[0x5726b0b966e0] = /;

		*node[0x5726b0b96710] = -;

		*node[0x5726b0b96740] = 0;

		*node[0x5726b0b96770] = 2;

		*node[0x5726b0b967a0] = 1;

		*node[0x5726b0b967d0] = ;;

		*node[0x5726b0b96800] = print;

		*node[0x5726b0b96830] = 11;

		*node[0x5726b0b96860] = ;;

		*node[0x5726b0b96890] = print;

		*node[0x5726b0b968c0] = 12;

		*node[0x5726b0b968f0] = 13;

		*node[0x5726b0b96920] = else;

		*node[0x5726b0b96950] = op_no;

		*node[0x5726b0b96980] = ;;

		*node[0x5726b0b969b0] = =;

		*node[0x5726b0b969e0] = 14;

		*node[0x5726b0b96a10] = -;

		*node[0x5726b0b96a40] = *;

		*node[0x5726b0b96a70] = 2;

		*node[0x5726b0b96aa0] = 2;

		*node[0x5726b0b96ad0] = *;

		*node[0x5726b0b96b00] = *;

		*node[0x5726b0b96b30] = 4;

		*node[0x5726b0b96b60] = 1;

		*node[0x5726b0b96b90] = 3;

		*node[0x5726b0b96bc0] = ;;

		*node[0x5726b0b96bf0] = if;

		*node[0x5726b0b96c20] = op_no;

		*node[0x5726b0b96c50] = >;

		*node[0x5726b0b96c80] = 14;

		*node[0x5726b0b96cb0] = 0;

		*node[0x5726b0b96ce0] = ;;

		*node[0x5726b0b96d10] = =;

		*node[0x5726b0b96d40] = 15;

		*node[0x5726b0b96d70] = sqrt;

		*node[0x5726b0b96da0] = 14;

		*node[0x5726b0b96dd0] = ;;

		*node[0x5726b0b96e00] = =;

		*node[0x5726b0b96e30] = 12;

		*node[0x5726b0b96e60] = /;

		*node[0x5726b0b96e90] = -;

		*node[0x5726b0b96ec0] = -;

		*node[0x5726b0b96ef0] = 0;

		*node[0x5726b0b96f20] = 2;

		*node[0x5726b0b96f50] = 15;

		*node[0x5726b0b96f80] = *;

		*node[0x5726b0b96fb0] = 2;

		*node[0x5726b0b96fe0] = 1;

		*node[0x5726b0b97010] = ;;

		*node[0x5726b0b97040] = =;

		*node[0x5726b0b97070] = 13;

		*node[0x5726b0b970a0] = /;

		*node[0x5726b0b970d0] = +;

		*node[0x5726b0b97100] = -;

		*node[0x5726b0b97130] = 0;

		*node[0x5726b0b97160] = 2;

		*node[0x5726b0b97190] = 15;

		*node[0x5726b0b971c0] = *;

		*node[0x5726b0b971f0] = 2;

		*node[0x5726b0b97220] = 1;

		*node[0x5726b0b97250] = ;;

		*node[0x5726b0b97280] = print;

		*node[0x5726b0b972b0] = 11;

		*node[0x5726b0b972e0] = ;;

		*node[0x5726b0b97310] = print;

		*node[0x5726b0b97340] = 12;

		*node[0x5726b0b97370] = 13;

		*node[0x5726b0b973a0] = elseif;

		*node[0x5726b0b973d0] = op_no;

		*node[0x5726b0b97400] = ==;

		*node[0x5726b0b97430] = 14;

		*node[0x5726b0b97460] = 0;

		*node[0x5726b0b97490] = ;;

		*node[0x5726b0b974c0] = =;

		*node[0x5726b0b974f0] = 10;

		*node[0x5726b0b97520] = /;

		*node[0x5726b0b97550] = -;

		*node[0x5726b0b97580] = 0;

		*node[0x5726b0b975b0] = 2;

		*node[0x5726b0b975e0] = *;

		*node[0x5726b0b97610] = 2;

		*node[0x5726b0b97640] = 1;

		*node[0x5726b0b97670] = ;;

		*node[0x5726b0b976a0] = print;

		*node[0x5726b0b976d0] = 8;

		*node[0x5726b0b97700] = ;;

		*node[0x5726b0b97730] = print;

		*node[0x5726b0b97760] = 10;

		*node[0x5726b0b97790] = else;

		*node[0x5726b0b977c0] = op_no;

		*node[0x5726b0b977f0] = ;;

		*node[0x5726b0b97820] = print;

		*node[0x5726b0b97850] = 7;

		*node[0x5726b0b97880] = ;;

		*node[0x5726b0b978b0] = return;

		*node[0x5726b0b978e0] = 0;

		*node[0x5726b0b97910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd986d4860] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x638a2ef33fd0] = ;;

		*node[0x638a2ef34000] = 0;

		*node[0x638a2ef34030] = ;;

		*node[0x638a2ef34060] = input;

		*node[0x638a2ef34090] = 1;

		*node[0x638a2ef340c0] = 2;

		*node[0x638a2ef340f0] = 3;

		*node[0x638a2ef34120] = ;;

		*node[0x638a2ef34180] = 1;

		*node[0x638a2ef341b0] = 2;

		*node[0x638a2ef341e0] = 3;

		*node[0x638a2ef34210] = ;;

		*node[0x638a2ef34240] = 4;

		*node[0x638a2ef34270] = 1;

		*node[0x638a2ef342a0] = 2;

		*node[0x638a2ef342d0] = 3;

		*node[0x638a2ef34300] = ;;

		*node[0x638a2ef34330] = if;

		*node[0x638a2ef34360] = op_no;

		*node[0x638a2ef34390] = ==;

		*node[0x638a2ef343c0] = 1;

		*node[0x638a2ef343f0] = 0;

		*node[0x638a2ef34420] = ;;

		*node[0x638a2ef34480] = 2;

		*node[0x638a2ef344b0] = 3;

		*node[0x638a2ef344e0] = else;

		*node[0x638a2ef34510] = op_no;

		*node[0x638a2ef34540] = ;;

		*node[0x638a2ef345a0] = 1;

		*node[0x638a2ef345d0] = 2;

		*node[0x638a2ef34600] = 3;

		*node[0x638a2ef34630] = ;;

		*node[0x638a2ef34660] = 5;

		*node[0x638a2ef34690] = 1;

		*node[0x638a2ef346c0] = 2;

		*node[0x638a2ef346f0] = ;;

		*node[0x638a2ef34720] = =;

		*node[0x638a2ef34750] = 7;

		*node[0x638a2ef34780] = -;

		*node[0x638a2ef347b0] = 0;

		*node[0x638a2ef347e0] = 1;

		*node[0x638a2ef34810] = ;;

		*node[0x638a2ef34840] = =;

		*node[0x638a2ef34870] = 8;

		*node[0x638a2ef348a0] = 1;

		*node[0x638a2ef348d0] = ;;

		*node[0x638a2ef34900] = =;

		*node[0x638a2ef34930] = 9;

		*node[0x638a2ef34960] = 1000;

		*node[0x638a2ef34990] = ;;

		*node[0x638a2ef349c0] = if;

		*node[0x638a2ef349f0] = op_no;

		*node[0x638a2ef34a20] = ==;

		*node[0x638a2ef34a50] = 1;

		*node[0x638a2ef34a80] = 0;

		*node[0x638a2ef34ab0] = ;;

		*node[0x638a2ef34ae0] = if;

		*node[0x638a2ef34b10] = op_no;

		*node[0x638a2ef34b40] = ==;

		*node[0x638a2ef34b70] = 2;

		*node[0x638a2ef34ba0] = 0;

		*node[0x638a2ef34bd0] = ;;

		*node[0x638a2ef34c00] = print;

		*node[0x638a2ef34c30] = 9;

		*node[0x638a2ef34c60] = else;

		*node[0x638a2ef34c90] = op_no;

		*node[0x638a2ef34cc0] = ;;

		*node[0x638a2ef34cf0] = print;

		*node[0x638a2ef34d20] = 7;

		*node[0x638a2ef34d50] = else;

		*node[0x638a2ef34d80] = op_no;

		*node[0x638a2ef34db0] = ;;

		*node[0x638a2ef34de0] = =;

		*node[0x638a2ef34e10] = 10;

		*node[0x638a2ef34e40] = /;

		*node[0x638a2ef34e70] = -;

		*node[0x638a2ef34ea0] = 0;

		*node[0x638a2ef34ed0] = 2;

		*node[0x638a2ef34f00] = 1;

		*node[0x638a2ef34f30] = ;;

		*node[0x638a2ef34f60] = print;

		*node[0x638a2ef34f90] = 8;

		*node[0x638a2ef34fc0] = ;;

		*node[0x638a2ef34ff0] = print;

		*node[0x638a2ef35020] = 10;

		*node[0x638a2ef35050] = ;;

		*node[0x638a2ef35080] = return;

		*node[0x638a2ef350b0] = 0;

		*node[0x638a2ef350e0] = ;;

		*node[0x638a2ef35110] = 6;

		*node[0x638a2ef35140] = 1;

		*node[0x638a2ef35170] = 2;

		*node[0x638a2ef351a0] = 3;

		*node[0x638a2ef351d0] = ;;

		*node[0x638a2ef35200] = =;

		*node[0x638a2ef35230] = 7;

		*node[0x638a2ef35260] = -;

		*node[0x638a2ef35290] = 0;

		*node[0x638a2ef352c0] = 1;

		*node[0x638a2ef352f0] = ;;

		*node[0x638a2ef35320] = =;

		*node[0x638a2ef35350] = 8;

		*node[0x638a2ef35380] = 1;

		*node[0x638a2ef353b0] = ;;

		*node[0x638a2ef353e0] = =;

		*node[0x638a2ef35410] = 11;

		*node[0x638a2ef35440] = 2;

		*node[0x638a2ef35470] = ;;

		*node[0x638a2ef354a0] = if;

		*node[0x638a2ef354d0] = op_no;

		*node[0x638a2ef35500] = ==;

		*node[0x638a2ef35530] = 3;

		*node[0x638a2ef35560] = 0;

		*node[0x638a2ef35590] = ;;

		*node[0x638a2ef355c0] = =;

		*node[0x638a2ef355f0] = 12;

		*node[0x638a2ef35620] = 0;

		*node[0x638a2ef35650] = ;;

		*node[0x638a2ef35680] = =;

		*node[0x638a2ef356b0] = 13;

		*node[0x638a2ef356e0] = /;

		*node[0x638a2ef35710] = -;

		*node[0x638a2ef35740] = 0;

		*node[0x638a2ef35770] = 2;

		*node[0x638a2ef357a0] = 1;

		*node[0x638a2ef357d0] = ;;

		*node[0x638a2ef35800] = print;

		*node[0x638a2ef35830] = 11;

		*node[0x638a2ef35860] = ;;

		*node[0x638a2ef35890] = print;

		*node[0x638a2ef358c0] = 12;

		*node[0x638a2ef358f0] = 13;

		*node[0x638a2ef35920] = else;

		*node[0x638a2ef35950] = op_no;

		*node[0x638a2ef35980] = ;;

		*node[0x638a2ef359b0] = =;

		*node[0x638a2ef359e0] = 14;

		*node[0x638a2ef35a10] = -;

		*node[0x638a2ef35a40] = *;

		*node[0x638a2ef35a70] = 2;

		*node[0x638a2ef35aa0] = 2;

		*node[0x638a2ef35ad0] = *;

		*node[0x638a2ef35b00] = *;

		*node[0x638a2ef35b30] = 4;

		*node[0x638a2ef35b60] = 1;

		*node[0x638a2ef35b90] = 3;

		*node[0x638a2ef35bc0] = ;;

		*node[0x638a2ef35bf0] = if;

		*node[0x638a2ef35c20] = op_no;

		*node[0x638a2ef35c50] = >;

		*node[0x638a2ef35c80] = 14;

		*node[0x638a2ef35cb0] = 0;

		*node[0x638a2ef35ce0] = ;;

		*node[0x638a2ef35d10] = =;

		*node[0x638a2ef35d40] = 15;

		*node[0x638a2ef35d70] = sqrt;

		*node[0x638a2ef35da0] = 14;

		*node[0x638a2ef35dd0] = ;;

		*node[0x638a2ef35e00] = =;

		*node[0x638a2ef35e30] = 12;

		*node[0x638a2ef35e60] = /;

		*node[0x638a2ef35e90] = -;

		*node[0x638a2ef35ec0] = -;

		*node[0x638a2ef35ef0] = 0;

		*node[0x638a2ef35f20] = 2;

		*node[0x638a2ef35f50] = 15;

		*node[0x638a2ef35f80] = *;

		*node[0x638a2ef35fb0] = 2;

		*node[0x638a2ef35fe0] = 1;

		*node[0x638a2ef36010] = ;;

		*node[0x638a2ef36040] = =;

		*node[0x638a2ef36070] = 13;

		*node[0x638a2ef360a0] = /;

		*node[0x638a2ef360d0] = +;

		*node[0x638a2ef36100] = -;

		*node[0x638a2ef36130] = 0;

		*node[0x638a2ef36160] = 2;

		*node[0x638a2ef36190] = 15;

		*node[0x638a2ef361c0] = *;

		*node[0x638a2ef361f0] = 2;

		*node[0x638a2ef36220] = 1;

		*node[0x638a2ef36250] = ;;

		*node[0x638a2ef36280] = print;

		*node[0x638a2ef362b0] = 11;

		*node[0x638a2ef362e0] = ;;

		*node[0x638a2ef36310] = print;

		*node[0x638a2ef36340] = 12;

		*node[0x638a2ef36370] = 13;

		*node[0x638a2ef363a0] = elseif;

		*node[0x638a2ef363d0] = op_no;

		*node[0x638a2ef36400] = ==;

		*node[0x638a2ef36430] = 14;

		*node[0x638a2ef36460] = 0;

		*node[0x638a2ef36490] = ;;

		*node[0x638a2ef364c0] = =;

		*node[0x638a2ef364f0] = 10;

		*node[0x638a2ef36520] = /;

		*node[0x638a2ef36550] = -;

		*node[0x638a2ef36580] = 0;

		*node[0x638a2ef365b0] = 2;

		*node[0x638a2ef365e0] = *;

		*node[0x638a2ef36610] = 2;

		*node[0x638a2ef36640] = 1;

		*node[0x638a2ef36670] = ;;

		*node[0x638a2ef366a0] = print;

		*node[0x638a2ef366d0] = 8;

		*node[0x638a2ef36700] = ;;

		*node[0x638a2ef36730] = print;

		*node[0x638a2ef36760] = 10;

		*node[0x638a2ef36790] = else;

		*node[0x638a2ef367c0] = op_no;

		*node[0x638a2ef367f0] = ;;

		*node[0x638a2ef36820] = print;

		*node[0x638a2ef36850] = 7;

		*node[0x638a2ef36880] = ;;

		*node[0x638a2ef368b0] = return;

		*node[0x638a2ef368e0] = 0;

		*node[0x638a2ef36910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc7ec20af0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x60b8f28d4fd0] = ;;

		*node[0x60b8f28d5000] = 0;

		*node[0x60b8f28d5030] = ;;

		*node[0x60b8f28d5060] = input;

		*node[0x60b8f28d5090] = 1;

		*node[0x60b8f28d50c0] = 2;

		*node[0x60b8f28d50f0] = 3;

		*node[0x60b8f28d5120] = ;;

		*node[0x60b8f28d5180] = 1;

		*node[0x60b8f28d51b0] = 2;

		*node[0x60b8f28d51e0] = 3;

		*node[0x60b8f28d5210] = ;;

		*node[0x60b8f28d5240] = 4;

		*node[0x60b8f28d5270] = 1;

		*node[0x60b8f28d52a0] = 2;

		*node[0x60b8f28d52d0] = 3;

		*node[0x60b8f28d5300] = ;;

		*node[0x60b8f28d5330] = if;

		*node[0x60b8f28d5360] = op_no;

		*node[0x60b8f28d5390] = ==;

		*node[0x60b8f28d53c0] = 1;

		*node[0x60b8f28d53f0] = 0;

		*node[0x60b8f28d5420] = ;;

		*node[0x60b8f28d5480] = 2;

		*node[0x60b8f28d54b0] = 3;

		*node[0x60b8f28d54e0] = else;

		*node[0x60b8f28d5510] = op_no;

		*node[0x60b8f28d5540] = ;;

		*node[0x60b8f28d55a0] = 1;

		*node[0x60b8f28d55d0] = 2;

		*node[0x60b8f28d5600] = 3;

		*node[0x60b8f28d5630] = ;;

		*node[0x60b8f28d5660] = 5;

		*node[0x60b8f28d5690] = 1;

		*node[0x60b8f28d56c0] = 2;

		*node[0x60b8f28d56f0] = ;;

		*node[0x60b8f28d5720] = =;

		*node[0x60b8f28d5750] = 7;

		*node[0x60b8f28d5780] = -;

		*node[0x60b8f28d57b0] = 0;

		*node[0x60b8f28d57e0] = 1;

		*node[0x60b8f28d5810] = ;;

		*node[0x60b8f28d5840] = =;

		*node[0x60b8f28d5870] = 8;

		*node[0x60b8f28d58a0] = 1;

		*node[0x60b8f28d58d0] = ;;

		*node[0x60b8f28d5900] = =;

		*node[0x60b8f28d5930] = 9;

		*node[0x60b8f28d5960] = 1000;

		*node[0x60b8f28d5990] = ;;

		*node[0x60b8f28d59c0] = if;

		*node[0x60b8f28d59f0] = op_no;

		*node[0x60b8f28d5a20] = ==;

		*node[0x60b8f28d5a50] = 1;

		*node[0x60b8f28d5a80] = 0;

		*node[0x60b8f28d5ab0] = ;;

		*node[0x60b8f28d5ae0] = if;

		*node[0x60b8f28d5b10] = op_no;

		*node[0x60b8f28d5b40] = ==;

		*node[0x60b8f28d5b70] = 2;

		*node[0x60b8f28d5ba0] = 0;

		*node[0x60b8f28d5bd0] = ;;

		*node[0x60b8f28d5c00] = print;

		*node[0x60b8f28d5c30] = 9;

		*node[0x60b8f28d5c60] = else;

		*node[0x60b8f28d5c90] = op_no;

		*node[0x60b8f28d5cc0] = ;;

		*node[0x60b8f28d5cf0] = print;

		*node[0x60b8f28d5d20] = 7;

		*node[0x60b8f28d5d50] = else;

		*node[0x60b8f28d5d80] = op_no;

		*node[0x60b8f28d5db0] = ;;

		*node[0x60b8f28d5de0] = =;

		*node[0x60b8f28d5e10] = 10;

		*node[0x60b8f28d5e40] = /;

		*node[0x60b8f28d5e70] = -;

		*node[0x60b8f28d5ea0] = 0;

		*node[0x60b8f28d5ed0] = 2;

		*node[0x60b8f28d5f00] = 1;

		*node[0x60b8f28d5f30] = ;;

		*node[0x60b8f28d5f60] = print;

		*node[0x60b8f28d5f90] = 8;

		*node[0x60b8f28d5fc0] = ;;

		*node[0x60b8f28d5ff0] = print;

		*node[0x60b8f28d6020] = 10;

		*node[0x60b8f28d6050] = ;;

		*node[0x60b8f28d6080] = return;

		*node[0x60b8f28d60b0] = 0;

		*node[0x60b8f28d60e0] = ;;

		*node[0x60b8f28d6110] = 6;

		*node[0x60b8f28d6140] = 1;

		*node[0x60b8f28d6170] = 2;

		*node[0x60b8f28d61a0] = 3;

		*node[0x60b8f28d61d0] = ;;

		*node[0x60b8f28d6200] = =;

		*node[0x60b8f28d6230] = 7;

		*node[0x60b8f28d6260] = -;

		*node[0x60b8f28d6290] = 0;

		*node[0x60b8f28d62c0] = 1;

		*node[0x60b8f28d62f0] = ;;

		*node[0x60b8f28d6320] = =;

		*node[0x60b8f28d6350] = 8;

		*node[0x60b8f28d6380] = 1;

		*node[0x60b8f28d63b0] = ;;

		*node[0x60b8f28d63e0] = =;

		*node[0x60b8f28d6410] = 11;

		*node[0x60b8f28d6440] = 2;

		*node[0x60b8f28d6470] = ;;

		*node[0x60b8f28d64a0] = if;

		*node[0x60b8f28d64d0] = op_no;

		*node[0x60b8f28d6500] = ==;

		*node[0x60b8f28d6530] = 3;

		*node[0x60b8f28d6560] = 0;

		*node[0x60b8f28d6590] = ;;

		*node[0x60b8f28d65c0] = =;

		*node[0x60b8f28d65f0] = 12;

		*node[0x60b8f28d6620] = 0;

		*node[0x60b8f28d6650] = ;;

		*node[0x60b8f28d6680] = =;

		*node[0x60b8f28d66b0] = 13;

		*node[0x60b8f28d66e0] = /;

		*node[0x60b8f28d6710] = -;

		*node[0x60b8f28d6740] = 0;

		*node[0x60b8f28d6770] = 2;

		*node[0x60b8f28d67a0] = 1;

		*node[0x60b8f28d67d0] = ;;

		*node[0x60b8f28d6800] = print;

		*node[0x60b8f28d6830] = 11;

		*node[0x60b8f28d6860] = ;;

		*node[0x60b8f28d6890] = print;

		*node[0x60b8f28d68c0] = 12;

		*node[0x60b8f28d68f0] = 13;

		*node[0x60b8f28d6920] = else;

		*node[0x60b8f28d6950] = op_no;

		*node[0x60b8f28d6980] = ;;

		*node[0x60b8f28d69b0] = =;

		*node[0x60b8f28d69e0] = 14;

		*node[0x60b8f28d6a10] = -;

		*node[0x60b8f28d6a40] = *;

		*node[0x60b8f28d6a70] = 2;

		*node[0x60b8f28d6aa0] = 2;

		*node[0x60b8f28d6ad0] = *;

		*node[0x60b8f28d6b00] = *;

		*node[0x60b8f28d6b30] = 4;

		*node[0x60b8f28d6b60] = 1;

		*node[0x60b8f28d6b90] = 3;

		*node[0x60b8f28d6bc0] = ;;

		*node[0x60b8f28d6bf0] = if;

		*node[0x60b8f28d6c20] = op_no;

		*node[0x60b8f28d6c50] = >;

		*node[0x60b8f28d6c80] = 14;

		*node[0x60b8f28d6cb0] = 0;

		*node[0x60b8f28d6ce0] = ;;

		*node[0x60b8f28d6d10] = =;

		*node[0x60b8f28d6d40] = 15;

		*node[0x60b8f28d6d70] = sqrt;

		*node[0x60b8f28d6da0] = 14;

		*node[0x60b8f28d6dd0] = ;;

		*node[0x60b8f28d6e00] = =;

		*node[0x60b8f28d6e30] = 12;

		*node[0x60b8f28d6e60] = /;

		*node[0x60b8f28d6e90] = -;

		*node[0x60b8f28d6ec0] = -;

		*node[0x60b8f28d6ef0] = 0;

		*node[0x60b8f28d6f20] = 2;

		*node[0x60b8f28d6f50] = 15;

		*node[0x60b8f28d6f80] = *;

		*node[0x60b8f28d6fb0] = 2;

		*node[0x60b8f28d6fe0] = 1;

		*node[0x60b8f28d7010] = ;;

		*node[0x60b8f28d7040] = =;

		*node[0x60b8f28d7070] = 13;

		*node[0x60b8f28d70a0] = /;

		*node[0x60b8f28d70d0] = +;

		*node[0x60b8f28d7100] = -;

		*node[0x60b8f28d7130] = 0;

		*node[0x60b8f28d7160] = 2;

		*node[0x60b8f28d7190] = 15;

		*node[0x60b8f28d71c0] = *;

		*node[0x60b8f28d71f0] = 2;

		*node[0x60b8f28d7220] = 1;

		*node[0x60b8f28d7250] = ;;

		*node[0x60b8f28d7280] = print;

		*node[0x60b8f28d72b0] = 11;

		*node[0x60b8f28d72e0] = ;;

		*node[0x60b8f28d7310] = print;

		*node[0x60b8f28d7340] = 12;

		*node[0x60b8f28d7370] = 13;

		*node[0x60b8f28d73a0] = elseif;

		*node[0x60b8f28d73d0] = op_no;

		*node[0x60b8f28d7400] = ==;

		*node[0x60b8f28d7430] = 14;

		*node[0x60b8f28d7460] = 0;

		*node[0x60b8f28d7490] = ;;

		*node[0x60b8f28d74c0] = =;

		*node[0x60b8f28d74f0] = 10;

		*node[0x60b8f28d7520] = /;

		*node[0x60b8f28d7550] = -;

		*node[0x60b8f28d7580] = 0;

		*node[0x60b8f28d75b0] = 2;

		*node[0x60b8f28d75e0] = *;

		*node[0x60b8f28d7610] = 2;

		*node[0x60b8f28d7640] = 1;

		*node[0x60b8f28d7670] = ;;

		*node[0x60b8f28d76a0] = print;

		*node[0x60b8f28d76d0] = 8;

		*node[0x60b8f28d7700] = ;;

		*node[0x60b8f28d7730] = print;

		*node[0x60b8f28d7760] = 10;

		*node[0x60b8f28d7790] = else;

		*node[0x60b8f28d77c0] = op_no;

		*node[0x60b8f28d77f0] = ;;

		*node[0x60b8f28d7820] = print;

		*node[0x60b8f28d7850] = 7;

		*node[0x60b8f28d7880] = ;;

		*node[0x60b8f28d78b0] = return;

		*node[0x60b8f28d78e0] = 0;

		*node[0x60b8f28d7910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffdc2e1320] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x6384ccc0cfd0] = ;;

		*node[0x6384ccc0d000] = 0;

		*node[0x6384ccc0d030] = ;;

		*node[0x6384ccc0d060] = input;

		*node[0x6384ccc0d090] = 1;

		*node[0x6384ccc0d0c0] = 2;

		*node[0x6384ccc0d0f0] = 3;

		*node[0x6384ccc0d120] = ;;

		*node[0x6384ccc0d180] = 1;

		*node[0x6384ccc0d1b0] = 2;

		*node[0x6384ccc0d1e0] = 3;

		*node[0x6384ccc0d210] = ;;

		*node[0x6384ccc0d240] = 4;

		*node[0x6384ccc0d270] = 1;

		*node[0x6384ccc0d2a0] = 2;

		*node[0x6384ccc0d2d0] = 3;

		*node[0x6384ccc0d300] = ;;

		*node[0x6384ccc0d330] = if;

		*node[0x6384ccc0d360] = op_no;

		*node[0x6384ccc0d390] = ==;

		*node[0x6384ccc0d3c0] = 1;

		*node[0x6384ccc0d3f0] = 0;

		*node[0x6384ccc0d420] = ;;

		*node[0x6384ccc0d480] = 2;

		*node[0x6384ccc0d4b0] = 3;

		*node[0x6384ccc0d4e0] = else;

		*node[0x6384ccc0d510] = op_no;

		*node[0x6384ccc0d540] = ;;

		*node[0x6384ccc0d5a0] = 1;

		*node[0x6384ccc0d5d0] = 2;

		*node[0x6384ccc0d600] = 3;

		*node[0x6384ccc0d630] = ;;

		*node[0x6384ccc0d660] = 5;

		*node[0x6384ccc0d690] = 1;

		*node[0x6384ccc0d6c0] = 2;

		*node[0x6384ccc0d6f0] = ;;

		*node[0x6384ccc0d720] = =;

		*node[0x6384ccc0d750] = 7;

		*node[0x6384ccc0d780] = -;

		*node[0x6384ccc0d7b0] = 0;

		*node[0x6384ccc0d7e0] = 1;

		*node[0x6384ccc0d810] = ;;

		*node[0x6384ccc0d840] = =;

		*node[0x6384ccc0d870] = 8;

		*node[0x6384ccc0d8a0] = 1;

		*node[0x6384ccc0d8d0] = ;;

		*node[0x6384ccc0d900] = =;

		*node[0x6384ccc0d930] = 9;

		*node[0x6384ccc0d960] = 1000;

		*node[0x6384ccc0d990] = ;;

		*node[0x6384ccc0d9c0] = if;

		*node[0x6384ccc0d9f0] = op_no;

		*node[0x6384ccc0da20] = ==;

		*node[0x6384ccc0da50] = 1;

		*node[0x6384ccc0da80] = 0;

		*node[0x6384ccc0dab0] = ;;

		*node[0x6384ccc0dae0] = if;

		*node[0x6384ccc0db10] = op_no;

		*node[0x6384ccc0db40] = ==;

		*node[0x6384ccc0db70] = 2;

		*node[0x6384ccc0dba0] = 0;

		*node[0x6384ccc0dbd0] = ;;

		*node[0x6384ccc0dc00] = print;

		*node[0x6384ccc0dc30] = 9;

		*node[0x6384ccc0dc60] = else;

		*node[0x6384ccc0dc90] = op_no;

		*node[0x6384ccc0dcc0] = ;;

		*node[0x6384ccc0dcf0] = print;

		*node[0x6384ccc0dd20] = 7;

		*node[0x6384ccc0dd50] = else;

		*node[0x6384ccc0dd80] = op_no;

		*node[0x6384ccc0ddb0] = ;;

		*node[0x6384ccc0dde0] = =;

		*node[0x6384ccc0de10] = 10;

		*node[0x6384ccc0de40] = /;

		*node[0x6384ccc0de70] = -;

		*node[0x6384ccc0dea0] = 0;

		*node[0x6384ccc0ded0] = 2;

		*node[0x6384ccc0df00] = 1;

		*node[0x6384ccc0df30] = ;;

		*node[0x6384ccc0df60] = print;

		*node[0x6384ccc0df90] = 8;

		*node[0x6384ccc0dfc0] = ;;

		*node[0x6384ccc0dff0] = print;

		*node[0x6384ccc0e020] = 10;

		*node[0x6384ccc0e050] = ;;

		*node[0x6384ccc0e080] = return;

		*node[0x6384ccc0e0b0] = 0;

		*node[0x6384ccc0e0e0] = ;;

		*node[0x6384ccc0e110] = 6;

		*node[0x6384ccc0e140] = 1;

		*node[0x6384ccc0e170] = 2;

		*node[0x6384ccc0e1a0] = 3;

		*node[0x6384ccc0e1d0] = ;;

		*node[0x6384ccc0e200] = =;

		*node[0x6384ccc0e230] = 7;

		*node[0x6384ccc0e260] = -;

		*node[0x6384ccc0e290] = 0;

		*node[0x6384ccc0e2c0] = 1;

		*node[0x6384ccc0e2f0] = ;;

		*node[0x6384ccc0e320] = =;

		*node[0x6384ccc0e350] = 8;

		*node[0x6384ccc0e380] = 1;

		*node[0x6384ccc0e3b0] = ;;

		*node[0x6384ccc0e3e0] = =;

		*node[0x6384ccc0e410] = 11;

		*node[0x6384ccc0e440] = 2;

		*node[0x6384ccc0e470] = ;;

		*node[0x6384ccc0e4a0] = if;

		*node[0x6384ccc0e4d0] = op_no;

		*node[0x6384ccc0e500] = ==;

		*node[0x6384ccc0e530] = 3;

		*node[0x6384ccc0e560] = 0;

		*node[0x6384ccc0e590] = ;;

		*node[0x6384ccc0e5c0] = =;

		*node[0x6384ccc0e5f0] = 12;

		*node[0x6384ccc0e620] = 0;

		*node[0x6384ccc0e650] = ;;

		*node[0x6384ccc0e680] = =;

		*node[0x6384ccc0e6b0] = 13;

		*node[0x6384ccc0e6e0] = /;

		*node[0x6384ccc0e710] = -;

		*node[0x6384ccc0e740] = 0;

		*node[0x6384ccc0e770] = 2;

		*node[0x6384ccc0e7a0] = 1;

		*node[0x6384ccc0e7d0] = ;;

		*node[0x6384ccc0e800] = print;

		*node[0x6384ccc0e830] = 11;

		*node[0x6384ccc0e860] = ;;

		*node[0x6384ccc0e890] = print;

		*node[0x6384ccc0e8c0] = 12;

		*node[0x6384ccc0e8f0] = 13;

		*node[0x6384ccc0e920] = else;

		*node[0x6384ccc0e950] = op_no;

		*node[0x6384ccc0e980] = ;;

		*node[0x6384ccc0e9b0] = =;

		*node[0x6384ccc0e9e0] = 14;

		*node[0x6384ccc0ea10] = -;

		*node[0x6384ccc0ea40] = *;

		*node[0x6384ccc0ea70] = 2;

		*node[0x6384ccc0eaa0] = 2;

		*node[0x6384ccc0ead0] = *;

		*node[0x6384ccc0eb00] = *;

		*node[0x6384ccc0eb30] = 4;

		*node[0x6384ccc0eb60] = 1;

		*node[0x6384ccc0eb90] = 3;

		*node[0x6384ccc0ebc0] = ;;

		*node[0x6384ccc0ebf0] = if;

		*node[0x6384ccc0ec20] = op_no;

		*node[0x6384ccc0ec50] = >;

		*node[0x6384ccc0ec80] = 14;

		*node[0x6384ccc0ecb0] = 0;

		*node[0x6384ccc0ece0] = ;;

		*node[0x6384ccc0ed10] = =;

		*node[0x6384ccc0ed40] = 15;

		*node[0x6384ccc0ed70] = sqrt;

		*node[0x6384ccc0eda0] = 14;

		*node[0x6384ccc0edd0] = ;;

		*node[0x6384ccc0ee00] = =;

		*node[0x6384ccc0ee30] = 12;

		*node[0x6384ccc0ee60] = /;

		*node[0x6384ccc0ee90] = -;

		*node[0x6384ccc0eec0] = -;

		*node[0x6384ccc0eef0] = 0;

		*node[0x6384ccc0ef20] = 2;

		*node[0x6384ccc0ef50] = 15;

		*node[0x6384ccc0ef80] = *;

		*node[0x6384ccc0efb0] = 2;

		*node[0x6384ccc0efe0] = 1;

		*node[0x6384ccc0f010] = ;;

		*node[0x6384ccc0f040] = =;

		*node[0x6384ccc0f070] = 13;

		*node[0x6384ccc0f0a0] = /;

		*node[0x6384ccc0f0d0] = +;

		*node[0x6384ccc0f100] = -;

		*node[0x6384ccc0f130] = 0;

		*node[0x6384ccc0f160] = 2;

		*node[0x6384ccc0f190] = 15;

		*node[0x6384ccc0f1c0] = *;

		*node[0x6384ccc0f1f0] = 2;

		*node[0x6384ccc0f220] = 1;

		*node[0x6384ccc0f250] = ;;

		*node[0x6384ccc0f280] = print;

		*node[0x6384ccc0f2b0] = 11;

		*node[0x6384ccc0f2e0] = ;;

		*node[0x6384ccc0f310] = print;

		*node[0x6384ccc0f340] = 12;

		*node[0x6384ccc0f370] = 13;

		*node[0x6384ccc0f3a0] = elseif;

		*node[0x6384ccc0f3d0] = op_no;

		*node[0x6384ccc0f400] = ==;

		*node[0x6384ccc0f430] = 14;

		*node[0x6384ccc0f460] = 0;

		*node[0x6384ccc0f490] = ;;

		*node[0x6384ccc0f4c0] = =;

		*node[0x6384ccc0f4f0] = 10;

		*node[0x6384ccc0f520] = /;

		*node[0x6384ccc0f550] = -;

		*node[0x6384ccc0f580] = 0;

		*node[0x6384ccc0f5b0] = 2;

		*node[0x6384ccc0f5e0] = *;

		*node[0x6384ccc0f610] = 2;

		*node[0x6384ccc0f640] = 1;

		*node[0x6384ccc0f670] = ;;

		*node[0x6384ccc0f6a0] = print;

		*node[0x6384ccc0f6d0] = 8;

		*node[0x6384ccc0f700] = ;;

		*node[0x6384ccc0f730] = print;

		*node[0x6384ccc0f760] = 10;

		*node[0x6384ccc0f790] = else;

		*node[0x6384ccc0f7c0] = op_no;

		*node[0x6384ccc0f7f0] = ;;

		*node[0x6384ccc0f820] = print;

		*node[0x6384ccc0f850] = 7;

		*node[0x6384ccc0f880] = ;;

		*node[0x6384ccc0f8b0] = return;

		*node[0x6384ccc0f8e0] = 0;

		*node[0x6384ccc0f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffa777eaa0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x584c558f9fd0] = ;;

		*node[0x584c558fa000] = 0;

		*node[0x584c558fa030] = ;;

		*node[0x584c558fa060] = input;

		*node[0x584c558fa090] = 1;

		*node[0x584c558fa0c0] = 2;

		*node[0x584c558fa0f0] = 3;

		*node[0x584c558fa120] = ;;

		*node[0x584c558fa180] = 1;

		*node[0x584c558fa1b0] = 2;

		*node[0x584c558fa1e0] = 3;

		*node[0x584c558fa210] = ;;

		*node[0x584c558fa240] = 4;

		*node[0x584c558fa270] = 1;

		*node[0x584c558fa2a0] = 2;

		*node[0x584c558fa2d0] = 3;

		*node[0x584c558fa300] = ;;

		*node[0x584c558fa330] = if;

		*node[0x584c558fa360] = op_no;

		*node[0x584c558fa390] = ==;

		*node[0x584c558fa3c0] = 1;

		*node[0x584c558fa3f0] = 0;

		*node[0x584c558fa420] = ;;

		*node[0x584c558fa480] = 2;

		*node[0x584c558fa4b0] = 3;

		*node[0x584c558fa4e0] = else;

		*node[0x584c558fa510] = op_no;

		*node[0x584c558fa540] = ;;

		*node[0x584c558fa5a0] = 1;

		*node[0x584c558fa5d0] = 2;

		*node[0x584c558fa600] = 3;

		*node[0x584c558fa630] = ;;

		*node[0x584c558fa660] = 5;

		*node[0x584c558fa690] = 1;

		*node[0x584c558fa6c0] = 2;

		*node[0x584c558fa6f0] = ;;

		*node[0x584c558fa720] = =;

		*node[0x584c558fa750] = 7;

		*node[0x584c558fa780] = -;

		*node[0x584c558fa7b0] = 0;

		*node[0x584c558fa7e0] = 1;

		*node[0x584c558fa810] = ;;

		*node[0x584c558fa840] = =;

		*node[0x584c558fa870] = 8;

		*node[0x584c558fa8a0] = 1;

		*node[0x584c558fa8d0] = ;;

		*node[0x584c558fa900] = =;

		*node[0x584c558fa930] = 9;

		*node[0x584c558fa960] = 1000;

		*node[0x584c558fa990] = ;;

		*node[0x584c558fa9c0] = if;

		*node[0x584c558fa9f0] = op_no;

		*node[0x584c558faa20] = ==;

		*node[0x584c558faa50] = 1;

		*node[0x584c558faa80] = 0;

		*node[0x584c558faab0] = ;;

		*node[0x584c558faae0] = if;

		*node[0x584c558fab10] = op_no;

		*node[0x584c558fab40] = ==;

		*node[0x584c558fab70] = 2;

		*node[0x584c558faba0] = 0;

		*node[0x584c558fabd0] = ;;

		*node[0x584c558fac00] = print;

		*node[0x584c558fac30] = 9;

		*node[0x584c558fac60] = else;

		*node[0x584c558fac90] = op_no;

		*node[0x584c558facc0] = ;;

		*node[0x584c558facf0] = print;

		*node[0x584c558fad20] = 7;

		*node[0x584c558fad50] = else;

		*node[0x584c558fad80] = op_no;

		*node[0x584c558fadb0] = ;;

		*node[0x584c558fade0] = =;

		*node[0x584c558fae10] = 10;

		*node[0x584c558fae40] = /;

		*node[0x584c558fae70] = -;

		*node[0x584c558faea0] = 0;

		*node[0x584c558faed0] = 2;

		*node[0x584c558faf00] = 1;

		*node[0x584c558faf30] = ;;

		*node[0x584c558faf60] = print;

		*node[0x584c558faf90] = 8;

		*node[0x584c558fafc0] = ;;

		*node[0x584c558faff0] = print;

		*node[0x584c558fb020] = 10;

		*node[0x584c558fb050] = ;;

		*node[0x584c558fb080] = return;

		*node[0x584c558fb0b0] = 0;

		*node[0x584c558fb0e0] = ;;

		*node[0x584c558fb110] = 6;

		*node[0x584c558fb140] = 1;

		*node[0x584c558fb170] = 2;

		*node[0x584c558fb1a0] = 3;

		*node[0x584c558fb1d0] = ;;

		*node[0x584c558fb200] = =;

		*node[0x584c558fb230] = 7;

		*node[0x584c558fb260] = -;

		*node[0x584c558fb290] = 0;

		*node[0x584c558fb2c0] = 1;

		*node[0x584c558fb2f0] = ;;

		*node[0x584c558fb320] = =;

		*node[0x584c558fb350] = 8;

		*node[0x584c558fb380] = 1;

		*node[0x584c558fb3b0] = ;;

		*node[0x584c558fb3e0] = =;

		*node[0x584c558fb410] = 11;

		*node[0x584c558fb440] = 2;

		*node[0x584c558fb470] = ;;

		*node[0x584c558fb4a0] = if;

		*node[0x584c558fb4d0] = op_no;

		*node[0x584c558fb500] = ==;

		*node[0x584c558fb530] = 3;

		*node[0x584c558fb560] = 0;

		*node[0x584c558fb590] = ;;

		*node[0x584c558fb5c0] = =;

		*node[0x584c558fb5f0] = 12;

		*node[0x584c558fb620] = 0;

		*node[0x584c558fb650] = ;;

		*node[0x584c558fb680] = =;

		*node[0x584c558fb6b0] = 13;

		*node[0x584c558fb6e0] = /;

		*node[0x584c558fb710] = -;

		*node[0x584c558fb740] = 0;

		*node[0x584c558fb770] = 2;

		*node[0x584c558fb7a0] = 1;

		*node[0x584c558fb7d0] = ;;

		*node[0x584c558fb800] = print;

		*node[0x584c558fb830] = 11;

		*node[0x584c558fb860] = ;;

		*node[0x584c558fb890] = print;

		*node[0x584c558fb8c0] = 12;

		*node[0x584c558fb8f0] = 13;

		*node[0x584c558fb920] = else;

		*node[0x584c558fb950] = op_no;

		*node[0x584c558fb980] = ;;

		*node[0x584c558fb9b0] = =;

		*node[0x584c558fb9e0] = 14;

		*node[0x584c558fba10] = -;

		*node[0x584c558fba40] = *;

		*node[0x584c558fba70] = 2;

		*node[0x584c558fbaa0] = 2;

		*node[0x584c558fbad0] = *;

		*node[0x584c558fbb00] = *;

		*node[0x584c558fbb30] = 4;

		*node[0x584c558fbb60] = 1;

		*node[0x584c558fbb90] = 3;

		*node[0x584c558fbbc0] = ;;

		*node[0x584c558fbbf0] = if;

		*node[0x584c558fbc20] = op_no;

		*node[0x584c558fbc50] = >;

		*node[0x584c558fbc80] = 14;

		*node[0x584c558fbcb0] = 0;

		*node[0x584c558fbce0] = ;;

		*node[0x584c558fbd10] = =;

		*node[0x584c558fbd40] = 15;

		*node[0x584c558fbd70] = sqrt;

		*node[0x584c558fbda0] = 14;

		*node[0x584c558fbdd0] = ;;

		*node[0x584c558fbe00] = =;

		*node[0x584c558fbe30] = 12;

		*node[0x584c558fbe60] = /;

		*node[0x584c558fbe90] = -;

		*node[0x584c558fbec0] = -;

		*node[0x584c558fbef0] = 0;

		*node[0x584c558fbf20] = 2;

		*node[0x584c558fbf50] = 15;

		*node[0x584c558fbf80] = *;

		*node[0x584c558fbfb0] = 2;

		*node[0x584c558fbfe0] = 1;

		*node[0x584c558fc010] = ;;

		*node[0x584c558fc040] = =;

		*node[0x584c558fc070] = 13;

		*node[0x584c558fc0a0] = /;

		*node[0x584c558fc0d0] = +;

		*node[0x584c558fc100] = -;

		*node[0x584c558fc130] = 0;

		*node[0x584c558fc160] = 2;

		*node[0x584c558fc190] = 15;

		*node[0x584c558fc1c0] = *;

		*node[0x584c558fc1f0] = 2;

		*node[0x584c558fc220] = 1;

		*node[0x584c558fc250] = ;;

		*node[0x584c558fc280] = print;

		*node[0x584c558fc2b0] = 11;

		*node[0x584c558fc2e0] = ;;

		*node[0x584c558fc310] = print;

		*node[0x584c558fc340] = 12;

		*node[0x584c558fc370] = 13;

		*node[0x584c558fc3a0] = elseif;

		*node[0x584c558fc3d0] = op_no;

		*node[0x584c558fc400] = ==;

		*node[0x584c558fc430] = 14;

		*node[0x584c558fc460] = 0;

		*node[0x584c558fc490] = ;;

		*node[0x584c558fc4c0] = =;

		*node[0x584c558fc4f0] = 10;

		*node[0x584c558fc520] = /;

		*node[0x584c558fc550] = -;

		*node[0x584c558fc580] = 0;

		*node[0x584c558fc5b0] = 2;

		*node[0x584c558fc5e0] = *;

		*node[0x584c558fc610] = 2;

		*node[0x584c558fc640] = 1;

		*node[0x584c558fc670] = ;;

		*node[0x584c558fc6a0] = print;

		*node[0x584c558fc6d0] = 8;

		*node[0x584c558fc700] = ;;

		*node[0x584c558fc730] = print;

		*node[0x584c558fc760] = 10;

		*node[0x584c558fc790] = else;

		*node[0x584c558fc7c0] = op_no;

		*node[0x584c558fc7f0] = ;;

		*node[0x584c558fc820] = print;

		*node[0x584c558fc850] = 7;

		*node[0x584c558fc880] = ;;

		*node[0x584c558fc8b0] = return;

		*node[0x584c558fc8e0] = 0;

		*node[0x584c558fc910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc8cb97530] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5f43596bffd0] = ;;

		*node[0x5f43596c0000] = 0;

		*node[0x5f43596c0030] = ;;

		*node[0x5f43596c0060] = input;

		*node[0x5f43596c0090] = 1;

		*node[0x5f43596c00c0] = 2;

		*node[0x5f43596c00f0] = 3;

		*node[0x5f43596c0120] = ;;

		*node[0x5f43596c0180] = 1;

		*node[0x5f43596c01b0] = 2;

		*node[0x5f43596c01e0] = 3;

		*node[0x5f43596c0210] = ;;

		*node[0x5f43596c0240] = 4;

		*node[0x5f43596c0270] = 1;

		*node[0x5f43596c02a0] = 2;

		*node[0x5f43596c02d0] = 3;

		*node[0x5f43596c0300] = ;;

		*node[0x5f43596c0330] = if;

		*node[0x5f43596c0360] = op_no;

		*node[0x5f43596c0390] = ==;

		*node[0x5f43596c03c0] = 1;

		*node[0x5f43596c03f0] = 0;

		*node[0x5f43596c0420] = ;;

		*node[0x5f43596c0480] = 2;

		*node[0x5f43596c04b0] = 3;

		*node[0x5f43596c04e0] = else;

		*node[0x5f43596c0510] = op_no;

		*node[0x5f43596c0540] = ;;

		*node[0x5f43596c05a0] = 1;

		*node[0x5f43596c05d0] = 2;

		*node[0x5f43596c0600] = 3;

		*node[0x5f43596c0630] = ;;

		*node[0x5f43596c0660] = 5;

		*node[0x5f43596c0690] = 1;

		*node[0x5f43596c06c0] = 2;

		*node[0x5f43596c06f0] = ;;

		*node[0x5f43596c0720] = =;

		*node[0x5f43596c0750] = 7;

		*node[0x5f43596c0780] = -;

		*node[0x5f43596c07b0] = 0;

		*node[0x5f43596c07e0] = 1;

		*node[0x5f43596c0810] = ;;

		*node[0x5f43596c0840] = =;

		*node[0x5f43596c0870] = 8;

		*node[0x5f43596c08a0] = 1;

		*node[0x5f43596c08d0] = ;;

		*node[0x5f43596c0900] = =;

		*node[0x5f43596c0930] = 9;

		*node[0x5f43596c0960] = 1000;

		*node[0x5f43596c0990] = ;;

		*node[0x5f43596c09c0] = if;

		*node[0x5f43596c09f0] = op_no;

		*node[0x5f43596c0a20] = ==;

		*node[0x5f43596c0a50] = 1;

		*node[0x5f43596c0a80] = 0;

		*node[0x5f43596c0ab0] = ;;

		*node[0x5f43596c0ae0] = if;

		*node[0x5f43596c0b10] = op_no;

		*node[0x5f43596c0b40] = ==;

		*node[0x5f43596c0b70] = 2;

		*node[0x5f43596c0ba0] = 0;

		*node[0x5f43596c0bd0] = ;;

		*node[0x5f43596c0c00] = print;

		*node[0x5f43596c0c30] = 9;

		*node[0x5f43596c0c60] = else;

		*node[0x5f43596c0c90] = op_no;

		*node[0x5f43596c0cc0] = ;;

		*node[0x5f43596c0cf0] = print;

		*node[0x5f43596c0d20] = 7;

		*node[0x5f43596c0d50] = else;

		*node[0x5f43596c0d80] = op_no;

		*node[0x5f43596c0db0] = ;;

		*node[0x5f43596c0de0] = =;

		*node[0x5f43596c0e10] = 10;

		*node[0x5f43596c0e40] = /;

		*node[0x5f43596c0e70] = -;

		*node[0x5f43596c0ea0] = 0;

		*node[0x5f43596c0ed0] = 2;

		*node[0x5f43596c0f00] = 1;

		*node[0x5f43596c0f30] = ;;

		*node[0x5f43596c0f60] = print;

		*node[0x5f43596c0f90] = 8;

		*node[0x5f43596c0fc0] = ;;

		*node[0x5f43596c0ff0] = print;

		*node[0x5f43596c1020] = 10;

		*node[0x5f43596c1050] = ;;

		*node[0x5f43596c1080] = return;

		*node[0x5f43596c10b0] = 0;

		*node[0x5f43596c10e0] = ;;

		*node[0x5f43596c1110] = 6;

		*node[0x5f43596c1140] = 1;

		*node[0x5f43596c1170] = 2;

		*node[0x5f43596c11a0] = 3;

		*node[0x5f43596c11d0] = ;;

		*node[0x5f43596c1200] = =;

		*node[0x5f43596c1230] = 7;

		*node[0x5f43596c1260] = -;

		*node[0x5f43596c1290] = 0;

		*node[0x5f43596c12c0] = 1;

		*node[0x5f43596c12f0] = ;;

		*node[0x5f43596c1320] = =;

		*node[0x5f43596c1350] = 8;

		*node[0x5f43596c1380] = 1;

		*node[0x5f43596c13b0] = ;;

		*node[0x5f43596c13e0] = =;

		*node[0x5f43596c1410] = 11;

		*node[0x5f43596c1440] = 2;

		*node[0x5f43596c1470] = ;;

		*node[0x5f43596c14a0] = if;

		*node[0x5f43596c14d0] = op_no;

		*node[0x5f43596c1500] = ==;

		*node[0x5f43596c1530] = 3;

		*node[0x5f43596c1560] = 0;

		*node[0x5f43596c1590] = ;;

		*node[0x5f43596c15c0] = =;

		*node[0x5f43596c15f0] = 12;

		*node[0x5f43596c1620] = 0;

		*node[0x5f43596c1650] = ;;

		*node[0x5f43596c1680] = =;

		*node[0x5f43596c16b0] = 13;

		*node[0x5f43596c16e0] = /;

		*node[0x5f43596c1710] = -;

		*node[0x5f43596c1740] = 0;

		*node[0x5f43596c1770] = 2;

		*node[0x5f43596c17a0] = 1;

		*node[0x5f43596c17d0] = ;;

		*node[0x5f43596c1800] = print;

		*node[0x5f43596c1830] = 11;

		*node[0x5f43596c1860] = ;;

		*node[0x5f43596c1890] = print;

		*node[0x5f43596c18c0] = 12;

		*node[0x5f43596c18f0] = 13;

		*node[0x5f43596c1920] = else;

		*node[0x5f43596c1950] = op_no;

		*node[0x5f43596c1980] = ;;

		*node[0x5f43596c19b0] = =;

		*node[0x5f43596c19e0] = 14;

		*node[0x5f43596c1a10] = -;

		*node[0x5f43596c1a40] = *;

		*node[0x5f43596c1a70] = 2;

		*node[0x5f43596c1aa0] = 2;

		*node[0x5f43596c1ad0] = *;

		*node[0x5f43596c1b00] = *;

		*node[0x5f43596c1b30] = 4;

		*node[0x5f43596c1b60] = 1;

		*node[0x5f43596c1b90] = 3;

		*node[0x5f43596c1bc0] = ;;

		*node[0x5f43596c1bf0] = if;

		*node[0x5f43596c1c20] = op_no;

		*node[0x5f43596c1c50] = >;

		*node[0x5f43596c1c80] = 14;

		*node[0x5f43596c1cb0] = 0;

		*node[0x5f43596c1ce0] = ;;

		*node[0x5f43596c1d10] = =;

		*node[0x5f43596c1d40] = 15;

		*node[0x5f43596c1d70] = sqrt;

		*node[0x5f43596c1da0] = 14;

		*node[0x5f43596c1dd0] = ;;

		*node[0x5f43596c1e00] = =;

		*node[0x5f43596c1e30] = 12;

		*node[0x5f43596c1e60] = /;

		*node[0x5f43596c1e90] = -;

		*node[0x5f43596c1ec0] = -;

		*node[0x5f43596c1ef0] = 0;

		*node[0x5f43596c1f20] = 2;

		*node[0x5f43596c1f50] = 15;

		*node[0x5f43596c1f80] = *;

		*node[0x5f43596c1fb0] = 2;

		*node[0x5f43596c1fe0] = 1;

		*node[0x5f43596c2010] = ;;

		*node[0x5f43596c2040] = =;

		*node[0x5f43596c2070] = 13;

		*node[0x5f43596c20a0] = /;

		*node[0x5f43596c20d0] = +;

		*node[0x5f43596c2100] = -;

		*node[0x5f43596c2130] = 0;

		*node[0x5f43596c2160] = 2;

		*node[0x5f43596c2190] = 15;

		*node[0x5f43596c21c0] = *;

		*node[0x5f43596c21f0] = 2;

		*node[0x5f43596c2220] = 1;

		*node[0x5f43596c2250] = ;;

		*node[0x5f43596c2280] = print;

		*node[0x5f43596c22b0] = 11;

		*node[0x5f43596c22e0] = ;;

		*node[0x5f43596c2310] = print;

		*node[0x5f43596c2340] = 12;

		*node[0x5f43596c2370] = 13;

		*node[0x5f43596c23a0] = elseif;

		*node[0x5f43596c23d0] = op_no;

		*node[0x5f43596c2400] = ==;

		*node[0x5f43596c2430] = 14;

		*node[0x5f43596c2460] = 0;

		*node[0x5f43596c2490] = ;;

		*node[0x5f43596c24c0] = =;

		*node[0x5f43596c24f0] = 10;

		*node[0x5f43596c2520] = /;

		*node[0x5f43596c2550] = -;

		*node[0x5f43596c2580] = 0;

		*node[0x5f43596c25b0] = 2;

		*node[0x5f43596c25e0] = *;

		*node[0x5f43596c2610] = 2;

		*node[0x5f43596c2640] = 1;

		*node[0x5f43596c2670] = ;;

		*node[0x5f43596c26a0] = print;

		*node[0x5f43596c26d0] = 8;

		*node[0x5f43596c2700] = ;;

		*node[0x5f43596c2730] = print;

		*node[0x5f43596c2760] = 10;

		*node[0x5f43596c2790] = else;

		*node[0x5f43596c27c0] = op_no;

		*node[0x5f43596c27f0] = ;;

		*node[0x5f43596c2820] = print;

		*node[0x5f43596c2850] = 7;

		*node[0x5f43596c2880] = ;;

		*node[0x5f43596c28b0] = return;

		*node[0x5f43596c28e0] = 0;

		*node[0x5f43596c2910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd8b5ac440] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x58f269c5efd0] = ;;

		*node[0x58f269c5f000] = 0;

		*node[0x58f269c5f030] = ;;

		*node[0x58f269c5f060] = input;

		*node[0x58f269c5f090] = 1;

		*node[0x58f269c5f0c0] = 2;

		*node[0x58f269c5f0f0] = 3;

		*node[0x58f269c5f120] = ;;

		*node[0x58f269c5f180] = 1;

		*node[0x58f269c5f1b0] = 2;

		*node[0x58f269c5f1e0] = 3;

		*node[0x58f269c5f210] = ;;

		*node[0x58f269c5f240] = 4;

		*node[0x58f269c5f270] = 1;

		*node[0x58f269c5f2a0] = 2;

		*node[0x58f269c5f2d0] = 3;

		*node[0x58f269c5f300] = ;;

		*node[0x58f269c5f330] = if;

		*node[0x58f269c5f360] = op_no;

		*node[0x58f269c5f390] = ==;

		*node[0x58f269c5f3c0] = 1;

		*node[0x58f269c5f3f0] = 0;

		*node[0x58f269c5f420] = ;;

		*node[0x58f269c5f480] = 2;

		*node[0x58f269c5f4b0] = 3;

		*node[0x58f269c5f4e0] = else;

		*node[0x58f269c5f510] = op_no;

		*node[0x58f269c5f540] = ;;

		*node[0x58f269c5f5a0] = 1;

		*node[0x58f269c5f5d0] = 2;

		*node[0x58f269c5f600] = 3;

		*node[0x58f269c5f630] = ;;

		*node[0x58f269c5f660] = 5;

		*node[0x58f269c5f690] = 1;

		*node[0x58f269c5f6c0] = 2;

		*node[0x58f269c5f6f0] = ;;

		*node[0x58f269c5f720] = =;

		*node[0x58f269c5f750] = 7;

		*node[0x58f269c5f780] = -;

		*node[0x58f269c5f7b0] = 0;

		*node[0x58f269c5f7e0] = 1;

		*node[0x58f269c5f810] = ;;

		*node[0x58f269c5f840] = =;

		*node[0x58f269c5f870] = 8;

		*node[0x58f269c5f8a0] = 1;

		*node[0x58f269c5f8d0] = ;;

		*node[0x58f269c5f900] = =;

		*node[0x58f269c5f930] = 9;

		*node[0x58f269c5f960] = 1000;

		*node[0x58f269c5f990] = ;;

		*node[0x58f269c5f9c0] = if;

		*node[0x58f269c5f9f0] = op_no;

		*node[0x58f269c5fa20] = ==;

		*node[0x58f269c5fa50] = 1;

		*node[0x58f269c5fa80] = 0;

		*node[0x58f269c5fab0] = ;;

		*node[0x58f269c5fae0] = if;

		*node[0x58f269c5fb10] = op_no;

		*node[0x58f269c5fb40] = ==;

		*node[0x58f269c5fb70] = 2;

		*node[0x58f269c5fba0] = 0;

		*node[0x58f269c5fbd0] = ;;

		*node[0x58f269c5fc00] = print;

		*node[0x58f269c5fc30] = 9;

		*node[0x58f269c5fc60] = else;

		*node[0x58f269c5fc90] = op_no;

		*node[0x58f269c5fcc0] = ;;

		*node[0x58f269c5fcf0] = print;

		*node[0x58f269c5fd20] = 7;

		*node[0x58f269c5fd50] = else;

		*node[0x58f269c5fd80] = op_no;

		*node[0x58f269c5fdb0] = ;;

		*node[0x58f269c5fde0] = =;

		*node[0x58f269c5fe10] = 10;

		*node[0x58f269c5fe40] = /;

		*node[0x58f269c5fe70] = -;

		*node[0x58f269c5fea0] = 0;

		*node[0x58f269c5fed0] = 2;

		*node[0x58f269c5ff00] = 1;

		*node[0x58f269c5ff30] = ;;

		*node[0x58f269c5ff60] = print;

		*node[0x58f269c5ff90] = 8;

		*node[0x58f269c5ffc0] = ;;

		*node[0x58f269c5fff0] = print;

		*node[0x58f269c60020] = 10;

		*node[0x58f269c60050] = ;;

		*node[0x58f269c60080] = return;

		*node[0x58f269c600b0] = 0;

		*node[0x58f269c600e0] = ;;

		*node[0x58f269c60110] = 6;

		*node[0x58f269c60140] = 1;

		*node[0x58f269c60170] = 2;

		*node[0x58f269c601a0] = 3;

		*node[0x58f269c601d0] = ;;

		*node[0x58f269c60200] = =;

		*node[0x58f269c60230] = 7;

		*node[0x58f269c60260] = -;

		*node[0x58f269c60290] = 0;

		*node[0x58f269c602c0] = 1;

		*node[0x58f269c602f0] = ;;

		*node[0x58f269c60320] = =;

		*node[0x58f269c60350] = 8;

		*node[0x58f269c60380] = 1;

		*node[0x58f269c603b0] = ;;

		*node[0x58f269c603e0] = =;

		*node[0x58f269c60410] = 11;

		*node[0x58f269c60440] = 2;

		*node[0x58f269c60470] = ;;

		*node[0x58f269c604a0] = if;

		*node[0x58f269c604d0] = op_no;

		*node[0x58f269c60500] = ==;

		*node[0x58f269c60530] = 3;

		*node[0x58f269c60560] = 0;

		*node[0x58f269c60590] = ;;

		*node[0x58f269c605c0] = =;

		*node[0x58f269c605f0] = 12;

		*node[0x58f269c60620] = 0;

		*node[0x58f269c60650] = ;;

		*node[0x58f269c60680] = =;

		*node[0x58f269c606b0] = 13;

		*node[0x58f269c606e0] = /;

		*node[0x58f269c60710] = -;

		*node[0x58f269c60740] = 0;

		*node[0x58f269c60770] = 2;

		*node[0x58f269c607a0] = 1;

		*node[0x58f269c607d0] = ;;

		*node[0x58f269c60800] = print;

		*node[0x58f269c60830] = 11;

		*node[0x58f269c60860] = ;;

		*node[0x58f269c60890] = print;

		*node[0x58f269c608c0] = 12;

		*node[0x58f269c608f0] = 13;

		*node[0x58f269c60920] = else;

		*node[0x58f269c60950] = op_no;

		*node[0x58f269c60980] = ;;

		*node[0x58f269c609b0] = =;

		*node[0x58f269c609e0] = 14;

		*node[0x58f269c60a10] = -;

		*node[0x58f269c60a40] = *;

		*node[0x58f269c60a70] = 2;

		*node[0x58f269c60aa0] = 2;

		*node[0x58f269c60ad0] = *;

		*node[0x58f269c60b00] = *;

		*node[0x58f269c60b30] = 4;

		*node[0x58f269c60b60] = 1;

		*node[0x58f269c60b90] = 3;

		*node[0x58f269c60bc0] = ;;

		*node[0x58f269c60bf0] = if;

		*node[0x58f269c60c20] = op_no;

		*node[0x58f269c60c50] = >;

		*node[0x58f269c60c80] = 14;

		*node[0x58f269c60cb0] = 0;

		*node[0x58f269c60ce0] = ;;

		*node[0x58f269c60d10] = =;

		*node[0x58f269c60d40] = 15;

		*node[0x58f269c60d70] = sqrt;

		*node[0x58f269c60da0] = 14;

		*node[0x58f269c60dd0] = ;;

		*node[0x58f269c60e00] = =;

		*node[0x58f269c60e30] = 12;

		*node[0x58f269c60e60] = /;

		*node[0x58f269c60e90] = -;

		*node[0x58f269c60ec0] = -;

		*node[0x58f269c60ef0] = 0;

		*node[0x58f269c60f20] = 2;

		*node[0x58f269c60f50] = 15;

		*node[0x58f269c60f80] = *;

		*node[0x58f269c60fb0] = 2;

		*node[0x58f269c60fe0] = 1;

		*node[0x58f269c61010] = ;;

		*node[0x58f269c61040] = =;

		*node[0x58f269c61070] = 13;

		*node[0x58f269c610a0] = /;

		*node[0x58f269c610d0] = +;

		*node[0x58f269c61100] = -;

		*node[0x58f269c61130] = 0;

		*node[0x58f269c61160] = 2;

		*node[0x58f269c61190] = 15;

		*node[0x58f269c611c0] = *;

		*node[0x58f269c611f0] = 2;

		*node[0x58f269c61220] = 1;

		*node[0x58f269c61250] = ;;

		*node[0x58f269c61280] = print;

		*node[0x58f269c612b0] = 11;

		*node[0x58f269c612e0] = ;;

		*node[0x58f269c61310] = print;

		*node[0x58f269c61340] = 12;

		*node[0x58f269c61370] = 13;

		*node[0x58f269c613a0] = elseif;

		*node[0x58f269c613d0] = op_no;

		*node[0x58f269c61400] = ==;

		*node[0x58f269c61430] = 14;

		*node[0x58f269c61460] = 0;

		*node[0x58f269c61490] = ;;

		*node[0x58f269c614c0] = =;

		*node[0x58f269c614f0] = 10;

		*node[0x58f269c61520] = /;

		*node[0x58f269c61550] = -;

		*node[0x58f269c61580] = 0;

		*node[0x58f269c615b0] = 2;

		*node[0x58f269c615e0] = *;

		*node[0x58f269c61610] = 2;

		*node[0x58f269c61640] = 1;

		*node[0x58f269c61670] = ;;

		*node[0x58f269c616a0] = print;

		*node[0x58f269c616d0] = 8;

		*node[0x58f269c61700] = ;;

		*node[0x58f269c61730] = print;

		*node[0x58f269c61760] = 10;

		*node[0x58f269c61790] = else;

		*node[0x58f269c617c0] = op_no;

		*node[0x58f269c617f0] = ;;

		*node[0x58f269c61820] = print;

		*node[0x58f269c61850] = 7;

		*node[0x58f269c61880] = ;;

		*node[0x58f269c618b0] = return;

		*node[0x58f269c618e0] = 0;

		*node[0x58f269c61910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff09d73750] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x632444d8cfd0] = ;;

		*node[0x632444d8d000] = 0;

		*node[0x632444d8d030] = ;;

		*node[0x632444d8d060] = input;

		*node[0x632444d8d090] = 1;

		*node[0x632444d8d0c0] = 2;

		*node[0x632444d8d0f0] = 3;

		*node[0x632444d8d120] = ;;

		*node[0x632444d8d180] = 1;

		*node[0x632444d8d1b0] = 2;

		*node[0x632444d8d1e0] = 3;

		*node[0x632444d8d210] = ;;

		*node[0x632444d8d240] = 4;

		*node[0x632444d8d270] = 1;

		*node[0x632444d8d2a0] = 2;

		*node[0x632444d8d2d0] = 3;

		*node[0x632444d8d300] = ;;

		*node[0x632444d8d330] = if;

		*node[0x632444d8d360] = op_no;

		*node[0x632444d8d390] = ==;

		*node[0x632444d8d3c0] = 1;

		*node[0x632444d8d3f0] = 0;

		*node[0x632444d8d420] = ;;

		*node[0x632444d8d480] = 2;

		*node[0x632444d8d4b0] = 3;

		*node[0x632444d8d4e0] = else;

		*node[0x632444d8d510] = op_no;

		*node[0x632444d8d540] = ;;

		*node[0x632444d8d5a0] = 1;

		*node[0x632444d8d5d0] = 2;

		*node[0x632444d8d600] = 3;

		*node[0x632444d8d630] = ;;

		*node[0x632444d8d660] = 5;

		*node[0x632444d8d690] = 1;

		*node[0x632444d8d6c0] = 2;

		*node[0x632444d8d6f0] = ;;

		*node[0x632444d8d720] = =;

		*node[0x632444d8d750] = 7;

		*node[0x632444d8d780] = -;

		*node[0x632444d8d7b0] = 0;

		*node[0x632444d8d7e0] = 1;

		*node[0x632444d8d810] = ;;

		*node[0x632444d8d840] = =;

		*node[0x632444d8d870] = 8;

		*node[0x632444d8d8a0] = 1;

		*node[0x632444d8d8d0] = ;;

		*node[0x632444d8d900] = =;

		*node[0x632444d8d930] = 9;

		*node[0x632444d8d960] = 1000;

		*node[0x632444d8d990] = ;;

		*node[0x632444d8d9c0] = if;

		*node[0x632444d8d9f0] = op_no;

		*node[0x632444d8da20] = ==;

		*node[0x632444d8da50] = 1;

		*node[0x632444d8da80] = 0;

		*node[0x632444d8dab0] = ;;

		*node[0x632444d8dae0] = if;

		*node[0x632444d8db10] = op_no;

		*node[0x632444d8db40] = ==;

		*node[0x632444d8db70] = 2;

		*node[0x632444d8dba0] = 0;

		*node[0x632444d8dbd0] = ;;

		*node[0x632444d8dc00] = print;

		*node[0x632444d8dc30] = 9;

		*node[0x632444d8dc60] = else;

		*node[0x632444d8dc90] = op_no;

		*node[0x632444d8dcc0] = ;;

		*node[0x632444d8dcf0] = print;

		*node[0x632444d8dd20] = 7;

		*node[0x632444d8dd50] = else;

		*node[0x632444d8dd80] = op_no;

		*node[0x632444d8ddb0] = ;;

		*node[0x632444d8dde0] = =;

		*node[0x632444d8de10] = 10;

		*node[0x632444d8de40] = /;

		*node[0x632444d8de70] = -;

		*node[0x632444d8dea0] = 0;

		*node[0x632444d8ded0] = 2;

		*node[0x632444d8df00] = 1;

		*node[0x632444d8df30] = ;;

		*node[0x632444d8df60] = print;

		*node[0x632444d8df90] = 8;

		*node[0x632444d8dfc0] = ;;

		*node[0x632444d8dff0] = print;

		*node[0x632444d8e020] = 10;

		*node[0x632444d8e050] = ;;

		*node[0x632444d8e080] = return;

		*node[0x632444d8e0b0] = 0;

		*node[0x632444d8e0e0] = ;;

		*node[0x632444d8e110] = 6;

		*node[0x632444d8e140] = 1;

		*node[0x632444d8e170] = 2;

		*node[0x632444d8e1a0] = 3;

		*node[0x632444d8e1d0] = ;;

		*node[0x632444d8e200] = =;

		*node[0x632444d8e230] = 7;

		*node[0x632444d8e260] = -;

		*node[0x632444d8e290] = 0;

		*node[0x632444d8e2c0] = 1;

		*node[0x632444d8e2f0] = ;;

		*node[0x632444d8e320] = =;

		*node[0x632444d8e350] = 8;

		*node[0x632444d8e380] = 1;

		*node[0x632444d8e3b0] = ;;

		*node[0x632444d8e3e0] = =;

		*node[0x632444d8e410] = 11;

		*node[0x632444d8e440] = 2;

		*node[0x632444d8e470] = ;;

		*node[0x632444d8e4a0] = if;

		*node[0x632444d8e4d0] = op_no;

		*node[0x632444d8e500] = ==;

		*node[0x632444d8e530] = 3;

		*node[0x632444d8e560] = 0;

		*node[0x632444d8e590] = ;;

		*node[0x632444d8e5c0] = =;

		*node[0x632444d8e5f0] = 12;

		*node[0x632444d8e620] = 0;

		*node[0x632444d8e650] = ;;

		*node[0x632444d8e680] = =;

		*node[0x632444d8e6b0] = 13;

		*node[0x632444d8e6e0] = /;

		*node[0x632444d8e710] = -;

		*node[0x632444d8e740] = 0;

		*node[0x632444d8e770] = 2;

		*node[0x632444d8e7a0] = 1;

		*node[0x632444d8e7d0] = ;;

		*node[0x632444d8e800] = print;

		*node[0x632444d8e830] = 11;

		*node[0x632444d8e860] = ;;

		*node[0x632444d8e890] = print;

		*node[0x632444d8e8c0] = 12;

		*node[0x632444d8e8f0] = 13;

		*node[0x632444d8e920] = else;

		*node[0x632444d8e950] = op_no;

		*node[0x632444d8e980] = ;;

		*node[0x632444d8e9b0] = =;

		*node[0x632444d8e9e0] = 14;

		*node[0x632444d8ea10] = -;

		*node[0x632444d8ea40] = *;

		*node[0x632444d8ea70] = 2;

		*node[0x632444d8eaa0] = 2;

		*node[0x632444d8ead0] = *;

		*node[0x632444d8eb00] = *;

		*node[0x632444d8eb30] = 4;

		*node[0x632444d8eb60] = 1;

		*node[0x632444d8eb90] = 3;

		*node[0x632444d8ebc0] = ;;

		*node[0x632444d8ebf0] = if;

		*node[0x632444d8ec20] = op_no;

		*node[0x632444d8ec50] = >;

		*node[0x632444d8ec80] = 14;

		*node[0x632444d8ecb0] = 0;

		*node[0x632444d8ece0] = ;;

		*node[0x632444d8ed10] = =;

		*node[0x632444d8ed40] = 15;

		*node[0x632444d8ed70] = sqrt;

		*node[0x632444d8eda0] = 14;

		*node[0x632444d8edd0] = ;;

		*node[0x632444d8ee00] = =;

		*node[0x632444d8ee30] = 12;

		*node[0x632444d8ee60] = /;

		*node[0x632444d8ee90] = -;

		*node[0x632444d8eec0] = -;

		*node[0x632444d8eef0] = 0;

		*node[0x632444d8ef20] = 2;

		*node[0x632444d8ef50] = 15;

		*node[0x632444d8ef80] = *;

		*node[0x632444d8efb0] = 2;

		*node[0x632444d8efe0] = 1;

		*node[0x632444d8f010] = ;;

		*node[0x632444d8f040] = =;

		*node[0x632444d8f070] = 13;

		*node[0x632444d8f0a0] = /;

		*node[0x632444d8f0d0] = +;

		*node[0x632444d8f100] = -;

		*node[0x632444d8f130] = 0;

		*node[0x632444d8f160] = 2;

		*node[0x632444d8f190] = 15;

		*node[0x632444d8f1c0] = *;

		*node[0x632444d8f1f0] = 2;

		*node[0x632444d8f220] = 1;

		*node[0x632444d8f250] = ;;

		*node[0x632444d8f280] = print;

		*node[0x632444d8f2b0] = 11;

		*node[0x632444d8f2e0] = ;;

		*node[0x632444d8f310] = print;

		*node[0x632444d8f340] = 12;

		*node[0x632444d8f370] = 13;

		*node[0x632444d8f3a0] = elseif;

		*node[0x632444d8f3d0] = op_no;

		*node[0x632444d8f400] = ==;

		*node[0x632444d8f430] = 14;

		*node[0x632444d8f460] = 0;

		*node[0x632444d8f490] = ;;

		*node[0x632444d8f4c0] = =;

		*node[0x632444d8f4f0] = 10;

		*node[0x632444d8f520] = /;

		*node[0x632444d8f550] = -;

		*node[0x632444d8f580] = 0;

		*node[0x632444d8f5b0] = 2;

		*node[0x632444d8f5e0] = *;

		*node[0x632444d8f610] = 2;

		*node[0x632444d8f640] = 1;

		*node[0x632444d8f670] = ;;

		*node[0x632444d8f6a0] = print;

		*node[0x632444d8f6d0] = 8;

		*node[0x632444d8f700] = ;;

		*node[0x632444d8f730] = print;

		*node[0x632444d8f760] = 10;

		*node[0x632444d8f790] = else;

		*node[0x632444d8f7c0] = op_no;

		*node[0x632444d8f7f0] = ;;

		*node[0x632444d8f820] = print;

		*node[0x632444d8f850] = 7;

		*node[0x632444d8f880] = ;;

		*node[0x632444d8f8b0] = return;

		*node[0x632444d8f8e0] = 0;

		*node[0x632444d8f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe41d15450] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5f6b4d0e9fd0] = ;;

		*node[0x5f6b4d0ea000] = 0;

		*node[0x5f6b4d0ea030] = ;;

		*node[0x5f6b4d0ea060] = input;

		*node[0x5f6b4d0ea090] = 1;

		*node[0x5f6b4d0ea0c0] = 2;

		*node[0x5f6b4d0ea0f0] = 3;

		*node[0x5f6b4d0ea120] = ;;

		*node[0x5f6b4d0ea180] = 1;

		*node[0x5f6b4d0ea1b0] = 2;

		*node[0x5f6b4d0ea1e0] = 3;

		*node[0x5f6b4d0ea210] = ;;

		*node[0x5f6b4d0ea240] = 4;

		*node[0x5f6b4d0ea270] = 1;

		*node[0x5f6b4d0ea2a0] = 2;

		*node[0x5f6b4d0ea2d0] = 3;

		*node[0x5f6b4d0ea300] = ;;

		*node[0x5f6b4d0ea330] = if;

		*node[0x5f6b4d0ea360] = op_no;

		*node[0x5f6b4d0ea390] = ==;

		*node[0x5f6b4d0ea3c0] = 1;

		*node[0x5f6b4d0ea3f0] = 0;

		*node[0x5f6b4d0ea420] = ;;

		*node[0x5f6b4d0ea480] = 2;

		*node[0x5f6b4d0ea4b0] = 3;

		*node[0x5f6b4d0ea4e0] = else;

		*node[0x5f6b4d0ea510] = op_no;

		*node[0x5f6b4d0ea540] = ;;

		*node[0x5f6b4d0ea5a0] = 1;

		*node[0x5f6b4d0ea5d0] = 2;

		*node[0x5f6b4d0ea600] = 3;

		*node[0x5f6b4d0ea630] = ;;

		*node[0x5f6b4d0ea660] = 5;

		*node[0x5f6b4d0ea690] = 1;

		*node[0x5f6b4d0ea6c0] = 2;

		*node[0x5f6b4d0ea6f0] = ;;

		*node[0x5f6b4d0ea720] = =;

		*node[0x5f6b4d0ea750] = 7;

		*node[0x5f6b4d0ea780] = -;

		*node[0x5f6b4d0ea7b0] = 0;

		*node[0x5f6b4d0ea7e0] = 1;

		*node[0x5f6b4d0ea810] = ;;

		*node[0x5f6b4d0ea840] = =;

		*node[0x5f6b4d0ea870] = 8;

		*node[0x5f6b4d0ea8a0] = 1;

		*node[0x5f6b4d0ea8d0] = ;;

		*node[0x5f6b4d0ea900] = =;

		*node[0x5f6b4d0ea930] = 9;

		*node[0x5f6b4d0ea960] = 1000;

		*node[0x5f6b4d0ea990] = ;;

		*node[0x5f6b4d0ea9c0] = if;

		*node[0x5f6b4d0ea9f0] = op_no;

		*node[0x5f6b4d0eaa20] = ==;

		*node[0x5f6b4d0eaa50] = 1;

		*node[0x5f6b4d0eaa80] = 0;

		*node[0x5f6b4d0eaab0] = ;;

		*node[0x5f6b4d0eaae0] = if;

		*node[0x5f6b4d0eab10] = op_no;

		*node[0x5f6b4d0eab40] = ==;

		*node[0x5f6b4d0eab70] = 2;

		*node[0x5f6b4d0eaba0] = 0;

		*node[0x5f6b4d0eabd0] = ;;

		*node[0x5f6b4d0eac00] = print;

		*node[0x5f6b4d0eac30] = 9;

		*node[0x5f6b4d0eac60] = else;

		*node[0x5f6b4d0eac90] = op_no;

		*node[0x5f6b4d0eacc0] = ;;

		*node[0x5f6b4d0eacf0] = print;

		*node[0x5f6b4d0ead20] = 7;

		*node[0x5f6b4d0ead50] = else;

		*node[0x5f6b4d0ead80] = op_no;

		*node[0x5f6b4d0eadb0] = ;;

		*node[0x5f6b4d0eade0] = =;

		*node[0x5f6b4d0eae10] = 10;

		*node[0x5f6b4d0eae40] = /;

		*node[0x5f6b4d0eae70] = -;

		*node[0x5f6b4d0eaea0] = 0;

		*node[0x5f6b4d0eaed0] = 2;

		*node[0x5f6b4d0eaf00] = 1;

		*node[0x5f6b4d0eaf30] = ;;

		*node[0x5f6b4d0eaf60] = print;

		*node[0x5f6b4d0eaf90] = 8;

		*node[0x5f6b4d0eafc0] = ;;

		*node[0x5f6b4d0eaff0] = print;

		*node[0x5f6b4d0eb020] = 10;

		*node[0x5f6b4d0eb050] = ;;

		*node[0x5f6b4d0eb080] = return;

		*node[0x5f6b4d0eb0b0] = 0;

		*node[0x5f6b4d0eb0e0] = ;;

		*node[0x5f6b4d0eb110] = 6;

		*node[0x5f6b4d0eb140] = 1;

		*node[0x5f6b4d0eb170] = 2;

		*node[0x5f6b4d0eb1a0] = 3;

		*node[0x5f6b4d0eb1d0] = ;;

		*node[0x5f6b4d0eb200] = =;

		*node[0x5f6b4d0eb230] = 7;

		*node[0x5f6b4d0eb260] = -;

		*node[0x5f6b4d0eb290] = 0;

		*node[0x5f6b4d0eb2c0] = 1;

		*node[0x5f6b4d0eb2f0] = ;;

		*node[0x5f6b4d0eb320] = =;

		*node[0x5f6b4d0eb350] = 8;

		*node[0x5f6b4d0eb380] = 1;

		*node[0x5f6b4d0eb3b0] = ;;

		*node[0x5f6b4d0eb3e0] = =;

		*node[0x5f6b4d0eb410] = 11;

		*node[0x5f6b4d0eb440] = 2;

		*node[0x5f6b4d0eb470] = ;;

		*node[0x5f6b4d0eb4a0] = if;

		*node[0x5f6b4d0eb4d0] = op_no;

		*node[0x5f6b4d0eb500] = ==;

		*node[0x5f6b4d0eb530] = 3;

		*node[0x5f6b4d0eb560] = 0;

		*node[0x5f6b4d0eb590] = ;;

		*node[0x5f6b4d0eb5c0] = =;

		*node[0x5f6b4d0eb5f0] = 12;

		*node[0x5f6b4d0eb620] = 0;

		*node[0x5f6b4d0eb650] = ;;

		*node[0x5f6b4d0eb680] = =;

		*node[0x5f6b4d0eb6b0] = 13;

		*node[0x5f6b4d0eb6e0] = /;

		*node[0x5f6b4d0eb710] = -;

		*node[0x5f6b4d0eb740] = 0;

		*node[0x5f6b4d0eb770] = 2;

		*node[0x5f6b4d0eb7a0] = 1;

		*node[0x5f6b4d0eb7d0] = ;;

		*node[0x5f6b4d0eb800] = print;

		*node[0x5f6b4d0eb830] = 11;

		*node[0x5f6b4d0eb860] = ;;

		*node[0x5f6b4d0eb890] = print;

		*node[0x5f6b4d0eb8c0] = 12;

		*node[0x5f6b4d0eb8f0] = 13;

		*node[0x5f6b4d0eb920] = else;

		*node[0x5f6b4d0eb950] = op_no;

		*node[0x5f6b4d0eb980] = ;;

		*node[0x5f6b4d0eb9b0] = =;

		*node[0x5f6b4d0eb9e0] = 14;

		*node[0x5f6b4d0eba10] = -;

		*node[0x5f6b4d0eba40] = *;

		*node[0x5f6b4d0eba70] = 2;

		*node[0x5f6b4d0ebaa0] = 2;

		*node[0x5f6b4d0ebad0] = *;

		*node[0x5f6b4d0ebb00] = *;

		*node[0x5f6b4d0ebb30] = 4;

		*node[0x5f6b4d0ebb60] = 1;

		*node[0x5f6b4d0ebb90] = 3;

		*node[0x5f6b4d0ebbc0] = ;;

		*node[0x5f6b4d0ebbf0] = if;

		*node[0x5f6b4d0ebc20] = op_no;

		*node[0x5f6b4d0ebc50] = >;

		*node[0x5f6b4d0ebc80] = 14;

		*node[0x5f6b4d0ebcb0] = 0;

		*node[0x5f6b4d0ebce0] = ;;

		*node[0x5f6b4d0ebd10] = =;

		*node[0x5f6b4d0ebd40] = 15;

		*node[0x5f6b4d0ebd70] = sqrt;

		*node[0x5f6b4d0ebda0] = 14;

		*node[0x5f6b4d0ebdd0] = ;;

		*node[0x5f6b4d0ebe00] = =;

		*node[0x5f6b4d0ebe30] = 12;

		*node[0x5f6b4d0ebe60] = /;

		*node[0x5f6b4d0ebe90] = -;

		*node[0x5f6b4d0ebec0] = -;

		*node[0x5f6b4d0ebef0] = 0;

		*node[0x5f6b4d0ebf20] = 2;

		*node[0x5f6b4d0ebf50] = 15;

		*node[0x5f6b4d0ebf80] = *;

		*node[0x5f6b4d0ebfb0] = 2;

		*node[0x5f6b4d0ebfe0] = 1;

		*node[0x5f6b4d0ec010] = ;;

		*node[0x5f6b4d0ec040] = =;

		*node[0x5f6b4d0ec070] = 13;

		*node[0x5f6b4d0ec0a0] = /;

		*node[0x5f6b4d0ec0d0] = +;

		*node[0x5f6b4d0ec100] = -;

		*node[0x5f6b4d0ec130] = 0;

		*node[0x5f6b4d0ec160] = 2;

		*node[0x5f6b4d0ec190] = 15;

		*node[0x5f6b4d0ec1c0] = *;

		*node[0x5f6b4d0ec1f0] = 2;

		*node[0x5f6b4d0ec220] = 1;

		*node[0x5f6b4d0ec250] = ;;

		*node[0x5f6b4d0ec280] = print;

		*node[0x5f6b4d0ec2b0] = 11;

		*node[0x5f6b4d0ec2e0] = ;;

		*node[0x5f6b4d0ec310] = print;

		*node[0x5f6b4d0ec340] = 12;

		*node[0x5f6b4d0ec370] = 13;

		*node[0x5f6b4d0ec3a0] = elseif;

		*node[0x5f6b4d0ec3d0] = op_no;

		*node[0x5f6b4d0ec400] = ==;

		*node[0x5f6b4d0ec430] = 14;

		*node[0x5f6b4d0ec460] = 0;

		*node[0x5f6b4d0ec490] = ;;

		*node[0x5f6b4d0ec4c0] = =;

		*node[0x5f6b4d0ec4f0] = 10;

		*node[0x5f6b4d0ec520] = /;

		*node[0x5f6b4d0ec550] = -;

		*node[0x5f6b4d0ec580] = 0;

		*node[0x5f6b4d0ec5b0] = 2;

		*node[0x5f6b4d0ec5e0] = *;

		*node[0x5f6b4d0ec610] = 2;

		*node[0x5f6b4d0ec640] = 1;

		*node[0x5f6b4d0ec670] = ;;

		*node[0x5f6b4d0ec6a0] = print;

		*node[0x5f6b4d0ec6d0] = 8;

		*node[0x5f6b4d0ec700] = ;;

		*node[0x5f6b4d0ec730] = print;

		*node[0x5f6b4d0ec760] = 10;

		*node[0x5f6b4d0ec790] = else;

		*node[0x5f6b4d0ec7c0] = op_no;

		*node[0x5f6b4d0ec7f0] = ;;

		*node[0x5f6b4d0ec820] = print;

		*node[0x5f6b4d0ec850] = 7;

		*node[0x5f6b4d0ec880] = ;;

		*node[0x5f6b4d0ec8b0] = return;

		*node[0x5f6b4d0ec8e0] = 0;

		*node[0x5f6b4d0ec910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc24dce3d0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x582a6b402fd0] = ;;

		*node[0x582a6b403000] = 0;

		*node[0x582a6b403030] = ;;

		*node[0x582a6b403060] = input;

		*node[0x582a6b403090] = 1;

		*node[0x582a6b4030c0] = 2;

		*node[0x582a6b4030f0] = 3;

		*node[0x582a6b403120] = ;;

		*node[0x582a6b403180] = 1;

		*node[0x582a6b4031b0] = 2;

		*node[0x582a6b4031e0] = 3;

		*node[0x582a6b403210] = ;;

		*node[0x582a6b403240] = 4;

		*node[0x582a6b403270] = 1;

		*node[0x582a6b4032a0] = 2;

		*node[0x582a6b4032d0] = 3;

		*node[0x582a6b403300] = ;;

		*node[0x582a6b403330] = if;

		*node[0x582a6b403360] = op_no;

		*node[0x582a6b403390] = ==;

		*node[0x582a6b4033c0] = 1;

		*node[0x582a6b4033f0] = 0;

		*node[0x582a6b403420] = ;;

		*node[0x582a6b403480] = 2;

		*node[0x582a6b4034b0] = 3;

		*node[0x582a6b4034e0] = else;

		*node[0x582a6b403510] = op_no;

		*node[0x582a6b403540] = ;;

		*node[0x582a6b4035a0] = 1;

		*node[0x582a6b4035d0] = 2;

		*node[0x582a6b403600] = 3;

		*node[0x582a6b403630] = ;;

		*node[0x582a6b403660] = 5;

		*node[0x582a6b403690] = 1;

		*node[0x582a6b4036c0] = 2;

		*node[0x582a6b4036f0] = ;;

		*node[0x582a6b403720] = =;

		*node[0x582a6b403750] = 7;

		*node[0x582a6b403780] = -;

		*node[0x582a6b4037b0] = 0;

		*node[0x582a6b4037e0] = 1;

		*node[0x582a6b403810] = ;;

		*node[0x582a6b403840] = =;

		*node[0x582a6b403870] = 8;

		*node[0x582a6b4038a0] = 1;

		*node[0x582a6b4038d0] = ;;

		*node[0x582a6b403900] = =;

		*node[0x582a6b403930] = 9;

		*node[0x582a6b403960] = 1000;

		*node[0x582a6b403990] = ;;

		*node[0x582a6b4039c0] = if;

		*node[0x582a6b4039f0] = op_no;

		*node[0x582a6b403a20] = ==;

		*node[0x582a6b403a50] = 1;

		*node[0x582a6b403a80] = 0;

		*node[0x582a6b403ab0] = ;;

		*node[0x582a6b403ae0] = if;

		*node[0x582a6b403b10] = op_no;

		*node[0x582a6b403b40] = ==;

		*node[0x582a6b403b70] = 2;

		*node[0x582a6b403ba0] = 0;

		*node[0x582a6b403bd0] = ;;

		*node[0x582a6b403c00] = print;

		*node[0x582a6b403c30] = 9;

		*node[0x582a6b403c60] = else;

		*node[0x582a6b403c90] = op_no;

		*node[0x582a6b403cc0] = ;;

		*node[0x582a6b403cf0] = print;

		*node[0x582a6b403d20] = 7;

		*node[0x582a6b403d50] = else;

		*node[0x582a6b403d80] = op_no;

		*node[0x582a6b403db0] = ;;

		*node[0x582a6b403de0] = =;

		*node[0x582a6b403e10] = 10;

		*node[0x582a6b403e40] = /;

		*node[0x582a6b403e70] = -;

		*node[0x582a6b403ea0] = 0;

		*node[0x582a6b403ed0] = 2;

		*node[0x582a6b403f00] = 1;

		*node[0x582a6b403f30] = ;;

		*node[0x582a6b403f60] = print;

		*node[0x582a6b403f90] = 8;

		*node[0x582a6b403fc0] = ;;

		*node[0x582a6b403ff0] = print;

		*node[0x582a6b404020] = 10;

		*node[0x582a6b404050] = ;;

		*node[0x582a6b404080] = return;

		*node[0x582a6b4040b0] = 0;

		*node[0x582a6b4040e0] = ;;

		*node[0x582a6b404110] = 6;

		*node[0x582a6b404140] = 1;

		*node[0x582a6b404170] = 2;

		*node[0x582a6b4041a0] = 3;

		*node[0x582a6b4041d0] = ;;

		*node[0x582a6b404200] = =;

		*node[0x582a6b404230] = 7;

		*node[0x582a6b404260] = -;

		*node[0x582a6b404290] = 0;

		*node[0x582a6b4042c0] = 1;

		*node[0x582a6b4042f0] = ;;

		*node[0x582a6b404320] = =;

		*node[0x582a6b404350] = 8;

		*node[0x582a6b404380] = 1;

		*node[0x582a6b4043b0] = ;;

		*node[0x582a6b4043e0] = =;

		*node[0x582a6b404410] = 11;

		*node[0x582a6b404440] = 2;

		*node[0x582a6b404470] = ;;

		*node[0x582a6b4044a0] = if;

		*node[0x582a6b4044d0] = op_no;

		*node[0x582a6b404500] = ==;

		*node[0x582a6b404530] = 3;

		*node[0x582a6b404560] = 0;

		*node[0x582a6b404590] = ;;

		*node[0x582a6b4045c0] = =;

		*node[0x582a6b4045f0] = 12;

		*node[0x582a6b404620] = 0;

		*node[0x582a6b404650] = ;;

		*node[0x582a6b404680] = =;

		*node[0x582a6b4046b0] = 13;

		*node[0x582a6b4046e0] = /;

		*node[0x582a6b404710] = -;

		*node[0x582a6b404740] = 0;

		*node[0x582a6b404770] = 2;

		*node[0x582a6b4047a0] = 1;

		*node[0x582a6b4047d0] = ;;

		*node[0x582a6b404800] = print;

		*node[0x582a6b404830] = 11;

		*node[0x582a6b404860] = ;;

		*node[0x582a6b404890] = print;

		*node[0x582a6b4048c0] = 12;

		*node[0x582a6b4048f0] = 13;

		*node[0x582a6b404920] = else;

		*node[0x582a6b404950] = op_no;

		*node[0x582a6b404980] = ;;

		*node[0x582a6b4049b0] = =;

		*node[0x582a6b4049e0] = 14;

		*node[0x582a6b404a10] = -;

		*node[0x582a6b404a40] = *;

		*node[0x582a6b404a70] = 2;

		*node[0x582a6b404aa0] = 2;

		*node[0x582a6b404ad0] = *;

		*node[0x582a6b404b00] = *;

		*node[0x582a6b404b30] = 4;

		*node[0x582a6b404b60] = 1;

		*node[0x582a6b404b90] = 3;

		*node[0x582a6b404bc0] = ;;

		*node[0x582a6b404bf0] = if;

		*node[0x582a6b404c20] = op_no;

		*node[0x582a6b404c50] = >;

		*node[0x582a6b404c80] = 14;

		*node[0x582a6b404cb0] = 0;

		*node[0x582a6b404ce0] = ;;

		*node[0x582a6b404d10] = =;

		*node[0x582a6b404d40] = 15;

		*node[0x582a6b404d70] = sqrt;

		*node[0x582a6b404da0] = 14;

		*node[0x582a6b404dd0] = ;;

		*node[0x582a6b404e00] = =;

		*node[0x582a6b404e30] = 12;

		*node[0x582a6b404e60] = /;

		*node[0x582a6b404e90] = -;

		*node[0x582a6b404ec0] = -;

		*node[0x582a6b404ef0] = 0;

		*node[0x582a6b404f20] = 2;

		*node[0x582a6b404f50] = 15;

		*node[0x582a6b404f80] = *;

		*node[0x582a6b404fb0] = 2;

		*node[0x582a6b404fe0] = 1;

		*node[0x582a6b405010] = ;;

		*node[0x582a6b405040] = =;

		*node[0x582a6b405070] = 13;

		*node[0x582a6b4050a0] = /;

		*node[0x582a6b4050d0] = +;

		*node[0x582a6b405100] = -;

		*node[0x582a6b405130] = 0;

		*node[0x582a6b405160] = 2;

		*node[0x582a6b405190] = 15;

		*node[0x582a6b4051c0] = *;

		*node[0x582a6b4051f0] = 2;

		*node[0x582a6b405220] = 1;

		*node[0x582a6b405250] = ;;

		*node[0x582a6b405280] = print;

		*node[0x582a6b4052b0] = 11;

		*node[0x582a6b4052e0] = ;;

		*node[0x582a6b405310] = print;

		*node[0x582a6b405340] = 12;

		*node[0x582a6b405370] = 13;

		*node[0x582a6b4053a0] = elseif;

		*node[0x582a6b4053d0] = op_no;

		*node[0x582a6b405400] = ==;

		*node[0x582a6b405430] = 14;

		*node[0x582a6b405460] = 0;

		*node[0x582a6b405490] = ;;

		*node[0x582a6b4054c0] = =;

		*node[0x582a6b4054f0] = 10;

		*node[0x582a6b405520] = /;

		*node[0x582a6b405550] = -;

		*node[0x582a6b405580] = 0;

		*node[0x582a6b4055b0] = 2;

		*node[0x582a6b4055e0] = *;

		*node[0x582a6b405610] = 2;

		*node[0x582a6b405640] = 1;

		*node[0x582a6b405670] = ;;

		*node[0x582a6b4056a0] = print;

		*node[0x582a6b4056d0] = 8;

		*node[0x582a6b405700] = ;;

		*node[0x582a6b405730] = print;

		*node[0x582a6b405760] = 10;

		*node[0x582a6b405790] = else;

		*node[0x582a6b4057c0] = op_no;

		*node[0x582a6b4057f0] = ;;

		*node[0x582a6b405820] = print;

		*node[0x582a6b405850] = 7;

		*node[0x582a6b405880] = ;;

		*node[0x582a6b4058b0] = return;

		*node[0x582a6b4058e0] = 0;

		*node[0x582a6b405910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff7ebd5140] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5ec162f93fd0] = ;;

		*node[0x5ec162f94000] = 0;

		*node[0x5ec162f94030] = ;;

		*node[0x5ec162f94060] = input;

		*node[0x5ec162f94090] = 1;

		*node[0x5ec162f940c0] = 2;

		*node[0x5ec162f940f0] = 3;

		*node[0x5ec162f94120] = ;;

		*node[0x5ec162f94180] = 1;

		*node[0x5ec162f941b0] = 2;

		*node[0x5ec162f941e0] = 3;

		*node[0x5ec162f94210] = ;;

		*node[0x5ec162f94240] = 4;

		*node[0x5ec162f94270] = 1;

		*node[0x5ec162f942a0] = 2;

		*node[0x5ec162f942d0] = 3;

		*node[0x5ec162f94300] = ;;

		*node[0x5ec162f94330] = if;

		*node[0x5ec162f94360] = op_no;

		*node[0x5ec162f94390] = ==;

		*node[0x5ec162f943c0] = 1;

		*node[0x5ec162f943f0] = 0;

		*node[0x5ec162f94420] = ;;

		*node[0x5ec162f94480] = 2;

		*node[0x5ec162f944b0] = 3;

		*node[0x5ec162f944e0] = else;

		*node[0x5ec162f94510] = op_no;

		*node[0x5ec162f94540] = ;;

		*node[0x5ec162f945a0] = 1;

		*node[0x5ec162f945d0] = 2;

		*node[0x5ec162f94600] = 3;

		*node[0x5ec162f94630] = ;;

		*node[0x5ec162f94660] = 5;

		*node[0x5ec162f94690] = 1;

		*node[0x5ec162f946c0] = 2;

		*node[0x5ec162f946f0] = ;;

		*node[0x5ec162f94720] = =;

		*node[0x5ec162f94750] = 7;

		*node[0x5ec162f94780] = -;

		*node[0x5ec162f947b0] = 0;

		*node[0x5ec162f947e0] = 1;

		*node[0x5ec162f94810] = ;;

		*node[0x5ec162f94840] = =;

		*node[0x5ec162f94870] = 8;

		*node[0x5ec162f948a0] = 1;

		*node[0x5ec162f948d0] = ;;

		*node[0x5ec162f94900] = =;

		*node[0x5ec162f94930] = 9;

		*node[0x5ec162f94960] = 1000;

		*node[0x5ec162f94990] = ;;

		*node[0x5ec162f949c0] = if;

		*node[0x5ec162f949f0] = op_no;

		*node[0x5ec162f94a20] = ==;

		*node[0x5ec162f94a50] = 1;

		*node[0x5ec162f94a80] = 0;

		*node[0x5ec162f94ab0] = ;;

		*node[0x5ec162f94ae0] = if;

		*node[0x5ec162f94b10] = op_no;

		*node[0x5ec162f94b40] = ==;

		*node[0x5ec162f94b70] = 2;

		*node[0x5ec162f94ba0] = 0;

		*node[0x5ec162f94bd0] = ;;

		*node[0x5ec162f94c00] = print;

		*node[0x5ec162f94c30] = 9;

		*node[0x5ec162f94c60] = else;

		*node[0x5ec162f94c90] = op_no;

		*node[0x5ec162f94cc0] = ;;

		*node[0x5ec162f94cf0] = print;

		*node[0x5ec162f94d20] = 7;

		*node[0x5ec162f94d50] = else;

		*node[0x5ec162f94d80] = op_no;

		*node[0x5ec162f94db0] = ;;

		*node[0x5ec162f94de0] = =;

		*node[0x5ec162f94e10] = 10;

		*node[0x5ec162f94e40] = /;

		*node[0x5ec162f94e70] = -;

		*node[0x5ec162f94ea0] = 0;

		*node[0x5ec162f94ed0] = 2;

		*node[0x5ec162f94f00] = 1;

		*node[0x5ec162f94f30] = ;;

		*node[0x5ec162f94f60] = print;

		*node[0x5ec162f94f90] = 8;

		*node[0x5ec162f94fc0] = ;;

		*node[0x5ec162f94ff0] = print;

		*node[0x5ec162f95020] = 10;

		*node[0x5ec162f95050] = ;;

		*node[0x5ec162f95080] = return;

		*node[0x5ec162f950b0] = 0;

		*node[0x5ec162f950e0] = ;;

		*node[0x5ec162f95110] = 6;

		*node[0x5ec162f95140] = 1;

		*node[0x5ec162f95170] = 2;

		*node[0x5ec162f951a0] = 3;

		*node[0x5ec162f951d0] = ;;

		*node[0x5ec162f95200] = =;

		*node[0x5ec162f95230] = 7;

		*node[0x5ec162f95260] = -;

		*node[0x5ec162f95290] = 0;

		*node[0x5ec162f952c0] = 1;

		*node[0x5ec162f952f0] = ;;

		*node[0x5ec162f95320] = =;

		*node[0x5ec162f95350] = 8;

		*node[0x5ec162f95380] = 1;

		*node[0x5ec162f953b0] = ;;

		*node[0x5ec162f953e0] = =;

		*node[0x5ec162f95410] = 11;

		*node[0x5ec162f95440] = 2;

		*node[0x5ec162f95470] = ;;

		*node[0x5ec162f954a0] = if;

		*node[0x5ec162f954d0] = op_no;

		*node[0x5ec162f95500] = ==;

		*node[0x5ec162f95530] = 3;

		*node[0x5ec162f95560] = 0;

		*node[0x5ec162f95590] = ;;

		*node[0x5ec162f955c0] = =;

		*node[0x5ec162f955f0] = 12;

		*node[0x5ec162f95620] = 0;

		*node[0x5ec162f95650] = ;;

		*node[0x5ec162f95680] = =;

		*node[0x5ec162f956b0] = 13;

		*node[0x5ec162f956e0] = /;

		*node[0x5ec162f95710] = -;

		*node[0x5ec162f95740] = 0;

		*node[0x5ec162f95770] = 2;

		*node[0x5ec162f957a0] = 1;

		*node[0x5ec162f957d0] = ;;

		*node[0x5ec162f95800] = print;

		*node[0x5ec162f95830] = 11;

		*node[0x5ec162f95860] = ;;

		*node[0x5ec162f95890] = print;

		*node[0x5ec162f958c0] = 12;

		*node[0x5ec162f958f0] = 13;

		*node[0x5ec162f95920] = else;

		*node[0x5ec162f95950] = op_no;

		*node[0x5ec162f95980] = ;;

		*node[0x5ec162f959b0] = =;

		*node[0x5ec162f959e0] = 14;

		*node[0x5ec162f95a10] = -;

		*node[0x5ec162f95a40] = *;

		*node[0x5ec162f95a70] = 2;

		*node[0x5ec162f95aa0] = 2;

		*node[0x5ec162f95ad0] = *;

		*node[0x5ec162f95b00] = *;

		*node[0x5ec162f95b30] = 4;

		*node[0x5ec162f95b60] = 1;

		*node[0x5ec162f95b90] = 3;

		*node[0x5ec162f95bc0] = ;;

		*node[0x5ec162f95bf0] = if;

		*node[0x5ec162f95c20] = op_no;

		*node[0x5ec162f95c50] = >;

		*node[0x5ec162f95c80] = 14;

		*node[0x5ec162f95cb0] = 0;

		*node[0x5ec162f95ce0] = ;;

		*node[0x5ec162f95d10] = =;

		*node[0x5ec162f95d40] = 15;

		*node[0x5ec162f95d70] = sqrt;

		*node[0x5ec162f95da0] = 14;

		*node[0x5ec162f95dd0] = ;;

		*node[0x5ec162f95e00] = =;

		*node[0x5ec162f95e30] = 12;

		*node[0x5ec162f95e60] = /;

		*node[0x5ec162f95e90] = -;

		*node[0x5ec162f95ec0] = -;

		*node[0x5ec162f95ef0] = 0;

		*node[0x5ec162f95f20] = 2;

		*node[0x5ec162f95f50] = 15;

		*node[0x5ec162f95f80] = *;

		*node[0x5ec162f95fb0] = 2;

		*node[0x5ec162f95fe0] = 1;

		*node[0x5ec162f96010] = ;;

		*node[0x5ec162f96040] = =;

		*node[0x5ec162f96070] = 13;

		*node[0x5ec162f960a0] = /;

		*node[0x5ec162f960d0] = +;

		*node[0x5ec162f96100] = -;

		*node[0x5ec162f96130] = 0;

		*node[0x5ec162f96160] = 2;

		*node[0x5ec162f96190] = 15;

		*node[0x5ec162f961c0] = *;

		*node[0x5ec162f961f0] = 2;

		*node[0x5ec162f96220] = 1;

		*node[0x5ec162f96250] = ;;

		*node[0x5ec162f96280] = print;

		*node[0x5ec162f962b0] = 11;

		*node[0x5ec162f962e0] = ;;

		*node[0x5ec162f96310] = print;

		*node[0x5ec162f96340] = 12;

		*node[0x5ec162f96370] = 13;

		*node[0x5ec162f963a0] = elseif;

		*node[0x5ec162f963d0] = op_no;

		*node[0x5ec162f96400] = ==;

		*node[0x5ec162f96430] = 14;

		*node[0x5ec162f96460] = 0;

		*node[0x5ec162f96490] = ;;

		*node[0x5ec162f964c0] = =;

		*node[0x5ec162f964f0] = 10;

		*node[0x5ec162f96520] = /;

		*node[0x5ec162f96550] = -;

		*node[0x5ec162f96580] = 0;

		*node[0x5ec162f965b0] = 2;

		*node[0x5ec162f965e0] = *;

		*node[0x5ec162f96610] = 2;

		*node[0x5ec162f96640] = 1;

		*node[0x5ec162f96670] = ;;

		*node[0x5ec162f966a0] = print;

		*node[0x5ec162f966d0] = 8;

		*node[0x5ec162f96700] = ;;

		*node[0x5ec162f96730] = print;

		*node[0x5ec162f96760] = 10;

		*node[0x5ec162f96790] = else;

		*node[0x5ec162f967c0] = op_no;

		*node[0x5ec162f967f0] = ;;

		*node[0x5ec162f96820] = print;

		*node[0x5ec162f96850] = 7;

		*node[0x5ec162f96880] = ;;

		*node[0x5ec162f968b0] = return;

		*node[0x5ec162f968e0] = 0;

		*node[0x5ec162f96910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffde03ee150] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x64862e2bffd0] = ;;

		*node[0x64862e2c0000] = 0;

		*node[0x64862e2c0030] = ;;

		*node[0x64862e2c0060] = input;

		*node[0x64862e2c0090] = 1;

		*node[0x64862e2c00c0] = 2;

		*node[0x64862e2c00f0] = 3;

		*node[0x64862e2c0120] = ;;

		*node[0x64862e2c0180] = 1;

		*node[0x64862e2c01b0] = 2;

		*node[0x64862e2c01e0] = 3;

		*node[0x64862e2c0210] = ;;

		*node[0x64862e2c0240] = 4;

		*node[0x64862e2c0270] = 1;

		*node[0x64862e2c02a0] = 2;

		*node[0x64862e2c02d0] = 3;

		*node[0x64862e2c0300] = ;;

		*node[0x64862e2c0330] = if;

		*node[0x64862e2c0360] = op_no;

		*node[0x64862e2c0390] = ==;

		*node[0x64862e2c03c0] = 1;

		*node[0x64862e2c03f0] = 0;

		*node[0x64862e2c0420] = ;;

		*node[0x64862e2c0480] = 2;

		*node[0x64862e2c04b0] = 3;

		*node[0x64862e2c04e0] = else;

		*node[0x64862e2c0510] = op_no;

		*node[0x64862e2c0540] = ;;

		*node[0x64862e2c05a0] = 1;

		*node[0x64862e2c05d0] = 2;

		*node[0x64862e2c0600] = 3;

		*node[0x64862e2c0630] = ;;

		*node[0x64862e2c0660] = 5;

		*node[0x64862e2c0690] = 1;

		*node[0x64862e2c06c0] = 2;

		*node[0x64862e2c06f0] = ;;

		*node[0x64862e2c0720] = =;

		*node[0x64862e2c0750] = 7;

		*node[0x64862e2c0780] = -;

		*node[0x64862e2c07b0] = 0;

		*node[0x64862e2c07e0] = 1;

		*node[0x64862e2c0810] = ;;

		*node[0x64862e2c0840] = =;

		*node[0x64862e2c0870] = 8;

		*node[0x64862e2c08a0] = 1;

		*node[0x64862e2c08d0] = ;;

		*node[0x64862e2c0900] = =;

		*node[0x64862e2c0930] = 9;

		*node[0x64862e2c0960] = 1000;

		*node[0x64862e2c0990] = ;;

		*node[0x64862e2c09c0] = if;

		*node[0x64862e2c09f0] = op_no;

		*node[0x64862e2c0a20] = ==;

		*node[0x64862e2c0a50] = 1;

		*node[0x64862e2c0a80] = 0;

		*node[0x64862e2c0ab0] = ;;

		*node[0x64862e2c0ae0] = if;

		*node[0x64862e2c0b10] = op_no;

		*node[0x64862e2c0b40] = ==;

		*node[0x64862e2c0b70] = 2;

		*node[0x64862e2c0ba0] = 0;

		*node[0x64862e2c0bd0] = ;;

		*node[0x64862e2c0c00] = print;

		*node[0x64862e2c0c30] = 9;

		*node[0x64862e2c0c60] = else;

		*node[0x64862e2c0c90] = op_no;

		*node[0x64862e2c0cc0] = ;;

		*node[0x64862e2c0cf0] = print;

		*node[0x64862e2c0d20] = 7;

		*node[0x64862e2c0d50] = else;

		*node[0x64862e2c0d80] = op_no;

		*node[0x64862e2c0db0] = ;;

		*node[0x64862e2c0de0] = =;

		*node[0x64862e2c0e10] = 10;

		*node[0x64862e2c0e40] = /;

		*node[0x64862e2c0e70] = -;

		*node[0x64862e2c0ea0] = 0;

		*node[0x64862e2c0ed0] = 2;

		*node[0x64862e2c0f00] = 1;

		*node[0x64862e2c0f30] = ;;

		*node[0x64862e2c0f60] = print;

		*node[0x64862e2c0f90] = 8;

		*node[0x64862e2c0fc0] = ;;

		*node[0x64862e2c0ff0] = print;

		*node[0x64862e2c1020] = 10;

		*node[0x64862e2c1050] = ;;

		*node[0x64862e2c1080] = return;

		*node[0x64862e2c10b0] = 0;

		*node[0x64862e2c10e0] = ;;

		*node[0x64862e2c1110] = 6;

		*node[0x64862e2c1140] = 1;

		*node[0x64862e2c1170] = 2;

		*node[0x64862e2c11a0] = 3;

		*node[0x64862e2c11d0] = ;;

		*node[0x64862e2c1200] = =;

		*node[0x64862e2c1230] = 7;

		*node[0x64862e2c1260] = -;

		*node[0x64862e2c1290] = 0;

		*node[0x64862e2c12c0] = 1;

		*node[0x64862e2c12f0] = ;;

		*node[0x64862e2c1320] = =;

		*node[0x64862e2c1350] = 8;

		*node[0x64862e2c1380] = 1;

		*node[0x64862e2c13b0] = ;;

		*node[0x64862e2c13e0] = =;

		*node[0x64862e2c1410] = 11;

		*node[0x64862e2c1440] = 2;

		*node[0x64862e2c1470] = ;;

		*node[0x64862e2c14a0] = if;

		*node[0x64862e2c14d0] = op_no;

		*node[0x64862e2c1500] = ==;

		*node[0x64862e2c1530] = 3;

		*node[0x64862e2c1560] = 0;

		*node[0x64862e2c1590] = ;;

		*node[0x64862e2c15c0] = =;

		*node[0x64862e2c15f0] = 12;

		*node[0x64862e2c1620] = 0;

		*node[0x64862e2c1650] = ;;

		*node[0x64862e2c1680] = =;

		*node[0x64862e2c16b0] = 13;

		*node[0x64862e2c16e0] = /;

		*node[0x64862e2c1710] = -;

		*node[0x64862e2c1740] = 0;

		*node[0x64862e2c1770] = 2;

		*node[0x64862e2c17a0] = 1;

		*node[0x64862e2c17d0] = ;;

		*node[0x64862e2c1800] = print;

		*node[0x64862e2c1830] = 11;

		*node[0x64862e2c1860] = ;;

		*node[0x64862e2c1890] = print;

		*node[0x64862e2c18c0] = 12;

		*node[0x64862e2c18f0] = 13;

		*node[0x64862e2c1920] = else;

		*node[0x64862e2c1950] = op_no;

		*node[0x64862e2c1980] = ;;

		*node[0x64862e2c19b0] = =;

		*node[0x64862e2c19e0] = 14;

		*node[0x64862e2c1a10] = -;

		*node[0x64862e2c1a40] = *;

		*node[0x64862e2c1a70] = 2;

		*node[0x64862e2c1aa0] = 2;

		*node[0x64862e2c1ad0] = *;

		*node[0x64862e2c1b00] = *;

		*node[0x64862e2c1b30] = 4;

		*node[0x64862e2c1b60] = 1;

		*node[0x64862e2c1b90] = 3;

		*node[0x64862e2c1bc0] = ;;

		*node[0x64862e2c1bf0] = if;

		*node[0x64862e2c1c20] = op_no;

		*node[0x64862e2c1c50] = >;

		*node[0x64862e2c1c80] = 14;

		*node[0x64862e2c1cb0] = 0;

		*node[0x64862e2c1ce0] = ;;

		*node[0x64862e2c1d10] = =;

		*node[0x64862e2c1d40] = 15;

		*node[0x64862e2c1d70] = sqrt;

		*node[0x64862e2c1da0] = 14;

		*node[0x64862e2c1dd0] = ;;

		*node[0x64862e2c1e00] = =;

		*node[0x64862e2c1e30] = 12;

		*node[0x64862e2c1e60] = /;

		*node[0x64862e2c1e90] = -;

		*node[0x64862e2c1ec0] = -;

		*node[0x64862e2c1ef0] = 0;

		*node[0x64862e2c1f20] = 2;

		*node[0x64862e2c1f50] = 15;

		*node[0x64862e2c1f80] = *;

		*node[0x64862e2c1fb0] = 2;

		*node[0x64862e2c1fe0] = 1;

		*node[0x64862e2c2010] = ;;

		*node[0x64862e2c2040] = =;

		*node[0x64862e2c2070] = 13;

		*node[0x64862e2c20a0] = /;

		*node[0x64862e2c20d0] = +;

		*node[0x64862e2c2100] = -;

		*node[0x64862e2c2130] = 0;

		*node[0x64862e2c2160] = 2;

		*node[0x64862e2c2190] = 15;

		*node[0x64862e2c21c0] = *;

		*node[0x64862e2c21f0] = 2;

		*node[0x64862e2c2220] = 1;

		*node[0x64862e2c2250] = ;;

		*node[0x64862e2c2280] = print;

		*node[0x64862e2c22b0] = 11;

		*node[0x64862e2c22e0] = ;;

		*node[0x64862e2c2310] = print;

		*node[0x64862e2c2340] = 12;

		*node[0x64862e2c2370] = 13;

		*node[0x64862e2c23a0] = elseif;

		*node[0x64862e2c23d0] = op_no;

		*node[0x64862e2c2400] = ==;

		*node[0x64862e2c2430] = 14;

		*node[0x64862e2c2460] = 0;

		*node[0x64862e2c2490] = ;;

		*node[0x64862e2c24c0] = =;

		*node[0x64862e2c24f0] = 10;

		*node[0x64862e2c2520] = /;

		*node[0x64862e2c2550] = -;

		*node[0x64862e2c2580] = 0;

		*node[0x64862e2c25b0] = 2;

		*node[0x64862e2c25e0] = *;

		*node[0x64862e2c2610] = 2;

		*node[0x64862e2c2640] = 1;

		*node[0x64862e2c2670] = ;;

		*node[0x64862e2c26a0] = print;

		*node[0x64862e2c26d0] = 8;

		*node[0x64862e2c2700] = ;;

		*node[0x64862e2c2730] = print;

		*node[0x64862e2c2760] = 10;

		*node[0x64862e2c2790] = else;

		*node[0x64862e2c27c0] = op_no;

		*node[0x64862e2c27f0] = ;;

		*node[0x64862e2c2820] = print;

		*node[0x64862e2c2850] = 7;

		*node[0x64862e2c2880] = ;;

		*node[0x64862e2c28b0] = return;

		*node[0x64862e2c28e0] = 0;

		*node[0x64862e2c2910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc10777e20] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x62f03b8e9fd0] = ;;

		*node[0x62f03b8ea000] = 0;

		*node[0x62f03b8ea030] = ;;

		*node[0x62f03b8ea060] = input;

		*node[0x62f03b8ea090] = 1;

		*node[0x62f03b8ea0c0] = 2;

		*node[0x62f03b8ea0f0] = 3;

		*node[0x62f03b8ea120] = ;;

		*node[0x62f03b8ea180] = 1;

		*node[0x62f03b8ea1b0] = 2;

		*node[0x62f03b8ea1e0] = 3;

		*node[0x62f03b8ea210] = ;;

		*node[0x62f03b8ea240] = 4;

		*node[0x62f03b8ea270] = 1;

		*node[0x62f03b8ea2a0] = 2;

		*node[0x62f03b8ea2d0] = 3;

		*node[0x62f03b8ea300] = ;;

		*node[0x62f03b8ea330] = if;

		*node[0x62f03b8ea360] = op_no;

		*node[0x62f03b8ea390] = ==;

		*node[0x62f03b8ea3c0] = 1;

		*node[0x62f03b8ea3f0] = 0;

		*node[0x62f03b8ea420] = ;;

		*node[0x62f03b8ea480] = 2;

		*node[0x62f03b8ea4b0] = 3;

		*node[0x62f03b8ea4e0] = else;

		*node[0x62f03b8ea510] = op_no;

		*node[0x62f03b8ea540] = ;;

		*node[0x62f03b8ea5a0] = 1;

		*node[0x62f03b8ea5d0] = 2;

		*node[0x62f03b8ea600] = 3;

		*node[0x62f03b8ea630] = ;;

		*node[0x62f03b8ea660] = 5;

		*node[0x62f03b8ea690] = 1;

		*node[0x62f03b8ea6c0] = 2;

		*node[0x62f03b8ea6f0] = ;;

		*node[0x62f03b8ea720] = =;

		*node[0x62f03b8ea750] = 7;

		*node[0x62f03b8ea780] = -;

		*node[0x62f03b8ea7b0] = 0;

		*node[0x62f03b8ea7e0] = 1;

		*node[0x62f03b8ea810] = ;;

		*node[0x62f03b8ea840] = =;

		*node[0x62f03b8ea870] = 8;

		*node[0x62f03b8ea8a0] = 1;

		*node[0x62f03b8ea8d0] = ;;

		*node[0x62f03b8ea900] = =;

		*node[0x62f03b8ea930] = 9;

		*node[0x62f03b8ea960] = 1000;

		*node[0x62f03b8ea990] = ;;

		*node[0x62f03b8ea9c0] = if;

		*node[0x62f03b8ea9f0] = op_no;

		*node[0x62f03b8eaa20] = ==;

		*node[0x62f03b8eaa50] = 1;

		*node[0x62f03b8eaa80] = 0;

		*node[0x62f03b8eaab0] = ;;

		*node[0x62f03b8eaae0] = if;

		*node[0x62f03b8eab10] = op_no;

		*node[0x62f03b8eab40] = ==;

		*node[0x62f03b8eab70] = 2;

		*node[0x62f03b8eaba0] = 0;

		*node[0x62f03b8eabd0] = ;;

		*node[0x62f03b8eac00] = print;

		*node[0x62f03b8eac30] = 9;

		*node[0x62f03b8eac60] = else;

		*node[0x62f03b8eac90] = op_no;

		*node[0x62f03b8eacc0] = ;;

		*node[0x62f03b8eacf0] = print;

		*node[0x62f03b8ead20] = 7;

		*node[0x62f03b8ead50] = else;

		*node[0x62f03b8ead80] = op_no;

		*node[0x62f03b8eadb0] = ;;

		*node[0x62f03b8eade0] = =;

		*node[0x62f03b8eae10] = 10;

		*node[0x62f03b8eae40] = /;

		*node[0x62f03b8eae70] = -;

		*node[0x62f03b8eaea0] = 0;

		*node[0x62f03b8eaed0] = 2;

		*node[0x62f03b8eaf00] = 1;

		*node[0x62f03b8eaf30] = ;;

		*node[0x62f03b8eaf60] = print;

		*node[0x62f03b8eaf90] = 8;

		*node[0x62f03b8eafc0] = ;;

		*node[0x62f03b8eaff0] = print;

		*node[0x62f03b8eb020] = 10;

		*node[0x62f03b8eb050] = ;;

		*node[0x62f03b8eb080] = return;

		*node[0x62f03b8eb0b0] = 0;

		*node[0x62f03b8eb0e0] = ;;

		*node[0x62f03b8eb110] = 6;

		*node[0x62f03b8eb140] = 1;

		*node[0x62f03b8eb170] = 2;

		*node[0x62f03b8eb1a0] = 3;

		*node[0x62f03b8eb1d0] = ;;

		*node[0x62f03b8eb200] = =;

		*node[0x62f03b8eb230] = 7;

		*node[0x62f03b8eb260] = -;

		*node[0x62f03b8eb290] = 0;

		*node[0x62f03b8eb2c0] = 1;

		*node[0x62f03b8eb2f0] = ;;

		*node[0x62f03b8eb320] = =;

		*node[0x62f03b8eb350] = 8;

		*node[0x62f03b8eb380] = 1;

		*node[0x62f03b8eb3b0] = ;;

		*node[0x62f03b8eb3e0] = =;

		*node[0x62f03b8eb410] = 11;

		*node[0x62f03b8eb440] = 2;

		*node[0x62f03b8eb470] = ;;

		*node[0x62f03b8eb4a0] = if;

		*node[0x62f03b8eb4d0] = op_no;

		*node[0x62f03b8eb500] = ==;

		*node[0x62f03b8eb530] = 3;

		*node[0x62f03b8eb560] = 0;

		*node[0x62f03b8eb590] = ;;

		*node[0x62f03b8eb5c0] = =;

		*node[0x62f03b8eb5f0] = 12;

		*node[0x62f03b8eb620] = 0;

		*node[0x62f03b8eb650] = ;;

		*node[0x62f03b8eb680] = =;

		*node[0x62f03b8eb6b0] = 13;

		*node[0x62f03b8eb6e0] = /;

		*node[0x62f03b8eb710] = -;

		*node[0x62f03b8eb740] = 0;

		*node[0x62f03b8eb770] = 2;

		*node[0x62f03b8eb7a0] = 1;

		*node[0x62f03b8eb7d0] = ;;

		*node[0x62f03b8eb800] = print;

		*node[0x62f03b8eb830] = 11;

		*node[0x62f03b8eb860] = ;;

		*node[0x62f03b8eb890] = print;

		*node[0x62f03b8eb8c0] = 12;

		*node[0x62f03b8eb8f0] = 13;

		*node[0x62f03b8eb920] = else;

		*node[0x62f03b8eb950] = op_no;

		*node[0x62f03b8eb980] = ;;

		*node[0x62f03b8eb9b0] = =;

		*node[0x62f03b8eb9e0] = 14;

		*node[0x62f03b8eba10] = -;

		*node[0x62f03b8eba40] = *;

		*node[0x62f03b8eba70] = 2;

		*node[0x62f03b8ebaa0] = 2;

		*node[0x62f03b8ebad0] = *;

		*node[0x62f03b8ebb00] = *;

		*node[0x62f03b8ebb30] = 4;

		*node[0x62f03b8ebb60] = 1;

		*node[0x62f03b8ebb90] = 3;

		*node[0x62f03b8ebbc0] = ;;

		*node[0x62f03b8ebbf0] = if;

		*node[0x62f03b8ebc20] = op_no;

		*node[0x62f03b8ebc50] = >;

		*node[0x62f03b8ebc80] = 14;

		*node[0x62f03b8ebcb0] = 0;

		*node[0x62f03b8ebce0] = ;;

		*node[0x62f03b8ebd10] = =;

		*node[0x62f03b8ebd40] = 15;

		*node[0x62f03b8ebd70] = sqrt;

		*node[0x62f03b8ebda0] = 14;

		*node[0x62f03b8ebdd0] = ;;

		*node[0x62f03b8ebe00] = =;

		*node[0x62f03b8ebe30] = 12;

		*node[0x62f03b8ebe60] = /;

		*node[0x62f03b8ebe90] = -;

		*node[0x62f03b8ebec0] = -;

		*node[0x62f03b8ebef0] = 0;

		*node[0x62f03b8ebf20] = 2;

		*node[0x62f03b8ebf50] = 15;

		*node[0x62f03b8ebf80] = *;

		*node[0x62f03b8ebfb0] = 2;

		*node[0x62f03b8ebfe0] = 1;

		*node[0x62f03b8ec010] = ;;

		*node[0x62f03b8ec040] = =;

		*node[0x62f03b8ec070] = 13;

		*node[0x62f03b8ec0a0] = /;

		*node[0x62f03b8ec0d0] = +;

		*node[0x62f03b8ec100] = -;

		*node[0x62f03b8ec130] = 0;

		*node[0x62f03b8ec160] = 2;

		*node[0x62f03b8ec190] = 15;

		*node[0x62f03b8ec1c0] = *;

		*node[0x62f03b8ec1f0] = 2;

		*node[0x62f03b8ec220] = 1;

		*node[0x62f03b8ec250] = ;;

		*node[0x62f03b8ec280] = print;

		*node[0x62f03b8ec2b0] = 11;

		*node[0x62f03b8ec2e0] = ;;

		*node[0x62f03b8ec310] = print;

		*node[0x62f03b8ec340] = 12;

		*node[0x62f03b8ec370] = 13;

		*node[0x62f03b8ec3a0] = elseif;

		*node[0x62f03b8ec3d0] = op_no;

		*node[0x62f03b8ec400] = ==;

		*node[0x62f03b8ec430] = 14;

		*node[0x62f03b8ec460] = 0;

		*node[0x62f03b8ec490] = ;;

		*node[0x62f03b8ec4c0] = =;

		*node[0x62f03b8ec4f0] = 10;

		*node[0x62f03b8ec520] = /;

		*node[0x62f03b8ec550] = -;

		*node[0x62f03b8ec580] = 0;

		*node[0x62f03b8ec5b0] = 2;

		*node[0x62f03b8ec5e0] = *;

		*node[0x62f03b8ec610] = 2;

		*node[0x62f03b8ec640] = 1;

		*node[0x62f03b8ec670] = ;;

		*node[0x62f03b8ec6a0] = print;

		*node[0x62f03b8ec6d0] = 8;

		*node[0x62f03b8ec700] = ;;

		*node[0x62f03b8ec730] = print;

		*node[0x62f03b8ec760] = 10;

		*node[0x62f03b8ec790] = else;

		*node[0x62f03b8ec7c0] = op_no;

		*node[0x62f03b8ec7f0] = ;;

		*node[0x62f03b8ec820] = print;

		*node[0x62f03b8ec850] = 7;

		*node[0x62f03b8ec880] = ;;

		*node[0x62f03b8ec8b0] = return;

		*node[0x62f03b8ec8e0] = 0;

		*node[0x62f03b8ec910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe9cb96420] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x58cca154afd0] = ;;

		*node[0x58cca154b000] = 0;

		*node[0x58cca154b030] = ;;

		*node[0x58cca154b060] = input;

		*node[0x58cca154b090] = 1;

		*node[0x58cca154b0c0] = 2;

		*node[0x58cca154b0f0] = 3;

		*node[0x58cca154b120] = ;;

		*node[0x58cca154b180] = 1;

		*node[0x58cca154b1b0] = 2;

		*node[0x58cca154b1e0] = 3;

		*node[0x58cca154b210] = ;;

		*node[0x58cca154b240] = 4;

		*node[0x58cca154b270] = 1;

		*node[0x58cca154b2a0] = 2;

		*node[0x58cca154b2d0] = 3;

		*node[0x58cca154b300] = ;;

		*node[0x58cca154b330] = if;

		*node[0x58cca154b360] = op_no;

		*node[0x58cca154b390] = ==;

		*node[0x58cca154b3c0] = 1;

		*node[0x58cca154b3f0] = 0;

		*node[0x58cca154b420] = ;;

		*node[0x58cca154b480] = 2;

		*node[0x58cca154b4b0] = 3;

		*node[0x58cca154b4e0] = else;

		*node[0x58cca154b510] = op_no;

		*node[0x58cca154b540] = ;;

		*node[0x58cca154b5a0] = 1;

		*node[0x58cca154b5d0] = 2;

		*node[0x58cca154b600] = 3;

		*node[0x58cca154b630] = ;;

		*node[0x58cca154b660] = 5;

		*node[0x58cca154b690] = 1;

		*node[0x58cca154b6c0] = 2;

		*node[0x58cca154b6f0] = ;;

		*node[0x58cca154b720] = =;

		*node[0x58cca154b750] = 7;

		*node[0x58cca154b780] = -;

		*node[0x58cca154b7b0] = 0;

		*node[0x58cca154b7e0] = 1;

		*node[0x58cca154b810] = ;;

		*node[0x58cca154b840] = =;

		*node[0x58cca154b870] = 8;

		*node[0x58cca154b8a0] = 1;

		*node[0x58cca154b8d0] = ;;

		*node[0x58cca154b900] = =;

		*node[0x58cca154b930] = 9;

		*node[0x58cca154b960] = 1000;

		*node[0x58cca154b990] = ;;

		*node[0x58cca154b9c0] = if;

		*node[0x58cca154b9f0] = op_no;

		*node[0x58cca154ba20] = ==;

		*node[0x58cca154ba50] = 1;

		*node[0x58cca154ba80] = 0;

		*node[0x58cca154bab0] = ;;

		*node[0x58cca154bae0] = if;

		*node[0x58cca154bb10] = op_no;

		*node[0x58cca154bb40] = ==;

		*node[0x58cca154bb70] = 2;

		*node[0x58cca154bba0] = 0;

		*node[0x58cca154bbd0] = ;;

		*node[0x58cca154bc00] = print;

		*node[0x58cca154bc30] = 9;

		*node[0x58cca154bc60] = else;

		*node[0x58cca154bc90] = op_no;

		*node[0x58cca154bcc0] = ;;

		*node[0x58cca154bcf0] = print;

		*node[0x58cca154bd20] = 7;

		*node[0x58cca154bd50] = else;

		*node[0x58cca154bd80] = op_no;

		*node[0x58cca154bdb0] = ;;

		*node[0x58cca154bde0] = =;

		*node[0x58cca154be10] = 10;

		*node[0x58cca154be40] = /;

		*node[0x58cca154be70] = -;

		*node[0x58cca154bea0] = 0;

		*node[0x58cca154bed0] = 2;

		*node[0x58cca154bf00] = 1;

		*node[0x58cca154bf30] = ;;

		*node[0x58cca154bf60] = print;

		*node[0x58cca154bf90] = 8;

		*node[0x58cca154bfc0] = ;;

		*node[0x58cca154bff0] = print;

		*node[0x58cca154c020] = 10;

		*node[0x58cca154c050] = ;;

		*node[0x58cca154c080] = return;

		*node[0x58cca154c0b0] = 0;

		*node[0x58cca154c0e0] = ;;

		*node[0x58cca154c110] = 6;

		*node[0x58cca154c140] = 1;

		*node[0x58cca154c170] = 2;

		*node[0x58cca154c1a0] = 3;

		*node[0x58cca154c1d0] = ;;

		*node[0x58cca154c200] = =;

		*node[0x58cca154c230] = 7;

		*node[0x58cca154c260] = -;

		*node[0x58cca154c290] = 0;

		*node[0x58cca154c2c0] = 1;

		*node[0x58cca154c2f0] = ;;

		*node[0x58cca154c320] = =;

		*node[0x58cca154c350] = 8;

		*node[0x58cca154c380] = 1;

		*node[0x58cca154c3b0] = ;;

		*node[0x58cca154c3e0] = =;

		*node[0x58cca154c410] = 11;

		*node[0x58cca154c440] = 2;

		*node[0x58cca154c470] = ;;

		*node[0x58cca154c4a0] = if;

		*node[0x58cca154c4d0] = op_no;

		*node[0x58cca154c500] = ==;

		*node[0x58cca154c530] = 3;

		*node[0x58cca154c560] = 0;

		*node[0x58cca154c590] = ;;

		*node[0x58cca154c5c0] = =;

		*node[0x58cca154c5f0] = 12;

		*node[0x58cca154c620] = 0;

		*node[0x58cca154c650] = ;;

		*node[0x58cca154c680] = =;

		*node[0x58cca154c6b0] = 13;

		*node[0x58cca154c6e0] = /;

		*node[0x58cca154c710] = -;

		*node[0x58cca154c740] = 0;

		*node[0x58cca154c770] = 2;

		*node[0x58cca154c7a0] = 1;

		*node[0x58cca154c7d0] = ;;

		*node[0x58cca154c800] = print;

		*node[0x58cca154c830] = 11;

		*node[0x58cca154c860] = ;;

		*node[0x58cca154c890] = print;

		*node[0x58cca154c8c0] = 12;

		*node[0x58cca154c8f0] = 13;

		*node[0x58cca154c920] = else;

		*node[0x58cca154c950] = op_no;

		*node[0x58cca154c980] = ;;

		*node[0x58cca154c9b0] = =;

		*node[0x58cca154c9e0] = 14;

		*node[0x58cca154ca10] = -;

		*node[0x58cca154ca40] = *;

		*node[0x58cca154ca70] = 2;

		*node[0x58cca154caa0] = 2;

		*node[0x58cca154cad0] = *;

		*node[0x58cca154cb00] = *;

		*node[0x58cca154cb30] = 4;

		*node[0x58cca154cb60] = 1;

		*node[0x58cca154cb90] = 3;

		*node[0x58cca154cbc0] = ;;

		*node[0x58cca154cbf0] = if;

		*node[0x58cca154cc20] = op_no;

		*node[0x58cca154cc50] = >;

		*node[0x58cca154cc80] = 14;

		*node[0x58cca154ccb0] = 0;

		*node[0x58cca154cce0] = ;;

		*node[0x58cca154cd10] = =;

		*node[0x58cca154cd40] = 15;

		*node[0x58cca154cd70] = sqrt;

		*node[0x58cca154cda0] = 14;

		*node[0x58cca154cdd0] = ;;

		*node[0x58cca154ce00] = =;

		*node[0x58cca154ce30] = 12;

		*node[0x58cca154ce60] = /;

		*node[0x58cca154ce90] = -;

		*node[0x58cca154cec0] = -;

		*node[0x58cca154cef0] = 0;

		*node[0x58cca154cf20] = 2;

		*node[0x58cca154cf50] = 15;

		*node[0x58cca154cf80] = *;

		*node[0x58cca154cfb0] = 2;

		*node[0x58cca154cfe0] = 1;

		*node[0x58cca154d010] = ;;

		*node[0x58cca154d040] = =;

		*node[0x58cca154d070] = 13;

		*node[0x58cca154d0a0] = /;

		*node[0x58cca154d0d0] = +;

		*node[0x58cca154d100] = -;

		*node[0x58cca154d130] = 0;

		*node[0x58cca154d160] = 2;

		*node[0x58cca154d190] = 15;

		*node[0x58cca154d1c0] = *;

		*node[0x58cca154d1f0] = 2;

		*node[0x58cca154d220] = 1;

		*node[0x58cca154d250] = ;;

		*node[0x58cca154d280] = print;

		*node[0x58cca154d2b0] = 11;

		*node[0x58cca154d2e0] = ;;

		*node[0x58cca154d310] = print;

		*node[0x58cca154d340] = 12;

		*node[0x58cca154d370] = 13;

		*node[0x58cca154d3a0] = elseif;

		*node[0x58cca154d3d0] = op_no;

		*node[0x58cca154d400] = ==;

		*node[0x58cca154d430] = 14;

		*node[0x58cca154d460] = 0;

		*node[0x58cca154d490] = ;;

		*node[0x58cca154d4c0] = =;

		*node[0x58cca154d4f0] = 10;

		*node[0x58cca154d520] = /;

		*node[0x58cca154d550] = -;

		*node[0x58cca154d580] = 0;

		*node[0x58cca154d5b0] = 2;

		*node[0x58cca154d5e0] = *;

		*node[0x58cca154d610] = 2;

		*node[0x58cca154d640] = 1;

		*node[0x58cca154d670] = ;;

		*node[0x58cca154d6a0] = print;

		*node[0x58cca154d6d0] = 8;

		*node[0x58cca154d700] = ;;

		*node[0x58cca154d730] = print;

		*node[0x58cca154d760] = 10;

		*node[0x58cca154d790] = else;

		*node[0x58cca154d7c0] = op_no;

		*node[0x58cca154d7f0] = ;;

		*node[0x58cca154d820] = print;

		*node[0x58cca154d850] = 7;

		*node[0x58cca154d880] = ;;

		*node[0x58cca154d8b0] = return;

		*node[0x58cca154d8e0] = 0;

		*node[0x58cca154d910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffd4b2a160] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e14ebc1cfd0] = ;;

		*node[0x5e14ebc1d000] = 0;

		*node[0x5e14ebc1d030] = ;;

		*node[0x5e14ebc1d060] = input;

		*node[0x5e14ebc1d090] = 1;

		*node[0x5e14ebc1d0c0] = 2;

		*node[0x5e14ebc1d0f0] = 3;

		*node[0x5e14ebc1d120] = ;;

		*node[0x5e14ebc1d180] = 1;

		*node[0x5e14ebc1d1b0] = 2;

		*node[0x5e14ebc1d1e0] = 3;

		*node[0x5e14ebc1d210] = ;;

		*node[0x5e14ebc1d240] = 4;

		*node[0x5e14ebc1d270] = 1;

		*node[0x5e14ebc1d2a0] = 2;

		*node[0x5e14ebc1d2d0] = 3;

		*node[0x5e14ebc1d300] = ;;

		*node[0x5e14ebc1d330] = if;

		*node[0x5e14ebc1d360] = op_no;

		*node[0x5e14ebc1d390] = ==;

		*node[0x5e14ebc1d3c0] = 1;

		*node[0x5e14ebc1d3f0] = 0;

		*node[0x5e14ebc1d420] = ;;

		*node[0x5e14ebc1d480] = 2;

		*node[0x5e14ebc1d4b0] = 3;

		*node[0x5e14ebc1d4e0] = else;

		*node[0x5e14ebc1d510] = op_no;

		*node[0x5e14ebc1d540] = ;;

		*node[0x5e14ebc1d5a0] = 1;

		*node[0x5e14ebc1d5d0] = 2;

		*node[0x5e14ebc1d600] = 3;

		*node[0x5e14ebc1d630] = ;;

		*node[0x5e14ebc1d660] = 5;

		*node[0x5e14ebc1d690] = 1;

		*node[0x5e14ebc1d6c0] = 2;

		*node[0x5e14ebc1d6f0] = ;;

		*node[0x5e14ebc1d720] = =;

		*node[0x5e14ebc1d750] = 7;

		*node[0x5e14ebc1d780] = -;

		*node[0x5e14ebc1d7b0] = 0;

		*node[0x5e14ebc1d7e0] = 1;

		*node[0x5e14ebc1d810] = ;;

		*node[0x5e14ebc1d840] = =;

		*node[0x5e14ebc1d870] = 8;

		*node[0x5e14ebc1d8a0] = 1;

		*node[0x5e14ebc1d8d0] = ;;

		*node[0x5e14ebc1d900] = =;

		*node[0x5e14ebc1d930] = 9;

		*node[0x5e14ebc1d960] = 1000;

		*node[0x5e14ebc1d990] = ;;

		*node[0x5e14ebc1d9c0] = if;

		*node[0x5e14ebc1d9f0] = op_no;

		*node[0x5e14ebc1da20] = ==;

		*node[0x5e14ebc1da50] = 1;

		*node[0x5e14ebc1da80] = 0;

		*node[0x5e14ebc1dab0] = ;;

		*node[0x5e14ebc1dae0] = if;

		*node[0x5e14ebc1db10] = op_no;

		*node[0x5e14ebc1db40] = ==;

		*node[0x5e14ebc1db70] = 2;

		*node[0x5e14ebc1dba0] = 0;

		*node[0x5e14ebc1dbd0] = ;;

		*node[0x5e14ebc1dc00] = print;

		*node[0x5e14ebc1dc30] = 9;

		*node[0x5e14ebc1dc60] = else;

		*node[0x5e14ebc1dc90] = op_no;

		*node[0x5e14ebc1dcc0] = ;;

		*node[0x5e14ebc1dcf0] = print;

		*node[0x5e14ebc1dd20] = 7;

		*node[0x5e14ebc1dd50] = else;

		*node[0x5e14ebc1dd80] = op_no;

		*node[0x5e14ebc1ddb0] = ;;

		*node[0x5e14ebc1dde0] = =;

		*node[0x5e14ebc1de10] = 10;

		*node[0x5e14ebc1de40] = /;

		*node[0x5e14ebc1de70] = -;

		*node[0x5e14ebc1dea0] = 0;

		*node[0x5e14ebc1ded0] = 2;

		*node[0x5e14ebc1df00] = 1;

		*node[0x5e14ebc1df30] = ;;

		*node[0x5e14ebc1df60] = print;

		*node[0x5e14ebc1df90] = 8;

		*node[0x5e14ebc1dfc0] = ;;

		*node[0x5e14ebc1dff0] = print;

		*node[0x5e14ebc1e020] = 10;

		*node[0x5e14ebc1e050] = ;;

		*node[0x5e14ebc1e080] = return;

		*node[0x5e14ebc1e0b0] = 0;

		*node[0x5e14ebc1e0e0] = ;;

		*node[0x5e14ebc1e110] = 6;

		*node[0x5e14ebc1e140] = 1;

		*node[0x5e14ebc1e170] = 2;

		*node[0x5e14ebc1e1a0] = 3;

		*node[0x5e14ebc1e1d0] = ;;

		*node[0x5e14ebc1e200] = =;

		*node[0x5e14ebc1e230] = 7;

		*node[0x5e14ebc1e260] = -;

		*node[0x5e14ebc1e290] = 0;

		*node[0x5e14ebc1e2c0] = 1;

		*node[0x5e14ebc1e2f0] = ;;

		*node[0x5e14ebc1e320] = =;

		*node[0x5e14ebc1e350] = 8;

		*node[0x5e14ebc1e380] = 1;

		*node[0x5e14ebc1e3b0] = ;;

		*node[0x5e14ebc1e3e0] = =;

		*node[0x5e14ebc1e410] = 11;

		*node[0x5e14ebc1e440] = 2;

		*node[0x5e14ebc1e470] = ;;

		*node[0x5e14ebc1e4a0] = if;

		*node[0x5e14ebc1e4d0] = op_no;

		*node[0x5e14ebc1e500] = ==;

		*node[0x5e14ebc1e530] = 3;

		*node[0x5e14ebc1e560] = 0;

		*node[0x5e14ebc1e590] = ;;

		*node[0x5e14ebc1e5c0] = =;

		*node[0x5e14ebc1e5f0] = 12;

		*node[0x5e14ebc1e620] = 0;

		*node[0x5e14ebc1e650] = ;;

		*node[0x5e14ebc1e680] = =;

		*node[0x5e14ebc1e6b0] = 13;

		*node[0x5e14ebc1e6e0] = /;

		*node[0x5e14ebc1e710] = -;

		*node[0x5e14ebc1e740] = 0;

		*node[0x5e14ebc1e770] = 2;

		*node[0x5e14ebc1e7a0] = 1;

		*node[0x5e14ebc1e7d0] = ;;

		*node[0x5e14ebc1e800] = print;

		*node[0x5e14ebc1e830] = 11;

		*node[0x5e14ebc1e860] = ;;

		*node[0x5e14ebc1e890] = print;

		*node[0x5e14ebc1e8c0] = 12;

		*node[0x5e14ebc1e8f0] = 13;

		*node[0x5e14ebc1e920] = else;

		*node[0x5e14ebc1e950] = op_no;

		*node[0x5e14ebc1e980] = ;;

		*node[0x5e14ebc1e9b0] = =;

		*node[0x5e14ebc1e9e0] = 14;

		*node[0x5e14ebc1ea10] = -;

		*node[0x5e14ebc1ea40] = *;

		*node[0x5e14ebc1ea70] = 2;

		*node[0x5e14ebc1eaa0] = 2;

		*node[0x5e14ebc1ead0] = *;

		*node[0x5e14ebc1eb00] = *;

		*node[0x5e14ebc1eb30] = 4;

		*node[0x5e14ebc1eb60] = 1;

		*node[0x5e14ebc1eb90] = 3;

		*node[0x5e14ebc1ebc0] = ;;

		*node[0x5e14ebc1ebf0] = if;

		*node[0x5e14ebc1ec20] = op_no;

		*node[0x5e14ebc1ec50] = >;

		*node[0x5e14ebc1ec80] = 14;

		*node[0x5e14ebc1ecb0] = 0;

		*node[0x5e14ebc1ece0] = ;;

		*node[0x5e14ebc1ed10] = =;

		*node[0x5e14ebc1ed40] = 15;

		*node[0x5e14ebc1ed70] = sqrt;

		*node[0x5e14ebc1eda0] = 14;

		*node[0x5e14ebc1edd0] = ;;

		*node[0x5e14ebc1ee00] = =;

		*node[0x5e14ebc1ee30] = 12;

		*node[0x5e14ebc1ee60] = /;

		*node[0x5e14ebc1ee90] = -;

		*node[0x5e14ebc1eec0] = -;

		*node[0x5e14ebc1eef0] = 0;

		*node[0x5e14ebc1ef20] = 2;

		*node[0x5e14ebc1ef50] = 15;

		*node[0x5e14ebc1ef80] = *;

		*node[0x5e14ebc1efb0] = 2;

		*node[0x5e14ebc1efe0] = 1;

		*node[0x5e14ebc1f010] = ;;

		*node[0x5e14ebc1f040] = =;

		*node[0x5e14ebc1f070] = 13;

		*node[0x5e14ebc1f0a0] = /;

		*node[0x5e14ebc1f0d0] = +;

		*node[0x5e14ebc1f100] = -;

		*node[0x5e14ebc1f130] = 0;

		*node[0x5e14ebc1f160] = 2;

		*node[0x5e14ebc1f190] = 15;

		*node[0x5e14ebc1f1c0] = *;

		*node[0x5e14ebc1f1f0] = 2;

		*node[0x5e14ebc1f220] = 1;

		*node[0x5e14ebc1f250] = ;;

		*node[0x5e14ebc1f280] = print;

		*node[0x5e14ebc1f2b0] = 11;

		*node[0x5e14ebc1f2e0] = ;;

		*node[0x5e14ebc1f310] = print;

		*node[0x5e14ebc1f340] = 12;

		*node[0x5e14ebc1f370] = 13;

		*node[0x5e14ebc1f3a0] = elseif;

		*node[0x5e14ebc1f3d0] = op_no;

		*node[0x5e14ebc1f400] = ==;

		*node[0x5e14ebc1f430] = 14;

		*node[0x5e14ebc1f460] = 0;

		*node[0x5e14ebc1f490] = ;;

		*node[0x5e14ebc1f4c0] = =;

		*node[0x5e14ebc1f4f0] = 10;

		*node[0x5e14ebc1f520] = /;

		*node[0x5e14ebc1f550] = -;

		*node[0x5e14ebc1f580] = 0;

		*node[0x5e14ebc1f5b0] = 2;

		*node[0x5e14ebc1f5e0] = *;

		*node[0x5e14ebc1f610] = 2;

		*node[0x5e14ebc1f640] = 1;

		*node[0x5e14ebc1f670] = ;;

		*node[0x5e14ebc1f6a0] = print;

		*node[0x5e14ebc1f6d0] = 8;

		*node[0x5e14ebc1f700] = ;;

		*node[0x5e14ebc1f730] = print;

		*node[0x5e14ebc1f760] = 10;

		*node[0x5e14ebc1f790] = else;

		*node[0x5e14ebc1f7c0] = op_no;

		*node[0x5e14ebc1f7f0] = ;;

		*node[0x5e14ebc1f820] = print;

		*node[0x5e14ebc1f850] = 7;

		*node[0x5e14ebc1f880] = ;;

		*node[0x5e14ebc1f8b0] = return;

		*node[0x5e14ebc1f8e0] = 0;

		*node[0x5e14ebc1f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd8dc0f620] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x612a26646fd0] = ;;

		*node[0x612a26647000] = 0;

		*node[0x612a26647030] = ;;

		*node[0x612a26647060] = input;

		*node[0x612a26647090] = 1;

		*node[0x612a266470c0] = 2;

		*node[0x612a266470f0] = 3;

		*node[0x612a26647120] = ;;

		*node[0x612a26647180] = 1;

		*node[0x612a266471b0] = 2;

		*node[0x612a266471e0] = 3;

		*node[0x612a26647210] = ;;

		*node[0x612a26647240] = 4;

		*node[0x612a26647270] = 1;

		*node[0x612a266472a0] = 2;

		*node[0x612a266472d0] = 3;

		*node[0x612a26647300] = ;;

		*node[0x612a26647330] = if;

		*node[0x612a26647360] = op_no;

		*node[0x612a26647390] = ==;

		*node[0x612a266473c0] = 1;

		*node[0x612a266473f0] = 0;

		*node[0x612a26647420] = ;;

		*node[0x612a26647480] = 2;

		*node[0x612a266474b0] = 3;

		*node[0x612a266474e0] = else;

		*node[0x612a26647510] = op_no;

		*node[0x612a26647540] = ;;

		*node[0x612a266475a0] = 1;

		*node[0x612a266475d0] = 2;

		*node[0x612a26647600] = 3;

		*node[0x612a26647630] = ;;

		*node[0x612a26647660] = 5;

		*node[0x612a26647690] = 1;

		*node[0x612a266476c0] = 2;

		*node[0x612a266476f0] = ;;

		*node[0x612a26647720] = =;

		*node[0x612a26647750] = 7;

		*node[0x612a26647780] = -;

		*node[0x612a266477b0] = 0;

		*node[0x612a266477e0] = 1;

		*node[0x612a26647810] = ;;

		*node[0x612a26647840] = =;

		*node[0x612a26647870] = 8;

		*node[0x612a266478a0] = 1;

		*node[0x612a266478d0] = ;;

		*node[0x612a26647900] = =;

		*node[0x612a26647930] = 9;

		*node[0x612a26647960] = 1000;

		*node[0x612a26647990] = ;;

		*node[0x612a266479c0] = if;

		*node[0x612a266479f0] = op_no;

		*node[0x612a26647a20] = ==;

		*node[0x612a26647a50] = 1;

		*node[0x612a26647a80] = 0;

		*node[0x612a26647ab0] = ;;

		*node[0x612a26647ae0] = if;

		*node[0x612a26647b10] = op_no;

		*node[0x612a26647b40] = ==;

		*node[0x612a26647b70] = 2;

		*node[0x612a26647ba0] = 0;

		*node[0x612a26647bd0] = ;;

		*node[0x612a26647c00] = print;

		*node[0x612a26647c30] = 9;

		*node[0x612a26647c60] = else;

		*node[0x612a26647c90] = op_no;

		*node[0x612a26647cc0] = ;;

		*node[0x612a26647cf0] = print;

		*node[0x612a26647d20] = 7;

		*node[0x612a26647d50] = else;

		*node[0x612a26647d80] = op_no;

		*node[0x612a26647db0] = ;;

		*node[0x612a26647de0] = =;

		*node[0x612a26647e10] = 10;

		*node[0x612a26647e40] = /;

		*node[0x612a26647e70] = -;

		*node[0x612a26647ea0] = 0;

		*node[0x612a26647ed0] = 2;

		*node[0x612a26647f00] = 1;

		*node[0x612a26647f30] = ;;

		*node[0x612a26647f60] = print;

		*node[0x612a26647f90] = 8;

		*node[0x612a26647fc0] = ;;

		*node[0x612a26647ff0] = print;

		*node[0x612a26648020] = 10;

		*node[0x612a26648050] = ;;

		*node[0x612a26648080] = return;

		*node[0x612a266480b0] = 0;

		*node[0x612a266480e0] = ;;

		*node[0x612a26648110] = 6;

		*node[0x612a26648140] = 1;

		*node[0x612a26648170] = 2;

		*node[0x612a266481a0] = 3;

		*node[0x612a266481d0] = ;;

		*node[0x612a26648200] = =;

		*node[0x612a26648230] = 7;

		*node[0x612a26648260] = -;

		*node[0x612a26648290] = 0;

		*node[0x612a266482c0] = 1;

		*node[0x612a266482f0] = ;;

		*node[0x612a26648320] = =;

		*node[0x612a26648350] = 8;

		*node[0x612a26648380] = 1;

		*node[0x612a266483b0] = ;;

		*node[0x612a266483e0] = =;

		*node[0x612a26648410] = 11;

		*node[0x612a26648440] = 2;

		*node[0x612a26648470] = ;;

		*node[0x612a266484a0] = if;

		*node[0x612a266484d0] = op_no;

		*node[0x612a26648500] = ==;

		*node[0x612a26648530] = 3;

		*node[0x612a26648560] = 0;

		*node[0x612a26648590] = ;;

		*node[0x612a266485c0] = =;

		*node[0x612a266485f0] = 12;

		*node[0x612a26648620] = 0;

		*node[0x612a26648650] = ;;

		*node[0x612a26648680] = =;

		*node[0x612a266486b0] = 13;

		*node[0x612a266486e0] = /;

		*node[0x612a26648710] = -;

		*node[0x612a26648740] = 0;

		*node[0x612a26648770] = 2;

		*node[0x612a266487a0] = 1;

		*node[0x612a266487d0] = ;;

		*node[0x612a26648800] = print;

		*node[0x612a26648830] = 11;

		*node[0x612a26648860] = ;;

		*node[0x612a26648890] = print;

		*node[0x612a266488c0] = 12;

		*node[0x612a266488f0] = 13;

		*node[0x612a26648920] = else;

		*node[0x612a26648950] = op_no;

		*node[0x612a26648980] = ;;

		*node[0x612a266489b0] = =;

		*node[0x612a266489e0] = 14;

		*node[0x612a26648a10] = -;

		*node[0x612a26648a40] = *;

		*node[0x612a26648a70] = 2;

		*node[0x612a26648aa0] = 2;

		*node[0x612a26648ad0] = *;

		*node[0x612a26648b00] = *;

		*node[0x612a26648b30] = 4;

		*node[0x612a26648b60] = 1;

		*node[0x612a26648b90] = 3;

		*node[0x612a26648bc0] = ;;

		*node[0x612a26648bf0] = if;

		*node[0x612a26648c20] = op_no;

		*node[0x612a26648c50] = >;

		*node[0x612a26648c80] = 14;

		*node[0x612a26648cb0] = 0;

		*node[0x612a26648ce0] = ;;

		*node[0x612a26648d10] = =;

		*node[0x612a26648d40] = 15;

		*node[0x612a26648d70] = sqrt;

		*node[0x612a26648da0] = 14;

		*node[0x612a26648dd0] = ;;

		*node[0x612a26648e00] = =;

		*node[0x612a26648e30] = 12;

		*node[0x612a26648e60] = /;

		*node[0x612a26648e90] = -;

		*node[0x612a26648ec0] = -;

		*node[0x612a26648ef0] = 0;

		*node[0x612a26648f20] = 2;

		*node[0x612a26648f50] = 15;

		*node[0x612a26648f80] = *;

		*node[0x612a26648fb0] = 2;

		*node[0x612a26648fe0] = 1;

		*node[0x612a26649010] = ;;

		*node[0x612a26649040] = =;

		*node[0x612a26649070] = 13;

		*node[0x612a266490a0] = /;

		*node[0x612a266490d0] = +;

		*node[0x612a26649100] = -;

		*node[0x612a26649130] = 0;

		*node[0x612a26649160] = 2;

		*node[0x612a26649190] = 15;

		*node[0x612a266491c0] = *;

		*node[0x612a266491f0] = 2;

		*node[0x612a26649220] = 1;

		*node[0x612a26649250] = ;;

		*node[0x612a26649280] = print;

		*node[0x612a266492b0] = 11;

		*node[0x612a266492e0] = ;;

		*node[0x612a26649310] = print;

		*node[0x612a26649340] = 12;

		*node[0x612a26649370] = 13;

		*node[0x612a266493a0] = elseif;

		*node[0x612a266493d0] = op_no;

		*node[0x612a26649400] = ==;

		*node[0x612a26649430] = 14;

		*node[0x612a26649460] = 0;

		*node[0x612a26649490] = ;;

		*node[0x612a266494c0] = =;

		*node[0x612a266494f0] = 10;

		*node[0x612a26649520] = /;

		*node[0x612a26649550] = -;

		*node[0x612a26649580] = 0;

		*node[0x612a266495b0] = 2;

		*node[0x612a266495e0] = *;

		*node[0x612a26649610] = 2;

		*node[0x612a26649640] = 1;

		*node[0x612a26649670] = ;;

		*node[0x612a266496a0] = print;

		*node[0x612a266496d0] = 8;

		*node[0x612a26649700] = ;;

		*node[0x612a26649730] = print;

		*node[0x612a26649760] = 10;

		*node[0x612a26649790] = else;

		*node[0x612a266497c0] = op_no;

		*node[0x612a266497f0] = ;;

		*node[0x612a26649820] = print;

		*node[0x612a26649850] = 7;

		*node[0x612a26649880] = ;;

		*node[0x612a266498b0] = return;

		*node[0x612a266498e0] = 0;

		*node[0x612a26649910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd7b58aa60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x55a96391e110] = ;;

		*node[0x55a96391e190] = 0;

		*node[0x55a96391e1c0] = ;;

		*node[0x55a96391e1f0] = input;

		*node[0x55a96391e220] = 1;

		*node[0x55a96391e250] = 2;

		*node[0x55a96391e2b0] = 3;

		*node[0x55a96391e2e0] = ;;

		*node[0x55a96391e390] = 1;

		*node[0x55a96391e3c0] = 2;

		*node[0x55a96391e3f0] = 3;

		*node[0x55a96391e420] = ;;

		*node[0x55a96391e4a0] = 4;

		*node[0x55a96391e4d0] = 1;

		*node[0x55a96391e500] = 2;

		*node[0x55a96391e530] = 3;

		*node[0x55a96391e590] = ;;

		*node[0x55a96391e5c0] = if;

		*node[0x55a96391e5f0] = op_no;

		*node[0x55a96391e680] = ==;

		*node[0x55a96391e620] = 1;

		*node[0x55a96391e650] = 0;

		*node[0x55a96391e6b0] = ;;

		*node[0x55a96391e710] = 2;

		*node[0x55a96391e740] = 3;

		*node[0x55a96391e770] = else;

		*node[0x55a96391e7a0] = op_no;

		*node[0x55a96391e7d0] = ;;

		*node[0x55a96391e880] = 1;

		*node[0x55a96391e8b0] = 2;

		*node[0x55a96391e8e0] = 3;

		*node[0x55a96391e910] = ;;

		*node[0x55a96391e990] = 5;

		*node[0x55a96391e9c0] = 1;

		*node[0x55a96391e9f0] = 2;

		*node[0x55a96391ea20] = ;;

		*node[0x55a96391eb40] = =;

		*node[0x55a96391ea50] = 7;

		*node[0x55a96391eb10] = -;

		*node[0x55a96391eab0] = 0;

		*node[0x55a96391eae0] = 1;

		*node[0x55a96391eb70] = ;;

		*node[0x55a96391ec00] = =;

		*node[0x55a96391eba0] = 8;

		*node[0x55a96391ebd0] = 1;

		*node[0x55a96391ec30] = ;;

		*node[0x55a96391ed10] = =;

		*node[0x55a96391ec60] = 9;

		*node[0x55a96391ece0] = 1000;

		*node[0x55a96391ed40] = ;;

		*node[0x55a96391ed70] = if;

		*node[0x55a96391eda0] = op_no;

		*node[0x55a96391ee30] = ==;

		*node[0x55a96391edd0] = 1;

		*node[0x55a96391ee00] = 0;

		*node[0x55a96391ee60] = ;;

		*node[0x55a96391ee90] = if;

		*node[0x55a96391eec0] = op_no;

		*node[0x55a96391ef50] = ==;

		*node[0x55a96391eef0] = 2;

		*node[0x55a96391ef20] = 0;

		*node[0x55a96391ef80] = ;;

		*node[0x55a96391efb0] = print;

		*node[0x55a96391efe0] = 9;

		*node[0x55a96391f010] = else;

		*node[0x55a96391f040] = op_no;

		*node[0x55a96391f070] = ;;

		*node[0x55a96391f0a0] = print;

		*node[0x55a96391f0d0] = 7;

		*node[0x55a96391f100] = else;

		*node[0x55a96391f130] = op_no;

		*node[0x55a96391f160] = ;;

		*node[0x55a96391f2b0] = =;

		*node[0x55a96391f190] = 10;

		*node[0x55a96391f280] = -;

		*node[0x55a96391f1c0] = 0;

		*node[0x55a96391f250] = /;

		*node[0x55a96391f1f0] = 2;

		*node[0x55a96391f220] = 1;

		*node[0x55a96391f2e0] = ;;

		*node[0x55a96391f310] = print;

		*node[0x55a96391f340] = 8;

		*node[0x55a96391f370] = ;;

		*node[0x55a96391f3a0] = print;

		*node[0x55a96391f3d0] = 10;

		*node[0x55a96391f400] = ;;

		*node[0x55a96391f430] = return;

		*node[0x55a96391f460] = 0;

		*node[0x55a96391f490] = ;;

		*node[0x55a96391f510] = 6;

		*node[0x55a96391f540] = 1;

		*node[0x55a96391f570] = 2;

		*node[0x55a96391f5a0] = 3;

		*node[0x55a96391f600] = ;;

		*node[0x55a96391f6f0] = =;

		*node[0x55a96391f630] = 7;

		*node[0x55a96391f6c0] = -;

		*node[0x55a96391f660] = 0;

		*node[0x55a96391f690] = 1;

		*node[0x55a96391f720] = ;;

		*node[0x55a96391f800] = =;

		*node[0x55a96391f750] = 8;

		*node[0x55a96391f7d0] = 1;

		*node[0x55a96391f830] = ;;

		*node[0x55a96391f8c0] = =;

		*node[0x55a96391f860] = 11;

		*node[0x55a96391f890] = 2;

		*node[0x55a96391f8f0] = ;;

		*node[0x55a96391f920] = if;

		*node[0x55a96391f950] = op_no;

		*node[0x55a96391f9e0] = ==;

		*node[0x55a96391f980] = 3;

		*node[0x55a96391f9b0] = 0;

		*node[0x55a96391fa10] = ;;

		*node[0x55a96391faa0] = =;

		*node[0x55a96391fa40] = 12;

		*node[0x55a96391fa70] = 0;

		*node[0x55a96391fad0] = ;;

		*node[0x55a96391fc20] = =;

		*node[0x55a96391fb00] = 13;

		*node[0x55a96391fbf0] = -;

		*node[0x55a96391fb30] = 0;

		*node[0x55a96391fbc0] = /;

		*node[0x55a96391fb60] = 2;

		*node[0x55a96391fb90] = 1;

		*node[0x55a96391fc50] = ;;

		*node[0x55a96391fc80] = print;

		*node[0x55a96391fcb0] = 11;

		*node[0x55a96391fce0] = ;;

		*node[0x55a96391fd10] = print;

		*node[0x55a96391fd40] = 12;

		*node[0x55a96391fd70] = 13;

		*node[0x55a96391fda0] = else;

		*node[0x55a96391fdd0] = op_no;

		*node[0x55a96391fe00] = ;;

		*node[0x55a9639200a0] = =;

		*node[0x55a96391fe30] = 14;

		*node[0x55a963920070] = -;

		*node[0x55a96391ff50] = *;

		*node[0x55a96391fef0] = 2;

		*node[0x55a96391ff20] = 2;

		*node[0x55a963920040] = *;

		*node[0x55a96391ffe0] = *;

		*node[0x55a96391ff80] = 4;

		*node[0x55a96391ffb0] = 1;

		*node[0x55a963920010] = 3;

		*node[0x55a9639200d0] = ;;

		*node[0x55a963920100] = if;

		*node[0x55a963920130] = op_no;

		*node[0x55a9639201c0] = >;

		*node[0x55a963920160] = 14;

		*node[0x55a963920190] = 0;

		*node[0x55a9639201f0] = ;;

		*node[0x55a9639202b0] = =;

		*node[0x55a963920220] = 15;

		*node[0x55a963920280] = sqrt;

		*node[0x55a963920250] = 14;

		*node[0x55a9639202e0] = ;;

		*node[0x55a9639204f0] = =;

		*node[0x55a963920310] = 12;

		*node[0x55a9639204c0] = -;

		*node[0x55a9639203a0] = -;

		*node[0x55a963920340] = 0;

		*node[0x55a963920370] = 2;

		*node[0x55a963920490] = *;

		*node[0x55a963920430] = /;

		*node[0x55a9639203d0] = 15;

		*node[0x55a963920400] = 2;

		*node[0x55a963920460] = 1;

		*node[0x55a963920520] = ;;

		*node[0x55a963920730] = =;

		*node[0x55a963920550] = 13;

		*node[0x55a963920700] = +;

		*node[0x55a9639205e0] = -;

		*node[0x55a963920580] = 0;

		*node[0x55a9639205b0] = 2;

		*node[0x55a9639206d0] = *;

		*node[0x55a963920670] = /;

		*node[0x55a963920610] = 15;

		*node[0x55a963920640] = 2;

		*node[0x55a9639206a0] = 1;

		*node[0x55a963920760] = ;;

		*node[0x55a963920790] = print;

		*node[0x55a9639207c0] = 11;

		*node[0x55a9639207f0] = ;;

		*node[0x55a963920820] = print;

		*node[0x55a963920850] = 12;

		*node[0x55a963920880] = 13;

		*node[0x55a9639208b0] = elseif;

		*node[0x55a9639208e0] = op_no;

		*node[0x55a963920970] = ==;

		*node[0x55a963920910] = 14;

		*node[0x55a963920940] = 0;

		*node[0x55a9639209a0] = ;;

		*node[0x55a963920b50] = =;

		*node[0x55a9639209d0] = 10;

		*node[0x55a963920b20] = -;

		*node[0x55a963920a00] = 0;

		*node[0x55a963920af0] = *;

		*node[0x55a963920a90] = /;

		*node[0x55a963920a30] = 2;

		*node[0x55a963920a60] = 2;

		*node[0x55a963920ac0] = 1;

		*node[0x55a963920b80] = ;;

		*node[0x55a963920bb0] = print;

		*node[0x55a963920be0] = 8;

		*node[0x55a963920c10] = ;;

		*node[0x55a963920c40] = print;

		*node[0x55a963920c70] = 10;

		*node[0x55a963920ca0] = else;

		*node[0x55a963920cd0] = op_no;

		*node[0x55a963920d00] = ;;

		*node[0x55a963920d30] = print;

		*node[0x55a963920d60] = 7;

		*node[0x55a963920d90] = ;;

		*node[0x55a963920dc0] = return;

		*node[0x55a963920df0] = 0;

		*node[0x55a963920e20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc63357440] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5de438a6d110] = ;;

		*node[0x5de438a6d190] = 0;

		*node[0x5de438a6d1c0] = ;;

		*node[0x5de438a6d1f0] = input;

		*node[0x5de438a6d220] = 1;

		*node[0x5de438a6d250] = 2;

		*node[0x5de438a6d2b0] = 3;

		*node[0x5de438a6d2e0] = ;;

		*node[0x5de438a6d390] = 1;

		*node[0x5de438a6d3c0] = 2;

		*node[0x5de438a6d3f0] = 3;

		*node[0x5de438a6d420] = ;;

		*node[0x5de438a6d4a0] = 4;

		*node[0x5de438a6d4d0] = 1;

		*node[0x5de438a6d500] = 2;

		*node[0x5de438a6d530] = 3;

		*node[0x5de438a6d590] = ;;

		*node[0x5de438a6d5c0] = if;

		*node[0x5de438a6d5f0] = op_no;

		*node[0x5de438a6d680] = ==;

		*node[0x5de438a6d620] = 1;

		*node[0x5de438a6d650] = 0;

		*node[0x5de438a6d6b0] = ;;

		*node[0x5de438a6d710] = 2;

		*node[0x5de438a6d740] = 3;

		*node[0x5de438a6d770] = else;

		*node[0x5de438a6d7a0] = op_no;

		*node[0x5de438a6d7d0] = ;;

		*node[0x5de438a6d880] = 1;

		*node[0x5de438a6d8b0] = 2;

		*node[0x5de438a6d8e0] = 3;

		*node[0x5de438a6d910] = ;;

		*node[0x5de438a6d990] = 5;

		*node[0x5de438a6d9c0] = 1;

		*node[0x5de438a6d9f0] = 2;

		*node[0x5de438a6da20] = ;;

		*node[0x5de438a6db40] = =;

		*node[0x5de438a6da50] = 7;

		*node[0x5de438a6db10] = -;

		*node[0x5de438a6dab0] = 0;

		*node[0x5de438a6dae0] = 1;

		*node[0x5de438a6db70] = ;;

		*node[0x5de438a6dc00] = =;

		*node[0x5de438a6dba0] = 8;

		*node[0x5de438a6dbd0] = 1;

		*node[0x5de438a6dc30] = ;;

		*node[0x5de438a6dd10] = =;

		*node[0x5de438a6dc60] = 9;

		*node[0x5de438a6dce0] = 1000;

		*node[0x5de438a6dd40] = ;;

		*node[0x5de438a6dd70] = if;

		*node[0x5de438a6dda0] = op_no;

		*node[0x5de438a6de30] = ==;

		*node[0x5de438a6ddd0] = 1;

		*node[0x5de438a6de00] = 0;

		*node[0x5de438a6de60] = ;;

		*node[0x5de438a6de90] = if;

		*node[0x5de438a6dec0] = op_no;

		*node[0x5de438a6df50] = ==;

		*node[0x5de438a6def0] = 2;

		*node[0x5de438a6df20] = 0;

		*node[0x5de438a6df80] = ;;

		*node[0x5de438a6dfb0] = print;

		*node[0x5de438a6dfe0] = 9;

		*node[0x5de438a6e010] = else;

		*node[0x5de438a6e040] = op_no;

		*node[0x5de438a6e070] = ;;

		*node[0x5de438a6e0a0] = print;

		*node[0x5de438a6e0d0] = 7;

		*node[0x5de438a6e100] = else;

		*node[0x5de438a6e130] = op_no;

		*node[0x5de438a6e160] = ;;

		*node[0x5de438a6e2b0] = =;

		*node[0x5de438a6e190] = 10;

		*node[0x5de438a6e280] = -;

		*node[0x5de438a6e1c0] = 0;

		*node[0x5de438a6e250] = /;

		*node[0x5de438a6e1f0] = 2;

		*node[0x5de438a6e220] = 1;

		*node[0x5de438a6e2e0] = ;;

		*node[0x5de438a6e310] = print;

		*node[0x5de438a6e340] = 8;

		*node[0x5de438a6e370] = ;;

		*node[0x5de438a6e3a0] = print;

		*node[0x5de438a6e3d0] = 10;

		*node[0x5de438a6e400] = ;;

		*node[0x5de438a6e430] = return;

		*node[0x5de438a6e460] = 0;

		*node[0x5de438a6e490] = ;;

		*node[0x5de438a6e510] = 6;

		*node[0x5de438a6e540] = 1;

		*node[0x5de438a6e570] = 2;

		*node[0x5de438a6e5a0] = 3;

		*node[0x5de438a6e600] = ;;

		*node[0x5de438a6e6f0] = =;

		*node[0x5de438a6e630] = 7;

		*node[0x5de438a6e6c0] = -;

		*node[0x5de438a6e660] = 0;

		*node[0x5de438a6e690] = 1;

		*node[0x5de438a6e720] = ;;

		*node[0x5de438a6e800] = =;

		*node[0x5de438a6e750] = 8;

		*node[0x5de438a6e7d0] = 1;

		*node[0x5de438a6e830] = ;;

		*node[0x5de438a6e8c0] = =;

		*node[0x5de438a6e860] = 11;

		*node[0x5de438a6e890] = 2;

		*node[0x5de438a6e8f0] = ;;

		*node[0x5de438a6e920] = if;

		*node[0x5de438a6e950] = op_no;

		*node[0x5de438a6e9e0] = ==;

		*node[0x5de438a6e980] = 3;

		*node[0x5de438a6e9b0] = 0;

		*node[0x5de438a6ea10] = ;;

		*node[0x5de438a6eaa0] = =;

		*node[0x5de438a6ea40] = 12;

		*node[0x5de438a6ea70] = 0;

		*node[0x5de438a6ead0] = ;;

		*node[0x5de438a6ec20] = =;

		*node[0x5de438a6eb00] = 13;

		*node[0x5de438a6ebf0] = -;

		*node[0x5de438a6eb30] = 0;

		*node[0x5de438a6ebc0] = /;

		*node[0x5de438a6eb60] = 2;

		*node[0x5de438a6eb90] = 1;

		*node[0x5de438a6ec50] = ;;

		*node[0x5de438a6ec80] = print;

		*node[0x5de438a6ecb0] = 11;

		*node[0x5de438a6ece0] = ;;

		*node[0x5de438a6ed10] = print;

		*node[0x5de438a6ed40] = 12;

		*node[0x5de438a6ed70] = 13;

		*node[0x5de438a6eda0] = else;

		*node[0x5de438a6edd0] = op_no;

		*node[0x5de438a6ee00] = ;;

		*node[0x5de438a6f0a0] = =;

		*node[0x5de438a6ee30] = 14;

		*node[0x5de438a6f070] = -;

		*node[0x5de438a6ef50] = *;

		*node[0x5de438a6eef0] = 2;

		*node[0x5de438a6ef20] = 2;

		*node[0x5de438a6f040] = *;

		*node[0x5de438a6efe0] = *;

		*node[0x5de438a6ef80] = 4;

		*node[0x5de438a6efb0] = 1;

		*node[0x5de438a6f010] = 3;

		*node[0x5de438a6f0d0] = ;;

		*node[0x5de438a6f100] = if;

		*node[0x5de438a6f130] = op_no;

		*node[0x5de438a6f1c0] = >;

		*node[0x5de438a6f160] = 14;

		*node[0x5de438a6f190] = 0;

		*node[0x5de438a6f1f0] = ;;

		*node[0x5de438a6f2b0] = =;

		*node[0x5de438a6f220] = 15;

		*node[0x5de438a6f280] = sqrt;

		*node[0x5de438a6f250] = 14;

		*node[0x5de438a6f2e0] = ;;

		*node[0x5de438a6f4f0] = =;

		*node[0x5de438a6f310] = 12;

		*node[0x5de438a6f4c0] = -;

		*node[0x5de438a6f3a0] = -;

		*node[0x5de438a6f340] = 0;

		*node[0x5de438a6f370] = 2;

		*node[0x5de438a6f490] = *;

		*node[0x5de438a6f430] = /;

		*node[0x5de438a6f3d0] = 15;

		*node[0x5de438a6f400] = 2;

		*node[0x5de438a6f460] = 1;

		*node[0x5de438a6f520] = ;;

		*node[0x5de438a6f730] = =;

		*node[0x5de438a6f550] = 13;

		*node[0x5de438a6f700] = +;

		*node[0x5de438a6f5e0] = -;

		*node[0x5de438a6f580] = 0;

		*node[0x5de438a6f5b0] = 2;

		*node[0x5de438a6f6d0] = *;

		*node[0x5de438a6f670] = /;

		*node[0x5de438a6f610] = 15;

		*node[0x5de438a6f640] = 2;

		*node[0x5de438a6f6a0] = 1;

		*node[0x5de438a6f760] = ;;

		*node[0x5de438a6f790] = print;

		*node[0x5de438a6f7c0] = 11;

		*node[0x5de438a6f7f0] = ;;

		*node[0x5de438a6f820] = print;

		*node[0x5de438a6f850] = 12;

		*node[0x5de438a6f880] = 13;

		*node[0x5de438a6f8b0] = elseif;

		*node[0x5de438a6f8e0] = op_no;

		*node[0x5de438a6f970] = ==;

		*node[0x5de438a6f910] = 14;

		*node[0x5de438a6f940] = 0;

		*node[0x5de438a6f9a0] = ;;

		*node[0x5de438a6fb50] = =;

		*node[0x5de438a6f9d0] = 10;

		*node[0x5de438a6fb20] = -;

		*node[0x5de438a6fa00] = 0;

		*node[0x5de438a6faf0] = *;

		*node[0x5de438a6fa90] = /;

		*node[0x5de438a6fa30] = 2;

		*node[0x5de438a6fa60] = 2;

		*node[0x5de438a6fac0] = 1;

		*node[0x5de438a6fb80] = ;;

		*node[0x5de438a6fbb0] = print;

		*node[0x5de438a6fbe0] = 8;

		*node[0x5de438a6fc10] = ;;

		*node[0x5de438a6fc40] = print;

		*node[0x5de438a6fc70] = 10;

		*node[0x5de438a6fca0] = else;

		*node[0x5de438a6fcd0] = op_no;

		*node[0x5de438a6fd00] = ;;

		*node[0x5de438a6fd30] = print;

		*node[0x5de438a6fd60] = 7;

		*node[0x5de438a6fd90] = ;;

		*node[0x5de438a6fdc0] = return;

		*node[0x5de438a6fdf0] = 0;

		*node[0x5de438a6fe20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe84ff1ac0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x592b2a491110] = ;;

		*node[0x592b2a491190] = 0;

		*node[0x592b2a4911c0] = ;;

		*node[0x592b2a4911f0] = input;

		*node[0x592b2a491220] = 1;

		*node[0x592b2a491250] = 2;

		*node[0x592b2a4912b0] = 3;

		*node[0x592b2a4912e0] = ;;

		*node[0x592b2a491390] = 1;

		*node[0x592b2a4913c0] = 2;

		*node[0x592b2a4913f0] = 3;

		*node[0x592b2a491420] = ;;

		*node[0x592b2a4914a0] = 4;

		*node[0x592b2a4914d0] = 1;

		*node[0x592b2a491500] = 2;

		*node[0x592b2a491530] = 3;

		*node[0x592b2a491590] = ;;

		*node[0x592b2a4915c0] = if;

		*node[0x592b2a4915f0] = op_no;

		*node[0x592b2a491680] = ==;

		*node[0x592b2a491620] = 1;

		*node[0x592b2a491650] = 0;

		*node[0x592b2a4916b0] = ;;

		*node[0x592b2a491710] = 2;

		*node[0x592b2a491740] = 3;

		*node[0x592b2a491770] = else;

		*node[0x592b2a4917a0] = op_no;

		*node[0x592b2a4917d0] = ;;

		*node[0x592b2a491880] = 1;

		*node[0x592b2a4918b0] = 2;

		*node[0x592b2a4918e0] = 3;

		*node[0x592b2a491910] = ;;

		*node[0x592b2a491990] = 5;

		*node[0x592b2a4919c0] = 1;

		*node[0x592b2a4919f0] = 2;

		*node[0x592b2a491a20] = ;;

		*node[0x592b2a491b40] = =;

		*node[0x592b2a491a50] = 7;

		*node[0x592b2a491b10] = -;

		*node[0x592b2a491ab0] = 0;

		*node[0x592b2a491ae0] = 1;

		*node[0x592b2a491b70] = ;;

		*node[0x592b2a491c00] = =;

		*node[0x592b2a491ba0] = 8;

		*node[0x592b2a491bd0] = 1;

		*node[0x592b2a491c30] = ;;

		*node[0x592b2a491d10] = =;

		*node[0x592b2a491c60] = 9;

		*node[0x592b2a491ce0] = 1000;

		*node[0x592b2a491d40] = ;;

		*node[0x592b2a491d70] = if;

		*node[0x592b2a491da0] = op_no;

		*node[0x592b2a491e30] = ==;

		*node[0x592b2a491dd0] = 1;

		*node[0x592b2a491e00] = 0;

		*node[0x592b2a491e60] = ;;

		*node[0x592b2a491e90] = if;

		*node[0x592b2a491ec0] = op_no;

		*node[0x592b2a491f50] = ==;

		*node[0x592b2a491ef0] = 2;

		*node[0x592b2a491f20] = 0;

		*node[0x592b2a491f80] = ;;

		*node[0x592b2a491fb0] = print;

		*node[0x592b2a491fe0] = 9;

		*node[0x592b2a492010] = else;

		*node[0x592b2a492040] = op_no;

		*node[0x592b2a492070] = ;;

		*node[0x592b2a4920a0] = print;

		*node[0x592b2a4920d0] = 7;

		*node[0x592b2a492100] = else;

		*node[0x592b2a492130] = op_no;

		*node[0x592b2a492160] = ;;

		*node[0x592b2a4922b0] = =;

		*node[0x592b2a492190] = 10;

		*node[0x592b2a492280] = -;

		*node[0x592b2a4921c0] = 0;

		*node[0x592b2a492250] = /;

		*node[0x592b2a4921f0] = 2;

		*node[0x592b2a492220] = 1;

		*node[0x592b2a4922e0] = ;;

		*node[0x592b2a492310] = print;

		*node[0x592b2a492340] = 8;

		*node[0x592b2a492370] = ;;

		*node[0x592b2a4923a0] = print;

		*node[0x592b2a4923d0] = 10;

		*node[0x592b2a492400] = ;;

		*node[0x592b2a492430] = return;

		*node[0x592b2a492460] = 0;

		*node[0x592b2a492490] = ;;

		*node[0x592b2a492510] = 6;

		*node[0x592b2a492540] = 1;

		*node[0x592b2a492570] = 2;

		*node[0x592b2a4925a0] = 3;

		*node[0x592b2a492600] = ;;

		*node[0x592b2a4926f0] = =;

		*node[0x592b2a492630] = 7;

		*node[0x592b2a4926c0] = -;

		*node[0x592b2a492660] = 0;

		*node[0x592b2a492690] = 1;

		*node[0x592b2a492720] = ;;

		*node[0x592b2a492800] = =;

		*node[0x592b2a492750] = 8;

		*node[0x592b2a4927d0] = 1;

		*node[0x592b2a492830] = ;;

		*node[0x592b2a4928c0] = =;

		*node[0x592b2a492860] = 11;

		*node[0x592b2a492890] = 2;

		*node[0x592b2a4928f0] = ;;

		*node[0x592b2a492920] = if;

		*node[0x592b2a492950] = op_no;

		*node[0x592b2a4929e0] = ==;

		*node[0x592b2a492980] = 3;

		*node[0x592b2a4929b0] = 0;

		*node[0x592b2a492a10] = ;;

		*node[0x592b2a492aa0] = =;

		*node[0x592b2a492a40] = 12;

		*node[0x592b2a492a70] = 0;

		*node[0x592b2a492ad0] = ;;

		*node[0x592b2a492c20] = =;

		*node[0x592b2a492b00] = 13;

		*node[0x592b2a492bf0] = -;

		*node[0x592b2a492b30] = 0;

		*node[0x592b2a492bc0] = /;

		*node[0x592b2a492b60] = 2;

		*node[0x592b2a492b90] = 1;

		*node[0x592b2a492c50] = ;;

		*node[0x592b2a492c80] = print;

		*node[0x592b2a492cb0] = 11;

		*node[0x592b2a492ce0] = ;;

		*node[0x592b2a492d10] = print;

		*node[0x592b2a492d40] = 12;

		*node[0x592b2a492d70] = 13;

		*node[0x592b2a492da0] = else;

		*node[0x592b2a492dd0] = op_no;

		*node[0x592b2a492e00] = ;;

		*node[0x592b2a4930a0] = =;

		*node[0x592b2a492e30] = 14;

		*node[0x592b2a493070] = -;

		*node[0x592b2a492f50] = *;

		*node[0x592b2a492ef0] = 2;

		*node[0x592b2a492f20] = 2;

		*node[0x592b2a493040] = *;

		*node[0x592b2a492fe0] = *;

		*node[0x592b2a492f80] = 4;

		*node[0x592b2a492fb0] = 1;

		*node[0x592b2a493010] = 3;

		*node[0x592b2a4930d0] = ;;

		*node[0x592b2a493100] = if;

		*node[0x592b2a493130] = op_no;

		*node[0x592b2a4931c0] = >;

		*node[0x592b2a493160] = 14;

		*node[0x592b2a493190] = 0;

		*node[0x592b2a4931f0] = ;;

		*node[0x592b2a4932b0] = =;

		*node[0x592b2a493220] = 15;

		*node[0x592b2a493280] = sqrt;

		*node[0x592b2a493250] = 14;

		*node[0x592b2a4932e0] = ;;

		*node[0x592b2a4934f0] = =;

		*node[0x592b2a493310] = 12;

		*node[0x592b2a4934c0] = -;

		*node[0x592b2a4933a0] = -;

		*node[0x592b2a493340] = 0;

		*node[0x592b2a493370] = 2;

		*node[0x592b2a493490] = *;

		*node[0x592b2a493430] = /;

		*node[0x592b2a4933d0] = 15;

		*node[0x592b2a493400] = 2;

		*node[0x592b2a493460] = 1;

		*node[0x592b2a493520] = ;;

		*node[0x592b2a493730] = =;

		*node[0x592b2a493550] = 13;

		*node[0x592b2a493700] = +;

		*node[0x592b2a4935e0] = -;

		*node[0x592b2a493580] = 0;

		*node[0x592b2a4935b0] = 2;

		*node[0x592b2a4936d0] = *;

		*node[0x592b2a493670] = /;

		*node[0x592b2a493610] = 15;

		*node[0x592b2a493640] = 2;

		*node[0x592b2a4936a0] = 1;

		*node[0x592b2a493760] = ;;

		*node[0x592b2a493790] = print;

		*node[0x592b2a4937c0] = 11;

		*node[0x592b2a4937f0] = ;;

		*node[0x592b2a493820] = print;

		*node[0x592b2a493850] = 12;

		*node[0x592b2a493880] = 13;

		*node[0x592b2a4938b0] = elseif;

		*node[0x592b2a4938e0] = op_no;

		*node[0x592b2a493970] = ==;

		*node[0x592b2a493910] = 14;

		*node[0x592b2a493940] = 0;

		*node[0x592b2a4939a0] = ;;

		*node[0x592b2a493b50] = =;

		*node[0x592b2a4939d0] = 10;

		*node[0x592b2a493b20] = -;

		*node[0x592b2a493a00] = 0;

		*node[0x592b2a493af0] = *;

		*node[0x592b2a493a90] = /;

		*node[0x592b2a493a30] = 2;

		*node[0x592b2a493a60] = 2;

		*node[0x592b2a493ac0] = 1;

		*node[0x592b2a493b80] = ;;

		*node[0x592b2a493bb0] = print;

		*node[0x592b2a493be0] = 8;

		*node[0x592b2a493c10] = ;;

		*node[0x592b2a493c40] = print;

		*node[0x592b2a493c70] = 10;

		*node[0x592b2a493ca0] = else;

		*node[0x592b2a493cd0] = op_no;

		*node[0x592b2a493d00] = ;;

		*node[0x592b2a493d30] = print;

		*node[0x592b2a493d60] = 7;

		*node[0x592b2a493d90] = ;;

		*node[0x592b2a493dc0] = return;

		*node[0x592b2a493df0] = 0;

		*node[0x592b2a493e20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffa06dfa70] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58784f92d110] = ;;

		*node[0x58784f92d190] = 0;

		*node[0x58784f92d1c0] = ;;

		*node[0x58784f92d1f0] = input;

		*node[0x58784f92d220] = 1;

		*node[0x58784f92d250] = 2;

		*node[0x58784f92d2b0] = 3;

		*node[0x58784f92d2e0] = ;;

		*node[0x58784f92d390] = 1;

		*node[0x58784f92d3c0] = 2;

		*node[0x58784f92d3f0] = 3;

		*node[0x58784f92d420] = ;;

		*node[0x58784f92d4a0] = 4;

		*node[0x58784f92d4d0] = 1;

		*node[0x58784f92d500] = 2;

		*node[0x58784f92d530] = 3;

		*node[0x58784f92d590] = ;;

		*node[0x58784f92d5c0] = if;

		*node[0x58784f92d5f0] = op_no;

		*node[0x58784f92d680] = ==;

		*node[0x58784f92d620] = 1;

		*node[0x58784f92d650] = 0;

		*node[0x58784f92d6b0] = ;;

		*node[0x58784f92d710] = 2;

		*node[0x58784f92d740] = 3;

		*node[0x58784f92d770] = else;

		*node[0x58784f92d7a0] = op_no;

		*node[0x58784f92d7d0] = ;;

		*node[0x58784f92d880] = 1;

		*node[0x58784f92d8b0] = 2;

		*node[0x58784f92d8e0] = 3;

		*node[0x58784f92d910] = ;;

		*node[0x58784f92d990] = 5;

		*node[0x58784f92d9c0] = 1;

		*node[0x58784f92d9f0] = 2;

		*node[0x58784f92da20] = ;;

		*node[0x58784f92db40] = =;

		*node[0x58784f92da50] = 7;

		*node[0x58784f92db10] = -;

		*node[0x58784f92dab0] = 0;

		*node[0x58784f92dae0] = 1;

		*node[0x58784f92db70] = ;;

		*node[0x58784f92dc00] = =;

		*node[0x58784f92dba0] = 8;

		*node[0x58784f92dbd0] = 1;

		*node[0x58784f92dc30] = ;;

		*node[0x58784f92dd10] = =;

		*node[0x58784f92dc60] = 9;

		*node[0x58784f92dce0] = 1000;

		*node[0x58784f92dd40] = ;;

		*node[0x58784f92dd70] = if;

		*node[0x58784f92dda0] = op_no;

		*node[0x58784f92de30] = ==;

		*node[0x58784f92ddd0] = 1;

		*node[0x58784f92de00] = 0;

		*node[0x58784f92de60] = ;;

		*node[0x58784f92de90] = if;

		*node[0x58784f92dec0] = op_no;

		*node[0x58784f92df50] = ==;

		*node[0x58784f92def0] = 2;

		*node[0x58784f92df20] = 0;

		*node[0x58784f92df80] = ;;

		*node[0x58784f92dfb0] = print;

		*node[0x58784f92dfe0] = 9;

		*node[0x58784f92e010] = else;

		*node[0x58784f92e040] = op_no;

		*node[0x58784f92e070] = ;;

		*node[0x58784f92e0a0] = print;

		*node[0x58784f92e0d0] = 7;

		*node[0x58784f92e100] = else;

		*node[0x58784f92e130] = op_no;

		*node[0x58784f92e160] = ;;

		*node[0x58784f92e2b0] = =;

		*node[0x58784f92e190] = 10;

		*node[0x58784f92e280] = -;

		*node[0x58784f92e1c0] = 0;

		*node[0x58784f92e250] = /;

		*node[0x58784f92e1f0] = 2;

		*node[0x58784f92e220] = 1;

		*node[0x58784f92e2e0] = ;;

		*node[0x58784f92e310] = print;

		*node[0x58784f92e340] = 8;

		*node[0x58784f92e370] = ;;

		*node[0x58784f92e3a0] = print;

		*node[0x58784f92e3d0] = 10;

		*node[0x58784f92e400] = ;;

		*node[0x58784f92e430] = return;

		*node[0x58784f92e460] = 0;

		*node[0x58784f92e490] = ;;

		*node[0x58784f92e510] = 6;

		*node[0x58784f92e540] = 1;

		*node[0x58784f92e570] = 2;

		*node[0x58784f92e5a0] = 3;

		*node[0x58784f92e600] = ;;

		*node[0x58784f92e6f0] = =;

		*node[0x58784f92e630] = 7;

		*node[0x58784f92e6c0] = -;

		*node[0x58784f92e660] = 0;

		*node[0x58784f92e690] = 1;

		*node[0x58784f92e720] = ;;

		*node[0x58784f92e800] = =;

		*node[0x58784f92e750] = 8;

		*node[0x58784f92e7d0] = 1;

		*node[0x58784f92e830] = ;;

		*node[0x58784f92e8c0] = =;

		*node[0x58784f92e860] = 11;

		*node[0x58784f92e890] = 2;

		*node[0x58784f92e8f0] = ;;

		*node[0x58784f92e920] = if;

		*node[0x58784f92e950] = op_no;

		*node[0x58784f92e9e0] = ==;

		*node[0x58784f92e980] = 3;

		*node[0x58784f92e9b0] = 0;

		*node[0x58784f92ea10] = ;;

		*node[0x58784f92eaa0] = =;

		*node[0x58784f92ea40] = 12;

		*node[0x58784f92ea70] = 0;

		*node[0x58784f92ead0] = ;;

		*node[0x58784f92ec20] = =;

		*node[0x58784f92eb00] = 13;

		*node[0x58784f92ebf0] = -;

		*node[0x58784f92eb30] = 0;

		*node[0x58784f92ebc0] = /;

		*node[0x58784f92eb60] = 2;

		*node[0x58784f92eb90] = 1;

		*node[0x58784f92ec50] = ;;

		*node[0x58784f92ec80] = print;

		*node[0x58784f92ecb0] = 11;

		*node[0x58784f92ece0] = ;;

		*node[0x58784f92ed10] = print;

		*node[0x58784f92ed40] = 12;

		*node[0x58784f92ed70] = 13;

		*node[0x58784f92eda0] = else;

		*node[0x58784f92edd0] = op_no;

		*node[0x58784f92ee00] = ;;

		*node[0x58784f92f0a0] = =;

		*node[0x58784f92ee30] = 14;

		*node[0x58784f92f070] = -;

		*node[0x58784f92ef50] = *;

		*node[0x58784f92eef0] = 2;

		*node[0x58784f92ef20] = 2;

		*node[0x58784f92f040] = *;

		*node[0x58784f92efe0] = *;

		*node[0x58784f92ef80] = 4;

		*node[0x58784f92efb0] = 1;

		*node[0x58784f92f010] = 3;

		*node[0x58784f92f0d0] = ;;

		*node[0x58784f92f100] = if;

		*node[0x58784f92f130] = op_no;

		*node[0x58784f92f1c0] = >;

		*node[0x58784f92f160] = 14;

		*node[0x58784f92f190] = 0;

		*node[0x58784f92f1f0] = ;;

		*node[0x58784f92f2b0] = =;

		*node[0x58784f92f220] = 15;

		*node[0x58784f92f280] = sqrt;

		*node[0x58784f92f250] = 14;

		*node[0x58784f92f2e0] = ;;

		*node[0x58784f92f4f0] = =;

		*node[0x58784f92f310] = 12;

		*node[0x58784f92f4c0] = -;

		*node[0x58784f92f3a0] = -;

		*node[0x58784f92f340] = 0;

		*node[0x58784f92f370] = 2;

		*node[0x58784f92f490] = *;

		*node[0x58784f92f430] = /;

		*node[0x58784f92f3d0] = 15;

		*node[0x58784f92f400] = 2;

		*node[0x58784f92f460] = 1;

		*node[0x58784f92f520] = ;;

		*node[0x58784f92f730] = =;

		*node[0x58784f92f550] = 13;

		*node[0x58784f92f700] = +;

		*node[0x58784f92f5e0] = -;

		*node[0x58784f92f580] = 0;

		*node[0x58784f92f5b0] = 2;

		*node[0x58784f92f6d0] = *;

		*node[0x58784f92f670] = /;

		*node[0x58784f92f610] = 15;

		*node[0x58784f92f640] = 2;

		*node[0x58784f92f6a0] = 1;

		*node[0x58784f92f760] = ;;

		*node[0x58784f92f790] = print;

		*node[0x58784f92f7c0] = 11;

		*node[0x58784f92f7f0] = ;;

		*node[0x58784f92f820] = print;

		*node[0x58784f92f850] = 12;

		*node[0x58784f92f880] = 13;

		*node[0x58784f92f8b0] = elseif;

		*node[0x58784f92f8e0] = op_no;

		*node[0x58784f92f970] = ==;

		*node[0x58784f92f910] = 14;

		*node[0x58784f92f940] = 0;

		*node[0x58784f92f9a0] = ;;

		*node[0x58784f92fb50] = =;

		*node[0x58784f92f9d0] = 10;

		*node[0x58784f92fb20] = -;

		*node[0x58784f92fa00] = 0;

		*node[0x58784f92faf0] = *;

		*node[0x58784f92fa90] = /;

		*node[0x58784f92fa30] = 2;

		*node[0x58784f92fa60] = 2;

		*node[0x58784f92fac0] = 1;

		*node[0x58784f92fb80] = ;;

		*node[0x58784f92fbb0] = print;

		*node[0x58784f92fbe0] = 8;

		*node[0x58784f92fc10] = ;;

		*node[0x58784f92fc40] = print;

		*node[0x58784f92fc70] = 10;

		*node[0x58784f92fca0] = else;

		*node[0x58784f92fcd0] = op_no;

		*node[0x58784f92fd00] = ;;

		*node[0x58784f92fd30] = print;

		*node[0x58784f92fd60] = 7;

		*node[0x58784f92fd90] = ;;

		*node[0x58784f92fdc0] = return;

		*node[0x58784f92fdf0] = 0;

		*node[0x58784f92fe20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe3f7cd7d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5aa4f8af1110] = ;;

		*node[0x5aa4f8af1190] = 0;

		*node[0x5aa4f8af11c0] = ;;

		*node[0x5aa4f8af11f0] = input;

		*node[0x5aa4f8af1220] = 1;

		*node[0x5aa4f8af1250] = 2;

		*node[0x5aa4f8af12b0] = 3;

		*node[0x5aa4f8af12e0] = ;;

		*node[0x5aa4f8af1390] = 1;

		*node[0x5aa4f8af13c0] = 2;

		*node[0x5aa4f8af13f0] = 3;

		*node[0x5aa4f8af1420] = ;;

		*node[0x5aa4f8af14a0] = 4;

		*node[0x5aa4f8af14d0] = 1;

		*node[0x5aa4f8af1500] = 2;

		*node[0x5aa4f8af1530] = 3;

		*node[0x5aa4f8af1590] = ;;

		*node[0x5aa4f8af15c0] = if;

		*node[0x5aa4f8af15f0] = op_no;

		*node[0x5aa4f8af1680] = ==;

		*node[0x5aa4f8af1620] = 1;

		*node[0x5aa4f8af1650] = 0;

		*node[0x5aa4f8af16b0] = ;;

		*node[0x5aa4f8af1710] = 2;

		*node[0x5aa4f8af1740] = 3;

		*node[0x5aa4f8af1770] = else;

		*node[0x5aa4f8af17a0] = op_no;

		*node[0x5aa4f8af17d0] = ;;

		*node[0x5aa4f8af1880] = 1;

		*node[0x5aa4f8af18b0] = 2;

		*node[0x5aa4f8af18e0] = 3;

		*node[0x5aa4f8af1910] = ;;

		*node[0x5aa4f8af1990] = 5;

		*node[0x5aa4f8af19c0] = 1;

		*node[0x5aa4f8af19f0] = 2;

		*node[0x5aa4f8af1a20] = ;;

		*node[0x5aa4f8af1b40] = =;

		*node[0x5aa4f8af1a50] = 7;

		*node[0x5aa4f8af1b10] = -;

		*node[0x5aa4f8af1ab0] = 0;

		*node[0x5aa4f8af1ae0] = 1;

		*node[0x5aa4f8af1b70] = ;;

		*node[0x5aa4f8af1c00] = =;

		*node[0x5aa4f8af1ba0] = 8;

		*node[0x5aa4f8af1bd0] = 1;

		*node[0x5aa4f8af1c30] = ;;

		*node[0x5aa4f8af1d10] = =;

		*node[0x5aa4f8af1c60] = 9;

		*node[0x5aa4f8af1ce0] = 1000;

		*node[0x5aa4f8af1d40] = ;;

		*node[0x5aa4f8af1d70] = if;

		*node[0x5aa4f8af1da0] = op_no;

		*node[0x5aa4f8af1e30] = ==;

		*node[0x5aa4f8af1dd0] = 1;

		*node[0x5aa4f8af1e00] = 0;

		*node[0x5aa4f8af1e60] = ;;

		*node[0x5aa4f8af1e90] = if;

		*node[0x5aa4f8af1ec0] = op_no;

		*node[0x5aa4f8af1f50] = ==;

		*node[0x5aa4f8af1ef0] = 2;

		*node[0x5aa4f8af1f20] = 0;

		*node[0x5aa4f8af1f80] = ;;

		*node[0x5aa4f8af1fb0] = print;

		*node[0x5aa4f8af1fe0] = 9;

		*node[0x5aa4f8af2010] = else;

		*node[0x5aa4f8af2040] = op_no;

		*node[0x5aa4f8af2070] = ;;

		*node[0x5aa4f8af20a0] = print;

		*node[0x5aa4f8af20d0] = 7;

		*node[0x5aa4f8af2100] = else;

		*node[0x5aa4f8af2130] = op_no;

		*node[0x5aa4f8af2160] = ;;

		*node[0x5aa4f8af22b0] = =;

		*node[0x5aa4f8af2190] = 10;

		*node[0x5aa4f8af2280] = -;

		*node[0x5aa4f8af21c0] = 0;

		*node[0x5aa4f8af2250] = /;

		*node[0x5aa4f8af21f0] = 2;

		*node[0x5aa4f8af2220] = 1;

		*node[0x5aa4f8af22e0] = ;;

		*node[0x5aa4f8af2310] = print;

		*node[0x5aa4f8af2340] = 8;

		*node[0x5aa4f8af2370] = ;;

		*node[0x5aa4f8af23a0] = print;

		*node[0x5aa4f8af23d0] = 10;

		*node[0x5aa4f8af2400] = ;;

		*node[0x5aa4f8af2430] = return;

		*node[0x5aa4f8af2460] = 0;

		*node[0x5aa4f8af2490] = ;;

		*node[0x5aa4f8af2510] = 6;

		*node[0x5aa4f8af2540] = 1;

		*node[0x5aa4f8af2570] = 2;

		*node[0x5aa4f8af25a0] = 3;

		*node[0x5aa4f8af2600] = ;;

		*node[0x5aa4f8af26f0] = =;

		*node[0x5aa4f8af2630] = 7;

		*node[0x5aa4f8af26c0] = -;

		*node[0x5aa4f8af2660] = 0;

		*node[0x5aa4f8af2690] = 1;

		*node[0x5aa4f8af2720] = ;;

		*node[0x5aa4f8af2800] = =;

		*node[0x5aa4f8af2750] = 8;

		*node[0x5aa4f8af27d0] = 1;

		*node[0x5aa4f8af2830] = ;;

		*node[0x5aa4f8af28c0] = =;

		*node[0x5aa4f8af2860] = 11;

		*node[0x5aa4f8af2890] = 2;

		*node[0x5aa4f8af28f0] = ;;

		*node[0x5aa4f8af2920] = if;

		*node[0x5aa4f8af2950] = op_no;

		*node[0x5aa4f8af29e0] = ==;

		*node[0x5aa4f8af2980] = 3;

		*node[0x5aa4f8af29b0] = 0;

		*node[0x5aa4f8af2a10] = ;;

		*node[0x5aa4f8af2aa0] = =;

		*node[0x5aa4f8af2a40] = 12;

		*node[0x5aa4f8af2a70] = 0;

		*node[0x5aa4f8af2ad0] = ;;

		*node[0x5aa4f8af2c20] = =;

		*node[0x5aa4f8af2b00] = 13;

		*node[0x5aa4f8af2bf0] = -;

		*node[0x5aa4f8af2b30] = 0;

		*node[0x5aa4f8af2bc0] = /;

		*node[0x5aa4f8af2b60] = 2;

		*node[0x5aa4f8af2b90] = 1;

		*node[0x5aa4f8af2c50] = ;;

		*node[0x5aa4f8af2c80] = print;

		*node[0x5aa4f8af2cb0] = 11;

		*node[0x5aa4f8af2ce0] = ;;

		*node[0x5aa4f8af2d10] = print;

		*node[0x5aa4f8af2d40] = 12;

		*node[0x5aa4f8af2d70] = 13;

		*node[0x5aa4f8af2da0] = else;

		*node[0x5aa4f8af2dd0] = op_no;

		*node[0x5aa4f8af2e00] = ;;

		*node[0x5aa4f8af30a0] = =;

		*node[0x5aa4f8af2e30] = 14;

		*node[0x5aa4f8af3070] = -;

		*node[0x5aa4f8af2f50] = *;

		*node[0x5aa4f8af2ef0] = 2;

		*node[0x5aa4f8af2f20] = 2;

		*node[0x5aa4f8af3040] = *;

		*node[0x5aa4f8af2fe0] = *;

		*node[0x5aa4f8af2f80] = 4;

		*node[0x5aa4f8af2fb0] = 1;

		*node[0x5aa4f8af3010] = 3;

		*node[0x5aa4f8af30d0] = ;;

		*node[0x5aa4f8af3100] = if;

		*node[0x5aa4f8af3130] = op_no;

		*node[0x5aa4f8af31c0] = >;

		*node[0x5aa4f8af3160] = 14;

		*node[0x5aa4f8af3190] = 0;

		*node[0x5aa4f8af31f0] = ;;

		*node[0x5aa4f8af32b0] = =;

		*node[0x5aa4f8af3220] = 15;

		*node[0x5aa4f8af3280] = sqrt;

		*node[0x5aa4f8af3250] = 14;

		*node[0x5aa4f8af32e0] = ;;

		*node[0x5aa4f8af34f0] = =;

		*node[0x5aa4f8af3310] = 12;

		*node[0x5aa4f8af34c0] = -;

		*node[0x5aa4f8af33a0] = -;

		*node[0x5aa4f8af3340] = 0;

		*node[0x5aa4f8af3370] = 2;

		*node[0x5aa4f8af3490] = *;

		*node[0x5aa4f8af3430] = /;

		*node[0x5aa4f8af33d0] = 15;

		*node[0x5aa4f8af3400] = 2;

		*node[0x5aa4f8af3460] = 1;

		*node[0x5aa4f8af3520] = ;;

		*node[0x5aa4f8af3730] = =;

		*node[0x5aa4f8af3550] = 13;

		*node[0x5aa4f8af3700] = +;

		*node[0x5aa4f8af35e0] = -;

		*node[0x5aa4f8af3580] = 0;

		*node[0x5aa4f8af35b0] = 2;

		*node[0x5aa4f8af36d0] = *;

		*node[0x5aa4f8af3670] = /;

		*node[0x5aa4f8af3610] = 15;

		*node[0x5aa4f8af3640] = 2;

		*node[0x5aa4f8af36a0] = 1;

		*node[0x5aa4f8af3760] = ;;

		*node[0x5aa4f8af3790] = print;

		*node[0x5aa4f8af37c0] = 11;

		*node[0x5aa4f8af37f0] = ;;

		*node[0x5aa4f8af3820] = print;

		*node[0x5aa4f8af3850] = 12;

		*node[0x5aa4f8af3880] = 13;

		*node[0x5aa4f8af38b0] = elseif;

		*node[0x5aa4f8af38e0] = op_no;

		*node[0x5aa4f8af3970] = ==;

		*node[0x5aa4f8af3910] = 14;

		*node[0x5aa4f8af3940] = 0;

		*node[0x5aa4f8af39a0] = ;;

		*node[0x5aa4f8af3b50] = =;

		*node[0x5aa4f8af39d0] = 10;

		*node[0x5aa4f8af3b20] = -;

		*node[0x5aa4f8af3a00] = 0;

		*node[0x5aa4f8af3af0] = *;

		*node[0x5aa4f8af3a90] = /;

		*node[0x5aa4f8af3a30] = 2;

		*node[0x5aa4f8af3a60] = 2;

		*node[0x5aa4f8af3ac0] = 1;

		*node[0x5aa4f8af3b80] = ;;

		*node[0x5aa4f8af3bb0] = print;

		*node[0x5aa4f8af3be0] = 8;

		*node[0x5aa4f8af3c10] = ;;

		*node[0x5aa4f8af3c40] = print;

		*node[0x5aa4f8af3c70] = 10;

		*node[0x5aa4f8af3ca0] = else;

		*node[0x5aa4f8af3cd0] = op_no;

		*node[0x5aa4f8af3d00] = ;;

		*node[0x5aa4f8af3d30] = print;

		*node[0x5aa4f8af3d60] = 7;

		*node[0x5aa4f8af3d90] = ;;

		*node[0x5aa4f8af3dc0] = return;

		*node[0x5aa4f8af3df0] = 0;

		*node[0x5aa4f8af3e20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe5ad06700] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e29d56e5110] = ;;

		*node[0x5e29d56e5190] = 0;

		*node[0x5e29d56e51c0] = ;;

		*node[0x5e29d56e51f0] = input;

		*node[0x5e29d56e5220] = 1;

		*node[0x5e29d56e5250] = 2;

		*node[0x5e29d56e52b0] = 3;

		*node[0x5e29d56e52e0] = ;;

		*node[0x5e29d56e5390] = 1;

		*node[0x5e29d56e53c0] = 2;

		*node[0x5e29d56e53f0] = 3;

		*node[0x5e29d56e5420] = ;;

		*node[0x5e29d56e54a0] = 4;

		*node[0x5e29d56e54d0] = 1;

		*node[0x5e29d56e5500] = 2;

		*node[0x5e29d56e5530] = 3;

		*node[0x5e29d56e5590] = ;;

		*node[0x5e29d56e55c0] = if;

		*node[0x5e29d56e55f0] = op_no;

		*node[0x5e29d56e5680] = ==;

		*node[0x5e29d56e5620] = 1;

		*node[0x5e29d56e5650] = 0;

		*node[0x5e29d56e56b0] = ;;

		*node[0x5e29d56e5710] = 2;

		*node[0x5e29d56e5740] = 3;

		*node[0x5e29d56e5770] = else;

		*node[0x5e29d56e57a0] = op_no;

		*node[0x5e29d56e57d0] = ;;

		*node[0x5e29d56e5880] = 1;

		*node[0x5e29d56e58b0] = 2;

		*node[0x5e29d56e58e0] = 3;

		*node[0x5e29d56e5910] = ;;

		*node[0x5e29d56e5990] = 5;

		*node[0x5e29d56e59c0] = 1;

		*node[0x5e29d56e59f0] = 2;

		*node[0x5e29d56e5a20] = ;;

		*node[0x5e29d56e5b40] = =;

		*node[0x5e29d56e5a50] = 7;

		*node[0x5e29d56e5b10] = -;

		*node[0x5e29d56e5ab0] = 0;

		*node[0x5e29d56e5ae0] = 1;

		*node[0x5e29d56e5b70] = ;;

		*node[0x5e29d56e5c00] = =;

		*node[0x5e29d56e5ba0] = 8;

		*node[0x5e29d56e5bd0] = 1;

		*node[0x5e29d56e5c30] = ;;

		*node[0x5e29d56e5d10] = =;

		*node[0x5e29d56e5c60] = 9;

		*node[0x5e29d56e5ce0] = 1000;

		*node[0x5e29d56e5d40] = ;;

		*node[0x5e29d56e5d70] = if;

		*node[0x5e29d56e5da0] = op_no;

		*node[0x5e29d56e5e30] = ==;

		*node[0x5e29d56e5dd0] = 1;

		*node[0x5e29d56e5e00] = 0;

		*node[0x5e29d56e5e60] = ;;

		*node[0x5e29d56e5e90] = if;

		*node[0x5e29d56e5ec0] = op_no;

		*node[0x5e29d56e5f50] = ==;

		*node[0x5e29d56e5ef0] = 2;

		*node[0x5e29d56e5f20] = 0;

		*node[0x5e29d56e5f80] = ;;

		*node[0x5e29d56e5fb0] = print;

		*node[0x5e29d56e5fe0] = 9;

		*node[0x5e29d56e6010] = else;

		*node[0x5e29d56e6040] = op_no;

		*node[0x5e29d56e6070] = ;;

		*node[0x5e29d56e60a0] = print;

		*node[0x5e29d56e60d0] = 7;

		*node[0x5e29d56e6100] = else;

		*node[0x5e29d56e6130] = op_no;

		*node[0x5e29d56e6160] = ;;

		*node[0x5e29d56e62b0] = =;

		*node[0x5e29d56e6190] = 10;

		*node[0x5e29d56e6280] = -;

		*node[0x5e29d56e61c0] = 0;

		*node[0x5e29d56e6250] = /;

		*node[0x5e29d56e61f0] = 2;

		*node[0x5e29d56e6220] = 1;

		*node[0x5e29d56e62e0] = ;;

		*node[0x5e29d56e6310] = print;

		*node[0x5e29d56e6340] = 8;

		*node[0x5e29d56e6370] = ;;

		*node[0x5e29d56e63a0] = print;

		*node[0x5e29d56e63d0] = 10;

		*node[0x5e29d56e6400] = ;;

		*node[0x5e29d56e6430] = return;

		*node[0x5e29d56e6460] = 0;

		*node[0x5e29d56e6490] = ;;

		*node[0x5e29d56e6510] = 6;

		*node[0x5e29d56e6540] = 1;

		*node[0x5e29d56e6570] = 2;

		*node[0x5e29d56e65a0] = 3;

		*node[0x5e29d56e6600] = ;;

		*node[0x5e29d56e66f0] = =;

		*node[0x5e29d56e6630] = 7;

		*node[0x5e29d56e66c0] = -;

		*node[0x5e29d56e6660] = 0;

		*node[0x5e29d56e6690] = 1;

		*node[0x5e29d56e6720] = ;;

		*node[0x5e29d56e6800] = =;

		*node[0x5e29d56e6750] = 8;

		*node[0x5e29d56e67d0] = 1;

		*node[0x5e29d56e6830] = ;;

		*node[0x5e29d56e68c0] = =;

		*node[0x5e29d56e6860] = 11;

		*node[0x5e29d56e6890] = 2;

		*node[0x5e29d56e68f0] = ;;

		*node[0x5e29d56e6920] = if;

		*node[0x5e29d56e6950] = op_no;

		*node[0x5e29d56e69e0] = ==;

		*node[0x5e29d56e6980] = 3;

		*node[0x5e29d56e69b0] = 0;

		*node[0x5e29d56e6a10] = ;;

		*node[0x5e29d56e6aa0] = =;

		*node[0x5e29d56e6a40] = 12;

		*node[0x5e29d56e6a70] = 0;

		*node[0x5e29d56e6ad0] = ;;

		*node[0x5e29d56e6c20] = =;

		*node[0x5e29d56e6b00] = 13;

		*node[0x5e29d56e6bf0] = -;

		*node[0x5e29d56e6b30] = 0;

		*node[0x5e29d56e6bc0] = /;

		*node[0x5e29d56e6b60] = 2;

		*node[0x5e29d56e6b90] = 1;

		*node[0x5e29d56e6c50] = ;;

		*node[0x5e29d56e6c80] = print;

		*node[0x5e29d56e6cb0] = 11;

		*node[0x5e29d56e6ce0] = ;;

		*node[0x5e29d56e6d10] = print;

		*node[0x5e29d56e6d40] = 12;

		*node[0x5e29d56e6d70] = 13;

		*node[0x5e29d56e6da0] = else;

		*node[0x5e29d56e6dd0] = op_no;

		*node[0x5e29d56e6e00] = ;;

		*node[0x5e29d56e70a0] = =;

		*node[0x5e29d56e6e30] = 14;

		*node[0x5e29d56e7070] = -;

		*node[0x5e29d56e6f50] = *;

		*node[0x5e29d56e6ef0] = 2;

		*node[0x5e29d56e6f20] = 2;

		*node[0x5e29d56e7040] = *;

		*node[0x5e29d56e6fe0] = *;

		*node[0x5e29d56e6f80] = 4;

		*node[0x5e29d56e6fb0] = 1;

		*node[0x5e29d56e7010] = 3;

		*node[0x5e29d56e70d0] = ;;

		*node[0x5e29d56e7100] = if;

		*node[0x5e29d56e7130] = op_no;

		*node[0x5e29d56e71c0] = >;

		*node[0x5e29d56e7160] = 14;

		*node[0x5e29d56e7190] = 0;

		*node[0x5e29d56e71f0] = ;;

		*node[0x5e29d56e72b0] = =;

		*node[0x5e29d56e7220] = 15;

		*node[0x5e29d56e7280] = sqrt;

		*node[0x5e29d56e7250] = 14;

		*node[0x5e29d56e72e0] = ;;

		*node[0x5e29d56e74f0] = =;

		*node[0x5e29d56e7310] = 12;

		*node[0x5e29d56e74c0] = -;

		*node[0x5e29d56e73a0] = -;

		*node[0x5e29d56e7340] = 0;

		*node[0x5e29d56e7370] = 2;

		*node[0x5e29d56e7490] = *;

		*node[0x5e29d56e7430] = /;

		*node[0x5e29d56e73d0] = 15;

		*node[0x5e29d56e7400] = 2;

		*node[0x5e29d56e7460] = 1;

		*node[0x5e29d56e7520] = ;;

		*node[0x5e29d56e7730] = =;

		*node[0x5e29d56e7550] = 13;

		*node[0x5e29d56e7700] = +;

		*node[0x5e29d56e75e0] = -;

		*node[0x5e29d56e7580] = 0;

		*node[0x5e29d56e75b0] = 2;

		*node[0x5e29d56e76d0] = *;

		*node[0x5e29d56e7670] = /;

		*node[0x5e29d56e7610] = 15;

		*node[0x5e29d56e7640] = 2;

		*node[0x5e29d56e76a0] = 1;

		*node[0x5e29d56e7760] = ;;

		*node[0x5e29d56e7790] = print;

		*node[0x5e29d56e77c0] = 11;

		*node[0x5e29d56e77f0] = ;;

		*node[0x5e29d56e7820] = print;

		*node[0x5e29d56e7850] = 12;

		*node[0x5e29d56e7880] = 13;

		*node[0x5e29d56e78b0] = elseif;

		*node[0x5e29d56e78e0] = op_no;

		*node[0x5e29d56e7970] = ==;

		*node[0x5e29d56e7910] = 14;

		*node[0x5e29d56e7940] = 0;

		*node[0x5e29d56e79a0] = ;;

		*node[0x5e29d56e7b50] = =;

		*node[0x5e29d56e79d0] = 10;

		*node[0x5e29d56e7b20] = -;

		*node[0x5e29d56e7a00] = 0;

		*node[0x5e29d56e7af0] = *;

		*node[0x5e29d56e7a90] = /;

		*node[0x5e29d56e7a30] = 2;

		*node[0x5e29d56e7a60] = 2;

		*node[0x5e29d56e7ac0] = 1;

		*node[0x5e29d56e7b80] = ;;

		*node[0x5e29d56e7bb0] = print;

		*node[0x5e29d56e7be0] = 8;

		*node[0x5e29d56e7c10] = ;;

		*node[0x5e29d56e7c40] = print;

		*node[0x5e29d56e7c70] = 10;

		*node[0x5e29d56e7ca0] = else;

		*node[0x5e29d56e7cd0] = op_no;

		*node[0x5e29d56e7d00] = ;;

		*node[0x5e29d56e7d30] = print;

		*node[0x5e29d56e7d60] = 7;

		*node[0x5e29d56e7d90] = ;;

		*node[0x5e29d56e7dc0] = return;

		*node[0x5e29d56e7df0] = 0;

		*node[0x5e29d56e7e20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcc6d8b310] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5d5fe5102110] = ;;

		*node[0x5d5fe5102190] = 0;

		*node[0x5d5fe51021c0] = ;;

		*node[0x5d5fe51021f0] = input;

		*node[0x5d5fe5102220] = 1;

		*node[0x5d5fe5102250] = 2;

		*node[0x5d5fe51022b0] = 3;

		*node[0x5d5fe51022e0] = ;;

		*node[0x5d5fe5102390] = 1;

		*node[0x5d5fe51023c0] = 2;

		*node[0x5d5fe51023f0] = 3;

		*node[0x5d5fe5102420] = ;;

		*node[0x5d5fe51024a0] = 4;

		*node[0x5d5fe51024d0] = 1;

		*node[0x5d5fe5102500] = 2;

		*node[0x5d5fe5102530] = 3;

		*node[0x5d5fe5102590] = ;;

		*node[0x5d5fe51025c0] = if;

		*node[0x5d5fe51025f0] = op_no;

		*node[0x5d5fe5102680] = ==;

		*node[0x5d5fe5102620] = 1;

		*node[0x5d5fe5102650] = 0;

		*node[0x5d5fe51026b0] = ;;

		*node[0x5d5fe5102710] = 2;

		*node[0x5d5fe5102740] = 3;

		*node[0x5d5fe5102770] = else;

		*node[0x5d5fe51027a0] = op_no;

		*node[0x5d5fe51027d0] = ;;

		*node[0x5d5fe5102880] = 1;

		*node[0x5d5fe51028b0] = 2;

		*node[0x5d5fe51028e0] = 3;

		*node[0x5d5fe5102910] = ;;

		*node[0x5d5fe5102990] = 5;

		*node[0x5d5fe51029c0] = 1;

		*node[0x5d5fe51029f0] = 2;

		*node[0x5d5fe5102a20] = ;;

		*node[0x5d5fe5102b40] = =;

		*node[0x5d5fe5102a50] = 7;

		*node[0x5d5fe5102b10] = -;

		*node[0x5d5fe5102ab0] = 0;

		*node[0x5d5fe5102ae0] = 1;

		*node[0x5d5fe5102b70] = ;;

		*node[0x5d5fe5102c00] = =;

		*node[0x5d5fe5102ba0] = 8;

		*node[0x5d5fe5102bd0] = 1;

		*node[0x5d5fe5102c30] = ;;

		*node[0x5d5fe5102d10] = =;

		*node[0x5d5fe5102c60] = 9;

		*node[0x5d5fe5102ce0] = 1000;

		*node[0x5d5fe5102d40] = ;;

		*node[0x5d5fe5102d70] = if;

		*node[0x5d5fe5102da0] = op_no;

		*node[0x5d5fe5102e30] = ==;

		*node[0x5d5fe5102dd0] = 1;

		*node[0x5d5fe5102e00] = 0;

		*node[0x5d5fe5102e60] = ;;

		*node[0x5d5fe5102e90] = if;

		*node[0x5d5fe5102ec0] = op_no;

		*node[0x5d5fe5102f50] = ==;

		*node[0x5d5fe5102ef0] = 2;

		*node[0x5d5fe5102f20] = 0;

		*node[0x5d5fe5102f80] = ;;

		*node[0x5d5fe5102fb0] = print;

		*node[0x5d5fe5102fe0] = 9;

		*node[0x5d5fe5103010] = else;

		*node[0x5d5fe5103040] = op_no;

		*node[0x5d5fe5103070] = ;;

		*node[0x5d5fe51030a0] = print;

		*node[0x5d5fe51030d0] = 7;

		*node[0x5d5fe5103100] = else;

		*node[0x5d5fe5103130] = op_no;

		*node[0x5d5fe5103160] = ;;

		*node[0x5d5fe51032b0] = =;

		*node[0x5d5fe5103190] = 10;

		*node[0x5d5fe5103280] = -;

		*node[0x5d5fe51031c0] = 0;

		*node[0x5d5fe5103250] = /;

		*node[0x5d5fe51031f0] = 2;

		*node[0x5d5fe5103220] = 1;

		*node[0x5d5fe51032e0] = ;;

		*node[0x5d5fe5103310] = print;

		*node[0x5d5fe5103340] = 8;

		*node[0x5d5fe5103370] = ;;

		*node[0x5d5fe51033a0] = print;

		*node[0x5d5fe51033d0] = 10;

		*node[0x5d5fe5103400] = ;;

		*node[0x5d5fe5103430] = return;

		*node[0x5d5fe5103460] = 0;

		*node[0x5d5fe5103490] = ;;

		*node[0x5d5fe5103510] = 6;

		*node[0x5d5fe5103540] = 1;

		*node[0x5d5fe5103570] = 2;

		*node[0x5d5fe51035a0] = 3;

		*node[0x5d5fe5103600] = ;;

		*node[0x5d5fe51036f0] = =;

		*node[0x5d5fe5103630] = 7;

		*node[0x5d5fe51036c0] = -;

		*node[0x5d5fe5103660] = 0;

		*node[0x5d5fe5103690] = 1;

		*node[0x5d5fe5103720] = ;;

		*node[0x5d5fe5103800] = =;

		*node[0x5d5fe5103750] = 8;

		*node[0x5d5fe51037d0] = 1;

		*node[0x5d5fe5103830] = ;;

		*node[0x5d5fe51038c0] = =;

		*node[0x5d5fe5103860] = 11;

		*node[0x5d5fe5103890] = 2;

		*node[0x5d5fe51038f0] = ;;

		*node[0x5d5fe5103920] = if;

		*node[0x5d5fe5103950] = op_no;

		*node[0x5d5fe51039e0] = ==;

		*node[0x5d5fe5103980] = 3;

		*node[0x5d5fe51039b0] = 0;

		*node[0x5d5fe5103a10] = ;;

		*node[0x5d5fe5103aa0] = =;

		*node[0x5d5fe5103a40] = 12;

		*node[0x5d5fe5103a70] = 0;

		*node[0x5d5fe5103ad0] = ;;

		*node[0x5d5fe5103c20] = =;

		*node[0x5d5fe5103b00] = 13;

		*node[0x5d5fe5103bf0] = -;

		*node[0x5d5fe5103b30] = 0;

		*node[0x5d5fe5103bc0] = /;

		*node[0x5d5fe5103b60] = 2;

		*node[0x5d5fe5103b90] = 1;

		*node[0x5d5fe5103c50] = ;;

		*node[0x5d5fe5103c80] = print;

		*node[0x5d5fe5103cb0] = 11;

		*node[0x5d5fe5103ce0] = ;;

		*node[0x5d5fe5103d10] = print;

		*node[0x5d5fe5103d40] = 12;

		*node[0x5d5fe5103d70] = 13;

		*node[0x5d5fe5103da0] = else;

		*node[0x5d5fe5103dd0] = op_no;

		*node[0x5d5fe5103e00] = ;;

		*node[0x5d5fe51040a0] = =;

		*node[0x5d5fe5103e30] = 14;

		*node[0x5d5fe5104070] = -;

		*node[0x5d5fe5103f50] = *;

		*node[0x5d5fe5103ef0] = 2;

		*node[0x5d5fe5103f20] = 2;

		*node[0x5d5fe5104040] = *;

		*node[0x5d5fe5103fe0] = *;

		*node[0x5d5fe5103f80] = 4;

		*node[0x5d5fe5103fb0] = 1;

		*node[0x5d5fe5104010] = 3;

		*node[0x5d5fe51040d0] = ;;

		*node[0x5d5fe5104100] = if;

		*node[0x5d5fe5104130] = op_no;

		*node[0x5d5fe51041c0] = >;

		*node[0x5d5fe5104160] = 14;

		*node[0x5d5fe5104190] = 0;

		*node[0x5d5fe51041f0] = ;;

		*node[0x5d5fe51042b0] = =;

		*node[0x5d5fe5104220] = 15;

		*node[0x5d5fe5104280] = sqrt;

		*node[0x5d5fe5104250] = 14;

		*node[0x5d5fe51042e0] = ;;

		*node[0x5d5fe51044f0] = =;

		*node[0x5d5fe5104310] = 12;

		*node[0x5d5fe51044c0] = -;

		*node[0x5d5fe51043a0] = -;

		*node[0x5d5fe5104340] = 0;

		*node[0x5d5fe5104370] = 2;

		*node[0x5d5fe5104490] = *;

		*node[0x5d5fe5104430] = /;

		*node[0x5d5fe51043d0] = 15;

		*node[0x5d5fe5104400] = 2;

		*node[0x5d5fe5104460] = 1;

		*node[0x5d5fe5104520] = ;;

		*node[0x5d5fe5104730] = =;

		*node[0x5d5fe5104550] = 13;

		*node[0x5d5fe5104700] = +;

		*node[0x5d5fe51045e0] = -;

		*node[0x5d5fe5104580] = 0;

		*node[0x5d5fe51045b0] = 2;

		*node[0x5d5fe51046d0] = *;

		*node[0x5d5fe5104670] = /;

		*node[0x5d5fe5104610] = 15;

		*node[0x5d5fe5104640] = 2;

		*node[0x5d5fe51046a0] = 1;

		*node[0x5d5fe5104760] = ;;

		*node[0x5d5fe5104790] = print;

		*node[0x5d5fe51047c0] = 11;

		*node[0x5d5fe51047f0] = ;;

		*node[0x5d5fe5104820] = print;

		*node[0x5d5fe5104850] = 12;

		*node[0x5d5fe5104880] = 13;

		*node[0x5d5fe51048b0] = elseif;

		*node[0x5d5fe51048e0] = op_no;

		*node[0x5d5fe5104970] = ==;

		*node[0x5d5fe5104910] = 14;

		*node[0x5d5fe5104940] = 0;

		*node[0x5d5fe51049a0] = ;;

		*node[0x5d5fe5104b50] = =;

		*node[0x5d5fe51049d0] = 10;

		*node[0x5d5fe5104b20] = -;

		*node[0x5d5fe5104a00] = 0;

		*node[0x5d5fe5104af0] = *;

		*node[0x5d5fe5104a90] = /;

		*node[0x5d5fe5104a30] = 2;

		*node[0x5d5fe5104a60] = 2;

		*node[0x5d5fe5104ac0] = 1;

		*node[0x5d5fe5104b80] = ;;

		*node[0x5d5fe5104bb0] = print;

		*node[0x5d5fe5104be0] = 8;

		*node[0x5d5fe5104c10] = ;;

		*node[0x5d5fe5104c40] = print;

		*node[0x5d5fe5104c70] = 10;

		*node[0x5d5fe5104ca0] = else;

		*node[0x5d5fe5104cd0] = op_no;

		*node[0x5d5fe5104d00] = ;;

		*node[0x5d5fe5104d30] = print;

		*node[0x5d5fe5104d60] = 7;

		*node[0x5d5fe5104d90] = ;;

		*node[0x5d5fe5104dc0] = return;

		*node[0x5d5fe5104df0] = 0;

		*node[0x5d5fe5104e20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc24d91600] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58d4cd5aa110] = ;;

		*node[0x58d4cd5aa190] = 0;

		*node[0x58d4cd5aa1c0] = ;;

		*node[0x58d4cd5aa1f0] = input;

		*node[0x58d4cd5aa220] = 1;

		*node[0x58d4cd5aa250] = 2;

		*node[0x58d4cd5aa280] = 3;

		*node[0x58d4cd5aa2e0] = ;;

		*node[0x58d4cd5aa340] = 1;

		*node[0x58d4cd5aa370] = 2;

		*node[0x58d4cd5aa3a0] = 3;

		*node[0x58d4cd5aa3d0] = ;;

		*node[0x58d4cd5aa450] = 4;

		*node[0x58d4cd5aa480] = 1;

		*node[0x58d4cd5aa4b0] = 2;

		*node[0x58d4cd5aa4e0] = 3;

		*node[0x58d4cd5aa540] = ;;

		*node[0x58d4cd5aa570] = if;

		*node[0x58d4cd5aa5a0] = op_no;

		*node[0x58d4cd5aa630] = ==;

		*node[0x58d4cd5aa5d0] = 1;

		*node[0x58d4cd5aa600] = 0;

		*node[0x58d4cd5aa660] = ;;

		*node[0x58d4cd5aa6c0] = 2;

		*node[0x58d4cd5aa6f0] = 3;

		*node[0x58d4cd5aa720] = else;

		*node[0x58d4cd5aa750] = op_no;

		*node[0x58d4cd5aa780] = ;;

		*node[0x58d4cd5aa830] = 1;

		*node[0x58d4cd5aa860] = 2;

		*node[0x58d4cd5aa890] = 3;

		*node[0x58d4cd5aa8c0] = ;;

		*node[0x58d4cd5aa940] = 5;

		*node[0x58d4cd5aa9a0] = 1;

		*node[0x58d4cd5aa9d0] = 2;

		*node[0x58d4cd5aaa00] = ;;

		*node[0x58d4cd5aab20] = =;

		*node[0x58d4cd5aaa30] = 7;

		*node[0x58d4cd5aaaf0] = -;

		*node[0x58d4cd5aaa90] = 0;

		*node[0x58d4cd5aaac0] = 1;

		*node[0x58d4cd5aab50] = ;;

		*node[0x58d4cd5aabe0] = =;

		*node[0x58d4cd5aab80] = 8;

		*node[0x58d4cd5aabb0] = 1;

		*node[0x58d4cd5aac10] = ;;

		*node[0x58d4cd5aacf0] = =;

		*node[0x58d4cd5aac40] = 9;

		*node[0x58d4cd5aacc0] = 1000;

		*node[0x58d4cd5aad20] = ;;

		*node[0x58d4cd5aad50] = if;

		*node[0x58d4cd5aad80] = op_no;

		*node[0x58d4cd5aae10] = ==;

		*node[0x58d4cd5aadb0] = 1;

		*node[0x58d4cd5aade0] = 0;

		*node[0x58d4cd5aae40] = ;;

		*node[0x58d4cd5aae70] = if;

		*node[0x58d4cd5aaea0] = op_no;

		*node[0x58d4cd5aaf30] = ==;

		*node[0x58d4cd5aaed0] = 2;

		*node[0x58d4cd5aaf00] = 0;

		*node[0x58d4cd5aaf60] = ;;

		*node[0x58d4cd5aaf90] = print;

		*node[0x58d4cd5aafc0] = 9;

		*node[0x58d4cd5aaff0] = else;

		*node[0x58d4cd5ab020] = op_no;

		*node[0x58d4cd5ab050] = ;;

		*node[0x58d4cd5ab080] = print;

		*node[0x58d4cd5ab0b0] = 7;

		*node[0x58d4cd5ab0e0] = else;

		*node[0x58d4cd5ab110] = op_no;

		*node[0x58d4cd5ab140] = ;;

		*node[0x58d4cd5ab290] = =;

		*node[0x58d4cd5ab170] = 10;

		*node[0x58d4cd5ab260] = -;

		*node[0x58d4cd5ab1a0] = 0;

		*node[0x58d4cd5ab230] = /;

		*node[0x58d4cd5ab1d0] = 2;

		*node[0x58d4cd5ab200] = 1;

		*node[0x58d4cd5ab2c0] = ;;

		*node[0x58d4cd5ab2f0] = print;

		*node[0x58d4cd5ab320] = 8;

		*node[0x58d4cd5ab350] = ;;

		*node[0x58d4cd5ab380] = print;

		*node[0x58d4cd5ab3b0] = 10;

		*node[0x58d4cd5ab3e0] = ;;

		*node[0x58d4cd5ab410] = return;

		*node[0x58d4cd5ab440] = 0;

		*node[0x58d4cd5ab470] = ;;

		*node[0x58d4cd5ab4f0] = 6;

		*node[0x58d4cd5ab520] = 1;

		*node[0x58d4cd5ab550] = 2;

		*node[0x58d4cd5ab580] = 3;

		*node[0x58d4cd5ab5e0] = ;;

		*node[0x58d4cd5ab6d0] = =;

		*node[0x58d4cd5ab610] = 7;

		*node[0x58d4cd5ab6a0] = -;

		*node[0x58d4cd5ab640] = 0;

		*node[0x58d4cd5ab670] = 1;

		*node[0x58d4cd5ab700] = ;;

		*node[0x58d4cd5ab7e0] = =;

		*node[0x58d4cd5ab730] = 8;

		*node[0x58d4cd5ab7b0] = 1;

		*node[0x58d4cd5ab810] = ;;

		*node[0x58d4cd5ab8a0] = =;

		*node[0x58d4cd5ab840] = 11;

		*node[0x58d4cd5ab870] = 2;

		*node[0x58d4cd5ab8d0] = ;;

		*node[0x58d4cd5ab900] = if;

		*node[0x58d4cd5ab930] = op_no;

		*node[0x58d4cd5ab9c0] = ==;

		*node[0x58d4cd5ab960] = 3;

		*node[0x58d4cd5ab990] = 0;

		*node[0x58d4cd5ab9f0] = ;;

		*node[0x58d4cd5aba80] = =;

		*node[0x58d4cd5aba20] = 12;

		*node[0x58d4cd5aba50] = 0;

		*node[0x58d4cd5abab0] = ;;

		*node[0x58d4cd5abc00] = =;

		*node[0x58d4cd5abae0] = 13;

		*node[0x58d4cd5abbd0] = -;

		*node[0x58d4cd5abb10] = 0;

		*node[0x58d4cd5abba0] = /;

		*node[0x58d4cd5abb40] = 2;

		*node[0x58d4cd5abb70] = 1;

		*node[0x58d4cd5abc30] = ;;

		*node[0x58d4cd5abc60] = print;

		*node[0x58d4cd5abc90] = 11;

		*node[0x58d4cd5abcc0] = ;;

		*node[0x58d4cd5abcf0] = print;

		*node[0x58d4cd5abd20] = 12;

		*node[0x58d4cd5abd50] = 13;

		*node[0x58d4cd5abd80] = else;

		*node[0x58d4cd5abdb0] = op_no;

		*node[0x58d4cd5abde0] = ;;

		*node[0x58d4cd5ac080] = =;

		*node[0x58d4cd5abe10] = 14;

		*node[0x58d4cd5ac050] = -;

		*node[0x58d4cd5abf30] = *;

		*node[0x58d4cd5abed0] = 2;

		*node[0x58d4cd5abf00] = 2;

		*node[0x58d4cd5ac020] = *;

		*node[0x58d4cd5abfc0] = *;

		*node[0x58d4cd5abf60] = 4;

		*node[0x58d4cd5abf90] = 1;

		*node[0x58d4cd5abff0] = 3;

		*node[0x58d4cd5ac0b0] = ;;

		*node[0x58d4cd5ac0e0] = if;

		*node[0x58d4cd5ac110] = op_no;

		*node[0x58d4cd5ac1a0] = >;

		*node[0x58d4cd5ac140] = 14;

		*node[0x58d4cd5ac170] = 0;

		*node[0x58d4cd5ac1d0] = ;;

		*node[0x58d4cd5ac290] = =;

		*node[0x58d4cd5ac200] = 15;

		*node[0x58d4cd5ac260] = sqrt;

		*node[0x58d4cd5ac230] = 14;

		*node[0x58d4cd5ac2c0] = ;;

		*node[0x58d4cd5ac4d0] = =;

		*node[0x58d4cd5ac2f0] = 12;

		*node[0x58d4cd5ac4a0] = -;

		*node[0x58d4cd5ac380] = -;

		*node[0x58d4cd5ac320] = 0;

		*node[0x58d4cd5ac350] = 2;

		*node[0x58d4cd5ac470] = *;

		*node[0x58d4cd5ac410] = /;

		*node[0x58d4cd5ac3b0] = 15;

		*node[0x58d4cd5ac3e0] = 2;

		*node[0x58d4cd5ac440] = 1;

		*node[0x58d4cd5ac500] = ;;

		*node[0x58d4cd5ac710] = =;

		*node[0x58d4cd5ac530] = 13;

		*node[0x58d4cd5ac6e0] = +;

		*node[0x58d4cd5ac5c0] = -;

		*node[0x58d4cd5ac560] = 0;

		*node[0x58d4cd5ac590] = 2;

		*node[0x58d4cd5ac6b0] = *;

		*node[0x58d4cd5ac650] = /;

		*node[0x58d4cd5ac5f0] = 15;

		*node[0x58d4cd5ac620] = 2;

		*node[0x58d4cd5ac680] = 1;

		*node[0x58d4cd5ac740] = ;;

		*node[0x58d4cd5ac770] = print;

		*node[0x58d4cd5ac7a0] = 11;

		*node[0x58d4cd5ac7d0] = ;;

		*node[0x58d4cd5ac800] = print;

		*node[0x58d4cd5ac830] = 12;

		*node[0x58d4cd5ac860] = 13;

		*node[0x58d4cd5ac890] = elseif;

		*node[0x58d4cd5ac8c0] = op_no;

		*node[0x58d4cd5ac950] = ==;

		*node[0x58d4cd5ac8f0] = 14;

		*node[0x58d4cd5ac920] = 0;

		*node[0x58d4cd5ac980] = ;;

		*node[0x58d4cd5acb30] = =;

		*node[0x58d4cd5ac9b0] = 10;

		*node[0x58d4cd5acb00] = -;

		*node[0x58d4cd5ac9e0] = 0;

		*node[0x58d4cd5acad0] = *;

		*node[0x58d4cd5aca70] = /;

		*node[0x58d4cd5aca10] = 2;

		*node[0x58d4cd5aca40] = 2;

		*node[0x58d4cd5acaa0] = 1;

		*node[0x58d4cd5acb60] = ;;

		*node[0x58d4cd5acb90] = print;

		*node[0x58d4cd5acbc0] = 8;

		*node[0x58d4cd5acbf0] = ;;

		*node[0x58d4cd5acc20] = print;

		*node[0x58d4cd5acc50] = 10;

		*node[0x58d4cd5acc80] = else;

		*node[0x58d4cd5accb0] = op_no;

		*node[0x58d4cd5acce0] = ;;

		*node[0x58d4cd5acd10] = print;

		*node[0x58d4cd5acd40] = 7;

		*node[0x58d4cd5acd70] = ;;

		*node[0x58d4cd5acda0] = return;

		*node[0x58d4cd5acdd0] = 0;

		*node[0x58d4cd5ace00] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff60a3bcd0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x64cdbaaf8110] = ;;

		*node[0x64cdbaaf8190] = 0;

		*node[0x64cdbaaf81c0] = ;;

		*node[0x64cdbaaf81f0] = input;

		*node[0x64cdbaaf8220] = 1;

		*node[0x64cdbaaf8250] = 2;

		*node[0x64cdbaaf8280] = 3;

		*node[0x64cdbaaf82e0] = ;;

		*node[0x64cdbaaf8340] = 1;

		*node[0x64cdbaaf8370] = 2;

		*node[0x64cdbaaf83a0] = 3;

		*node[0x64cdbaaf83d0] = ;;

		*node[0x64cdbaaf8450] = 4;

		*node[0x64cdbaaf8480] = 1;

		*node[0x64cdbaaf84b0] = 2;

		*node[0x64cdbaaf84e0] = 3;

		*node[0x64cdbaaf8540] = ;;

		*node[0x64cdbaaf8570] = if;

		*node[0x64cdbaaf85a0] = op_no;

		*node[0x64cdbaaf8630] = ==;

		*node[0x64cdbaaf85d0] = 1;

		*node[0x64cdbaaf8600] = 0;

		*node[0x64cdbaaf8660] = ;;

		*node[0x64cdbaaf86c0] = 2;

		*node[0x64cdbaaf86f0] = 3;

		*node[0x64cdbaaf8720] = else;

		*node[0x64cdbaaf8750] = op_no;

		*node[0x64cdbaaf8780] = ;;

		*node[0x64cdbaaf8830] = 1;

		*node[0x64cdbaaf8860] = 2;

		*node[0x64cdbaaf8890] = 3;

		*node[0x64cdbaaf88c0] = ;;

		*node[0x64cdbaaf8940] = 5;

		*node[0x64cdbaaf89a0] = 1;

		*node[0x64cdbaaf89d0] = 2;

		*node[0x64cdbaaf8a00] = ;;

		*node[0x64cdbaaf8b20] = =;

		*node[0x64cdbaaf8a30] = 7;

		*node[0x64cdbaaf8af0] = -;

		*node[0x64cdbaaf8a90] = 0;

		*node[0x64cdbaaf8ac0] = 1;

		*node[0x64cdbaaf8b50] = ;;

		*node[0x64cdbaaf8be0] = =;

		*node[0x64cdbaaf8b80] = 8;

		*node[0x64cdbaaf8bb0] = 1;

		*node[0x64cdbaaf8c10] = ;;

		*node[0x64cdbaaf8cf0] = =;

		*node[0x64cdbaaf8c40] = 9;

		*node[0x64cdbaaf8cc0] = 1000;

		*node[0x64cdbaaf8d20] = ;;

		*node[0x64cdbaaf8d50] = if;

		*node[0x64cdbaaf8d80] = op_no;

		*node[0x64cdbaaf8e10] = ==;

		*node[0x64cdbaaf8db0] = 1;

		*node[0x64cdbaaf8de0] = 0;

		*node[0x64cdbaaf8e40] = ;;

		*node[0x64cdbaaf8e70] = if;

		*node[0x64cdbaaf8ea0] = op_no;

		*node[0x64cdbaaf8f30] = ==;

		*node[0x64cdbaaf8ed0] = 2;

		*node[0x64cdbaaf8f00] = 0;

		*node[0x64cdbaaf8f60] = ;;

		*node[0x64cdbaaf8f90] = print;

		*node[0x64cdbaaf8fc0] = 9;

		*node[0x64cdbaaf8ff0] = else;

		*node[0x64cdbaaf9020] = op_no;

		*node[0x64cdbaaf9050] = ;;

		*node[0x64cdbaaf9080] = print;

		*node[0x64cdbaaf90b0] = 7;

		*node[0x64cdbaaf90e0] = else;

		*node[0x64cdbaaf9110] = op_no;

		*node[0x64cdbaaf9140] = ;;

		*node[0x64cdbaaf9290] = =;

		*node[0x64cdbaaf9170] = 10;

		*node[0x64cdbaaf9260] = -;

		*node[0x64cdbaaf91a0] = 0;

		*node[0x64cdbaaf9230] = /;

		*node[0x64cdbaaf91d0] = 2;

		*node[0x64cdbaaf9200] = 1;

		*node[0x64cdbaaf92c0] = ;;

		*node[0x64cdbaaf92f0] = print;

		*node[0x64cdbaaf9320] = 8;

		*node[0x64cdbaaf9350] = ;;

		*node[0x64cdbaaf9380] = print;

		*node[0x64cdbaaf93b0] = 10;

		*node[0x64cdbaaf93e0] = ;;

		*node[0x64cdbaaf9410] = return;

		*node[0x64cdbaaf9440] = 0;

		*node[0x64cdbaaf9470] = ;;

		*node[0x64cdbaaf94f0] = 6;

		*node[0x64cdbaaf9520] = 1;

		*node[0x64cdbaaf9550] = 2;

		*node[0x64cdbaaf9580] = 3;

		*node[0x64cdbaaf95e0] = ;;

		*node[0x64cdbaaf96d0] = =;

		*node[0x64cdbaaf9610] = 7;

		*node[0x64cdbaaf96a0] = -;

		*node[0x64cdbaaf9640] = 0;

		*node[0x64cdbaaf9670] = 1;

		*node[0x64cdbaaf9700] = ;;

		*node[0x64cdbaaf97e0] = =;

		*node[0x64cdbaaf9730] = 8;

		*node[0x64cdbaaf97b0] = 1;

		*node[0x64cdbaaf9810] = ;;

		*node[0x64cdbaaf98a0] = =;

		*node[0x64cdbaaf9840] = 11;

		*node[0x64cdbaaf9870] = 2;

		*node[0x64cdbaaf98d0] = ;;

		*node[0x64cdbaaf9900] = if;

		*node[0x64cdbaaf9930] = op_no;

		*node[0x64cdbaaf99c0] = ==;

		*node[0x64cdbaaf9960] = 3;

		*node[0x64cdbaaf9990] = 0;

		*node[0x64cdbaaf99f0] = ;;

		*node[0x64cdbaaf9a80] = =;

		*node[0x64cdbaaf9a20] = 12;

		*node[0x64cdbaaf9a50] = 0;

		*node[0x64cdbaaf9ab0] = ;;

		*node[0x64cdbaaf9c00] = =;

		*node[0x64cdbaaf9ae0] = 13;

		*node[0x64cdbaaf9bd0] = -;

		*node[0x64cdbaaf9b10] = 0;

		*node[0x64cdbaaf9ba0] = /;

		*node[0x64cdbaaf9b40] = 2;

		*node[0x64cdbaaf9b70] = 1;

		*node[0x64cdbaaf9c30] = ;;

		*node[0x64cdbaaf9c60] = print;

		*node[0x64cdbaaf9c90] = 11;

		*node[0x64cdbaaf9cc0] = ;;

		*node[0x64cdbaaf9cf0] = print;

		*node[0x64cdbaaf9d20] = 12;

		*node[0x64cdbaaf9d50] = 13;

		*node[0x64cdbaaf9d80] = else;

		*node[0x64cdbaaf9db0] = op_no;

		*node[0x64cdbaaf9de0] = ;;

		*node[0x64cdbaafa080] = =;

		*node[0x64cdbaaf9e10] = 14;

		*node[0x64cdbaafa050] = -;

		*node[0x64cdbaaf9f30] = *;

		*node[0x64cdbaaf9ed0] = 2;

		*node[0x64cdbaaf9f00] = 2;

		*node[0x64cdbaafa020] = *;

		*node[0x64cdbaaf9fc0] = *;

		*node[0x64cdbaaf9f60] = 4;

		*node[0x64cdbaaf9f90] = 1;

		*node[0x64cdbaaf9ff0] = 3;

		*node[0x64cdbaafa0b0] = ;;

		*node[0x64cdbaafa0e0] = if;

		*node[0x64cdbaafa110] = op_no;

		*node[0x64cdbaafa1a0] = >;

		*node[0x64cdbaafa140] = 14;

		*node[0x64cdbaafa170] = 0;

		*node[0x64cdbaafa1d0] = ;;

		*node[0x64cdbaafa290] = =;

		*node[0x64cdbaafa200] = 15;

		*node[0x64cdbaafa260] = sqrt;

		*node[0x64cdbaafa230] = 14;

		*node[0x64cdbaafa2c0] = ;;

		*node[0x64cdbaafa4d0] = =;

		*node[0x64cdbaafa2f0] = 12;

		*node[0x64cdbaafa4a0] = -;

		*node[0x64cdbaafa380] = -;

		*node[0x64cdbaafa320] = 0;

		*node[0x64cdbaafa350] = 2;

		*node[0x64cdbaafa470] = *;

		*node[0x64cdbaafa410] = /;

		*node[0x64cdbaafa3b0] = 15;

		*node[0x64cdbaafa3e0] = 2;

		*node[0x64cdbaafa440] = 1;

		*node[0x64cdbaafa500] = ;;

		*node[0x64cdbaafa710] = =;

		*node[0x64cdbaafa530] = 13;

		*node[0x64cdbaafa6e0] = +;

		*node[0x64cdbaafa5c0] = -;

		*node[0x64cdbaafa560] = 0;

		*node[0x64cdbaafa590] = 2;

		*node[0x64cdbaafa6b0] = *;

		*node[0x64cdbaafa650] = /;

		*node[0x64cdbaafa5f0] = 15;

		*node[0x64cdbaafa620] = 2;

		*node[0x64cdbaafa680] = 1;

		*node[0x64cdbaafa740] = ;;

		*node[0x64cdbaafa770] = print;

		*node[0x64cdbaafa7a0] = 11;

		*node[0x64cdbaafa7d0] = ;;

		*node[0x64cdbaafa800] = print;

		*node[0x64cdbaafa830] = 12;

		*node[0x64cdbaafa860] = 13;

		*node[0x64cdbaafa890] = elseif;

		*node[0x64cdbaafa8c0] = op_no;

		*node[0x64cdbaafa950] = ==;

		*node[0x64cdbaafa8f0] = 14;

		*node[0x64cdbaafa920] = 0;

		*node[0x64cdbaafa980] = ;;

		*node[0x64cdbaafab30] = =;

		*node[0x64cdbaafa9b0] = 10;

		*node[0x64cdbaafab00] = -;

		*node[0x64cdbaafa9e0] = 0;

		*node[0x64cdbaafaad0] = *;

		*node[0x64cdbaafaa70] = /;

		*node[0x64cdbaafaa10] = 2;

		*node[0x64cdbaafaa40] = 2;

		*node[0x64cdbaafaaa0] = 1;

		*node[0x64cdbaafab60] = ;;

		*node[0x64cdbaafab90] = print;

		*node[0x64cdbaafabc0] = 8;

		*node[0x64cdbaafabf0] = ;;

		*node[0x64cdbaafac20] = print;

		*node[0x64cdbaafac50] = 10;

		*node[0x64cdbaafac80] = else;

		*node[0x64cdbaafacb0] = op_no;

		*node[0x64cdbaaface0] = ;;

		*node[0x64cdbaafad10] = print;

		*node[0x64cdbaafad40] = 7;

		*node[0x64cdbaafad70] = ;;

		*node[0x64cdbaafada0] = return;

		*node[0x64cdbaafadd0] = 0;

		*node[0x64cdbaafae00] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe58e672a0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5925d16d7110] = ;;

		*node[0x5925d16d7190] = 0;

		*node[0x5925d16d71c0] = ;;

		*node[0x5925d16d71f0] = input;

		*node[0x5925d16d7220] = 1;

		*node[0x5925d16d7250] = 2;

		*node[0x5925d16d7280] = 3;

		*node[0x5925d16d72e0] = ;;

		*node[0x5925d16d7340] = 1;

		*node[0x5925d16d7370] = 2;

		*node[0x5925d16d73a0] = 3;

		*node[0x5925d16d73d0] = ;;

		*node[0x5925d16d7450] = 4;

		*node[0x5925d16d7480] = 1;

		*node[0x5925d16d74b0] = 2;

		*node[0x5925d16d74e0] = 3;

		*node[0x5925d16d7540] = ;;

		*node[0x5925d16d7570] = if;

		*node[0x5925d16d75a0] = op_no;

		*node[0x5925d16d7630] = ==;

		*node[0x5925d16d75d0] = 1;

		*node[0x5925d16d7600] = 0;

		*node[0x5925d16d7660] = ;;

		*node[0x5925d16d76c0] = 2;

		*node[0x5925d16d76f0] = 3;

		*node[0x5925d16d7720] = else;

		*node[0x5925d16d7750] = op_no;

		*node[0x5925d16d7780] = ;;

		*node[0x5925d16d7830] = 1;

		*node[0x5925d16d7860] = 2;

		*node[0x5925d16d7890] = 3;

		*node[0x5925d16d78c0] = ;;

		*node[0x5925d16d7940] = 5;

		*node[0x5925d16d79a0] = 1;

		*node[0x5925d16d79d0] = 2;

		*node[0x5925d16d7a00] = ;;

		*node[0x5925d16d7b20] = =;

		*node[0x5925d16d7a30] = 7;

		*node[0x5925d16d7af0] = -;

		*node[0x5925d16d7a90] = 0;

		*node[0x5925d16d7ac0] = 1;

		*node[0x5925d16d7b50] = ;;

		*node[0x5925d16d7be0] = =;

		*node[0x5925d16d7b80] = 8;

		*node[0x5925d16d7bb0] = 1;

		*node[0x5925d16d7c10] = ;;

		*node[0x5925d16d7cf0] = =;

		*node[0x5925d16d7c40] = 9;

		*node[0x5925d16d7cc0] = 1000;

		*node[0x5925d16d7d20] = ;;

		*node[0x5925d16d7d50] = if;

		*node[0x5925d16d7d80] = op_no;

		*node[0x5925d16d7e10] = ==;

		*node[0x5925d16d7db0] = 1;

		*node[0x5925d16d7de0] = 0;

		*node[0x5925d16d7e40] = ;;

		*node[0x5925d16d7e70] = if;

		*node[0x5925d16d7ea0] = op_no;

		*node[0x5925d16d7f30] = ==;

		*node[0x5925d16d7ed0] = 2;

		*node[0x5925d16d7f00] = 0;

		*node[0x5925d16d7f60] = ;;

		*node[0x5925d16d7f90] = print;

		*node[0x5925d16d7fc0] = 9;

		*node[0x5925d16d7ff0] = else;

		*node[0x5925d16d8020] = op_no;

		*node[0x5925d16d8050] = ;;

		*node[0x5925d16d8080] = print;

		*node[0x5925d16d80b0] = 7;

		*node[0x5925d16d80e0] = else;

		*node[0x5925d16d8110] = op_no;

		*node[0x5925d16d8140] = ;;

		*node[0x5925d16d8290] = =;

		*node[0x5925d16d8170] = 10;

		*node[0x5925d16d8260] = -;

		*node[0x5925d16d81a0] = 0;

		*node[0x5925d16d8230] = /;

		*node[0x5925d16d81d0] = 2;

		*node[0x5925d16d8200] = 1;

		*node[0x5925d16d82c0] = ;;

		*node[0x5925d16d82f0] = print;

		*node[0x5925d16d8320] = 8;

		*node[0x5925d16d8350] = ;;

		*node[0x5925d16d8380] = print;

		*node[0x5925d16d83b0] = 10;

		*node[0x5925d16d83e0] = ;;

		*node[0x5925d16d8410] = return;

		*node[0x5925d16d8440] = 0;

		*node[0x5925d16d8470] = ;;

		*node[0x5925d16d84f0] = 6;

		*node[0x5925d16d8520] = 1;

		*node[0x5925d16d8550] = 2;

		*node[0x5925d16d8580] = 3;

		*node[0x5925d16d85e0] = ;;

		*node[0x5925d16d86d0] = =;

		*node[0x5925d16d8610] = 7;

		*node[0x5925d16d86a0] = -;

		*node[0x5925d16d8640] = 0;

		*node[0x5925d16d8670] = 1;

		*node[0x5925d16d8700] = ;;

		*node[0x5925d16d87e0] = =;

		*node[0x5925d16d8730] = 8;

		*node[0x5925d16d87b0] = 1;

		*node[0x5925d16d8810] = ;;

		*node[0x5925d16d88a0] = =;

		*node[0x5925d16d8840] = 11;

		*node[0x5925d16d8870] = 2;

		*node[0x5925d16d88d0] = ;;

		*node[0x5925d16d8900] = if;

		*node[0x5925d16d8930] = op_no;

		*node[0x5925d16d89c0] = ==;

		*node[0x5925d16d8960] = 3;

		*node[0x5925d16d8990] = 0;

		*node[0x5925d16d89f0] = ;;

		*node[0x5925d16d8a80] = =;

		*node[0x5925d16d8a20] = 12;

		*node[0x5925d16d8a50] = 0;

		*node[0x5925d16d8ab0] = ;;

		*node[0x5925d16d8c00] = =;

		*node[0x5925d16d8ae0] = 13;

		*node[0x5925d16d8bd0] = -;

		*node[0x5925d16d8b10] = 0;

		*node[0x5925d16d8ba0] = /;

		*node[0x5925d16d8b40] = 2;

		*node[0x5925d16d8b70] = 1;

		*node[0x5925d16d8c30] = ;;

		*node[0x5925d16d8c60] = print;

		*node[0x5925d16d8c90] = 11;

		*node[0x5925d16d8cc0] = ;;

		*node[0x5925d16d8cf0] = print;

		*node[0x5925d16d8d20] = 12;

		*node[0x5925d16d8d50] = 13;

		*node[0x5925d16d8d80] = else;

		*node[0x5925d16d8db0] = op_no;

		*node[0x5925d16d8de0] = ;;

		*node[0x5925d16d9080] = =;

		*node[0x5925d16d8e10] = 14;

		*node[0x5925d16d9050] = -;

		*node[0x5925d16d8f30] = *;

		*node[0x5925d16d8ed0] = 2;

		*node[0x5925d16d8f00] = 2;

		*node[0x5925d16d9020] = *;

		*node[0x5925d16d8fc0] = *;

		*node[0x5925d16d8f60] = 4;

		*node[0x5925d16d8f90] = 1;

		*node[0x5925d16d8ff0] = 3;

		*node[0x5925d16d90b0] = ;;

		*node[0x5925d16d90e0] = if;

		*node[0x5925d16d9110] = op_no;

		*node[0x5925d16d91a0] = >;

		*node[0x5925d16d9140] = 14;

		*node[0x5925d16d9170] = 0;

		*node[0x5925d16d91d0] = ;;

		*node[0x5925d16d9290] = =;

		*node[0x5925d16d9200] = 15;

		*node[0x5925d16d9260] = sqrt;

		*node[0x5925d16d9230] = 14;

		*node[0x5925d16d92c0] = ;;

		*node[0x5925d16d94d0] = =;

		*node[0x5925d16d92f0] = 12;

		*node[0x5925d16d94a0] = -;

		*node[0x5925d16d9380] = -;

		*node[0x5925d16d9320] = 0;

		*node[0x5925d16d9350] = 2;

		*node[0x5925d16d9470] = *;

		*node[0x5925d16d9410] = /;

		*node[0x5925d16d93b0] = 15;

		*node[0x5925d16d93e0] = 2;

		*node[0x5925d16d9440] = 1;

		*node[0x5925d16d9500] = ;;

		*node[0x5925d16d9710] = =;

		*node[0x5925d16d9530] = 13;

		*node[0x5925d16d96e0] = +;

		*node[0x5925d16d95c0] = -;

		*node[0x5925d16d9560] = 0;

		*node[0x5925d16d9590] = 2;

		*node[0x5925d16d96b0] = *;

		*node[0x5925d16d9650] = /;

		*node[0x5925d16d95f0] = 15;

		*node[0x5925d16d9620] = 2;

		*node[0x5925d16d9680] = 1;

		*node[0x5925d16d9740] = ;;

		*node[0x5925d16d9770] = print;

		*node[0x5925d16d97a0] = 11;

		*node[0x5925d16d97d0] = ;;

		*node[0x5925d16d9800] = print;

		*node[0x5925d16d9830] = 12;

		*node[0x5925d16d9860] = 13;

		*node[0x5925d16d9890] = elseif;

		*node[0x5925d16d98c0] = op_no;

		*node[0x5925d16d9950] = ==;

		*node[0x5925d16d98f0] = 14;

		*node[0x5925d16d9920] = 0;

		*node[0x5925d16d9980] = ;;

		*node[0x5925d16d9b30] = =;

		*node[0x5925d16d99b0] = 10;

		*node[0x5925d16d9b00] = -;

		*node[0x5925d16d99e0] = 0;

		*node[0x5925d16d9ad0] = *;

		*node[0x5925d16d9a70] = /;

		*node[0x5925d16d9a10] = 2;

		*node[0x5925d16d9a40] = 2;

		*node[0x5925d16d9aa0] = 1;

		*node[0x5925d16d9b60] = ;;

		*node[0x5925d16d9b90] = print;

		*node[0x5925d16d9bc0] = 8;

		*node[0x5925d16d9bf0] = ;;

		*node[0x5925d16d9c20] = print;

		*node[0x5925d16d9c50] = 10;

		*node[0x5925d16d9c80] = else;

		*node[0x5925d16d9cb0] = op_no;

		*node[0x5925d16d9ce0] = ;;

		*node[0x5925d16d9d10] = print;

		*node[0x5925d16d9d40] = 7;

		*node[0x5925d16d9d70] = ;;

		*node[0x5925d16d9da0] = return;

		*node[0x5925d16d9dd0] = 0;

		*node[0x5925d16d9e00] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe28c97c00] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5f68a02d60f0] = ;;

		*node[0x5f68a02d6170] = 0;

		*node[0x5f68a02d61a0] = ;;

		*node[0x5f68a02d61d0] = input;

		*node[0x5f68a02d6200] = 1;

		*node[0x5f68a02d6230] = 2;

		*node[0x5f68a02d6260] = 3;

		*node[0x5f68a02d62c0] = ;;

		*node[0x5f68a02d6320] = 1;

		*node[0x5f68a02d6350] = 2;

		*node[0x5f68a02d6380] = 3;

		*node[0x5f68a02d63b0] = ;;

		*node[0x5f68a02d6430] = 4;

		*node[0x5f68a02d6460] = 1;

		*node[0x5f68a02d6490] = 2;

		*node[0x5f68a02d64c0] = 3;

		*node[0x5f68a02d6520] = ;;

		*node[0x5f68a02d6550] = if;

		*node[0x5f68a02d6580] = op_no;

		*node[0x5f68a02d6610] = ==;

		*node[0x5f68a02d65b0] = 1;

		*node[0x5f68a02d65e0] = 0;

		*node[0x5f68a02d6640] = ;;

		*node[0x5f68a02d66a0] = 2;

		*node[0x5f68a02d66d0] = 3;

		*node[0x5f68a02d6700] = else;

		*node[0x5f68a02d6730] = op_no;

		*node[0x5f68a02d6760] = ;;

		*node[0x5f68a02d6810] = 1;

		*node[0x5f68a02d6840] = 2;

		*node[0x5f68a02d6870] = 3;

		*node[0x5f68a02d68a0] = ;;

		*node[0x5f68a02d6920] = 5;

		*node[0x5f68a02d6980] = 1;

		*node[0x5f68a02d69b0] = 2;

		*node[0x5f68a02d69e0] = ;;

		*node[0x5f68a02d6b00] = =;

		*node[0x5f68a02d6a10] = 7;

		*node[0x5f68a02d6ad0] = -;

		*node[0x5f68a02d6a70] = 0;

		*node[0x5f68a02d6aa0] = 1;

		*node[0x5f68a02d6b30] = ;;

		*node[0x5f68a02d6bc0] = =;

		*node[0x5f68a02d6b60] = 8;

		*node[0x5f68a02d6b90] = 1;

		*node[0x5f68a02d6bf0] = ;;

		*node[0x5f68a02d6cd0] = =;

		*node[0x5f68a02d6c20] = 9;

		*node[0x5f68a02d6ca0] = 1000;

		*node[0x5f68a02d6d00] = ;;

		*node[0x5f68a02d6d30] = if;

		*node[0x5f68a02d6d60] = op_no;

		*node[0x5f68a02d6df0] = ==;

		*node[0x5f68a02d6d90] = 1;

		*node[0x5f68a02d6dc0] = 0;

		*node[0x5f68a02d6e20] = ;;

		*node[0x5f68a02d6e50] = if;

		*node[0x5f68a02d6e80] = op_no;

		*node[0x5f68a02d6f10] = ==;

		*node[0x5f68a02d6eb0] = 2;

		*node[0x5f68a02d6ee0] = 0;

		*node[0x5f68a02d6f40] = ;;

		*node[0x5f68a02d6f70] = print;

		*node[0x5f68a02d6fa0] = 9;

		*node[0x5f68a02d6fd0] = else;

		*node[0x5f68a02d7000] = op_no;

		*node[0x5f68a02d7030] = ;;

		*node[0x5f68a02d7060] = print;

		*node[0x5f68a02d7090] = 7;

		*node[0x5f68a02d70c0] = else;

		*node[0x5f68a02d70f0] = op_no;

		*node[0x5f68a02d7120] = ;;

		*node[0x5f68a02d7270] = =;

		*node[0x5f68a02d7150] = 10;

		*node[0x5f68a02d7240] = -;

		*node[0x5f68a02d7180] = 0;

		*node[0x5f68a02d7210] = /;

		*node[0x5f68a02d71b0] = 2;

		*node[0x5f68a02d71e0] = 1;

		*node[0x5f68a02d72a0] = ;;

		*node[0x5f68a02d72d0] = print;

		*node[0x5f68a02d7300] = 8;

		*node[0x5f68a02d7330] = ;;

		*node[0x5f68a02d7360] = print;

		*node[0x5f68a02d7390] = 10;

		*node[0x5f68a02d73c0] = ;;

		*node[0x5f68a02d73f0] = return;

		*node[0x5f68a02d7420] = 0;

		*node[0x5f68a02d7450] = ;;

		*node[0x5f68a02d74d0] = 6;

		*node[0x5f68a02d7500] = 1;

		*node[0x5f68a02d7530] = 2;

		*node[0x5f68a02d7560] = 3;

		*node[0x5f68a02d75c0] = ;;

		*node[0x5f68a02d76b0] = =;

		*node[0x5f68a02d75f0] = 7;

		*node[0x5f68a02d7680] = -;

		*node[0x5f68a02d7620] = 0;

		*node[0x5f68a02d7650] = 1;

		*node[0x5f68a02d76e0] = ;;

		*node[0x5f68a02d77c0] = =;

		*node[0x5f68a02d7710] = 8;

		*node[0x5f68a02d7790] = 1;

		*node[0x5f68a02d77f0] = ;;

		*node[0x5f68a02d7880] = =;

		*node[0x5f68a02d7820] = 11;

		*node[0x5f68a02d7850] = 2;

		*node[0x5f68a02d78b0] = ;;

		*node[0x5f68a02d78e0] = if;

		*node[0x5f68a02d7910] = op_no;

		*node[0x5f68a02d79a0] = ==;

		*node[0x5f68a02d7940] = 3;

		*node[0x5f68a02d7970] = 0;

		*node[0x5f68a02d79d0] = ;;

		*node[0x5f68a02d7a60] = =;

		*node[0x5f68a02d7a00] = 12;

		*node[0x5f68a02d7a30] = 0;

		*node[0x5f68a02d7a90] = ;;

		*node[0x5f68a02d7be0] = =;

		*node[0x5f68a02d7ac0] = 13;

		*node[0x5f68a02d7bb0] = -;

		*node[0x5f68a02d7af0] = 0;

		*node[0x5f68a02d7b80] = /;

		*node[0x5f68a02d7b20] = 2;

		*node[0x5f68a02d7b50] = 1;

		*node[0x5f68a02d7c10] = ;;

		*node[0x5f68a02d7c40] = print;

		*node[0x5f68a02d7c70] = 11;

		*node[0x5f68a02d7ca0] = ;;

		*node[0x5f68a02d7cd0] = print;

		*node[0x5f68a02d7d00] = 12;

		*node[0x5f68a02d7d30] = 13;

		*node[0x5f68a02d7d60] = else;

		*node[0x5f68a02d7d90] = op_no;

		*node[0x5f68a02d7dc0] = ;;

		*node[0x5f68a02d8060] = =;

		*node[0x5f68a02d7df0] = 14;

		*node[0x5f68a02d8030] = -;

		*node[0x5f68a02d7f10] = *;

		*node[0x5f68a02d7eb0] = 2;

		*node[0x5f68a02d7ee0] = 2;

		*node[0x5f68a02d8000] = *;

		*node[0x5f68a02d7fa0] = *;

		*node[0x5f68a02d7f40] = 4;

		*node[0x5f68a02d7f70] = 1;

		*node[0x5f68a02d7fd0] = 3;

		*node[0x5f68a02d8090] = ;;

		*node[0x5f68a02d80c0] = if;

		*node[0x5f68a02d80f0] = op_no;

		*node[0x5f68a02d8180] = >;

		*node[0x5f68a02d8120] = 14;

		*node[0x5f68a02d8150] = 0;

		*node[0x5f68a02d81b0] = ;;

		*node[0x5f68a02d8270] = =;

		*node[0x5f68a02d81e0] = 15;

		*node[0x5f68a02d8240] = sqrt;

		*node[0x5f68a02d8210] = 14;

		*node[0x5f68a02d82a0] = ;;

		*node[0x5f68a02d84b0] = =;

		*node[0x5f68a02d82d0] = 12;

		*node[0x5f68a02d8480] = -;

		*node[0x5f68a02d8360] = -;

		*node[0x5f68a02d8300] = 0;

		*node[0x5f68a02d8330] = 2;

		*node[0x5f68a02d8450] = *;

		*node[0x5f68a02d83f0] = /;

		*node[0x5f68a02d8390] = 15;

		*node[0x5f68a02d83c0] = 2;

		*node[0x5f68a02d8420] = 1;

		*node[0x5f68a02d84e0] = ;;

		*node[0x5f68a02d86f0] = =;

		*node[0x5f68a02d8510] = 13;

		*node[0x5f68a02d86c0] = +;

		*node[0x5f68a02d85a0] = -;

		*node[0x5f68a02d8540] = 0;

		*node[0x5f68a02d8570] = 2;

		*node[0x5f68a02d8690] = *;

		*node[0x5f68a02d8630] = /;

		*node[0x5f68a02d85d0] = 15;

		*node[0x5f68a02d8600] = 2;

		*node[0x5f68a02d8660] = 1;

		*node[0x5f68a02d8720] = ;;

		*node[0x5f68a02d8750] = print;

		*node[0x5f68a02d8780] = 11;

		*node[0x5f68a02d87b0] = ;;

		*node[0x5f68a02d87e0] = print;

		*node[0x5f68a02d8810] = 12;

		*node[0x5f68a02d8840] = 13;

		*node[0x5f68a02d8870] = elseif;

		*node[0x5f68a02d88a0] = op_no;

		*node[0x5f68a02d8930] = ==;

		*node[0x5f68a02d88d0] = 14;

		*node[0x5f68a02d8900] = 0;

		*node[0x5f68a02d8960] = ;;

		*node[0x5f68a02d8b10] = =;

		*node[0x5f68a02d8990] = 10;

		*node[0x5f68a02d8ae0] = -;

		*node[0x5f68a02d89c0] = 0;

		*node[0x5f68a02d8ab0] = *;

		*node[0x5f68a02d8a50] = /;

		*node[0x5f68a02d89f0] = 2;

		*node[0x5f68a02d8a20] = 2;

		*node[0x5f68a02d8a80] = 1;

		*node[0x5f68a02d8b40] = ;;

		*node[0x5f68a02d8b70] = print;

		*node[0x5f68a02d8ba0] = 8;

		*node[0x5f68a02d8bd0] = ;;

		*node[0x5f68a02d8c00] = print;

		*node[0x5f68a02d8c30] = 10;

		*node[0x5f68a02d8c60] = else;

		*node[0x5f68a02d8c90] = op_no;

		*node[0x5f68a02d8cc0] = ;;

		*node[0x5f68a02d8cf0] = print;

		*node[0x5f68a02d8d20] = 7;

		*node[0x5f68a02d8d50] = ;;

		*node[0x5f68a02d8d80] = return;

		*node[0x5f68a02d8db0] = 0;

		*node[0x5f68a02d8de0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe8bd34e40] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x608963c1b0f0] = ;;

		*node[0x608963c1b170] = 0;

		*node[0x608963c1b1a0] = ;;

		*node[0x608963c1b1d0] = input;

		*node[0x608963c1b200] = 1;

		*node[0x608963c1b230] = 2;

		*node[0x608963c1b260] = 3;

		*node[0x608963c1b2c0] = ;;

		*node[0x608963c1b320] = 1;

		*node[0x608963c1b350] = 2;

		*node[0x608963c1b380] = 3;

		*node[0x608963c1b3b0] = ;;

		*node[0x608963c1b430] = 4;

		*node[0x608963c1b460] = 1;

		*node[0x608963c1b490] = 2;

		*node[0x608963c1b4c0] = 3;

		*node[0x608963c1b520] = ;;

		*node[0x608963c1b550] = if;

		*node[0x608963c1b580] = op_no;

		*node[0x608963c1b610] = ==;

		*node[0x608963c1b5b0] = 1;

		*node[0x608963c1b5e0] = 0;

		*node[0x608963c1b640] = ;;

		*node[0x608963c1b6a0] = 2;

		*node[0x608963c1b6d0] = 3;

		*node[0x608963c1b700] = else;

		*node[0x608963c1b730] = op_no;

		*node[0x608963c1b760] = ;;

		*node[0x608963c1b810] = 1;

		*node[0x608963c1b840] = 2;

		*node[0x608963c1b870] = 3;

		*node[0x608963c1b8a0] = ;;

		*node[0x608963c1b920] = 5;

		*node[0x608963c1b980] = 1;

		*node[0x608963c1b9b0] = 2;

		*node[0x608963c1b9e0] = ;;

		*node[0x608963c1bb00] = =;

		*node[0x608963c1ba10] = 7;

		*node[0x608963c1bad0] = -;

		*node[0x608963c1ba70] = 0;

		*node[0x608963c1baa0] = 1;

		*node[0x608963c1bb30] = ;;

		*node[0x608963c1bbc0] = =;

		*node[0x608963c1bb60] = 8;

		*node[0x608963c1bb90] = 1;

		*node[0x608963c1bbf0] = ;;

		*node[0x608963c1bcd0] = =;

		*node[0x608963c1bc20] = 9;

		*node[0x608963c1bca0] = 1000;

		*node[0x608963c1bd00] = ;;

		*node[0x608963c1bd30] = if;

		*node[0x608963c1bd60] = op_no;

		*node[0x608963c1bdf0] = ==;

		*node[0x608963c1bd90] = 1;

		*node[0x608963c1bdc0] = 0;

		*node[0x608963c1be20] = ;;

		*node[0x608963c1be50] = if;

		*node[0x608963c1be80] = op_no;

		*node[0x608963c1bf10] = ==;

		*node[0x608963c1beb0] = 2;

		*node[0x608963c1bee0] = 0;

		*node[0x608963c1bf40] = ;;

		*node[0x608963c1bf70] = print;

		*node[0x608963c1bfa0] = 9;

		*node[0x608963c1bfd0] = else;

		*node[0x608963c1c000] = op_no;

		*node[0x608963c1c030] = ;;

		*node[0x608963c1c060] = print;

		*node[0x608963c1c090] = 7;

		*node[0x608963c1c0c0] = else;

		*node[0x608963c1c0f0] = op_no;

		*node[0x608963c1c120] = ;;

		*node[0x608963c1c270] = =;

		*node[0x608963c1c150] = 10;

		*node[0x608963c1c240] = -;

		*node[0x608963c1c180] = 0;

		*node[0x608963c1c210] = /;

		*node[0x608963c1c1b0] = 2;

		*node[0x608963c1c1e0] = 1;

		*node[0x608963c1c2a0] = ;;

		*node[0x608963c1c2d0] = print;

		*node[0x608963c1c300] = 8;

		*node[0x608963c1c330] = ;;

		*node[0x608963c1c360] = print;

		*node[0x608963c1c390] = 10;

		*node[0x608963c1c3c0] = ;;

		*node[0x608963c1c3f0] = return;

		*node[0x608963c1c420] = 0;

		*node[0x608963c1c450] = ;;

		*node[0x608963c1c4d0] = 6;

		*node[0x608963c1c500] = 1;

		*node[0x608963c1c530] = 2;

		*node[0x608963c1c560] = 3;

		*node[0x608963c1c5c0] = ;;

		*node[0x608963c1c6b0] = =;

		*node[0x608963c1c5f0] = 7;

		*node[0x608963c1c680] = -;

		*node[0x608963c1c620] = 0;

		*node[0x608963c1c650] = 1;

		*node[0x608963c1c6e0] = ;;

		*node[0x608963c1c7c0] = =;

		*node[0x608963c1c710] = 8;

		*node[0x608963c1c790] = 1;

		*node[0x608963c1c7f0] = ;;

		*node[0x608963c1c880] = =;

		*node[0x608963c1c820] = 11;

		*node[0x608963c1c850] = 2;

		*node[0x608963c1c8b0] = ;;

		*node[0x608963c1c8e0] = if;

		*node[0x608963c1c910] = op_no;

		*node[0x608963c1c9a0] = ==;

		*node[0x608963c1c940] = 3;

		*node[0x608963c1c970] = 0;

		*node[0x608963c1c9d0] = ;;

		*node[0x608963c1ca60] = =;

		*node[0x608963c1ca00] = 12;

		*node[0x608963c1ca30] = 0;

		*node[0x608963c1ca90] = ;;

		*node[0x608963c1cbe0] = =;

		*node[0x608963c1cac0] = 13;

		*node[0x608963c1cbb0] = -;

		*node[0x608963c1caf0] = 0;

		*node[0x608963c1cb80] = /;

		*node[0x608963c1cb20] = 2;

		*node[0x608963c1cb50] = 1;

		*node[0x608963c1cc10] = ;;

		*node[0x608963c1cc40] = print;

		*node[0x608963c1cc70] = 11;

		*node[0x608963c1cca0] = ;;

		*node[0x608963c1ccd0] = print;

		*node[0x608963c1cd00] = 12;

		*node[0x608963c1cd30] = 13;

		*node[0x608963c1cd60] = else;

		*node[0x608963c1cd90] = op_no;

		*node[0x608963c1cdc0] = ;;

		*node[0x608963c1d060] = =;

		*node[0x608963c1cdf0] = 14;

		*node[0x608963c1d030] = -;

		*node[0x608963c1cf10] = *;

		*node[0x608963c1ceb0] = 2;

		*node[0x608963c1cee0] = 2;

		*node[0x608963c1d000] = *;

		*node[0x608963c1cfa0] = *;

		*node[0x608963c1cf40] = 4;

		*node[0x608963c1cf70] = 1;

		*node[0x608963c1cfd0] = 3;

		*node[0x608963c1d090] = ;;

		*node[0x608963c1d0c0] = if;

		*node[0x608963c1d0f0] = op_no;

		*node[0x608963c1d180] = >;

		*node[0x608963c1d120] = 14;

		*node[0x608963c1d150] = 0;

		*node[0x608963c1d1b0] = ;;

		*node[0x608963c1d270] = =;

		*node[0x608963c1d1e0] = 15;

		*node[0x608963c1d240] = sqrt;

		*node[0x608963c1d210] = 14;

		*node[0x608963c1d2a0] = ;;

		*node[0x608963c1d4b0] = =;

		*node[0x608963c1d2d0] = 12;

		*node[0x608963c1d480] = -;

		*node[0x608963c1d360] = -;

		*node[0x608963c1d300] = 0;

		*node[0x608963c1d330] = 2;

		*node[0x608963c1d450] = *;

		*node[0x608963c1d3f0] = /;

		*node[0x608963c1d390] = 15;

		*node[0x608963c1d3c0] = 2;

		*node[0x608963c1d420] = 1;

		*node[0x608963c1d4e0] = ;;

		*node[0x608963c1d6f0] = =;

		*node[0x608963c1d510] = 13;

		*node[0x608963c1d6c0] = +;

		*node[0x608963c1d5a0] = -;

		*node[0x608963c1d540] = 0;

		*node[0x608963c1d570] = 2;

		*node[0x608963c1d690] = *;

		*node[0x608963c1d630] = /;

		*node[0x608963c1d5d0] = 15;

		*node[0x608963c1d600] = 2;

		*node[0x608963c1d660] = 1;

		*node[0x608963c1d720] = ;;

		*node[0x608963c1d750] = print;

		*node[0x608963c1d780] = 11;

		*node[0x608963c1d7b0] = ;;

		*node[0x608963c1d7e0] = print;

		*node[0x608963c1d810] = 12;

		*node[0x608963c1d840] = 13;

		*node[0x608963c1d870] = elseif;

		*node[0x608963c1d8a0] = op_no;

		*node[0x608963c1d930] = ==;

		*node[0x608963c1d8d0] = 14;

		*node[0x608963c1d900] = 0;

		*node[0x608963c1d960] = ;;

		*node[0x608963c1db10] = =;

		*node[0x608963c1d990] = 10;

		*node[0x608963c1dae0] = -;

		*node[0x608963c1d9c0] = 0;

		*node[0x608963c1dab0] = *;

		*node[0x608963c1da50] = /;

		*node[0x608963c1d9f0] = 2;

		*node[0x608963c1da20] = 2;

		*node[0x608963c1da80] = 1;

		*node[0x608963c1db40] = ;;

		*node[0x608963c1db70] = print;

		*node[0x608963c1dba0] = 8;

		*node[0x608963c1dbd0] = ;;

		*node[0x608963c1dc00] = print;

		*node[0x608963c1dc30] = 10;

		*node[0x608963c1dc60] = else;

		*node[0x608963c1dc90] = op_no;

		*node[0x608963c1dcc0] = ;;

		*node[0x608963c1dcf0] = print;

		*node[0x608963c1dd20] = 7;

		*node[0x608963c1dd50] = ;;

		*node[0x608963c1dd80] = return;

		*node[0x608963c1ddb0] = 0;

		*node[0x608963c1dde0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffdc806c470] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5f7cb6c37fd0] = ;;

		*node[0x5f7cb6c38000] = 0;

		*node[0x5f7cb6c38030] = ;;

		*node[0x5f7cb6c38060] = input;

		*node[0x5f7cb6c38090] = 1;

		*node[0x5f7cb6c380c0] = 2;

		*node[0x5f7cb6c380f0] = 3;

		*node[0x5f7cb6c38120] = ;;

		*node[0x5f7cb6c38180] = 1;

		*node[0x5f7cb6c381b0] = 2;

		*node[0x5f7cb6c381e0] = 3;

		*node[0x5f7cb6c38210] = ;;

		*node[0x5f7cb6c38240] = 4;

		*node[0x5f7cb6c38270] = 1;

		*node[0x5f7cb6c382a0] = 2;

		*node[0x5f7cb6c382d0] = 3;

		*node[0x5f7cb6c38300] = ;;

		*node[0x5f7cb6c38330] = if;

		*node[0x5f7cb6c38360] = op_no;

		*node[0x5f7cb6c38390] = ==;

		*node[0x5f7cb6c383c0] = 1;

		*node[0x5f7cb6c383f0] = 0;

		*node[0x5f7cb6c38420] = ;;

		*node[0x5f7cb6c38480] = 2;

		*node[0x5f7cb6c384b0] = 3;

		*node[0x5f7cb6c384e0] = else;

		*node[0x5f7cb6c38510] = op_no;

		*node[0x5f7cb6c38540] = ;;

		*node[0x5f7cb6c385a0] = 1;

		*node[0x5f7cb6c385d0] = 2;

		*node[0x5f7cb6c38600] = 3;

		*node[0x5f7cb6c38630] = ;;

		*node[0x5f7cb6c38660] = 5;

		*node[0x5f7cb6c38690] = 1;

		*node[0x5f7cb6c386c0] = 2;

		*node[0x5f7cb6c386f0] = ;;

		*node[0x5f7cb6c38720] = =;

		*node[0x5f7cb6c38750] = 7;

		*node[0x5f7cb6c38780] = -;

		*node[0x5f7cb6c387b0] = 0;

		*node[0x5f7cb6c387e0] = 1;

		*node[0x5f7cb6c38810] = ;;

		*node[0x5f7cb6c38840] = =;

		*node[0x5f7cb6c38870] = 8;

		*node[0x5f7cb6c388a0] = 1;

		*node[0x5f7cb6c388d0] = ;;

		*node[0x5f7cb6c38900] = =;

		*node[0x5f7cb6c38930] = 9;

		*node[0x5f7cb6c38960] = 1000;

		*node[0x5f7cb6c38990] = ;;

		*node[0x5f7cb6c389c0] = if;

		*node[0x5f7cb6c389f0] = op_no;

		*node[0x5f7cb6c38a20] = ==;

		*node[0x5f7cb6c38a50] = 1;

		*node[0x5f7cb6c38a80] = 0;

		*node[0x5f7cb6c38ab0] = ;;

		*node[0x5f7cb6c38ae0] = if;

		*node[0x5f7cb6c38b10] = op_no;

		*node[0x5f7cb6c38b40] = ==;

		*node[0x5f7cb6c38b70] = 2;

		*node[0x5f7cb6c38ba0] = 0;

		*node[0x5f7cb6c38bd0] = ;;

		*node[0x5f7cb6c38c00] = print;

		*node[0x5f7cb6c38c30] = 9;

		*node[0x5f7cb6c38c60] = else;

		*node[0x5f7cb6c38c90] = op_no;

		*node[0x5f7cb6c38cc0] = ;;

		*node[0x5f7cb6c38cf0] = print;

		*node[0x5f7cb6c38d20] = 7;

		*node[0x5f7cb6c38d50] = else;

		*node[0x5f7cb6c38d80] = op_no;

		*node[0x5f7cb6c38db0] = ;;

		*node[0x5f7cb6c38de0] = =;

		*node[0x5f7cb6c38e10] = 10;

		*node[0x5f7cb6c38e40] = -;

		*node[0x5f7cb6c38e70] = 0;

		*node[0x5f7cb6c38ea0] = /;

		*node[0x5f7cb6c38ed0] = 2;

		*node[0x5f7cb6c38f00] = 1;

		*node[0x5f7cb6c38f30] = ;;

		*node[0x5f7cb6c38f60] = print;

		*node[0x5f7cb6c38f90] = 8;

		*node[0x5f7cb6c38fc0] = ;;

		*node[0x5f7cb6c38ff0] = print;

		*node[0x5f7cb6c39020] = 10;

		*node[0x5f7cb6c39050] = ;;

		*node[0x5f7cb6c39080] = return;

		*node[0x5f7cb6c390b0] = 0;

		*node[0x5f7cb6c390e0] = ;;

		*node[0x5f7cb6c39110] = 6;

		*node[0x5f7cb6c39140] = 1;

		*node[0x5f7cb6c39170] = 2;

		*node[0x5f7cb6c391a0] = 3;

		*node[0x5f7cb6c391d0] = ;;

		*node[0x5f7cb6c39200] = =;

		*node[0x5f7cb6c39230] = 7;

		*node[0x5f7cb6c39260] = -;

		*node[0x5f7cb6c39290] = 0;

		*node[0x5f7cb6c392c0] = 1;

		*node[0x5f7cb6c392f0] = ;;

		*node[0x5f7cb6c39320] = =;

		*node[0x5f7cb6c39350] = 8;

		*node[0x5f7cb6c39380] = 1;

		*node[0x5f7cb6c393b0] = ;;

		*node[0x5f7cb6c393e0] = =;

		*node[0x5f7cb6c39410] = 11;

		*node[0x5f7cb6c39440] = 2;

		*node[0x5f7cb6c39470] = ;;

		*node[0x5f7cb6c394a0] = if;

		*node[0x5f7cb6c394d0] = op_no;

		*node[0x5f7cb6c39500] = ==;

		*node[0x5f7cb6c39530] = 3;

		*node[0x5f7cb6c39560] = 0;

		*node[0x5f7cb6c39590] = ;;

		*node[0x5f7cb6c395c0] = =;

		*node[0x5f7cb6c395f0] = 12;

		*node[0x5f7cb6c39620] = 0;

		*node[0x5f7cb6c39650] = ;;

		*node[0x5f7cb6c39680] = =;

		*node[0x5f7cb6c396b0] = 13;

		*node[0x5f7cb6c396e0] = -;

		*node[0x5f7cb6c39710] = 0;

		*node[0x5f7cb6c39740] = /;

		*node[0x5f7cb6c39770] = 2;

		*node[0x5f7cb6c397a0] = 1;

		*node[0x5f7cb6c397d0] = ;;

		*node[0x5f7cb6c39800] = print;

		*node[0x5f7cb6c39830] = 11;

		*node[0x5f7cb6c39860] = ;;

		*node[0x5f7cb6c39890] = print;

		*node[0x5f7cb6c398c0] = 12;

		*node[0x5f7cb6c398f0] = 13;

		*node[0x5f7cb6c39920] = else;

		*node[0x5f7cb6c39950] = op_no;

		*node[0x5f7cb6c39980] = ;;

		*node[0x5f7cb6c399b0] = =;

		*node[0x5f7cb6c399e0] = 14;

		*node[0x5f7cb6c39a10] = -;

		*node[0x5f7cb6c39a40] = *;

		*node[0x5f7cb6c39a70] = 2;

		*node[0x5f7cb6c39aa0] = 2;

		*node[0x5f7cb6c39ad0] = *;

		*node[0x5f7cb6c39b00] = *;

		*node[0x5f7cb6c39b30] = 4;

		*node[0x5f7cb6c39b60] = 1;

		*node[0x5f7cb6c39b90] = 3;

		*node[0x5f7cb6c39bc0] = ;;

		*node[0x5f7cb6c39bf0] = if;

		*node[0x5f7cb6c39c20] = op_no;

		*node[0x5f7cb6c39c50] = >;

		*node[0x5f7cb6c39c80] = 14;

		*node[0x5f7cb6c39cb0] = 0;

		*node[0x5f7cb6c39ce0] = ;;

		*node[0x5f7cb6c39d10] = =;

		*node[0x5f7cb6c39d40] = 15;

		*node[0x5f7cb6c39d70] = sqrt;

		*node[0x5f7cb6c39da0] = 14;

		*node[0x5f7cb6c39dd0] = ;;

		*node[0x5f7cb6c39e00] = =;

		*node[0x5f7cb6c39e30] = 12;

		*node[0x5f7cb6c39e60] = -;

		*node[0x5f7cb6c39e90] = -;

		*node[0x5f7cb6c39ec0] = 0;

		*node[0x5f7cb6c39ef0] = 2;

		*node[0x5f7cb6c39f20] = *;

		*node[0x5f7cb6c39f50] = /;

		*node[0x5f7cb6c39f80] = 15;

		*node[0x5f7cb6c39fb0] = 2;

		*node[0x5f7cb6c39fe0] = 1;

		*node[0x5f7cb6c3a010] = ;;

		*node[0x5f7cb6c3a040] = =;

		*node[0x5f7cb6c3a070] = 13;

		*node[0x5f7cb6c3a0a0] = +;

		*node[0x5f7cb6c3a0d0] = -;

		*node[0x5f7cb6c3a100] = 0;

		*node[0x5f7cb6c3a130] = 2;

		*node[0x5f7cb6c3a160] = *;

		*node[0x5f7cb6c3a190] = /;

		*node[0x5f7cb6c3a1c0] = 15;

		*node[0x5f7cb6c3a1f0] = 2;

		*node[0x5f7cb6c3a220] = 1;

		*node[0x5f7cb6c3a250] = ;;

		*node[0x5f7cb6c3a280] = print;

		*node[0x5f7cb6c3a2b0] = 11;

		*node[0x5f7cb6c3a2e0] = ;;

		*node[0x5f7cb6c3a310] = print;

		*node[0x5f7cb6c3a340] = 12;

		*node[0x5f7cb6c3a370] = 13;

		*node[0x5f7cb6c3a3a0] = elseif;

		*node[0x5f7cb6c3a3d0] = op_no;

		*node[0x5f7cb6c3a400] = ==;

		*node[0x5f7cb6c3a430] = 14;

		*node[0x5f7cb6c3a460] = 0;

		*node[0x5f7cb6c3a490] = ;;

		*node[0x5f7cb6c3a4c0] = =;

		*node[0x5f7cb6c3a4f0] = 10;

		*node[0x5f7cb6c3a520] = -;

		*node[0x5f7cb6c3a550] = 0;

		*node[0x5f7cb6c3a580] = *;

		*node[0x5f7cb6c3a5b0] = /;

		*node[0x5f7cb6c3a5e0] = 2;

		*node[0x5f7cb6c3a610] = 2;

		*node[0x5f7cb6c3a640] = 1;

		*node[0x5f7cb6c3a670] = ;;

		*node[0x5f7cb6c3a6a0] = print;

		*node[0x5f7cb6c3a6d0] = 8;

		*node[0x5f7cb6c3a700] = ;;

		*node[0x5f7cb6c3a730] = print;

		*node[0x5f7cb6c3a760] = 10;

		*node[0x5f7cb6c3a790] = else;

		*node[0x5f7cb6c3a7c0] = op_no;

		*node[0x5f7cb6c3a7f0] = ;;

		*node[0x5f7cb6c3a820] = print;

		*node[0x5f7cb6c3a850] = 7;

		*node[0x5f7cb6c3a880] = ;;

		*node[0x5f7cb6c3a8b0] = return;

		*node[0x5f7cb6c3a8e0] = 0;

		*node[0x5f7cb6c3a910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffffd93ef30] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5c65c8bf90d0] = ;;

		*node[0x5c65c8bf9150] = 0;

		*node[0x5c65c8bf9180] = ;;

		*node[0x5c65c8bf91b0] = input;

		*node[0x5c65c8bf91e0] = 1;

		*node[0x5c65c8bf9210] = 2;

		*node[0x5c65c8bf9240] = 3;

		*node[0x5c65c8bf92a0] = ;;

		*node[0x5c65c8bf9300] = 1;

		*node[0x5c65c8bf9330] = 2;

		*node[0x5c65c8bf9360] = 3;

		*node[0x5c65c8bf9390] = ;;

		*node[0x5c65c8bf9410] = 4;

		*node[0x5c65c8bf9440] = 1;

		*node[0x5c65c8bf9470] = 2;

		*node[0x5c65c8bf94a0] = 3;

		*node[0x5c65c8bf9500] = ;;

		*node[0x5c65c8bf9530] = if;

		*node[0x5c65c8bf9560] = op_no;

		*node[0x5c65c8bf95f0] = ==;

		*node[0x5c65c8bf9590] = 1;

		*node[0x5c65c8bf95c0] = 0;

		*node[0x5c65c8bf9620] = ;;

		*node[0x5c65c8bf9680] = 2;

		*node[0x5c65c8bf96b0] = 3;

		*node[0x5c65c8bf96e0] = else;

		*node[0x5c65c8bf9710] = op_no;

		*node[0x5c65c8bf9740] = ;;

		*node[0x5c65c8bf97f0] = 1;

		*node[0x5c65c8bf9820] = 2;

		*node[0x5c65c8bf9850] = 3;

		*node[0x5c65c8bf9880] = ;;

		*node[0x5c65c8bf9900] = 5;

		*node[0x5c65c8bf9960] = 1;

		*node[0x5c65c8bf9990] = 2;

		*node[0x5c65c8bf99c0] = ;;

		*node[0x5c65c8bf9ae0] = =;

		*node[0x5c65c8bf99f0] = 7;

		*node[0x5c65c8bf9ab0] = -;

		*node[0x5c65c8bf9a50] = 0;

		*node[0x5c65c8bf9a80] = 1;

		*node[0x5c65c8bf9b10] = ;;

		*node[0x5c65c8bf9ba0] = =;

		*node[0x5c65c8bf9b40] = 8;

		*node[0x5c65c8bf9b70] = 1;

		*node[0x5c65c8bf9bd0] = ;;

		*node[0x5c65c8bf9cb0] = =;

		*node[0x5c65c8bf9c00] = 9;

		*node[0x5c65c8bf9c80] = 1000;

		*node[0x5c65c8bf9ce0] = ;;

		*node[0x5c65c8bf9d10] = if;

		*node[0x5c65c8bf9d40] = op_no;

		*node[0x5c65c8bf9dd0] = ==;

		*node[0x5c65c8bf9d70] = 1;

		*node[0x5c65c8bf9da0] = 0;

		*node[0x5c65c8bf9e00] = ;;

		*node[0x5c65c8bf9e30] = if;

		*node[0x5c65c8bf9e60] = op_no;

		*node[0x5c65c8bf9ef0] = ==;

		*node[0x5c65c8bf9e90] = 2;

		*node[0x5c65c8bf9ec0] = 0;

		*node[0x5c65c8bf9f20] = ;;

		*node[0x5c65c8bf9f50] = print;

		*node[0x5c65c8bf9f80] = 9;

		*node[0x5c65c8bf9fb0] = else;

		*node[0x5c65c8bf9fe0] = op_no;

		*node[0x5c65c8bfa010] = ;;

		*node[0x5c65c8bfa040] = print;

		*node[0x5c65c8bfa070] = 7;

		*node[0x5c65c8bfa0a0] = else;

		*node[0x5c65c8bfa0d0] = op_no;

		*node[0x5c65c8bfa100] = ;;

		*node[0x5c65c8bfa250] = =;

		*node[0x5c65c8bfa130] = 10;

		*node[0x5c65c8bfa220] = -;

		*node[0x5c65c8bfa160] = 0;

		*node[0x5c65c8bfa1f0] = /;

		*node[0x5c65c8bfa190] = 2;

		*node[0x5c65c8bfa1c0] = 1;

		*node[0x5c65c8bfa280] = ;;

		*node[0x5c65c8bfa2b0] = print;

		*node[0x5c65c8bfa2e0] = 8;

		*node[0x5c65c8bfa310] = ;;

		*node[0x5c65c8bfa340] = print;

		*node[0x5c65c8bfa370] = 10;

		*node[0x5c65c8bfa3a0] = ;;

		*node[0x5c65c8bfa3d0] = return;

		*node[0x5c65c8bfa400] = 0;

		*node[0x5c65c8bfa430] = ;;

		*node[0x5c65c8bfa4b0] = 6;

		*node[0x5c65c8bfa4e0] = 1;

		*node[0x5c65c8bfa510] = 2;

		*node[0x5c65c8bfa540] = 3;

		*node[0x5c65c8bfa5a0] = ;;

		*node[0x5c65c8bfa690] = =;

		*node[0x5c65c8bfa5d0] = 7;

		*node[0x5c65c8bfa660] = -;

		*node[0x5c65c8bfa600] = 0;

		*node[0x5c65c8bfa630] = 1;

		*node[0x5c65c8bfa6c0] = ;;

		*node[0x5c65c8bfa7a0] = =;

		*node[0x5c65c8bfa6f0] = 8;

		*node[0x5c65c8bfa770] = 1;

		*node[0x5c65c8bfa7d0] = ;;

		*node[0x5c65c8bfa860] = =;

		*node[0x5c65c8bfa800] = 11;

		*node[0x5c65c8bfa830] = 2;

		*node[0x5c65c8bfa890] = ;;

		*node[0x5c65c8bfa8c0] = if;

		*node[0x5c65c8bfa8f0] = op_no;

		*node[0x5c65c8bfa980] = ==;

		*node[0x5c65c8bfa920] = 3;

		*node[0x5c65c8bfa950] = 0;

		*node[0x5c65c8bfa9b0] = ;;

		*node[0x5c65c8bfaa40] = =;

		*node[0x5c65c8bfa9e0] = 12;

		*node[0x5c65c8bfaa10] = 0;

		*node[0x5c65c8bfaa70] = ;;

		*node[0x5c65c8bfabc0] = =;

		*node[0x5c65c8bfaaa0] = 13;

		*node[0x5c65c8bfab90] = -;

		*node[0x5c65c8bfaad0] = 0;

		*node[0x5c65c8bfab60] = /;

		*node[0x5c65c8bfab00] = 2;

		*node[0x5c65c8bfab30] = 1;

		*node[0x5c65c8bfabf0] = ;;

		*node[0x5c65c8bfac20] = print;

		*node[0x5c65c8bfac50] = 11;

		*node[0x5c65c8bfac80] = ;;

		*node[0x5c65c8bfacb0] = print;

		*node[0x5c65c8bface0] = 12;

		*node[0x5c65c8bfad10] = 13;

		*node[0x5c65c8bfad40] = else;

		*node[0x5c65c8bfad70] = op_no;

		*node[0x5c65c8bfada0] = ;;

		*node[0x5c65c8bfb040] = =;

		*node[0x5c65c8bfadd0] = 14;

		*node[0x5c65c8bfb010] = -;

		*node[0x5c65c8bfaef0] = *;

		*node[0x5c65c8bfae90] = 2;

		*node[0x5c65c8bfaec0] = 2;

		*node[0x5c65c8bfafe0] = *;

		*node[0x5c65c8bfaf80] = *;

		*node[0x5c65c8bfaf20] = 4;

		*node[0x5c65c8bfaf50] = 1;

		*node[0x5c65c8bfafb0] = 3;

		*node[0x5c65c8bfb070] = ;;

		*node[0x5c65c8bfb0a0] = if;

		*node[0x5c65c8bfb0d0] = op_no;

		*node[0x5c65c8bfb160] = >;

		*node[0x5c65c8bfb100] = 14;

		*node[0x5c65c8bfb130] = 0;

		*node[0x5c65c8bfb190] = ;;

		*node[0x5c65c8bfb250] = =;

		*node[0x5c65c8bfb1c0] = 15;

		*node[0x5c65c8bfb220] = sqrt;

		*node[0x5c65c8bfb1f0] = 14;

		*node[0x5c65c8bfb280] = ;;

		*node[0x5c65c8bfb490] = =;

		*node[0x5c65c8bfb2b0] = 12;

		*node[0x5c65c8bfb460] = -;

		*node[0x5c65c8bfb340] = -;

		*node[0x5c65c8bfb2e0] = 0;

		*node[0x5c65c8bfb310] = 2;

		*node[0x5c65c8bfb430] = *;

		*node[0x5c65c8bfb3d0] = /;

		*node[0x5c65c8bfb370] = 15;

		*node[0x5c65c8bfb3a0] = 2;

		*node[0x5c65c8bfb400] = 1;

		*node[0x5c65c8bfb4c0] = ;;

		*node[0x5c65c8bfb6d0] = =;

		*node[0x5c65c8bfb4f0] = 13;

		*node[0x5c65c8bfb6a0] = +;

		*node[0x5c65c8bfb580] = -;

		*node[0x5c65c8bfb520] = 0;

		*node[0x5c65c8bfb550] = 2;

		*node[0x5c65c8bfb670] = *;

		*node[0x5c65c8bfb610] = /;

		*node[0x5c65c8bfb5b0] = 15;

		*node[0x5c65c8bfb5e0] = 2;

		*node[0x5c65c8bfb640] = 1;

		*node[0x5c65c8bfb700] = ;;

		*node[0x5c65c8bfb730] = print;

		*node[0x5c65c8bfb760] = 11;

		*node[0x5c65c8bfb790] = ;;

		*node[0x5c65c8bfb7c0] = print;

		*node[0x5c65c8bfb7f0] = 12;

		*node[0x5c65c8bfb820] = 13;

		*node[0x5c65c8bfb850] = elseif;

		*node[0x5c65c8bfb880] = op_no;

		*node[0x5c65c8bfb910] = ==;

		*node[0x5c65c8bfb8b0] = 14;

		*node[0x5c65c8bfb8e0] = 0;

		*node[0x5c65c8bfb940] = ;;

		*node[0x5c65c8bfbaf0] = =;

		*node[0x5c65c8bfb970] = 10;

		*node[0x5c65c8bfbac0] = -;

		*node[0x5c65c8bfb9a0] = 0;

		*node[0x5c65c8bfba90] = *;

		*node[0x5c65c8bfba30] = /;

		*node[0x5c65c8bfb9d0] = 2;

		*node[0x5c65c8bfba00] = 2;

		*node[0x5c65c8bfba60] = 1;

		*node[0x5c65c8bfbb20] = ;;

		*node[0x5c65c8bfbb50] = print;

		*node[0x5c65c8bfbb80] = 8;

		*node[0x5c65c8bfbbb0] = ;;

		*node[0x5c65c8bfbbe0] = print;

		*node[0x5c65c8bfbc10] = 10;

		*node[0x5c65c8bfbc40] = else;

		*node[0x5c65c8bfbc70] = op_no;

		*node[0x5c65c8bfbca0] = ;;

		*node[0x5c65c8bfbcd0] = print;

		*node[0x5c65c8bfbd00] = 7;

		*node[0x5c65c8bfbd30] = ;;

		*node[0x5c65c8bfbd60] = return;

		*node[0x5c65c8bfbd90] = 0;

		*node[0x5c65c8bfbdc0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffebb9fd270] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x60db91c02fd0] = ;;

		*node[0x60db91c03000] = 0;

		*node[0x60db91c03030] = ;;

		*node[0x60db91c03060] = input;

		*node[0x60db91c03090] = 1;

		*node[0x60db91c030c0] = 2;

		*node[0x60db91c030f0] = 3;

		*node[0x60db91c03120] = ;;

		*node[0x60db91c03180] = 1;

		*node[0x60db91c031b0] = 2;

		*node[0x60db91c031e0] = 3;

		*node[0x60db91c03210] = ;;

		*node[0x60db91c03240] = 4;

		*node[0x60db91c03270] = 1;

		*node[0x60db91c032a0] = 2;

		*node[0x60db91c032d0] = 3;

		*node[0x60db91c03300] = ;;

		*node[0x60db91c03330] = if;

		*node[0x60db91c03360] = op_no;

		*node[0x60db91c03390] = ==;

		*node[0x60db91c033c0] = 1;

		*node[0x60db91c033f0] = 0;

		*node[0x60db91c03420] = ;;

		*node[0x60db91c03480] = 2;

		*node[0x60db91c034b0] = 3;

		*node[0x60db91c034e0] = else;

		*node[0x60db91c03510] = op_no;

		*node[0x60db91c03540] = ;;

		*node[0x60db91c035a0] = 1;

		*node[0x60db91c035d0] = 2;

		*node[0x60db91c03600] = 3;

		*node[0x60db91c03630] = ;;

		*node[0x60db91c03660] = 5;

		*node[0x60db91c03690] = 1;

		*node[0x60db91c036c0] = 2;

		*node[0x60db91c036f0] = ;;

		*node[0x60db91c03720] = =;

		*node[0x60db91c03750] = 7;

		*node[0x60db91c03780] = -;

		*node[0x60db91c037b0] = 0;

		*node[0x60db91c037e0] = 1;

		*node[0x60db91c03810] = ;;

		*node[0x60db91c03840] = =;

		*node[0x60db91c03870] = 8;

		*node[0x60db91c038a0] = 1;

		*node[0x60db91c038d0] = ;;

		*node[0x60db91c03900] = =;

		*node[0x60db91c03930] = 9;

		*node[0x60db91c03960] = 1000;

		*node[0x60db91c03990] = ;;

		*node[0x60db91c039c0] = if;

		*node[0x60db91c039f0] = op_no;

		*node[0x60db91c03a20] = ==;

		*node[0x60db91c03a50] = 1;

		*node[0x60db91c03a80] = 0;

		*node[0x60db91c03ab0] = ;;

		*node[0x60db91c03ae0] = if;

		*node[0x60db91c03b10] = op_no;

		*node[0x60db91c03b40] = ==;

		*node[0x60db91c03b70] = 2;

		*node[0x60db91c03ba0] = 0;

		*node[0x60db91c03bd0] = ;;

		*node[0x60db91c03c00] = print;

		*node[0x60db91c03c30] = 9;

		*node[0x60db91c03c60] = else;

		*node[0x60db91c03c90] = op_no;

		*node[0x60db91c03cc0] = ;;

		*node[0x60db91c03cf0] = print;

		*node[0x60db91c03d20] = 7;

		*node[0x60db91c03d50] = else;

		*node[0x60db91c03d80] = op_no;

		*node[0x60db91c03db0] = ;;

		*node[0x60db91c03de0] = =;

		*node[0x60db91c03e10] = 10;

		*node[0x60db91c03e40] = -;

		*node[0x60db91c03e70] = 0;

		*node[0x60db91c03ea0] = /;

		*node[0x60db91c03ed0] = 2;

		*node[0x60db91c03f00] = 1;

		*node[0x60db91c03f30] = ;;

		*node[0x60db91c03f60] = print;

		*node[0x60db91c03f90] = 8;

		*node[0x60db91c03fc0] = ;;

		*node[0x60db91c03ff0] = print;

		*node[0x60db91c04020] = 10;

		*node[0x60db91c04050] = ;;

		*node[0x60db91c04080] = return;

		*node[0x60db91c040b0] = 0;

		*node[0x60db91c040e0] = ;;

		*node[0x60db91c04110] = 6;

		*node[0x60db91c04140] = 1;

		*node[0x60db91c04170] = 2;

		*node[0x60db91c041a0] = 3;

		*node[0x60db91c041d0] = ;;

		*node[0x60db91c04200] = =;

		*node[0x60db91c04230] = 7;

		*node[0x60db91c04260] = -;

		*node[0x60db91c04290] = 0;

		*node[0x60db91c042c0] = 1;

		*node[0x60db91c042f0] = ;;

		*node[0x60db91c04320] = =;

		*node[0x60db91c04350] = 8;

		*node[0x60db91c04380] = 1;

		*node[0x60db91c043b0] = ;;

		*node[0x60db91c043e0] = =;

		*node[0x60db91c04410] = 11;

		*node[0x60db91c04440] = 2;

		*node[0x60db91c04470] = ;;

		*node[0x60db91c044a0] = if;

		*node[0x60db91c044d0] = op_no;

		*node[0x60db91c04500] = ==;

		*node[0x60db91c04530] = 3;

		*node[0x60db91c04560] = 0;

		*node[0x60db91c04590] = ;;

		*node[0x60db91c045c0] = =;

		*node[0x60db91c045f0] = 12;

		*node[0x60db91c04620] = 0;

		*node[0x60db91c04650] = ;;

		*node[0x60db91c04680] = =;

		*node[0x60db91c046b0] = 13;

		*node[0x60db91c046e0] = -;

		*node[0x60db91c04710] = 0;

		*node[0x60db91c04740] = /;

		*node[0x60db91c04770] = 2;

		*node[0x60db91c047a0] = 1;

		*node[0x60db91c047d0] = ;;

		*node[0x60db91c04800] = print;

		*node[0x60db91c04830] = 11;

		*node[0x60db91c04860] = ;;

		*node[0x60db91c04890] = print;

		*node[0x60db91c048c0] = 12;

		*node[0x60db91c048f0] = 13;

		*node[0x60db91c04920] = else;

		*node[0x60db91c04950] = op_no;

		*node[0x60db91c04980] = ;;

		*node[0x60db91c049b0] = =;

		*node[0x60db91c049e0] = 14;

		*node[0x60db91c04a10] = -;

		*node[0x60db91c04a40] = *;

		*node[0x60db91c04a70] = 2;

		*node[0x60db91c04aa0] = 2;

		*node[0x60db91c04ad0] = *;

		*node[0x60db91c04b00] = *;

		*node[0x60db91c04b30] = 4;

		*node[0x60db91c04b60] = 1;

		*node[0x60db91c04b90] = 3;

		*node[0x60db91c04bc0] = ;;

		*node[0x60db91c04bf0] = if;

		*node[0x60db91c04c20] = op_no;

		*node[0x60db91c04c50] = >;

		*node[0x60db91c04c80] = 14;

		*node[0x60db91c04cb0] = 0;

		*node[0x60db91c04ce0] = ;;

		*node[0x60db91c04d10] = =;

		*node[0x60db91c04d40] = 15;

		*node[0x60db91c04d70] = sqrt;

		*node[0x60db91c04da0] = 14;

		*node[0x60db91c04dd0] = ;;

		*node[0x60db91c04e00] = =;

		*node[0x60db91c04e30] = 12;

		*node[0x60db91c04e60] = -;

		*node[0x60db91c04e90] = -;

		*node[0x60db91c04ec0] = 0;

		*node[0x60db91c04ef0] = 2;

		*node[0x60db91c04f20] = *;

		*node[0x60db91c04f50] = /;

		*node[0x60db91c04f80] = 15;

		*node[0x60db91c04fb0] = 2;

		*node[0x60db91c04fe0] = 1;

		*node[0x60db91c05010] = ;;

		*node[0x60db91c05040] = =;

		*node[0x60db91c05070] = 13;

		*node[0x60db91c050a0] = +;

		*node[0x60db91c050d0] = -;

		*node[0x60db91c05100] = 0;

		*node[0x60db91c05130] = 2;

		*node[0x60db91c05160] = *;

		*node[0x60db91c05190] = /;

		*node[0x60db91c051c0] = 15;

		*node[0x60db91c051f0] = 2;

		*node[0x60db91c05220] = 1;

		*node[0x60db91c05250] = ;;

		*node[0x60db91c05280] = print;

		*node[0x60db91c052b0] = 11;

		*node[0x60db91c052e0] = ;;

		*node[0x60db91c05310] = print;

		*node[0x60db91c05340] = 12;

		*node[0x60db91c05370] = 13;

		*node[0x60db91c053a0] = elseif;

		*node[0x60db91c053d0] = op_no;

		*node[0x60db91c05400] = ==;

		*node[0x60db91c05430] = 14;

		*node[0x60db91c05460] = 0;

		*node[0x60db91c05490] = ;;

		*node[0x60db91c054c0] = =;

		*node[0x60db91c054f0] = 10;

		*node[0x60db91c05520] = -;

		*node[0x60db91c05550] = 0;

		*node[0x60db91c05580] = *;

		*node[0x60db91c055b0] = /;

		*node[0x60db91c055e0] = 2;

		*node[0x60db91c05610] = 2;

		*node[0x60db91c05640] = 1;

		*node[0x60db91c05670] = ;;

		*node[0x60db91c056a0] = print;

		*node[0x60db91c056d0] = 8;

		*node[0x60db91c05700] = ;;

		*node[0x60db91c05730] = print;

		*node[0x60db91c05760] = 10;

		*node[0x60db91c05790] = else;

		*node[0x60db91c057c0] = op_no;

		*node[0x60db91c057f0] = ;;

		*node[0x60db91c05820] = print;

		*node[0x60db91c05850] = 7;

		*node[0x60db91c05880] = ;;

		*node[0x60db91c058b0] = return;

		*node[0x60db91c058e0] = 0;

		*node[0x60db91c05910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff96def630] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5b8f7aab6fd0] = ;;

		*node[0x5b8f7aab7000] = 0;

		*node[0x5b8f7aab7030] = ;;

		*node[0x5b8f7aab7060] = input;

		*node[0x5b8f7aab7090] = 1;

		*node[0x5b8f7aab70c0] = 2;

		*node[0x5b8f7aab70f0] = 3;

		*node[0x5b8f7aab7120] = ;;

		*node[0x5b8f7aab7180] = 1;

		*node[0x5b8f7aab71b0] = 2;

		*node[0x5b8f7aab71e0] = 3;

		*node[0x5b8f7aab7210] = ;;

		*node[0x5b8f7aab7240] = 4;

		*node[0x5b8f7aab7270] = 1;

		*node[0x5b8f7aab72a0] = 2;

		*node[0x5b8f7aab72d0] = 3;

		*node[0x5b8f7aab7300] = ;;

		*node[0x5b8f7aab7330] = if;

		*node[0x5b8f7aab7360] = op_no;

		*node[0x5b8f7aab7390] = ==;

		*node[0x5b8f7aab73c0] = 1;

		*node[0x5b8f7aab73f0] = 0;

		*node[0x5b8f7aab7420] = ;;

		*node[0x5b8f7aab7480] = 2;

		*node[0x5b8f7aab74b0] = 3;

		*node[0x5b8f7aab74e0] = else;

		*node[0x5b8f7aab7510] = op_no;

		*node[0x5b8f7aab7540] = ;;

		*node[0x5b8f7aab75a0] = 1;

		*node[0x5b8f7aab75d0] = 2;

		*node[0x5b8f7aab7600] = 3;

		*node[0x5b8f7aab7630] = ;;

		*node[0x5b8f7aab7660] = 5;

		*node[0x5b8f7aab7690] = 1;

		*node[0x5b8f7aab76c0] = 2;

		*node[0x5b8f7aab76f0] = ;;

		*node[0x5b8f7aab7720] = =;

		*node[0x5b8f7aab7750] = 7;

		*node[0x5b8f7aab7780] = -;

		*node[0x5b8f7aab77b0] = 0;

		*node[0x5b8f7aab77e0] = 1;

		*node[0x5b8f7aab7810] = ;;

		*node[0x5b8f7aab7840] = =;

		*node[0x5b8f7aab7870] = 8;

		*node[0x5b8f7aab78a0] = 1;

		*node[0x5b8f7aab78d0] = ;;

		*node[0x5b8f7aab7900] = =;

		*node[0x5b8f7aab7930] = 9;

		*node[0x5b8f7aab7960] = 1000;

		*node[0x5b8f7aab7990] = ;;

		*node[0x5b8f7aab79c0] = if;

		*node[0x5b8f7aab79f0] = op_no;

		*node[0x5b8f7aab7a20] = ==;

		*node[0x5b8f7aab7a50] = 1;

		*node[0x5b8f7aab7a80] = 0;

		*node[0x5b8f7aab7ab0] = ;;

		*node[0x5b8f7aab7ae0] = if;

		*node[0x5b8f7aab7b10] = op_no;

		*node[0x5b8f7aab7b40] = ==;

		*node[0x5b8f7aab7b70] = 2;

		*node[0x5b8f7aab7ba0] = 0;

		*node[0x5b8f7aab7bd0] = ;;

		*node[0x5b8f7aab7c00] = print;

		*node[0x5b8f7aab7c30] = 9;

		*node[0x5b8f7aab7c60] = else;

		*node[0x5b8f7aab7c90] = op_no;

		*node[0x5b8f7aab7cc0] = ;;

		*node[0x5b8f7aab7cf0] = print;

		*node[0x5b8f7aab7d20] = 7;

		*node[0x5b8f7aab7d50] = else;

		*node[0x5b8f7aab7d80] = op_no;

		*node[0x5b8f7aab7db0] = ;;

		*node[0x5b8f7aab7de0] = =;

		*node[0x5b8f7aab7e10] = 10;

		*node[0x5b8f7aab7e40] = -;

		*node[0x5b8f7aab7e70] = 0;

		*node[0x5b8f7aab7ea0] = /;

		*node[0x5b8f7aab7ed0] = 2;

		*node[0x5b8f7aab7f00] = 1;

		*node[0x5b8f7aab7f30] = ;;

		*node[0x5b8f7aab7f60] = print;

		*node[0x5b8f7aab7f90] = 8;

		*node[0x5b8f7aab7fc0] = ;;

		*node[0x5b8f7aab7ff0] = print;

		*node[0x5b8f7aab8020] = 10;

		*node[0x5b8f7aab8050] = ;;

		*node[0x5b8f7aab8080] = return;

		*node[0x5b8f7aab80b0] = 0;

		*node[0x5b8f7aab80e0] = ;;

		*node[0x5b8f7aab8110] = 6;

		*node[0x5b8f7aab8140] = 1;

		*node[0x5b8f7aab8170] = 2;

		*node[0x5b8f7aab81a0] = 3;

		*node[0x5b8f7aab81d0] = ;;

		*node[0x5b8f7aab8200] = =;

		*node[0x5b8f7aab8230] = 7;

		*node[0x5b8f7aab8260] = -;

		*node[0x5b8f7aab8290] = 0;

		*node[0x5b8f7aab82c0] = 1;

		*node[0x5b8f7aab82f0] = ;;

		*node[0x5b8f7aab8320] = =;

		*node[0x5b8f7aab8350] = 8;

		*node[0x5b8f7aab8380] = 1;

		*node[0x5b8f7aab83b0] = ;;

		*node[0x5b8f7aab83e0] = =;

		*node[0x5b8f7aab8410] = 11;

		*node[0x5b8f7aab8440] = 2;

		*node[0x5b8f7aab8470] = ;;

		*node[0x5b8f7aab84a0] = if;

		*node[0x5b8f7aab84d0] = op_no;

		*node[0x5b8f7aab8500] = ==;

		*node[0x5b8f7aab8530] = 3;

		*node[0x5b8f7aab8560] = 0;

		*node[0x5b8f7aab8590] = ;;

		*node[0x5b8f7aab85c0] = =;

		*node[0x5b8f7aab85f0] = 12;

		*node[0x5b8f7aab8620] = 0;

		*node[0x5b8f7aab8650] = ;;

		*node[0x5b8f7aab8680] = =;

		*node[0x5b8f7aab86b0] = 13;

		*node[0x5b8f7aab86e0] = -;

		*node[0x5b8f7aab8710] = 0;

		*node[0x5b8f7aab8740] = /;

		*node[0x5b8f7aab8770] = 2;

		*node[0x5b8f7aab87a0] = 1;

		*node[0x5b8f7aab87d0] = ;;

		*node[0x5b8f7aab8800] = print;

		*node[0x5b8f7aab8830] = 11;

		*node[0x5b8f7aab8860] = ;;

		*node[0x5b8f7aab8890] = print;

		*node[0x5b8f7aab88c0] = 12;

		*node[0x5b8f7aab88f0] = 13;

		*node[0x5b8f7aab8920] = else;

		*node[0x5b8f7aab8950] = op_no;

		*node[0x5b8f7aab8980] = ;;

		*node[0x5b8f7aab89b0] = =;

		*node[0x5b8f7aab89e0] = 14;

		*node[0x5b8f7aab8a10] = -;

		*node[0x5b8f7aab8a40] = *;

		*node[0x5b8f7aab8a70] = 2;

		*node[0x5b8f7aab8aa0] = 2;

		*node[0x5b8f7aab8ad0] = *;

		*node[0x5b8f7aab8b00] = *;

		*node[0x5b8f7aab8b30] = 4;

		*node[0x5b8f7aab8b60] = 1;

		*node[0x5b8f7aab8b90] = 3;

		*node[0x5b8f7aab8bc0] = ;;

		*node[0x5b8f7aab8bf0] = if;

		*node[0x5b8f7aab8c20] = op_no;

		*node[0x5b8f7aab8c50] = >;

		*node[0x5b8f7aab8c80] = 14;

		*node[0x5b8f7aab8cb0] = 0;

		*node[0x5b8f7aab8ce0] = ;;

		*node[0x5b8f7aab8d10] = =;

		*node[0x5b8f7aab8d40] = 15;

		*node[0x5b8f7aab8d70] = sqrt;

		*node[0x5b8f7aab8da0] = 14;

		*node[0x5b8f7aab8dd0] = ;;

		*node[0x5b8f7aab8e00] = =;

		*node[0x5b8f7aab8e30] = 12;

		*node[0x5b8f7aab8e60] = -;

		*node[0x5b8f7aab8e90] = -;

		*node[0x5b8f7aab8ec0] = 0;

		*node[0x5b8f7aab8ef0] = 2;

		*node[0x5b8f7aab8f20] = *;

		*node[0x5b8f7aab8f50] = /;

		*node[0x5b8f7aab8f80] = 15;

		*node[0x5b8f7aab8fb0] = 2;

		*node[0x5b8f7aab8fe0] = 1;

		*node[0x5b8f7aab9010] = ;;

		*node[0x5b8f7aab9040] = =;

		*node[0x5b8f7aab9070] = 13;

		*node[0x5b8f7aab90a0] = +;

		*node[0x5b8f7aab90d0] = -;

		*node[0x5b8f7aab9100] = 0;

		*node[0x5b8f7aab9130] = 2;

		*node[0x5b8f7aab9160] = *;

		*node[0x5b8f7aab9190] = /;

		*node[0x5b8f7aab91c0] = 15;

		*node[0x5b8f7aab91f0] = 2;

		*node[0x5b8f7aab9220] = 1;

		*node[0x5b8f7aab9250] = ;;

		*node[0x5b8f7aab9280] = print;

		*node[0x5b8f7aab92b0] = 11;

		*node[0x5b8f7aab92e0] = ;;

		*node[0x5b8f7aab9310] = print;

		*node[0x5b8f7aab9340] = 12;

		*node[0x5b8f7aab9370] = 13;

		*node[0x5b8f7aab93a0] = elseif;

		*node[0x5b8f7aab93d0] = op_no;

		*node[0x5b8f7aab9400] = ==;

		*node[0x5b8f7aab9430] = 14;

		*node[0x5b8f7aab9460] = 0;

		*node[0x5b8f7aab9490] = ;;

		*node[0x5b8f7aab94c0] = =;

		*node[0x5b8f7aab94f0] = 10;

		*node[0x5b8f7aab9520] = -;

		*node[0x5b8f7aab9550] = 0;

		*node[0x5b8f7aab9580] = *;

		*node[0x5b8f7aab95b0] = /;

		*node[0x5b8f7aab95e0] = 2;

		*node[0x5b8f7aab9610] = 2;

		*node[0x5b8f7aab9640] = 1;

		*node[0x5b8f7aab9670] = ;;

		*node[0x5b8f7aab96a0] = print;

		*node[0x5b8f7aab96d0] = 8;

		*node[0x5b8f7aab9700] = ;;

		*node[0x5b8f7aab9730] = print;

		*node[0x5b8f7aab9760] = 10;

		*node[0x5b8f7aab9790] = else;

		*node[0x5b8f7aab97c0] = op_no;

		*node[0x5b8f7aab97f0] = ;;

		*node[0x5b8f7aab9820] = print;

		*node[0x5b8f7aab9850] = 7;

		*node[0x5b8f7aab9880] = ;;

		*node[0x5b8f7aab98b0] = return;

		*node[0x5b8f7aab98e0] = 0;

		*node[0x5b8f7aab9910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe64081530] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e421c6bb0f0] = ;;

		*node[0x5e421c6bb170] = 0;

		*node[0x5e421c6bb1a0] = ;;

		*node[0x5e421c6bb1d0] = input;

		*node[0x5e421c6bb200] = 1;

		*node[0x5e421c6bb230] = 2;

		*node[0x5e421c6bb260] = 3;

		*node[0x5e421c6bb2c0] = ;;

		*node[0x5e421c6bb320] = 1;

		*node[0x5e421c6bb350] = 2;

		*node[0x5e421c6bb380] = 3;

		*node[0x5e421c6bb3b0] = ;;

		*node[0x5e421c6bb430] = 4;

		*node[0x5e421c6bb460] = 1;

		*node[0x5e421c6bb490] = 2;

		*node[0x5e421c6bb4c0] = 3;

		*node[0x5e421c6bb520] = ;;

		*node[0x5e421c6bb550] = if;

		*node[0x5e421c6bb580] = op_no;

		*node[0x5e421c6bb610] = ==;

		*node[0x5e421c6bb5b0] = 1;

		*node[0x5e421c6bb5e0] = 0;

		*node[0x5e421c6bb640] = ;;

		*node[0x5e421c6bb6a0] = 2;

		*node[0x5e421c6bb6d0] = 3;

		*node[0x5e421c6bb700] = else;

		*node[0x5e421c6bb730] = op_no;

		*node[0x5e421c6bb760] = ;;

		*node[0x5e421c6bb810] = 1;

		*node[0x5e421c6bb840] = 2;

		*node[0x5e421c6bb870] = 3;

		*node[0x5e421c6bb8a0] = ;;

		*node[0x5e421c6bb920] = 5;

		*node[0x5e421c6bb980] = 1;

		*node[0x5e421c6bb9b0] = 2;

		*node[0x5e421c6bb9e0] = ;;

		*node[0x5e421c6bbb00] = =;

		*node[0x5e421c6bba10] = 7;

		*node[0x5e421c6bbad0] = -;

		*node[0x5e421c6bba70] = 0;

		*node[0x5e421c6bbaa0] = 1;

		*node[0x5e421c6bbb30] = ;;

		*node[0x5e421c6bbbc0] = =;

		*node[0x5e421c6bbb60] = 8;

		*node[0x5e421c6bbb90] = 1;

		*node[0x5e421c6bbbf0] = ;;

		*node[0x5e421c6bbcd0] = =;

		*node[0x5e421c6bbc20] = 9;

		*node[0x5e421c6bbca0] = 1000;

		*node[0x5e421c6bbd00] = ;;

		*node[0x5e421c6bbd30] = if;

		*node[0x5e421c6bbd60] = op_no;

		*node[0x5e421c6bbdf0] = ==;

		*node[0x5e421c6bbd90] = 1;

		*node[0x5e421c6bbdc0] = 0;

		*node[0x5e421c6bbe20] = ;;

		*node[0x5e421c6bbe50] = if;

		*node[0x5e421c6bbe80] = op_no;

		*node[0x5e421c6bbf10] = ==;

		*node[0x5e421c6bbeb0] = 2;

		*node[0x5e421c6bbee0] = 0;

		*node[0x5e421c6bbf40] = ;;

		*node[0x5e421c6bbf70] = print;

		*node[0x5e421c6bbfa0] = 9;

		*node[0x5e421c6bbfd0] = else;

		*node[0x5e421c6bc000] = op_no;

		*node[0x5e421c6bc030] = ;;

		*node[0x5e421c6bc060] = print;

		*node[0x5e421c6bc090] = 7;

		*node[0x5e421c6bc0c0] = else;

		*node[0x5e421c6bc0f0] = op_no;

		*node[0x5e421c6bc120] = ;;

		*node[0x5e421c6bc270] = =;

		*node[0x5e421c6bc150] = 10;

		*node[0x5e421c6bc240] = -;

		*node[0x5e421c6bc180] = 0;

		*node[0x5e421c6bc210] = /;

		*node[0x5e421c6bc1b0] = 2;

		*node[0x5e421c6bc1e0] = 1;

		*node[0x5e421c6bc2a0] = ;;

		*node[0x5e421c6bc2d0] = print;

		*node[0x5e421c6bc300] = 8;

		*node[0x5e421c6bc330] = ;;

		*node[0x5e421c6bc360] = print;

		*node[0x5e421c6bc390] = 10;

		*node[0x5e421c6bc3c0] = ;;

		*node[0x5e421c6bc3f0] = return;

		*node[0x5e421c6bc420] = 0;

		*node[0x5e421c6bc450] = ;;

		*node[0x5e421c6bc4d0] = 6;

		*node[0x5e421c6bc500] = 1;

		*node[0x5e421c6bc530] = 2;

		*node[0x5e421c6bc560] = 3;

		*node[0x5e421c6bc5c0] = ;;

		*node[0x5e421c6bc6b0] = =;

		*node[0x5e421c6bc5f0] = 7;

		*node[0x5e421c6bc680] = -;

		*node[0x5e421c6bc620] = 0;

		*node[0x5e421c6bc650] = 1;

		*node[0x5e421c6bc6e0] = ;;

		*node[0x5e421c6bc7c0] = =;

		*node[0x5e421c6bc710] = 8;

		*node[0x5e421c6bc790] = 1;

		*node[0x5e421c6bc7f0] = ;;

		*node[0x5e421c6bc880] = =;

		*node[0x5e421c6bc820] = 11;

		*node[0x5e421c6bc850] = 2;

		*node[0x5e421c6bc8b0] = ;;

		*node[0x5e421c6bc8e0] = if;

		*node[0x5e421c6bc910] = op_no;

		*node[0x5e421c6bc9a0] = ==;

		*node[0x5e421c6bc940] = 3;

		*node[0x5e421c6bc970] = 0;

		*node[0x5e421c6bc9d0] = ;;

		*node[0x5e421c6bca60] = =;

		*node[0x5e421c6bca00] = 12;

		*node[0x5e421c6bca30] = 0;

		*node[0x5e421c6bca90] = ;;

		*node[0x5e421c6bcbe0] = =;

		*node[0x5e421c6bcac0] = 13;

		*node[0x5e421c6bcbb0] = -;

		*node[0x5e421c6bcaf0] = 0;

		*node[0x5e421c6bcb80] = /;

		*node[0x5e421c6bcb20] = 2;

		*node[0x5e421c6bcb50] = 1;

		*node[0x5e421c6bcc10] = ;;

		*node[0x5e421c6bcc40] = print;

		*node[0x5e421c6bcc70] = 11;

		*node[0x5e421c6bcca0] = ;;

		*node[0x5e421c6bccd0] = print;

		*node[0x5e421c6bcd00] = 12;

		*node[0x5e421c6bcd30] = 13;

		*node[0x5e421c6bcd60] = else;

		*node[0x5e421c6bcd90] = op_no;

		*node[0x5e421c6bcdc0] = ;;

		*node[0x5e421c6bd060] = =;

		*node[0x5e421c6bcdf0] = 14;

		*node[0x5e421c6bd030] = -;

		*node[0x5e421c6bcf10] = *;

		*node[0x5e421c6bceb0] = 2;

		*node[0x5e421c6bcee0] = 2;

		*node[0x5e421c6bd000] = *;

		*node[0x5e421c6bcfa0] = *;

		*node[0x5e421c6bcf40] = 4;

		*node[0x5e421c6bcf70] = 1;

		*node[0x5e421c6bcfd0] = 3;

		*node[0x5e421c6bd090] = ;;

		*node[0x5e421c6bd0c0] = if;

		*node[0x5e421c6bd0f0] = op_no;

		*node[0x5e421c6bd180] = >;

		*node[0x5e421c6bd120] = 14;

		*node[0x5e421c6bd150] = 0;

		*node[0x5e421c6bd1b0] = ;;

		*node[0x5e421c6bd270] = =;

		*node[0x5e421c6bd1e0] = 15;

		*node[0x5e421c6bd240] = sqrt;

		*node[0x5e421c6bd210] = 14;

		*node[0x5e421c6bd2a0] = ;;

		*node[0x5e421c6bd4b0] = =;

		*node[0x5e421c6bd2d0] = 12;

		*node[0x5e421c6bd480] = -;

		*node[0x5e421c6bd360] = -;

		*node[0x5e421c6bd300] = 0;

		*node[0x5e421c6bd330] = 2;

		*node[0x5e421c6bd450] = *;

		*node[0x5e421c6bd3f0] = /;

		*node[0x5e421c6bd390] = 15;

		*node[0x5e421c6bd3c0] = 2;

		*node[0x5e421c6bd420] = 1;

		*node[0x5e421c6bd4e0] = ;;

		*node[0x5e421c6bd6f0] = =;

		*node[0x5e421c6bd510] = 13;

		*node[0x5e421c6bd6c0] = +;

		*node[0x5e421c6bd5a0] = -;

		*node[0x5e421c6bd540] = 0;

		*node[0x5e421c6bd570] = 2;

		*node[0x5e421c6bd690] = *;

		*node[0x5e421c6bd630] = /;

		*node[0x5e421c6bd5d0] = 15;

		*node[0x5e421c6bd600] = 2;

		*node[0x5e421c6bd660] = 1;

		*node[0x5e421c6bd720] = ;;

		*node[0x5e421c6bd750] = print;

		*node[0x5e421c6bd780] = 11;

		*node[0x5e421c6bd7b0] = ;;

		*node[0x5e421c6bd7e0] = print;

		*node[0x5e421c6bd810] = 12;

		*node[0x5e421c6bd840] = 13;

		*node[0x5e421c6bd870] = elseif;

		*node[0x5e421c6bd8a0] = op_no;

		*node[0x5e421c6bd930] = ==;

		*node[0x5e421c6bd8d0] = 14;

		*node[0x5e421c6bd900] = 0;

		*node[0x5e421c6bd960] = ;;

		*node[0x5e421c6bdb10] = =;

		*node[0x5e421c6bd990] = 10;

		*node[0x5e421c6bdae0] = -;

		*node[0x5e421c6bd9c0] = 0;

		*node[0x5e421c6bdab0] = *;

		*node[0x5e421c6bda50] = /;

		*node[0x5e421c6bd9f0] = 2;

		*node[0x5e421c6bda20] = 2;

		*node[0x5e421c6bda80] = 1;

		*node[0x5e421c6bdb40] = ;;

		*node[0x5e421c6bdb70] = print;

		*node[0x5e421c6bdba0] = 8;

		*node[0x5e421c6bdbd0] = ;;

		*node[0x5e421c6bdc00] = print;

		*node[0x5e421c6bdc30] = 10;

		*node[0x5e421c6bdc60] = else;

		*node[0x5e421c6bdc90] = op_no;

		*node[0x5e421c6bdcc0] = ;;

		*node[0x5e421c6bdcf0] = print;

		*node[0x5e421c6bdd20] = 7;

		*node[0x5e421c6bdd50] = ;;

		*node[0x5e421c6bdd80] = return;

		*node[0x5e421c6bddb0] = 0;

		*node[0x5e421c6bdde0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd6815ffa0] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x64564f343fd0] = ;;

		*node[0x64564f344000] = 0;

		*node[0x64564f344030] = ;;

		*node[0x64564f344060] = input;

		*node[0x64564f344090] = 1;

		*node[0x64564f3440c0] = 2;

		*node[0x64564f3440f0] = 3;

		*node[0x64564f344120] = ;;

		*node[0x64564f344180] = 1;

		*node[0x64564f3441b0] = 2;

		*node[0x64564f3441e0] = 3;

		*node[0x64564f344210] = ;;

		*node[0x64564f344240] = 4;

		*node[0x64564f344270] = 1;

		*node[0x64564f3442a0] = 2;

		*node[0x64564f3442d0] = 3;

		*node[0x64564f344300] = ;;

		*node[0x64564f344330] = if;

		*node[0x64564f344360] = op_no;

		*node[0x64564f344390] = ==;

		*node[0x64564f3443c0] = 1;

		*node[0x64564f3443f0] = 0;

		*node[0x64564f344420] = ;;

		*node[0x64564f344480] = 2;

		*node[0x64564f3444b0] = 3;

		*node[0x64564f3444e0] = else;

		*node[0x64564f344510] = op_no;

		*node[0x64564f344540] = ;;

		*node[0x64564f3445a0] = 1;

		*node[0x64564f3445d0] = 2;

		*node[0x64564f344600] = 3;

		*node[0x64564f344630] = ;;

		*node[0x64564f344660] = 5;

		*node[0x64564f344690] = 1;

		*node[0x64564f3446c0] = 2;

		*node[0x64564f3446f0] = ;;

		*node[0x64564f344720] = =;

		*node[0x64564f344750] = 7;

		*node[0x64564f346b20] = -1;

		*node[0x64564f344810] = ;;

		*node[0x64564f344840] = =;

		*node[0x64564f344870] = 8;

		*node[0x64564f3448a0] = 1;

		*node[0x64564f3448d0] = ;;

		*node[0x64564f344900] = =;

		*node[0x64564f344930] = 9;

		*node[0x64564f344960] = 1000;

		*node[0x64564f344990] = ;;

		*node[0x64564f3449c0] = if;

		*node[0x64564f3449f0] = op_no;

		*node[0x64564f344a20] = ==;

		*node[0x64564f344a50] = 1;

		*node[0x64564f344a80] = 0;

		*node[0x64564f344ab0] = ;;

		*node[0x64564f344ae0] = if;

		*node[0x64564f344b10] = op_no;

		*node[0x64564f344b40] = ==;

		*node[0x64564f344b70] = 2;

		*node[0x64564f344ba0] = 0;

		*node[0x64564f344bd0] = ;;

		*node[0x64564f344c00] = print;

		*node[0x64564f344c30] = 9;

		*node[0x64564f344c60] = else;

		*node[0x64564f344c90] = op_no;

		*node[0x64564f344cc0] = ;;

		*node[0x64564f344cf0] = print;

		*node[0x64564f344d20] = 7;

		*node[0x64564f344d50] = else;

		*node[0x64564f344d80] = op_no;

		*node[0x64564f344db0] = ;;

		*node[0x64564f344de0] = =;

		*node[0x64564f344e10] = 10;

		*node[0x64564f344e40] = -;

		*node[0x64564f344e70] = 0;

		*node[0x64564f344ea0] = /;

		*node[0x64564f344ed0] = 2;

		*node[0x64564f344f00] = 1;

		*node[0x64564f344f30] = ;;

		*node[0x64564f344f60] = print;

		*node[0x64564f344f90] = 8;

		*node[0x64564f344fc0] = ;;

		*node[0x64564f344ff0] = print;

		*node[0x64564f345020] = 10;

		*node[0x64564f345050] = ;;

		*node[0x64564f345080] = return;

		*node[0x64564f3450b0] = 0;

		*node[0x64564f3450e0] = ;;

		*node[0x64564f345110] = 6;

		*node[0x64564f345140] = 1;

		*node[0x64564f345170] = 2;

		*node[0x64564f3451a0] = 3;

		*node[0x64564f3451d0] = ;;

		*node[0x64564f345200] = =;

		*node[0x64564f345230] = 7;

		*node[0x64564f346b50] = -1;

		*node[0x64564f3452f0] = ;;

		*node[0x64564f345320] = =;

		*node[0x64564f345350] = 8;

		*node[0x64564f345380] = 1;

		*node[0x64564f3453b0] = ;;

		*node[0x64564f3453e0] = =;

		*node[0x64564f345410] = 11;

		*node[0x64564f345440] = 2;

		*node[0x64564f345470] = ;;

		*node[0x64564f3454a0] = if;

		*node[0x64564f3454d0] = op_no;

		*node[0x64564f345500] = ==;

		*node[0x64564f345530] = 3;

		*node[0x64564f345560] = 0;

		*node[0x64564f345590] = ;;

		*node[0x64564f3455c0] = =;

		*node[0x64564f3455f0] = 12;

		*node[0x64564f345620] = 0;

		*node[0x64564f345650] = ;;

		*node[0x64564f345680] = =;

		*node[0x64564f3456b0] = 13;

		*node[0x64564f3456e0] = -;

		*node[0x64564f345710] = 0;

		*node[0x64564f345740] = /;

		*node[0x64564f345770] = 2;

		*node[0x64564f3457a0] = 1;

		*node[0x64564f3457d0] = ;;

		*node[0x64564f345800] = print;

		*node[0x64564f345830] = 11;

		*node[0x64564f345860] = ;;

		*node[0x64564f345890] = print;

		*node[0x64564f3458c0] = 12;

		*node[0x64564f3458f0] = 13;

		*node[0x64564f345920] = else;

		*node[0x64564f345950] = op_no;

		*node[0x64564f345980] = ;;

		*node[0x64564f3459b0] = =;

		*node[0x64564f3459e0] = 14;

		*node[0x64564f345a10] = -;

		*node[0x64564f345a40] = *;

		*node[0x64564f345a70] = 2;

		*node[0x64564f345aa0] = 2;

		*node[0x64564f345ad0] = *;

		*node[0x64564f345b00] = *;

		*node[0x64564f345b30] = 4;

		*node[0x64564f345b60] = 1;

		*node[0x64564f345b90] = 3;

		*node[0x64564f345bc0] = ;;

		*node[0x64564f345bf0] = if;

		*node[0x64564f345c20] = op_no;

		*node[0x64564f345c50] = >;

		*node[0x64564f345c80] = 14;

		*node[0x64564f345cb0] = 0;

		*node[0x64564f345ce0] = ;;

		*node[0x64564f345d10] = =;

		*node[0x64564f345d40] = 15;

		*node[0x64564f345d70] = sqrt;

		*node[0x64564f345da0] = 14;

		*node[0x64564f345dd0] = ;;

		*node[0x64564f345e00] = =;

		*node[0x64564f345e30] = 12;

		*node[0x64564f345e60] = -;

		*node[0x64564f345e90] = -;

		*node[0x64564f345ec0] = 0;

		*node[0x64564f345ef0] = 2;

		*node[0x64564f345f20] = *;

		*node[0x64564f345f50] = /;

		*node[0x64564f345f80] = 15;

		*node[0x64564f345fb0] = 2;

		*node[0x64564f345fe0] = 1;

		*node[0x64564f346010] = ;;

		*node[0x64564f346040] = =;

		*node[0x64564f346070] = 13;

		*node[0x64564f3460a0] = +;

		*node[0x64564f3460d0] = -;

		*node[0x64564f346100] = 0;

		*node[0x64564f346130] = 2;

		*node[0x64564f346160] = *;

		*node[0x64564f346190] = /;

		*node[0x64564f3461c0] = 15;

		*node[0x64564f3461f0] = 2;

		*node[0x64564f346220] = 1;

		*node[0x64564f346250] = ;;

		*node[0x64564f346280] = print;

		*node[0x64564f3462b0] = 11;

		*node[0x64564f3462e0] = ;;

		*node[0x64564f346310] = print;

		*node[0x64564f346340] = 12;

		*node[0x64564f346370] = 13;

		*node[0x64564f3463a0] = elseif;

		*node[0x64564f3463d0] = op_no;

		*node[0x64564f346400] = ==;

		*node[0x64564f346430] = 14;

		*node[0x64564f346460] = 0;

		*node[0x64564f346490] = ;;

		*node[0x64564f3464c0] = =;

		*node[0x64564f3464f0] = 10;

		*node[0x64564f346520] = -;

		*node[0x64564f346550] = 0;

		*node[0x64564f346580] = *;

		*node[0x64564f3465b0] = /;

		*node[0x64564f3465e0] = 2;

		*node[0x64564f346610] = 2;

		*node[0x64564f346640] = 1;

		*node[0x64564f346670] = ;;

		*node[0x64564f3466a0] = print;

		*node[0x64564f3466d0] = 8;

		*node[0x64564f346700] = ;;

		*node[0x64564f346730] = print;

		*node[0x64564f346760] = 10;

		*node[0x64564f346790] = else;

		*node[0x64564f3467c0] = op_no;

		*node[0x64564f3467f0] = ;;

		*node[0x64564f346820] = print;

		*node[0x64564f346850] = 7;

		*node[0x64564f346880] = ;;

		*node[0x64564f3468b0] = return;

		*node[0x64564f3468e0] = 0;

		*node[0x64564f346910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcac97b820] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58540e3890f0] = ;;

		*node[0x58540e389170] = 0;

		*node[0x58540e3891a0] = ;;

		*node[0x58540e3891d0] = input;

		*node[0x58540e389200] = 1;

		*node[0x58540e389230] = 2;

		*node[0x58540e389260] = 3;

		*node[0x58540e3892c0] = ;;

		*node[0x58540e389320] = 1;

		*node[0x58540e389350] = 2;

		*node[0x58540e389380] = 3;

		*node[0x58540e3893b0] = ;;

		*node[0x58540e389430] = 4;

		*node[0x58540e389460] = 1;

		*node[0x58540e389490] = 2;

		*node[0x58540e3894c0] = 3;

		*node[0x58540e389520] = ;;

		*node[0x58540e389550] = if;

		*node[0x58540e389580] = op_no;

		*node[0x58540e389610] = ==;

		*node[0x58540e3895b0] = 1;

		*node[0x58540e3895e0] = 0;

		*node[0x58540e389640] = ;;

		*node[0x58540e3896a0] = 2;

		*node[0x58540e3896d0] = 3;

		*node[0x58540e389700] = else;

		*node[0x58540e389730] = op_no;

		*node[0x58540e389760] = ;;

		*node[0x58540e389810] = 1;

		*node[0x58540e389840] = 2;

		*node[0x58540e389870] = 3;

		*node[0x58540e3898a0] = ;;

		*node[0x58540e389920] = 5;

		*node[0x58540e389980] = 1;

		*node[0x58540e3899b0] = 2;

		*node[0x58540e3899e0] = ;;

		*node[0x58540e389b00] = =;

		*node[0x58540e389a10] = 7;

		*node[0x58540e389ad0] = -;

		*node[0x58540e389a70] = 0;

		*node[0x58540e389aa0] = 1;

		*node[0x58540e389b30] = ;;

		*node[0x58540e389bc0] = =;

		*node[0x58540e389b60] = 8;

		*node[0x58540e389b90] = 1;

		*node[0x58540e389bf0] = ;;

		*node[0x58540e389cd0] = =;

		*node[0x58540e389c20] = 9;

		*node[0x58540e389ca0] = 1000;

		*node[0x58540e389d00] = ;;

		*node[0x58540e389d30] = if;

		*node[0x58540e389d60] = op_no;

		*node[0x58540e389df0] = ==;

		*node[0x58540e389d90] = 1;

		*node[0x58540e389dc0] = 0;

		*node[0x58540e389e20] = ;;

		*node[0x58540e389e50] = if;

		*node[0x58540e389e80] = op_no;

		*node[0x58540e389f10] = ==;

		*node[0x58540e389eb0] = 2;

		*node[0x58540e389ee0] = 0;

		*node[0x58540e389f40] = ;;

		*node[0x58540e389f70] = print;

		*node[0x58540e389fa0] = 9;

		*node[0x58540e389fd0] = else;

		*node[0x58540e38a000] = op_no;

		*node[0x58540e38a030] = ;;

		*node[0x58540e38a060] = print;

		*node[0x58540e38a090] = 7;

		*node[0x58540e38a0c0] = else;

		*node[0x58540e38a0f0] = op_no;

		*node[0x58540e38a120] = ;;

		*node[0x58540e38a270] = =;

		*node[0x58540e38a150] = 10;

		*node[0x58540e38a240] = -;

		*node[0x58540e38a180] = 0;

		*node[0x58540e38a210] = /;

		*node[0x58540e38a1b0] = 2;

		*node[0x58540e38a1e0] = 1;

		*node[0x58540e38a2a0] = ;;

		*node[0x58540e38a2d0] = print;

		*node[0x58540e38a300] = 8;

		*node[0x58540e38a330] = ;;

		*node[0x58540e38a360] = print;

		*node[0x58540e38a390] = 10;

		*node[0x58540e38a3c0] = ;;

		*node[0x58540e38a3f0] = return;

		*node[0x58540e38a420] = 0;

		*node[0x58540e38a450] = ;;

		*node[0x58540e38a4d0] = 6;

		*node[0x58540e38a500] = 1;

		*node[0x58540e38a530] = 2;

		*node[0x58540e38a560] = 3;

		*node[0x58540e38a5c0] = ;;

		*node[0x58540e38a6b0] = =;

		*node[0x58540e38a5f0] = 7;

		*node[0x58540e38a680] = -;

		*node[0x58540e38a620] = 0;

		*node[0x58540e38a650] = 1;

		*node[0x58540e38a6e0] = ;;

		*node[0x58540e38a7c0] = =;

		*node[0x58540e38a710] = 8;

		*node[0x58540e38a790] = 1;

		*node[0x58540e38a7f0] = ;;

		*node[0x58540e38a880] = =;

		*node[0x58540e38a820] = 11;

		*node[0x58540e38a850] = 2;

		*node[0x58540e38a8b0] = ;;

		*node[0x58540e38a8e0] = if;

		*node[0x58540e38a910] = op_no;

		*node[0x58540e38a9a0] = ==;

		*node[0x58540e38a940] = 3;

		*node[0x58540e38a970] = 0;

		*node[0x58540e38a9d0] = ;;

		*node[0x58540e38aa60] = =;

		*node[0x58540e38aa00] = 12;

		*node[0x58540e38aa30] = 0;

		*node[0x58540e38aa90] = ;;

		*node[0x58540e38abe0] = =;

		*node[0x58540e38aac0] = 13;

		*node[0x58540e38abb0] = -;

		*node[0x58540e38aaf0] = 0;

		*node[0x58540e38ab80] = /;

		*node[0x58540e38ab20] = 2;

		*node[0x58540e38ab50] = 1;

		*node[0x58540e38ac10] = ;;

		*node[0x58540e38ac40] = print;

		*node[0x58540e38ac70] = 11;

		*node[0x58540e38aca0] = ;;

		*node[0x58540e38acd0] = print;

		*node[0x58540e38ad00] = 12;

		*node[0x58540e38ad30] = 13;

		*node[0x58540e38ad60] = else;

		*node[0x58540e38ad90] = op_no;

		*node[0x58540e38adc0] = ;;

		*node[0x58540e38b060] = =;

		*node[0x58540e38adf0] = 14;

		*node[0x58540e38b030] = -;

		*node[0x58540e38af10] = *;

		*node[0x58540e38aeb0] = 2;

		*node[0x58540e38aee0] = 2;

		*node[0x58540e38b000] = *;

		*node[0x58540e38afa0] = *;

		*node[0x58540e38af40] = 4;

		*node[0x58540e38af70] = 1;

		*node[0x58540e38afd0] = 3;

		*node[0x58540e38b090] = ;;

		*node[0x58540e38b0c0] = if;

		*node[0x58540e38b0f0] = op_no;

		*node[0x58540e38b180] = >;

		*node[0x58540e38b120] = 14;

		*node[0x58540e38b150] = 0;

		*node[0x58540e38b1b0] = ;;

		*node[0x58540e38b270] = =;

		*node[0x58540e38b1e0] = 15;

		*node[0x58540e38b240] = sqrt;

		*node[0x58540e38b210] = 14;

		*node[0x58540e38b2a0] = ;;

		*node[0x58540e38b4b0] = =;

		*node[0x58540e38b2d0] = 12;

		*node[0x58540e38b480] = -;

		*node[0x58540e38b360] = -;

		*node[0x58540e38b300] = 0;

		*node[0x58540e38b330] = 2;

		*node[0x58540e38b450] = *;

		*node[0x58540e38b3f0] = /;

		*node[0x58540e38b390] = 15;

		*node[0x58540e38b3c0] = 2;

		*node[0x58540e38b420] = 1;

		*node[0x58540e38b4e0] = ;;

		*node[0x58540e38b6f0] = =;

		*node[0x58540e38b510] = 13;

		*node[0x58540e38b6c0] = +;

		*node[0x58540e38b5a0] = -;

		*node[0x58540e38b540] = 0;

		*node[0x58540e38b570] = 2;

		*node[0x58540e38b690] = *;

		*node[0x58540e38b630] = /;

		*node[0x58540e38b5d0] = 15;

		*node[0x58540e38b600] = 2;

		*node[0x58540e38b660] = 1;

		*node[0x58540e38b720] = ;;

		*node[0x58540e38b750] = print;

		*node[0x58540e38b780] = 11;

		*node[0x58540e38b7b0] = ;;

		*node[0x58540e38b7e0] = print;

		*node[0x58540e38b810] = 12;

		*node[0x58540e38b840] = 13;

		*node[0x58540e38b870] = elseif;

		*node[0x58540e38b8a0] = op_no;

		*node[0x58540e38b930] = ==;

		*node[0x58540e38b8d0] = 14;

		*node[0x58540e38b900] = 0;

		*node[0x58540e38b960] = ;;

		*node[0x58540e38bb10] = =;

		*node[0x58540e38b990] = 10;

		*node[0x58540e38bae0] = -;

		*node[0x58540e38b9c0] = 0;

		*node[0x58540e38bab0] = *;

		*node[0x58540e38ba50] = /;

		*node[0x58540e38b9f0] = 2;

		*node[0x58540e38ba20] = 2;

		*node[0x58540e38ba80] = 1;

		*node[0x58540e38bb40] = ;;

		*node[0x58540e38bb70] = print;

		*node[0x58540e38bba0] = 8;

		*node[0x58540e38bbd0] = ;;

		*node[0x58540e38bc00] = print;

		*node[0x58540e38bc30] = 10;

		*node[0x58540e38bc60] = else;

		*node[0x58540e38bc90] = op_no;

		*node[0x58540e38bcc0] = ;;

		*node[0x58540e38bcf0] = print;

		*node[0x58540e38bd20] = 7;

		*node[0x58540e38bd50] = ;;

		*node[0x58540e38bd80] = return;

		*node[0x58540e38bdb0] = 0;

		*node[0x58540e38bde0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe72e88b30] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5774a34610f0] = ;;

		*node[0x5774a3461170] = 0;

		*node[0x5774a34611a0] = ;;

		*node[0x5774a34611d0] = input;

		*node[0x5774a3461200] = 1;

		*node[0x5774a3461230] = 2;

		*node[0x5774a3461260] = 3;

		*node[0x5774a34612c0] = ;;

		*node[0x5774a3461320] = 1;

		*node[0x5774a3461350] = 2;

		*node[0x5774a3461380] = 3;

		*node[0x5774a34613b0] = ;;

		*node[0x5774a3461430] = 4;

		*node[0x5774a3461460] = 1;

		*node[0x5774a3461490] = 2;

		*node[0x5774a34614c0] = 3;

		*node[0x5774a3461520] = ;;

		*node[0x5774a3461550] = if;

		*node[0x5774a3461580] = op_no;

		*node[0x5774a3461610] = ==;

		*node[0x5774a34615b0] = 1;

		*node[0x5774a34615e0] = 0;

		*node[0x5774a3461640] = ;;

		*node[0x5774a34616a0] = 2;

		*node[0x5774a34616d0] = 3;

		*node[0x5774a3461700] = else;

		*node[0x5774a3461730] = op_no;

		*node[0x5774a3461760] = ;;

		*node[0x5774a3461810] = 1;

		*node[0x5774a3461840] = 2;

		*node[0x5774a3461870] = 3;

		*node[0x5774a34618a0] = ;;

		*node[0x5774a3461920] = 5;

		*node[0x5774a3461980] = 1;

		*node[0x5774a34619b0] = 2;

		*node[0x5774a34619e0] = ;;

		*node[0x5774a3461b00] = =;

		*node[0x5774a3461a10] = 7;

		*node[0x5774a3461ad0] = -;

		*node[0x5774a3461a70] = 0;

		*node[0x5774a3461aa0] = 1;

		*node[0x5774a3461b30] = ;;

		*node[0x5774a3461bc0] = =;

		*node[0x5774a3461b60] = 8;

		*node[0x5774a3461b90] = 1;

		*node[0x5774a3461bf0] = ;;

		*node[0x5774a3461cd0] = =;

		*node[0x5774a3461c20] = 9;

		*node[0x5774a3461ca0] = 1000;

		*node[0x5774a3461d00] = ;;

		*node[0x5774a3461d30] = if;

		*node[0x5774a3461d60] = op_no;

		*node[0x5774a3461df0] = ==;

		*node[0x5774a3461d90] = 1;

		*node[0x5774a3461dc0] = 0;

		*node[0x5774a3461e20] = ;;

		*node[0x5774a3461e50] = if;

		*node[0x5774a3461e80] = op_no;

		*node[0x5774a3461f10] = ==;

		*node[0x5774a3461eb0] = 2;

		*node[0x5774a3461ee0] = 0;

		*node[0x5774a3461f40] = ;;

		*node[0x5774a3461f70] = print;

		*node[0x5774a3461fa0] = 9;

		*node[0x5774a3461fd0] = else;

		*node[0x5774a3462000] = op_no;

		*node[0x5774a3462030] = ;;

		*node[0x5774a3462060] = print;

		*node[0x5774a3462090] = 7;

		*node[0x5774a34620c0] = else;

		*node[0x5774a34620f0] = op_no;

		*node[0x5774a3462120] = ;;

		*node[0x5774a3462270] = =;

		*node[0x5774a3462150] = 10;

		*node[0x5774a3462240] = -;

		*node[0x5774a3462180] = 0;

		*node[0x5774a3462210] = /;

		*node[0x5774a34621b0] = 2;

		*node[0x5774a34621e0] = 1;

		*node[0x5774a34622a0] = ;;

		*node[0x5774a34622d0] = print;

		*node[0x5774a3462300] = 8;

		*node[0x5774a3462330] = ;;

		*node[0x5774a3462360] = print;

		*node[0x5774a3462390] = 10;

		*node[0x5774a34623c0] = ;;

		*node[0x5774a34623f0] = return;

		*node[0x5774a3462420] = 0;

		*node[0x5774a3462450] = ;;

		*node[0x5774a34624d0] = 6;

		*node[0x5774a3462500] = 1;

		*node[0x5774a3462530] = 2;

		*node[0x5774a3462560] = 3;

		*node[0x5774a34625c0] = ;;

		*node[0x5774a34626b0] = =;

		*node[0x5774a34625f0] = 7;

		*node[0x5774a3462680] = -;

		*node[0x5774a3462620] = 0;

		*node[0x5774a3462650] = 1;

		*node[0x5774a34626e0] = ;;

		*node[0x5774a34627c0] = =;

		*node[0x5774a3462710] = 8;

		*node[0x5774a3462790] = 1;

		*node[0x5774a34627f0] = ;;

		*node[0x5774a3462880] = =;

		*node[0x5774a3462820] = 11;

		*node[0x5774a3462850] = 2;

		*node[0x5774a34628b0] = ;;

		*node[0x5774a34628e0] = if;

		*node[0x5774a3462910] = op_no;

		*node[0x5774a34629a0] = ==;

		*node[0x5774a3462940] = 3;

		*node[0x5774a3462970] = 0;

		*node[0x5774a34629d0] = ;;

		*node[0x5774a3462a60] = =;

		*node[0x5774a3462a00] = 12;

		*node[0x5774a3462a30] = 0;

		*node[0x5774a3462a90] = ;;

		*node[0x5774a3462be0] = =;

		*node[0x5774a3462ac0] = 13;

		*node[0x5774a3462bb0] = -;

		*node[0x5774a3462af0] = 0;

		*node[0x5774a3462b80] = /;

		*node[0x5774a3462b20] = 2;

		*node[0x5774a3462b50] = 1;

		*node[0x5774a3462c10] = ;;

		*node[0x5774a3462c40] = print;

		*node[0x5774a3462c70] = 11;

		*node[0x5774a3462ca0] = ;;

		*node[0x5774a3462cd0] = print;

		*node[0x5774a3462d00] = 12;

		*node[0x5774a3462d30] = 13;

		*node[0x5774a3462d60] = else;

		*node[0x5774a3462d90] = op_no;

		*node[0x5774a3462dc0] = ;;

		*node[0x5774a3463060] = =;

		*node[0x5774a3462df0] = 14;

		*node[0x5774a3463030] = -;

		*node[0x5774a3462f10] = *;

		*node[0x5774a3462eb0] = 2;

		*node[0x5774a3462ee0] = 2;

		*node[0x5774a3463000] = *;

		*node[0x5774a3462fa0] = *;

		*node[0x5774a3462f40] = 4;

		*node[0x5774a3462f70] = 1;

		*node[0x5774a3462fd0] = 3;

		*node[0x5774a3463090] = ;;

		*node[0x5774a34630c0] = if;

		*node[0x5774a34630f0] = op_no;

		*node[0x5774a3463180] = >;

		*node[0x5774a3463120] = 14;

		*node[0x5774a3463150] = 0;

		*node[0x5774a34631b0] = ;;

		*node[0x5774a3463270] = =;

		*node[0x5774a34631e0] = 15;

		*node[0x5774a3463240] = sqrt;

		*node[0x5774a3463210] = 14;

		*node[0x5774a34632a0] = ;;

		*node[0x5774a34634b0] = =;

		*node[0x5774a34632d0] = 12;

		*node[0x5774a3463480] = -;

		*node[0x5774a3463360] = -;

		*node[0x5774a3463300] = 0;

		*node[0x5774a3463330] = 2;

		*node[0x5774a3463450] = *;

		*node[0x5774a34633f0] = /;

		*node[0x5774a3463390] = 15;

		*node[0x5774a34633c0] = 2;

		*node[0x5774a3463420] = 1;

		*node[0x5774a34634e0] = ;;

		*node[0x5774a34636f0] = =;

		*node[0x5774a3463510] = 13;

		*node[0x5774a34636c0] = +;

		*node[0x5774a34635a0] = -;

		*node[0x5774a3463540] = 0;

		*node[0x5774a3463570] = 2;

		*node[0x5774a3463690] = *;

		*node[0x5774a3463630] = /;

		*node[0x5774a34635d0] = 15;

		*node[0x5774a3463600] = 2;

		*node[0x5774a3463660] = 1;

		*node[0x5774a3463720] = ;;

		*node[0x5774a3463750] = print;

		*node[0x5774a3463780] = 11;

		*node[0x5774a34637b0] = ;;

		*node[0x5774a34637e0] = print;

		*node[0x5774a3463810] = 12;

		*node[0x5774a3463840] = 13;

		*node[0x5774a3463870] = elseif;

		*node[0x5774a34638a0] = op_no;

		*node[0x5774a3463930] = ==;

		*node[0x5774a34638d0] = 14;

		*node[0x5774a3463900] = 0;

		*node[0x5774a3463960] = ;;

		*node[0x5774a3463b10] = =;

		*node[0x5774a3463990] = 10;

		*node[0x5774a3463ae0] = -;

		*node[0x5774a34639c0] = 0;

		*node[0x5774a3463ab0] = *;

		*node[0x5774a3463a50] = /;

		*node[0x5774a34639f0] = 2;

		*node[0x5774a3463a20] = 2;

		*node[0x5774a3463a80] = 1;

		*node[0x5774a3463b40] = ;;

		*node[0x5774a3463b70] = print;

		*node[0x5774a3463ba0] = 8;

		*node[0x5774a3463bd0] = ;;

		*node[0x5774a3463c00] = print;

		*node[0x5774a3463c30] = 10;

		*node[0x5774a3463c60] = else;

		*node[0x5774a3463c90] = op_no;

		*node[0x5774a3463cc0] = ;;

		*node[0x5774a3463cf0] = print;

		*node[0x5774a3463d20] = 7;

		*node[0x5774a3463d50] = ;;

		*node[0x5774a3463d80] = return;

		*node[0x5774a3463db0] = 0;

		*node[0x5774a3463de0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd91ecd430] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e1679778510] = ;;

		*node[0x5e1679778590] = 0;

		*node[0x5e16797785c0] = ;;

		*node[0x5e16797785f0] = input;

		*node[0x5e1679778620] = 1;

		*node[0x5e1679778650] = 2;

		*node[0x5e1679778680] = 3;

		*node[0x5e16797786e0] = ;;

		*node[0x5e1679778740] = 1;

		*node[0x5e1679778770] = 2;

		*node[0x5e16797787a0] = 3;

		*node[0x5e16797787d0] = ;;

		*node[0x5e1679778850] = 4;

		*node[0x5e1679778880] = 1;

		*node[0x5e16797788b0] = 2;

		*node[0x5e16797788e0] = 3;

		*node[0x5e1679778940] = ;;

		*node[0x5e1679778970] = if;

		*node[0x5e16797789a0] = op_no;

		*node[0x5e1679778a30] = ==;

		*node[0x5e16797789d0] = 1;

		*node[0x5e1679778a00] = 0;

		*node[0x5e1679778a60] = ;;

		*node[0x5e1679778ac0] = 2;

		*node[0x5e1679778af0] = 3;

		*node[0x5e1679778b20] = else;

		*node[0x5e1679778b50] = op_no;

		*node[0x5e1679778b80] = ;;

		*node[0x5e1679778c30] = 1;

		*node[0x5e1679778c60] = 2;

		*node[0x5e1679778c90] = 3;

		*node[0x5e1679778cc0] = ;;

		*node[0x5e1679778d40] = 5;

		*node[0x5e1679778da0] = 1;

		*node[0x5e1679778dd0] = 2;

		*node[0x5e1679778e00] = ;;

		*node[0x5e1679778f20] = =;

		*node[0x5e1679778e30] = 7;

		*node[0x5e1679778ef0] = -;

		*node[0x5e1679778e90] = 0;

		*node[0x5e1679778ec0] = 1;

		*node[0x5e1679778f50] = ;;

		*node[0x5e1679778fe0] = =;

		*node[0x5e1679778f80] = 8;

		*node[0x5e1679778fb0] = 1;

		*node[0x5e1679779010] = ;;

		*node[0x5e16797790f0] = =;

		*node[0x5e1679779040] = 9;

		*node[0x5e16797790c0] = 1000;

		*node[0x5e1679779120] = ;;

		*node[0x5e1679779150] = if;

		*node[0x5e1679779180] = op_no;

		*node[0x5e1679779210] = ==;

		*node[0x5e16797791b0] = 1;

		*node[0x5e16797791e0] = 0;

		*node[0x5e1679779240] = ;;

		*node[0x5e1679779270] = if;

		*node[0x5e16797792a0] = op_no;

		*node[0x5e1679779330] = ==;

		*node[0x5e16797792d0] = 2;

		*node[0x5e1679779300] = 0;

		*node[0x5e1679779360] = ;;

		*node[0x5e1679779390] = print;

		*node[0x5e16797793c0] = 9;

		*node[0x5e16797793f0] = else;

		*node[0x5e1679779420] = op_no;

		*node[0x5e1679779450] = ;;

		*node[0x5e1679779480] = print;

		*node[0x5e16797794b0] = 7;

		*node[0x5e16797794e0] = else;

		*node[0x5e1679779510] = op_no;

		*node[0x5e1679779540] = ;;

		*node[0x5e1679779690] = =;

		*node[0x5e1679779570] = 10;

		*node[0x5e1679779660] = -;

		*node[0x5e16797795a0] = 0;

		*node[0x5e1679779630] = /;

		*node[0x5e16797795d0] = 2;

		*node[0x5e1679779600] = 1;

		*node[0x5e16797796c0] = ;;

		*node[0x5e16797796f0] = print;

		*node[0x5e1679779720] = 8;

		*node[0x5e1679779750] = ;;

		*node[0x5e1679779780] = print;

		*node[0x5e16797797b0] = 10;

		*node[0x5e16797797e0] = ;;

		*node[0x5e1679779810] = return;

		*node[0x5e1679779840] = 0;

		*node[0x5e1679779870] = ;;

		*node[0x5e16797798f0] = 6;

		*node[0x5e1679779920] = 1;

		*node[0x5e1679779950] = 2;

		*node[0x5e1679779980] = 3;

		*node[0x5e16797799e0] = ;;

		*node[0x5e1679779ad0] = =;

		*node[0x5e1679779a10] = 7;

		*node[0x5e1679779aa0] = -;

		*node[0x5e1679779a40] = 0;

		*node[0x5e1679779a70] = 1;

		*node[0x5e1679779b00] = ;;

		*node[0x5e1679779be0] = =;

		*node[0x5e1679779b30] = 8;

		*node[0x5e1679779bb0] = 1;

		*node[0x5e1679779c10] = ;;

		*node[0x5e1679779ca0] = =;

		*node[0x5e1679779c40] = 11;

		*node[0x5e1679779c70] = 2;

		*node[0x5e1679779cd0] = ;;

		*node[0x5e1679779d00] = if;

		*node[0x5e1679779d30] = op_no;

		*node[0x5e1679779dc0] = ==;

		*node[0x5e1679779d60] = 3;

		*node[0x5e1679779d90] = 0;

		*node[0x5e1679779df0] = ;;

		*node[0x5e1679779e80] = =;

		*node[0x5e1679779e20] = 12;

		*node[0x5e1679779e50] = 0;

		*node[0x5e1679779eb0] = ;;

		*node[0x5e167977a000] = =;

		*node[0x5e1679779ee0] = 13;

		*node[0x5e1679779fd0] = -;

		*node[0x5e1679779f10] = 0;

		*node[0x5e1679779fa0] = /;

		*node[0x5e1679779f40] = 2;

		*node[0x5e1679779f70] = 1;

		*node[0x5e167977a030] = ;;

		*node[0x5e167977a060] = print;

		*node[0x5e167977a090] = 11;

		*node[0x5e167977a0c0] = ;;

		*node[0x5e167977a0f0] = print;

		*node[0x5e167977a120] = 12;

		*node[0x5e167977a150] = 13;

		*node[0x5e167977a180] = else;

		*node[0x5e167977a1b0] = op_no;

		*node[0x5e167977a1e0] = ;;

		*node[0x5e167977a480] = =;

		*node[0x5e167977a210] = 14;

		*node[0x5e167977a450] = -;

		*node[0x5e167977a330] = *;

		*node[0x5e167977a2d0] = 2;

		*node[0x5e167977a300] = 2;

		*node[0x5e167977a420] = *;

		*node[0x5e167977a3c0] = *;

		*node[0x5e167977a360] = 4;

		*node[0x5e167977a390] = 1;

		*node[0x5e167977a3f0] = 3;

		*node[0x5e167977a4b0] = ;;

		*node[0x5e167977a4e0] = print;

		*node[0x5e167977a510] = 14;

		*node[0x5e167977a540] = ;;

		*node[0x5e167977a570] = if;

		*node[0x5e167977a5a0] = op_no;

		*node[0x5e167977a630] = >;

		*node[0x5e167977a5d0] = 14;

		*node[0x5e167977a600] = 0;

		*node[0x5e167977a660] = ;;

		*node[0x5e167977a720] = =;

		*node[0x5e167977a690] = 15;

		*node[0x5e167977a6f0] = sqrt;

		*node[0x5e167977a6c0] = 14;

		*node[0x5e167977a750] = ;;

		*node[0x5e167977a960] = =;

		*node[0x5e167977a780] = 12;

		*node[0x5e167977a930] = -;

		*node[0x5e167977a810] = -;

		*node[0x5e167977a7b0] = 0;

		*node[0x5e167977a7e0] = 2;

		*node[0x5e167977a900] = *;

		*node[0x5e167977a8a0] = /;

		*node[0x5e167977a840] = 15;

		*node[0x5e167977a870] = 2;

		*node[0x5e167977a8d0] = 1;

		*node[0x5e167977a990] = ;;

		*node[0x5e167977aba0] = =;

		*node[0x5e167977a9c0] = 13;

		*node[0x5e167977ab70] = +;

		*node[0x5e167977aa50] = -;

		*node[0x5e167977a9f0] = 0;

		*node[0x5e167977aa20] = 2;

		*node[0x5e167977ab40] = *;

		*node[0x5e167977aae0] = /;

		*node[0x5e167977aa80] = 15;

		*node[0x5e167977aab0] = 2;

		*node[0x5e167977ab10] = 1;

		*node[0x5e167977abd0] = ;;

		*node[0x5e167977ac00] = print;

		*node[0x5e167977ac30] = 11;

		*node[0x5e167977ac60] = ;;

		*node[0x5e167977ac90] = print;

		*node[0x5e167977acc0] = 12;

		*node[0x5e167977acf0] = 13;

		*node[0x5e167977ad20] = elseif;

		*node[0x5e167977ad50] = op_no;

		*node[0x5e167977ade0] = ==;

		*node[0x5e167977ad80] = 14;

		*node[0x5e167977adb0] = 0;

		*node[0x5e167977ae10] = ;;

		*node[0x5e167977afc0] = =;

		*node[0x5e167977ae40] = 10;

		*node[0x5e167977af90] = -;

		*node[0x5e167977ae70] = 0;

		*node[0x5e167977af60] = *;

		*node[0x5e167977af00] = /;

		*node[0x5e167977aea0] = 2;

		*node[0x5e167977aed0] = 2;

		*node[0x5e167977af30] = 1;

		*node[0x5e167977aff0] = ;;

		*node[0x5e167977b020] = print;

		*node[0x5e167977b050] = 8;

		*node[0x5e167977b080] = ;;

		*node[0x5e167977b0b0] = print;

		*node[0x5e167977b0e0] = 10;

		*node[0x5e167977b110] = else;

		*node[0x5e167977b140] = op_no;

		*node[0x5e167977b170] = ;;

		*node[0x5e167977b1a0] = print;

		*node[0x5e167977b1d0] = 7;

		*node[0x5e167977b200] = ;;

		*node[0x5e167977b230] = return;

		*node[0x5e167977b260] = 0;

		*node[0x5e167977b290] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffeddc6ccd0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x57878e24a610] = ;;

		*node[0x57878e24a690] = 0;

		*node[0x57878e24a6c0] = ;;

		*node[0x57878e24a6f0] = input;

		*node[0x57878e24a720] = 1;

		*node[0x57878e24a750] = 2;

		*node[0x57878e24a780] = 3;

		*node[0x57878e24a7e0] = ;;

		*node[0x57878e24a840] = 1;

		*node[0x57878e24a870] = 2;

		*node[0x57878e24a8a0] = 3;

		*node[0x57878e24a8d0] = ;;

		*node[0x57878e24a950] = 4;

		*node[0x57878e24a980] = 1;

		*node[0x57878e24a9b0] = 2;

		*node[0x57878e24a9e0] = 3;

		*node[0x57878e24aa40] = ;;

		*node[0x57878e24aa70] = if;

		*node[0x57878e24aaa0] = op_no;

		*node[0x57878e24ab30] = ==;

		*node[0x57878e24aad0] = 1;

		*node[0x57878e24ab00] = 0;

		*node[0x57878e24ab60] = ;;

		*node[0x57878e24abc0] = 2;

		*node[0x57878e24abf0] = 3;

		*node[0x57878e24ac20] = else;

		*node[0x57878e24ac50] = op_no;

		*node[0x57878e24ac80] = ;;

		*node[0x57878e24ad30] = 1;

		*node[0x57878e24ad60] = 2;

		*node[0x57878e24ad90] = 3;

		*node[0x57878e24adc0] = ;;

		*node[0x57878e24adf0] = return;

		*node[0x57878e24ae20] = 0;

		*node[0x57878e24ae50] = ;;

		*node[0x57878e24aed0] = 5;

		*node[0x57878e24af30] = 1;

		*node[0x57878e24af60] = 2;

		*node[0x57878e24af90] = ;;

		*node[0x57878e24b0b0] = =;

		*node[0x57878e24afc0] = 7;

		*node[0x57878e24b080] = -;

		*node[0x57878e24b020] = 0;

		*node[0x57878e24b050] = 1;

		*node[0x57878e24b0e0] = ;;

		*node[0x57878e24b170] = =;

		*node[0x57878e24b110] = 8;

		*node[0x57878e24b140] = 1;

		*node[0x57878e24b1a0] = ;;

		*node[0x57878e24b280] = =;

		*node[0x57878e24b1d0] = 9;

		*node[0x57878e24b250] = 1000;

		*node[0x57878e24b2b0] = ;;

		*node[0x57878e24b2e0] = if;

		*node[0x57878e24b310] = op_no;

		*node[0x57878e24b3a0] = ==;

		*node[0x57878e24b340] = 1;

		*node[0x57878e24b370] = 0;

		*node[0x57878e24b3d0] = ;;

		*node[0x57878e24b400] = if;

		*node[0x57878e24b430] = op_no;

		*node[0x57878e24b4c0] = ==;

		*node[0x57878e24b460] = 2;

		*node[0x57878e24b490] = 0;

		*node[0x57878e24b4f0] = ;;

		*node[0x57878e24b520] = print;

		*node[0x57878e24b550] = 9;

		*node[0x57878e24b580] = else;

		*node[0x57878e24b5b0] = op_no;

		*node[0x57878e24b5e0] = ;;

		*node[0x57878e24b610] = print;

		*node[0x57878e24b640] = 7;

		*node[0x57878e24b670] = else;

		*node[0x57878e24b6a0] = op_no;

		*node[0x57878e24b6d0] = ;;

		*node[0x57878e24b820] = =;

		*node[0x57878e24b700] = 10;

		*node[0x57878e24b7f0] = -;

		*node[0x57878e24b730] = 0;

		*node[0x57878e24b7c0] = /;

		*node[0x57878e24b760] = 2;

		*node[0x57878e24b790] = 1;

		*node[0x57878e24b850] = ;;

		*node[0x57878e24b880] = print;

		*node[0x57878e24b8b0] = 8;

		*node[0x57878e24b8e0] = ;;

		*node[0x57878e24b910] = print;

		*node[0x57878e24b940] = 10;

		*node[0x57878e24b970] = ;;

		*node[0x57878e24b9a0] = return;

		*node[0x57878e24b9d0] = 0;

		*node[0x57878e24ba00] = ;;

		*node[0x57878e24ba80] = 6;

		*node[0x57878e24bab0] = 1;

		*node[0x57878e24bae0] = 2;

		*node[0x57878e24bb10] = 3;

		*node[0x57878e24bb70] = ;;

		*node[0x57878e24bc60] = =;

		*node[0x57878e24bba0] = 7;

		*node[0x57878e24bc30] = -;

		*node[0x57878e24bbd0] = 0;

		*node[0x57878e24bc00] = 1;

		*node[0x57878e24bc90] = ;;

		*node[0x57878e24bd70] = =;

		*node[0x57878e24bcc0] = 8;

		*node[0x57878e24bd40] = 1;

		*node[0x57878e24bda0] = ;;

		*node[0x57878e24be30] = =;

		*node[0x57878e24bdd0] = 11;

		*node[0x57878e24be00] = 2;

		*node[0x57878e24be60] = ;;

		*node[0x57878e24be90] = if;

		*node[0x57878e24bec0] = op_no;

		*node[0x57878e24bf50] = ==;

		*node[0x57878e24bef0] = 3;

		*node[0x57878e24bf20] = 0;

		*node[0x57878e24bf80] = ;;

		*node[0x57878e24c010] = =;

		*node[0x57878e24bfb0] = 12;

		*node[0x57878e24bfe0] = 0;

		*node[0x57878e24c040] = ;;

		*node[0x57878e24c190] = =;

		*node[0x57878e24c070] = 13;

		*node[0x57878e24c160] = -;

		*node[0x57878e24c0a0] = 0;

		*node[0x57878e24c130] = /;

		*node[0x57878e24c0d0] = 2;

		*node[0x57878e24c100] = 1;

		*node[0x57878e24c1c0] = ;;

		*node[0x57878e24c1f0] = print;

		*node[0x57878e24c220] = 11;

		*node[0x57878e24c250] = ;;

		*node[0x57878e24c280] = print;

		*node[0x57878e24c2b0] = 12;

		*node[0x57878e24c2e0] = 13;

		*node[0x57878e24c310] = else;

		*node[0x57878e24c340] = op_no;

		*node[0x57878e24c370] = ;;

		*node[0x57878e24c610] = =;

		*node[0x57878e24c3a0] = 14;

		*node[0x57878e24c5e0] = -;

		*node[0x57878e24c4c0] = *;

		*node[0x57878e24c460] = 2;

		*node[0x57878e24c490] = 2;

		*node[0x57878e24c5b0] = *;

		*node[0x57878e24c550] = *;

		*node[0x57878e24c4f0] = 4;

		*node[0x57878e24c520] = 1;

		*node[0x57878e24c580] = 3;

		*node[0x57878e24c640] = ;;

		*node[0x57878e24c670] = print;

		*node[0x57878e24c6a0] = 14;

		*node[0x57878e24c6d0] = ;;

		*node[0x57878e24c700] = if;

		*node[0x57878e24c730] = op_no;

		*node[0x57878e24c7c0] = >;

		*node[0x57878e24c760] = 14;

		*node[0x57878e24c790] = 0;

		*node[0x57878e24c7f0] = ;;

		*node[0x57878e24c8b0] = =;

		*node[0x57878e24c820] = 15;

		*node[0x57878e24c880] = sqrt;

		*node[0x57878e24c850] = 14;

		*node[0x57878e24c8e0] = ;;

		*node[0x57878e24caf0] = =;

		*node[0x57878e24c910] = 12;

		*node[0x57878e24cac0] = -;

		*node[0x57878e24c9a0] = -;

		*node[0x57878e24c940] = 0;

		*node[0x57878e24c970] = 2;

		*node[0x57878e24ca90] = *;

		*node[0x57878e24ca30] = /;

		*node[0x57878e24c9d0] = 15;

		*node[0x57878e24ca00] = 2;

		*node[0x57878e24ca60] = 1;

		*node[0x57878e24cb20] = ;;

		*node[0x57878e24cd30] = =;

		*node[0x57878e24cb50] = 13;

		*node[0x57878e24cd00] = +;

		*node[0x57878e24cbe0] = -;

		*node[0x57878e24cb80] = 0;

		*node[0x57878e24cbb0] = 2;

		*node[0x57878e24ccd0] = *;

		*node[0x57878e24cc70] = /;

		*node[0x57878e24cc10] = 15;

		*node[0x57878e24cc40] = 2;

		*node[0x57878e24cca0] = 1;

		*node[0x57878e24cd60] = ;;

		*node[0x57878e24cd90] = print;

		*node[0x57878e24cdc0] = 11;

		*node[0x57878e24cdf0] = ;;

		*node[0x57878e24ce20] = print;

		*node[0x57878e24ce50] = 12;

		*node[0x57878e24ce80] = 13;

		*node[0x57878e24ceb0] = elseif;

		*node[0x57878e24cee0] = op_no;

		*node[0x57878e24cf70] = ==;

		*node[0x57878e24cf10] = 14;

		*node[0x57878e24cf40] = 0;

		*node[0x57878e24cfa0] = ;;

		*node[0x57878e24d150] = =;

		*node[0x57878e24cfd0] = 10;

		*node[0x57878e24d120] = -;

		*node[0x57878e24d000] = 0;

		*node[0x57878e24d0f0] = *;

		*node[0x57878e24d090] = /;

		*node[0x57878e24d030] = 2;

		*node[0x57878e24d060] = 2;

		*node[0x57878e24d0c0] = 1;

		*node[0x57878e24d180] = ;;

		*node[0x57878e24d1b0] = print;

		*node[0x57878e24d1e0] = 8;

		*node[0x57878e24d210] = ;;

		*node[0x57878e24d240] = print;

		*node[0x57878e24d270] = 10;

		*node[0x57878e24d2a0] = else;

		*node[0x57878e24d2d0] = op_no;

		*node[0x57878e24d300] = ;;

		*node[0x57878e24d330] = print;

		*node[0x57878e24d360] = 7;

		*node[0x57878e24d390] = ;;

		*node[0x57878e24d3c0] = return;

		*node[0x57878e24d3f0] = 0;

		*node[0x57878e24d420] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcc7477ec0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5d4a72aafa30] = ;;

		*node[0x5d4a72aafab0] = 0;

		*node[0x5d4a72aafae0] = ;;

		*node[0x5d4a72aafb10] = input;

		*node[0x5d4a72aafb40] = 1;

		*node[0x5d4a72aafb70] = ;;

		*node[0x5d4a72aafc00] = =;

		*node[0x5d4a72aafba0] = 2;

		*node[0x5d4a72aafbd0] = 1;

		*node[0x5d4a72aafc30] = ;;

		*node[0x5d4a72aafc60] = if;

		*node[0x5d4a72aafc90] = op_no;

		*node[0x5d4a72aafde0] = ||;

		*node[0x5d4a72aafd20] = <;

		*node[0x5d4a72aafcc0] = 1;

		*node[0x5d4a72aafcf0] = 0;

		*node[0x5d4a72aafdb0] = ==;

		*node[0x5d4a72aafd50] = 1;

		*node[0x5d4a72aafd80] = 0;

		*node[0x5d4a72aafe10] = ;;

		*node[0x5d4a72aafe40] = print;

		*node[0x5d4a72aafe70] = 2;

		*node[0x5d4a72aafea0] = elseif;

		*node[0x5d4a72aafed0] = op_no;

		*node[0x5d4a72aaff60] = ==;

		*node[0x5d4a72aaff00] = 1;

		*node[0x5d4a72aaff30] = 1;

		*node[0x5d4a72aaff90] = ;;

		*node[0x5d4a72aaffc0] = print;

		*node[0x5d4a72aafff0] = 1;

		*node[0x5d4a72ab0020] = else;

		*node[0x5d4a72ab0050] = op_no;

		*node[0x5d4a72ab0080] = ;;

		*node[0x5d4a72ab0170] = =;

		*node[0x5d4a72ab00b0] = 3;

		*node[0x5d4a72ab0140] = 1;

		*node[0x5d4a72ab01a0] = ;;

		*node[0x5d4a72ab01d0] = print;

		*node[0x5d4a72ab0200] = 3;

		*node[0x5d4a72ab0230] = ;;

		*node[0x5d4a72ab02b0] = 4;

		*node[0x5d4a72ab02e0] = 1;

		*node[0x5d4a72ab0310] = ;;

		*node[0x5d4a72ab0340] = if;

		*node[0x5d4a72ab0370] = op_no;

		*node[0x5d4a72ab0400] = ==;

		*node[0x5d4a72ab03a0] = 1;

		*node[0x5d4a72ab03d0] = 1;

		*node[0x5d4a72ab0430] = ;;

		*node[0x5d4a72ab0460] = return;

		*node[0x5d4a72ab0490] = 1;

		*node[0x5d4a72ab04c0] = ;;

		*node[0x5d4a72ab05b0] = =;

		*node[0x5d4a72ab04f0] = 5;

		*node[0x5d4a72ab0580] = -;

		*node[0x5d4a72ab0520] = 1;

		*node[0x5d4a72ab0550] = 1;

		*node[0x5d4a72ab05e0] = ;;

		*node[0x5d4a72ab0730] = =;

		*node[0x5d4a72ab0610] = 1;

		*node[0x5d4a72ab0700] = *;

		*node[0x5d4a72ab0640] = 1;

		*node[0x5d4a72ab06d0] = 5;

		*node[0x5d4a72ab0760] = ;;

		*node[0x5d4a72ab0790] = return;

		*node[0x5d4a72ab07c0] = 1;

		*node[0x5d4a72ab07f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd75b5dd10] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58bfbb510610] = ;;

		*node[0x58bfbb510690] = 0;

		*node[0x58bfbb5106c0] = ;;

		*node[0x58bfbb5106f0] = input;

		*node[0x58bfbb510720] = 1;

		*node[0x58bfbb510750] = 2;

		*node[0x58bfbb510780] = 3;

		*node[0x58bfbb5107e0] = ;;

		*node[0x58bfbb510840] = 1;

		*node[0x58bfbb510870] = 2;

		*node[0x58bfbb5108a0] = 3;

		*node[0x58bfbb5108d0] = ;;

		*node[0x58bfbb510950] = 4;

		*node[0x58bfbb510980] = 1;

		*node[0x58bfbb5109b0] = 2;

		*node[0x58bfbb5109e0] = 3;

		*node[0x58bfbb510a40] = ;;

		*node[0x58bfbb510a70] = if;

		*node[0x58bfbb510aa0] = op_no;

		*node[0x58bfbb510b30] = ==;

		*node[0x58bfbb510ad0] = 1;

		*node[0x58bfbb510b00] = 0;

		*node[0x58bfbb510b60] = ;;

		*node[0x58bfbb510bc0] = 2;

		*node[0x58bfbb510bf0] = 3;

		*node[0x58bfbb510c20] = else;

		*node[0x58bfbb510c50] = op_no;

		*node[0x58bfbb510c80] = ;;

		*node[0x58bfbb510d30] = 1;

		*node[0x58bfbb510d60] = 2;

		*node[0x58bfbb510d90] = 3;

		*node[0x58bfbb510dc0] = ;;

		*node[0x58bfbb510df0] = return;

		*node[0x58bfbb510e20] = 0;

		*node[0x58bfbb510e50] = ;;

		*node[0x58bfbb510ed0] = 5;

		*node[0x58bfbb510f30] = 1;

		*node[0x58bfbb510f60] = 2;

		*node[0x58bfbb510f90] = ;;

		*node[0x58bfbb5110b0] = =;

		*node[0x58bfbb510fc0] = 7;

		*node[0x58bfbb511080] = -;

		*node[0x58bfbb511020] = 0;

		*node[0x58bfbb511050] = 1;

		*node[0x58bfbb5110e0] = ;;

		*node[0x58bfbb511170] = =;

		*node[0x58bfbb511110] = 8;

		*node[0x58bfbb511140] = 1;

		*node[0x58bfbb5111a0] = ;;

		*node[0x58bfbb511280] = =;

		*node[0x58bfbb5111d0] = 9;

		*node[0x58bfbb511250] = 1000;

		*node[0x58bfbb5112b0] = ;;

		*node[0x58bfbb5112e0] = if;

		*node[0x58bfbb511310] = op_no;

		*node[0x58bfbb5113a0] = ==;

		*node[0x58bfbb511340] = 1;

		*node[0x58bfbb511370] = 0;

		*node[0x58bfbb5113d0] = ;;

		*node[0x58bfbb511400] = if;

		*node[0x58bfbb511430] = op_no;

		*node[0x58bfbb5114c0] = ==;

		*node[0x58bfbb511460] = 2;

		*node[0x58bfbb511490] = 0;

		*node[0x58bfbb5114f0] = ;;

		*node[0x58bfbb511520] = print;

		*node[0x58bfbb511550] = 9;

		*node[0x58bfbb511580] = else;

		*node[0x58bfbb5115b0] = op_no;

		*node[0x58bfbb5115e0] = ;;

		*node[0x58bfbb511610] = print;

		*node[0x58bfbb511640] = 7;

		*node[0x58bfbb511670] = else;

		*node[0x58bfbb5116a0] = op_no;

		*node[0x58bfbb5116d0] = ;;

		*node[0x58bfbb511820] = =;

		*node[0x58bfbb511700] = 10;

		*node[0x58bfbb5117f0] = -;

		*node[0x58bfbb511730] = 0;

		*node[0x58bfbb5117c0] = /;

		*node[0x58bfbb511760] = 2;

		*node[0x58bfbb511790] = 1;

		*node[0x58bfbb511850] = ;;

		*node[0x58bfbb511880] = print;

		*node[0x58bfbb5118b0] = 8;

		*node[0x58bfbb5118e0] = ;;

		*node[0x58bfbb511910] = print;

		*node[0x58bfbb511940] = 10;

		*node[0x58bfbb511970] = ;;

		*node[0x58bfbb5119a0] = return;

		*node[0x58bfbb5119d0] = 0;

		*node[0x58bfbb511a00] = ;;

		*node[0x58bfbb511a80] = 6;

		*node[0x58bfbb511ab0] = 1;

		*node[0x58bfbb511ae0] = 2;

		*node[0x58bfbb511b10] = 3;

		*node[0x58bfbb511b70] = ;;

		*node[0x58bfbb511c60] = =;

		*node[0x58bfbb511ba0] = 7;

		*node[0x58bfbb511c30] = -;

		*node[0x58bfbb511bd0] = 0;

		*node[0x58bfbb511c00] = 1;

		*node[0x58bfbb511c90] = ;;

		*node[0x58bfbb511d70] = =;

		*node[0x58bfbb511cc0] = 8;

		*node[0x58bfbb511d40] = 1;

		*node[0x58bfbb511da0] = ;;

		*node[0x58bfbb511e30] = =;

		*node[0x58bfbb511dd0] = 11;

		*node[0x58bfbb511e00] = 2;

		*node[0x58bfbb511e60] = ;;

		*node[0x58bfbb511e90] = if;

		*node[0x58bfbb511ec0] = op_no;

		*node[0x58bfbb511f50] = ==;

		*node[0x58bfbb511ef0] = 3;

		*node[0x58bfbb511f20] = 0;

		*node[0x58bfbb511f80] = ;;

		*node[0x58bfbb512010] = =;

		*node[0x58bfbb511fb0] = 12;

		*node[0x58bfbb511fe0] = 0;

		*node[0x58bfbb512040] = ;;

		*node[0x58bfbb512190] = =;

		*node[0x58bfbb512070] = 13;

		*node[0x58bfbb512160] = -;

		*node[0x58bfbb5120a0] = 0;

		*node[0x58bfbb512130] = /;

		*node[0x58bfbb5120d0] = 2;

		*node[0x58bfbb512100] = 1;

		*node[0x58bfbb5121c0] = ;;

		*node[0x58bfbb5121f0] = print;

		*node[0x58bfbb512220] = 11;

		*node[0x58bfbb512250] = ;;

		*node[0x58bfbb512280] = print;

		*node[0x58bfbb5122b0] = 12;

		*node[0x58bfbb5122e0] = 13;

		*node[0x58bfbb512310] = else;

		*node[0x58bfbb512340] = op_no;

		*node[0x58bfbb512370] = ;;

		*node[0x58bfbb512610] = =;

		*node[0x58bfbb5123a0] = 14;

		*node[0x58bfbb5125e0] = -;

		*node[0x58bfbb5124c0] = *;

		*node[0x58bfbb512460] = 2;

		*node[0x58bfbb512490] = 2;

		*node[0x58bfbb5125b0] = *;

		*node[0x58bfbb512550] = *;

		*node[0x58bfbb5124f0] = 4;

		*node[0x58bfbb512520] = 1;

		*node[0x58bfbb512580] = 3;

		*node[0x58bfbb512640] = ;;

		*node[0x58bfbb512670] = print;

		*node[0x58bfbb5126a0] = 14;

		*node[0x58bfbb5126d0] = ;;

		*node[0x58bfbb512700] = if;

		*node[0x58bfbb512730] = op_no;

		*node[0x58bfbb5127c0] = >;

		*node[0x58bfbb512760] = 14;

		*node[0x58bfbb512790] = 0;

		*node[0x58bfbb5127f0] = ;;

		*node[0x58bfbb5128b0] = =;

		*node[0x58bfbb512820] = 15;

		*node[0x58bfbb512880] = sqrt;

		*node[0x58bfbb512850] = 14;

		*node[0x58bfbb5128e0] = ;;

		*node[0x58bfbb512af0] = =;

		*node[0x58bfbb512910] = 12;

		*node[0x58bfbb512ac0] = -;

		*node[0x58bfbb5129a0] = -;

		*node[0x58bfbb512940] = 0;

		*node[0x58bfbb512970] = 2;

		*node[0x58bfbb512a90] = *;

		*node[0x58bfbb512a30] = /;

		*node[0x58bfbb5129d0] = 15;

		*node[0x58bfbb512a00] = 2;

		*node[0x58bfbb512a60] = 1;

		*node[0x58bfbb512b20] = ;;

		*node[0x58bfbb512d30] = =;

		*node[0x58bfbb512b50] = 13;

		*node[0x58bfbb512d00] = +;

		*node[0x58bfbb512be0] = -;

		*node[0x58bfbb512b80] = 0;

		*node[0x58bfbb512bb0] = 2;

		*node[0x58bfbb512cd0] = *;

		*node[0x58bfbb512c70] = /;

		*node[0x58bfbb512c10] = 15;

		*node[0x58bfbb512c40] = 2;

		*node[0x58bfbb512ca0] = 1;

		*node[0x58bfbb512d60] = ;;

		*node[0x58bfbb512d90] = print;

		*node[0x58bfbb512dc0] = 11;

		*node[0x58bfbb512df0] = ;;

		*node[0x58bfbb512e20] = print;

		*node[0x58bfbb512e50] = 12;

		*node[0x58bfbb512e80] = 13;

		*node[0x58bfbb512eb0] = elseif;

		*node[0x58bfbb512ee0] = op_no;

		*node[0x58bfbb512f70] = ==;

		*node[0x58bfbb512f10] = 14;

		*node[0x58bfbb512f40] = 0;

		*node[0x58bfbb512fa0] = ;;

		*node[0x58bfbb513150] = =;

		*node[0x58bfbb512fd0] = 10;

		*node[0x58bfbb513120] = -;

		*node[0x58bfbb513000] = 0;

		*node[0x58bfbb5130f0] = *;

		*node[0x58bfbb513090] = /;

		*node[0x58bfbb513030] = 2;

		*node[0x58bfbb513060] = 2;

		*node[0x58bfbb5130c0] = 1;

		*node[0x58bfbb513180] = ;;

		*node[0x58bfbb5131b0] = print;

		*node[0x58bfbb5131e0] = 8;

		*node[0x58bfbb513210] = ;;

		*node[0x58bfbb513240] = print;

		*node[0x58bfbb513270] = 10;

		*node[0x58bfbb5132a0] = else;

		*node[0x58bfbb5132d0] = op_no;

		*node[0x58bfbb513300] = ;;

		*node[0x58bfbb513330] = print;

		*node[0x58bfbb513360] = 7;

		*node[0x58bfbb513390] = ;;

		*node[0x58bfbb5133c0] = return;

		*node[0x58bfbb5133f0] = 0;

		*node[0x58bfbb513420] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffd1017c70] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5ef73c659200] = ;;

		*node[0x5ef73c659280] = 0;

		*node[0x5ef73c6592b0] = ;;

		*node[0x5ef73c6592e0] = input;

		*node[0x5ef73c659310] = 1;

		*node[0x5ef73c659340] = 2;

		*node[0x5ef73c659370] = 3;

		*node[0x5ef73c6593d0] = ;;

		*node[0x5ef73c659430] = 1;

		*node[0x5ef73c659460] = 2;

		*node[0x5ef73c659490] = 3;

		*node[0x5ef73c6594c0] = ;;

		*node[0x5ef73c659540] = 4;

		*node[0x5ef73c659570] = 1;

		*node[0x5ef73c6595a0] = 2;

		*node[0x5ef73c6595d0] = 3;

		*node[0x5ef73c659630] = ;;

		*node[0x5ef73c659660] = if;

		*node[0x5ef73c659690] = op_no;

		*node[0x5ef73c659720] = ==;

		*node[0x5ef73c6596c0] = 1;

		*node[0x5ef73c6596f0] = 0;

		*node[0x5ef73c659750] = ;;

		*node[0x5ef73c6597b0] = 2;

		*node[0x5ef73c6597e0] = 3;

		*node[0x5ef73c659810] = else;

		*node[0x5ef73c659840] = op_no;

		*node[0x5ef73c659870] = ;;

		*node[0x5ef73c659920] = 1;

		*node[0x5ef73c659950] = 2;

		*node[0x5ef73c659980] = 3;

		*node[0x5ef73c6599b0] = ;;

		*node[0x5ef73c6599e0] = return;

		*node[0x5ef73c659a10] = 0;

		*node[0x5ef73c659a40] = ;;

		*node[0x5ef73c659ac0] = 5;

		*node[0x5ef73c659b20] = 1;

		*node[0x5ef73c659b50] = 2;

		*node[0x5ef73c659b80] = ;;

		*node[0x5ef73c659ca0] = =;

		*node[0x5ef73c659bb0] = 7;

		*node[0x5ef73c659c70] = -;

		*node[0x5ef73c659c10] = 0;

		*node[0x5ef73c659c40] = 1;

		*node[0x5ef73c659cd0] = ;;

		*node[0x5ef73c659d60] = =;

		*node[0x5ef73c659d00] = 8;

		*node[0x5ef73c659d30] = 1;

		*node[0x5ef73c659d90] = ;;

		*node[0x5ef73c659e70] = =;

		*node[0x5ef73c659dc0] = 9;

		*node[0x5ef73c659e40] = 1000;

		*node[0x5ef73c659ea0] = ;;

		*node[0x5ef73c659ed0] = if;

		*node[0x5ef73c659f00] = op_no;

		*node[0x5ef73c659f90] = ==;

		*node[0x5ef73c659f30] = 1;

		*node[0x5ef73c659f60] = 0;

		*node[0x5ef73c659fc0] = ;;

		*node[0x5ef73c659ff0] = if;

		*node[0x5ef73c65a020] = op_no;

		*node[0x5ef73c65a0b0] = ==;

		*node[0x5ef73c65a050] = 2;

		*node[0x5ef73c65a080] = 0;

		*node[0x5ef73c65a0e0] = ;;

		*node[0x5ef73c65a110] = print;

		*node[0x5ef73c65a140] = 9;

		*node[0x5ef73c65a170] = else;

		*node[0x5ef73c65a1a0] = op_no;

		*node[0x5ef73c65a1d0] = ;;

		*node[0x5ef73c65a200] = print;

		*node[0x5ef73c65a230] = 7;

		*node[0x5ef73c65a260] = else;

		*node[0x5ef73c65a290] = op_no;

		*node[0x5ef73c65a2c0] = ;;

		*node[0x5ef73c65a410] = =;

		*node[0x5ef73c65a2f0] = 10;

		*node[0x5ef73c65a3e0] = -;

		*node[0x5ef73c65a320] = 0;

		*node[0x5ef73c65a3b0] = /;

		*node[0x5ef73c65a350] = 2;

		*node[0x5ef73c65a380] = 1;

		*node[0x5ef73c65a440] = ;;

		*node[0x5ef73c65a470] = print;

		*node[0x5ef73c65a4a0] = 8;

		*node[0x5ef73c65a4d0] = ;;

		*node[0x5ef73c65a500] = print;

		*node[0x5ef73c65a530] = 10;

		*node[0x5ef73c65a560] = ;;

		*node[0x5ef73c65a590] = return;

		*node[0x5ef73c65a5c0] = 0;

		*node[0x5ef73c65a5f0] = ;;

		*node[0x5ef73c65a670] = 6;

		*node[0x5ef73c65a6a0] = 1;

		*node[0x5ef73c65a6d0] = 2;

		*node[0x5ef73c65a700] = 3;

		*node[0x5ef73c65a760] = ;;

		*node[0x5ef73c65a850] = =;

		*node[0x5ef73c65a790] = 7;

		*node[0x5ef73c65a820] = -;

		*node[0x5ef73c65a7c0] = 0;

		*node[0x5ef73c65a7f0] = 1;

		*node[0x5ef73c65a880] = ;;

		*node[0x5ef73c65a960] = =;

		*node[0x5ef73c65a8b0] = 8;

		*node[0x5ef73c65a930] = 1;

		*node[0x5ef73c65a990] = ;;

		*node[0x5ef73c65aa20] = =;

		*node[0x5ef73c65a9c0] = 11;

		*node[0x5ef73c65a9f0] = 2;

		*node[0x5ef73c65aa50] = ;;

		*node[0x5ef73c65aa80] = if;

		*node[0x5ef73c65aab0] = op_no;

		*node[0x5ef73c65ab40] = ==;

		*node[0x5ef73c65aae0] = 3;

		*node[0x5ef73c65ab10] = 0;

		*node[0x5ef73c65ab70] = ;;

		*node[0x5ef73c65ac00] = =;

		*node[0x5ef73c65aba0] = 12;

		*node[0x5ef73c65abd0] = 0;

		*node[0x5ef73c65ac30] = ;;

		*node[0x5ef73c65ad80] = =;

		*node[0x5ef73c65ac60] = 13;

		*node[0x5ef73c65ad50] = -;

		*node[0x5ef73c65ac90] = 0;

		*node[0x5ef73c65ad20] = /;

		*node[0x5ef73c65acc0] = 2;

		*node[0x5ef73c65acf0] = 1;

		*node[0x5ef73c65adb0] = ;;

		*node[0x5ef73c65ade0] = print;

		*node[0x5ef73c65ae10] = 11;

		*node[0x5ef73c65ae40] = ;;

		*node[0x5ef73c65ae70] = print;

		*node[0x5ef73c65aea0] = 12;

		*node[0x5ef73c65aed0] = 13;

		*node[0x5ef73c65af00] = else;

		*node[0x5ef73c65af30] = op_no;

		*node[0x5ef73c65af60] = ;;

		*node[0x5ef73c65b200] = =;

		*node[0x5ef73c65af90] = 14;

		*node[0x5ef73c65b1d0] = -;

		*node[0x5ef73c65b0b0] = *;

		*node[0x5ef73c65b050] = 2;

		*node[0x5ef73c65b080] = 2;

		*node[0x5ef73c65b1a0] = *;

		*node[0x5ef73c65b140] = *;

		*node[0x5ef73c65b0e0] = 4;

		*node[0x5ef73c65b110] = 1;

		*node[0x5ef73c65b170] = 3;

		*node[0x5ef73c65b230] = ;;

		*node[0x5ef73c65b260] = if;

		*node[0x5ef73c65b290] = op_no;

		*node[0x5ef73c65b320] = >;

		*node[0x5ef73c65b2c0] = 14;

		*node[0x5ef73c65b2f0] = 0;

		*node[0x5ef73c65b350] = ;;

		*node[0x5ef73c65b410] = =;

		*node[0x5ef73c65b380] = 15;

		*node[0x5ef73c65b3e0] = sqrt;

		*node[0x5ef73c65b3b0] = 14;

		*node[0x5ef73c65b440] = ;;

		*node[0x5ef73c65b650] = =;

		*node[0x5ef73c65b470] = 12;

		*node[0x5ef73c65b620] = -;

		*node[0x5ef73c65b500] = -;

		*node[0x5ef73c65b4a0] = 0;

		*node[0x5ef73c65b4d0] = 2;

		*node[0x5ef73c65b5f0] = *;

		*node[0x5ef73c65b590] = /;

		*node[0x5ef73c65b530] = 15;

		*node[0x5ef73c65b560] = 2;

		*node[0x5ef73c65b5c0] = 1;

		*node[0x5ef73c65b680] = ;;

		*node[0x5ef73c65b890] = =;

		*node[0x5ef73c65b6b0] = 13;

		*node[0x5ef73c65b860] = +;

		*node[0x5ef73c65b740] = -;

		*node[0x5ef73c65b6e0] = 0;

		*node[0x5ef73c65b710] = 2;

		*node[0x5ef73c65b830] = *;

		*node[0x5ef73c65b7d0] = /;

		*node[0x5ef73c65b770] = 15;

		*node[0x5ef73c65b7a0] = 2;

		*node[0x5ef73c65b800] = 1;

		*node[0x5ef73c65b8c0] = ;;

		*node[0x5ef73c65b8f0] = print;

		*node[0x5ef73c65b920] = 11;

		*node[0x5ef73c65b950] = ;;

		*node[0x5ef73c65b980] = print;

		*node[0x5ef73c65b9b0] = 12;

		*node[0x5ef73c65b9e0] = 13;

		*node[0x5ef73c65ba10] = elseif;

		*node[0x5ef73c65ba40] = op_no;

		*node[0x5ef73c65bad0] = ==;

		*node[0x5ef73c65ba70] = 14;

		*node[0x5ef73c65baa0] = 0;

		*node[0x5ef73c65bb00] = ;;

		*node[0x5ef73c65bcb0] = =;

		*node[0x5ef73c65bb30] = 10;

		*node[0x5ef73c65bc80] = -;

		*node[0x5ef73c65bb60] = 0;

		*node[0x5ef73c65bc50] = *;

		*node[0x5ef73c65bbf0] = /;

		*node[0x5ef73c65bb90] = 2;

		*node[0x5ef73c65bbc0] = 2;

		*node[0x5ef73c65bc20] = 1;

		*node[0x5ef73c65bce0] = ;;

		*node[0x5ef73c65bd10] = print;

		*node[0x5ef73c65bd40] = 8;

		*node[0x5ef73c65bd70] = ;;

		*node[0x5ef73c65bda0] = print;

		*node[0x5ef73c65bdd0] = 10;

		*node[0x5ef73c65be00] = else;

		*node[0x5ef73c65be30] = op_no;

		*node[0x5ef73c65be60] = ;;

		*node[0x5ef73c65be90] = print;

		*node[0x5ef73c65bec0] = 7;

		*node[0x5ef73c65bef0] = ;;

		*node[0x5ef73c65bf20] = return;

		*node[0x5ef73c65bf50] = 0;

		*node[0x5ef73c65bf80] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff453260e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5fae2c653200] = ;;

		*node[0x5fae2c653280] = 0;

		*node[0x5fae2c6532b0] = ;;

		*node[0x5fae2c6532e0] = input;

		*node[0x5fae2c653310] = 1;

		*node[0x5fae2c653340] = 2;

		*node[0x5fae2c653370] = 3;

		*node[0x5fae2c6533d0] = ;;

		*node[0x5fae2c653430] = 1;

		*node[0x5fae2c653460] = 2;

		*node[0x5fae2c653490] = 3;

		*node[0x5fae2c6534c0] = ;;

		*node[0x5fae2c653540] = 4;

		*node[0x5fae2c653570] = 1;

		*node[0x5fae2c6535a0] = 2;

		*node[0x5fae2c6535d0] = 3;

		*node[0x5fae2c653630] = ;;

		*node[0x5fae2c653660] = if;

		*node[0x5fae2c653690] = op_no;

		*node[0x5fae2c653720] = ==;

		*node[0x5fae2c6536c0] = 1;

		*node[0x5fae2c6536f0] = 0;

		*node[0x5fae2c653750] = ;;

		*node[0x5fae2c6537b0] = 2;

		*node[0x5fae2c6537e0] = 3;

		*node[0x5fae2c653810] = else;

		*node[0x5fae2c653840] = op_no;

		*node[0x5fae2c653870] = ;;

		*node[0x5fae2c653920] = 1;

		*node[0x5fae2c653950] = 2;

		*node[0x5fae2c653980] = 3;

		*node[0x5fae2c6539b0] = ;;

		*node[0x5fae2c6539e0] = return;

		*node[0x5fae2c653a10] = 0;

		*node[0x5fae2c653a40] = ;;

		*node[0x5fae2c653ac0] = 5;

		*node[0x5fae2c653b20] = 1;

		*node[0x5fae2c653b50] = 2;

		*node[0x5fae2c653b80] = ;;

		*node[0x5fae2c653ca0] = =;

		*node[0x5fae2c653bb0] = 7;

		*node[0x5fae2c653c70] = -;

		*node[0x5fae2c653c10] = 0;

		*node[0x5fae2c653c40] = 1;

		*node[0x5fae2c653cd0] = ;;

		*node[0x5fae2c653d60] = =;

		*node[0x5fae2c653d00] = 8;

		*node[0x5fae2c653d30] = 1;

		*node[0x5fae2c653d90] = ;;

		*node[0x5fae2c653e70] = =;

		*node[0x5fae2c653dc0] = 9;

		*node[0x5fae2c653e40] = 1000;

		*node[0x5fae2c653ea0] = ;;

		*node[0x5fae2c653ed0] = if;

		*node[0x5fae2c653f00] = op_no;

		*node[0x5fae2c653f90] = ==;

		*node[0x5fae2c653f30] = 1;

		*node[0x5fae2c653f60] = 0;

		*node[0x5fae2c653fc0] = ;;

		*node[0x5fae2c653ff0] = if;

		*node[0x5fae2c654020] = op_no;

		*node[0x5fae2c6540b0] = ==;

		*node[0x5fae2c654050] = 2;

		*node[0x5fae2c654080] = 0;

		*node[0x5fae2c6540e0] = ;;

		*node[0x5fae2c654110] = print;

		*node[0x5fae2c654140] = 9;

		*node[0x5fae2c654170] = else;

		*node[0x5fae2c6541a0] = op_no;

		*node[0x5fae2c6541d0] = ;;

		*node[0x5fae2c654200] = print;

		*node[0x5fae2c654230] = 7;

		*node[0x5fae2c654260] = else;

		*node[0x5fae2c654290] = op_no;

		*node[0x5fae2c6542c0] = ;;

		*node[0x5fae2c654410] = =;

		*node[0x5fae2c6542f0] = 10;

		*node[0x5fae2c6543e0] = -;

		*node[0x5fae2c654320] = 0;

		*node[0x5fae2c6543b0] = /;

		*node[0x5fae2c654350] = 2;

		*node[0x5fae2c654380] = 1;

		*node[0x5fae2c654440] = ;;

		*node[0x5fae2c654470] = print;

		*node[0x5fae2c6544a0] = 8;

		*node[0x5fae2c6544d0] = ;;

		*node[0x5fae2c654500] = print;

		*node[0x5fae2c654530] = 10;

		*node[0x5fae2c654560] = ;;

		*node[0x5fae2c654590] = return;

		*node[0x5fae2c6545c0] = 0;

		*node[0x5fae2c6545f0] = ;;

		*node[0x5fae2c654670] = 6;

		*node[0x5fae2c6546a0] = 1;

		*node[0x5fae2c6546d0] = 2;

		*node[0x5fae2c654700] = 3;

		*node[0x5fae2c654760] = ;;

		*node[0x5fae2c654850] = =;

		*node[0x5fae2c654790] = 7;

		*node[0x5fae2c654820] = -;

		*node[0x5fae2c6547c0] = 0;

		*node[0x5fae2c6547f0] = 1;

		*node[0x5fae2c654880] = ;;

		*node[0x5fae2c654960] = =;

		*node[0x5fae2c6548b0] = 8;

		*node[0x5fae2c654930] = 1;

		*node[0x5fae2c654990] = ;;

		*node[0x5fae2c654a20] = =;

		*node[0x5fae2c6549c0] = 11;

		*node[0x5fae2c6549f0] = 2;

		*node[0x5fae2c654a50] = ;;

		*node[0x5fae2c654a80] = if;

		*node[0x5fae2c654ab0] = op_no;

		*node[0x5fae2c654b40] = ==;

		*node[0x5fae2c654ae0] = 3;

		*node[0x5fae2c654b10] = 0;

		*node[0x5fae2c654b70] = ;;

		*node[0x5fae2c654c00] = =;

		*node[0x5fae2c654ba0] = 12;

		*node[0x5fae2c654bd0] = 0;

		*node[0x5fae2c654c30] = ;;

		*node[0x5fae2c654d80] = =;

		*node[0x5fae2c654c60] = 13;

		*node[0x5fae2c654d50] = -;

		*node[0x5fae2c654c90] = 0;

		*node[0x5fae2c654d20] = /;

		*node[0x5fae2c654cc0] = 2;

		*node[0x5fae2c654cf0] = 1;

		*node[0x5fae2c654db0] = ;;

		*node[0x5fae2c654de0] = print;

		*node[0x5fae2c654e10] = 11;

		*node[0x5fae2c654e40] = ;;

		*node[0x5fae2c654e70] = print;

		*node[0x5fae2c654ea0] = 12;

		*node[0x5fae2c654ed0] = 13;

		*node[0x5fae2c654f00] = else;

		*node[0x5fae2c654f30] = op_no;

		*node[0x5fae2c654f60] = ;;

		*node[0x5fae2c655200] = =;

		*node[0x5fae2c654f90] = 14;

		*node[0x5fae2c6551d0] = -;

		*node[0x5fae2c6550b0] = *;

		*node[0x5fae2c655050] = 2;

		*node[0x5fae2c655080] = 2;

		*node[0x5fae2c6551a0] = *;

		*node[0x5fae2c655140] = *;

		*node[0x5fae2c6550e0] = 4;

		*node[0x5fae2c655110] = 1;

		*node[0x5fae2c655170] = 3;

		*node[0x5fae2c655230] = ;;

		*node[0x5fae2c655260] = if;

		*node[0x5fae2c655290] = op_no;

		*node[0x5fae2c655320] = >;

		*node[0x5fae2c6552c0] = 14;

		*node[0x5fae2c6552f0] = 0;

		*node[0x5fae2c655350] = ;;

		*node[0x5fae2c655410] = =;

		*node[0x5fae2c655380] = 15;

		*node[0x5fae2c6553e0] = sqrt;

		*node[0x5fae2c6553b0] = 14;

		*node[0x5fae2c655440] = ;;

		*node[0x5fae2c655650] = =;

		*node[0x5fae2c655470] = 12;

		*node[0x5fae2c655620] = -;

		*node[0x5fae2c655500] = -;

		*node[0x5fae2c6554a0] = 0;

		*node[0x5fae2c6554d0] = 2;

		*node[0x5fae2c6555f0] = *;

		*node[0x5fae2c655590] = /;

		*node[0x5fae2c655530] = 15;

		*node[0x5fae2c655560] = 2;

		*node[0x5fae2c6555c0] = 1;

		*node[0x5fae2c655680] = ;;

		*node[0x5fae2c655890] = =;

		*node[0x5fae2c6556b0] = 13;

		*node[0x5fae2c655860] = +;

		*node[0x5fae2c655740] = -;

		*node[0x5fae2c6556e0] = 0;

		*node[0x5fae2c655710] = 2;

		*node[0x5fae2c655830] = *;

		*node[0x5fae2c6557d0] = /;

		*node[0x5fae2c655770] = 15;

		*node[0x5fae2c6557a0] = 2;

		*node[0x5fae2c655800] = 1;

		*node[0x5fae2c6558c0] = ;;

		*node[0x5fae2c6558f0] = print;

		*node[0x5fae2c655920] = 11;

		*node[0x5fae2c655950] = ;;

		*node[0x5fae2c655980] = print;

		*node[0x5fae2c6559b0] = 12;

		*node[0x5fae2c6559e0] = 13;

		*node[0x5fae2c655a10] = elseif;

		*node[0x5fae2c655a40] = op_no;

		*node[0x5fae2c655ad0] = ==;

		*node[0x5fae2c655a70] = 14;

		*node[0x5fae2c655aa0] = 0;

		*node[0x5fae2c655b00] = ;;

		*node[0x5fae2c655cb0] = =;

		*node[0x5fae2c655b30] = 10;

		*node[0x5fae2c655c80] = -;

		*node[0x5fae2c655b60] = 0;

		*node[0x5fae2c655c50] = *;

		*node[0x5fae2c655bf0] = /;

		*node[0x5fae2c655b90] = 2;

		*node[0x5fae2c655bc0] = 2;

		*node[0x5fae2c655c20] = 1;

		*node[0x5fae2c655ce0] = ;;

		*node[0x5fae2c655d10] = print;

		*node[0x5fae2c655d40] = 8;

		*node[0x5fae2c655d70] = ;;

		*node[0x5fae2c655da0] = print;

		*node[0x5fae2c655dd0] = 10;

		*node[0x5fae2c655e00] = else;

		*node[0x5fae2c655e30] = op_no;

		*node[0x5fae2c655e60] = ;;

		*node[0x5fae2c655e90] = print;

		*node[0x5fae2c655ec0] = 7;

		*node[0x5fae2c655ef0] = ;;

		*node[0x5fae2c655f20] = return;

		*node[0x5fae2c655f50] = 0;

		*node[0x5fae2c655f80] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff7875cdb0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x62d4046e1200] = ;;

		*node[0x62d4046e1280] = 0;

		*node[0x62d4046e12b0] = ;;

		*node[0x62d4046e12e0] = input;

		*node[0x62d4046e1310] = 1;

		*node[0x62d4046e1340] = 2;

		*node[0x62d4046e1370] = 3;

		*node[0x62d4046e13d0] = ;;

		*node[0x62d4046e1430] = 1;

		*node[0x62d4046e1460] = 2;

		*node[0x62d4046e1490] = 3;

		*node[0x62d4046e14c0] = ;;

		*node[0x62d4046e1540] = 4;

		*node[0x62d4046e1570] = 1;

		*node[0x62d4046e15a0] = 2;

		*node[0x62d4046e15d0] = 3;

		*node[0x62d4046e1630] = ;;

		*node[0x62d4046e1660] = if;

		*node[0x62d4046e1690] = op_no;

		*node[0x62d4046e1720] = ==;

		*node[0x62d4046e16c0] = 1;

		*node[0x62d4046e16f0] = 0;

		*node[0x62d4046e1750] = ;;

		*node[0x62d4046e17b0] = 2;

		*node[0x62d4046e17e0] = 3;

		*node[0x62d4046e1810] = else;

		*node[0x62d4046e1840] = op_no;

		*node[0x62d4046e1870] = ;;

		*node[0x62d4046e1920] = 1;

		*node[0x62d4046e1950] = 2;

		*node[0x62d4046e1980] = 3;

		*node[0x62d4046e19b0] = ;;

		*node[0x62d4046e19e0] = return;

		*node[0x62d4046e1a10] = 0;

		*node[0x62d4046e1a40] = ;;

		*node[0x62d4046e1ac0] = 5;

		*node[0x62d4046e1b20] = 1;

		*node[0x62d4046e1b50] = 2;

		*node[0x62d4046e1b80] = ;;

		*node[0x62d4046e1ca0] = =;

		*node[0x62d4046e1bb0] = 7;

		*node[0x62d4046e1c70] = -;

		*node[0x62d4046e1c10] = 0;

		*node[0x62d4046e1c40] = 1;

		*node[0x62d4046e1cd0] = ;;

		*node[0x62d4046e1d60] = =;

		*node[0x62d4046e1d00] = 8;

		*node[0x62d4046e1d30] = 1;

		*node[0x62d4046e1d90] = ;;

		*node[0x62d4046e1e70] = =;

		*node[0x62d4046e1dc0] = 9;

		*node[0x62d4046e1e40] = 1000;

		*node[0x62d4046e1ea0] = ;;

		*node[0x62d4046e1ed0] = if;

		*node[0x62d4046e1f00] = op_no;

		*node[0x62d4046e1f90] = ==;

		*node[0x62d4046e1f30] = 1;

		*node[0x62d4046e1f60] = 0;

		*node[0x62d4046e1fc0] = ;;

		*node[0x62d4046e1ff0] = if;

		*node[0x62d4046e2020] = op_no;

		*node[0x62d4046e20b0] = ==;

		*node[0x62d4046e2050] = 2;

		*node[0x62d4046e2080] = 0;

		*node[0x62d4046e20e0] = ;;

		*node[0x62d4046e2110] = print;

		*node[0x62d4046e2140] = 9;

		*node[0x62d4046e2170] = else;

		*node[0x62d4046e21a0] = op_no;

		*node[0x62d4046e21d0] = ;;

		*node[0x62d4046e2200] = print;

		*node[0x62d4046e2230] = 7;

		*node[0x62d4046e2260] = else;

		*node[0x62d4046e2290] = op_no;

		*node[0x62d4046e22c0] = ;;

		*node[0x62d4046e2410] = =;

		*node[0x62d4046e22f0] = 10;

		*node[0x62d4046e23e0] = -;

		*node[0x62d4046e2320] = 0;

		*node[0x62d4046e23b0] = /;

		*node[0x62d4046e2350] = 2;

		*node[0x62d4046e2380] = 1;

		*node[0x62d4046e2440] = ;;

		*node[0x62d4046e2470] = print;

		*node[0x62d4046e24a0] = 8;

		*node[0x62d4046e24d0] = ;;

		*node[0x62d4046e2500] = print;

		*node[0x62d4046e2530] = 10;

		*node[0x62d4046e2560] = ;;

		*node[0x62d4046e2590] = return;

		*node[0x62d4046e25c0] = 0;

		*node[0x62d4046e25f0] = ;;

		*node[0x62d4046e2670] = 6;

		*node[0x62d4046e26a0] = 1;

		*node[0x62d4046e26d0] = 2;

		*node[0x62d4046e2700] = 3;

		*node[0x62d4046e2760] = ;;

		*node[0x62d4046e2850] = =;

		*node[0x62d4046e2790] = 7;

		*node[0x62d4046e2820] = -;

		*node[0x62d4046e27c0] = 0;

		*node[0x62d4046e27f0] = 1;

		*node[0x62d4046e2880] = ;;

		*node[0x62d4046e2960] = =;

		*node[0x62d4046e28b0] = 8;

		*node[0x62d4046e2930] = 1;

		*node[0x62d4046e2990] = ;;

		*node[0x62d4046e2a20] = =;

		*node[0x62d4046e29c0] = 11;

		*node[0x62d4046e29f0] = 2;

		*node[0x62d4046e2a50] = ;;

		*node[0x62d4046e2a80] = if;

		*node[0x62d4046e2ab0] = op_no;

		*node[0x62d4046e2b40] = ==;

		*node[0x62d4046e2ae0] = 3;

		*node[0x62d4046e2b10] = 0;

		*node[0x62d4046e2b70] = ;;

		*node[0x62d4046e2c00] = =;

		*node[0x62d4046e2ba0] = 12;

		*node[0x62d4046e2bd0] = 0;

		*node[0x62d4046e2c30] = ;;

		*node[0x62d4046e2d80] = =;

		*node[0x62d4046e2c60] = 13;

		*node[0x62d4046e2d50] = -;

		*node[0x62d4046e2c90] = 0;

		*node[0x62d4046e2d20] = /;

		*node[0x62d4046e2cc0] = 2;

		*node[0x62d4046e2cf0] = 1;

		*node[0x62d4046e2db0] = ;;

		*node[0x62d4046e2de0] = print;

		*node[0x62d4046e2e10] = 11;

		*node[0x62d4046e2e40] = ;;

		*node[0x62d4046e2e70] = print;

		*node[0x62d4046e2ea0] = 12;

		*node[0x62d4046e2ed0] = 13;

		*node[0x62d4046e2f00] = else;

		*node[0x62d4046e2f30] = op_no;

		*node[0x62d4046e2f60] = ;;

		*node[0x62d4046e3200] = =;

		*node[0x62d4046e2f90] = 14;

		*node[0x62d4046e31d0] = -;

		*node[0x62d4046e30b0] = *;

		*node[0x62d4046e3050] = 2;

		*node[0x62d4046e3080] = 2;

		*node[0x62d4046e31a0] = *;

		*node[0x62d4046e3140] = *;

		*node[0x62d4046e30e0] = 4;

		*node[0x62d4046e3110] = 1;

		*node[0x62d4046e3170] = 3;

		*node[0x62d4046e3230] = ;;

		*node[0x62d4046e3260] = if;

		*node[0x62d4046e3290] = op_no;

		*node[0x62d4046e3320] = >;

		*node[0x62d4046e32c0] = 14;

		*node[0x62d4046e32f0] = 0;

		*node[0x62d4046e3350] = ;;

		*node[0x62d4046e3410] = =;

		*node[0x62d4046e3380] = 15;

		*node[0x62d4046e33e0] = sqrt;

		*node[0x62d4046e33b0] = 14;

		*node[0x62d4046e3440] = ;;

		*node[0x62d4046e3650] = =;

		*node[0x62d4046e3470] = 12;

		*node[0x62d4046e3620] = -;

		*node[0x62d4046e3500] = -;

		*node[0x62d4046e34a0] = 0;

		*node[0x62d4046e34d0] = 2;

		*node[0x62d4046e35f0] = *;

		*node[0x62d4046e3590] = /;

		*node[0x62d4046e3530] = 15;

		*node[0x62d4046e3560] = 2;

		*node[0x62d4046e35c0] = 1;

		*node[0x62d4046e3680] = ;;

		*node[0x62d4046e3890] = =;

		*node[0x62d4046e36b0] = 13;

		*node[0x62d4046e3860] = +;

		*node[0x62d4046e3740] = -;

		*node[0x62d4046e36e0] = 0;

		*node[0x62d4046e3710] = 2;

		*node[0x62d4046e3830] = *;

		*node[0x62d4046e37d0] = /;

		*node[0x62d4046e3770] = 15;

		*node[0x62d4046e37a0] = 2;

		*node[0x62d4046e3800] = 1;

		*node[0x62d4046e38c0] = ;;

		*node[0x62d4046e38f0] = print;

		*node[0x62d4046e3920] = 11;

		*node[0x62d4046e3950] = ;;

		*node[0x62d4046e3980] = print;

		*node[0x62d4046e39b0] = 12;

		*node[0x62d4046e39e0] = 13;

		*node[0x62d4046e3a10] = elseif;

		*node[0x62d4046e3a40] = op_no;

		*node[0x62d4046e3ad0] = ==;

		*node[0x62d4046e3a70] = 14;

		*node[0x62d4046e3aa0] = 0;

		*node[0x62d4046e3b00] = ;;

		*node[0x62d4046e3cb0] = =;

		*node[0x62d4046e3b30] = 10;

		*node[0x62d4046e3c80] = -;

		*node[0x62d4046e3b60] = 0;

		*node[0x62d4046e3c50] = *;

		*node[0x62d4046e3bf0] = /;

		*node[0x62d4046e3b90] = 2;

		*node[0x62d4046e3bc0] = 2;

		*node[0x62d4046e3c20] = 1;

		*node[0x62d4046e3ce0] = ;;

		*node[0x62d4046e3d10] = print;

		*node[0x62d4046e3d40] = 8;

		*node[0x62d4046e3d70] = ;;

		*node[0x62d4046e3da0] = print;

		*node[0x62d4046e3dd0] = 10;

		*node[0x62d4046e3e00] = else;

		*node[0x62d4046e3e30] = op_no;

		*node[0x62d4046e3e60] = ;;

		*node[0x62d4046e3e90] = print;

		*node[0x62d4046e3ec0] = 7;

		*node[0x62d4046e3ef0] = ;;

		*node[0x62d4046e3f20] = return;

		*node[0x62d4046e3f50] = 0;

		*node[0x62d4046e3f80] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffde6371d00] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x61ae7e4ad410] = ;;

		*node[0x61ae7e4ad490] = 0;

		*node[0x61ae7e4ad4c0] = ;;

		*node[0x61ae7e4ad4f0] = input;

		*node[0x61ae7e4ad520] = 1;

		*node[0x61ae7e4ad550] = 2;

		*node[0x61ae7e4ad580] = 3;

		*node[0x61ae7e4ad5e0] = ;;

		*node[0x61ae7e4ad640] = 1;

		*node[0x61ae7e4ad670] = 2;

		*node[0x61ae7e4ad6a0] = 3;

		*node[0x61ae7e4ad6d0] = ;;

		*node[0x61ae7e4ad750] = 4;

		*node[0x61ae7e4ad780] = 1;

		*node[0x61ae7e4ad7b0] = 2;

		*node[0x61ae7e4ad7e0] = 3;

		*node[0x61ae7e4ad840] = ;;

		*node[0x61ae7e4ad870] = if;

		*node[0x61ae7e4ad8a0] = op_no;

		*node[0x61ae7e4ad930] = ==;

		*node[0x61ae7e4ad8d0] = 1;

		*node[0x61ae7e4ad900] = 0;

		*node[0x61ae7e4ad960] = ;;

		*node[0x61ae7e4ad9c0] = 2;

		*node[0x61ae7e4ad9f0] = 3;

		*node[0x61ae7e4ada20] = else;

		*node[0x61ae7e4ada50] = op_no;

		*node[0x61ae7e4ada80] = ;;

		*node[0x61ae7e4adb30] = 1;

		*node[0x61ae7e4adb60] = 2;

		*node[0x61ae7e4adb90] = 3;

		*node[0x61ae7e4adbc0] = ;;

		*node[0x61ae7e4adbf0] = return;

		*node[0x61ae7e4adc20] = 0;

		*node[0x61ae7e4adc50] = ;;

		*node[0x61ae7e4adcd0] = 5;

		*node[0x61ae7e4add30] = 1;

		*node[0x61ae7e4add60] = 2;

		*node[0x61ae7e4add90] = ;;

		*node[0x61ae7e4adeb0] = =;

		*node[0x61ae7e4addc0] = 7;

		*node[0x61ae7e4ade80] = -;

		*node[0x61ae7e4ade20] = 0;

		*node[0x61ae7e4ade50] = 1;

		*node[0x61ae7e4adee0] = ;;

		*node[0x61ae7e4adf70] = =;

		*node[0x61ae7e4adf10] = 8;

		*node[0x61ae7e4adf40] = 1;

		*node[0x61ae7e4adfa0] = ;;

		*node[0x61ae7e4ae080] = =;

		*node[0x61ae7e4adfd0] = 9;

		*node[0x61ae7e4ae050] = 1000;

		*node[0x61ae7e4ae0b0] = ;;

		*node[0x61ae7e4ae0e0] = if;

		*node[0x61ae7e4ae110] = op_no;

		*node[0x61ae7e4ae1a0] = ==;

		*node[0x61ae7e4ae140] = 1;

		*node[0x61ae7e4ae170] = 0;

		*node[0x61ae7e4ae1d0] = ;;

		*node[0x61ae7e4ae200] = if;

		*node[0x61ae7e4ae230] = op_no;

		*node[0x61ae7e4ae2c0] = ==;

		*node[0x61ae7e4ae260] = 2;

		*node[0x61ae7e4ae290] = 0;

		*node[0x61ae7e4ae2f0] = ;;

		*node[0x61ae7e4ae320] = print;

		*node[0x61ae7e4ae350] = 9;

		*node[0x61ae7e4ae380] = else;

		*node[0x61ae7e4ae3b0] = op_no;

		*node[0x61ae7e4ae3e0] = ;;

		*node[0x61ae7e4ae410] = print;

		*node[0x61ae7e4ae440] = 7;

		*node[0x61ae7e4ae470] = else;

		*node[0x61ae7e4ae4a0] = op_no;

		*node[0x61ae7e4ae4d0] = ;;

		*node[0x61ae7e4ae620] = =;

		*node[0x61ae7e4ae500] = 10;

		*node[0x61ae7e4ae5f0] = -;

		*node[0x61ae7e4ae530] = 0;

		*node[0x61ae7e4ae5c0] = /;

		*node[0x61ae7e4ae560] = 2;

		*node[0x61ae7e4ae590] = 1;

		*node[0x61ae7e4ae650] = ;;

		*node[0x61ae7e4ae680] = print;

		*node[0x61ae7e4ae6b0] = 8;

		*node[0x61ae7e4ae6e0] = ;;

		*node[0x61ae7e4ae710] = print;

		*node[0x61ae7e4ae740] = 10;

		*node[0x61ae7e4ae770] = ;;

		*node[0x61ae7e4ae7a0] = return;

		*node[0x61ae7e4ae7d0] = 0;

		*node[0x61ae7e4ae800] = ;;

		*node[0x61ae7e4ae880] = 6;

		*node[0x61ae7e4ae8b0] = 1;

		*node[0x61ae7e4ae8e0] = 2;

		*node[0x61ae7e4ae910] = 3;

		*node[0x61ae7e4ae970] = ;;

		*node[0x61ae7e4aea60] = =;

		*node[0x61ae7e4ae9a0] = 7;

		*node[0x61ae7e4aea30] = -;

		*node[0x61ae7e4ae9d0] = 0;

		*node[0x61ae7e4aea00] = 1;

		*node[0x61ae7e4aea90] = ;;

		*node[0x61ae7e4aeb70] = =;

		*node[0x61ae7e4aeac0] = 8;

		*node[0x61ae7e4aeb40] = 1;

		*node[0x61ae7e4aeba0] = ;;

		*node[0x61ae7e4aec30] = =;

		*node[0x61ae7e4aebd0] = 11;

		*node[0x61ae7e4aec00] = 2;

		*node[0x61ae7e4aec60] = ;;

		*node[0x61ae7e4aec90] = if;

		*node[0x61ae7e4aecc0] = op_no;

		*node[0x61ae7e4aed50] = ==;

		*node[0x61ae7e4aecf0] = 3;

		*node[0x61ae7e4aed20] = 0;

		*node[0x61ae7e4aed80] = ;;

		*node[0x61ae7e4aee10] = =;

		*node[0x61ae7e4aedb0] = 12;

		*node[0x61ae7e4aede0] = 0;

		*node[0x61ae7e4aee40] = ;;

		*node[0x61ae7e4aef90] = =;

		*node[0x61ae7e4aee70] = 13;

		*node[0x61ae7e4aef60] = -;

		*node[0x61ae7e4aeea0] = 0;

		*node[0x61ae7e4aef30] = /;

		*node[0x61ae7e4aeed0] = 2;

		*node[0x61ae7e4aef00] = 1;

		*node[0x61ae7e4aefc0] = ;;

		*node[0x61ae7e4aeff0] = print;

		*node[0x61ae7e4af020] = 11;

		*node[0x61ae7e4af050] = ;;

		*node[0x61ae7e4af080] = print;

		*node[0x61ae7e4af0b0] = 12;

		*node[0x61ae7e4af0e0] = 13;

		*node[0x61ae7e4af110] = else;

		*node[0x61ae7e4af140] = op_no;

		*node[0x61ae7e4af170] = ;;

		*node[0x61ae7e4af410] = =;

		*node[0x61ae7e4af1a0] = 14;

		*node[0x61ae7e4af3e0] = -;

		*node[0x61ae7e4af2c0] = *;

		*node[0x61ae7e4af260] = 2;

		*node[0x61ae7e4af290] = 2;

		*node[0x61ae7e4af3b0] = *;

		*node[0x61ae7e4af350] = *;

		*node[0x61ae7e4af2f0] = 4;

		*node[0x61ae7e4af320] = 1;

		*node[0x61ae7e4af380] = 3;

		*node[0x61ae7e4af440] = ;;

		*node[0x61ae7e4af470] = if;

		*node[0x61ae7e4af4a0] = op_no;

		*node[0x61ae7e4af530] = >;

		*node[0x61ae7e4af4d0] = 14;

		*node[0x61ae7e4af500] = 0;

		*node[0x61ae7e4af560] = ;;

		*node[0x61ae7e4af620] = =;

		*node[0x61ae7e4af590] = 15;

		*node[0x61ae7e4af5f0] = sqrt;

		*node[0x61ae7e4af5c0] = 14;

		*node[0x61ae7e4af650] = ;;

		*node[0x61ae7e4af860] = =;

		*node[0x61ae7e4af680] = 12;

		*node[0x61ae7e4af830] = /;

		*node[0x61ae7e4af770] = -;

		*node[0x61ae7e4af710] = -;

		*node[0x61ae7e4af6b0] = 0;

		*node[0x61ae7e4af6e0] = 2;

		*node[0x61ae7e4af740] = 15;

		*node[0x61ae7e4af800] = *;

		*node[0x61ae7e4af7a0] = 2;

		*node[0x61ae7e4af7d0] = 1;

		*node[0x61ae7e4af890] = ;;

		*node[0x61ae7e4afaa0] = =;

		*node[0x61ae7e4af8c0] = 13;

		*node[0x61ae7e4afa70] = /;

		*node[0x61ae7e4af9b0] = +;

		*node[0x61ae7e4af950] = -;

		*node[0x61ae7e4af8f0] = 0;

		*node[0x61ae7e4af920] = 2;

		*node[0x61ae7e4af980] = 15;

		*node[0x61ae7e4afa40] = *;

		*node[0x61ae7e4af9e0] = 2;

		*node[0x61ae7e4afa10] = 1;

		*node[0x61ae7e4afad0] = ;;

		*node[0x61ae7e4afb00] = print;

		*node[0x61ae7e4afb30] = 11;

		*node[0x61ae7e4afb60] = ;;

		*node[0x61ae7e4afb90] = print;

		*node[0x61ae7e4afbc0] = 12;

		*node[0x61ae7e4afbf0] = 13;

		*node[0x61ae7e4afc20] = elseif;

		*node[0x61ae7e4afc50] = op_no;

		*node[0x61ae7e4afce0] = ==;

		*node[0x61ae7e4afc80] = 14;

		*node[0x61ae7e4afcb0] = 0;

		*node[0x61ae7e4afd10] = ;;

		*node[0x61ae7e4afec0] = =;

		*node[0x61ae7e4afd40] = 10;

		*node[0x61ae7e4afe90] = -;

		*node[0x61ae7e4afd70] = 0;

		*node[0x61ae7e4afe60] = *;

		*node[0x61ae7e4afe00] = /;

		*node[0x61ae7e4afda0] = 2;

		*node[0x61ae7e4afdd0] = 2;

		*node[0x61ae7e4afe30] = 1;

		*node[0x61ae7e4afef0] = ;;

		*node[0x61ae7e4aff20] = print;

		*node[0x61ae7e4aff50] = 8;

		*node[0x61ae7e4aff80] = ;;

		*node[0x61ae7e4affb0] = print;

		*node[0x61ae7e4affe0] = 10;

		*node[0x61ae7e4b0010] = else;

		*node[0x61ae7e4b0040] = op_no;

		*node[0x61ae7e4b0070] = ;;

		*node[0x61ae7e4b00a0] = print;

		*node[0x61ae7e4b00d0] = 7;

		*node[0x61ae7e4b0100] = ;;

		*node[0x61ae7e4b0130] = return;

		*node[0x61ae7e4b0160] = 0;

		*node[0x61ae7e4b0190] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe2f4d6a50] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x62a90d626d80] = ;;

		*node[0x62a90d626e00] = 0;

		*node[0x62a90d626e30] = ;;

		*node[0x62a90d626e60] = input;

		*node[0x62a90d626e90] = 1;

		*node[0x62a90d626ec0] = 2;

		*node[0x62a90d626ef0] = 3;

		*node[0x62a90d626f50] = ;;

		*node[0x62a90d626fb0] = 1;

		*node[0x62a90d626fe0] = 2;

		*node[0x62a90d627010] = 3;

		*node[0x62a90d627040] = ;;

		*node[0x62a90d6270c0] = 4;

		*node[0x62a90d6270f0] = 1;

		*node[0x62a90d627120] = 2;

		*node[0x62a90d627150] = 3;

		*node[0x62a90d6271b0] = ;;

		*node[0x62a90d6271e0] = if;

		*node[0x62a90d627210] = op_no;

		*node[0x62a90d6272a0] = ==;

		*node[0x62a90d627240] = 1;

		*node[0x62a90d627270] = 0;

		*node[0x62a90d6272d0] = ;;

		*node[0x62a90d627330] = 2;

		*node[0x62a90d627360] = 3;

		*node[0x62a90d627390] = else;

		*node[0x62a90d6273c0] = op_no;

		*node[0x62a90d6273f0] = ;;

		*node[0x62a90d6274a0] = 1;

		*node[0x62a90d6274d0] = 2;

		*node[0x62a90d627500] = 3;

		*node[0x62a90d627530] = ;;

		*node[0x62a90d627560] = return;

		*node[0x62a90d627590] = 0;

		*node[0x62a90d6275c0] = ;;

		*node[0x62a90d627640] = 5;

		*node[0x62a90d6276a0] = 1;

		*node[0x62a90d6276d0] = 2;

		*node[0x62a90d627700] = ;;

		*node[0x62a90d627820] = =;

		*node[0x62a90d627730] = 7;

		*node[0x62a90d6277f0] = -;

		*node[0x62a90d627790] = 0;

		*node[0x62a90d6277c0] = 1;

		*node[0x62a90d627850] = ;;

		*node[0x62a90d6278e0] = =;

		*node[0x62a90d627880] = 8;

		*node[0x62a90d6278b0] = 1;

		*node[0x62a90d627910] = ;;

		*node[0x62a90d6279f0] = =;

		*node[0x62a90d627940] = 9;

		*node[0x62a90d6279c0] = 1000;

		*node[0x62a90d627a20] = ;;

		*node[0x62a90d627a50] = if;

		*node[0x62a90d627a80] = op_no;

		*node[0x62a90d627b10] = ==;

		*node[0x62a90d627ab0] = 1;

		*node[0x62a90d627ae0] = 0;

		*node[0x62a90d627b40] = ;;

		*node[0x62a90d627b70] = if;

		*node[0x62a90d627ba0] = op_no;

		*node[0x62a90d627c30] = ==;

		*node[0x62a90d627bd0] = 2;

		*node[0x62a90d627c00] = 0;

		*node[0x62a90d627c60] = ;;

		*node[0x62a90d627c90] = print;

		*node[0x62a90d627cc0] = 9;

		*node[0x62a90d627cf0] = else;

		*node[0x62a90d627d20] = op_no;

		*node[0x62a90d627d50] = ;;

		*node[0x62a90d627d80] = print;

		*node[0x62a90d627db0] = 7;

		*node[0x62a90d627de0] = else;

		*node[0x62a90d627e10] = op_no;

		*node[0x62a90d627e40] = ;;

		*node[0x62a90d627f90] = =;

		*node[0x62a90d627e70] = 10;

		*node[0x62a90d627f60] = -;

		*node[0x62a90d627ea0] = 0;

		*node[0x62a90d627f30] = /;

		*node[0x62a90d627ed0] = 2;

		*node[0x62a90d627f00] = 1;

		*node[0x62a90d627fc0] = ;;

		*node[0x62a90d627ff0] = print;

		*node[0x62a90d628020] = 8;

		*node[0x62a90d628050] = ;;

		*node[0x62a90d628080] = print;

		*node[0x62a90d6280b0] = 10;

		*node[0x62a90d6280e0] = ;;

		*node[0x62a90d628110] = return;

		*node[0x62a90d628140] = 0;

		*node[0x62a90d628170] = ;;

		*node[0x62a90d6281f0] = 6;

		*node[0x62a90d628220] = 1;

		*node[0x62a90d628250] = 2;

		*node[0x62a90d628280] = 3;

		*node[0x62a90d6282e0] = ;;

		*node[0x62a90d6283d0] = =;

		*node[0x62a90d628310] = 7;

		*node[0x62a90d6283a0] = -;

		*node[0x62a90d628340] = 0;

		*node[0x62a90d628370] = 1;

		*node[0x62a90d628400] = ;;

		*node[0x62a90d6284e0] = =;

		*node[0x62a90d628430] = 8;

		*node[0x62a90d6284b0] = 1;

		*node[0x62a90d628510] = ;;

		*node[0x62a90d6285a0] = =;

		*node[0x62a90d628540] = 11;

		*node[0x62a90d628570] = 2;

		*node[0x62a90d6285d0] = ;;

		*node[0x62a90d628600] = if;

		*node[0x62a90d628630] = op_no;

		*node[0x62a90d6286c0] = ==;

		*node[0x62a90d628660] = 3;

		*node[0x62a90d628690] = 0;

		*node[0x62a90d6286f0] = ;;

		*node[0x62a90d628780] = =;

		*node[0x62a90d628720] = 12;

		*node[0x62a90d628750] = 0;

		*node[0x62a90d6287b0] = ;;

		*node[0x62a90d628900] = =;

		*node[0x62a90d6287e0] = 13;

		*node[0x62a90d6288d0] = -;

		*node[0x62a90d628810] = 0;

		*node[0x62a90d6288a0] = /;

		*node[0x62a90d628840] = 2;

		*node[0x62a90d628870] = 1;

		*node[0x62a90d628930] = ;;

		*node[0x62a90d628960] = print;

		*node[0x62a90d628990] = 11;

		*node[0x62a90d6289c0] = ;;

		*node[0x62a90d6289f0] = print;

		*node[0x62a90d628a20] = 12;

		*node[0x62a90d628a50] = 13;

		*node[0x62a90d628a80] = else;

		*node[0x62a90d628ab0] = op_no;

		*node[0x62a90d628ae0] = ;;

		*node[0x62a90d628d80] = =;

		*node[0x62a90d628b10] = 14;

		*node[0x62a90d628d50] = -;

		*node[0x62a90d628c30] = *;

		*node[0x62a90d628bd0] = 2;

		*node[0x62a90d628c00] = 2;

		*node[0x62a90d628d20] = *;

		*node[0x62a90d628cc0] = *;

		*node[0x62a90d628c60] = 4;

		*node[0x62a90d628c90] = 1;

		*node[0x62a90d628cf0] = 3;

		*node[0x62a90d628db0] = ;;

		*node[0x62a90d628de0] = print;

		*node[0x62a90d628e10] = 14;

		*node[0x62a90d628e40] = ;;

		*node[0x62a90d628e70] = if;

		*node[0x62a90d628ea0] = op_no;

		*node[0x62a90d628f30] = >;

		*node[0x62a90d628ed0] = 14;

		*node[0x62a90d628f00] = 0;

		*node[0x62a90d628f60] = ;;

		*node[0x62a90d629020] = =;

		*node[0x62a90d628f90] = 15;

		*node[0x62a90d628ff0] = sqrt;

		*node[0x62a90d628fc0] = 14;

		*node[0x62a90d629050] = ;;

		*node[0x62a90d629080] = print;

		*node[0x62a90d6290b0] = 15;

		*node[0x62a90d6290e0] = ;;

		*node[0x62a90d6292f0] = =;

		*node[0x62a90d629110] = 12;

		*node[0x62a90d6292c0] = /;

		*node[0x62a90d629200] = -;

		*node[0x62a90d6291a0] = -;

		*node[0x62a90d629140] = 0;

		*node[0x62a90d629170] = 2;

		*node[0x62a90d6291d0] = 15;

		*node[0x62a90d629290] = *;

		*node[0x62a90d629230] = 2;

		*node[0x62a90d629260] = 1;

		*node[0x62a90d629320] = ;;

		*node[0x62a90d629530] = =;

		*node[0x62a90d629350] = 13;

		*node[0x62a90d629500] = /;

		*node[0x62a90d629440] = +;

		*node[0x62a90d6293e0] = -;

		*node[0x62a90d629380] = 0;

		*node[0x62a90d6293b0] = 2;

		*node[0x62a90d629410] = 15;

		*node[0x62a90d6294d0] = *;

		*node[0x62a90d629470] = 2;

		*node[0x62a90d6294a0] = 1;

		*node[0x62a90d629560] = ;;

		*node[0x62a90d629590] = print;

		*node[0x62a90d6295c0] = 11;

		*node[0x62a90d6295f0] = ;;

		*node[0x62a90d629620] = print;

		*node[0x62a90d629650] = 12;

		*node[0x62a90d629680] = 13;

		*node[0x62a90d6296b0] = elseif;

		*node[0x62a90d6296e0] = op_no;

		*node[0x62a90d629770] = ==;

		*node[0x62a90d629710] = 14;

		*node[0x62a90d629740] = 0;

		*node[0x62a90d6297a0] = ;;

		*node[0x62a90d629950] = =;

		*node[0x62a90d6297d0] = 10;

		*node[0x62a90d629920] = -;

		*node[0x62a90d629800] = 0;

		*node[0x62a90d6298f0] = *;

		*node[0x62a90d629890] = /;

		*node[0x62a90d629830] = 2;

		*node[0x62a90d629860] = 2;

		*node[0x62a90d6298c0] = 1;

		*node[0x62a90d629980] = ;;

		*node[0x62a90d6299b0] = print;

		*node[0x62a90d6299e0] = 8;

		*node[0x62a90d629a10] = ;;

		*node[0x62a90d629a40] = print;

		*node[0x62a90d629a70] = 10;

		*node[0x62a90d629aa0] = else;

		*node[0x62a90d629ad0] = op_no;

		*node[0x62a90d629b00] = ;;

		*node[0x62a90d629b30] = print;

		*node[0x62a90d629b60] = 7;

		*node[0x62a90d629b90] = ;;

		*node[0x62a90d629bc0] = return;

		*node[0x62a90d629bf0] = 0;

		*node[0x62a90d629c20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffdec625740] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6207913e65f0] = ;;

		*node[0x6207913e6670] = 0;

		*node[0x6207913e66a0] = ;;

		*node[0x6207913e66d0] = input;

		*node[0x6207913e6700] = 1;

		*node[0x6207913e6730] = 2;

		*node[0x6207913e6760] = 3;

		*node[0x6207913e67c0] = ;;

		*node[0x6207913e6820] = 1;

		*node[0x6207913e6850] = 2;

		*node[0x6207913e6880] = 3;

		*node[0x6207913e68b0] = ;;

		*node[0x6207913e6930] = 4;

		*node[0x6207913e6960] = 1;

		*node[0x6207913e6990] = 2;

		*node[0x6207913e69c0] = 3;

		*node[0x6207913e6a20] = ;;

		*node[0x6207913e6a50] = if;

		*node[0x6207913e6a80] = op_no;

		*node[0x6207913e6b10] = ==;

		*node[0x6207913e6ab0] = 1;

		*node[0x6207913e6ae0] = 0;

		*node[0x6207913e6b40] = ;;

		*node[0x6207913e6ba0] = 2;

		*node[0x6207913e6bd0] = 3;

		*node[0x6207913e6c00] = else;

		*node[0x6207913e6c30] = op_no;

		*node[0x6207913e6c60] = ;;

		*node[0x6207913e6d10] = 1;

		*node[0x6207913e6d40] = 2;

		*node[0x6207913e6d70] = 3;

		*node[0x6207913e6da0] = ;;

		*node[0x6207913e6dd0] = return;

		*node[0x6207913e6e00] = 0;

		*node[0x6207913e6e30] = ;;

		*node[0x6207913e6eb0] = 5;

		*node[0x6207913e6f10] = 1;

		*node[0x6207913e6f40] = 2;

		*node[0x6207913e6f70] = ;;

		*node[0x6207913e7090] = =;

		*node[0x6207913e6fa0] = 7;

		*node[0x6207913e7060] = -;

		*node[0x6207913e7000] = 0;

		*node[0x6207913e7030] = 1;

		*node[0x6207913e70c0] = ;;

		*node[0x6207913e7150] = =;

		*node[0x6207913e70f0] = 8;

		*node[0x6207913e7120] = 1;

		*node[0x6207913e7180] = ;;

		*node[0x6207913e7260] = =;

		*node[0x6207913e71b0] = 9;

		*node[0x6207913e7230] = 1000;

		*node[0x6207913e7290] = ;;

		*node[0x6207913e72c0] = if;

		*node[0x6207913e72f0] = op_no;

		*node[0x6207913e7380] = ==;

		*node[0x6207913e7320] = 1;

		*node[0x6207913e7350] = 0;

		*node[0x6207913e73b0] = ;;

		*node[0x6207913e73e0] = if;

		*node[0x6207913e7410] = op_no;

		*node[0x6207913e74a0] = ==;

		*node[0x6207913e7440] = 2;

		*node[0x6207913e7470] = 0;

		*node[0x6207913e74d0] = ;;

		*node[0x6207913e7500] = print;

		*node[0x6207913e7530] = 9;

		*node[0x6207913e7560] = else;

		*node[0x6207913e7590] = op_no;

		*node[0x6207913e75c0] = ;;

		*node[0x6207913e75f0] = print;

		*node[0x6207913e7620] = 7;

		*node[0x6207913e7650] = else;

		*node[0x6207913e7680] = op_no;

		*node[0x6207913e76b0] = ;;

		*node[0x6207913e7800] = =;

		*node[0x6207913e76e0] = 10;

		*node[0x6207913e77d0] = -;

		*node[0x6207913e7710] = 0;

		*node[0x6207913e77a0] = /;

		*node[0x6207913e7740] = 2;

		*node[0x6207913e7770] = 1;

		*node[0x6207913e7830] = ;;

		*node[0x6207913e7860] = print;

		*node[0x6207913e7890] = 8;

		*node[0x6207913e78c0] = ;;

		*node[0x6207913e78f0] = print;

		*node[0x6207913e7920] = 10;

		*node[0x6207913e7950] = ;;

		*node[0x6207913e7980] = return;

		*node[0x6207913e79b0] = 0;

		*node[0x6207913e79e0] = ;;

		*node[0x6207913e7a60] = 6;

		*node[0x6207913e7a90] = 1;

		*node[0x6207913e7ac0] = 2;

		*node[0x6207913e7af0] = 3;

		*node[0x6207913e7b50] = ;;

		*node[0x6207913e7c40] = =;

		*node[0x6207913e7b80] = 7;

		*node[0x6207913e7c10] = -;

		*node[0x6207913e7bb0] = 0;

		*node[0x6207913e7be0] = 1;

		*node[0x6207913e7c70] = ;;

		*node[0x6207913e7d50] = =;

		*node[0x6207913e7ca0] = 8;

		*node[0x6207913e7d20] = 1;

		*node[0x6207913e7d80] = ;;

		*node[0x6207913e7e10] = =;

		*node[0x6207913e7db0] = 11;

		*node[0x6207913e7de0] = 2;

		*node[0x6207913e7e40] = ;;

		*node[0x6207913e7e70] = if;

		*node[0x6207913e7ea0] = op_no;

		*node[0x6207913e7f30] = ==;

		*node[0x6207913e7ed0] = 3;

		*node[0x6207913e7f00] = 0;

		*node[0x6207913e7f60] = ;;

		*node[0x6207913e7ff0] = =;

		*node[0x6207913e7f90] = 12;

		*node[0x6207913e7fc0] = 0;

		*node[0x6207913e8020] = ;;

		*node[0x6207913e8170] = =;

		*node[0x6207913e8050] = 13;

		*node[0x6207913e8140] = -;

		*node[0x6207913e8080] = 0;

		*node[0x6207913e8110] = /;

		*node[0x6207913e80b0] = 2;

		*node[0x6207913e80e0] = 1;

		*node[0x6207913e81a0] = ;;

		*node[0x6207913e81d0] = print;

		*node[0x6207913e8200] = 11;

		*node[0x6207913e8230] = ;;

		*node[0x6207913e8260] = print;

		*node[0x6207913e8290] = 12;

		*node[0x6207913e82c0] = 13;

		*node[0x6207913e82f0] = else;

		*node[0x6207913e8320] = op_no;

		*node[0x6207913e8350] = ;;

		*node[0x6207913e85f0] = =;

		*node[0x6207913e8380] = 14;

		*node[0x6207913e85c0] = -;

		*node[0x6207913e84a0] = *;

		*node[0x6207913e8440] = 2;

		*node[0x6207913e8470] = 2;

		*node[0x6207913e8590] = *;

		*node[0x6207913e8530] = *;

		*node[0x6207913e84d0] = 4;

		*node[0x6207913e8500] = 1;

		*node[0x6207913e8560] = 3;

		*node[0x6207913e8620] = ;;

		*node[0x6207913e8650] = if;

		*node[0x6207913e8680] = op_no;

		*node[0x6207913e8710] = >;

		*node[0x6207913e86b0] = 14;

		*node[0x6207913e86e0] = 0;

		*node[0x6207913e8740] = ;;

		*node[0x6207913e8800] = =;

		*node[0x6207913e8770] = 15;

		*node[0x6207913e87d0] = sqrt;

		*node[0x6207913e87a0] = 14;

		*node[0x6207913e8830] = ;;

		*node[0x6207913e8a40] = =;

		*node[0x6207913e8860] = 12;

		*node[0x6207913e8a10] = /;

		*node[0x6207913e8950] = -;

		*node[0x6207913e88f0] = -;

		*node[0x6207913e8890] = 0;

		*node[0x6207913e88c0] = 2;

		*node[0x6207913e8920] = 15;

		*node[0x6207913e89e0] = *;

		*node[0x6207913e8980] = 2;

		*node[0x6207913e89b0] = 1;

		*node[0x6207913e8a70] = ;;

		*node[0x6207913e8c80] = =;

		*node[0x6207913e8aa0] = 13;

		*node[0x6207913e8c50] = /;

		*node[0x6207913e8b90] = +;

		*node[0x6207913e8b30] = -;

		*node[0x6207913e8ad0] = 0;

		*node[0x6207913e8b00] = 2;

		*node[0x6207913e8b60] = 15;

		*node[0x6207913e8c20] = *;

		*node[0x6207913e8bc0] = 2;

		*node[0x6207913e8bf0] = 1;

		*node[0x6207913e8cb0] = ;;

		*node[0x6207913e8ce0] = print;

		*node[0x6207913e8d10] = 11;

		*node[0x6207913e8d40] = ;;

		*node[0x6207913e8d70] = print;

		*node[0x6207913e8da0] = 12;

		*node[0x6207913e8dd0] = 13;

		*node[0x6207913e8e00] = elseif;

		*node[0x6207913e8e30] = op_no;

		*node[0x6207913e8ec0] = ==;

		*node[0x6207913e8e60] = 14;

		*node[0x6207913e8e90] = 0;

		*node[0x6207913e8ef0] = ;;

		*node[0x6207913e90a0] = =;

		*node[0x6207913e8f20] = 10;

		*node[0x6207913e9070] = -;

		*node[0x6207913e8f50] = 0;

		*node[0x6207913e9040] = *;

		*node[0x6207913e8fe0] = /;

		*node[0x6207913e8f80] = 2;

		*node[0x6207913e8fb0] = 2;

		*node[0x6207913e9010] = 1;

		*node[0x6207913e90d0] = ;;

		*node[0x6207913e9100] = print;

		*node[0x6207913e9130] = 8;

		*node[0x6207913e9160] = ;;

		*node[0x6207913e9190] = print;

		*node[0x6207913e91c0] = 10;

		*node[0x6207913e91f0] = else;

		*node[0x6207913e9220] = op_no;

		*node[0x6207913e9250] = ;;

		*node[0x6207913e9280] = print;

		*node[0x6207913e92b0] = 7;

		*node[0x6207913e92e0] = ;;

		*node[0x6207913e9310] = return;

		*node[0x6207913e9340] = 0;

		*node[0x6207913e9370] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe68a3e0f0] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x5660cd689a80] = ;;

		*node[0x5660cd689ab0] = 0;

		*node[0x5660cd689ae0] = ;;

		*node[0x5660cd689b10] = input;

		*node[0x5660cd689b40] = 1;

		*node[0x5660cd689b70] = 2;

		*node[0x5660cd689ba0] = 3;

		*node[0x5660cd689bd0] = ;;

		*node[0x5660cd689c30] = 1;

		*node[0x5660cd689c60] = 2;

		*node[0x5660cd689c90] = 3;

		*node[0x5660cd689cc0] = ;;

		*node[0x5660cd689cf0] = 4;

		*node[0x5660cd689d20] = 1;

		*node[0x5660cd689d50] = 2;

		*node[0x5660cd689d80] = 3;

		*node[0x5660cd689db0] = ;;

		*node[0x5660cd689de0] = if;

		*node[0x5660cd689e10] = op_no;

		*node[0x5660cd689e40] = ==;

		*node[0x5660cd689e70] = 1;

		*node[0x5660cd689ea0] = 0;

		*node[0x5660cd689ed0] = ;;

		*node[0x5660cd689f30] = 2;

		*node[0x5660cd689f60] = 3;

		*node[0x5660cd689f90] = else;

		*node[0x5660cd689fc0] = op_no;

		*node[0x5660cd689ff0] = ;;

		*node[0x5660cd68a050] = 1;

		*node[0x5660cd68a080] = 2;

		*node[0x5660cd68a0b0] = 3;

		*node[0x5660cd68a0e0] = ;;

		*node[0x5660cd68a110] = return;

		*node[0x5660cd68a140] = 0;

		*node[0x5660cd68a170] = ;;

		*node[0x5660cd68a1a0] = 5;

		*node[0x5660cd68a1d0] = 1;

		*node[0x5660cd68a200] = 2;

		*node[0x5660cd68a230] = ;;

		*node[0x5660cd68a260] = =;

		*node[0x5660cd68a290] = 7;

		*node[0x5660cd68c660] = -1;

		*node[0x5660cd68a350] = ;;

		*node[0x5660cd68a380] = =;

		*node[0x5660cd68a3b0] = 8;

		*node[0x5660cd68a3e0] = 1;

		*node[0x5660cd68a410] = ;;

		*node[0x5660cd68a440] = =;

		*node[0x5660cd68a470] = 9;

		*node[0x5660cd68a4a0] = 1000;

		*node[0x5660cd68a4d0] = ;;

		*node[0x5660cd68a500] = if;

		*node[0x5660cd68a530] = op_no;

		*node[0x5660cd68a560] = ==;

		*node[0x5660cd68a590] = 1;

		*node[0x5660cd68a5c0] = 0;

		*node[0x5660cd68a5f0] = ;;

		*node[0x5660cd68a620] = if;

		*node[0x5660cd68a650] = op_no;

		*node[0x5660cd68a680] = ==;

		*node[0x5660cd68a6b0] = 2;

		*node[0x5660cd68a6e0] = 0;

		*node[0x5660cd68a710] = ;;

		*node[0x5660cd68a740] = print;

		*node[0x5660cd68a770] = 9;

		*node[0x5660cd68a7a0] = else;

		*node[0x5660cd68a7d0] = op_no;

		*node[0x5660cd68a800] = ;;

		*node[0x5660cd68a830] = print;

		*node[0x5660cd68a860] = 7;

		*node[0x5660cd68a890] = else;

		*node[0x5660cd68a8c0] = op_no;

		*node[0x5660cd68a8f0] = ;;

		*node[0x5660cd68a920] = =;

		*node[0x5660cd68a950] = 10;

		*node[0x5660cd68a980] = -;

		*node[0x5660cd68a9b0] = 0;

		*node[0x5660cd68a9e0] = /;

		*node[0x5660cd68aa10] = 2;

		*node[0x5660cd68aa40] = 1;

		*node[0x5660cd68aa70] = ;;

		*node[0x5660cd68aaa0] = print;

		*node[0x5660cd68aad0] = 8;

		*node[0x5660cd68ab00] = ;;

		*node[0x5660cd68ab30] = print;

		*node[0x5660cd68ab60] = 10;

		*node[0x5660cd68ab90] = ;;

		*node[0x5660cd68abc0] = return;

		*node[0x5660cd68abf0] = 0;

		*node[0x5660cd68ac20] = ;;

		*node[0x5660cd68ac50] = 6;

		*node[0x5660cd68ac80] = 1;

		*node[0x5660cd68acb0] = 2;

		*node[0x5660cd68ace0] = 3;

		*node[0x5660cd68ad10] = ;;

		*node[0x5660cd68ad40] = =;

		*node[0x5660cd68ad70] = 7;

		*node[0x5660cd68c690] = -1;

		*node[0x5660cd68ae30] = ;;

		*node[0x5660cd68ae60] = =;

		*node[0x5660cd68ae90] = 8;

		*node[0x5660cd68aec0] = 1;

		*node[0x5660cd68aef0] = ;;

		*node[0x5660cd68af20] = =;

		*node[0x5660cd68af50] = 11;

		*node[0x5660cd68af80] = 2;

		*node[0x5660cd68afb0] = ;;

		*node[0x5660cd68afe0] = if;

		*node[0x5660cd68b010] = op_no;

		*node[0x5660cd68b040] = ==;

		*node[0x5660cd68b070] = 3;

		*node[0x5660cd68b0a0] = 0;

		*node[0x5660cd68b0d0] = ;;

		*node[0x5660cd68b100] = =;

		*node[0x5660cd68b130] = 12;

		*node[0x5660cd68b160] = 0;

		*node[0x5660cd68b190] = ;;

		*node[0x5660cd68b1c0] = =;

		*node[0x5660cd68b1f0] = 13;

		*node[0x5660cd68b220] = -;

		*node[0x5660cd68b250] = 0;

		*node[0x5660cd68b280] = /;

		*node[0x5660cd68b2b0] = 2;

		*node[0x5660cd68b2e0] = 1;

		*node[0x5660cd68b310] = ;;

		*node[0x5660cd68b340] = print;

		*node[0x5660cd68b370] = 11;

		*node[0x5660cd68b3a0] = ;;

		*node[0x5660cd68b3d0] = print;

		*node[0x5660cd68b400] = 12;

		*node[0x5660cd68b430] = 13;

		*node[0x5660cd68b460] = else;

		*node[0x5660cd68b490] = op_no;

		*node[0x5660cd68b4c0] = ;;

		*node[0x5660cd68b4f0] = =;

		*node[0x5660cd68b520] = 14;

		*node[0x5660cd68b550] = -;

		*node[0x5660cd68b580] = *;

		*node[0x5660cd68b5b0] = 2;

		*node[0x5660cd68b5e0] = 2;

		*node[0x5660cd68b610] = *;

		*node[0x5660cd68b640] = *;

		*node[0x5660cd68b670] = 4;

		*node[0x5660cd68b6a0] = 1;

		*node[0x5660cd68b6d0] = 3;

		*node[0x5660cd68b700] = ;;

		*node[0x5660cd68b730] = if;

		*node[0x5660cd68b760] = op_no;

		*node[0x5660cd68b790] = >;

		*node[0x5660cd68b7c0] = 14;

		*node[0x5660cd68b7f0] = 0;

		*node[0x5660cd68b820] = ;;

		*node[0x5660cd68b850] = =;

		*node[0x5660cd68b880] = 15;

		*node[0x5660cd68b8b0] = sqrt;

		*node[0x5660cd68b8e0] = 14;

		*node[0x5660cd68b910] = ;;

		*node[0x5660cd68b940] = =;

		*node[0x5660cd68b970] = 12;

		*node[0x5660cd68b9a0] = /;

		*node[0x5660cd68b9d0] = -;

		*node[0x5660cd68ba00] = -;

		*node[0x5660cd68ba30] = 0;

		*node[0x5660cd68ba60] = 2;

		*node[0x5660cd68ba90] = 15;

		*node[0x5660cd68bac0] = *;

		*node[0x5660cd68baf0] = 2;

		*node[0x5660cd68bb20] = 1;

		*node[0x5660cd68bb50] = ;;

		*node[0x5660cd68bb80] = =;

		*node[0x5660cd68bbb0] = 13;

		*node[0x5660cd68bbe0] = /;

		*node[0x5660cd68bc10] = +;

		*node[0x5660cd68bc40] = -;

		*node[0x5660cd68bc70] = 0;

		*node[0x5660cd68bca0] = 2;

		*node[0x5660cd68bcd0] = 15;

		*node[0x5660cd68bd00] = *;

		*node[0x5660cd68bd30] = 2;

		*node[0x5660cd68bd60] = 1;

		*node[0x5660cd68bd90] = ;;

		*node[0x5660cd68bdc0] = print;

		*node[0x5660cd68bdf0] = 11;

		*node[0x5660cd68be20] = ;;

		*node[0x5660cd68be50] = print;

		*node[0x5660cd68be80] = 12;

		*node[0x5660cd68beb0] = 13;

		*node[0x5660cd68bee0] = elseif;

		*node[0x5660cd68bf10] = op_no;

		*node[0x5660cd68bf40] = ==;

		*node[0x5660cd68bf70] = 14;

		*node[0x5660cd68bfa0] = 0;

		*node[0x5660cd68bfd0] = ;;

		*node[0x5660cd68c000] = =;

		*node[0x5660cd68c030] = 10;

		*node[0x5660cd68c060] = -;

		*node[0x5660cd68c090] = 0;

		*node[0x5660cd68c0c0] = *;

		*node[0x5660cd68c0f0] = /;

		*node[0x5660cd68c120] = 2;

		*node[0x5660cd68c150] = 2;

		*node[0x5660cd68c180] = 1;

		*node[0x5660cd68c1b0] = ;;

		*node[0x5660cd68c1e0] = print;

		*node[0x5660cd68c210] = 8;

		*node[0x5660cd68c240] = ;;

		*node[0x5660cd68c270] = print;

		*node[0x5660cd68c2a0] = 10;

		*node[0x5660cd68c2d0] = else;

		*node[0x5660cd68c300] = op_no;

		*node[0x5660cd68c330] = ;;

		*node[0x5660cd68c360] = print;

		*node[0x5660cd68c390] = 7;

		*node[0x5660cd68c3c0] = ;;

		*node[0x5660cd68c3f0] = return;

		*node[0x5660cd68c420] = 0;

		*node[0x5660cd68c450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe263a6380] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x61f664cef370] = ;;

		*node[0x61f664cef3a0] = 0;

		*node[0x61f664cef3d0] = ;;

		*node[0x61f664cef400] = input;

		*node[0x61f664cef430] = 1;

		*node[0x61f664cef460] = 2;

		*node[0x61f664cef490] = 3;

		*node[0x61f664cef4c0] = ;;

		*node[0x61f664cef520] = 1;

		*node[0x61f664cef550] = 2;

		*node[0x61f664cef580] = 3;

		*node[0x61f664cef5b0] = ;;

		*node[0x61f664cef5e0] = 4;

		*node[0x61f664cef610] = 1;

		*node[0x61f664cef640] = 2;

		*node[0x61f664cef670] = 3;

		*node[0x61f664cef6a0] = ;;

		*node[0x61f664cef6d0] = if;

		*node[0x61f664cef700] = op_no;

		*node[0x61f664cef730] = ==;

		*node[0x61f664cef760] = 1;

		*node[0x61f664cef790] = 0;

		*node[0x61f664cef7c0] = ;;

		*node[0x61f664cef820] = 2;

		*node[0x61f664cef850] = 3;

		*node[0x61f664cef880] = else;

		*node[0x61f664cef8b0] = op_no;

		*node[0x61f664cef8e0] = ;;

		*node[0x61f664cef940] = 1;

		*node[0x61f664cef970] = 2;

		*node[0x61f664cef9a0] = 3;

		*node[0x61f664cef9d0] = ;;

		*node[0x61f664cefa00] = return;

		*node[0x61f664cefa30] = 0;

		*node[0x61f664cefa60] = ;;

		*node[0x61f664cefa90] = 5;

		*node[0x61f664cefac0] = 1;

		*node[0x61f664cefaf0] = 2;

		*node[0x61f664cefb20] = ;;

		*node[0x61f664cefb50] = =;

		*node[0x61f664cefb80] = 7;

		*node[0x61f664cefbb0] = -;

		*node[0x61f664cefbe0] = 0;

		*node[0x61f664cefc10] = 1;

		*node[0x61f664cefc40] = ;;

		*node[0x61f664cefc70] = =;

		*node[0x61f664cefca0] = 8;

		*node[0x61f664cefcd0] = 1;

		*node[0x61f664cefd00] = ;;

		*node[0x61f664cefd30] = =;

		*node[0x61f664cefd60] = 9;

		*node[0x61f664cefd90] = 1000;

		*node[0x61f664cefdc0] = ;;

		*node[0x61f664cefdf0] = if;

		*node[0x61f664cefe20] = op_no;

		*node[0x61f664cefe50] = ==;

		*node[0x61f664cefe80] = 1;

		*node[0x61f664cefeb0] = 0;

		*node[0x61f664cefee0] = ;;

		*node[0x61f664ceff10] = if;

		*node[0x61f664ceff40] = op_no;

		*node[0x61f664ceff70] = ==;

		*node[0x61f664ceffa0] = 2;

		*node[0x61f664ceffd0] = 0;

		*node[0x61f664cf0000] = ;;

		*node[0x61f664cf0030] = print;

		*node[0x61f664cf0060] = 9;

		*node[0x61f664cf0090] = else;

		*node[0x61f664cf00c0] = op_no;

		*node[0x61f664cf00f0] = ;;

		*node[0x61f664cf0120] = print;

		*node[0x61f664cf0150] = 7;

		*node[0x61f664cf0180] = else;

		*node[0x61f664cf01b0] = op_no;

		*node[0x61f664cf01e0] = ;;

		*node[0x61f664cf0210] = =;

		*node[0x61f664cf0240] = 10;

		*node[0x61f664cf0270] = -;

		*node[0x61f664cf02a0] = 0;

		*node[0x61f664cf02d0] = /;

		*node[0x61f664cf0300] = 2;

		*node[0x61f664cf0330] = 1;

		*node[0x61f664cf0360] = ;;

		*node[0x61f664cf0390] = print;

		*node[0x61f664cf03c0] = 8;

		*node[0x61f664cf03f0] = ;;

		*node[0x61f664cf0420] = print;

		*node[0x61f664cf0450] = 10;

		*node[0x61f664cf0480] = ;;

		*node[0x61f664cf04b0] = return;

		*node[0x61f664cf04e0] = 0;

		*node[0x61f664cf0510] = ;;

		*node[0x61f664cf0540] = 6;

		*node[0x61f664cf0570] = 1;

		*node[0x61f664cf05a0] = 2;

		*node[0x61f664cf05d0] = 3;

		*node[0x61f664cf0600] = ;;

		*node[0x61f664cf0630] = =;

		*node[0x61f664cf0660] = 7;

		*node[0x61f664cf0690] = -;

		*node[0x61f664cf06c0] = 0;

		*node[0x61f664cf06f0] = 1;

		*node[0x61f664cf0720] = ;;

		*node[0x61f664cf0750] = =;

		*node[0x61f664cf0780] = 8;

		*node[0x61f664cf07b0] = 1;

		*node[0x61f664cf07e0] = ;;

		*node[0x61f664cf0810] = =;

		*node[0x61f664cf0840] = 11;

		*node[0x61f664cf0870] = 2;

		*node[0x61f664cf08a0] = ;;

		*node[0x61f664cf08d0] = if;

		*node[0x61f664cf0900] = op_no;

		*node[0x61f664cf0930] = ==;

		*node[0x61f664cf0960] = 3;

		*node[0x61f664cf0990] = 0;

		*node[0x61f664cf09c0] = ;;

		*node[0x61f664cf09f0] = =;

		*node[0x61f664cf0a20] = 12;

		*node[0x61f664cf0a50] = 0;

		*node[0x61f664cf0a80] = ;;

		*node[0x61f664cf0ab0] = =;

		*node[0x61f664cf0ae0] = 13;

		*node[0x61f664cf0b10] = -;

		*node[0x61f664cf0b40] = 0;

		*node[0x61f664cf0b70] = /;

		*node[0x61f664cf0ba0] = 2;

		*node[0x61f664cf0bd0] = 1;

		*node[0x61f664cf0c00] = ;;

		*node[0x61f664cf0c30] = print;

		*node[0x61f664cf0c60] = 11;

		*node[0x61f664cf0c90] = ;;

		*node[0x61f664cf0cc0] = print;

		*node[0x61f664cf0cf0] = 12;

		*node[0x61f664cf0d20] = 13;

		*node[0x61f664cf0d50] = else;

		*node[0x61f664cf0d80] = op_no;

		*node[0x61f664cf0db0] = ;;

		*node[0x61f664cf0de0] = =;

		*node[0x61f664cf0e10] = 14;

		*node[0x61f664cf0e40] = -;

		*node[0x61f664cf0e70] = *;

		*node[0x61f664cf0ea0] = 2;

		*node[0x61f664cf0ed0] = 2;

		*node[0x61f664cf0f00] = *;

		*node[0x61f664cf0f30] = *;

		*node[0x61f664cf0f60] = 4;

		*node[0x61f664cf0f90] = 1;

		*node[0x61f664cf0fc0] = 3;

		*node[0x61f664cf0ff0] = ;;

		*node[0x61f664cf1020] = if;

		*node[0x61f664cf1050] = op_no;

		*node[0x61f664cf1080] = >;

		*node[0x61f664cf10b0] = 14;

		*node[0x61f664cf10e0] = 0;

		*node[0x61f664cf1110] = ;;

		*node[0x61f664cf1140] = =;

		*node[0x61f664cf1170] = 15;

		*node[0x61f664cf11a0] = sqrt;

		*node[0x61f664cf11d0] = 14;

		*node[0x61f664cf1200] = ;;

		*node[0x61f664cf1230] = =;

		*node[0x61f664cf1260] = 12;

		*node[0x61f664cf1290] = /;

		*node[0x61f664cf12c0] = -;

		*node[0x61f664cf12f0] = -;

		*node[0x61f664cf1320] = 0;

		*node[0x61f664cf1350] = 2;

		*node[0x61f664cf1380] = 15;

		*node[0x61f664cf13b0] = *;

		*node[0x61f664cf13e0] = 2;

		*node[0x61f664cf1410] = 1;

		*node[0x61f664cf1440] = ;;

		*node[0x61f664cf1470] = =;

		*node[0x61f664cf14a0] = 13;

		*node[0x61f664cf14d0] = /;

		*node[0x61f664cf1500] = +;

		*node[0x61f664cf1530] = -;

		*node[0x61f664cf1560] = 0;

		*node[0x61f664cf1590] = 2;

		*node[0x61f664cf15c0] = 15;

		*node[0x61f664cf15f0] = *;

		*node[0x61f664cf1620] = 2;

		*node[0x61f664cf1650] = 1;

		*node[0x61f664cf1680] = ;;

		*node[0x61f664cf16b0] = print;

		*node[0x61f664cf16e0] = 11;

		*node[0x61f664cf1710] = ;;

		*node[0x61f664cf1740] = print;

		*node[0x61f664cf1770] = 12;

		*node[0x61f664cf17a0] = 13;

		*node[0x61f664cf17d0] = elseif;

		*node[0x61f664cf1800] = op_no;

		*node[0x61f664cf1830] = ==;

		*node[0x61f664cf1860] = 14;

		*node[0x61f664cf1890] = 0;

		*node[0x61f664cf18c0] = ;;

		*node[0x61f664cf18f0] = =;

		*node[0x61f664cf1920] = 10;

		*node[0x61f664cf1950] = -;

		*node[0x61f664cf1980] = 0;

		*node[0x61f664cf19b0] = *;

		*node[0x61f664cf19e0] = /;

		*node[0x61f664cf1a10] = 2;

		*node[0x61f664cf1a40] = 2;

		*node[0x61f664cf1a70] = 1;

		*node[0x61f664cf1aa0] = ;;

		*node[0x61f664cf1ad0] = print;

		*node[0x61f664cf1b00] = 8;

		*node[0x61f664cf1b30] = ;;

		*node[0x61f664cf1b60] = print;

		*node[0x61f664cf1b90] = 10;

		*node[0x61f664cf1bc0] = else;

		*node[0x61f664cf1bf0] = op_no;

		*node[0x61f664cf1c20] = ;;

		*node[0x61f664cf1c50] = print;

		*node[0x61f664cf1c80] = 7;

		*node[0x61f664cf1cb0] = ;;

		*node[0x61f664cf1ce0] = return;

		*node[0x61f664cf1d10] = 0;

		*node[0x61f664cf1d40] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc66b64130] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x61a0d64aac10] = ;;

		*node[0x61a0d64aac90] = 0;

		*node[0x61a0d64aacc0] = ;;

		*node[0x61a0d64aacf0] = input;

		*node[0x61a0d64aad20] = 1;

		*node[0x61a0d64aad50] = ;;

		*node[0x61a0d64aade0] = =;

		*node[0x61a0d64aad80] = 2;

		*node[0x61a0d64aadb0] = 1;

		*node[0x61a0d64aae10] = ;;

		*node[0x61a0d64aae40] = if;

		*node[0x61a0d64aae70] = op_no;

		*node[0x61a0d64aafc0] = ||;

		*node[0x61a0d64aaf00] = <;

		*node[0x61a0d64aaea0] = 1;

		*node[0x61a0d64aaed0] = 0;

		*node[0x61a0d64aaf90] = ==;

		*node[0x61a0d64aaf30] = 1;

		*node[0x61a0d64aaf60] = 0;

		*node[0x61a0d64aaff0] = ;;

		*node[0x61a0d64ab020] = print;

		*node[0x61a0d64ab050] = 2;

		*node[0x61a0d64ab080] = elseif;

		*node[0x61a0d64ab0b0] = op_no;

		*node[0x61a0d64ab140] = ==;

		*node[0x61a0d64ab0e0] = 1;

		*node[0x61a0d64ab110] = 1;

		*node[0x61a0d64ab170] = ;;

		*node[0x61a0d64ab1a0] = print;

		*node[0x61a0d64ab1d0] = 1;

		*node[0x61a0d64ab200] = else;

		*node[0x61a0d64ab230] = op_no;

		*node[0x61a0d64ab260] = ;;

		*node[0x61a0d64ab350] = =;

		*node[0x61a0d64ab290] = 3;

		*node[0x61a0d64ab320] = 1;

		*node[0x61a0d64ab380] = ;;

		*node[0x61a0d64ab3b0] = print;

		*node[0x61a0d64ab3e0] = 3;

		*node[0x61a0d64ab410] = ;;

		*node[0x61a0d64ab490] = 4;

		*node[0x61a0d64ab4c0] = 1;

		*node[0x61a0d64ab4f0] = ;;

		*node[0x61a0d64ab520] = if;

		*node[0x61a0d64ab550] = op_no;

		*node[0x61a0d64ab5e0] = ==;

		*node[0x61a0d64ab580] = 1;

		*node[0x61a0d64ab5b0] = 1;

		*node[0x61a0d64ab610] = ;;

		*node[0x61a0d64ab640] = return;

		*node[0x61a0d64ab670] = 1;

		*node[0x61a0d64ab6a0] = ;;

		*node[0x61a0d64ab790] = =;

		*node[0x61a0d64ab6d0] = 5;

		*node[0x61a0d64ab760] = -;

		*node[0x61a0d64ab700] = 1;

		*node[0x61a0d64ab730] = 1;

		*node[0x61a0d64ab7c0] = ;;

		*node[0x61a0d64ab910] = =;

		*node[0x61a0d64ab7f0] = 1;

		*node[0x61a0d64ab8e0] = *;

		*node[0x61a0d64ab820] = 1;

		*node[0x61a0d64ab8b0] = 5;

		*node[0x61a0d64ab940] = ;;

		*node[0x61a0d64ab970] = return;

		*node[0x61a0d64ab9a0] = 1;

		*node[0x61a0d64ab9d0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffc4f5ba60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x57233ef2c3e0] = ;;

		*node[0x57233ef2c460] = 0;

		*node[0x57233ef2c490] = ;;

		*node[0x57233ef2c4c0] = input;

		*node[0x57233ef2c4f0] = 1;

		*node[0x57233ef2c520] = 2;

		*node[0x57233ef2c550] = 3;

		*node[0x57233ef2c5b0] = ;;

		*node[0x57233ef2c610] = 1;

		*node[0x57233ef2c640] = 2;

		*node[0x57233ef2c670] = 3;

		*node[0x57233ef2c6a0] = ;;

		*node[0x57233ef2c720] = 4;

		*node[0x57233ef2c750] = 1;

		*node[0x57233ef2c780] = 2;

		*node[0x57233ef2c7b0] = 3;

		*node[0x57233ef2c810] = ;;

		*node[0x57233ef2c840] = if;

		*node[0x57233ef2c870] = op_no;

		*node[0x57233ef2c900] = ==;

		*node[0x57233ef2c8a0] = 1;

		*node[0x57233ef2c8d0] = 0;

		*node[0x57233ef2c930] = ;;

		*node[0x57233ef2c990] = 2;

		*node[0x57233ef2c9c0] = 3;

		*node[0x57233ef2c9f0] = else;

		*node[0x57233ef2ca20] = op_no;

		*node[0x57233ef2ca50] = ;;

		*node[0x57233ef2cb00] = 1;

		*node[0x57233ef2cb30] = 2;

		*node[0x57233ef2cb60] = 3;

		*node[0x57233ef2cb90] = ;;

		*node[0x57233ef2cbc0] = return;

		*node[0x57233ef2cbf0] = 0;

		*node[0x57233ef2cc20] = ;;

		*node[0x57233ef2cca0] = 5;

		*node[0x57233ef2cd00] = 1;

		*node[0x57233ef2cd30] = 2;

		*node[0x57233ef2cd60] = ;;

		*node[0x57233ef2ce80] = =;

		*node[0x57233ef2cd90] = 7;

		*node[0x57233ef2ce50] = -;

		*node[0x57233ef2cdf0] = 0;

		*node[0x57233ef2ce20] = 1;

		*node[0x57233ef2ceb0] = ;;

		*node[0x57233ef2cf40] = =;

		*node[0x57233ef2cee0] = 8;

		*node[0x57233ef2cf10] = 1;

		*node[0x57233ef2cf70] = ;;

		*node[0x57233ef2d050] = =;

		*node[0x57233ef2cfa0] = 9;

		*node[0x57233ef2d020] = 1000;

		*node[0x57233ef2d080] = ;;

		*node[0x57233ef2d0b0] = if;

		*node[0x57233ef2d0e0] = op_no;

		*node[0x57233ef2d170] = ==;

		*node[0x57233ef2d110] = 1;

		*node[0x57233ef2d140] = 0;

		*node[0x57233ef2d1a0] = ;;

		*node[0x57233ef2d1d0] = if;

		*node[0x57233ef2d200] = op_no;

		*node[0x57233ef2d290] = ==;

		*node[0x57233ef2d230] = 2;

		*node[0x57233ef2d260] = 0;

		*node[0x57233ef2d2c0] = ;;

		*node[0x57233ef2d2f0] = print;

		*node[0x57233ef2d320] = 9;

		*node[0x57233ef2d350] = else;

		*node[0x57233ef2d380] = op_no;

		*node[0x57233ef2d3b0] = ;;

		*node[0x57233ef2d3e0] = print;

		*node[0x57233ef2d410] = 7;

		*node[0x57233ef2d440] = else;

		*node[0x57233ef2d470] = op_no;

		*node[0x57233ef2d4a0] = ;;

		*node[0x57233ef2d5f0] = =;

		*node[0x57233ef2d4d0] = 10;

		*node[0x57233ef2d5c0] = -;

		*node[0x57233ef2d500] = 0;

		*node[0x57233ef2d590] = /;

		*node[0x57233ef2d530] = 2;

		*node[0x57233ef2d560] = 1;

		*node[0x57233ef2d620] = ;;

		*node[0x57233ef2d650] = print;

		*node[0x57233ef2d680] = 8;

		*node[0x57233ef2d6b0] = ;;

		*node[0x57233ef2d6e0] = print;

		*node[0x57233ef2d710] = 10;

		*node[0x57233ef2d740] = ;;

		*node[0x57233ef2d770] = return;

		*node[0x57233ef2d7a0] = 0;

		*node[0x57233ef2d7d0] = ;;

		*node[0x57233ef2d850] = 6;

		*node[0x57233ef2d880] = 1;

		*node[0x57233ef2d8b0] = 2;

		*node[0x57233ef2d8e0] = 3;

		*node[0x57233ef2d940] = ;;

		*node[0x57233ef2da30] = =;

		*node[0x57233ef2d970] = 7;

		*node[0x57233ef2da00] = -;

		*node[0x57233ef2d9a0] = 0;

		*node[0x57233ef2d9d0] = 1;

		*node[0x57233ef2da60] = ;;

		*node[0x57233ef2db40] = =;

		*node[0x57233ef2da90] = 8;

		*node[0x57233ef2db10] = 1;

		*node[0x57233ef2db70] = ;;

		*node[0x57233ef2dc00] = =;

		*node[0x57233ef2dba0] = 11;

		*node[0x57233ef2dbd0] = 2;

		*node[0x57233ef2dc30] = ;;

		*node[0x57233ef2dc60] = if;

		*node[0x57233ef2dc90] = op_no;

		*node[0x57233ef2dd20] = ==;

		*node[0x57233ef2dcc0] = 3;

		*node[0x57233ef2dcf0] = 0;

		*node[0x57233ef2dd50] = ;;

		*node[0x57233ef2dde0] = =;

		*node[0x57233ef2dd80] = 12;

		*node[0x57233ef2ddb0] = 0;

		*node[0x57233ef2de10] = ;;

		*node[0x57233ef2df60] = =;

		*node[0x57233ef2de40] = 13;

		*node[0x57233ef2df30] = -;

		*node[0x57233ef2de70] = 0;

		*node[0x57233ef2df00] = /;

		*node[0x57233ef2dea0] = 2;

		*node[0x57233ef2ded0] = 1;

		*node[0x57233ef2df90] = ;;

		*node[0x57233ef2dfc0] = print;

		*node[0x57233ef2dff0] = 11;

		*node[0x57233ef2e020] = ;;

		*node[0x57233ef2e050] = print;

		*node[0x57233ef2e080] = 12;

		*node[0x57233ef2e0b0] = 13;

		*node[0x57233ef2e0e0] = else;

		*node[0x57233ef2e110] = op_no;

		*node[0x57233ef2e140] = ;;

		*node[0x57233ef2e3e0] = =;

		*node[0x57233ef2e170] = 14;

		*node[0x57233ef2e3b0] = -;

		*node[0x57233ef2e290] = *;

		*node[0x57233ef2e230] = 2;

		*node[0x57233ef2e260] = 2;

		*node[0x57233ef2e380] = *;

		*node[0x57233ef2e320] = *;

		*node[0x57233ef2e2c0] = 4;

		*node[0x57233ef2e2f0] = 1;

		*node[0x57233ef2e350] = 3;

		*node[0x57233ef2e410] = ;;

		*node[0x57233ef2e440] = if;

		*node[0x57233ef2e470] = op_no;

		*node[0x57233ef2e500] = >;

		*node[0x57233ef2e4a0] = 14;

		*node[0x57233ef2e4d0] = 0;

		*node[0x57233ef2e530] = ;;

		*node[0x57233ef2e5f0] = =;

		*node[0x57233ef2e560] = 15;

		*node[0x57233ef2e5c0] = sqrt;

		*node[0x57233ef2e590] = 14;

		*node[0x57233ef2e620] = ;;

		*node[0x57233ef2e830] = =;

		*node[0x57233ef2e650] = 12;

		*node[0x57233ef2e800] = -;

		*node[0x57233ef2e6e0] = -;

		*node[0x57233ef2e680] = 0;

		*node[0x57233ef2e6b0] = 2;

		*node[0x57233ef2e7d0] = *;

		*node[0x57233ef2e770] = /;

		*node[0x57233ef2e710] = 15;

		*node[0x57233ef2e740] = 2;

		*node[0x57233ef2e7a0] = 1;

		*node[0x57233ef2e860] = ;;

		*node[0x57233ef2ea70] = =;

		*node[0x57233ef2e890] = 13;

		*node[0x57233ef2ea40] = +;

		*node[0x57233ef2e920] = -;

		*node[0x57233ef2e8c0] = 0;

		*node[0x57233ef2e8f0] = 2;

		*node[0x57233ef2ea10] = *;

		*node[0x57233ef2e9b0] = /;

		*node[0x57233ef2e950] = 15;

		*node[0x57233ef2e980] = 2;

		*node[0x57233ef2e9e0] = 1;

		*node[0x57233ef2eaa0] = ;;

		*node[0x57233ef2ead0] = print;

		*node[0x57233ef2eb00] = 11;

		*node[0x57233ef2eb30] = ;;

		*node[0x57233ef2eb60] = print;

		*node[0x57233ef2eb90] = 12;

		*node[0x57233ef2ebc0] = 13;

		*node[0x57233ef2ebf0] = elseif;

		*node[0x57233ef2ec20] = op_no;

		*node[0x57233ef2ecb0] = ==;

		*node[0x57233ef2ec50] = 14;

		*node[0x57233ef2ec80] = 0;

		*node[0x57233ef2ece0] = ;;

		*node[0x57233ef2ee90] = =;

		*node[0x57233ef2ed10] = 10;

		*node[0x57233ef2ee60] = -;

		*node[0x57233ef2ed40] = 0;

		*node[0x57233ef2ee30] = *;

		*node[0x57233ef2edd0] = /;

		*node[0x57233ef2ed70] = 2;

		*node[0x57233ef2eda0] = 2;

		*node[0x57233ef2ee00] = 1;

		*node[0x57233ef2eec0] = ;;

		*node[0x57233ef2eef0] = print;

		*node[0x57233ef2ef20] = 8;

		*node[0x57233ef2ef50] = ;;

		*node[0x57233ef2ef80] = print;

		*node[0x57233ef2efb0] = 10;

		*node[0x57233ef2efe0] = else;

		*node[0x57233ef2f010] = op_no;

		*node[0x57233ef2f040] = ;;

		*node[0x57233ef2f070] = print;

		*node[0x57233ef2f0a0] = 7;

		*node[0x57233ef2f0d0] = ;;

		*node[0x57233ef2f100] = return;

		*node[0x57233ef2f130] = 0;

		*node[0x57233ef2f160] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff2b71bf90] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x5d0deca52370] = ;;

		*node[0x5d0deca523a0] = 0;

		*node[0x5d0deca523d0] = ;;

		*node[0x5d0deca52400] = input;

		*node[0x5d0deca52430] = 1;

		*node[0x5d0deca52460] = 2;

		*node[0x5d0deca52490] = 3;

		*node[0x5d0deca524c0] = ;;

		*node[0x5d0deca52520] = 1;

		*node[0x5d0deca52550] = 2;

		*node[0x5d0deca52580] = 3;

		*node[0x5d0deca525b0] = ;;

		*node[0x5d0deca525e0] = 4;

		*node[0x5d0deca52610] = 1;

		*node[0x5d0deca52640] = 2;

		*node[0x5d0deca52670] = 3;

		*node[0x5d0deca526a0] = ;;

		*node[0x5d0deca526d0] = if;

		*node[0x5d0deca52700] = op_no;

		*node[0x5d0deca52730] = ==;

		*node[0x5d0deca52760] = 1;

		*node[0x5d0deca52790] = 0;

		*node[0x5d0deca527c0] = ;;

		*node[0x5d0deca52820] = 2;

		*node[0x5d0deca52850] = 3;

		*node[0x5d0deca52880] = else;

		*node[0x5d0deca528b0] = op_no;

		*node[0x5d0deca528e0] = ;;

		*node[0x5d0deca52940] = 1;

		*node[0x5d0deca52970] = 2;

		*node[0x5d0deca529a0] = 3;

		*node[0x5d0deca529d0] = ;;

		*node[0x5d0deca52a00] = return;

		*node[0x5d0deca52a30] = 0;

		*node[0x5d0deca52a60] = ;;

		*node[0x5d0deca52a90] = 5;

		*node[0x5d0deca52ac0] = 1;

		*node[0x5d0deca52af0] = 2;

		*node[0x5d0deca52b20] = ;;

		*node[0x5d0deca52b50] = =;

		*node[0x5d0deca52b80] = 7;

		*node[0x5d0deca54f50] = -1;

		*node[0x5d0deca52c40] = ;;

		*node[0x5d0deca52c70] = =;

		*node[0x5d0deca52ca0] = 8;

		*node[0x5d0deca52cd0] = 1;

		*node[0x5d0deca52d00] = ;;

		*node[0x5d0deca52d30] = =;

		*node[0x5d0deca52d60] = 9;

		*node[0x5d0deca52d90] = 1000;

		*node[0x5d0deca52dc0] = ;;

		*node[0x5d0deca52df0] = if;

		*node[0x5d0deca52e20] = op_no;

		*node[0x5d0deca52e50] = ==;

		*node[0x5d0deca52e80] = 1;

		*node[0x5d0deca52eb0] = 0;

		*node[0x5d0deca52ee0] = ;;

		*node[0x5d0deca52f10] = if;

		*node[0x5d0deca52f40] = op_no;

		*node[0x5d0deca52f70] = ==;

		*node[0x5d0deca52fa0] = 2;

		*node[0x5d0deca52fd0] = 0;

		*node[0x5d0deca53000] = ;;

		*node[0x5d0deca53030] = print;

		*node[0x5d0deca53060] = 9;

		*node[0x5d0deca53090] = else;

		*node[0x5d0deca530c0] = op_no;

		*node[0x5d0deca530f0] = ;;

		*node[0x5d0deca53120] = print;

		*node[0x5d0deca53150] = 7;

		*node[0x5d0deca53180] = else;

		*node[0x5d0deca531b0] = op_no;

		*node[0x5d0deca531e0] = ;;

		*node[0x5d0deca53210] = =;

		*node[0x5d0deca53240] = 10;

		*node[0x5d0deca53270] = -;

		*node[0x5d0deca532a0] = 0;

		*node[0x5d0deca532d0] = /;

		*node[0x5d0deca53300] = 2;

		*node[0x5d0deca53330] = 1;

		*node[0x5d0deca53360] = ;;

		*node[0x5d0deca53390] = print;

		*node[0x5d0deca533c0] = 8;

		*node[0x5d0deca533f0] = ;;

		*node[0x5d0deca53420] = print;

		*node[0x5d0deca53450] = 10;

		*node[0x5d0deca53480] = ;;

		*node[0x5d0deca534b0] = return;

		*node[0x5d0deca534e0] = 0;

		*node[0x5d0deca53510] = ;;

		*node[0x5d0deca53540] = 6;

		*node[0x5d0deca53570] = 1;

		*node[0x5d0deca535a0] = 2;

		*node[0x5d0deca535d0] = 3;

		*node[0x5d0deca53600] = ;;

		*node[0x5d0deca53630] = =;

		*node[0x5d0deca53660] = 7;

		*node[0x5d0deca54f80] = -1;

		*node[0x5d0deca53720] = ;;

		*node[0x5d0deca53750] = =;

		*node[0x5d0deca53780] = 8;

		*node[0x5d0deca537b0] = 1;

		*node[0x5d0deca537e0] = ;;

		*node[0x5d0deca53810] = =;

		*node[0x5d0deca53840] = 11;

		*node[0x5d0deca53870] = 2;

		*node[0x5d0deca538a0] = ;;

		*node[0x5d0deca538d0] = if;

		*node[0x5d0deca53900] = op_no;

		*node[0x5d0deca53930] = ==;

		*node[0x5d0deca53960] = 3;

		*node[0x5d0deca53990] = 0;

		*node[0x5d0deca539c0] = ;;

		*node[0x5d0deca539f0] = =;

		*node[0x5d0deca53a20] = 12;

		*node[0x5d0deca53a50] = 0;

		*node[0x5d0deca53a80] = ;;

		*node[0x5d0deca53ab0] = =;

		*node[0x5d0deca53ae0] = 13;

		*node[0x5d0deca53b10] = -;

		*node[0x5d0deca53b40] = 0;

		*node[0x5d0deca53b70] = /;

		*node[0x5d0deca53ba0] = 2;

		*node[0x5d0deca53bd0] = 1;

		*node[0x5d0deca53c00] = ;;

		*node[0x5d0deca53c30] = print;

		*node[0x5d0deca53c60] = 11;

		*node[0x5d0deca53c90] = ;;

		*node[0x5d0deca53cc0] = print;

		*node[0x5d0deca53cf0] = 12;

		*node[0x5d0deca53d20] = 13;

		*node[0x5d0deca53d50] = else;

		*node[0x5d0deca53d80] = op_no;

		*node[0x5d0deca53db0] = ;;

		*node[0x5d0deca53de0] = =;

		*node[0x5d0deca53e10] = 14;

		*node[0x5d0deca53e40] = -;

		*node[0x5d0deca53e70] = *;

		*node[0x5d0deca53ea0] = 2;

		*node[0x5d0deca53ed0] = 2;

		*node[0x5d0deca53f00] = *;

		*node[0x5d0deca53f30] = *;

		*node[0x5d0deca53f60] = 4;

		*node[0x5d0deca53f90] = 1;

		*node[0x5d0deca53fc0] = 3;

		*node[0x5d0deca53ff0] = ;;

		*node[0x5d0deca54020] = if;

		*node[0x5d0deca54050] = op_no;

		*node[0x5d0deca54080] = >;

		*node[0x5d0deca540b0] = 14;

		*node[0x5d0deca540e0] = 0;

		*node[0x5d0deca54110] = ;;

		*node[0x5d0deca54140] = =;

		*node[0x5d0deca54170] = 15;

		*node[0x5d0deca541a0] = sqrt;

		*node[0x5d0deca541d0] = 14;

		*node[0x5d0deca54200] = ;;

		*node[0x5d0deca54230] = =;

		*node[0x5d0deca54260] = 12;

		*node[0x5d0deca54290] = -;

		*node[0x5d0deca542c0] = -;

		*node[0x5d0deca542f0] = 0;

		*node[0x5d0deca54320] = 2;

		*node[0x5d0deca54350] = *;

		*node[0x5d0deca54380] = /;

		*node[0x5d0deca543b0] = 15;

		*node[0x5d0deca543e0] = 2;

		*node[0x5d0deca54410] = 1;

		*node[0x5d0deca54440] = ;;

		*node[0x5d0deca54470] = =;

		*node[0x5d0deca544a0] = 13;

		*node[0x5d0deca544d0] = +;

		*node[0x5d0deca54500] = -;

		*node[0x5d0deca54530] = 0;

		*node[0x5d0deca54560] = 2;

		*node[0x5d0deca54590] = *;

		*node[0x5d0deca545c0] = /;

		*node[0x5d0deca545f0] = 15;

		*node[0x5d0deca54620] = 2;

		*node[0x5d0deca54650] = 1;

		*node[0x5d0deca54680] = ;;

		*node[0x5d0deca546b0] = print;

		*node[0x5d0deca546e0] = 11;

		*node[0x5d0deca54710] = ;;

		*node[0x5d0deca54740] = print;

		*node[0x5d0deca54770] = 12;

		*node[0x5d0deca547a0] = 13;

		*node[0x5d0deca547d0] = elseif;

		*node[0x5d0deca54800] = op_no;

		*node[0x5d0deca54830] = ==;

		*node[0x5d0deca54860] = 14;

		*node[0x5d0deca54890] = 0;

		*node[0x5d0deca548c0] = ;;

		*node[0x5d0deca548f0] = =;

		*node[0x5d0deca54920] = 10;

		*node[0x5d0deca54950] = -;

		*node[0x5d0deca54980] = 0;

		*node[0x5d0deca549b0] = *;

		*node[0x5d0deca549e0] = /;

		*node[0x5d0deca54a10] = 2;

		*node[0x5d0deca54a40] = 2;

		*node[0x5d0deca54a70] = 1;

		*node[0x5d0deca54aa0] = ;;

		*node[0x5d0deca54ad0] = print;

		*node[0x5d0deca54b00] = 8;

		*node[0x5d0deca54b30] = ;;

		*node[0x5d0deca54b60] = print;

		*node[0x5d0deca54b90] = 10;

		*node[0x5d0deca54bc0] = else;

		*node[0x5d0deca54bf0] = op_no;

		*node[0x5d0deca54c20] = ;;

		*node[0x5d0deca54c50] = print;

		*node[0x5d0deca54c80] = 7;

		*node[0x5d0deca54cb0] = ;;

		*node[0x5d0deca54ce0] = return;

		*node[0x5d0deca54d10] = 0;

		*node[0x5d0deca54d40] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd8dffcdd0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6203d6f983c0] = ;;

		*node[0x6203d6f98440] = 0;

		*node[0x6203d6f98470] = ;;

		*node[0x6203d6f984a0] = input;

		*node[0x6203d6f984d0] = 1;

		*node[0x6203d6f98500] = 2;

		*node[0x6203d6f98530] = 3;

		*node[0x6203d6f98590] = ;;

		*node[0x6203d6f985f0] = 1;

		*node[0x6203d6f98620] = 2;

		*node[0x6203d6f98650] = 3;

		*node[0x6203d6f98680] = ;;

		*node[0x6203d6f98700] = 4;

		*node[0x6203d6f98730] = 1;

		*node[0x6203d6f98760] = 2;

		*node[0x6203d6f98790] = 3;

		*node[0x6203d6f987f0] = ;;

		*node[0x6203d6f98820] = if;

		*node[0x6203d6f98850] = op_no;

		*node[0x6203d6f988e0] = ==;

		*node[0x6203d6f98880] = 1;

		*node[0x6203d6f988b0] = 0;

		*node[0x6203d6f98910] = ;;

		*node[0x6203d6f98970] = 2;

		*node[0x6203d6f989a0] = 3;

		*node[0x6203d6f989d0] = else;

		*node[0x6203d6f98a00] = op_no;

		*node[0x6203d6f98a30] = ;;

		*node[0x6203d6f98ae0] = 1;

		*node[0x6203d6f98b10] = 2;

		*node[0x6203d6f98b40] = 3;

		*node[0x6203d6f98b70] = ;;

		*node[0x6203d6f98ba0] = return;

		*node[0x6203d6f98bd0] = 0;

		*node[0x6203d6f98c00] = ;;

		*node[0x6203d6f98c80] = 5;

		*node[0x6203d6f98ce0] = 1;

		*node[0x6203d6f98d10] = 2;

		*node[0x6203d6f98d40] = ;;

		*node[0x6203d6f98e60] = =;

		*node[0x6203d6f98d70] = 7;

		*node[0x6203d6f98e30] = -;

		*node[0x6203d6f98dd0] = 0;

		*node[0x6203d6f98e00] = 1;

		*node[0x6203d6f98e90] = ;;

		*node[0x6203d6f98f20] = =;

		*node[0x6203d6f98ec0] = 8;

		*node[0x6203d6f98ef0] = 1;

		*node[0x6203d6f98f50] = ;;

		*node[0x6203d6f99030] = =;

		*node[0x6203d6f98f80] = 9;

		*node[0x6203d6f99000] = 1000;

		*node[0x6203d6f99060] = ;;

		*node[0x6203d6f99090] = if;

		*node[0x6203d6f990c0] = op_no;

		*node[0x6203d6f99150] = ==;

		*node[0x6203d6f990f0] = 1;

		*node[0x6203d6f99120] = 0;

		*node[0x6203d6f99180] = ;;

		*node[0x6203d6f991b0] = if;

		*node[0x6203d6f991e0] = op_no;

		*node[0x6203d6f99270] = ==;

		*node[0x6203d6f99210] = 2;

		*node[0x6203d6f99240] = 0;

		*node[0x6203d6f992a0] = ;;

		*node[0x6203d6f992d0] = print;

		*node[0x6203d6f99300] = 9;

		*node[0x6203d6f99330] = else;

		*node[0x6203d6f99360] = op_no;

		*node[0x6203d6f99390] = ;;

		*node[0x6203d6f993c0] = print;

		*node[0x6203d6f993f0] = 7;

		*node[0x6203d6f99420] = else;

		*node[0x6203d6f99450] = op_no;

		*node[0x6203d6f99480] = ;;

		*node[0x6203d6f995d0] = =;

		*node[0x6203d6f994b0] = 10;

		*node[0x6203d6f995a0] = -;

		*node[0x6203d6f994e0] = 0;

		*node[0x6203d6f99570] = /;

		*node[0x6203d6f99510] = 2;

		*node[0x6203d6f99540] = 1;

		*node[0x6203d6f99600] = ;;

		*node[0x6203d6f99630] = print;

		*node[0x6203d6f99660] = 8;

		*node[0x6203d6f99690] = ;;

		*node[0x6203d6f996c0] = print;

		*node[0x6203d6f996f0] = 10;

		*node[0x6203d6f99720] = ;;

		*node[0x6203d6f99750] = return;

		*node[0x6203d6f99780] = 0;

		*node[0x6203d6f997b0] = ;;

		*node[0x6203d6f99830] = 6;

		*node[0x6203d6f99860] = 1;

		*node[0x6203d6f99890] = 2;

		*node[0x6203d6f998c0] = 3;

		*node[0x6203d6f99920] = ;;

		*node[0x6203d6f99a10] = =;

		*node[0x6203d6f99950] = 7;

		*node[0x6203d6f999e0] = -;

		*node[0x6203d6f99980] = 0;

		*node[0x6203d6f999b0] = 1;

		*node[0x6203d6f99a40] = ;;

		*node[0x6203d6f99b20] = =;

		*node[0x6203d6f99a70] = 8;

		*node[0x6203d6f99af0] = 1;

		*node[0x6203d6f99b50] = ;;

		*node[0x6203d6f99be0] = =;

		*node[0x6203d6f99b80] = 11;

		*node[0x6203d6f99bb0] = 2;

		*node[0x6203d6f99c10] = ;;

		*node[0x6203d6f99c40] = if;

		*node[0x6203d6f99c70] = op_no;

		*node[0x6203d6f99d00] = ==;

		*node[0x6203d6f99ca0] = 3;

		*node[0x6203d6f99cd0] = 0;

		*node[0x6203d6f99d30] = ;;

		*node[0x6203d6f99dc0] = =;

		*node[0x6203d6f99d60] = 12;

		*node[0x6203d6f99d90] = 0;

		*node[0x6203d6f99df0] = ;;

		*node[0x6203d6f99f40] = =;

		*node[0x6203d6f99e20] = 13;

		*node[0x6203d6f99f10] = -;

		*node[0x6203d6f99e50] = 0;

		*node[0x6203d6f99ee0] = /;

		*node[0x6203d6f99e80] = 2;

		*node[0x6203d6f99eb0] = 1;

		*node[0x6203d6f99f70] = ;;

		*node[0x6203d6f99fa0] = print;

		*node[0x6203d6f99fd0] = 11;

		*node[0x6203d6f9a000] = ;;

		*node[0x6203d6f9a030] = print;

		*node[0x6203d6f9a060] = 12;

		*node[0x6203d6f9a090] = 13;

		*node[0x6203d6f9a0c0] = else;

		*node[0x6203d6f9a0f0] = op_no;

		*node[0x6203d6f9a120] = ;;

		*node[0x6203d6f9a3c0] = =;

		*node[0x6203d6f9a150] = 14;

		*node[0x6203d6f9a390] = -;

		*node[0x6203d6f9a270] = *;

		*node[0x6203d6f9a210] = 2;

		*node[0x6203d6f9a240] = 2;

		*node[0x6203d6f9a360] = *;

		*node[0x6203d6f9a300] = *;

		*node[0x6203d6f9a2a0] = 4;

		*node[0x6203d6f9a2d0] = 1;

		*node[0x6203d6f9a330] = 3;

		*node[0x6203d6f9a3f0] = ;;

		*node[0x6203d6f9a420] = if;

		*node[0x6203d6f9a450] = op_no;

		*node[0x6203d6f9a4e0] = >;

		*node[0x6203d6f9a480] = 14;

		*node[0x6203d6f9a4b0] = 0;

		*node[0x6203d6f9a510] = ;;

		*node[0x6203d6f9a5d0] = =;

		*node[0x6203d6f9a540] = 15;

		*node[0x6203d6f9a5a0] = sqrt;

		*node[0x6203d6f9a570] = 14;

		*node[0x6203d6f9a600] = ;;

		*node[0x6203d6f9a810] = =;

		*node[0x6203d6f9a630] = 12;

		*node[0x6203d6f9a7e0] = -;

		*node[0x6203d6f9a6c0] = -;

		*node[0x6203d6f9a660] = 0;

		*node[0x6203d6f9a690] = 2;

		*node[0x6203d6f9a7b0] = *;

		*node[0x6203d6f9a750] = /;

		*node[0x6203d6f9a6f0] = 15;

		*node[0x6203d6f9a720] = 2;

		*node[0x6203d6f9a780] = 1;

		*node[0x6203d6f9a840] = ;;

		*node[0x6203d6f9aa50] = =;

		*node[0x6203d6f9a870] = 13;

		*node[0x6203d6f9aa20] = +;

		*node[0x6203d6f9a900] = -;

		*node[0x6203d6f9a8a0] = 0;

		*node[0x6203d6f9a8d0] = 2;

		*node[0x6203d6f9a9f0] = *;

		*node[0x6203d6f9a990] = /;

		*node[0x6203d6f9a930] = 15;

		*node[0x6203d6f9a960] = 2;

		*node[0x6203d6f9a9c0] = 1;

		*node[0x6203d6f9aa80] = ;;

		*node[0x6203d6f9aab0] = print;

		*node[0x6203d6f9aae0] = 11;

		*node[0x6203d6f9ab10] = ;;

		*node[0x6203d6f9ab40] = print;

		*node[0x6203d6f9ab70] = 12;

		*node[0x6203d6f9aba0] = 13;

		*node[0x6203d6f9abd0] = elseif;

		*node[0x6203d6f9ac00] = op_no;

		*node[0x6203d6f9ac90] = ==;

		*node[0x6203d6f9ac30] = 14;

		*node[0x6203d6f9ac60] = 0;

		*node[0x6203d6f9acc0] = ;;

		*node[0x6203d6f9ae70] = =;

		*node[0x6203d6f9acf0] = 10;

		*node[0x6203d6f9ae40] = -;

		*node[0x6203d6f9ad20] = 0;

		*node[0x6203d6f9ae10] = *;

		*node[0x6203d6f9adb0] = /;

		*node[0x6203d6f9ad50] = 2;

		*node[0x6203d6f9ad80] = 2;

		*node[0x6203d6f9ade0] = 1;

		*node[0x6203d6f9aea0] = ;;

		*node[0x6203d6f9aed0] = print;

		*node[0x6203d6f9af00] = 8;

		*node[0x6203d6f9af30] = ;;

		*node[0x6203d6f9af60] = print;

		*node[0x6203d6f9af90] = 10;

		*node[0x6203d6f9afc0] = else;

		*node[0x6203d6f9aff0] = op_no;

		*node[0x6203d6f9b020] = ;;

		*node[0x6203d6f9b050] = print;

		*node[0x6203d6f9b080] = 7;

		*node[0x6203d6f9b0b0] = ;;

		*node[0x6203d6f9b0e0] = return;

		*node[0x6203d6f9b110] = 0;

		*node[0x6203d6f9b140] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffeb53c7e70] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x62feaa4f6c60] = ;;

		*node[0x62feaa4f6c90] = 0;

		*node[0x62feaa4f6cc0] = ;;

		*node[0x62feaa4f6cf0] = input;

		*node[0x62feaa4f6d20] = 1;

		*node[0x62feaa4f6d50] = 2;

		*node[0x62feaa4f6d80] = 3;

		*node[0x62feaa4f6db0] = ;;

		*node[0x62feaa4f6e10] = 1;

		*node[0x62feaa4f6e40] = 2;

		*node[0x62feaa4f6e70] = 3;

		*node[0x62feaa4f6ea0] = ;;

		*node[0x62feaa4f6ed0] = 4;

		*node[0x62feaa4f6f00] = 1;

		*node[0x62feaa4f6f30] = 2;

		*node[0x62feaa4f6f60] = 3;

		*node[0x62feaa4f6f90] = ;;

		*node[0x62feaa4f6fc0] = if;

		*node[0x62feaa4f6ff0] = op_no;

		*node[0x62feaa4f7020] = ==;

		*node[0x62feaa4f7050] = 1;

		*node[0x62feaa4f7080] = 0;

		*node[0x62feaa4f70b0] = ;;

		*node[0x62feaa4f7110] = 2;

		*node[0x62feaa4f7140] = 3;

		*node[0x62feaa4f7170] = else;

		*node[0x62feaa4f71a0] = op_no;

		*node[0x62feaa4f71d0] = ;;

		*node[0x62feaa4f7230] = 1;

		*node[0x62feaa4f7260] = 2;

		*node[0x62feaa4f7290] = 3;

		*node[0x62feaa4f72c0] = ;;

		*node[0x62feaa4f72f0] = return;

		*node[0x62feaa4f7320] = 0;

		*node[0x62feaa4f7350] = ;;

		*node[0x62feaa4f7380] = 5;

		*node[0x62feaa4f73b0] = 1;

		*node[0x62feaa4f73e0] = 2;

		*node[0x62feaa4f7410] = ;;

		*node[0x62feaa4f7440] = =;

		*node[0x62feaa4f7470] = 7;

		*node[0x62feaa4f9840] = -1;

		*node[0x62feaa4f7530] = ;;

		*node[0x62feaa4f7560] = =;

		*node[0x62feaa4f7590] = 8;

		*node[0x62feaa4f75c0] = 1;

		*node[0x62feaa4f75f0] = ;;

		*node[0x62feaa4f7620] = =;

		*node[0x62feaa4f7650] = 9;

		*node[0x62feaa4f7680] = 1000;

		*node[0x62feaa4f76b0] = ;;

		*node[0x62feaa4f76e0] = if;

		*node[0x62feaa4f7710] = op_no;

		*node[0x62feaa4f7740] = ==;

		*node[0x62feaa4f7770] = 1;

		*node[0x62feaa4f77a0] = 0;

		*node[0x62feaa4f77d0] = ;;

		*node[0x62feaa4f7800] = if;

		*node[0x62feaa4f7830] = op_no;

		*node[0x62feaa4f7860] = ==;

		*node[0x62feaa4f7890] = 2;

		*node[0x62feaa4f78c0] = 0;

		*node[0x62feaa4f78f0] = ;;

		*node[0x62feaa4f7920] = print;

		*node[0x62feaa4f7950] = 9;

		*node[0x62feaa4f7980] = else;

		*node[0x62feaa4f79b0] = op_no;

		*node[0x62feaa4f79e0] = ;;

		*node[0x62feaa4f7a10] = print;

		*node[0x62feaa4f7a40] = 7;

		*node[0x62feaa4f7a70] = else;

		*node[0x62feaa4f7aa0] = op_no;

		*node[0x62feaa4f7ad0] = ;;

		*node[0x62feaa4f7b00] = =;

		*node[0x62feaa4f7b30] = 10;

		*node[0x62feaa4f7b60] = -;

		*node[0x62feaa4f7b90] = 0;

		*node[0x62feaa4f7bc0] = /;

		*node[0x62feaa4f7bf0] = 2;

		*node[0x62feaa4f7c20] = 1;

		*node[0x62feaa4f7c50] = ;;

		*node[0x62feaa4f7c80] = print;

		*node[0x62feaa4f7cb0] = 8;

		*node[0x62feaa4f7ce0] = ;;

		*node[0x62feaa4f7d10] = print;

		*node[0x62feaa4f7d40] = 10;

		*node[0x62feaa4f7d70] = ;;

		*node[0x62feaa4f7da0] = return;

		*node[0x62feaa4f7dd0] = 0;

		*node[0x62feaa4f7e00] = ;;

		*node[0x62feaa4f7e30] = 6;

		*node[0x62feaa4f7e60] = 1;

		*node[0x62feaa4f7e90] = 2;

		*node[0x62feaa4f7ec0] = 3;

		*node[0x62feaa4f7ef0] = ;;

		*node[0x62feaa4f7f20] = =;

		*node[0x62feaa4f7f50] = 7;

		*node[0x62feaa4f9870] = -1;

		*node[0x62feaa4f8010] = ;;

		*node[0x62feaa4f8040] = =;

		*node[0x62feaa4f8070] = 8;

		*node[0x62feaa4f80a0] = 1;

		*node[0x62feaa4f80d0] = ;;

		*node[0x62feaa4f8100] = =;

		*node[0x62feaa4f8130] = 11;

		*node[0x62feaa4f8160] = 2;

		*node[0x62feaa4f8190] = ;;

		*node[0x62feaa4f81c0] = if;

		*node[0x62feaa4f81f0] = op_no;

		*node[0x62feaa4f8220] = ==;

		*node[0x62feaa4f8250] = 3;

		*node[0x62feaa4f8280] = 0;

		*node[0x62feaa4f82b0] = ;;

		*node[0x62feaa4f82e0] = =;

		*node[0x62feaa4f8310] = 12;

		*node[0x62feaa4f8340] = 0;

		*node[0x62feaa4f8370] = ;;

		*node[0x62feaa4f83a0] = =;

		*node[0x62feaa4f83d0] = 13;

		*node[0x62feaa4f8400] = -;

		*node[0x62feaa4f8430] = 0;

		*node[0x62feaa4f8460] = /;

		*node[0x62feaa4f8490] = 2;

		*node[0x62feaa4f84c0] = 1;

		*node[0x62feaa4f84f0] = ;;

		*node[0x62feaa4f8520] = print;

		*node[0x62feaa4f8550] = 11;

		*node[0x62feaa4f8580] = ;;

		*node[0x62feaa4f85b0] = print;

		*node[0x62feaa4f85e0] = 12;

		*node[0x62feaa4f8610] = 13;

		*node[0x62feaa4f8640] = else;

		*node[0x62feaa4f8670] = op_no;

		*node[0x62feaa4f86a0] = ;;

		*node[0x62feaa4f86d0] = =;

		*node[0x62feaa4f8700] = 14;

		*node[0x62feaa4f8730] = -;

		*node[0x62feaa4f8760] = *;

		*node[0x62feaa4f8790] = 2;

		*node[0x62feaa4f87c0] = 2;

		*node[0x62feaa4f87f0] = *;

		*node[0x62feaa4f8820] = *;

		*node[0x62feaa4f8850] = 4;

		*node[0x62feaa4f8880] = 1;

		*node[0x62feaa4f88b0] = 3;

		*node[0x62feaa4f88e0] = ;;

		*node[0x62feaa4f8910] = if;

		*node[0x62feaa4f8940] = op_no;

		*node[0x62feaa4f8970] = >;

		*node[0x62feaa4f89a0] = 14;

		*node[0x62feaa4f89d0] = 0;

		*node[0x62feaa4f8a00] = ;;

		*node[0x62feaa4f8a30] = =;

		*node[0x62feaa4f8a60] = 15;

		*node[0x62feaa4f8a90] = sqrt;

		*node[0x62feaa4f8ac0] = 14;

		*node[0x62feaa4f8af0] = ;;

		*node[0x62feaa4f8b20] = =;

		*node[0x62feaa4f8b50] = 12;

		*node[0x62feaa4f8b80] = -;

		*node[0x62feaa4f8bb0] = -;

		*node[0x62feaa4f8be0] = 0;

		*node[0x62feaa4f8c10] = 2;

		*node[0x62feaa4f8c40] = *;

		*node[0x62feaa4f8c70] = /;

		*node[0x62feaa4f8ca0] = 15;

		*node[0x62feaa4f8cd0] = 2;

		*node[0x62feaa4f8d00] = 1;

		*node[0x62feaa4f8d30] = ;;

		*node[0x62feaa4f8d60] = =;

		*node[0x62feaa4f8d90] = 13;

		*node[0x62feaa4f8dc0] = +;

		*node[0x62feaa4f8df0] = -;

		*node[0x62feaa4f8e20] = 0;

		*node[0x62feaa4f8e50] = 2;

		*node[0x62feaa4f8e80] = *;

		*node[0x62feaa4f8eb0] = /;

		*node[0x62feaa4f8ee0] = 15;

		*node[0x62feaa4f8f10] = 2;

		*node[0x62feaa4f8f40] = 1;

		*node[0x62feaa4f8f70] = ;;

		*node[0x62feaa4f8fa0] = print;

		*node[0x62feaa4f8fd0] = 11;

		*node[0x62feaa4f9000] = ;;

		*node[0x62feaa4f9030] = print;

		*node[0x62feaa4f9060] = 12;

		*node[0x62feaa4f9090] = 13;

		*node[0x62feaa4f90c0] = elseif;

		*node[0x62feaa4f90f0] = op_no;

		*node[0x62feaa4f9120] = ==;

		*node[0x62feaa4f9150] = 14;

		*node[0x62feaa4f9180] = 0;

		*node[0x62feaa4f91b0] = ;;

		*node[0x62feaa4f91e0] = =;

		*node[0x62feaa4f9210] = 10;

		*node[0x62feaa4f9240] = -;

		*node[0x62feaa4f9270] = 0;

		*node[0x62feaa4f92a0] = *;

		*node[0x62feaa4f92d0] = /;

		*node[0x62feaa4f9300] = 2;

		*node[0x62feaa4f9330] = 2;

		*node[0x62feaa4f9360] = 1;

		*node[0x62feaa4f9390] = ;;

		*node[0x62feaa4f93c0] = print;

		*node[0x62feaa4f93f0] = 8;

		*node[0x62feaa4f9420] = ;;

		*node[0x62feaa4f9450] = print;

		*node[0x62feaa4f9480] = 10;

		*node[0x62feaa4f94b0] = else;

		*node[0x62feaa4f94e0] = op_no;

		*node[0x62feaa4f9510] = ;;

		*node[0x62feaa4f9540] = print;

		*node[0x62feaa4f9570] = 7;

		*node[0x62feaa4f95a0] = ;;

		*node[0x62feaa4f95d0] = return;

		*node[0x62feaa4f9600] = 0;

		*node[0x62feaa4f9630] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe99ea96a0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5fafd5b8b6d0] = ;;

		*node[0x5fafd5b8b750] = 0;

		*node[0x5fafd5b8b780] = ;;

		*node[0x5fafd5b8b7b0] = input;

		*node[0x5fafd5b8b7e0] = 1;

		*node[0x5fafd5b8b810] = 2;

		*node[0x5fafd5b8b840] = 3;

		*node[0x5fafd5b8b8a0] = ;;

		*node[0x5fafd5b8b900] = 1;

		*node[0x5fafd5b8b930] = 2;

		*node[0x5fafd5b8b960] = 3;

		*node[0x5fafd5b8b990] = ;;

		*node[0x5fafd5b8ba10] = 4;

		*node[0x5fafd5b8ba40] = 1;

		*node[0x5fafd5b8ba70] = 2;

		*node[0x5fafd5b8baa0] = 3;

		*node[0x5fafd5b8bb00] = ;;

		*node[0x5fafd5b8bb30] = if;

		*node[0x5fafd5b8bb60] = op_no;

		*node[0x5fafd5b8bbf0] = ==;

		*node[0x5fafd5b8bb90] = 1;

		*node[0x5fafd5b8bbc0] = 0;

		*node[0x5fafd5b8bc20] = ;;

		*node[0x5fafd5b8bc80] = 2;

		*node[0x5fafd5b8bcb0] = 3;

		*node[0x5fafd5b8bce0] = else;

		*node[0x5fafd5b8bd10] = op_no;

		*node[0x5fafd5b8bd40] = ;;

		*node[0x5fafd5b8bdf0] = 1;

		*node[0x5fafd5b8be20] = 2;

		*node[0x5fafd5b8be50] = 3;

		*node[0x5fafd5b8be80] = ;;

		*node[0x5fafd5b8beb0] = return;

		*node[0x5fafd5b8bee0] = 0;

		*node[0x5fafd5b8bf10] = ;;

		*node[0x5fafd5b8bf90] = 5;

		*node[0x5fafd5b8bff0] = 1;

		*node[0x5fafd5b8c020] = 2;

		*node[0x5fafd5b8c050] = ;;

		*node[0x5fafd5b8c170] = =;

		*node[0x5fafd5b8c080] = 7;

		*node[0x5fafd5b8c140] = -;

		*node[0x5fafd5b8c0e0] = 0;

		*node[0x5fafd5b8c110] = 1;

		*node[0x5fafd5b8c1a0] = ;;

		*node[0x5fafd5b8c230] = =;

		*node[0x5fafd5b8c1d0] = 8;

		*node[0x5fafd5b8c200] = 1;

		*node[0x5fafd5b8c260] = ;;

		*node[0x5fafd5b8c340] = =;

		*node[0x5fafd5b8c290] = 9;

		*node[0x5fafd5b8c310] = 1000;

		*node[0x5fafd5b8c370] = ;;

		*node[0x5fafd5b8c3a0] = if;

		*node[0x5fafd5b8c3d0] = op_no;

		*node[0x5fafd5b8c460] = ==;

		*node[0x5fafd5b8c400] = 1;

		*node[0x5fafd5b8c430] = 0;

		*node[0x5fafd5b8c490] = ;;

		*node[0x5fafd5b8c4c0] = if;

		*node[0x5fafd5b8c4f0] = op_no;

		*node[0x5fafd5b8c580] = ==;

		*node[0x5fafd5b8c520] = 2;

		*node[0x5fafd5b8c550] = 0;

		*node[0x5fafd5b8c5b0] = ;;

		*node[0x5fafd5b8c5e0] = print;

		*node[0x5fafd5b8c610] = 9;

		*node[0x5fafd5b8c640] = else;

		*node[0x5fafd5b8c670] = op_no;

		*node[0x5fafd5b8c6a0] = ;;

		*node[0x5fafd5b8c6d0] = print;

		*node[0x5fafd5b8c700] = 7;

		*node[0x5fafd5b8c730] = else;

		*node[0x5fafd5b8c760] = op_no;

		*node[0x5fafd5b8c790] = ;;

		*node[0x5fafd5b8c8e0] = =;

		*node[0x5fafd5b8c7c0] = 10;

		*node[0x5fafd5b8c8b0] = -;

		*node[0x5fafd5b8c7f0] = 0;

		*node[0x5fafd5b8c880] = /;

		*node[0x5fafd5b8c820] = 2;

		*node[0x5fafd5b8c850] = 1;

		*node[0x5fafd5b8c910] = ;;

		*node[0x5fafd5b8c940] = print;

		*node[0x5fafd5b8c970] = 8;

		*node[0x5fafd5b8c9a0] = ;;

		*node[0x5fafd5b8c9d0] = print;

		*node[0x5fafd5b8ca00] = 10;

		*node[0x5fafd5b8ca30] = ;;

		*node[0x5fafd5b8ca60] = return;

		*node[0x5fafd5b8ca90] = 0;

		*node[0x5fafd5b8cac0] = ;;

		*node[0x5fafd5b8cb40] = 6;

		*node[0x5fafd5b8cb70] = 1;

		*node[0x5fafd5b8cba0] = 2;

		*node[0x5fafd5b8cbd0] = 3;

		*node[0x5fafd5b8cc30] = ;;

		*node[0x5fafd5b8cd20] = =;

		*node[0x5fafd5b8cc60] = 7;

		*node[0x5fafd5b8ccf0] = -;

		*node[0x5fafd5b8cc90] = 0;

		*node[0x5fafd5b8ccc0] = 1;

		*node[0x5fafd5b8cd50] = ;;

		*node[0x5fafd5b8ce30] = =;

		*node[0x5fafd5b8cd80] = 8;

		*node[0x5fafd5b8ce00] = 1;

		*node[0x5fafd5b8ce60] = ;;

		*node[0x5fafd5b8cef0] = =;

		*node[0x5fafd5b8ce90] = 11;

		*node[0x5fafd5b8cec0] = 2;

		*node[0x5fafd5b8cf20] = ;;

		*node[0x5fafd5b8cf50] = if;

		*node[0x5fafd5b8cf80] = op_no;

		*node[0x5fafd5b8d010] = ==;

		*node[0x5fafd5b8cfb0] = 3;

		*node[0x5fafd5b8cfe0] = 0;

		*node[0x5fafd5b8d040] = ;;

		*node[0x5fafd5b8d0d0] = =;

		*node[0x5fafd5b8d070] = 12;

		*node[0x5fafd5b8d0a0] = 0;

		*node[0x5fafd5b8d100] = ;;

		*node[0x5fafd5b8d250] = =;

		*node[0x5fafd5b8d130] = 13;

		*node[0x5fafd5b8d220] = -;

		*node[0x5fafd5b8d160] = 0;

		*node[0x5fafd5b8d1f0] = /;

		*node[0x5fafd5b8d190] = 2;

		*node[0x5fafd5b8d1c0] = 1;

		*node[0x5fafd5b8d280] = ;;

		*node[0x5fafd5b8d2b0] = print;

		*node[0x5fafd5b8d2e0] = 11;

		*node[0x5fafd5b8d310] = ;;

		*node[0x5fafd5b8d340] = print;

		*node[0x5fafd5b8d370] = 12;

		*node[0x5fafd5b8d3a0] = 13;

		*node[0x5fafd5b8d3d0] = else;

		*node[0x5fafd5b8d400] = op_no;

		*node[0x5fafd5b8d430] = ;;

		*node[0x5fafd5b8d6d0] = =;

		*node[0x5fafd5b8d460] = 14;

		*node[0x5fafd5b8d6a0] = -;

		*node[0x5fafd5b8d580] = *;

		*node[0x5fafd5b8d520] = 2;

		*node[0x5fafd5b8d550] = 2;

		*node[0x5fafd5b8d670] = *;

		*node[0x5fafd5b8d610] = *;

		*node[0x5fafd5b8d5b0] = 4;

		*node[0x5fafd5b8d5e0] = 1;

		*node[0x5fafd5b8d640] = 3;

		*node[0x5fafd5b8d700] = ;;

		*node[0x5fafd5b8d730] = if;

		*node[0x5fafd5b8d760] = op_no;

		*node[0x5fafd5b8d7f0] = >;

		*node[0x5fafd5b8d790] = 14;

		*node[0x5fafd5b8d7c0] = 0;

		*node[0x5fafd5b8d820] = ;;

		*node[0x5fafd5b8d8e0] = =;

		*node[0x5fafd5b8d850] = 15;

		*node[0x5fafd5b8d8b0] = sqrt;

		*node[0x5fafd5b8d880] = 14;

		*node[0x5fafd5b8d910] = ;;

		*node[0x5fafd5b8db20] = =;

		*node[0x5fafd5b8d940] = 12;

		*node[0x5fafd5b8daf0] = /;

		*node[0x5fafd5b8da30] = -;

		*node[0x5fafd5b8d9d0] = -;

		*node[0x5fafd5b8d970] = 0;

		*node[0x5fafd5b8d9a0] = 2;

		*node[0x5fafd5b8da00] = 15;

		*node[0x5fafd5b8dac0] = *;

		*node[0x5fafd5b8da60] = 2;

		*node[0x5fafd5b8da90] = 1;

		*node[0x5fafd5b8db50] = ;;

		*node[0x5fafd5b8dd60] = =;

		*node[0x5fafd5b8db80] = 13;

		*node[0x5fafd5b8dd30] = /;

		*node[0x5fafd5b8dc70] = +;

		*node[0x5fafd5b8dc10] = -;

		*node[0x5fafd5b8dbb0] = 0;

		*node[0x5fafd5b8dbe0] = 2;

		*node[0x5fafd5b8dc40] = 15;

		*node[0x5fafd5b8dd00] = *;

		*node[0x5fafd5b8dca0] = 2;

		*node[0x5fafd5b8dcd0] = 1;

		*node[0x5fafd5b8dd90] = ;;

		*node[0x5fafd5b8ddc0] = print;

		*node[0x5fafd5b8ddf0] = 11;

		*node[0x5fafd5b8de20] = ;;

		*node[0x5fafd5b8de50] = print;

		*node[0x5fafd5b8de80] = 12;

		*node[0x5fafd5b8deb0] = 13;

		*node[0x5fafd5b8dee0] = elseif;

		*node[0x5fafd5b8df10] = op_no;

		*node[0x5fafd5b8dfa0] = ==;

		*node[0x5fafd5b8df40] = 14;

		*node[0x5fafd5b8df70] = 0;

		*node[0x5fafd5b8dfd0] = ;;

		*node[0x5fafd5b8e180] = =;

		*node[0x5fafd5b8e000] = 10;

		*node[0x5fafd5b8e150] = -;

		*node[0x5fafd5b8e030] = 0;

		*node[0x5fafd5b8e120] = /;

		*node[0x5fafd5b8e060] = 2;

		*node[0x5fafd5b8e0f0] = *;

		*node[0x5fafd5b8e090] = 2;

		*node[0x5fafd5b8e0c0] = 1;

		*node[0x5fafd5b8e1b0] = ;;

		*node[0x5fafd5b8e1e0] = print;

		*node[0x5fafd5b8e210] = 8;

		*node[0x5fafd5b8e240] = ;;

		*node[0x5fafd5b8e270] = print;

		*node[0x5fafd5b8e2a0] = 10;

		*node[0x5fafd5b8e2d0] = else;

		*node[0x5fafd5b8e300] = op_no;

		*node[0x5fafd5b8e330] = ;;

		*node[0x5fafd5b8e360] = print;

		*node[0x5fafd5b8e390] = 7;

		*node[0x5fafd5b8e3c0] = ;;

		*node[0x5fafd5b8e3f0] = return;

		*node[0x5fafd5b8e420] = 0;

		*node[0x5fafd5b8e450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff0e61aba0] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x5ff671849550] = ;;

		*node[0x5ff671849580] = 0;

		*node[0x5ff6718495b0] = ;;

		*node[0x5ff6718495e0] = input;

		*node[0x5ff671849610] = 1;

		*node[0x5ff671849640] = 2;

		*node[0x5ff671849670] = 3;

		*node[0x5ff6718496a0] = ;;

		*node[0x5ff671849700] = 1;

		*node[0x5ff671849730] = 2;

		*node[0x5ff671849760] = 3;

		*node[0x5ff671849790] = ;;

		*node[0x5ff6718497c0] = 4;

		*node[0x5ff6718497f0] = 1;

		*node[0x5ff671849820] = 2;

		*node[0x5ff671849850] = 3;

		*node[0x5ff671849880] = ;;

		*node[0x5ff6718498b0] = if;

		*node[0x5ff6718498e0] = op_no;

		*node[0x5ff671849910] = ==;

		*node[0x5ff671849940] = 1;

		*node[0x5ff671849970] = 0;

		*node[0x5ff6718499a0] = ;;

		*node[0x5ff671849a00] = 2;

		*node[0x5ff671849a30] = 3;

		*node[0x5ff671849a60] = else;

		*node[0x5ff671849a90] = op_no;

		*node[0x5ff671849ac0] = ;;

		*node[0x5ff671849b20] = 1;

		*node[0x5ff671849b50] = 2;

		*node[0x5ff671849b80] = 3;

		*node[0x5ff671849bb0] = ;;

		*node[0x5ff671849be0] = return;

		*node[0x5ff671849c10] = 0;

		*node[0x5ff671849c40] = ;;

		*node[0x5ff671849c70] = 5;

		*node[0x5ff671849ca0] = 1;

		*node[0x5ff671849cd0] = 2;

		*node[0x5ff671849d00] = ;;

		*node[0x5ff671849d30] = =;

		*node[0x5ff671849d60] = 7;

		*node[0x5ff67184c130] = -1;

		*node[0x5ff671849e20] = ;;

		*node[0x5ff671849e50] = =;

		*node[0x5ff671849e80] = 8;

		*node[0x5ff671849eb0] = 1;

		*node[0x5ff671849ee0] = ;;

		*node[0x5ff671849f10] = =;

		*node[0x5ff671849f40] = 9;

		*node[0x5ff671849f70] = 1000;

		*node[0x5ff671849fa0] = ;;

		*node[0x5ff671849fd0] = if;

		*node[0x5ff67184a000] = op_no;

		*node[0x5ff67184a030] = ==;

		*node[0x5ff67184a060] = 1;

		*node[0x5ff67184a090] = 0;

		*node[0x5ff67184a0c0] = ;;

		*node[0x5ff67184a0f0] = if;

		*node[0x5ff67184a120] = op_no;

		*node[0x5ff67184a150] = ==;

		*node[0x5ff67184a180] = 2;

		*node[0x5ff67184a1b0] = 0;

		*node[0x5ff67184a1e0] = ;;

		*node[0x5ff67184a210] = print;

		*node[0x5ff67184a240] = 9;

		*node[0x5ff67184a270] = else;

		*node[0x5ff67184a2a0] = op_no;

		*node[0x5ff67184a2d0] = ;;

		*node[0x5ff67184a300] = print;

		*node[0x5ff67184a330] = 7;

		*node[0x5ff67184a360] = else;

		*node[0x5ff67184a390] = op_no;

		*node[0x5ff67184a3c0] = ;;

		*node[0x5ff67184a3f0] = =;

		*node[0x5ff67184a420] = 10;

		*node[0x5ff67184a450] = -;

		*node[0x5ff67184a480] = 0;

		*node[0x5ff67184a4b0] = /;

		*node[0x5ff67184a4e0] = 2;

		*node[0x5ff67184a510] = 1;

		*node[0x5ff67184a540] = ;;

		*node[0x5ff67184a570] = print;

		*node[0x5ff67184a5a0] = 8;

		*node[0x5ff67184a5d0] = ;;

		*node[0x5ff67184a600] = print;

		*node[0x5ff67184a630] = 10;

		*node[0x5ff67184a660] = ;;

		*node[0x5ff67184a690] = return;

		*node[0x5ff67184a6c0] = 0;

		*node[0x5ff67184a6f0] = ;;

		*node[0x5ff67184a720] = 6;

		*node[0x5ff67184a750] = 1;

		*node[0x5ff67184a780] = 2;

		*node[0x5ff67184a7b0] = 3;

		*node[0x5ff67184a7e0] = ;;

		*node[0x5ff67184a810] = =;

		*node[0x5ff67184a840] = 7;

		*node[0x5ff67184c160] = -1;

		*node[0x5ff67184a900] = ;;

		*node[0x5ff67184a930] = =;

		*node[0x5ff67184a960] = 8;

		*node[0x5ff67184a990] = 1;

		*node[0x5ff67184a9c0] = ;;

		*node[0x5ff67184a9f0] = =;

		*node[0x5ff67184aa20] = 11;

		*node[0x5ff67184aa50] = 2;

		*node[0x5ff67184aa80] = ;;

		*node[0x5ff67184aab0] = if;

		*node[0x5ff67184aae0] = op_no;

		*node[0x5ff67184ab10] = ==;

		*node[0x5ff67184ab40] = 3;

		*node[0x5ff67184ab70] = 0;

		*node[0x5ff67184aba0] = ;;

		*node[0x5ff67184abd0] = =;

		*node[0x5ff67184ac00] = 12;

		*node[0x5ff67184ac30] = 0;

		*node[0x5ff67184ac60] = ;;

		*node[0x5ff67184ac90] = =;

		*node[0x5ff67184acc0] = 13;

		*node[0x5ff67184acf0] = -;

		*node[0x5ff67184ad20] = 0;

		*node[0x5ff67184ad50] = /;

		*node[0x5ff67184ad80] = 2;

		*node[0x5ff67184adb0] = 1;

		*node[0x5ff67184ade0] = ;;

		*node[0x5ff67184ae10] = print;

		*node[0x5ff67184ae40] = 11;

		*node[0x5ff67184ae70] = ;;

		*node[0x5ff67184aea0] = print;

		*node[0x5ff67184aed0] = 12;

		*node[0x5ff67184af00] = 13;

		*node[0x5ff67184af30] = else;

		*node[0x5ff67184af60] = op_no;

		*node[0x5ff67184af90] = ;;

		*node[0x5ff67184afc0] = =;

		*node[0x5ff67184aff0] = 14;

		*node[0x5ff67184b020] = -;

		*node[0x5ff67184b050] = *;

		*node[0x5ff67184b080] = 2;

		*node[0x5ff67184b0b0] = 2;

		*node[0x5ff67184b0e0] = *;

		*node[0x5ff67184b110] = *;

		*node[0x5ff67184b140] = 4;

		*node[0x5ff67184b170] = 1;

		*node[0x5ff67184b1a0] = 3;

		*node[0x5ff67184b1d0] = ;;

		*node[0x5ff67184b200] = if;

		*node[0x5ff67184b230] = op_no;

		*node[0x5ff67184b260] = >;

		*node[0x5ff67184b290] = 14;

		*node[0x5ff67184b2c0] = 0;

		*node[0x5ff67184b2f0] = ;;

		*node[0x5ff67184b320] = =;

		*node[0x5ff67184b350] = 15;

		*node[0x5ff67184b380] = sqrt;

		*node[0x5ff67184b3b0] = 14;

		*node[0x5ff67184b3e0] = ;;

		*node[0x5ff67184b410] = =;

		*node[0x5ff67184b440] = 12;

		*node[0x5ff67184b470] = /;

		*node[0x5ff67184b4a0] = -;

		*node[0x5ff67184b4d0] = -;

		*node[0x5ff67184b500] = 0;

		*node[0x5ff67184b530] = 2;

		*node[0x5ff67184b560] = 15;

		*node[0x5ff67184b590] = *;

		*node[0x5ff67184b5c0] = 2;

		*node[0x5ff67184b5f0] = 1;

		*node[0x5ff67184b620] = ;;

		*node[0x5ff67184b650] = =;

		*node[0x5ff67184b680] = 13;

		*node[0x5ff67184b6b0] = /;

		*node[0x5ff67184b6e0] = +;

		*node[0x5ff67184b710] = -;

		*node[0x5ff67184b740] = 0;

		*node[0x5ff67184b770] = 2;

		*node[0x5ff67184b7a0] = 15;

		*node[0x5ff67184b7d0] = *;

		*node[0x5ff67184b800] = 2;

		*node[0x5ff67184b830] = 1;

		*node[0x5ff67184b860] = ;;

		*node[0x5ff67184b890] = print;

		*node[0x5ff67184b8c0] = 11;

		*node[0x5ff67184b8f0] = ;;

		*node[0x5ff67184b920] = print;

		*node[0x5ff67184b950] = 12;

		*node[0x5ff67184b980] = 13;

		*node[0x5ff67184b9b0] = elseif;

		*node[0x5ff67184b9e0] = op_no;

		*node[0x5ff67184ba10] = ==;

		*node[0x5ff67184ba40] = 14;

		*node[0x5ff67184ba70] = 0;

		*node[0x5ff67184baa0] = ;;

		*node[0x5ff67184bad0] = =;

		*node[0x5ff67184bb00] = 10;

		*node[0x5ff67184bb30] = -;

		*node[0x5ff67184bb60] = 0;

		*node[0x5ff67184bb90] = /;

		*node[0x5ff67184bbc0] = 2;

		*node[0x5ff67184bbf0] = *;

		*node[0x5ff67184bc20] = 2;

		*node[0x5ff67184bc50] = 1;

		*node[0x5ff67184bc80] = ;;

		*node[0x5ff67184bcb0] = print;

		*node[0x5ff67184bce0] = 8;

		*node[0x5ff67184bd10] = ;;

		*node[0x5ff67184bd40] = print;

		*node[0x5ff67184bd70] = 10;

		*node[0x5ff67184bda0] = else;

		*node[0x5ff67184bdd0] = op_no;

		*node[0x5ff67184be00] = ;;

		*node[0x5ff67184be30] = print;

		*node[0x5ff67184be60] = 7;

		*node[0x5ff67184be90] = ;;

		*node[0x5ff67184bec0] = return;

		*node[0x5ff67184bef0] = 0;

		*node[0x5ff67184bf20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd12d3de10] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58422dbba3c0] = ;;

		*node[0x58422dbba440] = 0;

		*node[0x58422dbba470] = ;;

		*node[0x58422dbba4a0] = input;

		*node[0x58422dbba4d0] = 1;

		*node[0x58422dbba500] = 2;

		*node[0x58422dbba530] = 3;

		*node[0x58422dbba590] = ;;

		*node[0x58422dbba5f0] = 1;

		*node[0x58422dbba620] = 2;

		*node[0x58422dbba650] = 3;

		*node[0x58422dbba680] = ;;

		*node[0x58422dbba700] = 4;

		*node[0x58422dbba730] = 1;

		*node[0x58422dbba760] = 2;

		*node[0x58422dbba790] = 3;

		*node[0x58422dbba7f0] = ;;

		*node[0x58422dbba820] = if;

		*node[0x58422dbba850] = op_no;

		*node[0x58422dbba8e0] = ==;

		*node[0x58422dbba880] = 1;

		*node[0x58422dbba8b0] = 0;

		*node[0x58422dbba910] = ;;

		*node[0x58422dbba970] = 2;

		*node[0x58422dbba9a0] = 3;

		*node[0x58422dbba9d0] = else;

		*node[0x58422dbbaa00] = op_no;

		*node[0x58422dbbaa30] = ;;

		*node[0x58422dbbaae0] = 1;

		*node[0x58422dbbab10] = 2;

		*node[0x58422dbbab40] = 3;

		*node[0x58422dbbab70] = ;;

		*node[0x58422dbbaba0] = return;

		*node[0x58422dbbabd0] = 0;

		*node[0x58422dbbac00] = ;;

		*node[0x58422dbbac80] = 5;

		*node[0x58422dbbace0] = 1;

		*node[0x58422dbbad10] = 2;

		*node[0x58422dbbad40] = ;;

		*node[0x58422dbbae60] = =;

		*node[0x58422dbbad70] = 7;

		*node[0x58422dbbae30] = -;

		*node[0x58422dbbadd0] = 0;

		*node[0x58422dbbae00] = 1;

		*node[0x58422dbbae90] = ;;

		*node[0x58422dbbaf20] = =;

		*node[0x58422dbbaec0] = 8;

		*node[0x58422dbbaef0] = 1;

		*node[0x58422dbbaf50] = ;;

		*node[0x58422dbbb030] = =;

		*node[0x58422dbbaf80] = 9;

		*node[0x58422dbbb000] = 1000;

		*node[0x58422dbbb060] = ;;

		*node[0x58422dbbb090] = if;

		*node[0x58422dbbb0c0] = op_no;

		*node[0x58422dbbb150] = ==;

		*node[0x58422dbbb0f0] = 1;

		*node[0x58422dbbb120] = 0;

		*node[0x58422dbbb180] = ;;

		*node[0x58422dbbb1b0] = if;

		*node[0x58422dbbb1e0] = op_no;

		*node[0x58422dbbb270] = ==;

		*node[0x58422dbbb210] = 2;

		*node[0x58422dbbb240] = 0;

		*node[0x58422dbbb2a0] = ;;

		*node[0x58422dbbb2d0] = print;

		*node[0x58422dbbb300] = 9;

		*node[0x58422dbbb330] = else;

		*node[0x58422dbbb360] = op_no;

		*node[0x58422dbbb390] = ;;

		*node[0x58422dbbb3c0] = print;

		*node[0x58422dbbb3f0] = 7;

		*node[0x58422dbbb420] = else;

		*node[0x58422dbbb450] = op_no;

		*node[0x58422dbbb480] = ;;

		*node[0x58422dbbb5d0] = =;

		*node[0x58422dbbb4b0] = 10;

		*node[0x58422dbbb5a0] = -;

		*node[0x58422dbbb4e0] = 0;

		*node[0x58422dbbb570] = /;

		*node[0x58422dbbb510] = 2;

		*node[0x58422dbbb540] = 1;

		*node[0x58422dbbb600] = ;;

		*node[0x58422dbbb630] = print;

		*node[0x58422dbbb660] = 8;

		*node[0x58422dbbb690] = ;;

		*node[0x58422dbbb6c0] = print;

		*node[0x58422dbbb6f0] = 10;

		*node[0x58422dbbb720] = ;;

		*node[0x58422dbbb750] = return;

		*node[0x58422dbbb780] = 0;

		*node[0x58422dbbb7b0] = ;;

		*node[0x58422dbbb830] = 6;

		*node[0x58422dbbb860] = 1;

		*node[0x58422dbbb890] = 2;

		*node[0x58422dbbb8c0] = 3;

		*node[0x58422dbbb920] = ;;

		*node[0x58422dbbba10] = =;

		*node[0x58422dbbb950] = 7;

		*node[0x58422dbbb9e0] = -;

		*node[0x58422dbbb980] = 0;

		*node[0x58422dbbb9b0] = 1;

		*node[0x58422dbbba40] = ;;

		*node[0x58422dbbbb20] = =;

		*node[0x58422dbbba70] = 8;

		*node[0x58422dbbbaf0] = 1;

		*node[0x58422dbbbb50] = ;;

		*node[0x58422dbbbbe0] = =;

		*node[0x58422dbbbb80] = 11;

		*node[0x58422dbbbbb0] = 2;

		*node[0x58422dbbbc10] = ;;

		*node[0x58422dbbbc40] = if;

		*node[0x58422dbbbc70] = op_no;

		*node[0x58422dbbbd00] = ==;

		*node[0x58422dbbbca0] = 3;

		*node[0x58422dbbbcd0] = 0;

		*node[0x58422dbbbd30] = ;;

		*node[0x58422dbbbdc0] = =;

		*node[0x58422dbbbd60] = 12;

		*node[0x58422dbbbd90] = 0;

		*node[0x58422dbbbdf0] = ;;

		*node[0x58422dbbbf40] = =;

		*node[0x58422dbbbe20] = 13;

		*node[0x58422dbbbf10] = -;

		*node[0x58422dbbbe50] = 0;

		*node[0x58422dbbbee0] = /;

		*node[0x58422dbbbe80] = 2;

		*node[0x58422dbbbeb0] = 1;

		*node[0x58422dbbbf70] = ;;

		*node[0x58422dbbbfa0] = print;

		*node[0x58422dbbbfd0] = 11;

		*node[0x58422dbbc000] = ;;

		*node[0x58422dbbc030] = print;

		*node[0x58422dbbc060] = 12;

		*node[0x58422dbbc090] = 13;

		*node[0x58422dbbc0c0] = else;

		*node[0x58422dbbc0f0] = op_no;

		*node[0x58422dbbc120] = ;;

		*node[0x58422dbbc3c0] = =;

		*node[0x58422dbbc150] = 14;

		*node[0x58422dbbc390] = -;

		*node[0x58422dbbc270] = *;

		*node[0x58422dbbc210] = 2;

		*node[0x58422dbbc240] = 2;

		*node[0x58422dbbc360] = *;

		*node[0x58422dbbc300] = *;

		*node[0x58422dbbc2a0] = 4;

		*node[0x58422dbbc2d0] = 1;

		*node[0x58422dbbc330] = 3;

		*node[0x58422dbbc3f0] = ;;

		*node[0x58422dbbc420] = if;

		*node[0x58422dbbc450] = op_no;

		*node[0x58422dbbc4e0] = >;

		*node[0x58422dbbc480] = 14;

		*node[0x58422dbbc4b0] = 0;

		*node[0x58422dbbc510] = ;;

		*node[0x58422dbbc5d0] = =;

		*node[0x58422dbbc540] = 15;

		*node[0x58422dbbc5a0] = sqrt;

		*node[0x58422dbbc570] = 14;

		*node[0x58422dbbc600] = ;;

		*node[0x58422dbbc810] = =;

		*node[0x58422dbbc630] = 12;

		*node[0x58422dbbc7e0] = -;

		*node[0x58422dbbc6c0] = -;

		*node[0x58422dbbc660] = 0;

		*node[0x58422dbbc690] = 2;

		*node[0x58422dbbc7b0] = *;

		*node[0x58422dbbc750] = /;

		*node[0x58422dbbc6f0] = 15;

		*node[0x58422dbbc720] = 2;

		*node[0x58422dbbc780] = 1;

		*node[0x58422dbbc840] = ;;

		*node[0x58422dbbca50] = =;

		*node[0x58422dbbc870] = 13;

		*node[0x58422dbbca20] = +;

		*node[0x58422dbbc900] = -;

		*node[0x58422dbbc8a0] = 0;

		*node[0x58422dbbc8d0] = 2;

		*node[0x58422dbbc9f0] = *;

		*node[0x58422dbbc990] = /;

		*node[0x58422dbbc930] = 15;

		*node[0x58422dbbc960] = 2;

		*node[0x58422dbbc9c0] = 1;

		*node[0x58422dbbca80] = ;;

		*node[0x58422dbbcab0] = print;

		*node[0x58422dbbcae0] = 11;

		*node[0x58422dbbcb10] = ;;

		*node[0x58422dbbcb40] = print;

		*node[0x58422dbbcb70] = 12;

		*node[0x58422dbbcba0] = 13;

		*node[0x58422dbbcbd0] = elseif;

		*node[0x58422dbbcc00] = op_no;

		*node[0x58422dbbcc90] = ==;

		*node[0x58422dbbcc30] = 14;

		*node[0x58422dbbcc60] = 0;

		*node[0x58422dbbccc0] = ;;

		*node[0x58422dbbce70] = =;

		*node[0x58422dbbccf0] = 10;

		*node[0x58422dbbce40] = -;

		*node[0x58422dbbcd20] = 0;

		*node[0x58422dbbce10] = *;

		*node[0x58422dbbcdb0] = /;

		*node[0x58422dbbcd50] = 2;

		*node[0x58422dbbcd80] = 2;

		*node[0x58422dbbcde0] = 1;

		*node[0x58422dbbcea0] = ;;

		*node[0x58422dbbced0] = print;

		*node[0x58422dbbcf00] = 8;

		*node[0x58422dbbcf30] = ;;

		*node[0x58422dbbcf60] = print;

		*node[0x58422dbbcf90] = 10;

		*node[0x58422dbbcfc0] = else;

		*node[0x58422dbbcff0] = op_no;

		*node[0x58422dbbd020] = ;;

		*node[0x58422dbbd050] = print;

		*node[0x58422dbbd080] = 7;

		*node[0x58422dbbd0b0] = ;;

		*node[0x58422dbbd0e0] = return;

		*node[0x58422dbbd110] = 0;

		*node[0x58422dbbd140] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd9bcf2cb0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x55bdafca86d0] = ;;

		*node[0x55bdafca8750] = 0;

		*node[0x55bdafca8780] = ;;

		*node[0x55bdafca87b0] = input;

		*node[0x55bdafca87e0] = 1;

		*node[0x55bdafca8810] = 2;

		*node[0x55bdafca8840] = 3;

		*node[0x55bdafca88a0] = ;;

		*node[0x55bdafca8900] = 1;

		*node[0x55bdafca8930] = 2;

		*node[0x55bdafca8960] = 3;

		*node[0x55bdafca8990] = ;;

		*node[0x55bdafca8a10] = 4;

		*node[0x55bdafca8a40] = 1;

		*node[0x55bdafca8a70] = 2;

		*node[0x55bdafca8aa0] = 3;

		*node[0x55bdafca8b00] = ;;

		*node[0x55bdafca8b30] = if;

		*node[0x55bdafca8b60] = op_no;

		*node[0x55bdafca8bf0] = ==;

		*node[0x55bdafca8b90] = 1;

		*node[0x55bdafca8bc0] = 0;

		*node[0x55bdafca8c20] = ;;

		*node[0x55bdafca8c80] = 2;

		*node[0x55bdafca8cb0] = 3;

		*node[0x55bdafca8ce0] = else;

		*node[0x55bdafca8d10] = op_no;

		*node[0x55bdafca8d40] = ;;

		*node[0x55bdafca8df0] = 1;

		*node[0x55bdafca8e20] = 2;

		*node[0x55bdafca8e50] = 3;

		*node[0x55bdafca8e80] = ;;

		*node[0x55bdafca8eb0] = return;

		*node[0x55bdafca8ee0] = 0;

		*node[0x55bdafca8f10] = ;;

		*node[0x55bdafca8f90] = 5;

		*node[0x55bdafca8ff0] = 1;

		*node[0x55bdafca9020] = 2;

		*node[0x55bdafca9050] = ;;

		*node[0x55bdafca9170] = =;

		*node[0x55bdafca9080] = 7;

		*node[0x55bdafca9140] = -;

		*node[0x55bdafca90e0] = 0;

		*node[0x55bdafca9110] = 1;

		*node[0x55bdafca91a0] = ;;

		*node[0x55bdafca9230] = =;

		*node[0x55bdafca91d0] = 8;

		*node[0x55bdafca9200] = 1;

		*node[0x55bdafca9260] = ;;

		*node[0x55bdafca9340] = =;

		*node[0x55bdafca9290] = 9;

		*node[0x55bdafca9310] = 1000;

		*node[0x55bdafca9370] = ;;

		*node[0x55bdafca93a0] = if;

		*node[0x55bdafca93d0] = op_no;

		*node[0x55bdafca9460] = ==;

		*node[0x55bdafca9400] = 1;

		*node[0x55bdafca9430] = 0;

		*node[0x55bdafca9490] = ;;

		*node[0x55bdafca94c0] = if;

		*node[0x55bdafca94f0] = op_no;

		*node[0x55bdafca9580] = ==;

		*node[0x55bdafca9520] = 2;

		*node[0x55bdafca9550] = 0;

		*node[0x55bdafca95b0] = ;;

		*node[0x55bdafca95e0] = print;

		*node[0x55bdafca9610] = 9;

		*node[0x55bdafca9640] = else;

		*node[0x55bdafca9670] = op_no;

		*node[0x55bdafca96a0] = ;;

		*node[0x55bdafca96d0] = print;

		*node[0x55bdafca9700] = 7;

		*node[0x55bdafca9730] = else;

		*node[0x55bdafca9760] = op_no;

		*node[0x55bdafca9790] = ;;

		*node[0x55bdafca98e0] = =;

		*node[0x55bdafca97c0] = 10;

		*node[0x55bdafca98b0] = -;

		*node[0x55bdafca97f0] = 0;

		*node[0x55bdafca9880] = /;

		*node[0x55bdafca9820] = 2;

		*node[0x55bdafca9850] = 1;

		*node[0x55bdafca9910] = ;;

		*node[0x55bdafca9940] = print;

		*node[0x55bdafca9970] = 8;

		*node[0x55bdafca99a0] = ;;

		*node[0x55bdafca99d0] = print;

		*node[0x55bdafca9a00] = 10;

		*node[0x55bdafca9a30] = ;;

		*node[0x55bdafca9a60] = return;

		*node[0x55bdafca9a90] = 0;

		*node[0x55bdafca9ac0] = ;;

		*node[0x55bdafca9b40] = 6;

		*node[0x55bdafca9b70] = 1;

		*node[0x55bdafca9ba0] = 2;

		*node[0x55bdafca9bd0] = 3;

		*node[0x55bdafca9c30] = ;;

		*node[0x55bdafca9d20] = =;

		*node[0x55bdafca9c60] = 7;

		*node[0x55bdafca9cf0] = -;

		*node[0x55bdafca9c90] = 0;

		*node[0x55bdafca9cc0] = 1;

		*node[0x55bdafca9d50] = ;;

		*node[0x55bdafca9e30] = =;

		*node[0x55bdafca9d80] = 8;

		*node[0x55bdafca9e00] = 1;

		*node[0x55bdafca9e60] = ;;

		*node[0x55bdafca9ef0] = =;

		*node[0x55bdafca9e90] = 11;

		*node[0x55bdafca9ec0] = 2;

		*node[0x55bdafca9f20] = ;;

		*node[0x55bdafca9f50] = if;

		*node[0x55bdafca9f80] = op_no;

		*node[0x55bdafcaa010] = ==;

		*node[0x55bdafca9fb0] = 3;

		*node[0x55bdafca9fe0] = 0;

		*node[0x55bdafcaa040] = ;;

		*node[0x55bdafcaa0d0] = =;

		*node[0x55bdafcaa070] = 12;

		*node[0x55bdafcaa0a0] = 0;

		*node[0x55bdafcaa100] = ;;

		*node[0x55bdafcaa250] = =;

		*node[0x55bdafcaa130] = 13;

		*node[0x55bdafcaa220] = -;

		*node[0x55bdafcaa160] = 0;

		*node[0x55bdafcaa1f0] = /;

		*node[0x55bdafcaa190] = 2;

		*node[0x55bdafcaa1c0] = 1;

		*node[0x55bdafcaa280] = ;;

		*node[0x55bdafcaa2b0] = print;

		*node[0x55bdafcaa2e0] = 11;

		*node[0x55bdafcaa310] = ;;

		*node[0x55bdafcaa340] = print;

		*node[0x55bdafcaa370] = 12;

		*node[0x55bdafcaa3a0] = 13;

		*node[0x55bdafcaa3d0] = else;

		*node[0x55bdafcaa400] = op_no;

		*node[0x55bdafcaa430] = ;;

		*node[0x55bdafcaa6d0] = =;

		*node[0x55bdafcaa460] = 14;

		*node[0x55bdafcaa6a0] = -;

		*node[0x55bdafcaa580] = *;

		*node[0x55bdafcaa520] = 2;

		*node[0x55bdafcaa550] = 2;

		*node[0x55bdafcaa670] = *;

		*node[0x55bdafcaa610] = *;

		*node[0x55bdafcaa5b0] = 4;

		*node[0x55bdafcaa5e0] = 1;

		*node[0x55bdafcaa640] = 3;

		*node[0x55bdafcaa700] = ;;

		*node[0x55bdafcaa730] = if;

		*node[0x55bdafcaa760] = op_no;

		*node[0x55bdafcaa7f0] = >;

		*node[0x55bdafcaa790] = 14;

		*node[0x55bdafcaa7c0] = 0;

		*node[0x55bdafcaa820] = ;;

		*node[0x55bdafcaa8e0] = =;

		*node[0x55bdafcaa850] = 15;

		*node[0x55bdafcaa8b0] = sqrt;

		*node[0x55bdafcaa880] = 14;

		*node[0x55bdafcaa910] = ;;

		*node[0x55bdafcaab20] = =;

		*node[0x55bdafcaa940] = 12;

		*node[0x55bdafcaaaf0] = /;

		*node[0x55bdafcaaa30] = -;

		*node[0x55bdafcaa9d0] = -;

		*node[0x55bdafcaa970] = 0;

		*node[0x55bdafcaa9a0] = 2;

		*node[0x55bdafcaaa00] = 15;

		*node[0x55bdafcaaac0] = *;

		*node[0x55bdafcaaa60] = 2;

		*node[0x55bdafcaaa90] = 1;

		*node[0x55bdafcaab50] = ;;

		*node[0x55bdafcaad60] = =;

		*node[0x55bdafcaab80] = 13;

		*node[0x55bdafcaad30] = /;

		*node[0x55bdafcaac70] = +;

		*node[0x55bdafcaac10] = -;

		*node[0x55bdafcaabb0] = 0;

		*node[0x55bdafcaabe0] = 2;

		*node[0x55bdafcaac40] = 15;

		*node[0x55bdafcaad00] = *;

		*node[0x55bdafcaaca0] = 2;

		*node[0x55bdafcaacd0] = 1;

		*node[0x55bdafcaad90] = ;;

		*node[0x55bdafcaadc0] = print;

		*node[0x55bdafcaadf0] = 11;

		*node[0x55bdafcaae20] = ;;

		*node[0x55bdafcaae50] = print;

		*node[0x55bdafcaae80] = 12;

		*node[0x55bdafcaaeb0] = 13;

		*node[0x55bdafcaaee0] = elseif;

		*node[0x55bdafcaaf10] = op_no;

		*node[0x55bdafcaafa0] = ==;

		*node[0x55bdafcaaf40] = 14;

		*node[0x55bdafcaaf70] = 0;

		*node[0x55bdafcaafd0] = ;;

		*node[0x55bdafcab180] = =;

		*node[0x55bdafcab000] = 10;

		*node[0x55bdafcab150] = -;

		*node[0x55bdafcab030] = 0;

		*node[0x55bdafcab120] = /;

		*node[0x55bdafcab060] = 2;

		*node[0x55bdafcab0f0] = *;

		*node[0x55bdafcab090] = 2;

		*node[0x55bdafcab0c0] = 1;

		*node[0x55bdafcab1b0] = ;;

		*node[0x55bdafcab1e0] = print;

		*node[0x55bdafcab210] = 8;

		*node[0x55bdafcab240] = ;;

		*node[0x55bdafcab270] = print;

		*node[0x55bdafcab2a0] = 10;

		*node[0x55bdafcab2d0] = else;

		*node[0x55bdafcab300] = op_no;

		*node[0x55bdafcab330] = ;;

		*node[0x55bdafcab360] = print;

		*node[0x55bdafcab390] = 7;

		*node[0x55bdafcab3c0] = ;;

		*node[0x55bdafcab3f0] = return;

		*node[0x55bdafcab420] = 0;

		*node[0x55bdafcab450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe6bb66090] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x5599b60b1e40] = ;;

		*node[0x5599b60b1e70] = 0;

		*node[0x5599b60b1ea0] = ;;

		*node[0x5599b60b1ed0] = input;

		*node[0x5599b60b1f00] = 1;

		*node[0x5599b60b1f30] = 2;

		*node[0x5599b60b1f60] = 3;

		*node[0x5599b60b1f90] = ;;

		*node[0x5599b60b1ff0] = 1;

		*node[0x5599b60b2020] = 2;

		*node[0x5599b60b2050] = 3;

		*node[0x5599b60b2080] = ;;

		*node[0x5599b60b20b0] = 4;

		*node[0x5599b60b20e0] = 1;

		*node[0x5599b60b2110] = 2;

		*node[0x5599b60b2140] = 3;

		*node[0x5599b60b2170] = ;;

		*node[0x5599b60b21a0] = if;

		*node[0x5599b60b21d0] = op_no;

		*node[0x5599b60b2200] = ==;

		*node[0x5599b60b2230] = 1;

		*node[0x5599b60b2260] = 0;

		*node[0x5599b60b2290] = ;;

		*node[0x5599b60b22f0] = 2;

		*node[0x5599b60b2320] = 3;

		*node[0x5599b60b2350] = else;

		*node[0x5599b60b2380] = op_no;

		*node[0x5599b60b23b0] = ;;

		*node[0x5599b60b2410] = 1;

		*node[0x5599b60b2440] = 2;

		*node[0x5599b60b2470] = 3;

		*node[0x5599b60b24a0] = ;;

		*node[0x5599b60b24d0] = return;

		*node[0x5599b60b2500] = 0;

		*node[0x5599b60b2530] = ;;

		*node[0x5599b60b2560] = 5;

		*node[0x5599b60b2590] = 1;

		*node[0x5599b60b25c0] = 2;

		*node[0x5599b60b25f0] = ;;

		*node[0x5599b60b2620] = =;

		*node[0x5599b60b2650] = 7;

		*node[0x5599b60b4a20] = -1;

		*node[0x5599b60b2710] = ;;

		*node[0x5599b60b2740] = =;

		*node[0x5599b60b2770] = 8;

		*node[0x5599b60b27a0] = 1;

		*node[0x5599b60b27d0] = ;;

		*node[0x5599b60b2800] = =;

		*node[0x5599b60b2830] = 9;

		*node[0x5599b60b2860] = 1000;

		*node[0x5599b60b2890] = ;;

		*node[0x5599b60b28c0] = if;

		*node[0x5599b60b28f0] = op_no;

		*node[0x5599b60b2920] = ==;

		*node[0x5599b60b2950] = 1;

		*node[0x5599b60b2980] = 0;

		*node[0x5599b60b29b0] = ;;

		*node[0x5599b60b29e0] = if;

		*node[0x5599b60b2a10] = op_no;

		*node[0x5599b60b2a40] = ==;

		*node[0x5599b60b2a70] = 2;

		*node[0x5599b60b2aa0] = 0;

		*node[0x5599b60b2ad0] = ;;

		*node[0x5599b60b2b00] = print;

		*node[0x5599b60b2b30] = 9;

		*node[0x5599b60b2b60] = else;

		*node[0x5599b60b2b90] = op_no;

		*node[0x5599b60b2bc0] = ;;

		*node[0x5599b60b2bf0] = print;

		*node[0x5599b60b2c20] = 7;

		*node[0x5599b60b2c50] = else;

		*node[0x5599b60b2c80] = op_no;

		*node[0x5599b60b2cb0] = ;;

		*node[0x5599b60b2ce0] = =;

		*node[0x5599b60b2d10] = 10;

		*node[0x5599b60b2d40] = -;

		*node[0x5599b60b2d70] = 0;

		*node[0x5599b60b2da0] = /;

		*node[0x5599b60b2dd0] = 2;

		*node[0x5599b60b2e00] = 1;

		*node[0x5599b60b2e30] = ;;

		*node[0x5599b60b2e60] = print;

		*node[0x5599b60b2e90] = 8;

		*node[0x5599b60b2ec0] = ;;

		*node[0x5599b60b2ef0] = print;

		*node[0x5599b60b2f20] = 10;

		*node[0x5599b60b2f50] = ;;

		*node[0x5599b60b2f80] = return;

		*node[0x5599b60b2fb0] = 0;

		*node[0x5599b60b2fe0] = ;;

		*node[0x5599b60b3010] = 6;

		*node[0x5599b60b3040] = 1;

		*node[0x5599b60b3070] = 2;

		*node[0x5599b60b30a0] = 3;

		*node[0x5599b60b30d0] = ;;

		*node[0x5599b60b3100] = =;

		*node[0x5599b60b3130] = 7;

		*node[0x5599b60b4a50] = -1;

		*node[0x5599b60b31f0] = ;;

		*node[0x5599b60b3220] = =;

		*node[0x5599b60b3250] = 8;

		*node[0x5599b60b3280] = 1;

		*node[0x5599b60b32b0] = ;;

		*node[0x5599b60b32e0] = =;

		*node[0x5599b60b3310] = 11;

		*node[0x5599b60b3340] = 2;

		*node[0x5599b60b3370] = ;;

		*node[0x5599b60b33a0] = if;

		*node[0x5599b60b33d0] = op_no;

		*node[0x5599b60b3400] = ==;

		*node[0x5599b60b3430] = 3;

		*node[0x5599b60b3460] = 0;

		*node[0x5599b60b3490] = ;;

		*node[0x5599b60b34c0] = =;

		*node[0x5599b60b34f0] = 12;

		*node[0x5599b60b3520] = 0;

		*node[0x5599b60b3550] = ;;

		*node[0x5599b60b3580] = =;

		*node[0x5599b60b35b0] = 13;

		*node[0x5599b60b35e0] = -;

		*node[0x5599b60b3610] = 0;

		*node[0x5599b60b3640] = /;

		*node[0x5599b60b3670] = 2;

		*node[0x5599b60b36a0] = 1;

		*node[0x5599b60b36d0] = ;;

		*node[0x5599b60b3700] = print;

		*node[0x5599b60b3730] = 11;

		*node[0x5599b60b3760] = ;;

		*node[0x5599b60b3790] = print;

		*node[0x5599b60b37c0] = 12;

		*node[0x5599b60b37f0] = 13;

		*node[0x5599b60b3820] = else;

		*node[0x5599b60b3850] = op_no;

		*node[0x5599b60b3880] = ;;

		*node[0x5599b60b38b0] = =;

		*node[0x5599b60b38e0] = 14;

		*node[0x5599b60b3910] = -;

		*node[0x5599b60b3940] = *;

		*node[0x5599b60b3970] = 2;

		*node[0x5599b60b39a0] = 2;

		*node[0x5599b60b39d0] = *;

		*node[0x5599b60b3a00] = *;

		*node[0x5599b60b3a30] = 4;

		*node[0x5599b60b3a60] = 1;

		*node[0x5599b60b3a90] = 3;

		*node[0x5599b60b3ac0] = ;;

		*node[0x5599b60b3af0] = if;

		*node[0x5599b60b3b20] = op_no;

		*node[0x5599b60b3b50] = >;

		*node[0x5599b60b3b80] = 14;

		*node[0x5599b60b3bb0] = 0;

		*node[0x5599b60b3be0] = ;;

		*node[0x5599b60b3c10] = =;

		*node[0x5599b60b3c40] = 15;

		*node[0x5599b60b3c70] = sqrt;

		*node[0x5599b60b3ca0] = 14;

		*node[0x5599b60b3cd0] = ;;

		*node[0x5599b60b3d00] = =;

		*node[0x5599b60b3d30] = 12;

		*node[0x5599b60b3d60] = /;

		*node[0x5599b60b3d90] = -;

		*node[0x5599b60b3dc0] = -;

		*node[0x5599b60b3df0] = 0;

		*node[0x5599b60b3e20] = 2;

		*node[0x5599b60b3e50] = 15;

		*node[0x5599b60b3e80] = *;

		*node[0x5599b60b3eb0] = 2;

		*node[0x5599b60b3ee0] = 1;

		*node[0x5599b60b3f10] = ;;

		*node[0x5599b60b3f40] = =;

		*node[0x5599b60b3f70] = 13;

		*node[0x5599b60b3fa0] = /;

		*node[0x5599b60b3fd0] = +;

		*node[0x5599b60b4000] = -;

		*node[0x5599b60b4030] = 0;

		*node[0x5599b60b4060] = 2;

		*node[0x5599b60b4090] = 15;

		*node[0x5599b60b40c0] = *;

		*node[0x5599b60b40f0] = 2;

		*node[0x5599b60b4120] = 1;

		*node[0x5599b60b4150] = ;;

		*node[0x5599b60b4180] = print;

		*node[0x5599b60b41b0] = 11;

		*node[0x5599b60b41e0] = ;;

		*node[0x5599b60b4210] = print;

		*node[0x5599b60b4240] = 12;

		*node[0x5599b60b4270] = 13;

		*node[0x5599b60b42a0] = elseif;

		*node[0x5599b60b42d0] = op_no;

		*node[0x5599b60b4300] = ==;

		*node[0x5599b60b4330] = 14;

		*node[0x5599b60b4360] = 0;

		*node[0x5599b60b4390] = ;;

		*node[0x5599b60b43c0] = =;

		*node[0x5599b60b43f0] = 10;

		*node[0x5599b60b4420] = -;

		*node[0x5599b60b4450] = 0;

		*node[0x5599b60b4480] = /;

		*node[0x5599b60b44b0] = 2;

		*node[0x5599b60b44e0] = *;

		*node[0x5599b60b4510] = 2;

		*node[0x5599b60b4540] = 1;

		*node[0x5599b60b4570] = ;;

		*node[0x5599b60b45a0] = print;

		*node[0x5599b60b45d0] = 8;

		*node[0x5599b60b4600] = ;;

		*node[0x5599b60b4630] = print;

		*node[0x5599b60b4660] = 10;

		*node[0x5599b60b4690] = else;

		*node[0x5599b60b46c0] = op_no;

		*node[0x5599b60b46f0] = ;;

		*node[0x5599b60b4720] = print;

		*node[0x5599b60b4750] = 7;

		*node[0x5599b60b4780] = ;;

		*node[0x5599b60b47b0] = return;

		*node[0x5599b60b47e0] = 0;

		*node[0x5599b60b4810] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe47643950] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5de25bc313c0] = ;;

		*node[0x5de25bc31440] = 0;

		*node[0x5de25bc31470] = ;;

		*node[0x5de25bc314a0] = input;

		*node[0x5de25bc314d0] = 1;

		*node[0x5de25bc31500] = 2;

		*node[0x5de25bc31530] = 3;

		*node[0x5de25bc31590] = ;;

		*node[0x5de25bc315f0] = 1;

		*node[0x5de25bc31620] = 2;

		*node[0x5de25bc31650] = 3;

		*node[0x5de25bc31680] = ;;

		*node[0x5de25bc31700] = 4;

		*node[0x5de25bc31730] = 1;

		*node[0x5de25bc31760] = 2;

		*node[0x5de25bc31790] = 3;

		*node[0x5de25bc317f0] = ;;

		*node[0x5de25bc31820] = if;

		*node[0x5de25bc31850] = op_no;

		*node[0x5de25bc318e0] = ==;

		*node[0x5de25bc31880] = 1;

		*node[0x5de25bc318b0] = 0;

		*node[0x5de25bc31910] = ;;

		*node[0x5de25bc31970] = 2;

		*node[0x5de25bc319a0] = 3;

		*node[0x5de25bc319d0] = else;

		*node[0x5de25bc31a00] = op_no;

		*node[0x5de25bc31a30] = ;;

		*node[0x5de25bc31ae0] = 1;

		*node[0x5de25bc31b10] = 2;

		*node[0x5de25bc31b40] = 3;

		*node[0x5de25bc31b70] = ;;

		*node[0x5de25bc31ba0] = return;

		*node[0x5de25bc31bd0] = 0;

		*node[0x5de25bc31c00] = ;;

		*node[0x5de25bc31c80] = 5;

		*node[0x5de25bc31ce0] = 1;

		*node[0x5de25bc31d10] = 2;

		*node[0x5de25bc31d40] = ;;

		*node[0x5de25bc31e60] = =;

		*node[0x5de25bc31d70] = 7;

		*node[0x5de25bc31e30] = -;

		*node[0x5de25bc31dd0] = 0;

		*node[0x5de25bc31e00] = 1;

		*node[0x5de25bc31e90] = ;;

		*node[0x5de25bc31f20] = =;

		*node[0x5de25bc31ec0] = 8;

		*node[0x5de25bc31ef0] = 1;

		*node[0x5de25bc31f50] = ;;

		*node[0x5de25bc32030] = =;

		*node[0x5de25bc31f80] = 9;

		*node[0x5de25bc32000] = 1000;

		*node[0x5de25bc32060] = ;;

		*node[0x5de25bc32090] = if;

		*node[0x5de25bc320c0] = op_no;

		*node[0x5de25bc32150] = ==;

		*node[0x5de25bc320f0] = 1;

		*node[0x5de25bc32120] = 0;

		*node[0x5de25bc32180] = ;;

		*node[0x5de25bc321b0] = if;

		*node[0x5de25bc321e0] = op_no;

		*node[0x5de25bc32270] = ==;

		*node[0x5de25bc32210] = 2;

		*node[0x5de25bc32240] = 0;

		*node[0x5de25bc322a0] = ;;

		*node[0x5de25bc322d0] = print;

		*node[0x5de25bc32300] = 9;

		*node[0x5de25bc32330] = else;

		*node[0x5de25bc32360] = op_no;

		*node[0x5de25bc32390] = ;;

		*node[0x5de25bc323c0] = print;

		*node[0x5de25bc323f0] = 7;

		*node[0x5de25bc32420] = else;

		*node[0x5de25bc32450] = op_no;

		*node[0x5de25bc32480] = ;;

		*node[0x5de25bc325d0] = =;

		*node[0x5de25bc324b0] = 10;

		*node[0x5de25bc325a0] = -;

		*node[0x5de25bc324e0] = 0;

		*node[0x5de25bc32570] = /;

		*node[0x5de25bc32510] = 2;

		*node[0x5de25bc32540] = 1;

		*node[0x5de25bc32600] = ;;

		*node[0x5de25bc32630] = print;

		*node[0x5de25bc32660] = 8;

		*node[0x5de25bc32690] = ;;

		*node[0x5de25bc326c0] = print;

		*node[0x5de25bc326f0] = 10;

		*node[0x5de25bc32720] = ;;

		*node[0x5de25bc32750] = return;

		*node[0x5de25bc32780] = 0;

		*node[0x5de25bc327b0] = ;;

		*node[0x5de25bc32830] = 6;

		*node[0x5de25bc32860] = 1;

		*node[0x5de25bc32890] = 2;

		*node[0x5de25bc328c0] = 3;

		*node[0x5de25bc32920] = ;;

		*node[0x5de25bc32a10] = =;

		*node[0x5de25bc32950] = 7;

		*node[0x5de25bc329e0] = -;

		*node[0x5de25bc32980] = 0;

		*node[0x5de25bc329b0] = 1;

		*node[0x5de25bc32a40] = ;;

		*node[0x5de25bc32b20] = =;

		*node[0x5de25bc32a70] = 8;

		*node[0x5de25bc32af0] = 1;

		*node[0x5de25bc32b50] = ;;

		*node[0x5de25bc32be0] = =;

		*node[0x5de25bc32b80] = 11;

		*node[0x5de25bc32bb0] = 2;

		*node[0x5de25bc32c10] = ;;

		*node[0x5de25bc32c40] = if;

		*node[0x5de25bc32c70] = op_no;

		*node[0x5de25bc32d00] = ==;

		*node[0x5de25bc32ca0] = 3;

		*node[0x5de25bc32cd0] = 0;

		*node[0x5de25bc32d30] = ;;

		*node[0x5de25bc32dc0] = =;

		*node[0x5de25bc32d60] = 12;

		*node[0x5de25bc32d90] = 0;

		*node[0x5de25bc32df0] = ;;

		*node[0x5de25bc32f40] = =;

		*node[0x5de25bc32e20] = 13;

		*node[0x5de25bc32f10] = -;

		*node[0x5de25bc32e50] = 0;

		*node[0x5de25bc32ee0] = /;

		*node[0x5de25bc32e80] = 2;

		*node[0x5de25bc32eb0] = 1;

		*node[0x5de25bc32f70] = ;;

		*node[0x5de25bc32fa0] = print;

		*node[0x5de25bc32fd0] = 11;

		*node[0x5de25bc33000] = ;;

		*node[0x5de25bc33030] = print;

		*node[0x5de25bc33060] = 12;

		*node[0x5de25bc33090] = 13;

		*node[0x5de25bc330c0] = else;

		*node[0x5de25bc330f0] = op_no;

		*node[0x5de25bc33120] = ;;

		*node[0x5de25bc333c0] = =;

		*node[0x5de25bc33150] = 14;

		*node[0x5de25bc33390] = -;

		*node[0x5de25bc33270] = *;

		*node[0x5de25bc33210] = 2;

		*node[0x5de25bc33240] = 2;

		*node[0x5de25bc33360] = *;

		*node[0x5de25bc33300] = *;

		*node[0x5de25bc332a0] = 4;

		*node[0x5de25bc332d0] = 1;

		*node[0x5de25bc33330] = 3;

		*node[0x5de25bc333f0] = ;;

		*node[0x5de25bc33420] = if;

		*node[0x5de25bc33450] = op_no;

		*node[0x5de25bc334e0] = >;

		*node[0x5de25bc33480] = 14;

		*node[0x5de25bc334b0] = 0;

		*node[0x5de25bc33510] = ;;

		*node[0x5de25bc335d0] = =;

		*node[0x5de25bc33540] = 15;

		*node[0x5de25bc335a0] = sqrt;

		*node[0x5de25bc33570] = 14;

		*node[0x5de25bc33600] = ;;

		*node[0x5de25bc33810] = =;

		*node[0x5de25bc33630] = 12;

		*node[0x5de25bc337e0] = -;

		*node[0x5de25bc336c0] = -;

		*node[0x5de25bc33660] = 0;

		*node[0x5de25bc33690] = 2;

		*node[0x5de25bc337b0] = *;

		*node[0x5de25bc33750] = /;

		*node[0x5de25bc336f0] = 15;

		*node[0x5de25bc33720] = 2;

		*node[0x5de25bc33780] = 1;

		*node[0x5de25bc33840] = ;;

		*node[0x5de25bc33a50] = =;

		*node[0x5de25bc33870] = 13;

		*node[0x5de25bc33a20] = +;

		*node[0x5de25bc33900] = -;

		*node[0x5de25bc338a0] = 0;

		*node[0x5de25bc338d0] = 2;

		*node[0x5de25bc339f0] = *;

		*node[0x5de25bc33990] = /;

		*node[0x5de25bc33930] = 15;

		*node[0x5de25bc33960] = 2;

		*node[0x5de25bc339c0] = 1;

		*node[0x5de25bc33a80] = ;;

		*node[0x5de25bc33ab0] = print;

		*node[0x5de25bc33ae0] = 11;

		*node[0x5de25bc33b10] = ;;

		*node[0x5de25bc33b40] = print;

		*node[0x5de25bc33b70] = 12;

		*node[0x5de25bc33ba0] = 13;

		*node[0x5de25bc33bd0] = elseif;

		*node[0x5de25bc33c00] = op_no;

		*node[0x5de25bc33c90] = ==;

		*node[0x5de25bc33c30] = 14;

		*node[0x5de25bc33c60] = 0;

		*node[0x5de25bc33cc0] = ;;

		*node[0x5de25bc33e70] = =;

		*node[0x5de25bc33cf0] = 10;

		*node[0x5de25bc33e40] = -;

		*node[0x5de25bc33d20] = 0;

		*node[0x5de25bc33e10] = *;

		*node[0x5de25bc33db0] = /;

		*node[0x5de25bc33d50] = 2;

		*node[0x5de25bc33d80] = 2;

		*node[0x5de25bc33de0] = 1;

		*node[0x5de25bc33ea0] = ;;

		*node[0x5de25bc33ed0] = print;

		*node[0x5de25bc33f00] = 8;

		*node[0x5de25bc33f30] = ;;

		*node[0x5de25bc33f60] = print;

		*node[0x5de25bc33f90] = 10;

		*node[0x5de25bc33fc0] = else;

		*node[0x5de25bc33ff0] = op_no;

		*node[0x5de25bc34020] = ;;

		*node[0x5de25bc34050] = print;

		*node[0x5de25bc34080] = 7;

		*node[0x5de25bc340b0] = ;;

		*node[0x5de25bc340e0] = return;

		*node[0x5de25bc34110] = 0;

		*node[0x5de25bc34140] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff408c0400] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5a3b073596d0] = ;;

		*node[0x5a3b07359750] = 0;

		*node[0x5a3b07359780] = ;;

		*node[0x5a3b073597b0] = input;

		*node[0x5a3b073597e0] = 1;

		*node[0x5a3b07359810] = 2;

		*node[0x5a3b07359840] = 3;

		*node[0x5a3b073598a0] = ;;

		*node[0x5a3b07359900] = 1;

		*node[0x5a3b07359930] = 2;

		*node[0x5a3b07359960] = 3;

		*node[0x5a3b07359990] = ;;

		*node[0x5a3b07359a10] = 4;

		*node[0x5a3b07359a40] = 1;

		*node[0x5a3b07359a70] = 2;

		*node[0x5a3b07359aa0] = 3;

		*node[0x5a3b07359b00] = ;;

		*node[0x5a3b07359b30] = if;

		*node[0x5a3b07359b60] = op_no;

		*node[0x5a3b07359bf0] = ==;

		*node[0x5a3b07359b90] = 1;

		*node[0x5a3b07359bc0] = 0;

		*node[0x5a3b07359c20] = ;;

		*node[0x5a3b07359c80] = 2;

		*node[0x5a3b07359cb0] = 3;

		*node[0x5a3b07359ce0] = else;

		*node[0x5a3b07359d10] = op_no;

		*node[0x5a3b07359d40] = ;;

		*node[0x5a3b07359df0] = 1;

		*node[0x5a3b07359e20] = 2;

		*node[0x5a3b07359e50] = 3;

		*node[0x5a3b07359e80] = ;;

		*node[0x5a3b07359eb0] = return;

		*node[0x5a3b07359ee0] = 0;

		*node[0x5a3b07359f10] = ;;

		*node[0x5a3b07359f90] = 5;

		*node[0x5a3b07359ff0] = 1;

		*node[0x5a3b0735a020] = 2;

		*node[0x5a3b0735a050] = ;;

		*node[0x5a3b0735a170] = =;

		*node[0x5a3b0735a080] = 7;

		*node[0x5a3b0735a140] = -;

		*node[0x5a3b0735a0e0] = 0;

		*node[0x5a3b0735a110] = 1;

		*node[0x5a3b0735a1a0] = ;;

		*node[0x5a3b0735a230] = =;

		*node[0x5a3b0735a1d0] = 8;

		*node[0x5a3b0735a200] = 1;

		*node[0x5a3b0735a260] = ;;

		*node[0x5a3b0735a340] = =;

		*node[0x5a3b0735a290] = 9;

		*node[0x5a3b0735a310] = 1000;

		*node[0x5a3b0735a370] = ;;

		*node[0x5a3b0735a3a0] = if;

		*node[0x5a3b0735a3d0] = op_no;

		*node[0x5a3b0735a460] = ==;

		*node[0x5a3b0735a400] = 1;

		*node[0x5a3b0735a430] = 0;

		*node[0x5a3b0735a490] = ;;

		*node[0x5a3b0735a4c0] = if;

		*node[0x5a3b0735a4f0] = op_no;

		*node[0x5a3b0735a580] = ==;

		*node[0x5a3b0735a520] = 2;

		*node[0x5a3b0735a550] = 0;

		*node[0x5a3b0735a5b0] = ;;

		*node[0x5a3b0735a5e0] = print;

		*node[0x5a3b0735a610] = 9;

		*node[0x5a3b0735a640] = else;

		*node[0x5a3b0735a670] = op_no;

		*node[0x5a3b0735a6a0] = ;;

		*node[0x5a3b0735a6d0] = print;

		*node[0x5a3b0735a700] = 7;

		*node[0x5a3b0735a730] = else;

		*node[0x5a3b0735a760] = op_no;

		*node[0x5a3b0735a790] = ;;

		*node[0x5a3b0735a8e0] = =;

		*node[0x5a3b0735a7c0] = 10;

		*node[0x5a3b0735a8b0] = -;

		*node[0x5a3b0735a7f0] = 0;

		*node[0x5a3b0735a880] = /;

		*node[0x5a3b0735a820] = 2;

		*node[0x5a3b0735a850] = 1;

		*node[0x5a3b0735a910] = ;;

		*node[0x5a3b0735a940] = print;

		*node[0x5a3b0735a970] = 8;

		*node[0x5a3b0735a9a0] = ;;

		*node[0x5a3b0735a9d0] = print;

		*node[0x5a3b0735aa00] = 10;

		*node[0x5a3b0735aa30] = ;;

		*node[0x5a3b0735aa60] = return;

		*node[0x5a3b0735aa90] = 0;

		*node[0x5a3b0735aac0] = ;;

		*node[0x5a3b0735ab40] = 6;

		*node[0x5a3b0735ab70] = 1;

		*node[0x5a3b0735aba0] = 2;

		*node[0x5a3b0735abd0] = 3;

		*node[0x5a3b0735ac30] = ;;

		*node[0x5a3b0735ad20] = =;

		*node[0x5a3b0735ac60] = 7;

		*node[0x5a3b0735acf0] = -;

		*node[0x5a3b0735ac90] = 0;

		*node[0x5a3b0735acc0] = 1;

		*node[0x5a3b0735ad50] = ;;

		*node[0x5a3b0735ae30] = =;

		*node[0x5a3b0735ad80] = 8;

		*node[0x5a3b0735ae00] = 1;

		*node[0x5a3b0735ae60] = ;;

		*node[0x5a3b0735aef0] = =;

		*node[0x5a3b0735ae90] = 11;

		*node[0x5a3b0735aec0] = 2;

		*node[0x5a3b0735af20] = ;;

		*node[0x5a3b0735af50] = if;

		*node[0x5a3b0735af80] = op_no;

		*node[0x5a3b0735b010] = ==;

		*node[0x5a3b0735afb0] = 3;

		*node[0x5a3b0735afe0] = 0;

		*node[0x5a3b0735b040] = ;;

		*node[0x5a3b0735b0d0] = =;

		*node[0x5a3b0735b070] = 12;

		*node[0x5a3b0735b0a0] = 0;

		*node[0x5a3b0735b100] = ;;

		*node[0x5a3b0735b250] = =;

		*node[0x5a3b0735b130] = 13;

		*node[0x5a3b0735b220] = -;

		*node[0x5a3b0735b160] = 0;

		*node[0x5a3b0735b1f0] = /;

		*node[0x5a3b0735b190] = 2;

		*node[0x5a3b0735b1c0] = 1;

		*node[0x5a3b0735b280] = ;;

		*node[0x5a3b0735b2b0] = print;

		*node[0x5a3b0735b2e0] = 11;

		*node[0x5a3b0735b310] = ;;

		*node[0x5a3b0735b340] = print;

		*node[0x5a3b0735b370] = 12;

		*node[0x5a3b0735b3a0] = 13;

		*node[0x5a3b0735b3d0] = else;

		*node[0x5a3b0735b400] = op_no;

		*node[0x5a3b0735b430] = ;;

		*node[0x5a3b0735b6d0] = =;

		*node[0x5a3b0735b460] = 14;

		*node[0x5a3b0735b6a0] = -;

		*node[0x5a3b0735b580] = *;

		*node[0x5a3b0735b520] = 2;

		*node[0x5a3b0735b550] = 2;

		*node[0x5a3b0735b670] = *;

		*node[0x5a3b0735b610] = *;

		*node[0x5a3b0735b5b0] = 4;

		*node[0x5a3b0735b5e0] = 1;

		*node[0x5a3b0735b640] = 3;

		*node[0x5a3b0735b700] = ;;

		*node[0x5a3b0735b730] = if;

		*node[0x5a3b0735b760] = op_no;

		*node[0x5a3b0735b7f0] = >;

		*node[0x5a3b0735b790] = 14;

		*node[0x5a3b0735b7c0] = 0;

		*node[0x5a3b0735b820] = ;;

		*node[0x5a3b0735b8e0] = =;

		*node[0x5a3b0735b850] = 15;

		*node[0x5a3b0735b8b0] = sqrt;

		*node[0x5a3b0735b880] = 14;

		*node[0x5a3b0735b910] = ;;

		*node[0x5a3b0735bb20] = =;

		*node[0x5a3b0735b940] = 12;

		*node[0x5a3b0735baf0] = /;

		*node[0x5a3b0735ba30] = -;

		*node[0x5a3b0735b9d0] = -;

		*node[0x5a3b0735b970] = 0;

		*node[0x5a3b0735b9a0] = 2;

		*node[0x5a3b0735ba00] = 15;

		*node[0x5a3b0735bac0] = *;

		*node[0x5a3b0735ba60] = 2;

		*node[0x5a3b0735ba90] = 1;

		*node[0x5a3b0735bb50] = ;;

		*node[0x5a3b0735bd60] = =;

		*node[0x5a3b0735bb80] = 13;

		*node[0x5a3b0735bd30] = /;

		*node[0x5a3b0735bc70] = +;

		*node[0x5a3b0735bc10] = -;

		*node[0x5a3b0735bbb0] = 0;

		*node[0x5a3b0735bbe0] = 2;

		*node[0x5a3b0735bc40] = 15;

		*node[0x5a3b0735bd00] = *;

		*node[0x5a3b0735bca0] = 2;

		*node[0x5a3b0735bcd0] = 1;

		*node[0x5a3b0735bd90] = ;;

		*node[0x5a3b0735bdc0] = print;

		*node[0x5a3b0735bdf0] = 11;

		*node[0x5a3b0735be20] = ;;

		*node[0x5a3b0735be50] = print;

		*node[0x5a3b0735be80] = 12;

		*node[0x5a3b0735beb0] = 13;

		*node[0x5a3b0735bee0] = elseif;

		*node[0x5a3b0735bf10] = op_no;

		*node[0x5a3b0735bfa0] = ==;

		*node[0x5a3b0735bf40] = 14;

		*node[0x5a3b0735bf70] = 0;

		*node[0x5a3b0735bfd0] = ;;

		*node[0x5a3b0735c180] = =;

		*node[0x5a3b0735c000] = 10;

		*node[0x5a3b0735c150] = -;

		*node[0x5a3b0735c030] = 0;

		*node[0x5a3b0735c120] = /;

		*node[0x5a3b0735c060] = 2;

		*node[0x5a3b0735c0f0] = *;

		*node[0x5a3b0735c090] = 2;

		*node[0x5a3b0735c0c0] = 1;

		*node[0x5a3b0735c1b0] = ;;

		*node[0x5a3b0735c1e0] = print;

		*node[0x5a3b0735c210] = 8;

		*node[0x5a3b0735c240] = ;;

		*node[0x5a3b0735c270] = print;

		*node[0x5a3b0735c2a0] = 10;

		*node[0x5a3b0735c2d0] = else;

		*node[0x5a3b0735c300] = op_no;

		*node[0x5a3b0735c330] = ;;

		*node[0x5a3b0735c360] = print;

		*node[0x5a3b0735c390] = 7;

		*node[0x5a3b0735c3c0] = ;;

		*node[0x5a3b0735c3f0] = return;

		*node[0x5a3b0735c420] = 0;

		*node[0x5a3b0735c450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff91d0b000] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x59c3192bf3c0] = ;;

		*node[0x59c3192bf440] = 0;

		*node[0x59c3192bf470] = ;;

		*node[0x59c3192bf4a0] = input;

		*node[0x59c3192bf4d0] = 1;

		*node[0x59c3192bf500] = 2;

		*node[0x59c3192bf530] = 3;

		*node[0x59c3192bf590] = ;;

		*node[0x59c3192bf5f0] = 1;

		*node[0x59c3192bf620] = 2;

		*node[0x59c3192bf650] = 3;

		*node[0x59c3192bf680] = ;;

		*node[0x59c3192bf700] = 4;

		*node[0x59c3192bf730] = 1;

		*node[0x59c3192bf760] = 2;

		*node[0x59c3192bf790] = 3;

		*node[0x59c3192bf7f0] = ;;

		*node[0x59c3192bf820] = if;

		*node[0x59c3192bf850] = op_no;

		*node[0x59c3192bf8e0] = ==;

		*node[0x59c3192bf880] = 1;

		*node[0x59c3192bf8b0] = 0;

		*node[0x59c3192bf910] = ;;

		*node[0x59c3192bf970] = 2;

		*node[0x59c3192bf9a0] = 3;

		*node[0x59c3192bf9d0] = else;

		*node[0x59c3192bfa00] = op_no;

		*node[0x59c3192bfa30] = ;;

		*node[0x59c3192bfae0] = 1;

		*node[0x59c3192bfb10] = 2;

		*node[0x59c3192bfb40] = 3;

		*node[0x59c3192bfb70] = ;;

		*node[0x59c3192bfba0] = return;

		*node[0x59c3192bfbd0] = 0;

		*node[0x59c3192bfc00] = ;;

		*node[0x59c3192bfc80] = 5;

		*node[0x59c3192bfce0] = 1;

		*node[0x59c3192bfd10] = 2;

		*node[0x59c3192bfd40] = ;;

		*node[0x59c3192bfe60] = =;

		*node[0x59c3192bfd70] = 7;

		*node[0x59c3192bfe30] = -;

		*node[0x59c3192bfdd0] = 0;

		*node[0x59c3192bfe00] = 1;

		*node[0x59c3192bfe90] = ;;

		*node[0x59c3192bff20] = =;

		*node[0x59c3192bfec0] = 8;

		*node[0x59c3192bfef0] = 1;

		*node[0x59c3192bff50] = ;;

		*node[0x59c3192c0030] = =;

		*node[0x59c3192bff80] = 9;

		*node[0x59c3192c0000] = 1000;

		*node[0x59c3192c0060] = ;;

		*node[0x59c3192c0090] = if;

		*node[0x59c3192c00c0] = op_no;

		*node[0x59c3192c0150] = ==;

		*node[0x59c3192c00f0] = 1;

		*node[0x59c3192c0120] = 0;

		*node[0x59c3192c0180] = ;;

		*node[0x59c3192c01b0] = if;

		*node[0x59c3192c01e0] = op_no;

		*node[0x59c3192c0270] = ==;

		*node[0x59c3192c0210] = 2;

		*node[0x59c3192c0240] = 0;

		*node[0x59c3192c02a0] = ;;

		*node[0x59c3192c02d0] = print;

		*node[0x59c3192c0300] = 9;

		*node[0x59c3192c0330] = else;

		*node[0x59c3192c0360] = op_no;

		*node[0x59c3192c0390] = ;;

		*node[0x59c3192c03c0] = print;

		*node[0x59c3192c03f0] = 7;

		*node[0x59c3192c0420] = else;

		*node[0x59c3192c0450] = op_no;

		*node[0x59c3192c0480] = ;;

		*node[0x59c3192c05d0] = =;

		*node[0x59c3192c04b0] = 10;

		*node[0x59c3192c05a0] = -;

		*node[0x59c3192c04e0] = 0;

		*node[0x59c3192c0570] = /;

		*node[0x59c3192c0510] = 2;

		*node[0x59c3192c0540] = 1;

		*node[0x59c3192c0600] = ;;

		*node[0x59c3192c0630] = print;

		*node[0x59c3192c0660] = 8;

		*node[0x59c3192c0690] = ;;

		*node[0x59c3192c06c0] = print;

		*node[0x59c3192c06f0] = 10;

		*node[0x59c3192c0720] = ;;

		*node[0x59c3192c0750] = return;

		*node[0x59c3192c0780] = 0;

		*node[0x59c3192c07b0] = ;;

		*node[0x59c3192c0830] = 6;

		*node[0x59c3192c0860] = 1;

		*node[0x59c3192c0890] = 2;

		*node[0x59c3192c08c0] = 3;

		*node[0x59c3192c0920] = ;;

		*node[0x59c3192c0a10] = =;

		*node[0x59c3192c0950] = 7;

		*node[0x59c3192c09e0] = -;

		*node[0x59c3192c0980] = 0;

		*node[0x59c3192c09b0] = 1;

		*node[0x59c3192c0a40] = ;;

		*node[0x59c3192c0b20] = =;

		*node[0x59c3192c0a70] = 8;

		*node[0x59c3192c0af0] = 1;

		*node[0x59c3192c0b50] = ;;

		*node[0x59c3192c0be0] = =;

		*node[0x59c3192c0b80] = 11;

		*node[0x59c3192c0bb0] = 2;

		*node[0x59c3192c0c10] = ;;

		*node[0x59c3192c0c40] = if;

		*node[0x59c3192c0c70] = op_no;

		*node[0x59c3192c0d00] = ==;

		*node[0x59c3192c0ca0] = 3;

		*node[0x59c3192c0cd0] = 0;

		*node[0x59c3192c0d30] = ;;

		*node[0x59c3192c0dc0] = =;

		*node[0x59c3192c0d60] = 12;

		*node[0x59c3192c0d90] = 0;

		*node[0x59c3192c0df0] = ;;

		*node[0x59c3192c0f40] = =;

		*node[0x59c3192c0e20] = 13;

		*node[0x59c3192c0f10] = -;

		*node[0x59c3192c0e50] = 0;

		*node[0x59c3192c0ee0] = /;

		*node[0x59c3192c0e80] = 2;

		*node[0x59c3192c0eb0] = 1;

		*node[0x59c3192c0f70] = ;;

		*node[0x59c3192c0fa0] = print;

		*node[0x59c3192c0fd0] = 11;

		*node[0x59c3192c1000] = ;;

		*node[0x59c3192c1030] = print;

		*node[0x59c3192c1060] = 12;

		*node[0x59c3192c1090] = 13;

		*node[0x59c3192c10c0] = else;

		*node[0x59c3192c10f0] = op_no;

		*node[0x59c3192c1120] = ;;

		*node[0x59c3192c13c0] = =;

		*node[0x59c3192c1150] = 14;

		*node[0x59c3192c1390] = -;

		*node[0x59c3192c1270] = *;

		*node[0x59c3192c1210] = 2;

		*node[0x59c3192c1240] = 2;

		*node[0x59c3192c1360] = *;

		*node[0x59c3192c1300] = *;

		*node[0x59c3192c12a0] = 4;

		*node[0x59c3192c12d0] = 1;

		*node[0x59c3192c1330] = 3;

		*node[0x59c3192c13f0] = ;;

		*node[0x59c3192c1420] = if;

		*node[0x59c3192c1450] = op_no;

		*node[0x59c3192c14e0] = >;

		*node[0x59c3192c1480] = 14;

		*node[0x59c3192c14b0] = 0;

		*node[0x59c3192c1510] = ;;

		*node[0x59c3192c15d0] = =;

		*node[0x59c3192c1540] = 15;

		*node[0x59c3192c15a0] = sqrt;

		*node[0x59c3192c1570] = 14;

		*node[0x59c3192c1600] = ;;

		*node[0x59c3192c1810] = =;

		*node[0x59c3192c1630] = 12;

		*node[0x59c3192c17e0] = -;

		*node[0x59c3192c16c0] = -;

		*node[0x59c3192c1660] = 0;

		*node[0x59c3192c1690] = 2;

		*node[0x59c3192c17b0] = *;

		*node[0x59c3192c1750] = /;

		*node[0x59c3192c16f0] = 15;

		*node[0x59c3192c1720] = 2;

		*node[0x59c3192c1780] = 1;

		*node[0x59c3192c1840] = ;;

		*node[0x59c3192c1a50] = =;

		*node[0x59c3192c1870] = 13;

		*node[0x59c3192c1a20] = +;

		*node[0x59c3192c1900] = -;

		*node[0x59c3192c18a0] = 0;

		*node[0x59c3192c18d0] = 2;

		*node[0x59c3192c19f0] = *;

		*node[0x59c3192c1990] = /;

		*node[0x59c3192c1930] = 15;

		*node[0x59c3192c1960] = 2;

		*node[0x59c3192c19c0] = 1;

		*node[0x59c3192c1a80] = ;;

		*node[0x59c3192c1ab0] = print;

		*node[0x59c3192c1ae0] = 11;

		*node[0x59c3192c1b10] = ;;

		*node[0x59c3192c1b40] = print;

		*node[0x59c3192c1b70] = 12;

		*node[0x59c3192c1ba0] = 13;

		*node[0x59c3192c1bd0] = elseif;

		*node[0x59c3192c1c00] = op_no;

		*node[0x59c3192c1c90] = ==;

		*node[0x59c3192c1c30] = 14;

		*node[0x59c3192c1c60] = 0;

		*node[0x59c3192c1cc0] = ;;

		*node[0x59c3192c1e70] = =;

		*node[0x59c3192c1cf0] = 10;

		*node[0x59c3192c1e40] = -;

		*node[0x59c3192c1d20] = 0;

		*node[0x59c3192c1e10] = *;

		*node[0x59c3192c1db0] = /;

		*node[0x59c3192c1d50] = 2;

		*node[0x59c3192c1d80] = 2;

		*node[0x59c3192c1de0] = 1;

		*node[0x59c3192c1ea0] = ;;

		*node[0x59c3192c1ed0] = print;

		*node[0x59c3192c1f00] = 8;

		*node[0x59c3192c1f30] = ;;

		*node[0x59c3192c1f60] = print;

		*node[0x59c3192c1f90] = 10;

		*node[0x59c3192c1fc0] = else;

		*node[0x59c3192c1ff0] = op_no;

		*node[0x59c3192c2020] = ;;

		*node[0x59c3192c2050] = print;

		*node[0x59c3192c2080] = 7;

		*node[0x59c3192c20b0] = ;;

		*node[0x59c3192c20e0] = return;

		*node[0x59c3192c2110] = 0;

		*node[0x59c3192c2140] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffef5e37e40] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x60cdc290a3c0] = ;;

		*node[0x60cdc290a440] = 0;

		*node[0x60cdc290a470] = ;;

		*node[0x60cdc290a4a0] = input;

		*node[0x60cdc290a4d0] = 1;

		*node[0x60cdc290a500] = 2;

		*node[0x60cdc290a530] = 3;

		*node[0x60cdc290a590] = ;;

		*node[0x60cdc290a5f0] = 1;

		*node[0x60cdc290a620] = 2;

		*node[0x60cdc290a650] = 3;

		*node[0x60cdc290a680] = ;;

		*node[0x60cdc290a700] = 4;

		*node[0x60cdc290a730] = 1;

		*node[0x60cdc290a760] = 2;

		*node[0x60cdc290a790] = 3;

		*node[0x60cdc290a7f0] = ;;

		*node[0x60cdc290a820] = if;

		*node[0x60cdc290a850] = op_no;

		*node[0x60cdc290a8e0] = ==;

		*node[0x60cdc290a880] = 1;

		*node[0x60cdc290a8b0] = 0;

		*node[0x60cdc290a910] = ;;

		*node[0x60cdc290a970] = 2;

		*node[0x60cdc290a9a0] = 3;

		*node[0x60cdc290a9d0] = else;

		*node[0x60cdc290aa00] = op_no;

		*node[0x60cdc290aa30] = ;;

		*node[0x60cdc290aae0] = 1;

		*node[0x60cdc290ab10] = 2;

		*node[0x60cdc290ab40] = 3;

		*node[0x60cdc290ab70] = ;;

		*node[0x60cdc290aba0] = return;

		*node[0x60cdc290abd0] = 0;

		*node[0x60cdc290ac00] = ;;

		*node[0x60cdc290ac80] = 5;

		*node[0x60cdc290ace0] = 1;

		*node[0x60cdc290ad10] = 2;

		*node[0x60cdc290ad40] = ;;

		*node[0x60cdc290ae60] = =;

		*node[0x60cdc290ad70] = 7;

		*node[0x60cdc290ae30] = -;

		*node[0x60cdc290add0] = 0;

		*node[0x60cdc290ae00] = 1;

		*node[0x60cdc290ae90] = ;;

		*node[0x60cdc290af20] = =;

		*node[0x60cdc290aec0] = 8;

		*node[0x60cdc290aef0] = 1;

		*node[0x60cdc290af50] = ;;

		*node[0x60cdc290b030] = =;

		*node[0x60cdc290af80] = 9;

		*node[0x60cdc290b000] = 1000;

		*node[0x60cdc290b060] = ;;

		*node[0x60cdc290b090] = if;

		*node[0x60cdc290b0c0] = op_no;

		*node[0x60cdc290b150] = ==;

		*node[0x60cdc290b0f0] = 1;

		*node[0x60cdc290b120] = 0;

		*node[0x60cdc290b180] = ;;

		*node[0x60cdc290b1b0] = if;

		*node[0x60cdc290b1e0] = op_no;

		*node[0x60cdc290b270] = ==;

		*node[0x60cdc290b210] = 2;

		*node[0x60cdc290b240] = 0;

		*node[0x60cdc290b2a0] = ;;

		*node[0x60cdc290b2d0] = print;

		*node[0x60cdc290b300] = 9;

		*node[0x60cdc290b330] = else;

		*node[0x60cdc290b360] = op_no;

		*node[0x60cdc290b390] = ;;

		*node[0x60cdc290b3c0] = print;

		*node[0x60cdc290b3f0] = 7;

		*node[0x60cdc290b420] = else;

		*node[0x60cdc290b450] = op_no;

		*node[0x60cdc290b480] = ;;

		*node[0x60cdc290b5d0] = =;

		*node[0x60cdc290b4b0] = 10;

		*node[0x60cdc290b5a0] = -;

		*node[0x60cdc290b4e0] = 0;

		*node[0x60cdc290b570] = /;

		*node[0x60cdc290b510] = 2;

		*node[0x60cdc290b540] = 1;

		*node[0x60cdc290b600] = ;;

		*node[0x60cdc290b630] = print;

		*node[0x60cdc290b660] = 8;

		*node[0x60cdc290b690] = ;;

		*node[0x60cdc290b6c0] = print;

		*node[0x60cdc290b6f0] = 10;

		*node[0x60cdc290b720] = ;;

		*node[0x60cdc290b750] = return;

		*node[0x60cdc290b780] = 0;

		*node[0x60cdc290b7b0] = ;;

		*node[0x60cdc290b830] = 6;

		*node[0x60cdc290b860] = 1;

		*node[0x60cdc290b890] = 2;

		*node[0x60cdc290b8c0] = 3;

		*node[0x60cdc290b920] = ;;

		*node[0x60cdc290ba10] = =;

		*node[0x60cdc290b950] = 7;

		*node[0x60cdc290b9e0] = -;

		*node[0x60cdc290b980] = 0;

		*node[0x60cdc290b9b0] = 1;

		*node[0x60cdc290ba40] = ;;

		*node[0x60cdc290bb20] = =;

		*node[0x60cdc290ba70] = 8;

		*node[0x60cdc290baf0] = 1;

		*node[0x60cdc290bb50] = ;;

		*node[0x60cdc290bbe0] = =;

		*node[0x60cdc290bb80] = 11;

		*node[0x60cdc290bbb0] = 2;

		*node[0x60cdc290bc10] = ;;

		*node[0x60cdc290bc40] = if;

		*node[0x60cdc290bc70] = op_no;

		*node[0x60cdc290bd00] = ==;

		*node[0x60cdc290bca0] = 3;

		*node[0x60cdc290bcd0] = 0;

		*node[0x60cdc290bd30] = ;;

		*node[0x60cdc290bdc0] = =;

		*node[0x60cdc290bd60] = 12;

		*node[0x60cdc290bd90] = 0;

		*node[0x60cdc290bdf0] = ;;

		*node[0x60cdc290bf40] = =;

		*node[0x60cdc290be20] = 13;

		*node[0x60cdc290bf10] = -;

		*node[0x60cdc290be50] = 0;

		*node[0x60cdc290bee0] = /;

		*node[0x60cdc290be80] = 2;

		*node[0x60cdc290beb0] = 1;

		*node[0x60cdc290bf70] = ;;

		*node[0x60cdc290bfa0] = print;

		*node[0x60cdc290bfd0] = 11;

		*node[0x60cdc290c000] = ;;

		*node[0x60cdc290c030] = print;

		*node[0x60cdc290c060] = 12;

		*node[0x60cdc290c090] = 13;

		*node[0x60cdc290c0c0] = else;

		*node[0x60cdc290c0f0] = op_no;

		*node[0x60cdc290c120] = ;;

		*node[0x60cdc290c3c0] = =;

		*node[0x60cdc290c150] = 14;

		*node[0x60cdc290c390] = -;

		*node[0x60cdc290c270] = *;

		*node[0x60cdc290c210] = 2;

		*node[0x60cdc290c240] = 2;

		*node[0x60cdc290c360] = *;

		*node[0x60cdc290c300] = *;

		*node[0x60cdc290c2a0] = 4;

		*node[0x60cdc290c2d0] = 1;

		*node[0x60cdc290c330] = 3;

		*node[0x60cdc290c3f0] = ;;

		*node[0x60cdc290c420] = if;

		*node[0x60cdc290c450] = op_no;

		*node[0x60cdc290c4e0] = >;

		*node[0x60cdc290c480] = 14;

		*node[0x60cdc290c4b0] = 0;

		*node[0x60cdc290c510] = ;;

		*node[0x60cdc290c5d0] = =;

		*node[0x60cdc290c540] = 15;

		*node[0x60cdc290c5a0] = sqrt;

		*node[0x60cdc290c570] = 14;

		*node[0x60cdc290c600] = ;;

		*node[0x60cdc290c810] = =;

		*node[0x60cdc290c630] = 12;

		*node[0x60cdc290c7e0] = -;

		*node[0x60cdc290c6c0] = -;

		*node[0x60cdc290c660] = 0;

		*node[0x60cdc290c690] = 2;

		*node[0x60cdc290c7b0] = *;

		*node[0x60cdc290c750] = /;

		*node[0x60cdc290c6f0] = 15;

		*node[0x60cdc290c720] = 2;

		*node[0x60cdc290c780] = 1;

		*node[0x60cdc290c840] = ;;

		*node[0x60cdc290ca50] = =;

		*node[0x60cdc290c870] = 13;

		*node[0x60cdc290ca20] = +;

		*node[0x60cdc290c900] = -;

		*node[0x60cdc290c8a0] = 0;

		*node[0x60cdc290c8d0] = 2;

		*node[0x60cdc290c9f0] = *;

		*node[0x60cdc290c990] = /;

		*node[0x60cdc290c930] = 15;

		*node[0x60cdc290c960] = 2;

		*node[0x60cdc290c9c0] = 1;

		*node[0x60cdc290ca80] = ;;

		*node[0x60cdc290cab0] = print;

		*node[0x60cdc290cae0] = 11;

		*node[0x60cdc290cb10] = ;;

		*node[0x60cdc290cb40] = print;

		*node[0x60cdc290cb70] = 12;

		*node[0x60cdc290cba0] = 13;

		*node[0x60cdc290cbd0] = elseif;

		*node[0x60cdc290cc00] = op_no;

		*node[0x60cdc290cc90] = ==;

		*node[0x60cdc290cc30] = 14;

		*node[0x60cdc290cc60] = 0;

		*node[0x60cdc290ccc0] = ;;

		*node[0x60cdc290ce70] = =;

		*node[0x60cdc290ccf0] = 10;

		*node[0x60cdc290ce40] = -;

		*node[0x60cdc290cd20] = 0;

		*node[0x60cdc290ce10] = *;

		*node[0x60cdc290cdb0] = /;

		*node[0x60cdc290cd50] = 2;

		*node[0x60cdc290cd80] = 2;

		*node[0x60cdc290cde0] = 1;

		*node[0x60cdc290cea0] = ;;

		*node[0x60cdc290ced0] = print;

		*node[0x60cdc290cf00] = 8;

		*node[0x60cdc290cf30] = ;;

		*node[0x60cdc290cf60] = print;

		*node[0x60cdc290cf90] = 10;

		*node[0x60cdc290cfc0] = else;

		*node[0x60cdc290cff0] = op_no;

		*node[0x60cdc290d020] = ;;

		*node[0x60cdc290d050] = print;

		*node[0x60cdc290d080] = 7;

		*node[0x60cdc290d0b0] = ;;

		*node[0x60cdc290d0e0] = return;

		*node[0x60cdc290d110] = 0;

		*node[0x60cdc290d140] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe63e0a510] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x606a14f073c0] = ;;

		*node[0x606a14f07440] = 0;

		*node[0x606a14f07470] = ;;

		*node[0x606a14f074a0] = input;

		*node[0x606a14f074d0] = 1;

		*node[0x606a14f07500] = 2;

		*node[0x606a14f07530] = 3;

		*node[0x606a14f07590] = ;;

		*node[0x606a14f075f0] = 1;

		*node[0x606a14f07620] = 2;

		*node[0x606a14f07650] = 3;

		*node[0x606a14f07680] = ;;

		*node[0x606a14f07700] = 4;

		*node[0x606a14f07730] = 1;

		*node[0x606a14f07760] = 2;

		*node[0x606a14f07790] = 3;

		*node[0x606a14f077f0] = ;;

		*node[0x606a14f07820] = if;

		*node[0x606a14f07850] = op_no;

		*node[0x606a14f078e0] = ==;

		*node[0x606a14f07880] = 1;

		*node[0x606a14f078b0] = 0;

		*node[0x606a14f07910] = ;;

		*node[0x606a14f07970] = 2;

		*node[0x606a14f079a0] = 3;

		*node[0x606a14f079d0] = else;

		*node[0x606a14f07a00] = op_no;

		*node[0x606a14f07a30] = ;;

		*node[0x606a14f07ae0] = 1;

		*node[0x606a14f07b10] = 2;

		*node[0x606a14f07b40] = 3;

		*node[0x606a14f07b70] = ;;

		*node[0x606a14f07ba0] = return;

		*node[0x606a14f07bd0] = 0;

		*node[0x606a14f07c00] = ;;

		*node[0x606a14f07c80] = 5;

		*node[0x606a14f07ce0] = 1;

		*node[0x606a14f07d10] = 2;

		*node[0x606a14f07d40] = ;;

		*node[0x606a14f07e60] = =;

		*node[0x606a14f07d70] = 7;

		*node[0x606a14f07e30] = -;

		*node[0x606a14f07dd0] = 0;

		*node[0x606a14f07e00] = 1;

		*node[0x606a14f07e90] = ;;

		*node[0x606a14f07f20] = =;

		*node[0x606a14f07ec0] = 8;

		*node[0x606a14f07ef0] = 1;

		*node[0x606a14f07f50] = ;;

		*node[0x606a14f08030] = =;

		*node[0x606a14f07f80] = 9;

		*node[0x606a14f08000] = 1000;

		*node[0x606a14f08060] = ;;

		*node[0x606a14f08090] = if;

		*node[0x606a14f080c0] = op_no;

		*node[0x606a14f08150] = ==;

		*node[0x606a14f080f0] = 1;

		*node[0x606a14f08120] = 0;

		*node[0x606a14f08180] = ;;

		*node[0x606a14f081b0] = if;

		*node[0x606a14f081e0] = op_no;

		*node[0x606a14f08270] = ==;

		*node[0x606a14f08210] = 2;

		*node[0x606a14f08240] = 0;

		*node[0x606a14f082a0] = ;;

		*node[0x606a14f082d0] = print;

		*node[0x606a14f08300] = 9;

		*node[0x606a14f08330] = else;

		*node[0x606a14f08360] = op_no;

		*node[0x606a14f08390] = ;;

		*node[0x606a14f083c0] = print;

		*node[0x606a14f083f0] = 7;

		*node[0x606a14f08420] = else;

		*node[0x606a14f08450] = op_no;

		*node[0x606a14f08480] = ;;

		*node[0x606a14f085d0] = =;

		*node[0x606a14f084b0] = 10;

		*node[0x606a14f085a0] = -;

		*node[0x606a14f084e0] = 0;

		*node[0x606a14f08570] = /;

		*node[0x606a14f08510] = 2;

		*node[0x606a14f08540] = 1;

		*node[0x606a14f08600] = ;;

		*node[0x606a14f08630] = print;

		*node[0x606a14f08660] = 8;

		*node[0x606a14f08690] = ;;

		*node[0x606a14f086c0] = print;

		*node[0x606a14f086f0] = 10;

		*node[0x606a14f08720] = ;;

		*node[0x606a14f08750] = return;

		*node[0x606a14f08780] = 0;

		*node[0x606a14f087b0] = ;;

		*node[0x606a14f08830] = 6;

		*node[0x606a14f08860] = 1;

		*node[0x606a14f08890] = 2;

		*node[0x606a14f088c0] = 3;

		*node[0x606a14f08920] = ;;

		*node[0x606a14f08a10] = =;

		*node[0x606a14f08950] = 7;

		*node[0x606a14f089e0] = -;

		*node[0x606a14f08980] = 0;

		*node[0x606a14f089b0] = 1;

		*node[0x606a14f08a40] = ;;

		*node[0x606a14f08b20] = =;

		*node[0x606a14f08a70] = 8;

		*node[0x606a14f08af0] = 1;

		*node[0x606a14f08b50] = ;;

		*node[0x606a14f08be0] = =;

		*node[0x606a14f08b80] = 11;

		*node[0x606a14f08bb0] = 2;

		*node[0x606a14f08c10] = ;;

		*node[0x606a14f08c40] = if;

		*node[0x606a14f08c70] = op_no;

		*node[0x606a14f08d00] = ==;

		*node[0x606a14f08ca0] = 3;

		*node[0x606a14f08cd0] = 0;

		*node[0x606a14f08d30] = ;;

		*node[0x606a14f08dc0] = =;

		*node[0x606a14f08d60] = 12;

		*node[0x606a14f08d90] = 0;

		*node[0x606a14f08df0] = ;;

		*node[0x606a14f08f40] = =;

		*node[0x606a14f08e20] = 13;

		*node[0x606a14f08f10] = -;

		*node[0x606a14f08e50] = 0;

		*node[0x606a14f08ee0] = /;

		*node[0x606a14f08e80] = 2;

		*node[0x606a14f08eb0] = 1;

		*node[0x606a14f08f70] = ;;

		*node[0x606a14f08fa0] = print;

		*node[0x606a14f08fd0] = 11;

		*node[0x606a14f09000] = ;;

		*node[0x606a14f09030] = print;

		*node[0x606a14f09060] = 12;

		*node[0x606a14f09090] = 13;

		*node[0x606a14f090c0] = else;

		*node[0x606a14f090f0] = op_no;

		*node[0x606a14f09120] = ;;

		*node[0x606a14f093c0] = =;

		*node[0x606a14f09150] = 14;

		*node[0x606a14f09390] = -;

		*node[0x606a14f09270] = *;

		*node[0x606a14f09210] = 2;

		*node[0x606a14f09240] = 2;

		*node[0x606a14f09360] = *;

		*node[0x606a14f09300] = *;

		*node[0x606a14f092a0] = 4;

		*node[0x606a14f092d0] = 1;

		*node[0x606a14f09330] = 3;

		*node[0x606a14f093f0] = ;;

		*node[0x606a14f09420] = if;

		*node[0x606a14f09450] = op_no;

		*node[0x606a14f094e0] = >;

		*node[0x606a14f09480] = 14;

		*node[0x606a14f094b0] = 0;

		*node[0x606a14f09510] = ;;

		*node[0x606a14f095d0] = =;

		*node[0x606a14f09540] = 15;

		*node[0x606a14f095a0] = sqrt;

		*node[0x606a14f09570] = 14;

		*node[0x606a14f09600] = ;;

		*node[0x606a14f09810] = =;

		*node[0x606a14f09630] = 12;

		*node[0x606a14f097e0] = -;

		*node[0x606a14f096c0] = -;

		*node[0x606a14f09660] = 0;

		*node[0x606a14f09690] = 2;

		*node[0x606a14f097b0] = *;

		*node[0x606a14f09750] = /;

		*node[0x606a14f096f0] = 15;

		*node[0x606a14f09720] = 2;

		*node[0x606a14f09780] = 1;

		*node[0x606a14f09840] = ;;

		*node[0x606a14f09a50] = =;

		*node[0x606a14f09870] = 13;

		*node[0x606a14f09a20] = +;

		*node[0x606a14f09900] = -;

		*node[0x606a14f098a0] = 0;

		*node[0x606a14f098d0] = 2;

		*node[0x606a14f099f0] = *;

		*node[0x606a14f09990] = /;

		*node[0x606a14f09930] = 15;

		*node[0x606a14f09960] = 2;

		*node[0x606a14f099c0] = 1;

		*node[0x606a14f09a80] = ;;

		*node[0x606a14f09ab0] = print;

		*node[0x606a14f09ae0] = 11;

		*node[0x606a14f09b10] = ;;

		*node[0x606a14f09b40] = print;

		*node[0x606a14f09b70] = 12;

		*node[0x606a14f09ba0] = 13;

		*node[0x606a14f09bd0] = elseif;

		*node[0x606a14f09c00] = op_no;

		*node[0x606a14f09c90] = ==;

		*node[0x606a14f09c30] = 14;

		*node[0x606a14f09c60] = 0;

		*node[0x606a14f09cc0] = ;;

		*node[0x606a14f09e70] = =;

		*node[0x606a14f09cf0] = 10;

		*node[0x606a14f09e40] = -;

		*node[0x606a14f09d20] = 0;

		*node[0x606a14f09e10] = *;

		*node[0x606a14f09db0] = /;

		*node[0x606a14f09d50] = 2;

		*node[0x606a14f09d80] = 2;

		*node[0x606a14f09de0] = 1;

		*node[0x606a14f09ea0] = ;;

		*node[0x606a14f09ed0] = print;

		*node[0x606a14f09f00] = 8;

		*node[0x606a14f09f30] = ;;

		*node[0x606a14f09f60] = print;

		*node[0x606a14f09f90] = 10;

		*node[0x606a14f09fc0] = else;

		*node[0x606a14f09ff0] = op_no;

		*node[0x606a14f0a020] = ;;

		*node[0x606a14f0a050] = print;

		*node[0x606a14f0a080] = 7;

		*node[0x606a14f0a0b0] = ;;

		*node[0x606a14f0a0e0] = return;

		*node[0x606a14f0a110] = 0;

		*node[0x606a14f0a140] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe964297c0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x56a9158486d0] = ;;

		*node[0x56a915848750] = 0;

		*node[0x56a915848780] = ;;

		*node[0x56a9158487b0] = input;

		*node[0x56a9158487e0] = 1;

		*node[0x56a915848810] = 2;

		*node[0x56a915848840] = 3;

		*node[0x56a9158488a0] = ;;

		*node[0x56a915848900] = 1;

		*node[0x56a915848930] = 2;

		*node[0x56a915848960] = 3;

		*node[0x56a915848990] = ;;

		*node[0x56a915848a10] = 4;

		*node[0x56a915848a40] = 1;

		*node[0x56a915848a70] = 2;

		*node[0x56a915848aa0] = 3;

		*node[0x56a915848b00] = ;;

		*node[0x56a915848b30] = if;

		*node[0x56a915848b60] = op_no;

		*node[0x56a915848bf0] = ==;

		*node[0x56a915848b90] = 1;

		*node[0x56a915848bc0] = 0;

		*node[0x56a915848c20] = ;;

		*node[0x56a915848c80] = 2;

		*node[0x56a915848cb0] = 3;

		*node[0x56a915848ce0] = else;

		*node[0x56a915848d10] = op_no;

		*node[0x56a915848d40] = ;;

		*node[0x56a915848df0] = 1;

		*node[0x56a915848e20] = 2;

		*node[0x56a915848e50] = 3;

		*node[0x56a915848e80] = ;;

		*node[0x56a915848eb0] = return;

		*node[0x56a915848ee0] = 0;

		*node[0x56a915848f10] = ;;

		*node[0x56a915848f90] = 5;

		*node[0x56a915848ff0] = 1;

		*node[0x56a915849020] = 2;

		*node[0x56a915849050] = ;;

		*node[0x56a915849170] = =;

		*node[0x56a915849080] = 7;

		*node[0x56a915849140] = -;

		*node[0x56a9158490e0] = 0;

		*node[0x56a915849110] = 1;

		*node[0x56a9158491a0] = ;;

		*node[0x56a915849230] = =;

		*node[0x56a9158491d0] = 8;

		*node[0x56a915849200] = 1;

		*node[0x56a915849260] = ;;

		*node[0x56a915849340] = =;

		*node[0x56a915849290] = 9;

		*node[0x56a915849310] = 1000;

		*node[0x56a915849370] = ;;

		*node[0x56a9158493a0] = if;

		*node[0x56a9158493d0] = op_no;

		*node[0x56a915849460] = ==;

		*node[0x56a915849400] = 1;

		*node[0x56a915849430] = 0;

		*node[0x56a915849490] = ;;

		*node[0x56a9158494c0] = if;

		*node[0x56a9158494f0] = op_no;

		*node[0x56a915849580] = ==;

		*node[0x56a915849520] = 2;

		*node[0x56a915849550] = 0;

		*node[0x56a9158495b0] = ;;

		*node[0x56a9158495e0] = print;

		*node[0x56a915849610] = 9;

		*node[0x56a915849640] = else;

		*node[0x56a915849670] = op_no;

		*node[0x56a9158496a0] = ;;

		*node[0x56a9158496d0] = print;

		*node[0x56a915849700] = 7;

		*node[0x56a915849730] = else;

		*node[0x56a915849760] = op_no;

		*node[0x56a915849790] = ;;

		*node[0x56a9158498e0] = =;

		*node[0x56a9158497c0] = 10;

		*node[0x56a9158498b0] = -;

		*node[0x56a9158497f0] = 0;

		*node[0x56a915849880] = /;

		*node[0x56a915849820] = 2;

		*node[0x56a915849850] = 1;

		*node[0x56a915849910] = ;;

		*node[0x56a915849940] = print;

		*node[0x56a915849970] = 8;

		*node[0x56a9158499a0] = ;;

		*node[0x56a9158499d0] = print;

		*node[0x56a915849a00] = 10;

		*node[0x56a915849a30] = ;;

		*node[0x56a915849a60] = return;

		*node[0x56a915849a90] = 0;

		*node[0x56a915849ac0] = ;;

		*node[0x56a915849b40] = 6;

		*node[0x56a915849b70] = 1;

		*node[0x56a915849ba0] = 2;

		*node[0x56a915849bd0] = 3;

		*node[0x56a915849c30] = ;;

		*node[0x56a915849d20] = =;

		*node[0x56a915849c60] = 7;

		*node[0x56a915849cf0] = -;

		*node[0x56a915849c90] = 0;

		*node[0x56a915849cc0] = 1;

		*node[0x56a915849d50] = ;;

		*node[0x56a915849e30] = =;

		*node[0x56a915849d80] = 8;

		*node[0x56a915849e00] = 1;

		*node[0x56a915849e60] = ;;

		*node[0x56a915849ef0] = =;

		*node[0x56a915849e90] = 11;

		*node[0x56a915849ec0] = 2;

		*node[0x56a915849f20] = ;;

		*node[0x56a915849f50] = if;

		*node[0x56a915849f80] = op_no;

		*node[0x56a91584a010] = ==;

		*node[0x56a915849fb0] = 3;

		*node[0x56a915849fe0] = 0;

		*node[0x56a91584a040] = ;;

		*node[0x56a91584a0d0] = =;

		*node[0x56a91584a070] = 12;

		*node[0x56a91584a0a0] = 0;

		*node[0x56a91584a100] = ;;

		*node[0x56a91584a250] = =;

		*node[0x56a91584a130] = 13;

		*node[0x56a91584a220] = -;

		*node[0x56a91584a160] = 0;

		*node[0x56a91584a1f0] = /;

		*node[0x56a91584a190] = 2;

		*node[0x56a91584a1c0] = 1;

		*node[0x56a91584a280] = ;;

		*node[0x56a91584a2b0] = print;

		*node[0x56a91584a2e0] = 11;

		*node[0x56a91584a310] = ;;

		*node[0x56a91584a340] = print;

		*node[0x56a91584a370] = 12;

		*node[0x56a91584a3a0] = 13;

		*node[0x56a91584a3d0] = else;

		*node[0x56a91584a400] = op_no;

		*node[0x56a91584a430] = ;;

		*node[0x56a91584a6d0] = =;

		*node[0x56a91584a460] = 14;

		*node[0x56a91584a6a0] = -;

		*node[0x56a91584a580] = *;

		*node[0x56a91584a520] = 2;

		*node[0x56a91584a550] = 2;

		*node[0x56a91584a670] = *;

		*node[0x56a91584a610] = *;

		*node[0x56a91584a5b0] = 4;

		*node[0x56a91584a5e0] = 1;

		*node[0x56a91584a640] = 3;

		*node[0x56a91584a700] = ;;

		*node[0x56a91584a730] = if;

		*node[0x56a91584a760] = op_no;

		*node[0x56a91584a7f0] = >;

		*node[0x56a91584a790] = 14;

		*node[0x56a91584a7c0] = 0;

		*node[0x56a91584a820] = ;;

		*node[0x56a91584a8e0] = =;

		*node[0x56a91584a850] = 15;

		*node[0x56a91584a8b0] = sqrt;

		*node[0x56a91584a880] = 14;

		*node[0x56a91584a910] = ;;

		*node[0x56a91584ab20] = =;

		*node[0x56a91584a940] = 12;

		*node[0x56a91584aaf0] = /;

		*node[0x56a91584aa30] = -;

		*node[0x56a91584a9d0] = -;

		*node[0x56a91584a970] = 0;

		*node[0x56a91584a9a0] = 2;

		*node[0x56a91584aa00] = 15;

		*node[0x56a91584aac0] = *;

		*node[0x56a91584aa60] = 2;

		*node[0x56a91584aa90] = 1;

		*node[0x56a91584ab50] = ;;

		*node[0x56a91584ad60] = =;

		*node[0x56a91584ab80] = 13;

		*node[0x56a91584ad30] = /;

		*node[0x56a91584ac70] = +;

		*node[0x56a91584ac10] = -;

		*node[0x56a91584abb0] = 0;

		*node[0x56a91584abe0] = 2;

		*node[0x56a91584ac40] = 15;

		*node[0x56a91584ad00] = *;

		*node[0x56a91584aca0] = 2;

		*node[0x56a91584acd0] = 1;

		*node[0x56a91584ad90] = ;;

		*node[0x56a91584adc0] = print;

		*node[0x56a91584adf0] = 11;

		*node[0x56a91584ae20] = ;;

		*node[0x56a91584ae50] = print;

		*node[0x56a91584ae80] = 12;

		*node[0x56a91584aeb0] = 13;

		*node[0x56a91584aee0] = elseif;

		*node[0x56a91584af10] = op_no;

		*node[0x56a91584afa0] = ==;

		*node[0x56a91584af40] = 14;

		*node[0x56a91584af70] = 0;

		*node[0x56a91584afd0] = ;;

		*node[0x56a91584b180] = =;

		*node[0x56a91584b000] = 10;

		*node[0x56a91584b150] = -;

		*node[0x56a91584b030] = 0;

		*node[0x56a91584b120] = /;

		*node[0x56a91584b060] = 2;

		*node[0x56a91584b0f0] = *;

		*node[0x56a91584b090] = 2;

		*node[0x56a91584b0c0] = 1;

		*node[0x56a91584b1b0] = ;;

		*node[0x56a91584b1e0] = print;

		*node[0x56a91584b210] = 8;

		*node[0x56a91584b240] = ;;

		*node[0x56a91584b270] = print;

		*node[0x56a91584b2a0] = 10;

		*node[0x56a91584b2d0] = else;

		*node[0x56a91584b300] = op_no;

		*node[0x56a91584b330] = ;;

		*node[0x56a91584b360] = print;

		*node[0x56a91584b390] = 7;

		*node[0x56a91584b3c0] = ;;

		*node[0x56a91584b3f0] = return;

		*node[0x56a91584b420] = 0;

		*node[0x56a91584b450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe61b05950] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x607cdebae730] = ;;

		*node[0x607cdebae760] = 0;

		*node[0x607cdebae790] = ;;

		*node[0x607cdebae7c0] = input;

		*node[0x607cdebae7f0] = 1;

		*node[0x607cdebae820] = 2;

		*node[0x607cdebae850] = 3;

		*node[0x607cdebae880] = ;;

		*node[0x607cdebae8e0] = 1;

		*node[0x607cdebae910] = 2;

		*node[0x607cdebae940] = 3;

		*node[0x607cdebae970] = ;;

		*node[0x607cdebae9a0] = 4;

		*node[0x607cdebae9d0] = 1;

		*node[0x607cdebaea00] = 2;

		*node[0x607cdebaea30] = 3;

		*node[0x607cdebaea60] = ;;

		*node[0x607cdebaea90] = if;

		*node[0x607cdebaeac0] = op_no;

		*node[0x607cdebaeaf0] = ==;

		*node[0x607cdebaeb20] = 1;

		*node[0x607cdebaeb50] = 0;

		*node[0x607cdebaeb80] = ;;

		*node[0x607cdebaebe0] = 2;

		*node[0x607cdebaec10] = 3;

		*node[0x607cdebaec40] = else;

		*node[0x607cdebaec70] = op_no;

		*node[0x607cdebaeca0] = ;;

		*node[0x607cdebaed00] = 1;

		*node[0x607cdebaed30] = 2;

		*node[0x607cdebaed60] = 3;

		*node[0x607cdebaed90] = ;;

		*node[0x607cdebaedc0] = return;

		*node[0x607cdebaedf0] = 0;

		*node[0x607cdebaee20] = ;;

		*node[0x607cdebaee50] = 5;

		*node[0x607cdebaee80] = 1;

		*node[0x607cdebaeeb0] = 2;

		*node[0x607cdebaeee0] = ;;

		*node[0x607cdebaef10] = =;

		*node[0x607cdebaef40] = 7;

		*node[0x607cdebb1310] = -1;

		*node[0x607cdebaf000] = ;;

		*node[0x607cdebaf030] = =;

		*node[0x607cdebaf060] = 8;

		*node[0x607cdebaf090] = 1;

		*node[0x607cdebaf0c0] = ;;

		*node[0x607cdebaf0f0] = =;

		*node[0x607cdebaf120] = 9;

		*node[0x607cdebaf150] = 1000;

		*node[0x607cdebaf180] = ;;

		*node[0x607cdebaf1b0] = if;

		*node[0x607cdebaf1e0] = op_no;

		*node[0x607cdebaf210] = ==;

		*node[0x607cdebaf240] = 1;

		*node[0x607cdebaf270] = 0;

		*node[0x607cdebaf2a0] = ;;

		*node[0x607cdebaf2d0] = if;

		*node[0x607cdebaf300] = op_no;

		*node[0x607cdebaf330] = ==;

		*node[0x607cdebaf360] = 2;

		*node[0x607cdebaf390] = 0;

		*node[0x607cdebaf3c0] = ;;

		*node[0x607cdebaf3f0] = print;

		*node[0x607cdebaf420] = 9;

		*node[0x607cdebaf450] = else;

		*node[0x607cdebaf480] = op_no;

		*node[0x607cdebaf4b0] = ;;

		*node[0x607cdebaf4e0] = print;

		*node[0x607cdebaf510] = 7;

		*node[0x607cdebaf540] = else;

		*node[0x607cdebaf570] = op_no;

		*node[0x607cdebaf5a0] = ;;

		*node[0x607cdebaf5d0] = =;

		*node[0x607cdebaf600] = 10;

		*node[0x607cdebaf630] = -;

		*node[0x607cdebaf660] = 0;

		*node[0x607cdebaf690] = /;

		*node[0x607cdebaf6c0] = 2;

		*node[0x607cdebaf6f0] = 1;

		*node[0x607cdebaf720] = ;;

		*node[0x607cdebaf750] = print;

		*node[0x607cdebaf780] = 8;

		*node[0x607cdebaf7b0] = ;;

		*node[0x607cdebaf7e0] = print;

		*node[0x607cdebaf810] = 10;

		*node[0x607cdebaf840] = ;;

		*node[0x607cdebaf870] = return;

		*node[0x607cdebaf8a0] = 0;

		*node[0x607cdebaf8d0] = ;;

		*node[0x607cdebaf900] = 6;

		*node[0x607cdebaf930] = 1;

		*node[0x607cdebaf960] = 2;

		*node[0x607cdebaf990] = 3;

		*node[0x607cdebaf9c0] = ;;

		*node[0x607cdebaf9f0] = =;

		*node[0x607cdebafa20] = 7;

		*node[0x607cdebb1340] = -1;

		*node[0x607cdebafae0] = ;;

		*node[0x607cdebafb10] = =;

		*node[0x607cdebafb40] = 8;

		*node[0x607cdebafb70] = 1;

		*node[0x607cdebafba0] = ;;

		*node[0x607cdebafbd0] = =;

		*node[0x607cdebafc00] = 11;

		*node[0x607cdebafc30] = 2;

		*node[0x607cdebafc60] = ;;

		*node[0x607cdebafc90] = if;

		*node[0x607cdebafcc0] = op_no;

		*node[0x607cdebafcf0] = ==;

		*node[0x607cdebafd20] = 3;

		*node[0x607cdebafd50] = 0;

		*node[0x607cdebafd80] = ;;

		*node[0x607cdebafdb0] = =;

		*node[0x607cdebafde0] = 12;

		*node[0x607cdebafe10] = 0;

		*node[0x607cdebafe40] = ;;

		*node[0x607cdebafe70] = =;

		*node[0x607cdebafea0] = 13;

		*node[0x607cdebafed0] = -;

		*node[0x607cdebaff00] = 0;

		*node[0x607cdebaff30] = /;

		*node[0x607cdebaff60] = 2;

		*node[0x607cdebaff90] = 1;

		*node[0x607cdebaffc0] = ;;

		*node[0x607cdebafff0] = print;

		*node[0x607cdebb0020] = 11;

		*node[0x607cdebb0050] = ;;

		*node[0x607cdebb0080] = print;

		*node[0x607cdebb00b0] = 12;

		*node[0x607cdebb00e0] = 13;

		*node[0x607cdebb0110] = else;

		*node[0x607cdebb0140] = op_no;

		*node[0x607cdebb0170] = ;;

		*node[0x607cdebb01a0] = =;

		*node[0x607cdebb01d0] = 14;

		*node[0x607cdebb0200] = -;

		*node[0x607cdebb0230] = *;

		*node[0x607cdebb0260] = 2;

		*node[0x607cdebb0290] = 2;

		*node[0x607cdebb02c0] = *;

		*node[0x607cdebb02f0] = *;

		*node[0x607cdebb0320] = 4;

		*node[0x607cdebb0350] = 1;

		*node[0x607cdebb0380] = 3;

		*node[0x607cdebb03b0] = ;;

		*node[0x607cdebb03e0] = if;

		*node[0x607cdebb0410] = op_no;

		*node[0x607cdebb0440] = >;

		*node[0x607cdebb0470] = 14;

		*node[0x607cdebb04a0] = 0;

		*node[0x607cdebb04d0] = ;;

		*node[0x607cdebb0500] = =;

		*node[0x607cdebb0530] = 15;

		*node[0x607cdebb0560] = sqrt;

		*node[0x607cdebb0590] = 14;

		*node[0x607cdebb05c0] = ;;

		*node[0x607cdebb05f0] = =;

		*node[0x607cdebb0620] = 12;

		*node[0x607cdebb0650] = /;

		*node[0x607cdebb0680] = -;

		*node[0x607cdebb06b0] = -;

		*node[0x607cdebb06e0] = 0;

		*node[0x607cdebb0710] = 2;

		*node[0x607cdebb0740] = 15;

		*node[0x607cdebb0770] = *;

		*node[0x607cdebb07a0] = 2;

		*node[0x607cdebb07d0] = 1;

		*node[0x607cdebb0800] = ;;

		*node[0x607cdebb0830] = =;

		*node[0x607cdebb0860] = 13;

		*node[0x607cdebb0890] = /;

		*node[0x607cdebb08c0] = +;

		*node[0x607cdebb08f0] = -;

		*node[0x607cdebb0920] = 0;

		*node[0x607cdebb0950] = 2;

		*node[0x607cdebb0980] = 15;

		*node[0x607cdebb09b0] = *;

		*node[0x607cdebb09e0] = 2;

		*node[0x607cdebb0a10] = 1;

		*node[0x607cdebb0a40] = ;;

		*node[0x607cdebb0a70] = print;

		*node[0x607cdebb0aa0] = 11;

		*node[0x607cdebb0ad0] = ;;

		*node[0x607cdebb0b00] = print;

		*node[0x607cdebb0b30] = 12;

		*node[0x607cdebb0b60] = 13;

		*node[0x607cdebb0b90] = elseif;

		*node[0x607cdebb0bc0] = op_no;

		*node[0x607cdebb0bf0] = ==;

		*node[0x607cdebb0c20] = 14;

		*node[0x607cdebb0c50] = 0;

		*node[0x607cdebb0c80] = ;;

		*node[0x607cdebb0cb0] = =;

		*node[0x607cdebb0ce0] = 10;

		*node[0x607cdebb0d10] = -;

		*node[0x607cdebb0d40] = 0;

		*node[0x607cdebb0d70] = /;

		*node[0x607cdebb0da0] = 2;

		*node[0x607cdebb0dd0] = *;

		*node[0x607cdebb0e00] = 2;

		*node[0x607cdebb0e30] = 1;

		*node[0x607cdebb0e60] = ;;

		*node[0x607cdebb0e90] = print;

		*node[0x607cdebb0ec0] = 8;

		*node[0x607cdebb0ef0] = ;;

		*node[0x607cdebb0f20] = print;

		*node[0x607cdebb0f50] = 10;

		*node[0x607cdebb0f80] = else;

		*node[0x607cdebb0fb0] = op_no;

		*node[0x607cdebb0fe0] = ;;

		*node[0x607cdebb1010] = print;

		*node[0x607cdebb1040] = 7;

		*node[0x607cdebb1070] = ;;

		*node[0x607cdebb10a0] = return;

		*node[0x607cdebb10d0] = 0;

		*node[0x607cdebb1100] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcf4391b30] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5a29f75efc20] = ;;

		*node[0x5a29f75efca0] = 0;

		*node[0x5a29f75efcd0] = ;;

		*node[0x5a29f75efd00] = input;

		*node[0x5a29f75efd30] = 1;

		*node[0x5a29f75efd60] = ;;

		*node[0x5a29f75efdc0] = ;;

		*node[0x5a29f75efe40] = 2;

		*node[0x5a29f75efe70] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe99fef030] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x61351fc57c10] = ;;

		*node[0x61351fc57c90] = 0;

		*node[0x61351fc57cc0] = ;;

		*node[0x61351fc57cf0] = input;

		*node[0x61351fc57d20] = 1;

		*node[0x61351fc57d50] = ;;

		*node[0x61351fc57de0] = =;

		*node[0x61351fc57d80] = 2;

		*node[0x61351fc57db0] = 1;

		*node[0x61351fc57e10] = ;;

		*node[0x61351fc57e40] = if;

		*node[0x61351fc57e70] = op_no;

		*node[0x61351fc57fc0] = ||;

		*node[0x61351fc57f00] = <;

		*node[0x61351fc57ea0] = 1;

		*node[0x61351fc57ed0] = 0;

		*node[0x61351fc57f90] = ==;

		*node[0x61351fc57f30] = 1;

		*node[0x61351fc57f60] = 0;

		*node[0x61351fc57ff0] = ;;

		*node[0x61351fc58020] = print;

		*node[0x61351fc58050] = 2;

		*node[0x61351fc58080] = elseif;

		*node[0x61351fc580b0] = op_no;

		*node[0x61351fc58140] = ==;

		*node[0x61351fc580e0] = 1;

		*node[0x61351fc58110] = 1;

		*node[0x61351fc58170] = ;;

		*node[0x61351fc581a0] = print;

		*node[0x61351fc581d0] = 1;

		*node[0x61351fc58200] = else;

		*node[0x61351fc58230] = op_no;

		*node[0x61351fc58260] = ;;

		*node[0x61351fc58350] = =;

		*node[0x61351fc58290] = 3;

		*node[0x61351fc58320] = 1;

		*node[0x61351fc58380] = ;;

		*node[0x61351fc583b0] = print;

		*node[0x61351fc583e0] = 3;

		*node[0x61351fc58410] = ;;

		*node[0x61351fc58490] = 4;

		*node[0x61351fc584c0] = 1;

		*node[0x61351fc584f0] = ;;

		*node[0x61351fc58520] = if;

		*node[0x61351fc58550] = op_no;

		*node[0x61351fc585e0] = ==;

		*node[0x61351fc58580] = 1;

		*node[0x61351fc585b0] = 1;

		*node[0x61351fc58610] = ;;

		*node[0x61351fc58640] = return;

		*node[0x61351fc58670] = 1;

		*node[0x61351fc586a0] = ;;

		*node[0x61351fc58790] = =;

		*node[0x61351fc586d0] = 5;

		*node[0x61351fc58760] = -;

		*node[0x61351fc58700] = 1;

		*node[0x61351fc58730] = 1;

		*node[0x61351fc587c0] = ;;

		*node[0x61351fc58910] = =;

		*node[0x61351fc587f0] = 1;

		*node[0x61351fc588e0] = *;

		*node[0x61351fc58820] = 1;

		*node[0x61351fc588b0] = 5;

		*node[0x61351fc58940] = ;;

		*node[0x61351fc58970] = return;

		*node[0x61351fc589a0] = 1;

		*node[0x61351fc589d0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff44232080] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6074d1381c10] = ;;

		*node[0x6074d1381c90] = 0;

		*node[0x6074d1381cc0] = ;;

		*node[0x6074d1381cf0] = input;

		*node[0x6074d1381d20] = 1;

		*node[0x6074d1381d50] = ;;

		*node[0x6074d1381de0] = =;

		*node[0x6074d1381d80] = 2;

		*node[0x6074d1381db0] = 1;

		*node[0x6074d1381e10] = ;;

		*node[0x6074d1381e40] = if;

		*node[0x6074d1381e70] = op_no;

		*node[0x6074d1381fc0] = ||;

		*node[0x6074d1381f00] = <;

		*node[0x6074d1381ea0] = 1;

		*node[0x6074d1381ed0] = 0;

		*node[0x6074d1381f90] = ==;

		*node[0x6074d1381f30] = 1;

		*node[0x6074d1381f60] = 0;

		*node[0x6074d1381ff0] = ;;

		*node[0x6074d1382020] = print;

		*node[0x6074d1382050] = 2;

		*node[0x6074d1382080] = elseif;

		*node[0x6074d13820b0] = op_no;

		*node[0x6074d1382140] = ==;

		*node[0x6074d13820e0] = 1;

		*node[0x6074d1382110] = 1;

		*node[0x6074d1382170] = ;;

		*node[0x6074d13821a0] = print;

		*node[0x6074d13821d0] = 1;

		*node[0x6074d1382200] = else;

		*node[0x6074d1382230] = op_no;

		*node[0x6074d1382260] = ;;

		*node[0x6074d1382350] = =;

		*node[0x6074d1382290] = 3;

		*node[0x6074d1382320] = 1;

		*node[0x6074d1382380] = ;;

		*node[0x6074d13823b0] = print;

		*node[0x6074d13823e0] = 3;

		*node[0x6074d1382410] = ;;

		*node[0x6074d1382490] = 4;

		*node[0x6074d13824c0] = 5;

		*node[0x6074d13824f0] = ;;

		*node[0x6074d1382520] = if;

		*node[0x6074d1382550] = op_no;

		*node[0x6074d13825e0] = ==;

		*node[0x6074d1382580] = 5;

		*node[0x6074d13825b0] = 1;

		*node[0x6074d1382610] = ;;

		*node[0x6074d1382640] = return;

		*node[0x6074d1382670] = 5;

		*node[0x6074d13826a0] = ;;

		*node[0x6074d1382790] = =;

		*node[0x6074d13826d0] = 6;

		*node[0x6074d1382760] = -;

		*node[0x6074d1382700] = 5;

		*node[0x6074d1382730] = 1;

		*node[0x6074d13827c0] = ;;

		*node[0x6074d1382910] = =;

		*node[0x6074d13827f0] = 5;

		*node[0x6074d13828e0] = *;

		*node[0x6074d1382820] = 5;

		*node[0x6074d13828b0] = 6;

		*node[0x6074d1382940] = ;;

		*node[0x6074d1382970] = return;

		*node[0x6074d13829a0] = 5;

		*node[0x6074d13829d0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffddb08e850] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5db17648ec10] = ;;

		*node[0x5db17648ec90] = 0;

		*node[0x5db17648ecc0] = ;;

		*node[0x5db17648ecf0] = input;

		*node[0x5db17648ed20] = 1;

		*node[0x5db17648ed50] = ;;

		*node[0x5db17648ede0] = =;

		*node[0x5db17648ed80] = 2;

		*node[0x5db17648edb0] = 1;

		*node[0x5db17648ee10] = ;;

		*node[0x5db17648ee40] = if;

		*node[0x5db17648ee70] = op_no;

		*node[0x5db17648efc0] = ||;

		*node[0x5db17648ef00] = <;

		*node[0x5db17648eea0] = 1;

		*node[0x5db17648eed0] = 0;

		*node[0x5db17648ef90] = ==;

		*node[0x5db17648ef30] = 1;

		*node[0x5db17648ef60] = 0;

		*node[0x5db17648eff0] = ;;

		*node[0x5db17648f020] = print;

		*node[0x5db17648f050] = 2;

		*node[0x5db17648f080] = elseif;

		*node[0x5db17648f0b0] = op_no;

		*node[0x5db17648f140] = ==;

		*node[0x5db17648f0e0] = 1;

		*node[0x5db17648f110] = 1;

		*node[0x5db17648f170] = ;;

		*node[0x5db17648f1a0] = print;

		*node[0x5db17648f1d0] = 1;

		*node[0x5db17648f200] = else;

		*node[0x5db17648f230] = op_no;

		*node[0x5db17648f260] = ;;

		*node[0x5db17648f350] = =;

		*node[0x5db17648f290] = 3;

		*node[0x5db17648f320] = 1;

		*node[0x5db17648f380] = ;;

		*node[0x5db17648f3b0] = print;

		*node[0x5db17648f3e0] = 3;

		*node[0x5db17648f410] = ;;

		*node[0x5db17648f490] = 4;

		*node[0x5db17648f4c0] = 1;

		*node[0x5db17648f4f0] = ;;

		*node[0x5db17648f520] = if;

		*node[0x5db17648f550] = op_no;

		*node[0x5db17648f5e0] = ==;

		*node[0x5db17648f580] = 1;

		*node[0x5db17648f5b0] = 1;

		*node[0x5db17648f610] = ;;

		*node[0x5db17648f640] = return;

		*node[0x5db17648f670] = 1;

		*node[0x5db17648f6a0] = ;;

		*node[0x5db17648f790] = =;

		*node[0x5db17648f6d0] = 5;

		*node[0x5db17648f760] = -;

		*node[0x5db17648f700] = 1;

		*node[0x5db17648f730] = 1;

		*node[0x5db17648f7c0] = ;;

		*node[0x5db17648f910] = =;

		*node[0x5db17648f7f0] = 1;

		*node[0x5db17648f8e0] = *;

		*node[0x5db17648f820] = 1;

		*node[0x5db17648f8b0] = 5;

		*node[0x5db17648f940] = ;;

		*node[0x5db17648f970] = return;

		*node[0x5db17648f9a0] = 1;

		*node[0x5db17648f9d0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffee9349a50] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5deb51d70c20] = ;;

		*node[0x5deb51d70ca0] = 0;

		*node[0x5deb51d70cd0] = ;;

		*node[0x5deb51d70d00] = input;

		*node[0x5deb51d70d30] = 1;

		*node[0x5deb51d70d60] = ;;

		*node[0x5deb51d70dc0] = ;;

		*node[0x5deb51d70e40] = 2;

		*node[0x5deb51d70e70] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffceadbb830] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd557cab70] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe5be709e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x589349a4bc20] = ;;

		*node[0x589349a4bca0] = 0;

		*node[0x589349a4bcd0] = ;;

		*node[0x589349a4bd00] = input;

		*node[0x589349a4bd30] = 1;

		*node[0x589349a4bd60] = ;;

		*node[0x589349a4bdc0] = ;;

		*node[0x589349a4be40] = 2;

		*node[0x589349a4be70] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe56a1cde0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5a2c0868eef0] = ;;

		*node[0x5a2c0868ef70] = 0;

		*node[0x5a2c0868efa0] = ;;

		*node[0x5a2c0868efd0] = input;

		*node[0x5a2c0868f000] = 1;

		*node[0x5a2c0868f030] = ;;

		*node[0x5a2c0868f0c0] = =;

		*node[0x5a2c0868f060] = 2;

		*node[0x5a2c0868f090] = 1;

		*node[0x5a2c0868f0f0] = ;;

		*node[0x5a2c0868f120] = if;

		*node[0x5a2c0868f150] = op_no;

		*node[0x5a2c0868f2a0] = ||;

		*node[0x5a2c0868f1e0] = <;

		*node[0x5a2c0868f180] = 1;

		*node[0x5a2c0868f1b0] = 0;

		*node[0x5a2c0868f270] = ==;

		*node[0x5a2c0868f210] = 1;

		*node[0x5a2c0868f240] = 0;

		*node[0x5a2c0868f2d0] = ;;

		*node[0x5a2c0868f300] = print;

		*node[0x5a2c0868f330] = 2;

		*node[0x5a2c0868f360] = else;

		*node[0x5a2c0868f390] = op_no;

		*node[0x5a2c0868f3c0] = ;;

		*node[0x5a2c0868f4b0] = =;

		*node[0x5a2c0868f3f0] = 3;

		*node[0x5a2c0868f480] = 1;

		*node[0x5a2c0868f4e0] = ;;

		*node[0x5a2c0868f510] = print;

		*node[0x5a2c0868f540] = 3;

		*node[0x5a2c0868f570] = ;;

		*node[0x5a2c0868f680] = =;

		*node[0x5a2c0868f5a0] = 3;

		*node[0x5a2c0868f650] = 1;

		*node[0x5a2c0868f6b0] = ;;

		*node[0x5a2c0868f6e0] = print;

		*node[0x5a2c0868f710] = 3;

		*node[0x5a2c0868f740] = ;;

		*node[0x5a2c0868f7c0] = 5;

		*node[0x5a2c0868f7f0] = 1;

		*node[0x5a2c0868f820] = ;;

		*node[0x5a2c0868f850] = if;

		*node[0x5a2c0868f880] = op_no;

		*node[0x5a2c0868f9d0] = ||;

		*node[0x5a2c0868f910] = ==;

		*node[0x5a2c0868f8b0] = 1;

		*node[0x5a2c0868f8e0] = 2;

		*node[0x5a2c0868f9a0] = ==;

		*node[0x5a2c0868f940] = 1;

		*node[0x5a2c0868f970] = 1;

		*node[0x5a2c0868fa00] = ;;

		*node[0x5a2c0868fa30] = return;

		*node[0x5a2c0868fa60] = 1;

		*node[0x5a2c0868fa90] = ;;

		*node[0x5a2c0868fb80] = =;

		*node[0x5a2c0868fac0] = 6;

		*node[0x5a2c0868fb50] = -;

		*node[0x5a2c0868faf0] = 1;

		*node[0x5a2c0868fb20] = 1;

		*node[0x5a2c0868fbb0] = ;;

		*node[0x5a2c0868fcd0] = =;

		*node[0x5a2c0868fbe0] = 7;

		*node[0x5a2c0868fca0] = -;

		*node[0x5a2c0868fc40] = 1;

		*node[0x5a2c0868fc70] = 2;

		*node[0x5a2c0868fd00] = ;;

		*node[0x5a2c0868fdc0] = =;

		*node[0x5a2c0868fd30] = 6;

		*node[0x5a2c0868fd90] = 6;

		*node[0x5a2c0868fdf0] = ;;

		*node[0x5a2c0868feb0] = =;

		*node[0x5a2c0868fe20] = 7;

		*node[0x5a2c0868fe80] = 7;

		*node[0x5a2c0868fee0] = ;;

		*node[0x5a2c0868ff10] = return;

		*node[0x5a2c0868fff0] = +;

		*node[0x5a2c0868ff40] = 7;

		*node[0x5a2c0868ffc0] = 8;

		*node[0x5a2c08690020] = ;;

		*node[0x5a2c086900a0] = 4;

		*node[0x5a2c08690100] = 1;

		*node[0x5a2c08690130] = ;;

		*node[0x5a2c08690160] = if;

		*node[0x5a2c08690190] = op_no;

		*node[0x5a2c08690220] = ==;

		*node[0x5a2c086901c0] = 1;

		*node[0x5a2c086901f0] = 1;

		*node[0x5a2c08690250] = ;;

		*node[0x5a2c08690280] = return;

		*node[0x5a2c086902b0] = 1;

		*node[0x5a2c086902e0] = ;;

		*node[0x5a2c086903d0] = =;

		*node[0x5a2c08690310] = 6;

		*node[0x5a2c086903a0] = -;

		*node[0x5a2c08690340] = 1;

		*node[0x5a2c08690370] = 1;

		*node[0x5a2c08690400] = ;;

		*node[0x5a2c08690550] = =;

		*node[0x5a2c08690430] = 1;

		*node[0x5a2c08690520] = *;

		*node[0x5a2c08690460] = 1;

		*node[0x5a2c086904f0] = 6;

		*node[0x5a2c08690580] = ;;

		*node[0x5a2c086905b0] = return;

		*node[0x5a2c086905e0] = 1;

		*node[0x5a2c08690610] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffdac37cd80] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x646941e3ec20] = ;;

		*node[0x646941e3eca0] = 0;

		*node[0x646941e3ecd0] = ;;

		*node[0x646941e3ed00] = input;

		*node[0x646941e3ed30] = 1;

		*node[0x646941e3ed60] = ;;

		*node[0x646941e3edc0] = ;;

		*node[0x646941e3ee40] = 2;

		*node[0x646941e3ee70] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffd5edf810] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x57b767f66c20] = ;;

		*node[0x57b767f66ca0] = 0;

		*node[0x57b767f66cd0] = ;;

		*node[0x57b767f66d00] = input;

		*node[0x57b767f66d30] = 1;

		*node[0x57b767f66d60] = ;;

		*node[0x57b767f66dc0] = ;;

		*node[0x57b767f66e40] = 2;

		*node[0x57b767f66e70] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc232417a0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x557288dfaef0] = ;;

		*node[0x557288dfaf70] = 0;

		*node[0x557288dfafa0] = ;;

		*node[0x557288dfafd0] = input;

		*node[0x557288dfb000] = 1;

		*node[0x557288dfb030] = ;;

		*node[0x557288dfb0c0] = =;

		*node[0x557288dfb060] = 2;

		*node[0x557288dfb090] = 1;

		*node[0x557288dfb0f0] = ;;

		*node[0x557288dfb120] = if;

		*node[0x557288dfb150] = op_no;

		*node[0x557288dfb2a0] = ||;

		*node[0x557288dfb1e0] = <;

		*node[0x557288dfb180] = 1;

		*node[0x557288dfb1b0] = 0;

		*node[0x557288dfb270] = ==;

		*node[0x557288dfb210] = 1;

		*node[0x557288dfb240] = 0;

		*node[0x557288dfb2d0] = ;;

		*node[0x557288dfb300] = print;

		*node[0x557288dfb330] = 2;

		*node[0x557288dfb360] = else;

		*node[0x557288dfb390] = op_no;

		*node[0x557288dfb3c0] = ;;

		*node[0x557288dfb4b0] = =;

		*node[0x557288dfb3f0] = 3;

		*node[0x557288dfb480] = 1;

		*node[0x557288dfb4e0] = ;;

		*node[0x557288dfb510] = print;

		*node[0x557288dfb540] = 3;

		*node[0x557288dfb570] = ;;

		*node[0x557288dfb680] = =;

		*node[0x557288dfb5a0] = 3;

		*node[0x557288dfb650] = 1;

		*node[0x557288dfb6b0] = ;;

		*node[0x557288dfb6e0] = print;

		*node[0x557288dfb710] = 3;

		*node[0x557288dfb740] = ;;

		*node[0x557288dfb7c0] = 5;

		*node[0x557288dfb7f0] = 1;

		*node[0x557288dfb820] = ;;

		*node[0x557288dfb850] = if;

		*node[0x557288dfb880] = op_no;

		*node[0x557288dfb9d0] = ||;

		*node[0x557288dfb910] = ==;

		*node[0x557288dfb8b0] = 1;

		*node[0x557288dfb8e0] = 2;

		*node[0x557288dfb9a0] = ==;

		*node[0x557288dfb940] = 1;

		*node[0x557288dfb970] = 1;

		*node[0x557288dfba00] = ;;

		*node[0x557288dfba30] = return;

		*node[0x557288dfba60] = 1;

		*node[0x557288dfba90] = ;;

		*node[0x557288dfbb80] = =;

		*node[0x557288dfbac0] = 6;

		*node[0x557288dfbb50] = -;

		*node[0x557288dfbaf0] = 1;

		*node[0x557288dfbb20] = 1;

		*node[0x557288dfbbb0] = ;;

		*node[0x557288dfbcd0] = =;

		*node[0x557288dfbbe0] = 7;

		*node[0x557288dfbca0] = -;

		*node[0x557288dfbc40] = 1;

		*node[0x557288dfbc70] = 2;

		*node[0x557288dfbd00] = ;;

		*node[0x557288dfbdc0] = =;

		*node[0x557288dfbd30] = 6;

		*node[0x557288dfbd90] = 6;

		*node[0x557288dfbdf0] = ;;

		*node[0x557288dfbeb0] = =;

		*node[0x557288dfbe20] = 7;

		*node[0x557288dfbe80] = 7;

		*node[0x557288dfbee0] = ;;

		*node[0x557288dfbf10] = return;

		*node[0x557288dfbfa0] = +;

		*node[0x557288dfbf40] = 7;

		*node[0x557288dfbf70] = 6;

		*node[0x557288dfbfd0] = ;;

		*node[0x557288dfc050] = 4;

		*node[0x557288dfc0b0] = 1;

		*node[0x557288dfc0e0] = ;;

		*node[0x557288dfc110] = if;

		*node[0x557288dfc140] = op_no;

		*node[0x557288dfc1d0] = ==;

		*node[0x557288dfc170] = 1;

		*node[0x557288dfc1a0] = 1;

		*node[0x557288dfc200] = ;;

		*node[0x557288dfc230] = return;

		*node[0x557288dfc260] = 1;

		*node[0x557288dfc290] = ;;

		*node[0x557288dfc380] = =;

		*node[0x557288dfc2c0] = 6;

		*node[0x557288dfc350] = -;

		*node[0x557288dfc2f0] = 1;

		*node[0x557288dfc320] = 1;

		*node[0x557288dfc3b0] = ;;

		*node[0x557288dfc500] = =;

		*node[0x557288dfc3e0] = 1;

		*node[0x557288dfc4d0] = *;

		*node[0x557288dfc410] = 1;

		*node[0x557288dfc4a0] = 6;

		*node[0x557288dfc530] = ;;

		*node[0x557288dfc560] = return;

		*node[0x557288dfc590] = 1;

		*node[0x557288dfc5c0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd7a1c4bc0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd7a1c4bc0] "tree" called from ../tree/tree.cpp(322) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd0bf03dc0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd0bf03dc0] "tree" called from ../tree/tree.cpp(322) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffecd35cb80] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffecd35cb80] "tree" called from ../tree/tree.cpp(322) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc40b1ce30] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc40b1ce30] "tree" called from ../tree/tree.cpp(322) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc9e4d3060] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc9e4d3060] "tree" called from ../tree/tree.cpp(322) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffcd09e7920] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffcd09e7920] "tree" called from ../tree/tree.cpp(322) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffe6fdbc2c0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffe6fdbc2c0] "tree" called from ../tree/tree.cpp(322) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc645ddef0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x629f1b974ae0] = ;;

		*node[0x629f1b974b60] = 0;

		*node[0x629f1b974b90] = ;;

		*node[0x629f1b974bc0] = input;

		*node[0x629f1b974bf0] = 0;

		*node[0x629f1b974c20] = 1;

		*node[0x629f1b974c50] = 2;

		*node[0x629f1b974cb0] = ;;

		*node[0x629f1b974d10] = 0;

		*node[0x629f1b974d40] = 1;

		*node[0x629f1b974d70] = 2;

		*node[0x629f1b974da0] = ;;

		*node[0x629f1b974e20] = 2;

		*node[0x629f1b974e50] = 0;

		*node[0x629f1b974e80] = 1;

		*node[0x629f1b974eb0] = 2;

		*node[0x629f1b974f10] = ;;

		*node[0x629f1b974f40] = if;

		*node[0x629f1b974f70] = op_no;

		*node[0x629f1b975000] = ==;

		*node[0x629f1b974fa0] = 0;

		*node[0x629f1b974fd0] = 0;

		*node[0x629f1b975030] = ;;

		*node[0x629f1b975090] = 1;

		*node[0x629f1b9750c0] = 2;

		*node[0x629f1b9750f0] = else;

		*node[0x629f1b975120] = op_no;

		*node[0x629f1b975150] = ;;

		*node[0x629f1b975200] = 0;

		*node[0x629f1b975230] = 1;

		*node[0x629f1b975260] = 2;

		*node[0x629f1b975290] = ;;

		*node[0x629f1b9752c0] = return;

		*node[0x629f1b9752f0] = 0;

		*node[0x629f1b975320] = ;;

		*node[0x629f1b9753a0] = 3;

		*node[0x629f1b975400] = 0;

		*node[0x629f1b975430] = 1;

		*node[0x629f1b975460] = ;;

		*node[0x629f1b975580] = =;

		*node[0x629f1b975490] = 2;

		*node[0x629f1b975550] = -;

		*node[0x629f1b9754f0] = 0;

		*node[0x629f1b975520] = 1;

		*node[0x629f1b9755b0] = ;;

		*node[0x629f1b975640] = =;

		*node[0x629f1b9755e0] = 3;

		*node[0x629f1b975610] = 1;

		*node[0x629f1b975670] = ;;

		*node[0x629f1b975750] = =;

		*node[0x629f1b9756a0] = 4;

		*node[0x629f1b975720] = 1000;

		*node[0x629f1b975780] = ;;

		*node[0x629f1b9757b0] = if;

		*node[0x629f1b9757e0] = op_no;

		*node[0x629f1b975870] = ==;

		*node[0x629f1b975810] = 0;

		*node[0x629f1b975840] = 0;

		*node[0x629f1b9758a0] = ;;

		*node[0x629f1b9758d0] = if;

		*node[0x629f1b975900] = op_no;

		*node[0x629f1b975990] = ==;

		*node[0x629f1b975930] = 1;

		*node[0x629f1b975960] = 0;

		*node[0x629f1b9759c0] = ;;

		*node[0x629f1b9759f0] = print;

		*node[0x629f1b975a20] = 4;

		*node[0x629f1b975a50] = else;

		*node[0x629f1b975a80] = op_no;

		*node[0x629f1b975ab0] = ;;

		*node[0x629f1b975ae0] = print;

		*node[0x629f1b975b10] = 2;

		*node[0x629f1b975b40] = else;

		*node[0x629f1b975b70] = op_no;

		*node[0x629f1b975ba0] = ;;

		*node[0x629f1b975cf0] = =;

		*node[0x629f1b975bd0] = 5;

		*node[0x629f1b975cc0] = -;

		*node[0x629f1b975c00] = 0;

		*node[0x629f1b975c90] = /;

		*node[0x629f1b975c30] = 1;

		*node[0x629f1b975c60] = 0;

		*node[0x629f1b975d20] = ;;

		*node[0x629f1b975d50] = print;

		*node[0x629f1b975d80] = 3;

		*node[0x629f1b975db0] = ;;

		*node[0x629f1b975de0] = print;

		*node[0x629f1b975e10] = 5;

		*node[0x629f1b975e40] = ;;

		*node[0x629f1b975e70] = return;

		*node[0x629f1b975ea0] = 0;

		*node[0x629f1b975ed0] = ;;

		*node[0x629f1b975f50] = 5;

		*node[0x629f1b975f80] = 0;

		*node[0x629f1b975fb0] = 1;

		*node[0x629f1b975fe0] = 2;

		*node[0x629f1b976040] = ;;

		*node[0x629f1b976130] = =;

		*node[0x629f1b976070] = 3;

		*node[0x629f1b976100] = -;

		*node[0x629f1b9760a0] = 0;

		*node[0x629f1b9760d0] = 1;

		*node[0x629f1b976160] = ;;

		*node[0x629f1b976240] = =;

		*node[0x629f1b976190] = 4;

		*node[0x629f1b976210] = 1;

		*node[0x629f1b976270] = ;;

		*node[0x629f1b976300] = =;

		*node[0x629f1b9762a0] = 5;

		*node[0x629f1b9762d0] = 2;

		*node[0x629f1b976330] = ;;

		*node[0x629f1b976360] = if;

		*node[0x629f1b976390] = op_no;

		*node[0x629f1b976420] = ==;

		*node[0x629f1b9763c0] = 2;

		*node[0x629f1b9763f0] = 0;

		*node[0x629f1b976450] = ;;

		*node[0x629f1b9764e0] = =;

		*node[0x629f1b976480] = 6;

		*node[0x629f1b9764b0] = 0;

		*node[0x629f1b976510] = ;;

		*node[0x629f1b976660] = =;

		*node[0x629f1b976540] = 7;

		*node[0x629f1b976630] = -;

		*node[0x629f1b976570] = 0;

		*node[0x629f1b976600] = /;

		*node[0x629f1b9765a0] = 1;

		*node[0x629f1b9765d0] = 0;

		*node[0x629f1b976690] = ;;

		*node[0x629f1b9766c0] = print;

		*node[0x629f1b9766f0] = 5;

		*node[0x629f1b976720] = ;;

		*node[0x629f1b976750] = print;

		*node[0x629f1b976780] = 6;

		*node[0x629f1b9767b0] = 7;

		*node[0x629f1b9767e0] = else;

		*node[0x629f1b976810] = op_no;

		*node[0x629f1b976840] = ;;

		*node[0x629f1b976ae0] = =;

		*node[0x629f1b976870] = 8;

		*node[0x629f1b976ab0] = -;

		*node[0x629f1b976990] = *;

		*node[0x629f1b976930] = 1;

		*node[0x629f1b976960] = 1;

		*node[0x629f1b976a80] = *;

		*node[0x629f1b976a20] = *;

		*node[0x629f1b9769c0] = 4;

		*node[0x629f1b9769f0] = 0;

		*node[0x629f1b976a50] = 2;

		*node[0x629f1b976b10] = ;;

		*node[0x629f1b976b40] = if;

		*node[0x629f1b976b70] = op_no;

		*node[0x629f1b976c00] = >;

		*node[0x629f1b976ba0] = 8;

		*node[0x629f1b976bd0] = 0;

		*node[0x629f1b976c30] = ;;

		*node[0x629f1b976cf0] = =;

		*node[0x629f1b976c60] = 9;

		*node[0x629f1b976cc0] = sqrt;

		*node[0x629f1b976c90] = 8;

		*node[0x629f1b976d20] = ;;

		*node[0x629f1b976f30] = =;

		*node[0x629f1b976d50] = 6;

		*node[0x629f1b976f00] = /;

		*node[0x629f1b976e40] = -;

		*node[0x629f1b976de0] = -;

		*node[0x629f1b976d80] = 0;

		*node[0x629f1b976db0] = 1;

		*node[0x629f1b976e10] = 9;

		*node[0x629f1b976ed0] = *;

		*node[0x629f1b976e70] = 2;

		*node[0x629f1b976ea0] = 0;

		*node[0x629f1b976f60] = ;;

		*node[0x629f1b977170] = =;

		*node[0x629f1b976f90] = 7;

		*node[0x629f1b977140] = /;

		*node[0x629f1b977080] = +;

		*node[0x629f1b977020] = -;

		*node[0x629f1b976fc0] = 0;

		*node[0x629f1b976ff0] = 1;

		*node[0x629f1b977050] = 9;

		*node[0x629f1b977110] = *;

		*node[0x629f1b9770b0] = 2;

		*node[0x629f1b9770e0] = 0;

		*node[0x629f1b9771a0] = ;;

		*node[0x629f1b9771d0] = print;

		*node[0x629f1b977200] = 5;

		*node[0x629f1b977230] = ;;

		*node[0x629f1b977260] = print;

		*node[0x629f1b977290] = 6;

		*node[0x629f1b9772c0] = 7;

		*node[0x629f1b9772f0] = elseif;

		*node[0x629f1b977320] = op_no;

		*node[0x629f1b9773b0] = ==;

		*node[0x629f1b977350] = 8;

		*node[0x629f1b977380] = 0;

		*node[0x629f1b9773e0] = ;;

		*node[0x629f1b977590] = =;

		*node[0x629f1b977410] = 10;

		*node[0x629f1b977560] = -;

		*node[0x629f1b977440] = 0;

		*node[0x629f1b977530] = /;

		*node[0x629f1b977470] = 1;

		*node[0x629f1b977500] = *;

		*node[0x629f1b9774a0] = 2;

		*node[0x629f1b9774d0] = 0;

		*node[0x629f1b9775c0] = ;;

		*node[0x629f1b9775f0] = print;

		*node[0x629f1b977620] = 4;

		*node[0x629f1b977650] = ;;

		*node[0x629f1b977680] = print;

		*node[0x629f1b9776b0] = 10;

		*node[0x629f1b9776e0] = else;

		*node[0x629f1b977710] = op_no;

		*node[0x629f1b977740] = ;;

		*node[0x629f1b977770] = print;

		*node[0x629f1b9777a0] = 3;

		*node[0x629f1b9777d0] = ;;

		*node[0x629f1b977800] = return;

		*node[0x629f1b977830] = 0;

		*node[0x629f1b977860] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe11e35800] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x55f2071396d0] = ;;

		*node[0x55f207139750] = 0;

		*node[0x55f207139780] = ;;

		*node[0x55f2071397b0] = input;

		*node[0x55f2071397e0] = 0;

		*node[0x55f207139810] = 1;

		*node[0x55f207139840] = 2;

		*node[0x55f2071398a0] = ;;

		*node[0x55f207139900] = 0;

		*node[0x55f207139930] = 1;

		*node[0x55f207139960] = 2;

		*node[0x55f207139990] = ;;

		*node[0x55f207139a10] = 1;

		*node[0x55f207139a40] = 0;

		*node[0x55f207139a70] = 1;

		*node[0x55f207139aa0] = 2;

		*node[0x55f207139b00] = ;;

		*node[0x55f207139b30] = if;

		*node[0x55f207139b60] = op_no;

		*node[0x55f207139bf0] = ==;

		*node[0x55f207139b90] = 0;

		*node[0x55f207139bc0] = 0;

		*node[0x55f207139c20] = ;;

		*node[0x55f207139c80] = 1;

		*node[0x55f207139cb0] = 2;

		*node[0x55f207139ce0] = else;

		*node[0x55f207139d10] = op_no;

		*node[0x55f207139d40] = ;;

		*node[0x55f207139df0] = 0;

		*node[0x55f207139e20] = 1;

		*node[0x55f207139e50] = 2;

		*node[0x55f207139e80] = ;;

		*node[0x55f207139eb0] = return;

		*node[0x55f207139ee0] = 0;

		*node[0x55f207139f10] = ;;

		*node[0x55f207139f90] = 2;

		*node[0x55f207139ff0] = 0;

		*node[0x55f20713a020] = 1;

		*node[0x55f20713a050] = ;;

		*node[0x55f20713a170] = =;

		*node[0x55f20713a080] = 2;

		*node[0x55f20713a140] = -;

		*node[0x55f20713a0e0] = 0;

		*node[0x55f20713a110] = 1;

		*node[0x55f20713a1a0] = ;;

		*node[0x55f20713a230] = =;

		*node[0x55f20713a1d0] = 3;

		*node[0x55f20713a200] = 1;

		*node[0x55f20713a260] = ;;

		*node[0x55f20713a340] = =;

		*node[0x55f20713a290] = 4;

		*node[0x55f20713a310] = 1000;

		*node[0x55f20713a370] = ;;

		*node[0x55f20713a3a0] = if;

		*node[0x55f20713a3d0] = op_no;

		*node[0x55f20713a460] = ==;

		*node[0x55f20713a400] = 0;

		*node[0x55f20713a430] = 0;

		*node[0x55f20713a490] = ;;

		*node[0x55f20713a4c0] = if;

		*node[0x55f20713a4f0] = op_no;

		*node[0x55f20713a580] = ==;

		*node[0x55f20713a520] = 1;

		*node[0x55f20713a550] = 0;

		*node[0x55f20713a5b0] = ;;

		*node[0x55f20713a5e0] = print;

		*node[0x55f20713a610] = 4;

		*node[0x55f20713a640] = else;

		*node[0x55f20713a670] = op_no;

		*node[0x55f20713a6a0] = ;;

		*node[0x55f20713a6d0] = print;

		*node[0x55f20713a700] = 2;

		*node[0x55f20713a730] = else;

		*node[0x55f20713a760] = op_no;

		*node[0x55f20713a790] = ;;

		*node[0x55f20713a8e0] = =;

		*node[0x55f20713a7c0] = 5;

		*node[0x55f20713a8b0] = -;

		*node[0x55f20713a7f0] = 0;

		*node[0x55f20713a880] = /;

		*node[0x55f20713a820] = 1;

		*node[0x55f20713a850] = 0;

		*node[0x55f20713a910] = ;;

		*node[0x55f20713a940] = print;

		*node[0x55f20713a970] = 3;

		*node[0x55f20713a9a0] = ;;

		*node[0x55f20713a9d0] = print;

		*node[0x55f20713aa00] = 5;

		*node[0x55f20713aa30] = ;;

		*node[0x55f20713aa60] = return;

		*node[0x55f20713aa90] = 0;

		*node[0x55f20713aac0] = ;;

		*node[0x55f20713ab40] = 3;

		*node[0x55f20713ab70] = 0;

		*node[0x55f20713aba0] = 1;

		*node[0x55f20713abd0] = 2;

		*node[0x55f20713ac30] = ;;

		*node[0x55f20713ad20] = =;

		*node[0x55f20713ac60] = 3;

		*node[0x55f20713acf0] = -;

		*node[0x55f20713ac90] = 0;

		*node[0x55f20713acc0] = 1;

		*node[0x55f20713ad50] = ;;

		*node[0x55f20713ae30] = =;

		*node[0x55f20713ad80] = 4;

		*node[0x55f20713ae00] = 1;

		*node[0x55f20713ae60] = ;;

		*node[0x55f20713aef0] = =;

		*node[0x55f20713ae90] = 5;

		*node[0x55f20713aec0] = 2;

		*node[0x55f20713af20] = ;;

		*node[0x55f20713af50] = if;

		*node[0x55f20713af80] = op_no;

		*node[0x55f20713b010] = ==;

		*node[0x55f20713afb0] = 2;

		*node[0x55f20713afe0] = 0;

		*node[0x55f20713b040] = ;;

		*node[0x55f20713b0d0] = =;

		*node[0x55f20713b070] = 6;

		*node[0x55f20713b0a0] = 0;

		*node[0x55f20713b100] = ;;

		*node[0x55f20713b250] = =;

		*node[0x55f20713b130] = 7;

		*node[0x55f20713b220] = -;

		*node[0x55f20713b160] = 0;

		*node[0x55f20713b1f0] = /;

		*node[0x55f20713b190] = 1;

		*node[0x55f20713b1c0] = 0;

		*node[0x55f20713b280] = ;;

		*node[0x55f20713b2b0] = print;

		*node[0x55f20713b2e0] = 5;

		*node[0x55f20713b310] = ;;

		*node[0x55f20713b340] = print;

		*node[0x55f20713b370] = 6;

		*node[0x55f20713b3a0] = 7;

		*node[0x55f20713b3d0] = else;

		*node[0x55f20713b400] = op_no;

		*node[0x55f20713b430] = ;;

		*node[0x55f20713b6d0] = =;

		*node[0x55f20713b460] = 8;

		*node[0x55f20713b6a0] = -;

		*node[0x55f20713b580] = *;

		*node[0x55f20713b520] = 1;

		*node[0x55f20713b550] = 1;

		*node[0x55f20713b670] = *;

		*node[0x55f20713b610] = *;

		*node[0x55f20713b5b0] = 4;

		*node[0x55f20713b5e0] = 0;

		*node[0x55f20713b640] = 2;

		*node[0x55f20713b700] = ;;

		*node[0x55f20713b730] = if;

		*node[0x55f20713b760] = op_no;

		*node[0x55f20713b7f0] = >;

		*node[0x55f20713b790] = 8;

		*node[0x55f20713b7c0] = 0;

		*node[0x55f20713b820] = ;;

		*node[0x55f20713b8e0] = =;

		*node[0x55f20713b850] = 9;

		*node[0x55f20713b8b0] = sqrt;

		*node[0x55f20713b880] = 8;

		*node[0x55f20713b910] = ;;

		*node[0x55f20713bb20] = =;

		*node[0x55f20713b940] = 6;

		*node[0x55f20713baf0] = /;

		*node[0x55f20713ba30] = -;

		*node[0x55f20713b9d0] = -;

		*node[0x55f20713b970] = 0;

		*node[0x55f20713b9a0] = 1;

		*node[0x55f20713ba00] = 9;

		*node[0x55f20713bac0] = *;

		*node[0x55f20713ba60] = 2;

		*node[0x55f20713ba90] = 0;

		*node[0x55f20713bb50] = ;;

		*node[0x55f20713bd60] = =;

		*node[0x55f20713bb80] = 7;

		*node[0x55f20713bd30] = /;

		*node[0x55f20713bc70] = +;

		*node[0x55f20713bc10] = -;

		*node[0x55f20713bbb0] = 0;

		*node[0x55f20713bbe0] = 1;

		*node[0x55f20713bc40] = 9;

		*node[0x55f20713bd00] = *;

		*node[0x55f20713bca0] = 2;

		*node[0x55f20713bcd0] = 0;

		*node[0x55f20713bd90] = ;;

		*node[0x55f20713bdc0] = print;

		*node[0x55f20713bdf0] = 5;

		*node[0x55f20713be20] = ;;

		*node[0x55f20713be50] = print;

		*node[0x55f20713be80] = 6;

		*node[0x55f20713beb0] = 7;

		*node[0x55f20713bee0] = elseif;

		*node[0x55f20713bf10] = op_no;

		*node[0x55f20713bfa0] = ==;

		*node[0x55f20713bf40] = 8;

		*node[0x55f20713bf70] = 0;

		*node[0x55f20713bfd0] = ;;

		*node[0x55f20713c180] = =;

		*node[0x55f20713c000] = 10;

		*node[0x55f20713c150] = -;

		*node[0x55f20713c030] = 0;

		*node[0x55f20713c120] = /;

		*node[0x55f20713c060] = 1;

		*node[0x55f20713c0f0] = *;

		*node[0x55f20713c090] = 2;

		*node[0x55f20713c0c0] = 0;

		*node[0x55f20713c1b0] = ;;

		*node[0x55f20713c1e0] = print;

		*node[0x55f20713c210] = 4;

		*node[0x55f20713c240] = ;;

		*node[0x55f20713c270] = print;

		*node[0x55f20713c2a0] = 10;

		*node[0x55f20713c2d0] = else;

		*node[0x55f20713c300] = op_no;

		*node[0x55f20713c330] = ;;

		*node[0x55f20713c360] = print;

		*node[0x55f20713c390] = 3;

		*node[0x55f20713c3c0] = ;;

		*node[0x55f20713c3f0] = return;

		*node[0x55f20713c420] = 0;

		*node[0x55f20713c450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff46330120] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5cc1abc7cef0] = ;;

		*node[0x5cc1abc7cf70] = 0;

		*node[0x5cc1abc7cfa0] = ;;

		*node[0x5cc1abc7cfd0] = input;

		*node[0x5cc1abc7d000] = 0;

		*node[0x5cc1abc7d030] = ;;

		*node[0x5cc1abc7d0c0] = =;

		*node[0x5cc1abc7d060] = 1;

		*node[0x5cc1abc7d090] = 1;

		*node[0x5cc1abc7d0f0] = ;;

		*node[0x5cc1abc7d120] = if;

		*node[0x5cc1abc7d150] = op_no;

		*node[0x5cc1abc7d2a0] = ||;

		*node[0x5cc1abc7d1e0] = <;

		*node[0x5cc1abc7d180] = 0;

		*node[0x5cc1abc7d1b0] = 0;

		*node[0x5cc1abc7d270] = ==;

		*node[0x5cc1abc7d210] = 0;

		*node[0x5cc1abc7d240] = 0;

		*node[0x5cc1abc7d2d0] = ;;

		*node[0x5cc1abc7d300] = print;

		*node[0x5cc1abc7d330] = 1;

		*node[0x5cc1abc7d360] = else;

		*node[0x5cc1abc7d390] = op_no;

		*node[0x5cc1abc7d3c0] = ;;

		*node[0x5cc1abc7d4b0] = =;

		*node[0x5cc1abc7d3f0] = 2;

		*node[0x5cc1abc7d480] = 0;

		*node[0x5cc1abc7d4e0] = ;;

		*node[0x5cc1abc7d510] = print;

		*node[0x5cc1abc7d540] = 2;

		*node[0x5cc1abc7d570] = ;;

		*node[0x5cc1abc7d680] = =;

		*node[0x5cc1abc7d5a0] = 2;

		*node[0x5cc1abc7d650] = 0;

		*node[0x5cc1abc7d6b0] = ;;

		*node[0x5cc1abc7d6e0] = print;

		*node[0x5cc1abc7d710] = 2;

		*node[0x5cc1abc7d740] = ;;

		*node[0x5cc1abc7d7c0] = 1;

		*node[0x5cc1abc7d7f0] = 0;

		*node[0x5cc1abc7d820] = ;;

		*node[0x5cc1abc7d850] = if;

		*node[0x5cc1abc7d880] = op_no;

		*node[0x5cc1abc7d9d0] = ||;

		*node[0x5cc1abc7d910] = ==;

		*node[0x5cc1abc7d8b0] = 0;

		*node[0x5cc1abc7d8e0] = 2;

		*node[0x5cc1abc7d9a0] = ==;

		*node[0x5cc1abc7d940] = 0;

		*node[0x5cc1abc7d970] = 1;

		*node[0x5cc1abc7da00] = ;;

		*node[0x5cc1abc7da30] = return;

		*node[0x5cc1abc7da60] = 0;

		*node[0x5cc1abc7da90] = ;;

		*node[0x5cc1abc7db80] = =;

		*node[0x5cc1abc7dac0] = 1;

		*node[0x5cc1abc7db50] = -;

		*node[0x5cc1abc7daf0] = 0;

		*node[0x5cc1abc7db20] = 1;

		*node[0x5cc1abc7dbb0] = ;;

		*node[0x5cc1abc7dcd0] = =;

		*node[0x5cc1abc7dbe0] = 2;

		*node[0x5cc1abc7dca0] = -;

		*node[0x5cc1abc7dc40] = 0;

		*node[0x5cc1abc7dc70] = 2;

		*node[0x5cc1abc7dd00] = ;;

		*node[0x5cc1abc7ddc0] = =;

		*node[0x5cc1abc7dd30] = 1;

		*node[0x5cc1abc7dd90] = 1;

		*node[0x5cc1abc7ddf0] = ;;

		*node[0x5cc1abc7deb0] = =;

		*node[0x5cc1abc7de20] = 2;

		*node[0x5cc1abc7de80] = 2;

		*node[0x5cc1abc7dee0] = ;;

		*node[0x5cc1abc7df10] = return;

		*node[0x5cc1abc7dfa0] = +;

		*node[0x5cc1abc7df40] = 2;

		*node[0x5cc1abc7df70] = 1;

		*node[0x5cc1abc7dfd0] = ;;

		*node[0x5cc1abc7e050] = 2;

		*node[0x5cc1abc7e0b0] = 0;

		*node[0x5cc1abc7e0e0] = ;;

		*node[0x5cc1abc7e110] = if;

		*node[0x5cc1abc7e140] = op_no;

		*node[0x5cc1abc7e1d0] = ==;

		*node[0x5cc1abc7e170] = 0;

		*node[0x5cc1abc7e1a0] = 1;

		*node[0x5cc1abc7e200] = ;;

		*node[0x5cc1abc7e230] = return;

		*node[0x5cc1abc7e260] = 0;

		*node[0x5cc1abc7e290] = ;;

		*node[0x5cc1abc7e380] = =;

		*node[0x5cc1abc7e2c0] = 1;

		*node[0x5cc1abc7e350] = -;

		*node[0x5cc1abc7e2f0] = 0;

		*node[0x5cc1abc7e320] = 1;

		*node[0x5cc1abc7e3b0] = ;;

		*node[0x5cc1abc7e500] = =;

		*node[0x5cc1abc7e3e0] = 0;

		*node[0x5cc1abc7e4d0] = *;

		*node[0x5cc1abc7e410] = 0;

		*node[0x5cc1abc7e4a0] = 1;

		*node[0x5cc1abc7e530] = ;;

		*node[0x5cc1abc7e560] = return;

		*node[0x5cc1abc7e590] = 0;

		*node[0x5cc1abc7e5c0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd5e212080] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e85c2aadef0] = ;;

		*node[0x5e85c2aadf70] = 0;

		*node[0x5e85c2aadfa0] = ;;

		*node[0x5e85c2aadfd0] = input;

		*node[0x5e85c2aae000] = 0;

		*node[0x5e85c2aae030] = ;;

		*node[0x5e85c2aae0c0] = =;

		*node[0x5e85c2aae060] = 1;

		*node[0x5e85c2aae090] = 1;

		*node[0x5e85c2aae0f0] = ;;

		*node[0x5e85c2aae120] = if;

		*node[0x5e85c2aae150] = op_no;

		*node[0x5e85c2aae2a0] = ||;

		*node[0x5e85c2aae1e0] = <;

		*node[0x5e85c2aae180] = 0;

		*node[0x5e85c2aae1b0] = 0;

		*node[0x5e85c2aae270] = ==;

		*node[0x5e85c2aae210] = 0;

		*node[0x5e85c2aae240] = 0;

		*node[0x5e85c2aae2d0] = ;;

		*node[0x5e85c2aae300] = print;

		*node[0x5e85c2aae330] = 1;

		*node[0x5e85c2aae360] = else;

		*node[0x5e85c2aae390] = op_no;

		*node[0x5e85c2aae3c0] = ;;

		*node[0x5e85c2aae4b0] = =;

		*node[0x5e85c2aae3f0] = 2;

		*node[0x5e85c2aae480] = 0;

		*node[0x5e85c2aae4e0] = ;;

		*node[0x5e85c2aae510] = print;

		*node[0x5e85c2aae540] = 2;

		*node[0x5e85c2aae570] = ;;

		*node[0x5e85c2aae680] = =;

		*node[0x5e85c2aae5a0] = 2;

		*node[0x5e85c2aae650] = 0;

		*node[0x5e85c2aae6b0] = ;;

		*node[0x5e85c2aae6e0] = print;

		*node[0x5e85c2aae710] = 2;

		*node[0x5e85c2aae740] = ;;

		*node[0x5e85c2aae7c0] = 1;

		*node[0x5e85c2aae7f0] = 0;

		*node[0x5e85c2aae820] = ;;

		*node[0x5e85c2aae850] = if;

		*node[0x5e85c2aae880] = op_no;

		*node[0x5e85c2aae9d0] = ||;

		*node[0x5e85c2aae910] = ==;

		*node[0x5e85c2aae8b0] = 0;

		*node[0x5e85c2aae8e0] = 2;

		*node[0x5e85c2aae9a0] = ==;

		*node[0x5e85c2aae940] = 0;

		*node[0x5e85c2aae970] = 1;

		*node[0x5e85c2aaea00] = ;;

		*node[0x5e85c2aaea30] = return;

		*node[0x5e85c2aaea60] = 0;

		*node[0x5e85c2aaea90] = ;;

		*node[0x5e85c2aaeb80] = =;

		*node[0x5e85c2aaeac0] = 1;

		*node[0x5e85c2aaeb50] = -;

		*node[0x5e85c2aaeaf0] = 0;

		*node[0x5e85c2aaeb20] = 1;

		*node[0x5e85c2aaebb0] = ;;

		*node[0x5e85c2aaecd0] = =;

		*node[0x5e85c2aaebe0] = 2;

		*node[0x5e85c2aaeca0] = -;

		*node[0x5e85c2aaec40] = 0;

		*node[0x5e85c2aaec70] = 2;

		*node[0x5e85c2aaed00] = ;;

		*node[0x5e85c2aaedc0] = =;

		*node[0x5e85c2aaed30] = 1;

		*node[0x5e85c2aaed90] = 1;

		*node[0x5e85c2aaedf0] = ;;

		*node[0x5e85c2aaeeb0] = =;

		*node[0x5e85c2aaee20] = 2;

		*node[0x5e85c2aaee80] = 2;

		*node[0x5e85c2aaeee0] = ;;

		*node[0x5e85c2aaef10] = return;

		*node[0x5e85c2aaefa0] = +;

		*node[0x5e85c2aaef40] = 2;

		*node[0x5e85c2aaef70] = 1;

		*node[0x5e85c2aaefd0] = ;;

		*node[0x5e85c2aaf050] = 2;

		*node[0x5e85c2aaf0b0] = 0;

		*node[0x5e85c2aaf0e0] = ;;

		*node[0x5e85c2aaf110] = if;

		*node[0x5e85c2aaf140] = op_no;

		*node[0x5e85c2aaf1d0] = ==;

		*node[0x5e85c2aaf170] = 0;

		*node[0x5e85c2aaf1a0] = 1;

		*node[0x5e85c2aaf200] = ;;

		*node[0x5e85c2aaf230] = return;

		*node[0x5e85c2aaf260] = 0;

		*node[0x5e85c2aaf290] = ;;

		*node[0x5e85c2aaf380] = =;

		*node[0x5e85c2aaf2c0] = 1;

		*node[0x5e85c2aaf350] = -;

		*node[0x5e85c2aaf2f0] = 0;

		*node[0x5e85c2aaf320] = 1;

		*node[0x5e85c2aaf3b0] = ;;

		*node[0x5e85c2aaf500] = =;

		*node[0x5e85c2aaf3e0] = 0;

		*node[0x5e85c2aaf4d0] = *;

		*node[0x5e85c2aaf410] = 0;

		*node[0x5e85c2aaf4a0] = 1;

		*node[0x5e85c2aaf530] = ;;

		*node[0x5e85c2aaf560] = return;

		*node[0x5e85c2aaf590] = 0;

		*node[0x5e85c2aaf5c0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffda5e4b6d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x650ecc0556d0] = ;;

		*node[0x650ecc055750] = 0;

		*node[0x650ecc055780] = ;;

		*node[0x650ecc0557b0] = input;

		*node[0x650ecc0557e0] = 0;

		*node[0x650ecc055810] = 1;

		*node[0x650ecc055840] = 2;

		*node[0x650ecc0558a0] = ;;

		*node[0x650ecc055900] = 0;

		*node[0x650ecc055930] = 1;

		*node[0x650ecc055960] = 2;

		*node[0x650ecc055990] = ;;

		*node[0x650ecc055a10] = 1;

		*node[0x650ecc055a40] = 0;

		*node[0x650ecc055a70] = 1;

		*node[0x650ecc055aa0] = 2;

		*node[0x650ecc055b00] = ;;

		*node[0x650ecc055b30] = if;

		*node[0x650ecc055b60] = op_no;

		*node[0x650ecc055bf0] = ==;

		*node[0x650ecc055b90] = 0;

		*node[0x650ecc055bc0] = 0;

		*node[0x650ecc055c20] = ;;

		*node[0x650ecc055c80] = 1;

		*node[0x650ecc055cb0] = 2;

		*node[0x650ecc055ce0] = else;

		*node[0x650ecc055d10] = op_no;

		*node[0x650ecc055d40] = ;;

		*node[0x650ecc055df0] = 0;

		*node[0x650ecc055e20] = 1;

		*node[0x650ecc055e50] = 2;

		*node[0x650ecc055e80] = ;;

		*node[0x650ecc055eb0] = return;

		*node[0x650ecc055ee0] = 0;

		*node[0x650ecc055f10] = ;;

		*node[0x650ecc055f90] = 2;

		*node[0x650ecc055ff0] = 0;

		*node[0x650ecc056020] = 1;

		*node[0x650ecc056050] = ;;

		*node[0x650ecc056170] = =;

		*node[0x650ecc056080] = 2;

		*node[0x650ecc056140] = -;

		*node[0x650ecc0560e0] = 0;

		*node[0x650ecc056110] = 1;

		*node[0x650ecc0561a0] = ;;

		*node[0x650ecc056230] = =;

		*node[0x650ecc0561d0] = 3;

		*node[0x650ecc056200] = 1;

		*node[0x650ecc056260] = ;;

		*node[0x650ecc056340] = =;

		*node[0x650ecc056290] = 4;

		*node[0x650ecc056310] = 1000;

		*node[0x650ecc056370] = ;;

		*node[0x650ecc0563a0] = if;

		*node[0x650ecc0563d0] = op_no;

		*node[0x650ecc056460] = ==;

		*node[0x650ecc056400] = 0;

		*node[0x650ecc056430] = 0;

		*node[0x650ecc056490] = ;;

		*node[0x650ecc0564c0] = if;

		*node[0x650ecc0564f0] = op_no;

		*node[0x650ecc056580] = ==;

		*node[0x650ecc056520] = 1;

		*node[0x650ecc056550] = 0;

		*node[0x650ecc0565b0] = ;;

		*node[0x650ecc0565e0] = print;

		*node[0x650ecc056610] = 4;

		*node[0x650ecc056640] = else;

		*node[0x650ecc056670] = op_no;

		*node[0x650ecc0566a0] = ;;

		*node[0x650ecc0566d0] = print;

		*node[0x650ecc056700] = 2;

		*node[0x650ecc056730] = else;

		*node[0x650ecc056760] = op_no;

		*node[0x650ecc056790] = ;;

		*node[0x650ecc0568e0] = =;

		*node[0x650ecc0567c0] = 5;

		*node[0x650ecc0568b0] = -;

		*node[0x650ecc0567f0] = 0;

		*node[0x650ecc056880] = /;

		*node[0x650ecc056820] = 1;

		*node[0x650ecc056850] = 0;

		*node[0x650ecc056910] = ;;

		*node[0x650ecc056940] = print;

		*node[0x650ecc056970] = 3;

		*node[0x650ecc0569a0] = ;;

		*node[0x650ecc0569d0] = print;

		*node[0x650ecc056a00] = 5;

		*node[0x650ecc056a30] = ;;

		*node[0x650ecc056a60] = return;

		*node[0x650ecc056a90] = 0;

		*node[0x650ecc056ac0] = ;;

		*node[0x650ecc056b40] = 3;

		*node[0x650ecc056b70] = 0;

		*node[0x650ecc056ba0] = 1;

		*node[0x650ecc056bd0] = 2;

		*node[0x650ecc056c30] = ;;

		*node[0x650ecc056d20] = =;

		*node[0x650ecc056c60] = 3;

		*node[0x650ecc056cf0] = -;

		*node[0x650ecc056c90] = 0;

		*node[0x650ecc056cc0] = 1;

		*node[0x650ecc056d50] = ;;

		*node[0x650ecc056e30] = =;

		*node[0x650ecc056d80] = 4;

		*node[0x650ecc056e00] = 1;

		*node[0x650ecc056e60] = ;;

		*node[0x650ecc056ef0] = =;

		*node[0x650ecc056e90] = 5;

		*node[0x650ecc056ec0] = 2;

		*node[0x650ecc056f20] = ;;

		*node[0x650ecc056f50] = if;

		*node[0x650ecc056f80] = op_no;

		*node[0x650ecc057010] = ==;

		*node[0x650ecc056fb0] = 2;

		*node[0x650ecc056fe0] = 0;

		*node[0x650ecc057040] = ;;

		*node[0x650ecc0570d0] = =;

		*node[0x650ecc057070] = 6;

		*node[0x650ecc0570a0] = 0;

		*node[0x650ecc057100] = ;;

		*node[0x650ecc057250] = =;

		*node[0x650ecc057130] = 7;

		*node[0x650ecc057220] = -;

		*node[0x650ecc057160] = 0;

		*node[0x650ecc0571f0] = /;

		*node[0x650ecc057190] = 1;

		*node[0x650ecc0571c0] = 0;

		*node[0x650ecc057280] = ;;

		*node[0x650ecc0572b0] = print;

		*node[0x650ecc0572e0] = 5;

		*node[0x650ecc057310] = ;;

		*node[0x650ecc057340] = print;

		*node[0x650ecc057370] = 6;

		*node[0x650ecc0573a0] = 7;

		*node[0x650ecc0573d0] = else;

		*node[0x650ecc057400] = op_no;

		*node[0x650ecc057430] = ;;

		*node[0x650ecc0576d0] = =;

		*node[0x650ecc057460] = 8;

		*node[0x650ecc0576a0] = -;

		*node[0x650ecc057580] = *;

		*node[0x650ecc057520] = 1;

		*node[0x650ecc057550] = 1;

		*node[0x650ecc057670] = *;

		*node[0x650ecc057610] = *;

		*node[0x650ecc0575b0] = 4;

		*node[0x650ecc0575e0] = 0;

		*node[0x650ecc057640] = 2;

		*node[0x650ecc057700] = ;;

		*node[0x650ecc057730] = if;

		*node[0x650ecc057760] = op_no;

		*node[0x650ecc0577f0] = >;

		*node[0x650ecc057790] = 8;

		*node[0x650ecc0577c0] = 0;

		*node[0x650ecc057820] = ;;

		*node[0x650ecc0578e0] = =;

		*node[0x650ecc057850] = 9;

		*node[0x650ecc0578b0] = sqrt;

		*node[0x650ecc057880] = 8;

		*node[0x650ecc057910] = ;;

		*node[0x650ecc057b20] = =;

		*node[0x650ecc057940] = 6;

		*node[0x650ecc057af0] = /;

		*node[0x650ecc057a30] = -;

		*node[0x650ecc0579d0] = -;

		*node[0x650ecc057970] = 0;

		*node[0x650ecc0579a0] = 1;

		*node[0x650ecc057a00] = 9;

		*node[0x650ecc057ac0] = *;

		*node[0x650ecc057a60] = 2;

		*node[0x650ecc057a90] = 0;

		*node[0x650ecc057b50] = ;;

		*node[0x650ecc057d60] = =;

		*node[0x650ecc057b80] = 7;

		*node[0x650ecc057d30] = /;

		*node[0x650ecc057c70] = +;

		*node[0x650ecc057c10] = -;

		*node[0x650ecc057bb0] = 0;

		*node[0x650ecc057be0] = 1;

		*node[0x650ecc057c40] = 9;

		*node[0x650ecc057d00] = *;

		*node[0x650ecc057ca0] = 2;

		*node[0x650ecc057cd0] = 0;

		*node[0x650ecc057d90] = ;;

		*node[0x650ecc057dc0] = print;

		*node[0x650ecc057df0] = 5;

		*node[0x650ecc057e20] = ;;

		*node[0x650ecc057e50] = print;

		*node[0x650ecc057e80] = 6;

		*node[0x650ecc057eb0] = 7;

		*node[0x650ecc057ee0] = elseif;

		*node[0x650ecc057f10] = op_no;

		*node[0x650ecc057fa0] = ==;

		*node[0x650ecc057f40] = 8;

		*node[0x650ecc057f70] = 0;

		*node[0x650ecc057fd0] = ;;

		*node[0x650ecc058180] = =;

		*node[0x650ecc058000] = 10;

		*node[0x650ecc058150] = -;

		*node[0x650ecc058030] = 0;

		*node[0x650ecc058120] = /;

		*node[0x650ecc058060] = 1;

		*node[0x650ecc0580f0] = *;

		*node[0x650ecc058090] = 2;

		*node[0x650ecc0580c0] = 0;

		*node[0x650ecc0581b0] = ;;

		*node[0x650ecc0581e0] = print;

		*node[0x650ecc058210] = 4;

		*node[0x650ecc058240] = ;;

		*node[0x650ecc058270] = print;

		*node[0x650ecc0582a0] = 10;

		*node[0x650ecc0582d0] = else;

		*node[0x650ecc058300] = op_no;

		*node[0x650ecc058330] = ;;

		*node[0x650ecc058360] = print;

		*node[0x650ecc058390] = 3;

		*node[0x650ecc0583c0] = ;;

		*node[0x650ecc0583f0] = return;

		*node[0x650ecc058420] = 0;

		*node[0x650ecc058450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff805600b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x55961f2836d0] = ;;

		*node[0x55961f283750] = 0;

		*node[0x55961f283780] = ;;

		*node[0x55961f2837b0] = input;

		*node[0x55961f2837e0] = 0;

		*node[0x55961f283810] = 1;

		*node[0x55961f283840] = 2;

		*node[0x55961f2838a0] = ;;

		*node[0x55961f283900] = 0;

		*node[0x55961f283930] = 0;

		*node[0x55961f283960] = 0;

		*node[0x55961f283990] = ;;

		*node[0x55961f283a10] = 1;

		*node[0x55961f283a40] = 0;

		*node[0x55961f283a70] = 1;

		*node[0x55961f283aa0] = 2;

		*node[0x55961f283b00] = ;;

		*node[0x55961f283b30] = if;

		*node[0x55961f283b60] = op_no;

		*node[0x55961f283bf0] = ==;

		*node[0x55961f283b90] = 0;

		*node[0x55961f283bc0] = 0;

		*node[0x55961f283c20] = ;;

		*node[0x55961f283c80] = 0;

		*node[0x55961f283cb0] = 0;

		*node[0x55961f283ce0] = else;

		*node[0x55961f283d10] = op_no;

		*node[0x55961f283d40] = ;;

		*node[0x55961f283df0] = 0;

		*node[0x55961f283e20] = 0;

		*node[0x55961f283e50] = 0;

		*node[0x55961f283e80] = ;;

		*node[0x55961f283eb0] = return;

		*node[0x55961f283ee0] = 0;

		*node[0x55961f283f10] = ;;

		*node[0x55961f283f90] = 2;

		*node[0x55961f283ff0] = 0;

		*node[0x55961f284020] = 1;

		*node[0x55961f284050] = ;;

		*node[0x55961f284170] = =;

		*node[0x55961f284080] = 2;

		*node[0x55961f284140] = -;

		*node[0x55961f2840e0] = 0;

		*node[0x55961f284110] = 1;

		*node[0x55961f2841a0] = ;;

		*node[0x55961f284230] = =;

		*node[0x55961f2841d0] = 3;

		*node[0x55961f284200] = 1;

		*node[0x55961f284260] = ;;

		*node[0x55961f284340] = =;

		*node[0x55961f284290] = 4;

		*node[0x55961f284310] = 1000;

		*node[0x55961f284370] = ;;

		*node[0x55961f2843a0] = if;

		*node[0x55961f2843d0] = op_no;

		*node[0x55961f284460] = ==;

		*node[0x55961f284400] = 0;

		*node[0x55961f284430] = 0;

		*node[0x55961f284490] = ;;

		*node[0x55961f2844c0] = if;

		*node[0x55961f2844f0] = op_no;

		*node[0x55961f284580] = ==;

		*node[0x55961f284520] = 0;

		*node[0x55961f284550] = 0;

		*node[0x55961f2845b0] = ;;

		*node[0x55961f2845e0] = print;

		*node[0x55961f284610] = 0;

		*node[0x55961f284640] = else;

		*node[0x55961f284670] = op_no;

		*node[0x55961f2846a0] = ;;

		*node[0x55961f2846d0] = print;

		*node[0x55961f284700] = 0;

		*node[0x55961f284730] = else;

		*node[0x55961f284760] = op_no;

		*node[0x55961f284790] = ;;

		*node[0x55961f2848e0] = =;

		*node[0x55961f2847c0] = 5;

		*node[0x55961f2848b0] = -;

		*node[0x55961f2847f0] = 0;

		*node[0x55961f284880] = /;

		*node[0x55961f284820] = 0;

		*node[0x55961f284850] = 0;

		*node[0x55961f284910] = ;;

		*node[0x55961f284940] = print;

		*node[0x55961f284970] = 0;

		*node[0x55961f2849a0] = ;;

		*node[0x55961f2849d0] = print;

		*node[0x55961f284a00] = 0;

		*node[0x55961f284a30] = ;;

		*node[0x55961f284a60] = return;

		*node[0x55961f284a90] = 0;

		*node[0x55961f284ac0] = ;;

		*node[0x55961f284b40] = 3;

		*node[0x55961f284b70] = 0;

		*node[0x55961f284ba0] = 1;

		*node[0x55961f284bd0] = 2;

		*node[0x55961f284c30] = ;;

		*node[0x55961f284d20] = =;

		*node[0x55961f284c60] = 3;

		*node[0x55961f284cf0] = -;

		*node[0x55961f284c90] = 0;

		*node[0x55961f284cc0] = 1;

		*node[0x55961f284d50] = ;;

		*node[0x55961f284e30] = =;

		*node[0x55961f284d80] = 4;

		*node[0x55961f284e00] = 1;

		*node[0x55961f284e60] = ;;

		*node[0x55961f284ef0] = =;

		*node[0x55961f284e90] = 5;

		*node[0x55961f284ec0] = 2;

		*node[0x55961f284f20] = ;;

		*node[0x55961f284f50] = if;

		*node[0x55961f284f80] = op_no;

		*node[0x55961f285010] = ==;

		*node[0x55961f284fb0] = 0;

		*node[0x55961f284fe0] = 0;

		*node[0x55961f285040] = ;;

		*node[0x55961f2850d0] = =;

		*node[0x55961f285070] = 6;

		*node[0x55961f2850a0] = 0;

		*node[0x55961f285100] = ;;

		*node[0x55961f285250] = =;

		*node[0x55961f285130] = 7;

		*node[0x55961f285220] = -;

		*node[0x55961f285160] = 0;

		*node[0x55961f2851f0] = /;

		*node[0x55961f285190] = 0;

		*node[0x55961f2851c0] = 0;

		*node[0x55961f285280] = ;;

		*node[0x55961f2852b0] = print;

		*node[0x55961f2852e0] = 0;

		*node[0x55961f285310] = ;;

		*node[0x55961f285340] = print;

		*node[0x55961f285370] = 0;

		*node[0x55961f2853a0] = 0;

		*node[0x55961f2853d0] = else;

		*node[0x55961f285400] = op_no;

		*node[0x55961f285430] = ;;

		*node[0x55961f2856d0] = =;

		*node[0x55961f285460] = 8;

		*node[0x55961f2856a0] = -;

		*node[0x55961f285580] = *;

		*node[0x55961f285520] = 0;

		*node[0x55961f285550] = 0;

		*node[0x55961f285670] = *;

		*node[0x55961f285610] = *;

		*node[0x55961f2855b0] = 4;

		*node[0x55961f2855e0] = 0;

		*node[0x55961f285640] = 0;

		*node[0x55961f285700] = ;;

		*node[0x55961f285730] = if;

		*node[0x55961f285760] = op_no;

		*node[0x55961f2857f0] = >;

		*node[0x55961f285790] = 0;

		*node[0x55961f2857c0] = 0;

		*node[0x55961f285820] = ;;

		*node[0x55961f2858e0] = =;

		*node[0x55961f285850] = 9;

		*node[0x55961f2858b0] = sqrt;

		*node[0x55961f285880] = 0;

		*node[0x55961f285910] = ;;

		*node[0x55961f285b20] = =;

		*node[0x55961f285940] = 0;

		*node[0x55961f285af0] = /;

		*node[0x55961f285a30] = -;

		*node[0x55961f2859d0] = -;

		*node[0x55961f285970] = 0;

		*node[0x55961f2859a0] = 0;

		*node[0x55961f285a00] = 0;

		*node[0x55961f285ac0] = *;

		*node[0x55961f285a60] = 2;

		*node[0x55961f285a90] = 0;

		*node[0x55961f285b50] = ;;

		*node[0x55961f285d60] = =;

		*node[0x55961f285b80] = 0;

		*node[0x55961f285d30] = /;

		*node[0x55961f285c70] = +;

		*node[0x55961f285c10] = -;

		*node[0x55961f285bb0] = 0;

		*node[0x55961f285be0] = 0;

		*node[0x55961f285c40] = 0;

		*node[0x55961f285d00] = *;

		*node[0x55961f285ca0] = 2;

		*node[0x55961f285cd0] = 0;

		*node[0x55961f285d90] = ;;

		*node[0x55961f285dc0] = print;

		*node[0x55961f285df0] = 0;

		*node[0x55961f285e20] = ;;

		*node[0x55961f285e50] = print;

		*node[0x55961f285e80] = 0;

		*node[0x55961f285eb0] = 0;

		*node[0x55961f285ee0] = elseif;

		*node[0x55961f285f10] = op_no;

		*node[0x55961f285fa0] = ==;

		*node[0x55961f285f40] = 0;

		*node[0x55961f285f70] = 0;

		*node[0x55961f285fd0] = ;;

		*node[0x55961f286180] = =;

		*node[0x55961f286000] = 10;

		*node[0x55961f286150] = -;

		*node[0x55961f286030] = 0;

		*node[0x55961f286120] = /;

		*node[0x55961f286060] = 0;

		*node[0x55961f2860f0] = *;

		*node[0x55961f286090] = 2;

		*node[0x55961f2860c0] = 0;

		*node[0x55961f2861b0] = ;;

		*node[0x55961f2861e0] = print;

		*node[0x55961f286210] = 0;

		*node[0x55961f286240] = ;;

		*node[0x55961f286270] = print;

		*node[0x55961f2862a0] = 0;

		*node[0x55961f2862d0] = else;

		*node[0x55961f286300] = op_no;

		*node[0x55961f286330] = ;;

		*node[0x55961f286360] = print;

		*node[0x55961f286390] = 0;

		*node[0x55961f2863c0] = ;;

		*node[0x55961f2863f0] = return;

		*node[0x55961f286420] = 0;

		*node[0x55961f286450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc23df7400] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x57f1bc6436d0] = ;;

		*node[0x57f1bc643750] = 0;

		*node[0x57f1bc643780] = ;;

		*node[0x57f1bc6437b0] = input;

		*node[0x57f1bc6437e0] = 0;

		*node[0x57f1bc643810] = 1;

		*node[0x57f1bc643840] = 2;

		*node[0x57f1bc6438a0] = ;;

		*node[0x57f1bc643900] = 0;

		*node[0x57f1bc643930] = 3;

		*node[0x57f1bc643960] = 0;

		*node[0x57f1bc643990] = ;;

		*node[0x57f1bc643a10] = 0;

		*node[0x57f1bc643a40] = 0;

		*node[0x57f1bc643a70] = 1;

		*node[0x57f1bc643aa0] = 2;

		*node[0x57f1bc643b00] = ;;

		*node[0x57f1bc643b30] = if;

		*node[0x57f1bc643b60] = op_no;

		*node[0x57f1bc643bf0] = ==;

		*node[0x57f1bc643b90] = 0;

		*node[0x57f1bc643bc0] = 0;

		*node[0x57f1bc643c20] = ;;

		*node[0x57f1bc643c80] = 0;

		*node[0x57f1bc643cb0] = 3;

		*node[0x57f1bc643ce0] = else;

		*node[0x57f1bc643d10] = op_no;

		*node[0x57f1bc643d40] = ;;

		*node[0x57f1bc643da0] = 0;

		*node[0x57f1bc643dd0] = 0;

		*node[0x57f1bc643e00] = 4;

		*node[0x57f1bc643e80] = ;;

		*node[0x57f1bc643eb0] = return;

		*node[0x57f1bc643ee0] = 0;

		*node[0x57f1bc643f10] = ;;

		*node[0x57f1bc643f90] = 0;

		*node[0x57f1bc643fc0] = 0;

		*node[0x57f1bc643ff0] = 1;

		*node[0x57f1bc644020] = ;;

		*node[0x57f1bc644140] = =;

		*node[0x57f1bc644050] = 2;

		*node[0x57f1bc644110] = -;

		*node[0x57f1bc6440b0] = 0;

		*node[0x57f1bc6440e0] = 1;

		*node[0x57f1bc644170] = ;;

		*node[0x57f1bc644200] = =;

		*node[0x57f1bc6441a0] = 3;

		*node[0x57f1bc6441d0] = 1;

		*node[0x57f1bc644230] = ;;

		*node[0x57f1bc644310] = =;

		*node[0x57f1bc644260] = 4;

		*node[0x57f1bc6442e0] = 1000;

		*node[0x57f1bc644340] = ;;

		*node[0x57f1bc644370] = if;

		*node[0x57f1bc6443a0] = op_no;

		*node[0x57f1bc644430] = ==;

		*node[0x57f1bc6443d0] = 0;

		*node[0x57f1bc644400] = 0;

		*node[0x57f1bc644460] = ;;

		*node[0x57f1bc644490] = if;

		*node[0x57f1bc6444c0] = op_no;

		*node[0x57f1bc644550] = ==;

		*node[0x57f1bc6444f0] = 0;

		*node[0x57f1bc644520] = 0;

		*node[0x57f1bc644580] = ;;

		*node[0x57f1bc6445b0] = print;

		*node[0x57f1bc6445e0] = 0;

		*node[0x57f1bc644610] = else;

		*node[0x57f1bc644640] = op_no;

		*node[0x57f1bc644670] = ;;

		*node[0x57f1bc6446a0] = print;

		*node[0x57f1bc6446d0] = 0;

		*node[0x57f1bc644700] = else;

		*node[0x57f1bc644730] = op_no;

		*node[0x57f1bc644760] = ;;

		*node[0x57f1bc6448b0] = =;

		*node[0x57f1bc644790] = 5;

		*node[0x57f1bc644880] = -;

		*node[0x57f1bc6447c0] = 0;

		*node[0x57f1bc644850] = /;

		*node[0x57f1bc6447f0] = 0;

		*node[0x57f1bc644820] = 0;

		*node[0x57f1bc6448e0] = ;;

		*node[0x57f1bc644910] = print;

		*node[0x57f1bc644940] = 0;

		*node[0x57f1bc644970] = ;;

		*node[0x57f1bc6449a0] = print;

		*node[0x57f1bc6449d0] = 0;

		*node[0x57f1bc644a00] = ;;

		*node[0x57f1bc644a30] = return;

		*node[0x57f1bc644a60] = 0;

		*node[0x57f1bc644a90] = ;;

		*node[0x57f1bc644b10] = 4;

		*node[0x57f1bc644b40] = 0;

		*node[0x57f1bc644b70] = 1;

		*node[0x57f1bc644ba0] = 2;

		*node[0x57f1bc644c00] = ;;

		*node[0x57f1bc644cf0] = =;

		*node[0x57f1bc644c30] = 3;

		*node[0x57f1bc644cc0] = -;

		*node[0x57f1bc644c60] = 0;

		*node[0x57f1bc644c90] = 1;

		*node[0x57f1bc644d20] = ;;

		*node[0x57f1bc644e00] = =;

		*node[0x57f1bc644d50] = 4;

		*node[0x57f1bc644dd0] = 1;

		*node[0x57f1bc644e30] = ;;

		*node[0x57f1bc644ec0] = =;

		*node[0x57f1bc644e60] = 5;

		*node[0x57f1bc644e90] = 2;

		*node[0x57f1bc644ef0] = ;;

		*node[0x57f1bc644f20] = if;

		*node[0x57f1bc644f50] = op_no;

		*node[0x57f1bc644fe0] = ==;

		*node[0x57f1bc644f80] = 0;

		*node[0x57f1bc644fb0] = 0;

		*node[0x57f1bc645010] = ;;

		*node[0x57f1bc6450a0] = =;

		*node[0x57f1bc645040] = 6;

		*node[0x57f1bc645070] = 0;

		*node[0x57f1bc6450d0] = ;;

		*node[0x57f1bc645220] = =;

		*node[0x57f1bc645100] = 7;

		*node[0x57f1bc6451f0] = -;

		*node[0x57f1bc645130] = 0;

		*node[0x57f1bc6451c0] = /;

		*node[0x57f1bc645160] = 0;

		*node[0x57f1bc645190] = 0;

		*node[0x57f1bc645250] = ;;

		*node[0x57f1bc645280] = print;

		*node[0x57f1bc6452b0] = 0;

		*node[0x57f1bc6452e0] = ;;

		*node[0x57f1bc645310] = print;

		*node[0x57f1bc645340] = 0;

		*node[0x57f1bc645370] = 0;

		*node[0x57f1bc6453a0] = else;

		*node[0x57f1bc6453d0] = op_no;

		*node[0x57f1bc645400] = ;;

		*node[0x57f1bc6456a0] = =;

		*node[0x57f1bc645430] = 8;

		*node[0x57f1bc645670] = -;

		*node[0x57f1bc645550] = *;

		*node[0x57f1bc6454f0] = 0;

		*node[0x57f1bc645520] = 0;

		*node[0x57f1bc645640] = *;

		*node[0x57f1bc6455e0] = *;

		*node[0x57f1bc645580] = 4;

		*node[0x57f1bc6455b0] = 0;

		*node[0x57f1bc645610] = 0;

		*node[0x57f1bc6456d0] = ;;

		*node[0x57f1bc645700] = if;

		*node[0x57f1bc645730] = op_no;

		*node[0x57f1bc6457c0] = >;

		*node[0x57f1bc645760] = 0;

		*node[0x57f1bc645790] = 0;

		*node[0x57f1bc6457f0] = ;;

		*node[0x57f1bc6458b0] = =;

		*node[0x57f1bc645820] = 9;

		*node[0x57f1bc645880] = sqrt;

		*node[0x57f1bc645850] = 0;

		*node[0x57f1bc6458e0] = ;;

		*node[0x57f1bc645af0] = =;

		*node[0x57f1bc645910] = 0;

		*node[0x57f1bc645ac0] = /;

		*node[0x57f1bc645a00] = -;

		*node[0x57f1bc6459a0] = -;

		*node[0x57f1bc645940] = 0;

		*node[0x57f1bc645970] = 0;

		*node[0x57f1bc6459d0] = 0;

		*node[0x57f1bc645a90] = *;

		*node[0x57f1bc645a30] = 2;

		*node[0x57f1bc645a60] = 0;

		*node[0x57f1bc645b20] = ;;

		*node[0x57f1bc645d30] = =;

		*node[0x57f1bc645b50] = 0;

		*node[0x57f1bc645d00] = /;

		*node[0x57f1bc645c40] = +;

		*node[0x57f1bc645be0] = -;

		*node[0x57f1bc645b80] = 0;

		*node[0x57f1bc645bb0] = 0;

		*node[0x57f1bc645c10] = 0;

		*node[0x57f1bc645cd0] = *;

		*node[0x57f1bc645c70] = 2;

		*node[0x57f1bc645ca0] = 0;

		*node[0x57f1bc645d60] = ;;

		*node[0x57f1bc645d90] = print;

		*node[0x57f1bc645dc0] = 0;

		*node[0x57f1bc645df0] = ;;

		*node[0x57f1bc645e20] = print;

		*node[0x57f1bc645e50] = 0;

		*node[0x57f1bc645e80] = 0;

		*node[0x57f1bc645eb0] = elseif;

		*node[0x57f1bc645ee0] = op_no;

		*node[0x57f1bc645f70] = ==;

		*node[0x57f1bc645f10] = 0;

		*node[0x57f1bc645f40] = 0;

		*node[0x57f1bc645fa0] = ;;

		*node[0x57f1bc646150] = =;

		*node[0x57f1bc645fd0] = 10;

		*node[0x57f1bc646120] = -;

		*node[0x57f1bc646000] = 0;

		*node[0x57f1bc6460f0] = /;

		*node[0x57f1bc646030] = 0;

		*node[0x57f1bc6460c0] = *;

		*node[0x57f1bc646060] = 2;

		*node[0x57f1bc646090] = 0;

		*node[0x57f1bc646180] = ;;

		*node[0x57f1bc6461b0] = print;

		*node[0x57f1bc6461e0] = 0;

		*node[0x57f1bc646210] = ;;

		*node[0x57f1bc646240] = print;

		*node[0x57f1bc646270] = 0;

		*node[0x57f1bc6462a0] = else;

		*node[0x57f1bc6462d0] = op_no;

		*node[0x57f1bc646300] = ;;

		*node[0x57f1bc646330] = print;

		*node[0x57f1bc646360] = 0;

		*node[0x57f1bc646390] = ;;

		*node[0x57f1bc6463c0] = return;

		*node[0x57f1bc6463f0] = 0;

		*node[0x57f1bc646420] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffea1963910] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x608385217f10] = ;;

		*node[0x608385217f90] = 0;

		*node[0x608385217fc0] = ;;

		*node[0x608385217ff0] = input;

		*node[0x608385218020] = 0;

		*node[0x608385218050] = 1;

		*node[0x608385218080] = 2;

		*node[0x6083852180e0] = ;;

		*node[0x608385218140] = 0;

		*node[0x608385218170] = 0;

		*node[0x6083852181a0] = 0;

		*node[0x6083852181d0] = ;;

		*node[0x608385218250] = 0;

		*node[0x608385218280] = 0;

		*node[0x6083852182b0] = 0;

		*node[0x6083852182e0] = 0;

		*node[0x608385218310] = ;;

		*node[0x608385218340] = if;

		*node[0x608385218370] = op_no;

		*node[0x608385218400] = ==;

		*node[0x6083852183a0] = 0;

		*node[0x6083852183d0] = 0;

		*node[0x608385218430] = ;;

		*node[0x608385218490] = 0;

		*node[0x6083852184c0] = 0;

		*node[0x6083852184f0] = else;

		*node[0x608385218520] = op_no;

		*node[0x608385218550] = ;;

		*node[0x6083852185e0] = 0;

		*node[0x608385218610] = 0;

		*node[0x608385218640] = 0;

		*node[0x608385218670] = ;;

		*node[0x6083852186a0] = return;

		*node[0x6083852186d0] = 0;

		*node[0x608385218700] = ;;

		*node[0x608385218780] = 0;

		*node[0x6083852187b0] = 0;

		*node[0x6083852187e0] = 0;

		*node[0x608385218810] = ;;

		*node[0x608385218900] = =;

		*node[0x608385218840] = 0;

		*node[0x6083852188d0] = -;

		*node[0x608385218870] = 0;

		*node[0x6083852188a0] = 1;

		*node[0x608385218930] = ;;

		*node[0x6083852189c0] = =;

		*node[0x608385218960] = 1;

		*node[0x608385218990] = 1;

		*node[0x6083852189f0] = ;;

		*node[0x608385218ab0] = =;

		*node[0x608385218a20] = 2;

		*node[0x608385218a80] = 1000;

		*node[0x608385218ae0] = ;;

		*node[0x608385218b10] = if;

		*node[0x608385218b40] = op_no;

		*node[0x608385218bd0] = ==;

		*node[0x608385218b70] = 0;

		*node[0x608385218ba0] = 0;

		*node[0x608385218c00] = ;;

		*node[0x608385218c30] = if;

		*node[0x608385218c60] = op_no;

		*node[0x608385218cf0] = ==;

		*node[0x608385218c90] = 0;

		*node[0x608385218cc0] = 0;

		*node[0x608385218d20] = ;;

		*node[0x608385218d50] = print;

		*node[0x608385218d80] = 0;

		*node[0x608385218db0] = else;

		*node[0x608385218de0] = op_no;

		*node[0x608385218e10] = ;;

		*node[0x608385218e40] = print;

		*node[0x608385218e70] = 0;

		*node[0x608385218ea0] = else;

		*node[0x608385218ed0] = op_no;

		*node[0x608385218f00] = ;;

		*node[0x608385219050] = =;

		*node[0x608385218f30] = 3;

		*node[0x608385219020] = -;

		*node[0x608385218f60] = 0;

		*node[0x608385218ff0] = /;

		*node[0x608385218f90] = 0;

		*node[0x608385218fc0] = 0;

		*node[0x608385219080] = ;;

		*node[0x6083852190b0] = print;

		*node[0x6083852190e0] = 0;

		*node[0x608385219110] = ;;

		*node[0x608385219140] = print;

		*node[0x608385219170] = 0;

		*node[0x6083852191a0] = ;;

		*node[0x6083852191d0] = return;

		*node[0x608385219200] = 0;

		*node[0x608385219230] = ;;

		*node[0x6083852192b0] = 0;

		*node[0x6083852192e0] = 0;

		*node[0x608385219310] = 0;

		*node[0x608385219340] = 0;

		*node[0x608385219370] = ;;

		*node[0x608385219460] = =;

		*node[0x6083852193a0] = 0;

		*node[0x608385219430] = -;

		*node[0x6083852193d0] = 0;

		*node[0x608385219400] = 1;

		*node[0x608385219490] = ;;

		*node[0x608385219520] = =;

		*node[0x6083852194c0] = 0;

		*node[0x6083852194f0] = 1;

		*node[0x608385219550] = ;;

		*node[0x6083852195e0] = =;

		*node[0x608385219580] = 0;

		*node[0x6083852195b0] = 2;

		*node[0x608385219610] = ;;

		*node[0x608385219640] = if;

		*node[0x608385219670] = op_no;

		*node[0x608385219700] = ==;

		*node[0x6083852196a0] = 0;

		*node[0x6083852196d0] = 0;

		*node[0x608385219730] = ;;

		*node[0x6083852197c0] = =;

		*node[0x608385219760] = 1;

		*node[0x608385219790] = 0;

		*node[0x6083852197f0] = ;;

		*node[0x608385219970] = =;

		*node[0x608385219820] = 2;

		*node[0x608385219940] = -;

		*node[0x608385219880] = 0;

		*node[0x608385219910] = /;

		*node[0x6083852198b0] = 0;

		*node[0x6083852198e0] = 0;

		*node[0x6083852199a0] = ;;

		*node[0x6083852199d0] = print;

		*node[0x608385219a00] = 0;

		*node[0x608385219a30] = ;;

		*node[0x608385219a60] = print;

		*node[0x608385219a90] = 0;

		*node[0x608385219ac0] = 0;

		*node[0x608385219af0] = else;

		*node[0x608385219b20] = op_no;

		*node[0x608385219b50] = ;;

		*node[0x608385219d60] = =;

		*node[0x608385219b80] = 3;

		*node[0x608385219d30] = -;

		*node[0x608385219c10] = *;

		*node[0x608385219bb0] = 0;

		*node[0x608385219be0] = 0;

		*node[0x608385219d00] = *;

		*node[0x608385219ca0] = *;

		*node[0x608385219c40] = 4;

		*node[0x608385219c70] = 0;

		*node[0x608385219cd0] = 0;

		*node[0x608385219d90] = ;;

		*node[0x608385219dc0] = if;

		*node[0x608385219df0] = op_no;

		*node[0x608385219e80] = >;

		*node[0x608385219e20] = 0;

		*node[0x608385219e50] = 0;

		*node[0x608385219eb0] = ;;

		*node[0x608385219fc0] = =;

		*node[0x608385219ee0] = 4;

		*node[0x608385219f90] = sqrt;

		*node[0x608385219f60] = 0;

		*node[0x608385219ff0] = ;;

		*node[0x60838521a200] = =;

		*node[0x60838521a020] = 0;

		*node[0x60838521a1d0] = /;

		*node[0x60838521a110] = -;

		*node[0x60838521a0b0] = -;

		*node[0x60838521a050] = 0;

		*node[0x60838521a080] = 0;

		*node[0x60838521a0e0] = 0;

		*node[0x60838521a1a0] = *;

		*node[0x60838521a140] = 2;

		*node[0x60838521a170] = 0;

		*node[0x60838521a230] = ;;

		*node[0x60838521a440] = =;

		*node[0x60838521a260] = 0;

		*node[0x60838521a410] = /;

		*node[0x60838521a350] = +;

		*node[0x60838521a2f0] = -;

		*node[0x60838521a290] = 0;

		*node[0x60838521a2c0] = 0;

		*node[0x60838521a320] = 0;

		*node[0x60838521a3e0] = *;

		*node[0x60838521a380] = 2;

		*node[0x60838521a3b0] = 0;

		*node[0x60838521a470] = ;;

		*node[0x60838521a4a0] = print;

		*node[0x60838521a4d0] = 0;

		*node[0x60838521a500] = ;;

		*node[0x60838521a530] = print;

		*node[0x60838521a560] = 0;

		*node[0x60838521a590] = 0;

		*node[0x60838521a5c0] = elseif;

		*node[0x60838521a5f0] = op_no;

		*node[0x60838521a680] = ==;

		*node[0x60838521a620] = 0;

		*node[0x60838521a650] = 0;

		*node[0x60838521a6b0] = ;;

		*node[0x60838521a860] = =;

		*node[0x60838521a6e0] = 0;

		*node[0x60838521a830] = -;

		*node[0x60838521a710] = 0;

		*node[0x60838521a800] = /;

		*node[0x60838521a740] = 0;

		*node[0x60838521a7d0] = *;

		*node[0x60838521a770] = 2;

		*node[0x60838521a7a0] = 0;

		*node[0x60838521a890] = ;;

		*node[0x60838521a8c0] = print;

		*node[0x60838521a8f0] = 0;

		*node[0x60838521a920] = ;;

		*node[0x60838521a950] = print;

		*node[0x60838521a980] = 0;

		*node[0x60838521a9b0] = else;

		*node[0x60838521a9e0] = op_no;

		*node[0x60838521aa10] = ;;

		*node[0x60838521aa40] = print;

		*node[0x60838521aa70] = 0;

		*node[0x60838521aaa0] = ;;

		*node[0x60838521aad0] = return;

		*node[0x60838521ab00] = 0;

		*node[0x60838521ab30] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc2395a430] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5dba35a28320] = ;;

		*node[0x5dba35a283a0] = 0;

		*node[0x5dba35a283d0] = ;;

		*node[0x5dba35a28400] = input;

		*node[0x5dba35a28430] = 0;

		*node[0x5dba35a28460] = 1;

		*node[0x5dba35a28490] = 2;

		*node[0x5dba35a284f0] = ;;

		*node[0x5dba35a28550] = 0;

		*node[0x5dba35a28580] = 0;

		*node[0x5dba35a285b0] = 0;

		*node[0x5dba35a285e0] = ;;

		*node[0x5dba35a28660] = 0;

		*node[0x5dba35a28690] = 0;

		*node[0x5dba35a286c0] = 0;

		*node[0x5dba35a286f0] = 0;

		*node[0x5dba35a28720] = ;;

		*node[0x5dba35a28750] = if;

		*node[0x5dba35a28780] = op_no;

		*node[0x5dba35a28810] = ==;

		*node[0x5dba35a287b0] = 0;

		*node[0x5dba35a287e0] = 0;

		*node[0x5dba35a28840] = ;;

		*node[0x5dba35a288a0] = 0;

		*node[0x5dba35a288d0] = 0;

		*node[0x5dba35a28900] = else;

		*node[0x5dba35a28930] = op_no;

		*node[0x5dba35a28960] = ;;

		*node[0x5dba35a289f0] = 0;

		*node[0x5dba35a28a20] = 0;

		*node[0x5dba35a28a50] = 0;

		*node[0x5dba35a28a80] = ;;

		*node[0x5dba35a28ab0] = return;

		*node[0x5dba35a28ae0] = 0;

		*node[0x5dba35a28b10] = ;;

		*node[0x5dba35a28b90] = 0;

		*node[0x5dba35a28bc0] = 0;

		*node[0x5dba35a28bf0] = 0;

		*node[0x5dba35a28c20] = ;;

		*node[0x5dba35a28d10] = =;

		*node[0x5dba35a28c50] = 0;

		*node[0x5dba35a28ce0] = -;

		*node[0x5dba35a28c80] = 0;

		*node[0x5dba35a28cb0] = 1;

		*node[0x5dba35a28d40] = ;;

		*node[0x5dba35a28dd0] = =;

		*node[0x5dba35a28d70] = 1;

		*node[0x5dba35a28da0] = 1;

		*node[0x5dba35a28e00] = ;;

		*node[0x5dba35a28ec0] = =;

		*node[0x5dba35a28e30] = 2;

		*node[0x5dba35a28e90] = 1000;

		*node[0x5dba35a28ef0] = ;;

		*node[0x5dba35a28f20] = if;

		*node[0x5dba35a28f50] = op_no;

		*node[0x5dba35a28fe0] = ==;

		*node[0x5dba35a28f80] = 0;

		*node[0x5dba35a28fb0] = 0;

		*node[0x5dba35a29010] = ;;

		*node[0x5dba35a29040] = if;

		*node[0x5dba35a29070] = op_no;

		*node[0x5dba35a29100] = ==;

		*node[0x5dba35a290a0] = 0;

		*node[0x5dba35a290d0] = 0;

		*node[0x5dba35a29130] = ;;

		*node[0x5dba35a29160] = print;

		*node[0x5dba35a29190] = 0;

		*node[0x5dba35a291c0] = else;

		*node[0x5dba35a291f0] = op_no;

		*node[0x5dba35a29220] = ;;

		*node[0x5dba35a29250] = print;

		*node[0x5dba35a29280] = 0;

		*node[0x5dba35a292b0] = else;

		*node[0x5dba35a292e0] = op_no;

		*node[0x5dba35a29310] = ;;

		*node[0x5dba35a29460] = =;

		*node[0x5dba35a29340] = 3;

		*node[0x5dba35a29430] = -;

		*node[0x5dba35a29370] = 0;

		*node[0x5dba35a29400] = /;

		*node[0x5dba35a293a0] = 0;

		*node[0x5dba35a293d0] = 0;

		*node[0x5dba35a29490] = ;;

		*node[0x5dba35a294c0] = print;

		*node[0x5dba35a294f0] = 0;

		*node[0x5dba35a29520] = ;;

		*node[0x5dba35a29550] = print;

		*node[0x5dba35a29580] = 0;

		*node[0x5dba35a295b0] = ;;

		*node[0x5dba35a295e0] = return;

		*node[0x5dba35a29610] = 0;

		*node[0x5dba35a29640] = ;;

		*node[0x5dba35a296c0] = 0;

		*node[0x5dba35a296f0] = 0;

		*node[0x5dba35a29720] = 0;

		*node[0x5dba35a29750] = 0;

		*node[0x5dba35a29780] = ;;

		*node[0x5dba35a29870] = =;

		*node[0x5dba35a297b0] = 0;

		*node[0x5dba35a29840] = -;

		*node[0x5dba35a297e0] = 0;

		*node[0x5dba35a29810] = 1;

		*node[0x5dba35a298a0] = ;;

		*node[0x5dba35a29930] = =;

		*node[0x5dba35a298d0] = 0;

		*node[0x5dba35a29900] = 1;

		*node[0x5dba35a29960] = ;;

		*node[0x5dba35a299f0] = =;

		*node[0x5dba35a29990] = 0;

		*node[0x5dba35a299c0] = 2;

		*node[0x5dba35a29a20] = ;;

		*node[0x5dba35a29a50] = if;

		*node[0x5dba35a29a80] = op_no;

		*node[0x5dba35a29b10] = ==;

		*node[0x5dba35a29ab0] = 0;

		*node[0x5dba35a29ae0] = 0;

		*node[0x5dba35a29b40] = ;;

		*node[0x5dba35a29bd0] = =;

		*node[0x5dba35a29b70] = 1;

		*node[0x5dba35a29ba0] = 0;

		*node[0x5dba35a29c00] = ;;

		*node[0x5dba35a29d80] = =;

		*node[0x5dba35a29c30] = 2;

		*node[0x5dba35a29d50] = -;

		*node[0x5dba35a29c90] = 0;

		*node[0x5dba35a29d20] = /;

		*node[0x5dba35a29cc0] = 0;

		*node[0x5dba35a29cf0] = 0;

		*node[0x5dba35a29db0] = ;;

		*node[0x5dba35a29de0] = print;

		*node[0x5dba35a29e10] = 0;

		*node[0x5dba35a29e40] = ;;

		*node[0x5dba35a29e70] = print;

		*node[0x5dba35a29ea0] = 0;

		*node[0x5dba35a29ed0] = 0;

		*node[0x5dba35a29f00] = else;

		*node[0x5dba35a29f30] = op_no;

		*node[0x5dba35a29f60] = ;;

		*node[0x5dba35a2a170] = =;

		*node[0x5dba35a29f90] = 3;

		*node[0x5dba35a2a140] = -;

		*node[0x5dba35a2a020] = *;

		*node[0x5dba35a29fc0] = 0;

		*node[0x5dba35a29ff0] = 0;

		*node[0x5dba35a2a110] = *;

		*node[0x5dba35a2a0b0] = *;

		*node[0x5dba35a2a050] = 4;

		*node[0x5dba35a2a080] = 0;

		*node[0x5dba35a2a0e0] = 0;

		*node[0x5dba35a2a1a0] = ;;

		*node[0x5dba35a2a1d0] = if;

		*node[0x5dba35a2a200] = op_no;

		*node[0x5dba35a2a290] = >;

		*node[0x5dba35a2a230] = 0;

		*node[0x5dba35a2a260] = 0;

		*node[0x5dba35a2a2c0] = ;;

		*node[0x5dba35a2a3d0] = =;

		*node[0x5dba35a2a2f0] = 4;

		*node[0x5dba35a2a3a0] = sqrt;

		*node[0x5dba35a2a370] = 0;

		*node[0x5dba35a2a400] = ;;

		*node[0x5dba35a2a610] = =;

		*node[0x5dba35a2a430] = 0;

		*node[0x5dba35a2a5e0] = /;

		*node[0x5dba35a2a520] = -;

		*node[0x5dba35a2a4c0] = -;

		*node[0x5dba35a2a460] = 0;

		*node[0x5dba35a2a490] = 0;

		*node[0x5dba35a2a4f0] = 0;

		*node[0x5dba35a2a5b0] = *;

		*node[0x5dba35a2a550] = 2;

		*node[0x5dba35a2a580] = 0;

		*node[0x5dba35a2a640] = ;;

		*node[0x5dba35a2a850] = =;

		*node[0x5dba35a2a670] = 0;

		*node[0x5dba35a2a820] = /;

		*node[0x5dba35a2a760] = +;

		*node[0x5dba35a2a700] = -;

		*node[0x5dba35a2a6a0] = 0;

		*node[0x5dba35a2a6d0] = 0;

		*node[0x5dba35a2a730] = 0;

		*node[0x5dba35a2a7f0] = *;

		*node[0x5dba35a2a790] = 2;

		*node[0x5dba35a2a7c0] = 0;

		*node[0x5dba35a2a880] = ;;

		*node[0x5dba35a2a8b0] = print;

		*node[0x5dba35a2a8e0] = 0;

		*node[0x5dba35a2a910] = ;;

		*node[0x5dba35a2a940] = print;

		*node[0x5dba35a2a970] = 0;

		*node[0x5dba35a2a9a0] = 0;

		*node[0x5dba35a2a9d0] = elseif;

		*node[0x5dba35a2aa00] = op_no;

		*node[0x5dba35a2aa90] = ==;

		*node[0x5dba35a2aa30] = 0;

		*node[0x5dba35a2aa60] = 0;

		*node[0x5dba35a2aac0] = ;;

		*node[0x5dba35a2ac70] = =;

		*node[0x5dba35a2aaf0] = 0;

		*node[0x5dba35a2ac40] = -;

		*node[0x5dba35a2ab20] = 0;

		*node[0x5dba35a2ac10] = /;

		*node[0x5dba35a2ab50] = 0;

		*node[0x5dba35a2abe0] = *;

		*node[0x5dba35a2ab80] = 2;

		*node[0x5dba35a2abb0] = 0;

		*node[0x5dba35a2aca0] = ;;

		*node[0x5dba35a2acd0] = print;

		*node[0x5dba35a2ad00] = 0;

		*node[0x5dba35a2ad30] = ;;

		*node[0x5dba35a2ad60] = print;

		*node[0x5dba35a2ad90] = 0;

		*node[0x5dba35a2adc0] = else;

		*node[0x5dba35a2adf0] = op_no;

		*node[0x5dba35a2ae20] = ;;

		*node[0x5dba35a2ae50] = print;

		*node[0x5dba35a2ae80] = 0;

		*node[0x5dba35a2aeb0] = ;;

		*node[0x5dba35a2aee0] = return;

		*node[0x5dba35a2af10] = 0;

		*node[0x5dba35a2af40] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd10bb9d20] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5a9469333f10] = ;;

		*node[0x5a9469333f90] = 0;

		*node[0x5a9469333fc0] = ;;

		*node[0x5a9469333ff0] = input;

		*node[0x5a9469334020] = 0;

		*node[0x5a9469334050] = 1;

		*node[0x5a9469334080] = 2;

		*node[0x5a94693340e0] = ;;

		*node[0x5a9469334140] = 0;

		*node[0x5a9469334170] = 0;

		*node[0x5a94693341a0] = 0;

		*node[0x5a94693341d0] = ;;

		*node[0x5a9469334250] = 0;

		*node[0x5a9469334280] = 0;

		*node[0x5a94693342b0] = 0;

		*node[0x5a94693342e0] = 0;

		*node[0x5a9469334310] = ;;

		*node[0x5a9469334340] = if;

		*node[0x5a9469334370] = op_no;

		*node[0x5a9469334400] = ==;

		*node[0x5a94693343a0] = 0;

		*node[0x5a94693343d0] = 0;

		*node[0x5a9469334430] = ;;

		*node[0x5a9469334490] = 0;

		*node[0x5a94693344c0] = 0;

		*node[0x5a94693344f0] = else;

		*node[0x5a9469334520] = op_no;

		*node[0x5a9469334550] = ;;

		*node[0x5a94693345e0] = 0;

		*node[0x5a9469334610] = 0;

		*node[0x5a9469334640] = 0;

		*node[0x5a9469334670] = ;;

		*node[0x5a94693346a0] = return;

		*node[0x5a94693346d0] = 0;

		*node[0x5a9469334700] = ;;

		*node[0x5a9469334780] = 0;

		*node[0x5a94693347b0] = 0;

		*node[0x5a94693347e0] = 0;

		*node[0x5a9469334810] = ;;

		*node[0x5a9469334900] = =;

		*node[0x5a9469334840] = 0;

		*node[0x5a94693348d0] = -;

		*node[0x5a9469334870] = 0;

		*node[0x5a94693348a0] = 1;

		*node[0x5a9469334930] = ;;

		*node[0x5a94693349c0] = =;

		*node[0x5a9469334960] = 1;

		*node[0x5a9469334990] = 1;

		*node[0x5a94693349f0] = ;;

		*node[0x5a9469334ab0] = =;

		*node[0x5a9469334a20] = 2;

		*node[0x5a9469334a80] = 1000;

		*node[0x5a9469334ae0] = ;;

		*node[0x5a9469334b10] = if;

		*node[0x5a9469334b40] = op_no;

		*node[0x5a9469334bd0] = ==;

		*node[0x5a9469334b70] = 0;

		*node[0x5a9469334ba0] = 0;

		*node[0x5a9469334c00] = ;;

		*node[0x5a9469334c30] = if;

		*node[0x5a9469334c60] = op_no;

		*node[0x5a9469334cf0] = ==;

		*node[0x5a9469334c90] = 0;

		*node[0x5a9469334cc0] = 0;

		*node[0x5a9469334d20] = ;;

		*node[0x5a9469334d50] = print;

		*node[0x5a9469334d80] = 0;

		*node[0x5a9469334db0] = else;

		*node[0x5a9469334de0] = op_no;

		*node[0x5a9469334e10] = ;;

		*node[0x5a9469334e40] = print;

		*node[0x5a9469334e70] = 0;

		*node[0x5a9469334ea0] = else;

		*node[0x5a9469334ed0] = op_no;

		*node[0x5a9469334f00] = ;;

		*node[0x5a9469335050] = =;

		*node[0x5a9469334f30] = 3;

		*node[0x5a9469335020] = -;

		*node[0x5a9469334f60] = 0;

		*node[0x5a9469334ff0] = /;

		*node[0x5a9469334f90] = 0;

		*node[0x5a9469334fc0] = 0;

		*node[0x5a9469335080] = ;;

		*node[0x5a94693350b0] = print;

		*node[0x5a94693350e0] = 0;

		*node[0x5a9469335110] = ;;

		*node[0x5a9469335140] = print;

		*node[0x5a9469335170] = 0;

		*node[0x5a94693351a0] = ;;

		*node[0x5a94693351d0] = return;

		*node[0x5a9469335200] = 0;

		*node[0x5a9469335230] = ;;

		*node[0x5a94693352b0] = 0;

		*node[0x5a94693352e0] = 0;

		*node[0x5a9469335310] = 0;

		*node[0x5a9469335340] = 0;

		*node[0x5a9469335370] = ;;

		*node[0x5a9469335460] = =;

		*node[0x5a94693353a0] = 0;

		*node[0x5a9469335430] = -;

		*node[0x5a94693353d0] = 0;

		*node[0x5a9469335400] = 1;

		*node[0x5a9469335490] = ;;

		*node[0x5a9469335520] = =;

		*node[0x5a94693354c0] = 0;

		*node[0x5a94693354f0] = 1;

		*node[0x5a9469335550] = ;;

		*node[0x5a94693355e0] = =;

		*node[0x5a9469335580] = 0;

		*node[0x5a94693355b0] = 2;

		*node[0x5a9469335610] = ;;

		*node[0x5a9469335640] = if;

		*node[0x5a9469335670] = op_no;

		*node[0x5a9469335700] = ==;

		*node[0x5a94693356a0] = 0;

		*node[0x5a94693356d0] = 0;

		*node[0x5a9469335730] = ;;

		*node[0x5a94693357c0] = =;

		*node[0x5a9469335760] = 1;

		*node[0x5a9469335790] = 0;

		*node[0x5a94693357f0] = ;;

		*node[0x5a9469335970] = =;

		*node[0x5a9469335820] = 2;

		*node[0x5a9469335940] = -;

		*node[0x5a9469335880] = 0;

		*node[0x5a9469335910] = /;

		*node[0x5a94693358b0] = 0;

		*node[0x5a94693358e0] = 0;

		*node[0x5a94693359a0] = ;;

		*node[0x5a94693359d0] = print;

		*node[0x5a9469335a00] = 0;

		*node[0x5a9469335a30] = ;;

		*node[0x5a9469335a60] = print;

		*node[0x5a9469335a90] = 0;

		*node[0x5a9469335ac0] = 0;

		*node[0x5a9469335af0] = else;

		*node[0x5a9469335b20] = op_no;

		*node[0x5a9469335b50] = ;;

		*node[0x5a9469335d60] = =;

		*node[0x5a9469335b80] = 3;

		*node[0x5a9469335d30] = -;

		*node[0x5a9469335c10] = *;

		*node[0x5a9469335bb0] = 0;

		*node[0x5a9469335be0] = 0;

		*node[0x5a9469335d00] = *;

		*node[0x5a9469335ca0] = *;

		*node[0x5a9469335c40] = 4;

		*node[0x5a9469335c70] = 0;

		*node[0x5a9469335cd0] = 0;

		*node[0x5a9469335d90] = ;;

		*node[0x5a9469335dc0] = if;

		*node[0x5a9469335df0] = op_no;

		*node[0x5a9469335e80] = >;

		*node[0x5a9469335e20] = 0;

		*node[0x5a9469335e50] = 0;

		*node[0x5a9469335eb0] = ;;

		*node[0x5a9469335fc0] = =;

		*node[0x5a9469335ee0] = 4;

		*node[0x5a9469335f90] = sqrt;

		*node[0x5a9469335f60] = 0;

		*node[0x5a9469335ff0] = ;;

		*node[0x5a9469336200] = =;

		*node[0x5a9469336020] = 0;

		*node[0x5a94693361d0] = /;

		*node[0x5a9469336110] = -;

		*node[0x5a94693360b0] = -;

		*node[0x5a9469336050] = 0;

		*node[0x5a9469336080] = 0;

		*node[0x5a94693360e0] = 0;

		*node[0x5a94693361a0] = *;

		*node[0x5a9469336140] = 2;

		*node[0x5a9469336170] = 0;

		*node[0x5a9469336230] = ;;

		*node[0x5a9469336440] = =;

		*node[0x5a9469336260] = 0;

		*node[0x5a9469336410] = /;

		*node[0x5a9469336350] = +;

		*node[0x5a94693362f0] = -;

		*node[0x5a9469336290] = 0;

		*node[0x5a94693362c0] = 0;

		*node[0x5a9469336320] = 0;

		*node[0x5a94693363e0] = *;

		*node[0x5a9469336380] = 2;

		*node[0x5a94693363b0] = 0;

		*node[0x5a9469336470] = ;;

		*node[0x5a94693364a0] = print;

		*node[0x5a94693364d0] = 0;

		*node[0x5a9469336500] = ;;

		*node[0x5a9469336530] = print;

		*node[0x5a9469336560] = 0;

		*node[0x5a9469336590] = 0;

		*node[0x5a94693365c0] = elseif;

		*node[0x5a94693365f0] = op_no;

		*node[0x5a9469336680] = ==;

		*node[0x5a9469336620] = 0;

		*node[0x5a9469336650] = 0;

		*node[0x5a94693366b0] = ;;

		*node[0x5a9469336860] = =;

		*node[0x5a94693366e0] = 0;

		*node[0x5a9469336830] = -;

		*node[0x5a9469336710] = 0;

		*node[0x5a9469336800] = /;

		*node[0x5a9469336740] = 0;

		*node[0x5a94693367d0] = *;

		*node[0x5a9469336770] = 2;

		*node[0x5a94693367a0] = 0;

		*node[0x5a9469336890] = ;;

		*node[0x5a94693368c0] = print;

		*node[0x5a94693368f0] = 0;

		*node[0x5a9469336920] = ;;

		*node[0x5a9469336950] = print;

		*node[0x5a9469336980] = 0;

		*node[0x5a94693369b0] = else;

		*node[0x5a94693369e0] = op_no;

		*node[0x5a9469336a10] = ;;

		*node[0x5a9469336a40] = print;

		*node[0x5a9469336a70] = 0;

		*node[0x5a9469336aa0] = ;;

		*node[0x5a9469336ad0] = return;

		*node[0x5a9469336b00] = 0;

		*node[0x5a9469336b30] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe66d402f0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x595e90e33f10] = ;;

		*node[0x595e90e33f90] = 0;

		*node[0x595e90e33fc0] = ;;

		*node[0x595e90e33ff0] = input;

		*node[0x595e90e34020] = 0;

		*node[0x595e90e34050] = 1;

		*node[0x595e90e34080] = 2;

		*node[0x595e90e340e0] = ;;

		*node[0x595e90e34140] = 0;

		*node[0x595e90e34170] = 0;

		*node[0x595e90e341a0] = 0;

		*node[0x595e90e341d0] = ;;

		*node[0x595e90e34250] = 0;

		*node[0x595e90e34280] = 0;

		*node[0x595e90e342b0] = 0;

		*node[0x595e90e342e0] = 0;

		*node[0x595e90e34310] = ;;

		*node[0x595e90e34340] = if;

		*node[0x595e90e34370] = op_no;

		*node[0x595e90e34400] = ==;

		*node[0x595e90e343a0] = 0;

		*node[0x595e90e343d0] = 0;

		*node[0x595e90e34430] = ;;

		*node[0x595e90e34490] = 0;

		*node[0x595e90e344c0] = 0;

		*node[0x595e90e344f0] = else;

		*node[0x595e90e34520] = op_no;

		*node[0x595e90e34550] = ;;

		*node[0x595e90e345e0] = 0;

		*node[0x595e90e34610] = 0;

		*node[0x595e90e34640] = 0;

		*node[0x595e90e34670] = ;;

		*node[0x595e90e346a0] = return;

		*node[0x595e90e346d0] = 0;

		*node[0x595e90e34700] = ;;

		*node[0x595e90e34780] = 0;

		*node[0x595e90e347b0] = 0;

		*node[0x595e90e347e0] = 0;

		*node[0x595e90e34810] = ;;

		*node[0x595e90e34900] = =;

		*node[0x595e90e34840] = 0;

		*node[0x595e90e348d0] = -;

		*node[0x595e90e34870] = 0;

		*node[0x595e90e348a0] = 1;

		*node[0x595e90e34930] = ;;

		*node[0x595e90e349c0] = =;

		*node[0x595e90e34960] = 1;

		*node[0x595e90e34990] = 1;

		*node[0x595e90e349f0] = ;;

		*node[0x595e90e34ab0] = =;

		*node[0x595e90e34a20] = 2;

		*node[0x595e90e34a80] = 1000;

		*node[0x595e90e34ae0] = ;;

		*node[0x595e90e34b10] = if;

		*node[0x595e90e34b40] = op_no;

		*node[0x595e90e34bd0] = ==;

		*node[0x595e90e34b70] = 0;

		*node[0x595e90e34ba0] = 0;

		*node[0x595e90e34c00] = ;;

		*node[0x595e90e34c30] = if;

		*node[0x595e90e34c60] = op_no;

		*node[0x595e90e34cf0] = ==;

		*node[0x595e90e34c90] = 0;

		*node[0x595e90e34cc0] = 0;

		*node[0x595e90e34d20] = ;;

		*node[0x595e90e34d50] = print;

		*node[0x595e90e34d80] = 0;

		*node[0x595e90e34db0] = else;

		*node[0x595e90e34de0] = op_no;

		*node[0x595e90e34e10] = ;;

		*node[0x595e90e34e40] = print;

		*node[0x595e90e34e70] = 0;

		*node[0x595e90e34ea0] = else;

		*node[0x595e90e34ed0] = op_no;

		*node[0x595e90e34f00] = ;;

		*node[0x595e90e35050] = =;

		*node[0x595e90e34f30] = 3;

		*node[0x595e90e35020] = -;

		*node[0x595e90e34f60] = 0;

		*node[0x595e90e34ff0] = /;

		*node[0x595e90e34f90] = 0;

		*node[0x595e90e34fc0] = 0;

		*node[0x595e90e35080] = ;;

		*node[0x595e90e350b0] = print;

		*node[0x595e90e350e0] = 0;

		*node[0x595e90e35110] = ;;

		*node[0x595e90e35140] = print;

		*node[0x595e90e35170] = 0;

		*node[0x595e90e351a0] = ;;

		*node[0x595e90e351d0] = return;

		*node[0x595e90e35200] = 0;

		*node[0x595e90e35230] = ;;

		*node[0x595e90e352b0] = 0;

		*node[0x595e90e352e0] = 0;

		*node[0x595e90e35310] = 0;

		*node[0x595e90e35340] = 0;

		*node[0x595e90e35370] = ;;

		*node[0x595e90e35460] = =;

		*node[0x595e90e353a0] = 0;

		*node[0x595e90e35430] = -;

		*node[0x595e90e353d0] = 0;

		*node[0x595e90e35400] = 1;

		*node[0x595e90e35490] = ;;

		*node[0x595e90e35520] = =;

		*node[0x595e90e354c0] = 0;

		*node[0x595e90e354f0] = 1;

		*node[0x595e90e35550] = ;;

		*node[0x595e90e355e0] = =;

		*node[0x595e90e35580] = 0;

		*node[0x595e90e355b0] = 2;

		*node[0x595e90e35610] = ;;

		*node[0x595e90e35640] = if;

		*node[0x595e90e35670] = op_no;

		*node[0x595e90e35700] = ==;

		*node[0x595e90e356a0] = 0;

		*node[0x595e90e356d0] = 0;

		*node[0x595e90e35730] = ;;

		*node[0x595e90e357c0] = =;

		*node[0x595e90e35760] = 1;

		*node[0x595e90e35790] = 0;

		*node[0x595e90e357f0] = ;;

		*node[0x595e90e35970] = =;

		*node[0x595e90e35820] = 2;

		*node[0x595e90e35940] = -;

		*node[0x595e90e35880] = 0;

		*node[0x595e90e35910] = /;

		*node[0x595e90e358b0] = 0;

		*node[0x595e90e358e0] = 0;

		*node[0x595e90e359a0] = ;;

		*node[0x595e90e359d0] = print;

		*node[0x595e90e35a00] = 0;

		*node[0x595e90e35a30] = ;;

		*node[0x595e90e35a60] = print;

		*node[0x595e90e35a90] = 0;

		*node[0x595e90e35ac0] = 0;

		*node[0x595e90e35af0] = else;

		*node[0x595e90e35b20] = op_no;

		*node[0x595e90e35b50] = ;;

		*node[0x595e90e35d60] = =;

		*node[0x595e90e35b80] = 3;

		*node[0x595e90e35d30] = -;

		*node[0x595e90e35c10] = *;

		*node[0x595e90e35bb0] = 0;

		*node[0x595e90e35be0] = 0;

		*node[0x595e90e35d00] = *;

		*node[0x595e90e35ca0] = *;

		*node[0x595e90e35c40] = 4;

		*node[0x595e90e35c70] = 0;

		*node[0x595e90e35cd0] = 0;

		*node[0x595e90e35d90] = ;;

		*node[0x595e90e35dc0] = if;

		*node[0x595e90e35df0] = op_no;

		*node[0x595e90e35e80] = >;

		*node[0x595e90e35e20] = 0;

		*node[0x595e90e35e50] = 0;

		*node[0x595e90e35eb0] = ;;

		*node[0x595e90e35fc0] = =;

		*node[0x595e90e35ee0] = 4;

		*node[0x595e90e35f90] = sqrt;

		*node[0x595e90e35f60] = 0;

		*node[0x595e90e35ff0] = ;;

		*node[0x595e90e36200] = =;

		*node[0x595e90e36020] = 0;

		*node[0x595e90e361d0] = /;

		*node[0x595e90e36110] = -;

		*node[0x595e90e360b0] = -;

		*node[0x595e90e36050] = 0;

		*node[0x595e90e36080] = 0;

		*node[0x595e90e360e0] = 0;

		*node[0x595e90e361a0] = *;

		*node[0x595e90e36140] = 2;

		*node[0x595e90e36170] = 0;

		*node[0x595e90e36230] = ;;

		*node[0x595e90e36440] = =;

		*node[0x595e90e36260] = 0;

		*node[0x595e90e36410] = /;

		*node[0x595e90e36350] = +;

		*node[0x595e90e362f0] = -;

		*node[0x595e90e36290] = 0;

		*node[0x595e90e362c0] = 0;

		*node[0x595e90e36320] = 0;

		*node[0x595e90e363e0] = *;

		*node[0x595e90e36380] = 2;

		*node[0x595e90e363b0] = 0;

		*node[0x595e90e36470] = ;;

		*node[0x595e90e364a0] = print;

		*node[0x595e90e364d0] = 0;

		*node[0x595e90e36500] = ;;

		*node[0x595e90e36530] = print;

		*node[0x595e90e36560] = 0;

		*node[0x595e90e36590] = 0;

		*node[0x595e90e365c0] = elseif;

		*node[0x595e90e365f0] = op_no;

		*node[0x595e90e36680] = ==;

		*node[0x595e90e36620] = 0;

		*node[0x595e90e36650] = 0;

		*node[0x595e90e366b0] = ;;

		*node[0x595e90e36860] = =;

		*node[0x595e90e366e0] = 0;

		*node[0x595e90e36830] = -;

		*node[0x595e90e36710] = 0;

		*node[0x595e90e36800] = /;

		*node[0x595e90e36740] = 0;

		*node[0x595e90e367d0] = *;

		*node[0x595e90e36770] = 2;

		*node[0x595e90e367a0] = 0;

		*node[0x595e90e36890] = ;;

		*node[0x595e90e368c0] = print;

		*node[0x595e90e368f0] = 0;

		*node[0x595e90e36920] = ;;

		*node[0x595e90e36950] = print;

		*node[0x595e90e36980] = 0;

		*node[0x595e90e369b0] = else;

		*node[0x595e90e369e0] = op_no;

		*node[0x595e90e36a10] = ;;

		*node[0x595e90e36a40] = print;

		*node[0x595e90e36a70] = 0;

		*node[0x595e90e36aa0] = ;;

		*node[0x595e90e36ad0] = return;

		*node[0x595e90e36b00] = 0;

		*node[0x595e90e36b30] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd4866c840] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5aa24bf6af10] = ;;

		*node[0x5aa24bf6af90] = 0;

		*node[0x5aa24bf6afc0] = ;;

		*node[0x5aa24bf6aff0] = input;

		*node[0x5aa24bf6b020] = 0;

		*node[0x5aa24bf6b050] = 1;

		*node[0x5aa24bf6b080] = 2;

		*node[0x5aa24bf6b0e0] = ;;

		*node[0x5aa24bf6b140] = 0;

		*node[0x5aa24bf6b170] = 0;

		*node[0x5aa24bf6b1a0] = 0;

		*node[0x5aa24bf6b1d0] = ;;

		*node[0x5aa24bf6b250] = 0;

		*node[0x5aa24bf6b280] = 0;

		*node[0x5aa24bf6b2b0] = 0;

		*node[0x5aa24bf6b2e0] = 0;

		*node[0x5aa24bf6b310] = ;;

		*node[0x5aa24bf6b340] = if;

		*node[0x5aa24bf6b370] = op_no;

		*node[0x5aa24bf6b400] = ==;

		*node[0x5aa24bf6b3a0] = 0;

		*node[0x5aa24bf6b3d0] = 0;

		*node[0x5aa24bf6b430] = ;;

		*node[0x5aa24bf6b490] = 0;

		*node[0x5aa24bf6b4c0] = 0;

		*node[0x5aa24bf6b4f0] = else;

		*node[0x5aa24bf6b520] = op_no;

		*node[0x5aa24bf6b550] = ;;

		*node[0x5aa24bf6b5e0] = 0;

		*node[0x5aa24bf6b610] = 0;

		*node[0x5aa24bf6b640] = 0;

		*node[0x5aa24bf6b670] = ;;

		*node[0x5aa24bf6b6a0] = return;

		*node[0x5aa24bf6b6d0] = 0;

		*node[0x5aa24bf6b700] = ;;

		*node[0x5aa24bf6b780] = 0;

		*node[0x5aa24bf6b7b0] = 0;

		*node[0x5aa24bf6b7e0] = 0;

		*node[0x5aa24bf6b810] = ;;

		*node[0x5aa24bf6b900] = =;

		*node[0x5aa24bf6b840] = 0;

		*node[0x5aa24bf6b8d0] = -;

		*node[0x5aa24bf6b870] = 0;

		*node[0x5aa24bf6b8a0] = 1;

		*node[0x5aa24bf6b930] = ;;

		*node[0x5aa24bf6b9c0] = =;

		*node[0x5aa24bf6b960] = 1;

		*node[0x5aa24bf6b990] = 1;

		*node[0x5aa24bf6b9f0] = ;;

		*node[0x5aa24bf6bab0] = =;

		*node[0x5aa24bf6ba20] = 2;

		*node[0x5aa24bf6ba80] = 1000;

		*node[0x5aa24bf6bae0] = ;;

		*node[0x5aa24bf6bb10] = if;

		*node[0x5aa24bf6bb40] = op_no;

		*node[0x5aa24bf6bbd0] = ==;

		*node[0x5aa24bf6bb70] = 0;

		*node[0x5aa24bf6bba0] = 0;

		*node[0x5aa24bf6bc00] = ;;

		*node[0x5aa24bf6bc30] = if;

		*node[0x5aa24bf6bc60] = op_no;

		*node[0x5aa24bf6bcf0] = ==;

		*node[0x5aa24bf6bc90] = 0;

		*node[0x5aa24bf6bcc0] = 0;

		*node[0x5aa24bf6bd20] = ;;

		*node[0x5aa24bf6bd50] = print;

		*node[0x5aa24bf6bd80] = 0;

		*node[0x5aa24bf6bdb0] = else;

		*node[0x5aa24bf6bde0] = op_no;

		*node[0x5aa24bf6be10] = ;;

		*node[0x5aa24bf6be40] = print;

		*node[0x5aa24bf6be70] = 0;

		*node[0x5aa24bf6bea0] = else;

		*node[0x5aa24bf6bed0] = op_no;

		*node[0x5aa24bf6bf00] = ;;

		*node[0x5aa24bf6c050] = =;

		*node[0x5aa24bf6bf30] = 3;

		*node[0x5aa24bf6c020] = -;

		*node[0x5aa24bf6bf60] = 0;

		*node[0x5aa24bf6bff0] = /;

		*node[0x5aa24bf6bf90] = 0;

		*node[0x5aa24bf6bfc0] = 0;

		*node[0x5aa24bf6c080] = ;;

		*node[0x5aa24bf6c0b0] = print;

		*node[0x5aa24bf6c0e0] = 0;

		*node[0x5aa24bf6c110] = ;;

		*node[0x5aa24bf6c140] = print;

		*node[0x5aa24bf6c170] = 0;

		*node[0x5aa24bf6c1a0] = ;;

		*node[0x5aa24bf6c1d0] = return;

		*node[0x5aa24bf6c200] = 0;

		*node[0x5aa24bf6c230] = ;;

		*node[0x5aa24bf6c2b0] = 0;

		*node[0x5aa24bf6c2e0] = 0;

		*node[0x5aa24bf6c310] = 0;

		*node[0x5aa24bf6c340] = 0;

		*node[0x5aa24bf6c370] = ;;

		*node[0x5aa24bf6c460] = =;

		*node[0x5aa24bf6c3a0] = 0;

		*node[0x5aa24bf6c430] = -;

		*node[0x5aa24bf6c3d0] = 0;

		*node[0x5aa24bf6c400] = 1;

		*node[0x5aa24bf6c490] = ;;

		*node[0x5aa24bf6c520] = =;

		*node[0x5aa24bf6c4c0] = 0;

		*node[0x5aa24bf6c4f0] = 1;

		*node[0x5aa24bf6c550] = ;;

		*node[0x5aa24bf6c5e0] = =;

		*node[0x5aa24bf6c580] = 0;

		*node[0x5aa24bf6c5b0] = 2;

		*node[0x5aa24bf6c610] = ;;

		*node[0x5aa24bf6c640] = if;

		*node[0x5aa24bf6c670] = op_no;

		*node[0x5aa24bf6c700] = ==;

		*node[0x5aa24bf6c6a0] = 0;

		*node[0x5aa24bf6c6d0] = 0;

		*node[0x5aa24bf6c730] = ;;

		*node[0x5aa24bf6c7c0] = =;

		*node[0x5aa24bf6c760] = 1;

		*node[0x5aa24bf6c790] = 0;

		*node[0x5aa24bf6c7f0] = ;;

		*node[0x5aa24bf6c970] = =;

		*node[0x5aa24bf6c820] = 2;

		*node[0x5aa24bf6c940] = -;

		*node[0x5aa24bf6c880] = 0;

		*node[0x5aa24bf6c910] = /;

		*node[0x5aa24bf6c8b0] = 0;

		*node[0x5aa24bf6c8e0] = 0;

		*node[0x5aa24bf6c9a0] = ;;

		*node[0x5aa24bf6c9d0] = print;

		*node[0x5aa24bf6ca00] = 0;

		*node[0x5aa24bf6ca30] = ;;

		*node[0x5aa24bf6ca60] = print;

		*node[0x5aa24bf6ca90] = 0;

		*node[0x5aa24bf6cac0] = 0;

		*node[0x5aa24bf6caf0] = else;

		*node[0x5aa24bf6cb20] = op_no;

		*node[0x5aa24bf6cb50] = ;;

		*node[0x5aa24bf6cd60] = =;

		*node[0x5aa24bf6cb80] = 3;

		*node[0x5aa24bf6cd30] = -;

		*node[0x5aa24bf6cc10] = *;

		*node[0x5aa24bf6cbb0] = 0;

		*node[0x5aa24bf6cbe0] = 0;

		*node[0x5aa24bf6cd00] = *;

		*node[0x5aa24bf6cca0] = *;

		*node[0x5aa24bf6cc40] = 4;

		*node[0x5aa24bf6cc70] = 0;

		*node[0x5aa24bf6ccd0] = 0;

		*node[0x5aa24bf6cd90] = ;;

		*node[0x5aa24bf6cdc0] = if;

		*node[0x5aa24bf6cdf0] = op_no;

		*node[0x5aa24bf6ce80] = >;

		*node[0x5aa24bf6ce20] = 0;

		*node[0x5aa24bf6ce50] = 0;

		*node[0x5aa24bf6ceb0] = ;;

		*node[0x5aa24bf6cfc0] = =;

		*node[0x5aa24bf6cee0] = 4;

		*node[0x5aa24bf6cf90] = sqrt;

		*node[0x5aa24bf6cf60] = 0;

		*node[0x5aa24bf6cff0] = ;;

		*node[0x5aa24bf6d200] = =;

		*node[0x5aa24bf6d020] = 0;

		*node[0x5aa24bf6d1d0] = /;

		*node[0x5aa24bf6d110] = -;

		*node[0x5aa24bf6d0b0] = -;

		*node[0x5aa24bf6d050] = 0;

		*node[0x5aa24bf6d080] = 0;

		*node[0x5aa24bf6d0e0] = 0;

		*node[0x5aa24bf6d1a0] = *;

		*node[0x5aa24bf6d140] = 2;

		*node[0x5aa24bf6d170] = 0;

		*node[0x5aa24bf6d230] = ;;

		*node[0x5aa24bf6d440] = =;

		*node[0x5aa24bf6d260] = 0;

		*node[0x5aa24bf6d410] = /;

		*node[0x5aa24bf6d350] = +;

		*node[0x5aa24bf6d2f0] = -;

		*node[0x5aa24bf6d290] = 0;

		*node[0x5aa24bf6d2c0] = 0;

		*node[0x5aa24bf6d320] = 0;

		*node[0x5aa24bf6d3e0] = *;

		*node[0x5aa24bf6d380] = 2;

		*node[0x5aa24bf6d3b0] = 0;

		*node[0x5aa24bf6d470] = ;;

		*node[0x5aa24bf6d4a0] = print;

		*node[0x5aa24bf6d4d0] = 0;

		*node[0x5aa24bf6d500] = ;;

		*node[0x5aa24bf6d530] = print;

		*node[0x5aa24bf6d560] = 0;

		*node[0x5aa24bf6d590] = 0;

		*node[0x5aa24bf6d5c0] = elseif;

		*node[0x5aa24bf6d5f0] = op_no;

		*node[0x5aa24bf6d680] = ==;

		*node[0x5aa24bf6d620] = 0;

		*node[0x5aa24bf6d650] = 0;

		*node[0x5aa24bf6d6b0] = ;;

		*node[0x5aa24bf6d860] = =;

		*node[0x5aa24bf6d6e0] = 0;

		*node[0x5aa24bf6d830] = -;

		*node[0x5aa24bf6d710] = 0;

		*node[0x5aa24bf6d800] = /;

		*node[0x5aa24bf6d740] = 0;

		*node[0x5aa24bf6d7d0] = *;

		*node[0x5aa24bf6d770] = 2;

		*node[0x5aa24bf6d7a0] = 0;

		*node[0x5aa24bf6d890] = ;;

		*node[0x5aa24bf6d8c0] = print;

		*node[0x5aa24bf6d8f0] = 0;

		*node[0x5aa24bf6d920] = ;;

		*node[0x5aa24bf6d950] = print;

		*node[0x5aa24bf6d980] = 0;

		*node[0x5aa24bf6d9b0] = else;

		*node[0x5aa24bf6d9e0] = op_no;

		*node[0x5aa24bf6da10] = ;;

		*node[0x5aa24bf6da40] = print;

		*node[0x5aa24bf6da70] = 0;

		*node[0x5aa24bf6daa0] = ;;

		*node[0x5aa24bf6dad0] = return;

		*node[0x5aa24bf6db00] = 0;

		*node[0x5aa24bf6db30] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe02c987b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5d1e23f68f10] = ;;

		*node[0x5d1e23f68f90] = 0;

		*node[0x5d1e23f68fc0] = ;;

		*node[0x5d1e23f68ff0] = input;

		*node[0x5d1e23f69020] = 0;

		*node[0x5d1e23f69050] = 1;

		*node[0x5d1e23f69080] = 2;

		*node[0x5d1e23f690e0] = ;;

		*node[0x5d1e23f69140] = 0;

		*node[0x5d1e23f69170] = 0;

		*node[0x5d1e23f691a0] = 0;

		*node[0x5d1e23f691d0] = ;;

		*node[0x5d1e23f69250] = 0;

		*node[0x5d1e23f69280] = 0;

		*node[0x5d1e23f692b0] = 0;

		*node[0x5d1e23f692e0] = 0;

		*node[0x5d1e23f69310] = ;;

		*node[0x5d1e23f69340] = if;

		*node[0x5d1e23f69370] = op_no;

		*node[0x5d1e23f69400] = ==;

		*node[0x5d1e23f693a0] = 0;

		*node[0x5d1e23f693d0] = 0;

		*node[0x5d1e23f69430] = ;;

		*node[0x5d1e23f69490] = 0;

		*node[0x5d1e23f694c0] = 0;

		*node[0x5d1e23f694f0] = else;

		*node[0x5d1e23f69520] = op_no;

		*node[0x5d1e23f69550] = ;;

		*node[0x5d1e23f695e0] = 0;

		*node[0x5d1e23f69610] = 0;

		*node[0x5d1e23f69640] = 0;

		*node[0x5d1e23f69670] = ;;

		*node[0x5d1e23f696a0] = return;

		*node[0x5d1e23f696d0] = 0;

		*node[0x5d1e23f69700] = ;;

		*node[0x5d1e23f69780] = 0;

		*node[0x5d1e23f697b0] = 0;

		*node[0x5d1e23f697e0] = 0;

		*node[0x5d1e23f69810] = ;;

		*node[0x5d1e23f69900] = =;

		*node[0x5d1e23f69840] = 0;

		*node[0x5d1e23f698d0] = -;

		*node[0x5d1e23f69870] = 0;

		*node[0x5d1e23f698a0] = 1;

		*node[0x5d1e23f69930] = ;;

		*node[0x5d1e23f699c0] = =;

		*node[0x5d1e23f69960] = 1;

		*node[0x5d1e23f69990] = 1;

		*node[0x5d1e23f699f0] = ;;

		*node[0x5d1e23f69ab0] = =;

		*node[0x5d1e23f69a20] = 2;

		*node[0x5d1e23f69a80] = 1000;

		*node[0x5d1e23f69ae0] = ;;

		*node[0x5d1e23f69b10] = if;

		*node[0x5d1e23f69b40] = op_no;

		*node[0x5d1e23f69bd0] = ==;

		*node[0x5d1e23f69b70] = 0;

		*node[0x5d1e23f69ba0] = 0;

		*node[0x5d1e23f69c00] = ;;

		*node[0x5d1e23f69c30] = if;

		*node[0x5d1e23f69c60] = op_no;

		*node[0x5d1e23f69cf0] = ==;

		*node[0x5d1e23f69c90] = 0;

		*node[0x5d1e23f69cc0] = 0;

		*node[0x5d1e23f69d20] = ;;

		*node[0x5d1e23f69d50] = print;

		*node[0x5d1e23f69d80] = 0;

		*node[0x5d1e23f69db0] = else;

		*node[0x5d1e23f69de0] = op_no;

		*node[0x5d1e23f69e10] = ;;

		*node[0x5d1e23f69e40] = print;

		*node[0x5d1e23f69e70] = 0;

		*node[0x5d1e23f69ea0] = else;

		*node[0x5d1e23f69ed0] = op_no;

		*node[0x5d1e23f69f00] = ;;

		*node[0x5d1e23f6a050] = =;

		*node[0x5d1e23f69f30] = 3;

		*node[0x5d1e23f6a020] = -;

		*node[0x5d1e23f69f60] = 0;

		*node[0x5d1e23f69ff0] = /;

		*node[0x5d1e23f69f90] = 0;

		*node[0x5d1e23f69fc0] = 0;

		*node[0x5d1e23f6a080] = ;;

		*node[0x5d1e23f6a0b0] = print;

		*node[0x5d1e23f6a0e0] = 0;

		*node[0x5d1e23f6a110] = ;;

		*node[0x5d1e23f6a140] = print;

		*node[0x5d1e23f6a170] = 0;

		*node[0x5d1e23f6a1a0] = ;;

		*node[0x5d1e23f6a1d0] = return;

		*node[0x5d1e23f6a200] = 0;

		*node[0x5d1e23f6a230] = ;;

		*node[0x5d1e23f6a2b0] = 0;

		*node[0x5d1e23f6a2e0] = 0;

		*node[0x5d1e23f6a310] = 0;

		*node[0x5d1e23f6a340] = 0;

		*node[0x5d1e23f6a370] = ;;

		*node[0x5d1e23f6a460] = =;

		*node[0x5d1e23f6a3a0] = 0;

		*node[0x5d1e23f6a430] = -;

		*node[0x5d1e23f6a3d0] = 0;

		*node[0x5d1e23f6a400] = 1;

		*node[0x5d1e23f6a490] = ;;

		*node[0x5d1e23f6a520] = =;

		*node[0x5d1e23f6a4c0] = 0;

		*node[0x5d1e23f6a4f0] = 1;

		*node[0x5d1e23f6a550] = ;;

		*node[0x5d1e23f6a5e0] = =;

		*node[0x5d1e23f6a580] = 0;

		*node[0x5d1e23f6a5b0] = 2;

		*node[0x5d1e23f6a610] = ;;

		*node[0x5d1e23f6a640] = if;

		*node[0x5d1e23f6a670] = op_no;

		*node[0x5d1e23f6a700] = ==;

		*node[0x5d1e23f6a6a0] = 0;

		*node[0x5d1e23f6a6d0] = 0;

		*node[0x5d1e23f6a730] = ;;

		*node[0x5d1e23f6a7c0] = =;

		*node[0x5d1e23f6a760] = 1;

		*node[0x5d1e23f6a790] = 0;

		*node[0x5d1e23f6a7f0] = ;;

		*node[0x5d1e23f6a970] = =;

		*node[0x5d1e23f6a820] = 2;

		*node[0x5d1e23f6a940] = -;

		*node[0x5d1e23f6a880] = 0;

		*node[0x5d1e23f6a910] = /;

		*node[0x5d1e23f6a8b0] = 0;

		*node[0x5d1e23f6a8e0] = 0;

		*node[0x5d1e23f6a9a0] = ;;

		*node[0x5d1e23f6a9d0] = print;

		*node[0x5d1e23f6aa00] = 0;

		*node[0x5d1e23f6aa30] = ;;

		*node[0x5d1e23f6aa60] = print;

		*node[0x5d1e23f6aa90] = 0;

		*node[0x5d1e23f6aac0] = 0;

		*node[0x5d1e23f6aaf0] = else;

		*node[0x5d1e23f6ab20] = op_no;

		*node[0x5d1e23f6ab50] = ;;

		*node[0x5d1e23f6ad60] = =;

		*node[0x5d1e23f6ab80] = 3;

		*node[0x5d1e23f6ad30] = -;

		*node[0x5d1e23f6ac10] = *;

		*node[0x5d1e23f6abb0] = 0;

		*node[0x5d1e23f6abe0] = 0;

		*node[0x5d1e23f6ad00] = *;

		*node[0x5d1e23f6aca0] = *;

		*node[0x5d1e23f6ac40] = 4;

		*node[0x5d1e23f6ac70] = 0;

		*node[0x5d1e23f6acd0] = 0;

		*node[0x5d1e23f6ad90] = ;;

		*node[0x5d1e23f6adc0] = if;

		*node[0x5d1e23f6adf0] = op_no;

		*node[0x5d1e23f6ae80] = >;

		*node[0x5d1e23f6ae20] = 0;

		*node[0x5d1e23f6ae50] = 0;

		*node[0x5d1e23f6aeb0] = ;;

		*node[0x5d1e23f6afc0] = =;

		*node[0x5d1e23f6aee0] = 4;

		*node[0x5d1e23f6af90] = sqrt;

		*node[0x5d1e23f6af60] = 0;

		*node[0x5d1e23f6aff0] = ;;

		*node[0x5d1e23f6b200] = =;

		*node[0x5d1e23f6b020] = 0;

		*node[0x5d1e23f6b1d0] = /;

		*node[0x5d1e23f6b110] = -;

		*node[0x5d1e23f6b0b0] = -;

		*node[0x5d1e23f6b050] = 0;

		*node[0x5d1e23f6b080] = 0;

		*node[0x5d1e23f6b0e0] = 0;

		*node[0x5d1e23f6b1a0] = *;

		*node[0x5d1e23f6b140] = 2;

		*node[0x5d1e23f6b170] = 0;

		*node[0x5d1e23f6b230] = ;;

		*node[0x5d1e23f6b440] = =;

		*node[0x5d1e23f6b260] = 0;

		*node[0x5d1e23f6b410] = /;

		*node[0x5d1e23f6b350] = +;

		*node[0x5d1e23f6b2f0] = -;

		*node[0x5d1e23f6b290] = 0;

		*node[0x5d1e23f6b2c0] = 0;

		*node[0x5d1e23f6b320] = 0;

		*node[0x5d1e23f6b3e0] = *;

		*node[0x5d1e23f6b380] = 2;

		*node[0x5d1e23f6b3b0] = 0;

		*node[0x5d1e23f6b470] = ;;

		*node[0x5d1e23f6b4a0] = print;

		*node[0x5d1e23f6b4d0] = 0;

		*node[0x5d1e23f6b500] = ;;

		*node[0x5d1e23f6b530] = print;

		*node[0x5d1e23f6b560] = 0;

		*node[0x5d1e23f6b590] = 0;

		*node[0x5d1e23f6b5c0] = elseif;

		*node[0x5d1e23f6b5f0] = op_no;

		*node[0x5d1e23f6b680] = ==;

		*node[0x5d1e23f6b620] = 0;

		*node[0x5d1e23f6b650] = 0;

		*node[0x5d1e23f6b6b0] = ;;

		*node[0x5d1e23f6b860] = =;

		*node[0x5d1e23f6b6e0] = 0;

		*node[0x5d1e23f6b830] = -;

		*node[0x5d1e23f6b710] = 0;

		*node[0x5d1e23f6b800] = /;

		*node[0x5d1e23f6b740] = 0;

		*node[0x5d1e23f6b7d0] = *;

		*node[0x5d1e23f6b770] = 2;

		*node[0x5d1e23f6b7a0] = 0;

		*node[0x5d1e23f6b890] = ;;

		*node[0x5d1e23f6b8c0] = print;

		*node[0x5d1e23f6b8f0] = 0;

		*node[0x5d1e23f6b920] = ;;

		*node[0x5d1e23f6b950] = print;

		*node[0x5d1e23f6b980] = 0;

		*node[0x5d1e23f6b9b0] = else;

		*node[0x5d1e23f6b9e0] = op_no;

		*node[0x5d1e23f6ba10] = ;;

		*node[0x5d1e23f6ba40] = print;

		*node[0x5d1e23f6ba70] = 0;

		*node[0x5d1e23f6baa0] = ;;

		*node[0x5d1e23f6bad0] = return;

		*node[0x5d1e23f6bb00] = 0;

		*node[0x5d1e23f6bb30] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc744a94b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x563dd5c156d0] = ;;

		*node[0x563dd5c15750] = 0;

		*node[0x563dd5c15780] = ;;

		*node[0x563dd5c157b0] = input;

		*node[0x563dd5c157e0] = 0;

		*node[0x563dd5c15810] = 1;

		*node[0x563dd5c15840] = 2;

		*node[0x563dd5c158a0] = ;;

		*node[0x563dd5c15900] = 0;

		*node[0x563dd5c15930] = 0;

		*node[0x563dd5c15960] = 0;

		*node[0x563dd5c15990] = ;;

		*node[0x563dd5c15a10] = 0;

		*node[0x563dd5c15a40] = 0;

		*node[0x563dd5c15a70] = 0;

		*node[0x563dd5c15aa0] = 0;

		*node[0x563dd5c15ad0] = ;;

		*node[0x563dd5c15b00] = if;

		*node[0x563dd5c15b30] = op_no;

		*node[0x563dd5c15bc0] = ==;

		*node[0x563dd5c15b60] = 0;

		*node[0x563dd5c15b90] = 0;

		*node[0x563dd5c15bf0] = ;;

		*node[0x563dd5c15c50] = 0;

		*node[0x563dd5c15c80] = 0;

		*node[0x563dd5c15cb0] = else;

		*node[0x563dd5c15ce0] = op_no;

		*node[0x563dd5c15d10] = ;;

		*node[0x563dd5c15da0] = 0;

		*node[0x563dd5c15dd0] = 0;

		*node[0x563dd5c15e00] = 0;

		*node[0x563dd5c15e30] = ;;

		*node[0x563dd5c15e60] = return;

		*node[0x563dd5c15e90] = 0;

		*node[0x563dd5c15ec0] = ;;

		*node[0x563dd5c15f40] = 0;

		*node[0x563dd5c15f70] = 0;

		*node[0x563dd5c15fa0] = 0;

		*node[0x563dd5c15fd0] = ;;

		*node[0x563dd5c160c0] = =;

		*node[0x563dd5c16000] = 0;

		*node[0x563dd5c16090] = -;

		*node[0x563dd5c16030] = 0;

		*node[0x563dd5c16060] = 1;

		*node[0x563dd5c160f0] = ;;

		*node[0x563dd5c16180] = =;

		*node[0x563dd5c16120] = 1;

		*node[0x563dd5c16150] = 1;

		*node[0x563dd5c161b0] = ;;

		*node[0x563dd5c16270] = =;

		*node[0x563dd5c161e0] = 2;

		*node[0x563dd5c16240] = 1000;

		*node[0x563dd5c162a0] = ;;

		*node[0x563dd5c162d0] = if;

		*node[0x563dd5c16300] = op_no;

		*node[0x563dd5c16390] = ==;

		*node[0x563dd5c16330] = 0;

		*node[0x563dd5c16360] = 0;

		*node[0x563dd5c163c0] = ;;

		*node[0x563dd5c163f0] = if;

		*node[0x563dd5c16420] = op_no;

		*node[0x563dd5c164b0] = ==;

		*node[0x563dd5c16450] = 0;

		*node[0x563dd5c16480] = 0;

		*node[0x563dd5c164e0] = ;;

		*node[0x563dd5c16510] = print;

		*node[0x563dd5c16540] = 0;

		*node[0x563dd5c16570] = else;

		*node[0x563dd5c165a0] = op_no;

		*node[0x563dd5c165d0] = ;;

		*node[0x563dd5c16600] = print;

		*node[0x563dd5c16630] = 0;

		*node[0x563dd5c16660] = else;

		*node[0x563dd5c16690] = op_no;

		*node[0x563dd5c166c0] = ;;

		*node[0x563dd5c16810] = =;

		*node[0x563dd5c166f0] = 3;

		*node[0x563dd5c167e0] = -;

		*node[0x563dd5c16720] = 0;

		*node[0x563dd5c167b0] = /;

		*node[0x563dd5c16750] = 0;

		*node[0x563dd5c16780] = 0;

		*node[0x563dd5c16840] = ;;

		*node[0x563dd5c16870] = print;

		*node[0x563dd5c168a0] = 0;

		*node[0x563dd5c168d0] = ;;

		*node[0x563dd5c16900] = print;

		*node[0x563dd5c16930] = 0;

		*node[0x563dd5c16960] = ;;

		*node[0x563dd5c16990] = return;

		*node[0x563dd5c169c0] = 0;

		*node[0x563dd5c169f0] = ;;

		*node[0x563dd5c16a70] = 0;

		*node[0x563dd5c16aa0] = 0;

		*node[0x563dd5c16ad0] = 0;

		*node[0x563dd5c16b00] = 0;

		*node[0x563dd5c16b30] = ;;

		*node[0x563dd5c16c20] = =;

		*node[0x563dd5c16b60] = 0;

		*node[0x563dd5c16bf0] = -;

		*node[0x563dd5c16b90] = 0;

		*node[0x563dd5c16bc0] = 1;

		*node[0x563dd5c16c50] = ;;

		*node[0x563dd5c16ce0] = =;

		*node[0x563dd5c16c80] = 0;

		*node[0x563dd5c16cb0] = 1;

		*node[0x563dd5c16d10] = ;;

		*node[0x563dd5c16da0] = =;

		*node[0x563dd5c16d40] = 0;

		*node[0x563dd5c16d70] = 2;

		*node[0x563dd5c16dd0] = ;;

		*node[0x563dd5c16e00] = if;

		*node[0x563dd5c16e30] = op_no;

		*node[0x563dd5c16ec0] = ==;

		*node[0x563dd5c16e60] = 0;

		*node[0x563dd5c16e90] = 0;

		*node[0x563dd5c16ef0] = ;;

		*node[0x563dd5c16f80] = =;

		*node[0x563dd5c16f20] = 1;

		*node[0x563dd5c16f50] = 0;

		*node[0x563dd5c16fb0] = ;;

		*node[0x563dd5c17130] = =;

		*node[0x563dd5c16fe0] = 2;

		*node[0x563dd5c17100] = -;

		*node[0x563dd5c17040] = 0;

		*node[0x563dd5c170d0] = /;

		*node[0x563dd5c17070] = 0;

		*node[0x563dd5c170a0] = 0;

		*node[0x563dd5c17160] = ;;

		*node[0x563dd5c17190] = print;

		*node[0x563dd5c171c0] = 0;

		*node[0x563dd5c171f0] = ;;

		*node[0x563dd5c17220] = print;

		*node[0x563dd5c17250] = 0;

		*node[0x563dd5c17280] = 0;

		*node[0x563dd5c172b0] = else;

		*node[0x563dd5c172e0] = op_no;

		*node[0x563dd5c17310] = ;;

		*node[0x563dd5c17520] = =;

		*node[0x563dd5c17340] = 3;

		*node[0x563dd5c174f0] = -;

		*node[0x563dd5c173d0] = *;

		*node[0x563dd5c17370] = 0;

		*node[0x563dd5c173a0] = 0;

		*node[0x563dd5c174c0] = *;

		*node[0x563dd5c17460] = *;

		*node[0x563dd5c17400] = 4;

		*node[0x563dd5c17430] = 0;

		*node[0x563dd5c17490] = 0;

		*node[0x563dd5c17550] = ;;

		*node[0x563dd5c17580] = if;

		*node[0x563dd5c175b0] = op_no;

		*node[0x563dd5c17640] = >;

		*node[0x563dd5c175e0] = 0;

		*node[0x563dd5c17610] = 0;

		*node[0x563dd5c17670] = ;;

		*node[0x563dd5c17780] = =;

		*node[0x563dd5c176a0] = 4;

		*node[0x563dd5c17750] = sqrt;

		*node[0x563dd5c17720] = 0;

		*node[0x563dd5c177b0] = ;;

		*node[0x563dd5c179c0] = =;

		*node[0x563dd5c177e0] = 0;

		*node[0x563dd5c17990] = /;

		*node[0x563dd5c178d0] = -;

		*node[0x563dd5c17870] = -;

		*node[0x563dd5c17810] = 0;

		*node[0x563dd5c17840] = 0;

		*node[0x563dd5c178a0] = 0;

		*node[0x563dd5c17960] = *;

		*node[0x563dd5c17900] = 2;

		*node[0x563dd5c17930] = 0;

		*node[0x563dd5c179f0] = ;;

		*node[0x563dd5c17c00] = =;

		*node[0x563dd5c17a20] = 0;

		*node[0x563dd5c17bd0] = /;

		*node[0x563dd5c17b10] = +;

		*node[0x563dd5c17ab0] = -;

		*node[0x563dd5c17a50] = 0;

		*node[0x563dd5c17a80] = 0;

		*node[0x563dd5c17ae0] = 0;

		*node[0x563dd5c17ba0] = *;

		*node[0x563dd5c17b40] = 2;

		*node[0x563dd5c17b70] = 0;

		*node[0x563dd5c17c30] = ;;

		*node[0x563dd5c17c60] = print;

		*node[0x563dd5c17c90] = 0;

		*node[0x563dd5c17cc0] = ;;

		*node[0x563dd5c17cf0] = print;

		*node[0x563dd5c17d20] = 0;

		*node[0x563dd5c17d50] = 0;

		*node[0x563dd5c17d80] = elseif;

		*node[0x563dd5c17db0] = op_no;

		*node[0x563dd5c17e40] = ==;

		*node[0x563dd5c17de0] = 0;

		*node[0x563dd5c17e10] = 0;

		*node[0x563dd5c17e70] = ;;

		*node[0x563dd5c18020] = =;

		*node[0x563dd5c17ea0] = 0;

		*node[0x563dd5c17ff0] = -;

		*node[0x563dd5c17ed0] = 0;

		*node[0x563dd5c17fc0] = /;

		*node[0x563dd5c17f00] = 0;

		*node[0x563dd5c17f90] = *;

		*node[0x563dd5c17f30] = 2;

		*node[0x563dd5c17f60] = 0;

		*node[0x563dd5c18050] = ;;

		*node[0x563dd5c18080] = print;

		*node[0x563dd5c180b0] = 0;

		*node[0x563dd5c180e0] = ;;

		*node[0x563dd5c18110] = print;

		*node[0x563dd5c18140] = 0;

		*node[0x563dd5c18170] = else;

		*node[0x563dd5c181a0] = op_no;

		*node[0x563dd5c181d0] = ;;

		*node[0x563dd5c18200] = print;

		*node[0x563dd5c18230] = 0;

		*node[0x563dd5c18260] = ;;

		*node[0x563dd5c18290] = return;

		*node[0x563dd5c182c0] = 0;

		*node[0x563dd5c182f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff02fd0170] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x564c239c16d0] = ;;

		*node[0x564c239c1750] = 0;

		*node[0x564c239c1780] = ;;

		*node[0x564c239c17b0] = input;

		*node[0x564c239c17e0] = 0;

		*node[0x564c239c1810] = 1;

		*node[0x564c239c1840] = 2;

		*node[0x564c239c18a0] = ;;

		*node[0x564c239c1900] = 0;

		*node[0x564c239c1930] = 0;

		*node[0x564c239c1960] = 0;

		*node[0x564c239c1990] = ;;

		*node[0x564c239c1a10] = 0;

		*node[0x564c239c1a40] = 0;

		*node[0x564c239c1a70] = 0;

		*node[0x564c239c1aa0] = 0;

		*node[0x564c239c1ad0] = ;;

		*node[0x564c239c1b00] = if;

		*node[0x564c239c1b30] = op_no;

		*node[0x564c239c1bc0] = ==;

		*node[0x564c239c1b60] = 0;

		*node[0x564c239c1b90] = 0;

		*node[0x564c239c1bf0] = ;;

		*node[0x564c239c1c50] = 0;

		*node[0x564c239c1c80] = 0;

		*node[0x564c239c1cb0] = else;

		*node[0x564c239c1ce0] = op_no;

		*node[0x564c239c1d10] = ;;

		*node[0x564c239c1da0] = 0;

		*node[0x564c239c1dd0] = 0;

		*node[0x564c239c1e00] = 0;

		*node[0x564c239c1e30] = ;;

		*node[0x564c239c1e60] = return;

		*node[0x564c239c1e90] = 0;

		*node[0x564c239c1ec0] = ;;

		*node[0x564c239c1f40] = 0;

		*node[0x564c239c1f70] = 0;

		*node[0x564c239c1fa0] = 0;

		*node[0x564c239c1fd0] = ;;

		*node[0x564c239c20c0] = =;

		*node[0x564c239c2000] = 0;

		*node[0x564c239c2090] = -;

		*node[0x564c239c2030] = 0;

		*node[0x564c239c2060] = 1;

		*node[0x564c239c20f0] = ;;

		*node[0x564c239c2180] = =;

		*node[0x564c239c2120] = 1;

		*node[0x564c239c2150] = 1;

		*node[0x564c239c21b0] = ;;

		*node[0x564c239c2270] = =;

		*node[0x564c239c21e0] = 2;

		*node[0x564c239c2240] = 1000;

		*node[0x564c239c22a0] = ;;

		*node[0x564c239c22d0] = if;

		*node[0x564c239c2300] = op_no;

		*node[0x564c239c2390] = ==;

		*node[0x564c239c2330] = 0;

		*node[0x564c239c2360] = 0;

		*node[0x564c239c23c0] = ;;

		*node[0x564c239c23f0] = if;

		*node[0x564c239c2420] = op_no;

		*node[0x564c239c24b0] = ==;

		*node[0x564c239c2450] = 0;

		*node[0x564c239c2480] = 0;

		*node[0x564c239c24e0] = ;;

		*node[0x564c239c2510] = print;

		*node[0x564c239c2540] = 0;

		*node[0x564c239c2570] = else;

		*node[0x564c239c25a0] = op_no;

		*node[0x564c239c25d0] = ;;

		*node[0x564c239c2600] = print;

		*node[0x564c239c2630] = 0;

		*node[0x564c239c2660] = else;

		*node[0x564c239c2690] = op_no;

		*node[0x564c239c26c0] = ;;

		*node[0x564c239c2810] = =;

		*node[0x564c239c26f0] = 3;

		*node[0x564c239c27e0] = -;

		*node[0x564c239c2720] = 0;

		*node[0x564c239c27b0] = /;

		*node[0x564c239c2750] = 0;

		*node[0x564c239c2780] = 0;

		*node[0x564c239c2840] = ;;

		*node[0x564c239c2870] = print;

		*node[0x564c239c28a0] = 0;

		*node[0x564c239c28d0] = ;;

		*node[0x564c239c2900] = print;

		*node[0x564c239c2930] = 0;

		*node[0x564c239c2960] = ;;

		*node[0x564c239c2990] = return;

		*node[0x564c239c29c0] = 0;

		*node[0x564c239c29f0] = ;;

		*node[0x564c239c2a70] = 0;

		*node[0x564c239c2aa0] = 0;

		*node[0x564c239c2ad0] = 0;

		*node[0x564c239c2b00] = 0;

		*node[0x564c239c2b30] = ;;

		*node[0x564c239c2c20] = =;

		*node[0x564c239c2b60] = 0;

		*node[0x564c239c2bf0] = -;

		*node[0x564c239c2b90] = 0;

		*node[0x564c239c2bc0] = 1;

		*node[0x564c239c2c50] = ;;

		*node[0x564c239c2ce0] = =;

		*node[0x564c239c2c80] = 0;

		*node[0x564c239c2cb0] = 1;

		*node[0x564c239c2d10] = ;;

		*node[0x564c239c2da0] = =;

		*node[0x564c239c2d40] = 0;

		*node[0x564c239c2d70] = 2;

		*node[0x564c239c2dd0] = ;;

		*node[0x564c239c2e00] = if;

		*node[0x564c239c2e30] = op_no;

		*node[0x564c239c2ec0] = ==;

		*node[0x564c239c2e60] = 0;

		*node[0x564c239c2e90] = 0;

		*node[0x564c239c2ef0] = ;;

		*node[0x564c239c2f80] = =;

		*node[0x564c239c2f20] = 1;

		*node[0x564c239c2f50] = 0;

		*node[0x564c239c2fb0] = ;;

		*node[0x564c239c3130] = =;

		*node[0x564c239c2fe0] = 2;

		*node[0x564c239c3100] = -;

		*node[0x564c239c3040] = 0;

		*node[0x564c239c30d0] = /;

		*node[0x564c239c3070] = 0;

		*node[0x564c239c30a0] = 0;

		*node[0x564c239c3160] = ;;

		*node[0x564c239c3190] = print;

		*node[0x564c239c31c0] = 0;

		*node[0x564c239c31f0] = ;;

		*node[0x564c239c3220] = print;

		*node[0x564c239c3250] = 0;

		*node[0x564c239c3280] = 0;

		*node[0x564c239c32b0] = else;

		*node[0x564c239c32e0] = op_no;

		*node[0x564c239c3310] = ;;

		*node[0x564c239c3520] = =;

		*node[0x564c239c3340] = 3;

		*node[0x564c239c34f0] = -;

		*node[0x564c239c33d0] = *;

		*node[0x564c239c3370] = 0;

		*node[0x564c239c33a0] = 0;

		*node[0x564c239c34c0] = *;

		*node[0x564c239c3460] = *;

		*node[0x564c239c3400] = 4;

		*node[0x564c239c3430] = 0;

		*node[0x564c239c3490] = 0;

		*node[0x564c239c3550] = ;;

		*node[0x564c239c3580] = if;

		*node[0x564c239c35b0] = op_no;

		*node[0x564c239c3640] = >;

		*node[0x564c239c35e0] = 0;

		*node[0x564c239c3610] = 0;

		*node[0x564c239c3670] = ;;

		*node[0x564c239c3780] = =;

		*node[0x564c239c36a0] = 4;

		*node[0x564c239c3750] = sqrt;

		*node[0x564c239c3720] = 0;

		*node[0x564c239c37b0] = ;;

		*node[0x564c239c39c0] = =;

		*node[0x564c239c37e0] = 0;

		*node[0x564c239c3990] = /;

		*node[0x564c239c38d0] = -;

		*node[0x564c239c3870] = -;

		*node[0x564c239c3810] = 0;

		*node[0x564c239c3840] = 0;

		*node[0x564c239c38a0] = 0;

		*node[0x564c239c3960] = *;

		*node[0x564c239c3900] = 2;

		*node[0x564c239c3930] = 0;

		*node[0x564c239c39f0] = ;;

		*node[0x564c239c3c00] = =;

		*node[0x564c239c3a20] = 0;

		*node[0x564c239c3bd0] = /;

		*node[0x564c239c3b10] = +;

		*node[0x564c239c3ab0] = -;

		*node[0x564c239c3a50] = 0;

		*node[0x564c239c3a80] = 0;

		*node[0x564c239c3ae0] = 0;

		*node[0x564c239c3ba0] = *;

		*node[0x564c239c3b40] = 2;

		*node[0x564c239c3b70] = 0;

		*node[0x564c239c3c30] = ;;

		*node[0x564c239c3c60] = print;

		*node[0x564c239c3c90] = 0;

		*node[0x564c239c3cc0] = ;;

		*node[0x564c239c3cf0] = print;

		*node[0x564c239c3d20] = 0;

		*node[0x564c239c3d50] = 0;

		*node[0x564c239c3d80] = elseif;

		*node[0x564c239c3db0] = op_no;

		*node[0x564c239c3e40] = ==;

		*node[0x564c239c3de0] = 0;

		*node[0x564c239c3e10] = 0;

		*node[0x564c239c3e70] = ;;

		*node[0x564c239c4020] = =;

		*node[0x564c239c3ea0] = 0;

		*node[0x564c239c3ff0] = -;

		*node[0x564c239c3ed0] = 0;

		*node[0x564c239c3fc0] = /;

		*node[0x564c239c3f00] = 0;

		*node[0x564c239c3f90] = *;

		*node[0x564c239c3f30] = 2;

		*node[0x564c239c3f60] = 0;

		*node[0x564c239c4050] = ;;

		*node[0x564c239c4080] = print;

		*node[0x564c239c40b0] = 0;

		*node[0x564c239c40e0] = ;;

		*node[0x564c239c4110] = print;

		*node[0x564c239c4140] = 0;

		*node[0x564c239c4170] = else;

		*node[0x564c239c41a0] = op_no;

		*node[0x564c239c41d0] = ;;

		*node[0x564c239c4200] = print;

		*node[0x564c239c4230] = 0;

		*node[0x564c239c4260] = ;;

		*node[0x564c239c4290] = return;

		*node[0x564c239c42c0] = 0;

		*node[0x564c239c42f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffeea9ed7d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x62feafa9fae0] = ;;

		*node[0x62feafa9fb60] = 0;

		*node[0x62feafa9fb90] = ;;

		*node[0x62feafa9fbc0] = input;

		*node[0x62feafa9fbf0] = 0;

		*node[0x62feafa9fc20] = 1;

		*node[0x62feafa9fc50] = 2;

		*node[0x62feafa9fcb0] = ;;

		*node[0x62feafa9fd10] = 0;

		*node[0x62feafa9fd40] = 0;

		*node[0x62feafa9fd70] = 0;

		*node[0x62feafa9fda0] = ;;

		*node[0x62feafa9fe20] = 0;

		*node[0x62feafa9fe50] = 0;

		*node[0x62feafa9fe80] = 0;

		*node[0x62feafa9feb0] = 0;

		*node[0x62feafa9fee0] = ;;

		*node[0x62feafa9ff10] = if;

		*node[0x62feafa9ff40] = op_no;

		*node[0x62feafa9ffd0] = ==;

		*node[0x62feafa9ff70] = 0;

		*node[0x62feafa9ffa0] = 0;

		*node[0x62feafaa0000] = ;;

		*node[0x62feafaa0060] = 0;

		*node[0x62feafaa0090] = 0;

		*node[0x62feafaa00c0] = else;

		*node[0x62feafaa00f0] = op_no;

		*node[0x62feafaa0120] = ;;

		*node[0x62feafaa01b0] = 0;

		*node[0x62feafaa01e0] = 0;

		*node[0x62feafaa0210] = 0;

		*node[0x62feafaa0240] = ;;

		*node[0x62feafaa0270] = return;

		*node[0x62feafaa02a0] = 0;

		*node[0x62feafaa02d0] = ;;

		*node[0x62feafaa0350] = 0;

		*node[0x62feafaa0380] = 0;

		*node[0x62feafaa03b0] = 0;

		*node[0x62feafaa03e0] = ;;

		*node[0x62feafaa04d0] = =;

		*node[0x62feafaa0410] = 0;

		*node[0x62feafaa04a0] = -;

		*node[0x62feafaa0440] = 0;

		*node[0x62feafaa0470] = 1;

		*node[0x62feafaa0500] = ;;

		*node[0x62feafaa0590] = =;

		*node[0x62feafaa0530] = 1;

		*node[0x62feafaa0560] = 1;

		*node[0x62feafaa05c0] = ;;

		*node[0x62feafaa0680] = =;

		*node[0x62feafaa05f0] = 2;

		*node[0x62feafaa0650] = 1000;

		*node[0x62feafaa06b0] = ;;

		*node[0x62feafaa06e0] = if;

		*node[0x62feafaa0710] = op_no;

		*node[0x62feafaa07a0] = ==;

		*node[0x62feafaa0740] = 0;

		*node[0x62feafaa0770] = 0;

		*node[0x62feafaa07d0] = ;;

		*node[0x62feafaa0800] = if;

		*node[0x62feafaa0830] = op_no;

		*node[0x62feafaa08c0] = ==;

		*node[0x62feafaa0860] = 0;

		*node[0x62feafaa0890] = 0;

		*node[0x62feafaa08f0] = ;;

		*node[0x62feafaa0920] = print;

		*node[0x62feafaa0950] = 0;

		*node[0x62feafaa0980] = else;

		*node[0x62feafaa09b0] = op_no;

		*node[0x62feafaa09e0] = ;;

		*node[0x62feafaa0a10] = print;

		*node[0x62feafaa0a40] = 0;

		*node[0x62feafaa0a70] = else;

		*node[0x62feafaa0aa0] = op_no;

		*node[0x62feafaa0ad0] = ;;

		*node[0x62feafaa0c20] = =;

		*node[0x62feafaa0b00] = 3;

		*node[0x62feafaa0bf0] = -;

		*node[0x62feafaa0b30] = 0;

		*node[0x62feafaa0bc0] = /;

		*node[0x62feafaa0b60] = 0;

		*node[0x62feafaa0b90] = 0;

		*node[0x62feafaa0c50] = ;;

		*node[0x62feafaa0c80] = print;

		*node[0x62feafaa0cb0] = 0;

		*node[0x62feafaa0ce0] = ;;

		*node[0x62feafaa0d10] = print;

		*node[0x62feafaa0d40] = 0;

		*node[0x62feafaa0d70] = ;;

		*node[0x62feafaa0da0] = return;

		*node[0x62feafaa0dd0] = 0;

		*node[0x62feafaa0e00] = ;;

		*node[0x62feafaa0e80] = 0;

		*node[0x62feafaa0eb0] = 0;

		*node[0x62feafaa0ee0] = 0;

		*node[0x62feafaa0f10] = 0;

		*node[0x62feafaa0f40] = ;;

		*node[0x62feafaa1030] = =;

		*node[0x62feafaa0f70] = 0;

		*node[0x62feafaa1000] = -;

		*node[0x62feafaa0fa0] = 0;

		*node[0x62feafaa0fd0] = 1;

		*node[0x62feafaa1060] = ;;

		*node[0x62feafaa10f0] = =;

		*node[0x62feafaa1090] = 0;

		*node[0x62feafaa10c0] = 1;

		*node[0x62feafaa1120] = ;;

		*node[0x62feafaa11b0] = =;

		*node[0x62feafaa1150] = 0;

		*node[0x62feafaa1180] = 2;

		*node[0x62feafaa11e0] = ;;

		*node[0x62feafaa1210] = if;

		*node[0x62feafaa1240] = op_no;

		*node[0x62feafaa12d0] = ==;

		*node[0x62feafaa1270] = 0;

		*node[0x62feafaa12a0] = 0;

		*node[0x62feafaa1300] = ;;

		*node[0x62feafaa1390] = =;

		*node[0x62feafaa1330] = 1;

		*node[0x62feafaa1360] = 0;

		*node[0x62feafaa13c0] = ;;

		*node[0x62feafaa1540] = =;

		*node[0x62feafaa13f0] = 2;

		*node[0x62feafaa1510] = -;

		*node[0x62feafaa1450] = 0;

		*node[0x62feafaa14e0] = /;

		*node[0x62feafaa1480] = 0;

		*node[0x62feafaa14b0] = 0;

		*node[0x62feafaa1570] = ;;

		*node[0x62feafaa15a0] = print;

		*node[0x62feafaa15d0] = 0;

		*node[0x62feafaa1600] = ;;

		*node[0x62feafaa1630] = print;

		*node[0x62feafaa1660] = 0;

		*node[0x62feafaa1690] = 0;

		*node[0x62feafaa16c0] = else;

		*node[0x62feafaa16f0] = op_no;

		*node[0x62feafaa1720] = ;;

		*node[0x62feafaa1930] = =;

		*node[0x62feafaa1750] = 3;

		*node[0x62feafaa1900] = -;

		*node[0x62feafaa17e0] = *;

		*node[0x62feafaa1780] = 0;

		*node[0x62feafaa17b0] = 0;

		*node[0x62feafaa18d0] = *;

		*node[0x62feafaa1870] = *;

		*node[0x62feafaa1810] = 4;

		*node[0x62feafaa1840] = 0;

		*node[0x62feafaa18a0] = 0;

		*node[0x62feafaa1960] = ;;

		*node[0x62feafaa1990] = if;

		*node[0x62feafaa19c0] = op_no;

		*node[0x62feafaa1a50] = >;

		*node[0x62feafaa19f0] = 0;

		*node[0x62feafaa1a20] = 0;

		*node[0x62feafaa1a80] = ;;

		*node[0x62feafaa1b90] = =;

		*node[0x62feafaa1ab0] = 4;

		*node[0x62feafaa1b60] = sqrt;

		*node[0x62feafaa1b30] = 0;

		*node[0x62feafaa1bc0] = ;;

		*node[0x62feafaa1dd0] = =;

		*node[0x62feafaa1bf0] = 0;

		*node[0x62feafaa1da0] = /;

		*node[0x62feafaa1ce0] = -;

		*node[0x62feafaa1c80] = -;

		*node[0x62feafaa1c20] = 0;

		*node[0x62feafaa1c50] = 0;

		*node[0x62feafaa1cb0] = 0;

		*node[0x62feafaa1d70] = *;

		*node[0x62feafaa1d10] = 2;

		*node[0x62feafaa1d40] = 0;

		*node[0x62feafaa1e00] = ;;

		*node[0x62feafaa2010] = =;

		*node[0x62feafaa1e30] = 0;

		*node[0x62feafaa1fe0] = /;

		*node[0x62feafaa1f20] = +;

		*node[0x62feafaa1ec0] = -;

		*node[0x62feafaa1e60] = 0;

		*node[0x62feafaa1e90] = 0;

		*node[0x62feafaa1ef0] = 0;

		*node[0x62feafaa1fb0] = *;

		*node[0x62feafaa1f50] = 2;

		*node[0x62feafaa1f80] = 0;

		*node[0x62feafaa2040] = ;;

		*node[0x62feafaa2070] = print;

		*node[0x62feafaa20a0] = 0;

		*node[0x62feafaa20d0] = ;;

		*node[0x62feafaa2100] = print;

		*node[0x62feafaa2130] = 0;

		*node[0x62feafaa2160] = 0;

		*node[0x62feafaa2190] = elseif;

		*node[0x62feafaa21c0] = op_no;

		*node[0x62feafaa2250] = ==;

		*node[0x62feafaa21f0] = 0;

		*node[0x62feafaa2220] = 0;

		*node[0x62feafaa2280] = ;;

		*node[0x62feafaa2430] = =;

		*node[0x62feafaa22b0] = 0;

		*node[0x62feafaa2400] = -;

		*node[0x62feafaa22e0] = 0;

		*node[0x62feafaa23d0] = /;

		*node[0x62feafaa2310] = 0;

		*node[0x62feafaa23a0] = *;

		*node[0x62feafaa2340] = 2;

		*node[0x62feafaa2370] = 0;

		*node[0x62feafaa2460] = ;;

		*node[0x62feafaa2490] = print;

		*node[0x62feafaa24c0] = 0;

		*node[0x62feafaa24f0] = ;;

		*node[0x62feafaa2520] = print;

		*node[0x62feafaa2550] = 0;

		*node[0x62feafaa2580] = else;

		*node[0x62feafaa25b0] = op_no;

		*node[0x62feafaa25e0] = ;;

		*node[0x62feafaa2610] = print;

		*node[0x62feafaa2640] = 0;

		*node[0x62feafaa2670] = ;;

		*node[0x62feafaa26a0] = return;

		*node[0x62feafaa26d0] = 0;

		*node[0x62feafaa2700] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff115b69e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x605408a93ae0] = ;;

		*node[0x605408a93b60] = 0;

		*node[0x605408a93b90] = ;;

		*node[0x605408a93bc0] = input;

		*node[0x605408a93bf0] = 0;

		*node[0x605408a93c20] = 1;

		*node[0x605408a93c50] = 2;

		*node[0x605408a93cb0] = ;;

		*node[0x605408a93d10] = 0;

		*node[0x605408a93d40] = 1;

		*node[0x605408a93d70] = 2;

		*node[0x605408a93da0] = ;;

		*node[0x605408a93e20] = 1;

		*node[0x605408a93e50] = 0;

		*node[0x605408a93e80] = 1;

		*node[0x605408a93eb0] = 2;

		*node[0x605408a93f10] = ;;

		*node[0x605408a93f40] = if;

		*node[0x605408a93f70] = op_no;

		*node[0x605408a94000] = ==;

		*node[0x605408a93fa0] = 0;

		*node[0x605408a93fd0] = 0;

		*node[0x605408a94030] = ;;

		*node[0x605408a94090] = 1;

		*node[0x605408a940c0] = 2;

		*node[0x605408a940f0] = else;

		*node[0x605408a94120] = op_no;

		*node[0x605408a94150] = ;;

		*node[0x605408a941b0] = 0;

		*node[0x605408a941e0] = 1;

		*node[0x605408a94210] = 2;

		*node[0x605408a94240] = ;;

		*node[0x605408a94270] = return;

		*node[0x605408a942a0] = 0;

		*node[0x605408a942d0] = ;;

		*node[0x605408a94350] = 2;

		*node[0x605408a943b0] = 0;

		*node[0x605408a943e0] = 1;

		*node[0x605408a94410] = ;;

		*node[0x605408a94500] = =;

		*node[0x605408a94440] = 0;

		*node[0x605408a944d0] = -;

		*node[0x605408a94470] = 0;

		*node[0x605408a944a0] = 1;

		*node[0x605408a94530] = ;;

		*node[0x605408a945c0] = =;

		*node[0x605408a94560] = 1;

		*node[0x605408a94590] = 1;

		*node[0x605408a945f0] = ;;

		*node[0x605408a946b0] = =;

		*node[0x605408a94620] = 2;

		*node[0x605408a94680] = 1000;

		*node[0x605408a946e0] = ;;

		*node[0x605408a94710] = if;

		*node[0x605408a94740] = op_no;

		*node[0x605408a947d0] = ==;

		*node[0x605408a94770] = 0;

		*node[0x605408a947a0] = 0;

		*node[0x605408a94800] = ;;

		*node[0x605408a94830] = if;

		*node[0x605408a94860] = op_no;

		*node[0x605408a948f0] = ==;

		*node[0x605408a94890] = 1;

		*node[0x605408a948c0] = 0;

		*node[0x605408a94920] = ;;

		*node[0x605408a94950] = print;

		*node[0x605408a94980] = 2;

		*node[0x605408a949b0] = else;

		*node[0x605408a949e0] = op_no;

		*node[0x605408a94a10] = ;;

		*node[0x605408a94a40] = print;

		*node[0x605408a94a70] = 0;

		*node[0x605408a94aa0] = else;

		*node[0x605408a94ad0] = op_no;

		*node[0x605408a94b00] = ;;

		*node[0x605408a94c50] = =;

		*node[0x605408a94b30] = 3;

		*node[0x605408a94c20] = -;

		*node[0x605408a94b60] = 0;

		*node[0x605408a94bf0] = /;

		*node[0x605408a94b90] = 1;

		*node[0x605408a94bc0] = 0;

		*node[0x605408a94c80] = ;;

		*node[0x605408a94cb0] = print;

		*node[0x605408a94ce0] = 1;

		*node[0x605408a94d10] = ;;

		*node[0x605408a94d40] = print;

		*node[0x605408a94d70] = 3;

		*node[0x605408a94da0] = ;;

		*node[0x605408a94dd0] = return;

		*node[0x605408a94e00] = 0;

		*node[0x605408a94e30] = ;;

		*node[0x605408a94eb0] = 3;

		*node[0x605408a94ee0] = 0;

		*node[0x605408a94f10] = 1;

		*node[0x605408a94f40] = 2;

		*node[0x605408a94fa0] = ;;

		*node[0x605408a95090] = =;

		*node[0x605408a94fd0] = 0;

		*node[0x605408a95060] = -;

		*node[0x605408a95000] = 0;

		*node[0x605408a95030] = 1;

		*node[0x605408a950c0] = ;;

		*node[0x605408a95150] = =;

		*node[0x605408a950f0] = 1;

		*node[0x605408a95120] = 1;

		*node[0x605408a95180] = ;;

		*node[0x605408a95210] = =;

		*node[0x605408a951b0] = 0;

		*node[0x605408a951e0] = 2;

		*node[0x605408a95240] = ;;

		*node[0x605408a95270] = if;

		*node[0x605408a952a0] = op_no;

		*node[0x605408a95330] = ==;

		*node[0x605408a952d0] = 2;

		*node[0x605408a95300] = 0;

		*node[0x605408a95360] = ;;

		*node[0x605408a953f0] = =;

		*node[0x605408a95390] = 1;

		*node[0x605408a953c0] = 0;

		*node[0x605408a95420] = ;;

		*node[0x605408a95570] = =;

		*node[0x605408a95450] = 2;

		*node[0x605408a95540] = -;

		*node[0x605408a95480] = 0;

		*node[0x605408a95510] = /;

		*node[0x605408a954b0] = 1;

		*node[0x605408a954e0] = 0;

		*node[0x605408a955a0] = ;;

		*node[0x605408a955d0] = print;

		*node[0x605408a95600] = 0;

		*node[0x605408a95630] = ;;

		*node[0x605408a95660] = print;

		*node[0x605408a95690] = 1;

		*node[0x605408a956c0] = 2;

		*node[0x605408a956f0] = else;

		*node[0x605408a95720] = op_no;

		*node[0x605408a95750] = ;;

		*node[0x605408a95960] = =;

		*node[0x605408a95780] = 3;

		*node[0x605408a95930] = -;

		*node[0x605408a95810] = *;

		*node[0x605408a957b0] = 1;

		*node[0x605408a957e0] = 1;

		*node[0x605408a95900] = *;

		*node[0x605408a958a0] = *;

		*node[0x605408a95840] = 4;

		*node[0x605408a95870] = 0;

		*node[0x605408a958d0] = 2;

		*node[0x605408a95990] = ;;

		*node[0x605408a959c0] = if;

		*node[0x605408a959f0] = op_no;

		*node[0x605408a95a80] = >;

		*node[0x605408a95a20] = 3;

		*node[0x605408a95a50] = 0;

		*node[0x605408a95ab0] = ;;

		*node[0x605408a95bc0] = =;

		*node[0x605408a95ae0] = 4;

		*node[0x605408a95b90] = sqrt;

		*node[0x605408a95b60] = 3;

		*node[0x605408a95bf0] = ;;

		*node[0x605408a95e00] = =;

		*node[0x605408a95c20] = 1;

		*node[0x605408a95dd0] = /;

		*node[0x605408a95d10] = -;

		*node[0x605408a95cb0] = -;

		*node[0x605408a95c50] = 0;

		*node[0x605408a95c80] = 1;

		*node[0x605408a95ce0] = 4;

		*node[0x605408a95da0] = *;

		*node[0x605408a95d40] = 2;

		*node[0x605408a95d70] = 0;

		*node[0x605408a95e30] = ;;

		*node[0x605408a96040] = =;

		*node[0x605408a95e60] = 2;

		*node[0x605408a96010] = /;

		*node[0x605408a95f50] = +;

		*node[0x605408a95ef0] = -;

		*node[0x605408a95e90] = 0;

		*node[0x605408a95ec0] = 1;

		*node[0x605408a95f20] = 4;

		*node[0x605408a95fe0] = *;

		*node[0x605408a95f80] = 2;

		*node[0x605408a95fb0] = 0;

		*node[0x605408a96070] = ;;

		*node[0x605408a960a0] = print;

		*node[0x605408a960d0] = 0;

		*node[0x605408a96100] = ;;

		*node[0x605408a96130] = print;

		*node[0x605408a96160] = 1;

		*node[0x605408a96190] = 2;

		*node[0x605408a961c0] = elseif;

		*node[0x605408a961f0] = op_no;

		*node[0x605408a96280] = ==;

		*node[0x605408a96220] = 3;

		*node[0x605408a96250] = 0;

		*node[0x605408a962b0] = ;;

		*node[0x605408a96460] = =;

		*node[0x605408a962e0] = 3;

		*node[0x605408a96430] = -;

		*node[0x605408a96310] = 0;

		*node[0x605408a96400] = /;

		*node[0x605408a96340] = 1;

		*node[0x605408a963d0] = *;

		*node[0x605408a96370] = 2;

		*node[0x605408a963a0] = 0;

		*node[0x605408a96490] = ;;

		*node[0x605408a964c0] = print;

		*node[0x605408a964f0] = 1;

		*node[0x605408a96520] = ;;

		*node[0x605408a96550] = print;

		*node[0x605408a96580] = 3;

		*node[0x605408a965b0] = else;

		*node[0x605408a965e0] = op_no;

		*node[0x605408a96610] = ;;

		*node[0x605408a96640] = print;

		*node[0x605408a96670] = 0;

		*node[0x605408a966a0] = ;;

		*node[0x605408a966d0] = return;

		*node[0x605408a96700] = 0;

		*node[0x605408a96730] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd9c11c8d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5599b3892ae0] = ;;

		*node[0x5599b3892b60] = 0;

		*node[0x5599b3892b90] = ;;

		*node[0x5599b3892bc0] = input;

		*node[0x5599b3892bf0] = 0;

		*node[0x5599b3892c20] = 1;

		*node[0x5599b3892c50] = 2;

		*node[0x5599b3892cb0] = ;;

		*node[0x5599b3892d10] = 0;

		*node[0x5599b3892d40] = 1;

		*node[0x5599b3892d70] = 2;

		*node[0x5599b3892da0] = ;;

		*node[0x5599b3892e20] = 1;

		*node[0x5599b3892e50] = 0;

		*node[0x5599b3892e80] = 1;

		*node[0x5599b3892eb0] = 2;

		*node[0x5599b3892f10] = ;;

		*node[0x5599b3892f40] = if;

		*node[0x5599b3892f70] = op_no;

		*node[0x5599b3893000] = ==;

		*node[0x5599b3892fa0] = 0;

		*node[0x5599b3892fd0] = 0;

		*node[0x5599b3893030] = ;;

		*node[0x5599b3893090] = 1;

		*node[0x5599b38930c0] = 2;

		*node[0x5599b38930f0] = else;

		*node[0x5599b3893120] = op_no;

		*node[0x5599b3893150] = ;;

		*node[0x5599b38931b0] = 0;

		*node[0x5599b38931e0] = 1;

		*node[0x5599b3893210] = 2;

		*node[0x5599b3893240] = ;;

		*node[0x5599b3893270] = return;

		*node[0x5599b38932a0] = 0;

		*node[0x5599b38932d0] = ;;

		*node[0x5599b3893350] = 2;

		*node[0x5599b38933b0] = 0;

		*node[0x5599b38933e0] = 1;

		*node[0x5599b3893410] = ;;

		*node[0x5599b3893500] = =;

		*node[0x5599b3893440] = 0;

		*node[0x5599b38934d0] = -;

		*node[0x5599b3893470] = 0;

		*node[0x5599b38934a0] = 1;

		*node[0x5599b3893530] = ;;

		*node[0x5599b38935c0] = =;

		*node[0x5599b3893560] = 1;

		*node[0x5599b3893590] = 1;

		*node[0x5599b38935f0] = ;;

		*node[0x5599b38936b0] = =;

		*node[0x5599b3893620] = 2;

		*node[0x5599b3893680] = 1000;

		*node[0x5599b38936e0] = ;;

		*node[0x5599b3893710] = if;

		*node[0x5599b3893740] = op_no;

		*node[0x5599b38937d0] = ==;

		*node[0x5599b3893770] = 0;

		*node[0x5599b38937a0] = 0;

		*node[0x5599b3893800] = ;;

		*node[0x5599b3893830] = if;

		*node[0x5599b3893860] = op_no;

		*node[0x5599b38938f0] = ==;

		*node[0x5599b3893890] = 1;

		*node[0x5599b38938c0] = 0;

		*node[0x5599b3893920] = ;;

		*node[0x5599b3893950] = print;

		*node[0x5599b3893980] = 2;

		*node[0x5599b38939b0] = else;

		*node[0x5599b38939e0] = op_no;

		*node[0x5599b3893a10] = ;;

		*node[0x5599b3893a40] = print;

		*node[0x5599b3893a70] = 0;

		*node[0x5599b3893aa0] = else;

		*node[0x5599b3893ad0] = op_no;

		*node[0x5599b3893b00] = ;;

		*node[0x5599b3893c50] = =;

		*node[0x5599b3893b30] = 3;

		*node[0x5599b3893c20] = -;

		*node[0x5599b3893b60] = 0;

		*node[0x5599b3893bf0] = /;

		*node[0x5599b3893b90] = 1;

		*node[0x5599b3893bc0] = 0;

		*node[0x5599b3893c80] = ;;

		*node[0x5599b3893cb0] = print;

		*node[0x5599b3893ce0] = 1;

		*node[0x5599b3893d10] = ;;

		*node[0x5599b3893d40] = print;

		*node[0x5599b3893d70] = 3;

		*node[0x5599b3893da0] = ;;

		*node[0x5599b3893dd0] = return;

		*node[0x5599b3893e00] = 0;

		*node[0x5599b3893e30] = ;;

		*node[0x5599b3893eb0] = 3;

		*node[0x5599b3893ee0] = 0;

		*node[0x5599b3893f10] = 1;

		*node[0x5599b3893f40] = 2;

		*node[0x5599b3893fa0] = ;;

		*node[0x5599b3894090] = =;

		*node[0x5599b3893fd0] = 0;

		*node[0x5599b3894060] = -;

		*node[0x5599b3894000] = 0;

		*node[0x5599b3894030] = 1;

		*node[0x5599b38940c0] = ;;

		*node[0x5599b3894150] = =;

		*node[0x5599b38940f0] = 1;

		*node[0x5599b3894120] = 1;

		*node[0x5599b3894180] = ;;

		*node[0x5599b3894210] = =;

		*node[0x5599b38941b0] = 0;

		*node[0x5599b38941e0] = 2;

		*node[0x5599b3894240] = ;;

		*node[0x5599b3894270] = if;

		*node[0x5599b38942a0] = op_no;

		*node[0x5599b3894330] = ==;

		*node[0x5599b38942d0] = 2;

		*node[0x5599b3894300] = 0;

		*node[0x5599b3894360] = ;;

		*node[0x5599b38943f0] = =;

		*node[0x5599b3894390] = 1;

		*node[0x5599b38943c0] = 0;

		*node[0x5599b3894420] = ;;

		*node[0x5599b3894570] = =;

		*node[0x5599b3894450] = 2;

		*node[0x5599b3894540] = -;

		*node[0x5599b3894480] = 0;

		*node[0x5599b3894510] = /;

		*node[0x5599b38944b0] = 1;

		*node[0x5599b38944e0] = 0;

		*node[0x5599b38945a0] = ;;

		*node[0x5599b38945d0] = print;

		*node[0x5599b3894600] = 0;

		*node[0x5599b3894630] = ;;

		*node[0x5599b3894660] = print;

		*node[0x5599b3894690] = 1;

		*node[0x5599b38946c0] = 2;

		*node[0x5599b38946f0] = else;

		*node[0x5599b3894720] = op_no;

		*node[0x5599b3894750] = ;;

		*node[0x5599b3894960] = =;

		*node[0x5599b3894780] = 3;

		*node[0x5599b3894930] = -;

		*node[0x5599b3894810] = *;

		*node[0x5599b38947b0] = 1;

		*node[0x5599b38947e0] = 1;

		*node[0x5599b3894900] = *;

		*node[0x5599b38948a0] = *;

		*node[0x5599b3894840] = 4;

		*node[0x5599b3894870] = 0;

		*node[0x5599b38948d0] = 2;

		*node[0x5599b3894990] = ;;

		*node[0x5599b38949c0] = if;

		*node[0x5599b38949f0] = op_no;

		*node[0x5599b3894a80] = >;

		*node[0x5599b3894a20] = 3;

		*node[0x5599b3894a50] = 0;

		*node[0x5599b3894ab0] = ;;

		*node[0x5599b3894bc0] = =;

		*node[0x5599b3894ae0] = 4;

		*node[0x5599b3894b90] = sqrt;

		*node[0x5599b3894b60] = 3;

		*node[0x5599b3894bf0] = ;;

		*node[0x5599b3894e00] = =;

		*node[0x5599b3894c20] = 1;

		*node[0x5599b3894dd0] = /;

		*node[0x5599b3894d10] = -;

		*node[0x5599b3894cb0] = -;

		*node[0x5599b3894c50] = 0;

		*node[0x5599b3894c80] = 1;

		*node[0x5599b3894ce0] = 4;

		*node[0x5599b3894da0] = *;

		*node[0x5599b3894d40] = 2;

		*node[0x5599b3894d70] = 0;

		*node[0x5599b3894e30] = ;;

		*node[0x5599b3895040] = =;

		*node[0x5599b3894e60] = 2;

		*node[0x5599b3895010] = /;

		*node[0x5599b3894f50] = +;

		*node[0x5599b3894ef0] = -;

		*node[0x5599b3894e90] = 0;

		*node[0x5599b3894ec0] = 1;

		*node[0x5599b3894f20] = 4;

		*node[0x5599b3894fe0] = *;

		*node[0x5599b3894f80] = 2;

		*node[0x5599b3894fb0] = 0;

		*node[0x5599b3895070] = ;;

		*node[0x5599b38950a0] = print;

		*node[0x5599b38950d0] = 0;

		*node[0x5599b3895100] = ;;

		*node[0x5599b3895130] = print;

		*node[0x5599b3895160] = 1;

		*node[0x5599b3895190] = 2;

		*node[0x5599b38951c0] = elseif;

		*node[0x5599b38951f0] = op_no;

		*node[0x5599b3895280] = ==;

		*node[0x5599b3895220] = 3;

		*node[0x5599b3895250] = 0;

		*node[0x5599b38952b0] = ;;

		*node[0x5599b3895460] = =;

		*node[0x5599b38952e0] = 3;

		*node[0x5599b3895430] = -;

		*node[0x5599b3895310] = 0;

		*node[0x5599b3895400] = /;

		*node[0x5599b3895340] = 1;

		*node[0x5599b38953d0] = *;

		*node[0x5599b3895370] = 2;

		*node[0x5599b38953a0] = 0;

		*node[0x5599b3895490] = ;;

		*node[0x5599b38954c0] = print;

		*node[0x5599b38954f0] = 1;

		*node[0x5599b3895520] = ;;

		*node[0x5599b3895550] = print;

		*node[0x5599b3895580] = 3;

		*node[0x5599b38955b0] = else;

		*node[0x5599b38955e0] = op_no;

		*node[0x5599b3895610] = ;;

		*node[0x5599b3895640] = print;

		*node[0x5599b3895670] = 0;

		*node[0x5599b38956a0] = ;;

		*node[0x5599b38956d0] = return;

		*node[0x5599b3895700] = 0;

		*node[0x5599b3895730] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff8bda1fb0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x55b13630fae0] = ;;

		*node[0x55b13630fb60] = 0;

		*node[0x55b13630fb90] = ;;

		*node[0x55b13630fbc0] = input;

		*node[0x55b13630fbf0] = 0;

		*node[0x55b13630fc20] = 1;

		*node[0x55b13630fc50] = 2;

		*node[0x55b13630fcb0] = ;;

		*node[0x55b13630fd10] = 0;

		*node[0x55b13630fd40] = 1;

		*node[0x55b13630fd70] = 2;

		*node[0x55b13630fda0] = ;;

		*node[0x55b13630fe20] = 1;

		*node[0x55b13630fe50] = 0;

		*node[0x55b13630fe80] = 1;

		*node[0x55b13630feb0] = 2;

		*node[0x55b13630ff10] = ;;

		*node[0x55b13630ff40] = if;

		*node[0x55b13630ff70] = op_no;

		*node[0x55b136310000] = ==;

		*node[0x55b13630ffa0] = 0;

		*node[0x55b13630ffd0] = 0;

		*node[0x55b136310030] = ;;

		*node[0x55b136310090] = 1;

		*node[0x55b1363100c0] = 2;

		*node[0x55b1363100f0] = else;

		*node[0x55b136310120] = op_no;

		*node[0x55b136310150] = ;;

		*node[0x55b1363101b0] = 0;

		*node[0x55b1363101e0] = 1;

		*node[0x55b136310210] = 2;

		*node[0x55b136310240] = ;;

		*node[0x55b136310270] = return;

		*node[0x55b1363102a0] = 0;

		*node[0x55b1363102d0] = ;;

		*node[0x55b136310350] = 2;

		*node[0x55b1363103b0] = 0;

		*node[0x55b1363103e0] = 1;

		*node[0x55b136310410] = ;;

		*node[0x55b136310500] = =;

		*node[0x55b136310440] = 0;

		*node[0x55b1363104d0] = -;

		*node[0x55b136310470] = 0;

		*node[0x55b1363104a0] = 1;

		*node[0x55b136310530] = ;;

		*node[0x55b1363105c0] = =;

		*node[0x55b136310560] = 1;

		*node[0x55b136310590] = 1;

		*node[0x55b1363105f0] = ;;

		*node[0x55b1363106b0] = =;

		*node[0x55b136310620] = 2;

		*node[0x55b136310680] = 1000;

		*node[0x55b1363106e0] = ;;

		*node[0x55b136310710] = if;

		*node[0x55b136310740] = op_no;

		*node[0x55b1363107d0] = ==;

		*node[0x55b136310770] = 0;

		*node[0x55b1363107a0] = 0;

		*node[0x55b136310800] = ;;

		*node[0x55b136310830] = if;

		*node[0x55b136310860] = op_no;

		*node[0x55b1363108f0] = ==;

		*node[0x55b136310890] = 1;

		*node[0x55b1363108c0] = 0;

		*node[0x55b136310920] = ;;

		*node[0x55b136310950] = print;

		*node[0x55b136310980] = 2;

		*node[0x55b1363109b0] = else;

		*node[0x55b1363109e0] = op_no;

		*node[0x55b136310a10] = ;;

		*node[0x55b136310a40] = print;

		*node[0x55b136310a70] = 0;

		*node[0x55b136310aa0] = else;

		*node[0x55b136310ad0] = op_no;

		*node[0x55b136310b00] = ;;

		*node[0x55b136310c50] = =;

		*node[0x55b136310b30] = 3;

		*node[0x55b136310c20] = -;

		*node[0x55b136310b60] = 0;

		*node[0x55b136310bf0] = /;

		*node[0x55b136310b90] = 1;

		*node[0x55b136310bc0] = 0;

		*node[0x55b136310c80] = ;;

		*node[0x55b136310cb0] = print;

		*node[0x55b136310ce0] = 1;

		*node[0x55b136310d10] = ;;

		*node[0x55b136310d40] = print;

		*node[0x55b136310d70] = 3;

		*node[0x55b136310da0] = ;;

		*node[0x55b136310dd0] = return;

		*node[0x55b136310e00] = 0;

		*node[0x55b136310e30] = ;;

		*node[0x55b136310eb0] = 3;

		*node[0x55b136310ee0] = 0;

		*node[0x55b136310f10] = 1;

		*node[0x55b136310f40] = 2;

		*node[0x55b136310fa0] = ;;

		*node[0x55b136311090] = =;

		*node[0x55b136310fd0] = 0;

		*node[0x55b136311060] = -;

		*node[0x55b136311000] = 0;

		*node[0x55b136311030] = 1;

		*node[0x55b1363110c0] = ;;

		*node[0x55b136311150] = =;

		*node[0x55b1363110f0] = 1;

		*node[0x55b136311120] = 1;

		*node[0x55b136311180] = ;;

		*node[0x55b136311210] = =;

		*node[0x55b1363111b0] = 0;

		*node[0x55b1363111e0] = 2;

		*node[0x55b136311240] = ;;

		*node[0x55b136311270] = if;

		*node[0x55b1363112a0] = op_no;

		*node[0x55b136311330] = ==;

		*node[0x55b1363112d0] = 2;

		*node[0x55b136311300] = 0;

		*node[0x55b136311360] = ;;

		*node[0x55b1363113f0] = =;

		*node[0x55b136311390] = 1;

		*node[0x55b1363113c0] = 0;

		*node[0x55b136311420] = ;;

		*node[0x55b136311570] = =;

		*node[0x55b136311450] = 2;

		*node[0x55b136311540] = -;

		*node[0x55b136311480] = 0;

		*node[0x55b136311510] = /;

		*node[0x55b1363114b0] = 1;

		*node[0x55b1363114e0] = 0;

		*node[0x55b1363115a0] = ;;

		*node[0x55b1363115d0] = print;

		*node[0x55b136311600] = 0;

		*node[0x55b136311630] = ;;

		*node[0x55b136311660] = print;

		*node[0x55b136311690] = 1;

		*node[0x55b1363116c0] = 2;

		*node[0x55b1363116f0] = else;

		*node[0x55b136311720] = op_no;

		*node[0x55b136311750] = ;;

		*node[0x55b136311960] = =;

		*node[0x55b136311780] = 3;

		*node[0x55b136311930] = -;

		*node[0x55b136311810] = *;

		*node[0x55b1363117b0] = 1;

		*node[0x55b1363117e0] = 1;

		*node[0x55b136311900] = *;

		*node[0x55b1363118a0] = *;

		*node[0x55b136311840] = 4;

		*node[0x55b136311870] = 0;

		*node[0x55b1363118d0] = 2;

		*node[0x55b136311990] = ;;

		*node[0x55b1363119c0] = if;

		*node[0x55b1363119f0] = op_no;

		*node[0x55b136311a80] = >;

		*node[0x55b136311a20] = 3;

		*node[0x55b136311a50] = 0;

		*node[0x55b136311ab0] = ;;

		*node[0x55b136311bc0] = =;

		*node[0x55b136311ae0] = 4;

		*node[0x55b136311b90] = sqrt;

		*node[0x55b136311b60] = 3;

		*node[0x55b136311bf0] = ;;

		*node[0x55b136311e00] = =;

		*node[0x55b136311c20] = 1;

		*node[0x55b136311dd0] = /;

		*node[0x55b136311d10] = -;

		*node[0x55b136311cb0] = -;

		*node[0x55b136311c50] = 0;

		*node[0x55b136311c80] = 1;

		*node[0x55b136311ce0] = 4;

		*node[0x55b136311da0] = *;

		*node[0x55b136311d40] = 2;

		*node[0x55b136311d70] = 0;

		*node[0x55b136311e30] = ;;

		*node[0x55b136312040] = =;

		*node[0x55b136311e60] = 2;

		*node[0x55b136312010] = /;

		*node[0x55b136311f50] = +;

		*node[0x55b136311ef0] = -;

		*node[0x55b136311e90] = 0;

		*node[0x55b136311ec0] = 1;

		*node[0x55b136311f20] = 4;

		*node[0x55b136311fe0] = *;

		*node[0x55b136311f80] = 2;

		*node[0x55b136311fb0] = 0;

		*node[0x55b136312070] = ;;

		*node[0x55b1363120a0] = print;

		*node[0x55b1363120d0] = 0;

		*node[0x55b136312100] = ;;

		*node[0x55b136312130] = print;

		*node[0x55b136312160] = 1;

		*node[0x55b136312190] = 2;

		*node[0x55b1363121c0] = elseif;

		*node[0x55b1363121f0] = op_no;

		*node[0x55b136312280] = ==;

		*node[0x55b136312220] = 3;

		*node[0x55b136312250] = 0;

		*node[0x55b1363122b0] = ;;

		*node[0x55b136312460] = =;

		*node[0x55b1363122e0] = 3;

		*node[0x55b136312430] = -;

		*node[0x55b136312310] = 0;

		*node[0x55b136312400] = /;

		*node[0x55b136312340] = 1;

		*node[0x55b1363123d0] = *;

		*node[0x55b136312370] = 2;

		*node[0x55b1363123a0] = 0;

		*node[0x55b136312490] = ;;

		*node[0x55b1363124c0] = print;

		*node[0x55b1363124f0] = 1;

		*node[0x55b136312520] = ;;

		*node[0x55b136312550] = print;

		*node[0x55b136312580] = 3;

		*node[0x55b1363125b0] = else;

		*node[0x55b1363125e0] = op_no;

		*node[0x55b136312610] = ;;

		*node[0x55b136312640] = print;

		*node[0x55b136312670] = 0;

		*node[0x55b1363126a0] = ;;

		*node[0x55b1363126d0] = return;

		*node[0x55b136312700] = 0;

		*node[0x55b136312730] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd0145a0b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x62fd1ca646d0] = ;;

		*node[0x62fd1ca64750] = 0;

		*node[0x62fd1ca64780] = ;;

		*node[0x62fd1ca647b0] = input;

		*node[0x62fd1ca647e0] = 0;

		*node[0x62fd1ca64810] = 1;

		*node[0x62fd1ca64840] = 2;

		*node[0x62fd1ca648a0] = ;;

		*node[0x62fd1ca64900] = 0;

		*node[0x62fd1ca64930] = 1;

		*node[0x62fd1ca64960] = 2;

		*node[0x62fd1ca64990] = ;;

		*node[0x62fd1ca64a10] = 1;

		*node[0x62fd1ca64a40] = 0;

		*node[0x62fd1ca64a70] = 1;

		*node[0x62fd1ca64aa0] = 2;

		*node[0x62fd1ca64b00] = ;;

		*node[0x62fd1ca64b30] = if;

		*node[0x62fd1ca64b60] = op_no;

		*node[0x62fd1ca64bf0] = ==;

		*node[0x62fd1ca64b90] = 0;

		*node[0x62fd1ca64bc0] = 0;

		*node[0x62fd1ca64c20] = ;;

		*node[0x62fd1ca64c80] = 1;

		*node[0x62fd1ca64cb0] = 2;

		*node[0x62fd1ca64ce0] = else;

		*node[0x62fd1ca64d10] = op_no;

		*node[0x62fd1ca64d40] = ;;

		*node[0x62fd1ca64da0] = 0;

		*node[0x62fd1ca64dd0] = 1;

		*node[0x62fd1ca64e00] = 2;

		*node[0x62fd1ca64e30] = ;;

		*node[0x62fd1ca64e60] = return;

		*node[0x62fd1ca64e90] = 0;

		*node[0x62fd1ca64ec0] = ;;

		*node[0x62fd1ca64f40] = 2;

		*node[0x62fd1ca64fa0] = 0;

		*node[0x62fd1ca64fd0] = 1;

		*node[0x62fd1ca65000] = ;;

		*node[0x62fd1ca650f0] = =;

		*node[0x62fd1ca65030] = 0;

		*node[0x62fd1ca650c0] = -;

		*node[0x62fd1ca65060] = 0;

		*node[0x62fd1ca65090] = 1;

		*node[0x62fd1ca65120] = ;;

		*node[0x62fd1ca651b0] = =;

		*node[0x62fd1ca65150] = 1;

		*node[0x62fd1ca65180] = 1;

		*node[0x62fd1ca651e0] = ;;

		*node[0x62fd1ca652a0] = =;

		*node[0x62fd1ca65210] = 2;

		*node[0x62fd1ca65270] = 1000;

		*node[0x62fd1ca652d0] = ;;

		*node[0x62fd1ca65300] = if;

		*node[0x62fd1ca65330] = op_no;

		*node[0x62fd1ca653c0] = ==;

		*node[0x62fd1ca65360] = 0;

		*node[0x62fd1ca65390] = 0;

		*node[0x62fd1ca653f0] = ;;

		*node[0x62fd1ca65420] = if;

		*node[0x62fd1ca65450] = op_no;

		*node[0x62fd1ca654e0] = ==;

		*node[0x62fd1ca65480] = 1;

		*node[0x62fd1ca654b0] = 0;

		*node[0x62fd1ca65510] = ;;

		*node[0x62fd1ca65540] = print;

		*node[0x62fd1ca65570] = 2;

		*node[0x62fd1ca655a0] = else;

		*node[0x62fd1ca655d0] = op_no;

		*node[0x62fd1ca65600] = ;;

		*node[0x62fd1ca65630] = print;

		*node[0x62fd1ca65660] = 0;

		*node[0x62fd1ca65690] = else;

		*node[0x62fd1ca656c0] = op_no;

		*node[0x62fd1ca656f0] = ;;

		*node[0x62fd1ca65840] = =;

		*node[0x62fd1ca65720] = 3;

		*node[0x62fd1ca65810] = -;

		*node[0x62fd1ca65750] = 0;

		*node[0x62fd1ca657e0] = /;

		*node[0x62fd1ca65780] = 1;

		*node[0x62fd1ca657b0] = 0;

		*node[0x62fd1ca65870] = ;;

		*node[0x62fd1ca658a0] = print;

		*node[0x62fd1ca658d0] = 1;

		*node[0x62fd1ca65900] = ;;

		*node[0x62fd1ca65930] = print;

		*node[0x62fd1ca65960] = 3;

		*node[0x62fd1ca65990] = ;;

		*node[0x62fd1ca659c0] = return;

		*node[0x62fd1ca659f0] = 0;

		*node[0x62fd1ca65a20] = ;;

		*node[0x62fd1ca65aa0] = 3;

		*node[0x62fd1ca65ad0] = 0;

		*node[0x62fd1ca65b00] = 1;

		*node[0x62fd1ca65b30] = 2;

		*node[0x62fd1ca65b90] = ;;

		*node[0x62fd1ca65c80] = =;

		*node[0x62fd1ca65bc0] = 0;

		*node[0x62fd1ca65c50] = -;

		*node[0x62fd1ca65bf0] = 0;

		*node[0x62fd1ca65c20] = 1;

		*node[0x62fd1ca65cb0] = ;;

		*node[0x62fd1ca65d40] = =;

		*node[0x62fd1ca65ce0] = 1;

		*node[0x62fd1ca65d10] = 1;

		*node[0x62fd1ca65d70] = ;;

		*node[0x62fd1ca65e00] = =;

		*node[0x62fd1ca65da0] = 0;

		*node[0x62fd1ca65dd0] = 2;

		*node[0x62fd1ca65e30] = ;;

		*node[0x62fd1ca65e60] = if;

		*node[0x62fd1ca65e90] = op_no;

		*node[0x62fd1ca65f20] = ==;

		*node[0x62fd1ca65ec0] = 2;

		*node[0x62fd1ca65ef0] = 0;

		*node[0x62fd1ca65f50] = ;;

		*node[0x62fd1ca65fe0] = =;

		*node[0x62fd1ca65f80] = 1;

		*node[0x62fd1ca65fb0] = 0;

		*node[0x62fd1ca66010] = ;;

		*node[0x62fd1ca66160] = =;

		*node[0x62fd1ca66040] = 2;

		*node[0x62fd1ca66130] = -;

		*node[0x62fd1ca66070] = 0;

		*node[0x62fd1ca66100] = /;

		*node[0x62fd1ca660a0] = 1;

		*node[0x62fd1ca660d0] = 0;

		*node[0x62fd1ca66190] = ;;

		*node[0x62fd1ca661c0] = print;

		*node[0x62fd1ca661f0] = 0;

		*node[0x62fd1ca66220] = ;;

		*node[0x62fd1ca66250] = print;

		*node[0x62fd1ca66280] = 1;

		*node[0x62fd1ca662b0] = 2;

		*node[0x62fd1ca662e0] = else;

		*node[0x62fd1ca66310] = op_no;

		*node[0x62fd1ca66340] = ;;

		*node[0x62fd1ca66550] = =;

		*node[0x62fd1ca66370] = 3;

		*node[0x62fd1ca66520] = -;

		*node[0x62fd1ca66400] = *;

		*node[0x62fd1ca663a0] = 1;

		*node[0x62fd1ca663d0] = 1;

		*node[0x62fd1ca664f0] = *;

		*node[0x62fd1ca66490] = *;

		*node[0x62fd1ca66430] = 4;

		*node[0x62fd1ca66460] = 0;

		*node[0x62fd1ca664c0] = 2;

		*node[0x62fd1ca66580] = ;;

		*node[0x62fd1ca665b0] = if;

		*node[0x62fd1ca665e0] = op_no;

		*node[0x62fd1ca66670] = >;

		*node[0x62fd1ca66610] = 3;

		*node[0x62fd1ca66640] = 0;

		*node[0x62fd1ca666a0] = ;;

		*node[0x62fd1ca667b0] = =;

		*node[0x62fd1ca666d0] = 4;

		*node[0x62fd1ca66780] = sqrt;

		*node[0x62fd1ca66750] = 3;

		*node[0x62fd1ca667e0] = ;;

		*node[0x62fd1ca669f0] = =;

		*node[0x62fd1ca66810] = 1;

		*node[0x62fd1ca669c0] = /;

		*node[0x62fd1ca66900] = -;

		*node[0x62fd1ca668a0] = -;

		*node[0x62fd1ca66840] = 0;

		*node[0x62fd1ca66870] = 1;

		*node[0x62fd1ca668d0] = 4;

		*node[0x62fd1ca66990] = *;

		*node[0x62fd1ca66930] = 2;

		*node[0x62fd1ca66960] = 0;

		*node[0x62fd1ca66a20] = ;;

		*node[0x62fd1ca66c30] = =;

		*node[0x62fd1ca66a50] = 2;

		*node[0x62fd1ca66c00] = /;

		*node[0x62fd1ca66b40] = +;

		*node[0x62fd1ca66ae0] = -;

		*node[0x62fd1ca66a80] = 0;

		*node[0x62fd1ca66ab0] = 1;

		*node[0x62fd1ca66b10] = 4;

		*node[0x62fd1ca66bd0] = *;

		*node[0x62fd1ca66b70] = 2;

		*node[0x62fd1ca66ba0] = 0;

		*node[0x62fd1ca66c60] = ;;

		*node[0x62fd1ca66c90] = print;

		*node[0x62fd1ca66cc0] = 0;

		*node[0x62fd1ca66cf0] = ;;

		*node[0x62fd1ca66d20] = print;

		*node[0x62fd1ca66d50] = 1;

		*node[0x62fd1ca66d80] = 2;

		*node[0x62fd1ca66db0] = elseif;

		*node[0x62fd1ca66de0] = op_no;

		*node[0x62fd1ca66e70] = ==;

		*node[0x62fd1ca66e10] = 3;

		*node[0x62fd1ca66e40] = 0;

		*node[0x62fd1ca66ea0] = ;;

		*node[0x62fd1ca67050] = =;

		*node[0x62fd1ca66ed0] = 3;

		*node[0x62fd1ca67020] = -;

		*node[0x62fd1ca66f00] = 0;

		*node[0x62fd1ca66ff0] = /;

		*node[0x62fd1ca66f30] = 1;

		*node[0x62fd1ca66fc0] = *;

		*node[0x62fd1ca66f60] = 2;

		*node[0x62fd1ca66f90] = 0;

		*node[0x62fd1ca67080] = ;;

		*node[0x62fd1ca670b0] = print;

		*node[0x62fd1ca670e0] = 1;

		*node[0x62fd1ca67110] = ;;

		*node[0x62fd1ca67140] = print;

		*node[0x62fd1ca67170] = 3;

		*node[0x62fd1ca671a0] = else;

		*node[0x62fd1ca671d0] = op_no;

		*node[0x62fd1ca67200] = ;;

		*node[0x62fd1ca67230] = print;

		*node[0x62fd1ca67260] = 0;

		*node[0x62fd1ca67290] = ;;

		*node[0x62fd1ca672c0] = return;

		*node[0x62fd1ca672f0] = 0;

		*node[0x62fd1ca67320] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffb8256a90] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5daeb7d446d0] = ;;

		*node[0x5daeb7d44750] = 0;

		*node[0x5daeb7d44780] = ;;

		*node[0x5daeb7d447b0] = input;

		*node[0x5daeb7d447e0] = 0;

		*node[0x5daeb7d44810] = 1;

		*node[0x5daeb7d44840] = 2;

		*node[0x5daeb7d448a0] = ;;

		*node[0x5daeb7d44900] = 0;

		*node[0x5daeb7d44930] = 1;

		*node[0x5daeb7d44960] = 2;

		*node[0x5daeb7d44990] = ;;

		*node[0x5daeb7d44a10] = 1;

		*node[0x5daeb7d44a40] = 0;

		*node[0x5daeb7d44a70] = 1;

		*node[0x5daeb7d44aa0] = 2;

		*node[0x5daeb7d44b00] = ;;

		*node[0x5daeb7d44b30] = if;

		*node[0x5daeb7d44b60] = op_no;

		*node[0x5daeb7d44bf0] = ==;

		*node[0x5daeb7d44b90] = 0;

		*node[0x5daeb7d44bc0] = 0;

		*node[0x5daeb7d44c20] = ;;

		*node[0x5daeb7d44c80] = 1;

		*node[0x5daeb7d44cb0] = 2;

		*node[0x5daeb7d44ce0] = else;

		*node[0x5daeb7d44d10] = op_no;

		*node[0x5daeb7d44d40] = ;;

		*node[0x5daeb7d44df0] = 0;

		*node[0x5daeb7d44e20] = 1;

		*node[0x5daeb7d44e50] = 2;

		*node[0x5daeb7d44e80] = ;;

		*node[0x5daeb7d44eb0] = return;

		*node[0x5daeb7d44ee0] = 0;

		*node[0x5daeb7d44f10] = ;;

		*node[0x5daeb7d44f90] = 2;

		*node[0x5daeb7d44ff0] = 0;

		*node[0x5daeb7d45020] = 1;

		*node[0x5daeb7d45050] = ;;

		*node[0x5daeb7d45140] = =;

		*node[0x5daeb7d45080] = 0;

		*node[0x5daeb7d45110] = -;

		*node[0x5daeb7d450b0] = 0;

		*node[0x5daeb7d450e0] = 1;

		*node[0x5daeb7d45170] = ;;

		*node[0x5daeb7d45200] = =;

		*node[0x5daeb7d451a0] = 1;

		*node[0x5daeb7d451d0] = 1;

		*node[0x5daeb7d45230] = ;;

		*node[0x5daeb7d452f0] = =;

		*node[0x5daeb7d45260] = 2;

		*node[0x5daeb7d452c0] = 1000;

		*node[0x5daeb7d45320] = ;;

		*node[0x5daeb7d45350] = if;

		*node[0x5daeb7d45380] = op_no;

		*node[0x5daeb7d45410] = ==;

		*node[0x5daeb7d453b0] = 0;

		*node[0x5daeb7d453e0] = 0;

		*node[0x5daeb7d45440] = ;;

		*node[0x5daeb7d45470] = if;

		*node[0x5daeb7d454a0] = op_no;

		*node[0x5daeb7d45530] = ==;

		*node[0x5daeb7d454d0] = 1;

		*node[0x5daeb7d45500] = 0;

		*node[0x5daeb7d45560] = ;;

		*node[0x5daeb7d45590] = print;

		*node[0x5daeb7d455c0] = 2;

		*node[0x5daeb7d455f0] = else;

		*node[0x5daeb7d45620] = op_no;

		*node[0x5daeb7d45650] = ;;

		*node[0x5daeb7d45680] = print;

		*node[0x5daeb7d456b0] = 0;

		*node[0x5daeb7d456e0] = else;

		*node[0x5daeb7d45710] = op_no;

		*node[0x5daeb7d45740] = ;;

		*node[0x5daeb7d45890] = =;

		*node[0x5daeb7d45770] = 3;

		*node[0x5daeb7d45860] = -;

		*node[0x5daeb7d457a0] = 0;

		*node[0x5daeb7d45830] = /;

		*node[0x5daeb7d457d0] = 1;

		*node[0x5daeb7d45800] = 0;

		*node[0x5daeb7d458c0] = ;;

		*node[0x5daeb7d458f0] = print;

		*node[0x5daeb7d45920] = 1;

		*node[0x5daeb7d45950] = ;;

		*node[0x5daeb7d45980] = print;

		*node[0x5daeb7d459b0] = 3;

		*node[0x5daeb7d459e0] = ;;

		*node[0x5daeb7d45a10] = return;

		*node[0x5daeb7d45a40] = 0;

		*node[0x5daeb7d45a70] = ;;

		*node[0x5daeb7d45af0] = 3;

		*node[0x5daeb7d45b20] = 0;

		*node[0x5daeb7d45b50] = 1;

		*node[0x5daeb7d45b80] = 2;

		*node[0x5daeb7d45be0] = ;;

		*node[0x5daeb7d45cd0] = =;

		*node[0x5daeb7d45c10] = 0;

		*node[0x5daeb7d45ca0] = -;

		*node[0x5daeb7d45c40] = 0;

		*node[0x5daeb7d45c70] = 1;

		*node[0x5daeb7d45d00] = ;;

		*node[0x5daeb7d45d90] = =;

		*node[0x5daeb7d45d30] = 1;

		*node[0x5daeb7d45d60] = 1;

		*node[0x5daeb7d45dc0] = ;;

		*node[0x5daeb7d45e50] = =;

		*node[0x5daeb7d45df0] = 0;

		*node[0x5daeb7d45e20] = 2;

		*node[0x5daeb7d45e80] = ;;

		*node[0x5daeb7d45eb0] = if;

		*node[0x5daeb7d45ee0] = op_no;

		*node[0x5daeb7d45f70] = ==;

		*node[0x5daeb7d45f10] = 2;

		*node[0x5daeb7d45f40] = 0;

		*node[0x5daeb7d45fa0] = ;;

		*node[0x5daeb7d46030] = =;

		*node[0x5daeb7d45fd0] = 1;

		*node[0x5daeb7d46000] = 0;

		*node[0x5daeb7d46060] = ;;

		*node[0x5daeb7d461b0] = =;

		*node[0x5daeb7d46090] = 2;

		*node[0x5daeb7d46180] = -;

		*node[0x5daeb7d460c0] = 0;

		*node[0x5daeb7d46150] = /;

		*node[0x5daeb7d460f0] = 1;

		*node[0x5daeb7d46120] = 0;

		*node[0x5daeb7d461e0] = ;;

		*node[0x5daeb7d46210] = print;

		*node[0x5daeb7d46240] = 0;

		*node[0x5daeb7d46270] = ;;

		*node[0x5daeb7d462a0] = print;

		*node[0x5daeb7d462d0] = 1;

		*node[0x5daeb7d46300] = 2;

		*node[0x5daeb7d46330] = else;

		*node[0x5daeb7d46360] = op_no;

		*node[0x5daeb7d46390] = ;;

		*node[0x5daeb7d465a0] = =;

		*node[0x5daeb7d463c0] = 3;

		*node[0x5daeb7d46570] = -;

		*node[0x5daeb7d46450] = *;

		*node[0x5daeb7d463f0] = 1;

		*node[0x5daeb7d46420] = 1;

		*node[0x5daeb7d46540] = *;

		*node[0x5daeb7d464e0] = *;

		*node[0x5daeb7d46480] = 4;

		*node[0x5daeb7d464b0] = 0;

		*node[0x5daeb7d46510] = 2;

		*node[0x5daeb7d465d0] = ;;

		*node[0x5daeb7d46600] = if;

		*node[0x5daeb7d46630] = op_no;

		*node[0x5daeb7d466c0] = >;

		*node[0x5daeb7d46660] = 3;

		*node[0x5daeb7d46690] = 0;

		*node[0x5daeb7d466f0] = ;;

		*node[0x5daeb7d46800] = =;

		*node[0x5daeb7d46720] = 4;

		*node[0x5daeb7d467d0] = sqrt;

		*node[0x5daeb7d467a0] = 3;

		*node[0x5daeb7d46830] = ;;

		*node[0x5daeb7d46a40] = =;

		*node[0x5daeb7d46860] = 1;

		*node[0x5daeb7d46a10] = /;

		*node[0x5daeb7d46950] = -;

		*node[0x5daeb7d468f0] = -;

		*node[0x5daeb7d46890] = 0;

		*node[0x5daeb7d468c0] = 1;

		*node[0x5daeb7d46920] = 4;

		*node[0x5daeb7d469e0] = *;

		*node[0x5daeb7d46980] = 2;

		*node[0x5daeb7d469b0] = 0;

		*node[0x5daeb7d46a70] = ;;

		*node[0x5daeb7d46c80] = =;

		*node[0x5daeb7d46aa0] = 2;

		*node[0x5daeb7d46c50] = /;

		*node[0x5daeb7d46b90] = +;

		*node[0x5daeb7d46b30] = -;

		*node[0x5daeb7d46ad0] = 0;

		*node[0x5daeb7d46b00] = 1;

		*node[0x5daeb7d46b60] = 4;

		*node[0x5daeb7d46c20] = *;

		*node[0x5daeb7d46bc0] = 2;

		*node[0x5daeb7d46bf0] = 0;

		*node[0x5daeb7d46cb0] = ;;

		*node[0x5daeb7d46ce0] = print;

		*node[0x5daeb7d46d10] = 0;

		*node[0x5daeb7d46d40] = ;;

		*node[0x5daeb7d46d70] = print;

		*node[0x5daeb7d46da0] = 1;

		*node[0x5daeb7d46dd0] = 2;

		*node[0x5daeb7d46e00] = elseif;

		*node[0x5daeb7d46e30] = op_no;

		*node[0x5daeb7d46ec0] = ==;

		*node[0x5daeb7d46e60] = 3;

		*node[0x5daeb7d46e90] = 0;

		*node[0x5daeb7d46ef0] = ;;

		*node[0x5daeb7d470a0] = =;

		*node[0x5daeb7d46f20] = 3;

		*node[0x5daeb7d47070] = -;

		*node[0x5daeb7d46f50] = 0;

		*node[0x5daeb7d47040] = /;

		*node[0x5daeb7d46f80] = 1;

		*node[0x5daeb7d47010] = *;

		*node[0x5daeb7d46fb0] = 2;

		*node[0x5daeb7d46fe0] = 0;

		*node[0x5daeb7d470d0] = ;;

		*node[0x5daeb7d47100] = print;

		*node[0x5daeb7d47130] = 1;

		*node[0x5daeb7d47160] = ;;

		*node[0x5daeb7d47190] = print;

		*node[0x5daeb7d471c0] = 3;

		*node[0x5daeb7d471f0] = else;

		*node[0x5daeb7d47220] = op_no;

		*node[0x5daeb7d47250] = ;;

		*node[0x5daeb7d47280] = print;

		*node[0x5daeb7d472b0] = 0;

		*node[0x5daeb7d472e0] = ;;

		*node[0x5daeb7d47310] = return;

		*node[0x5daeb7d47340] = 0;

		*node[0x5daeb7d47370] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffde783ed00] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x57e3b2d5b8f0] = ;;

		*node[0x57e3b2d5b920] = 0;

		*node[0x57e3b2d5b950] = ;;

		*node[0x57e3b2d5b980] = input;

		*node[0x57e3b2d5b9b0] = 0;

		*node[0x57e3b2d5b9e0] = 1;

		*node[0x57e3b2d5ba10] = 2;

		*node[0x57e3b2d5ba40] = ;;

		*node[0x57e3b2d5baa0] = 0;

		*node[0x57e3b2d5bad0] = 1;

		*node[0x57e3b2d5bb00] = 2;

		*node[0x57e3b2d5bb30] = ;;

		*node[0x57e3b2d5bb60] = 1;

		*node[0x57e3b2d5bb90] = 0;

		*node[0x57e3b2d5bbc0] = 1;

		*node[0x57e3b2d5bbf0] = 2;

		*node[0x57e3b2d5bc20] = ;;

		*node[0x57e3b2d5bc50] = if;

		*node[0x57e3b2d5bc80] = op_no;

		*node[0x57e3b2d5bd10] = ==;

		*node[0x57e3b2d5bcb0] = 0;

		*node[0x57e3b2d5bce0] = 0;

		*node[0x57e3b2d5bd40] = ;;

		*node[0x57e3b2d5bda0] = 1;

		*node[0x57e3b2d5bdd0] = 2;

		*node[0x57e3b2d5be00] = else;

		*node[0x57e3b2d5be30] = op_no;

		*node[0x57e3b2d5be60] = ;;

		*node[0x57e3b2d5bec0] = 0;

		*node[0x57e3b2d5bef0] = 1;

		*node[0x57e3b2d5bf20] = 2;

		*node[0x57e3b2d5bf50] = ;;

		*node[0x57e3b2d5bf80] = return;

		*node[0x57e3b2d5bfb0] = 0;

		*node[0x57e3b2d5bfe0] = ;;

		*node[0x57e3b2d5c010] = 2;

		*node[0x57e3b2d5c040] = 0;

		*node[0x57e3b2d5c070] = 1;

		*node[0x57e3b2d5c0a0] = ;;

		*node[0x57e3b2d5c190] = =;

		*node[0x57e3b2d5c0d0] = 0;

		*node[0x57e3b2d5c160] = -;

		*node[0x57e3b2d5c100] = 0;

		*node[0x57e3b2d5c130] = 1;

		*node[0x57e3b2d5c1c0] = ;;

		*node[0x57e3b2d5c250] = =;

		*node[0x57e3b2d5c1f0] = 1;

		*node[0x57e3b2d5c220] = 1;

		*node[0x57e3b2d5c280] = ;;

		*node[0x57e3b2d5c310] = =;

		*node[0x57e3b2d5c2b0] = 2;

		*node[0x57e3b2d5c2e0] = 1000;

		*node[0x57e3b2d5c340] = ;;

		*node[0x57e3b2d5c370] = if;

		*node[0x57e3b2d5c3a0] = op_no;

		*node[0x57e3b2d5c430] = ==;

		*node[0x57e3b2d5c3d0] = 0;

		*node[0x57e3b2d5c400] = 0;

		*node[0x57e3b2d5c460] = ;;

		*node[0x57e3b2d5c490] = if;

		*node[0x57e3b2d5c4c0] = op_no;

		*node[0x57e3b2d5c550] = ==;

		*node[0x57e3b2d5c4f0] = 1;

		*node[0x57e3b2d5c520] = 0;

		*node[0x57e3b2d5c580] = ;;

		*node[0x57e3b2d5c5b0] = print;

		*node[0x57e3b2d5c5e0] = 2;

		*node[0x57e3b2d5c610] = else;

		*node[0x57e3b2d5c640] = op_no;

		*node[0x57e3b2d5c670] = ;;

		*node[0x57e3b2d5c6a0] = print;

		*node[0x57e3b2d5c6d0] = 0;

		*node[0x57e3b2d5c700] = else;

		*node[0x57e3b2d5c730] = op_no;

		*node[0x57e3b2d5c760] = ;;

		*node[0x57e3b2d5c8b0] = =;

		*node[0x57e3b2d5c790] = 3;

		*node[0x57e3b2d5c880] = -;

		*node[0x57e3b2d5c7c0] = 0;

		*node[0x57e3b2d5c850] = /;

		*node[0x57e3b2d5c7f0] = 1;

		*node[0x57e3b2d5c820] = 0;

		*node[0x57e3b2d5c8e0] = ;;

		*node[0x57e3b2d5c910] = print;

		*node[0x57e3b2d5c940] = 1;

		*node[0x57e3b2d5c970] = ;;

		*node[0x57e3b2d5c9a0] = print;

		*node[0x57e3b2d5c9d0] = 3;

		*node[0x57e3b2d5ca00] = ;;

		*node[0x57e3b2d5ca30] = return;

		*node[0x57e3b2d5ca60] = 0;

		*node[0x57e3b2d5ca90] = ;;

		*node[0x57e3b2d5cac0] = 3;

		*node[0x57e3b2d5caf0] = 0;

		*node[0x57e3b2d5cb20] = 1;

		*node[0x57e3b2d5cb50] = 2;

		*node[0x57e3b2d5cb80] = ;;

		*node[0x57e3b2d5cc70] = =;

		*node[0x57e3b2d5cbb0] = 0;

		*node[0x57e3b2d5cc40] = -;

		*node[0x57e3b2d5cbe0] = 0;

		*node[0x57e3b2d5cc10] = 1;

		*node[0x57e3b2d5cca0] = ;;

		*node[0x57e3b2d5cd30] = =;

		*node[0x57e3b2d5ccd0] = 1;

		*node[0x57e3b2d5cd00] = 1;

		*node[0x57e3b2d5cd60] = ;;

		*node[0x57e3b2d5cdf0] = =;

		*node[0x57e3b2d5cd90] = 0;

		*node[0x57e3b2d5cdc0] = 2;

		*node[0x57e3b2d5ce20] = ;;

		*node[0x57e3b2d5ce50] = if;

		*node[0x57e3b2d5ce80] = op_no;

		*node[0x57e3b2d5cf10] = ==;

		*node[0x57e3b2d5ceb0] = 2;

		*node[0x57e3b2d5cee0] = 0;

		*node[0x57e3b2d5cf40] = ;;

		*node[0x57e3b2d5cfd0] = =;

		*node[0x57e3b2d5cf70] = 1;

		*node[0x57e3b2d5cfa0] = 0;

		*node[0x57e3b2d5d000] = ;;

		*node[0x57e3b2d5d150] = =;

		*node[0x57e3b2d5d030] = 2;

		*node[0x57e3b2d5d120] = -;

		*node[0x57e3b2d5d060] = 0;

		*node[0x57e3b2d5d0f0] = /;

		*node[0x57e3b2d5d090] = 1;

		*node[0x57e3b2d5d0c0] = 0;

		*node[0x57e3b2d5d180] = ;;

		*node[0x57e3b2d5d1b0] = print;

		*node[0x57e3b2d5d1e0] = 0;

		*node[0x57e3b2d5d210] = ;;

		*node[0x57e3b2d5d240] = print;

		*node[0x57e3b2d5d270] = 1;

		*node[0x57e3b2d5d2a0] = 2;

		*node[0x57e3b2d5d2d0] = else;

		*node[0x57e3b2d5d300] = op_no;

		*node[0x57e3b2d5d330] = ;;

		*node[0x57e3b2d5d540] = =;

		*node[0x57e3b2d5d360] = 3;

		*node[0x57e3b2d5d510] = -;

		*node[0x57e3b2d5d3f0] = *;

		*node[0x57e3b2d5d390] = 1;

		*node[0x57e3b2d5d3c0] = 1;

		*node[0x57e3b2d5d4e0] = *;

		*node[0x57e3b2d5d480] = *;

		*node[0x57e3b2d5d420] = 4;

		*node[0x57e3b2d5d450] = 0;

		*node[0x57e3b2d5d4b0] = 2;

		*node[0x57e3b2d5d570] = ;;

		*node[0x57e3b2d5d5a0] = if;

		*node[0x57e3b2d5d5d0] = op_no;

		*node[0x57e3b2d5d660] = >;

		*node[0x57e3b2d5d600] = 3;

		*node[0x57e3b2d5d630] = 0;

		*node[0x57e3b2d5d690] = ;;

		*node[0x57e3b2d5d750] = =;

		*node[0x57e3b2d5d6c0] = 4;

		*node[0x57e3b2d5d720] = sqrt;

		*node[0x57e3b2d5d6f0] = 3;

		*node[0x57e3b2d5d780] = ;;

		*node[0x57e3b2d5d990] = =;

		*node[0x57e3b2d5d7b0] = 1;

		*node[0x57e3b2d5d960] = /;

		*node[0x57e3b2d5d8a0] = -;

		*node[0x57e3b2d5d840] = -;

		*node[0x57e3b2d5d7e0] = 0;

		*node[0x57e3b2d5d810] = 1;

		*node[0x57e3b2d5d870] = 4;

		*node[0x57e3b2d5d930] = *;

		*node[0x57e3b2d5d8d0] = 2;

		*node[0x57e3b2d5d900] = 0;

		*node[0x57e3b2d5d9c0] = ;;

		*node[0x57e3b2d5dbd0] = =;

		*node[0x57e3b2d5d9f0] = 2;

		*node[0x57e3b2d5dba0] = /;

		*node[0x57e3b2d5dae0] = +;

		*node[0x57e3b2d5da80] = -;

		*node[0x57e3b2d5da20] = 0;

		*node[0x57e3b2d5da50] = 1;

		*node[0x57e3b2d5dab0] = 4;

		*node[0x57e3b2d5db70] = *;

		*node[0x57e3b2d5db10] = 2;

		*node[0x57e3b2d5db40] = 0;

		*node[0x57e3b2d5dc00] = ;;

		*node[0x57e3b2d5dc30] = print;

		*node[0x57e3b2d5dc60] = 0;

		*node[0x57e3b2d5dc90] = ;;

		*node[0x57e3b2d5dcc0] = print;

		*node[0x57e3b2d5dcf0] = 1;

		*node[0x57e3b2d5dd20] = 2;

		*node[0x57e3b2d5dd50] = elseif;

		*node[0x57e3b2d5dd80] = op_no;

		*node[0x57e3b2d5de10] = ==;

		*node[0x57e3b2d5ddb0] = 3;

		*node[0x57e3b2d5dde0] = 0;

		*node[0x57e3b2d5de40] = ;;

		*node[0x57e3b2d5dff0] = =;

		*node[0x57e3b2d5de70] = 3;

		*node[0x57e3b2d5dfc0] = -;

		*node[0x57e3b2d5dea0] = 0;

		*node[0x57e3b2d5df90] = /;

		*node[0x57e3b2d5ded0] = 1;

		*node[0x57e3b2d5df60] = *;

		*node[0x57e3b2d5df00] = 2;

		*node[0x57e3b2d5df30] = 0;

		*node[0x57e3b2d5e020] = ;;

		*node[0x57e3b2d5e050] = print;

		*node[0x57e3b2d5e080] = 1;

		*node[0x57e3b2d5e0b0] = ;;

		*node[0x57e3b2d5e0e0] = print;

		*node[0x57e3b2d5e110] = 3;

		*node[0x57e3b2d5e140] = else;

		*node[0x57e3b2d5e170] = op_no;

		*node[0x57e3b2d5e1a0] = ;;

		*node[0x57e3b2d5e1d0] = print;

		*node[0x57e3b2d5e200] = 0;

		*node[0x57e3b2d5e230] = ;;

		*node[0x57e3b2d5e260] = return;

		*node[0x57e3b2d5e290] = 0;

		*node[0x57e3b2d5e2c0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff1ee2fb60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5adcb0f3fdb0] = ;;

		*node[0x5adcb0f3fde0] = 0;

		*node[0x5adcb0f3fe10] = ;;

		*node[0x5adcb0f3fe40] = input;

		*node[0x5adcb0f3fe70] = 0;

		*node[0x5adcb0f3fea0] = 1;

		*node[0x5adcb0f3fed0] = 2;

		*node[0x5adcb0f3ff00] = ;;

		*node[0x5adcb0f3ff60] = 0;

		*node[0x5adcb0f3ff90] = 1;

		*node[0x5adcb0f3ffc0] = 2;

		*node[0x5adcb0f3fff0] = ;;

		*node[0x5adcb0f40020] = 1;

		*node[0x5adcb0f40050] = 0;

		*node[0x5adcb0f40080] = 1;

		*node[0x5adcb0f400b0] = 2;

		*node[0x5adcb0f400e0] = ;;

		*node[0x5adcb0f40110] = if;

		*node[0x5adcb0f40140] = op_no;

		*node[0x5adcb0f401d0] = ==;

		*node[0x5adcb0f40170] = 0;

		*node[0x5adcb0f401a0] = 0;

		*node[0x5adcb0f40200] = ;;

		*node[0x5adcb0f40260] = 1;

		*node[0x5adcb0f40290] = 2;

		*node[0x5adcb0f402c0] = else;

		*node[0x5adcb0f402f0] = op_no;

		*node[0x5adcb0f40320] = ;;

		*node[0x5adcb0f40380] = 0;

		*node[0x5adcb0f403b0] = 1;

		*node[0x5adcb0f403e0] = 2;

		*node[0x5adcb0f40410] = ;;

		*node[0x5adcb0f40440] = return;

		*node[0x5adcb0f40470] = 0;

		*node[0x5adcb0f404a0] = ;;

		*node[0x5adcb0f404d0] = 2;

		*node[0x5adcb0f40500] = 0;

		*node[0x5adcb0f40530] = 1;

		*node[0x5adcb0f40560] = ;;

		*node[0x5adcb0f40650] = =;

		*node[0x5adcb0f40590] = 0;

		*node[0x5adcb0f40620] = -;

		*node[0x5adcb0f405c0] = 0;

		*node[0x5adcb0f405f0] = 1;

		*node[0x5adcb0f40680] = ;;

		*node[0x5adcb0f40710] = =;

		*node[0x5adcb0f406b0] = 1;

		*node[0x5adcb0f406e0] = 1;

		*node[0x5adcb0f40740] = ;;

		*node[0x5adcb0f407d0] = =;

		*node[0x5adcb0f40770] = 2;

		*node[0x5adcb0f407a0] = 1000;

		*node[0x5adcb0f40800] = ;;

		*node[0x5adcb0f40830] = if;

		*node[0x5adcb0f40860] = op_no;

		*node[0x5adcb0f408f0] = ==;

		*node[0x5adcb0f40890] = 0;

		*node[0x5adcb0f408c0] = 0;

		*node[0x5adcb0f40920] = ;;

		*node[0x5adcb0f40950] = if;

		*node[0x5adcb0f40980] = op_no;

		*node[0x5adcb0f40a10] = ==;

		*node[0x5adcb0f409b0] = 1;

		*node[0x5adcb0f409e0] = 0;

		*node[0x5adcb0f40a40] = ;;

		*node[0x5adcb0f40a70] = print;

		*node[0x5adcb0f40aa0] = 2;

		*node[0x5adcb0f40ad0] = else;

		*node[0x5adcb0f40b00] = op_no;

		*node[0x5adcb0f40b30] = ;;

		*node[0x5adcb0f40b60] = print;

		*node[0x5adcb0f40b90] = 0;

		*node[0x5adcb0f40bc0] = else;

		*node[0x5adcb0f40bf0] = op_no;

		*node[0x5adcb0f40c20] = ;;

		*node[0x5adcb0f40d70] = =;

		*node[0x5adcb0f40c50] = 3;

		*node[0x5adcb0f40d40] = -;

		*node[0x5adcb0f40c80] = 0;

		*node[0x5adcb0f40d10] = /;

		*node[0x5adcb0f40cb0] = 1;

		*node[0x5adcb0f40ce0] = 0;

		*node[0x5adcb0f40da0] = ;;

		*node[0x5adcb0f40dd0] = print;

		*node[0x5adcb0f40e00] = 1;

		*node[0x5adcb0f40e30] = ;;

		*node[0x5adcb0f40e60] = print;

		*node[0x5adcb0f40e90] = 3;

		*node[0x5adcb0f40ec0] = ;;

		*node[0x5adcb0f40ef0] = return;

		*node[0x5adcb0f40f20] = 0;

		*node[0x5adcb0f40f50] = ;;

		*node[0x5adcb0f40f80] = 3;

		*node[0x5adcb0f40fb0] = 0;

		*node[0x5adcb0f40fe0] = 1;

		*node[0x5adcb0f41010] = 2;

		*node[0x5adcb0f41040] = ;;

		*node[0x5adcb0f41130] = =;

		*node[0x5adcb0f41070] = 0;

		*node[0x5adcb0f41100] = -;

		*node[0x5adcb0f410a0] = 0;

		*node[0x5adcb0f410d0] = 1;

		*node[0x5adcb0f41160] = ;;

		*node[0x5adcb0f411f0] = =;

		*node[0x5adcb0f41190] = 1;

		*node[0x5adcb0f411c0] = 1;

		*node[0x5adcb0f41220] = ;;

		*node[0x5adcb0f412b0] = =;

		*node[0x5adcb0f41250] = 0;

		*node[0x5adcb0f41280] = 2;

		*node[0x5adcb0f412e0] = ;;

		*node[0x5adcb0f41310] = if;

		*node[0x5adcb0f41340] = op_no;

		*node[0x5adcb0f413d0] = ==;

		*node[0x5adcb0f41370] = 2;

		*node[0x5adcb0f413a0] = 0;

		*node[0x5adcb0f41400] = ;;

		*node[0x5adcb0f41490] = =;

		*node[0x5adcb0f41430] = 1;

		*node[0x5adcb0f41460] = 0;

		*node[0x5adcb0f414c0] = ;;

		*node[0x5adcb0f41610] = =;

		*node[0x5adcb0f414f0] = 2;

		*node[0x5adcb0f415e0] = -;

		*node[0x5adcb0f41520] = 0;

		*node[0x5adcb0f415b0] = /;

		*node[0x5adcb0f41550] = 1;

		*node[0x5adcb0f41580] = 0;

		*node[0x5adcb0f41640] = ;;

		*node[0x5adcb0f41670] = print;

		*node[0x5adcb0f416a0] = 0;

		*node[0x5adcb0f416d0] = ;;

		*node[0x5adcb0f41700] = print;

		*node[0x5adcb0f41730] = 1;

		*node[0x5adcb0f41760] = 2;

		*node[0x5adcb0f41790] = else;

		*node[0x5adcb0f417c0] = op_no;

		*node[0x5adcb0f417f0] = ;;

		*node[0x5adcb0f41a00] = =;

		*node[0x5adcb0f41820] = 3;

		*node[0x5adcb0f419d0] = -;

		*node[0x5adcb0f418b0] = *;

		*node[0x5adcb0f41850] = 1;

		*node[0x5adcb0f41880] = 1;

		*node[0x5adcb0f419a0] = *;

		*node[0x5adcb0f41940] = *;

		*node[0x5adcb0f418e0] = 4;

		*node[0x5adcb0f41910] = 0;

		*node[0x5adcb0f41970] = 2;

		*node[0x5adcb0f41a30] = ;;

		*node[0x5adcb0f41a60] = if;

		*node[0x5adcb0f41a90] = op_no;

		*node[0x5adcb0f41b20] = >;

		*node[0x5adcb0f41ac0] = 3;

		*node[0x5adcb0f41af0] = 0;

		*node[0x5adcb0f41b50] = ;;

		*node[0x5adcb0f41c10] = =;

		*node[0x5adcb0f41b80] = 4;

		*node[0x5adcb0f41be0] = sqrt;

		*node[0x5adcb0f41bb0] = 3;

		*node[0x5adcb0f41c40] = ;;

		*node[0x5adcb0f41e50] = =;

		*node[0x5adcb0f41c70] = 1;

		*node[0x5adcb0f41e20] = /;

		*node[0x5adcb0f41d60] = -;

		*node[0x5adcb0f41d00] = -;

		*node[0x5adcb0f41ca0] = 0;

		*node[0x5adcb0f41cd0] = 1;

		*node[0x5adcb0f41d30] = 4;

		*node[0x5adcb0f41df0] = *;

		*node[0x5adcb0f41d90] = 2;

		*node[0x5adcb0f41dc0] = 0;

		*node[0x5adcb0f41e80] = ;;

		*node[0x5adcb0f42090] = =;

		*node[0x5adcb0f41eb0] = 2;

		*node[0x5adcb0f42060] = /;

		*node[0x5adcb0f41fa0] = +;

		*node[0x5adcb0f41f40] = -;

		*node[0x5adcb0f41ee0] = 0;

		*node[0x5adcb0f41f10] = 1;

		*node[0x5adcb0f41f70] = 4;

		*node[0x5adcb0f42030] = *;

		*node[0x5adcb0f41fd0] = 2;

		*node[0x5adcb0f42000] = 0;

		*node[0x5adcb0f420c0] = ;;

		*node[0x5adcb0f420f0] = print;

		*node[0x5adcb0f42120] = 0;

		*node[0x5adcb0f42150] = ;;

		*node[0x5adcb0f42180] = print;

		*node[0x5adcb0f421b0] = 1;

		*node[0x5adcb0f421e0] = 2;

		*node[0x5adcb0f42210] = elseif;

		*node[0x5adcb0f42240] = op_no;

		*node[0x5adcb0f422d0] = ==;

		*node[0x5adcb0f42270] = 3;

		*node[0x5adcb0f422a0] = 0;

		*node[0x5adcb0f42300] = ;;

		*node[0x5adcb0f424b0] = =;

		*node[0x5adcb0f42330] = 3;

		*node[0x5adcb0f42480] = -;

		*node[0x5adcb0f42360] = 0;

		*node[0x5adcb0f42450] = /;

		*node[0x5adcb0f42390] = 1;

		*node[0x5adcb0f42420] = *;

		*node[0x5adcb0f423c0] = 2;

		*node[0x5adcb0f423f0] = 0;

		*node[0x5adcb0f424e0] = ;;

		*node[0x5adcb0f42510] = print;

		*node[0x5adcb0f42540] = 1;

		*node[0x5adcb0f42570] = ;;

		*node[0x5adcb0f425a0] = print;

		*node[0x5adcb0f425d0] = 3;

		*node[0x5adcb0f42600] = else;

		*node[0x5adcb0f42630] = op_no;

		*node[0x5adcb0f42660] = ;;

		*node[0x5adcb0f42690] = print;

		*node[0x5adcb0f426c0] = 0;

		*node[0x5adcb0f426f0] = ;;

		*node[0x5adcb0f42720] = return;

		*node[0x5adcb0f42750] = 0;

		*node[0x5adcb0f42780] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffeb3f85360] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e0ddc50b6d0] = ;;

		*node[0x5e0ddc50b750] = 0;

		*node[0x5e0ddc50b780] = ;;

		*node[0x5e0ddc50b7b0] = input;

		*node[0x5e0ddc50b7e0] = 0;

		*node[0x5e0ddc50b810] = 1;

		*node[0x5e0ddc50b840] = 2;

		*node[0x5e0ddc50b8a0] = ;;

		*node[0x5e0ddc50b900] = 0;

		*node[0x5e0ddc50b930] = 1;

		*node[0x5e0ddc50b960] = 2;

		*node[0x5e0ddc50b990] = ;;

		*node[0x5e0ddc50ba10] = 1;

		*node[0x5e0ddc50ba40] = 0;

		*node[0x5e0ddc50ba70] = 1;

		*node[0x5e0ddc50baa0] = 2;

		*node[0x5e0ddc50bb00] = ;;

		*node[0x5e0ddc50bb30] = if;

		*node[0x5e0ddc50bb60] = op_no;

		*node[0x5e0ddc50bbf0] = ==;

		*node[0x5e0ddc50bb90] = 0;

		*node[0x5e0ddc50bbc0] = 0;

		*node[0x5e0ddc50bc20] = ;;

		*node[0x5e0ddc50bc80] = 1;

		*node[0x5e0ddc50bcb0] = 2;

		*node[0x5e0ddc50bce0] = else;

		*node[0x5e0ddc50bd10] = op_no;

		*node[0x5e0ddc50bd40] = ;;

		*node[0x5e0ddc50bdf0] = 0;

		*node[0x5e0ddc50be20] = 1;

		*node[0x5e0ddc50be50] = 2;

		*node[0x5e0ddc50be80] = ;;

		*node[0x5e0ddc50beb0] = return;

		*node[0x5e0ddc50bee0] = 0;

		*node[0x5e0ddc50bf10] = ;;

		*node[0x5e0ddc50bf90] = 2;

		*node[0x5e0ddc50bff0] = 0;

		*node[0x5e0ddc50c020] = 1;

		*node[0x5e0ddc50c050] = ;;

		*node[0x5e0ddc50c140] = =;

		*node[0x5e0ddc50c080] = 0;

		*node[0x5e0ddc50c110] = -;

		*node[0x5e0ddc50c0b0] = 0;

		*node[0x5e0ddc50c0e0] = 1;

		*node[0x5e0ddc50c170] = ;;

		*node[0x5e0ddc50c200] = =;

		*node[0x5e0ddc50c1a0] = 1;

		*node[0x5e0ddc50c1d0] = 1;

		*node[0x5e0ddc50c230] = ;;

		*node[0x5e0ddc50c2f0] = =;

		*node[0x5e0ddc50c260] = 2;

		*node[0x5e0ddc50c2c0] = 1000;

		*node[0x5e0ddc50c320] = ;;

		*node[0x5e0ddc50c350] = if;

		*node[0x5e0ddc50c380] = op_no;

		*node[0x5e0ddc50c410] = ==;

		*node[0x5e0ddc50c3b0] = 0;

		*node[0x5e0ddc50c3e0] = 0;

		*node[0x5e0ddc50c440] = ;;

		*node[0x5e0ddc50c470] = if;

		*node[0x5e0ddc50c4a0] = op_no;

		*node[0x5e0ddc50c530] = ==;

		*node[0x5e0ddc50c4d0] = 1;

		*node[0x5e0ddc50c500] = 0;

		*node[0x5e0ddc50c560] = ;;

		*node[0x5e0ddc50c590] = print;

		*node[0x5e0ddc50c5c0] = 2;

		*node[0x5e0ddc50c5f0] = else;

		*node[0x5e0ddc50c620] = op_no;

		*node[0x5e0ddc50c650] = ;;

		*node[0x5e0ddc50c680] = print;

		*node[0x5e0ddc50c6b0] = 0;

		*node[0x5e0ddc50c6e0] = else;

		*node[0x5e0ddc50c710] = op_no;

		*node[0x5e0ddc50c740] = ;;

		*node[0x5e0ddc50c890] = =;

		*node[0x5e0ddc50c770] = 3;

		*node[0x5e0ddc50c860] = -;

		*node[0x5e0ddc50c7a0] = 0;

		*node[0x5e0ddc50c830] = /;

		*node[0x5e0ddc50c7d0] = 1;

		*node[0x5e0ddc50c800] = 0;

		*node[0x5e0ddc50c8c0] = ;;

		*node[0x5e0ddc50c8f0] = print;

		*node[0x5e0ddc50c920] = 1;

		*node[0x5e0ddc50c950] = ;;

		*node[0x5e0ddc50c980] = print;

		*node[0x5e0ddc50c9b0] = 3;

		*node[0x5e0ddc50c9e0] = ;;

		*node[0x5e0ddc50ca10] = return;

		*node[0x5e0ddc50ca40] = 0;

		*node[0x5e0ddc50ca70] = ;;

		*node[0x5e0ddc50caf0] = 3;

		*node[0x5e0ddc50cb20] = 0;

		*node[0x5e0ddc50cb50] = 1;

		*node[0x5e0ddc50cb80] = 2;

		*node[0x5e0ddc50cbe0] = ;;

		*node[0x5e0ddc50ccd0] = =;

		*node[0x5e0ddc50cc10] = 0;

		*node[0x5e0ddc50cca0] = -;

		*node[0x5e0ddc50cc40] = 0;

		*node[0x5e0ddc50cc70] = 1;

		*node[0x5e0ddc50cd00] = ;;

		*node[0x5e0ddc50cd90] = =;

		*node[0x5e0ddc50cd30] = 1;

		*node[0x5e0ddc50cd60] = 1;

		*node[0x5e0ddc50cdc0] = ;;

		*node[0x5e0ddc50ce50] = =;

		*node[0x5e0ddc50cdf0] = 0;

		*node[0x5e0ddc50ce20] = 2;

		*node[0x5e0ddc50ce80] = ;;

		*node[0x5e0ddc50ceb0] = if;

		*node[0x5e0ddc50cee0] = op_no;

		*node[0x5e0ddc50cf70] = ==;

		*node[0x5e0ddc50cf10] = 2;

		*node[0x5e0ddc50cf40] = 0;

		*node[0x5e0ddc50cfa0] = ;;

		*node[0x5e0ddc50d030] = =;

		*node[0x5e0ddc50cfd0] = 1;

		*node[0x5e0ddc50d000] = 0;

		*node[0x5e0ddc50d060] = ;;

		*node[0x5e0ddc50d1b0] = =;

		*node[0x5e0ddc50d090] = 2;

		*node[0x5e0ddc50d180] = -;

		*node[0x5e0ddc50d0c0] = 0;

		*node[0x5e0ddc50d150] = /;

		*node[0x5e0ddc50d0f0] = 1;

		*node[0x5e0ddc50d120] = 0;

		*node[0x5e0ddc50d1e0] = ;;

		*node[0x5e0ddc50d210] = print;

		*node[0x5e0ddc50d240] = 0;

		*node[0x5e0ddc50d270] = ;;

		*node[0x5e0ddc50d2a0] = print;

		*node[0x5e0ddc50d2d0] = 1;

		*node[0x5e0ddc50d300] = 2;

		*node[0x5e0ddc50d330] = else;

		*node[0x5e0ddc50d360] = op_no;

		*node[0x5e0ddc50d390] = ;;

		*node[0x5e0ddc50d5a0] = =;

		*node[0x5e0ddc50d3c0] = 3;

		*node[0x5e0ddc50d570] = -;

		*node[0x5e0ddc50d450] = *;

		*node[0x5e0ddc50d3f0] = 1;

		*node[0x5e0ddc50d420] = 1;

		*node[0x5e0ddc50d540] = *;

		*node[0x5e0ddc50d4e0] = *;

		*node[0x5e0ddc50d480] = 4;

		*node[0x5e0ddc50d4b0] = 0;

		*node[0x5e0ddc50d510] = 2;

		*node[0x5e0ddc50d5d0] = ;;

		*node[0x5e0ddc50d600] = if;

		*node[0x5e0ddc50d630] = op_no;

		*node[0x5e0ddc50d6c0] = >;

		*node[0x5e0ddc50d660] = 3;

		*node[0x5e0ddc50d690] = 0;

		*node[0x5e0ddc50d6f0] = ;;

		*node[0x5e0ddc50d800] = =;

		*node[0x5e0ddc50d720] = 4;

		*node[0x5e0ddc50d7d0] = sqrt;

		*node[0x5e0ddc50d7a0] = 3;

		*node[0x5e0ddc50d830] = ;;

		*node[0x5e0ddc50da40] = =;

		*node[0x5e0ddc50d860] = 1;

		*node[0x5e0ddc50da10] = /;

		*node[0x5e0ddc50d950] = -;

		*node[0x5e0ddc50d8f0] = -;

		*node[0x5e0ddc50d890] = 0;

		*node[0x5e0ddc50d8c0] = 1;

		*node[0x5e0ddc50d920] = 4;

		*node[0x5e0ddc50d9e0] = *;

		*node[0x5e0ddc50d980] = 2;

		*node[0x5e0ddc50d9b0] = 0;

		*node[0x5e0ddc50da70] = ;;

		*node[0x5e0ddc50dc80] = =;

		*node[0x5e0ddc50daa0] = 2;

		*node[0x5e0ddc50dc50] = /;

		*node[0x5e0ddc50db90] = +;

		*node[0x5e0ddc50db30] = -;

		*node[0x5e0ddc50dad0] = 0;

		*node[0x5e0ddc50db00] = 1;

		*node[0x5e0ddc50db60] = 4;

		*node[0x5e0ddc50dc20] = *;

		*node[0x5e0ddc50dbc0] = 2;

		*node[0x5e0ddc50dbf0] = 0;

		*node[0x5e0ddc50dcb0] = ;;

		*node[0x5e0ddc50dce0] = print;

		*node[0x5e0ddc50dd10] = 0;

		*node[0x5e0ddc50dd40] = ;;

		*node[0x5e0ddc50dd70] = print;

		*node[0x5e0ddc50dda0] = 1;

		*node[0x5e0ddc50ddd0] = 2;

		*node[0x5e0ddc50de00] = elseif;

		*node[0x5e0ddc50de30] = op_no;

		*node[0x5e0ddc50dec0] = ==;

		*node[0x5e0ddc50de60] = 3;

		*node[0x5e0ddc50de90] = 0;

		*node[0x5e0ddc50def0] = ;;

		*node[0x5e0ddc50e0a0] = =;

		*node[0x5e0ddc50df20] = 3;

		*node[0x5e0ddc50e070] = -;

		*node[0x5e0ddc50df50] = 0;

		*node[0x5e0ddc50e040] = /;

		*node[0x5e0ddc50df80] = 1;

		*node[0x5e0ddc50e010] = *;

		*node[0x5e0ddc50dfb0] = 2;

		*node[0x5e0ddc50dfe0] = 0;

		*node[0x5e0ddc50e0d0] = ;;

		*node[0x5e0ddc50e100] = print;

		*node[0x5e0ddc50e130] = 1;

		*node[0x5e0ddc50e160] = ;;

		*node[0x5e0ddc50e190] = print;

		*node[0x5e0ddc50e1c0] = 3;

		*node[0x5e0ddc50e1f0] = else;

		*node[0x5e0ddc50e220] = op_no;

		*node[0x5e0ddc50e250] = ;;

		*node[0x5e0ddc50e280] = print;

		*node[0x5e0ddc50e2b0] = 0;

		*node[0x5e0ddc50e2e0] = ;;

		*node[0x5e0ddc50e310] = return;

		*node[0x5e0ddc50e340] = 0;

		*node[0x5e0ddc50e370] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe584404b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5559c8b906d0] = ;;

		*node[0x5559c8b90750] = 0;

		*node[0x5559c8b90780] = ;;

		*node[0x5559c8b907b0] = input;

		*node[0x5559c8b907e0] = 0;

		*node[0x5559c8b90810] = 1;

		*node[0x5559c8b90840] = 2;

		*node[0x5559c8b908a0] = ;;

		*node[0x5559c8b90900] = 0;

		*node[0x5559c8b90930] = 1;

		*node[0x5559c8b90960] = 2;

		*node[0x5559c8b90990] = ;;

		*node[0x5559c8b90a10] = 1;

		*node[0x5559c8b90a40] = 0;

		*node[0x5559c8b90a70] = 1;

		*node[0x5559c8b90aa0] = 2;

		*node[0x5559c8b90b00] = ;;

		*node[0x5559c8b90b30] = if;

		*node[0x5559c8b90b60] = op_no;

		*node[0x5559c8b90bf0] = ==;

		*node[0x5559c8b90b90] = 0;

		*node[0x5559c8b90bc0] = 0;

		*node[0x5559c8b90c20] = ;;

		*node[0x5559c8b90c80] = 1;

		*node[0x5559c8b90cb0] = 2;

		*node[0x5559c8b90ce0] = else;

		*node[0x5559c8b90d10] = op_no;

		*node[0x5559c8b90d40] = ;;

		*node[0x5559c8b90df0] = 0;

		*node[0x5559c8b90e20] = 1;

		*node[0x5559c8b90e50] = 2;

		*node[0x5559c8b90e80] = ;;

		*node[0x5559c8b90eb0] = return;

		*node[0x5559c8b90ee0] = 0;

		*node[0x5559c8b90f10] = ;;

		*node[0x5559c8b90f90] = 2;

		*node[0x5559c8b90ff0] = 0;

		*node[0x5559c8b91020] = 1;

		*node[0x5559c8b91050] = ;;

		*node[0x5559c8b91170] = =;

		*node[0x5559c8b91080] = 3;

		*node[0x5559c8b91140] = -;

		*node[0x5559c8b910e0] = 0;

		*node[0x5559c8b91110] = 1;

		*node[0x5559c8b911a0] = ;;

		*node[0x5559c8b91230] = =;

		*node[0x5559c8b911d0] = 4;

		*node[0x5559c8b91200] = 1;

		*node[0x5559c8b91260] = ;;

		*node[0x5559c8b91340] = =;

		*node[0x5559c8b91290] = 5;

		*node[0x5559c8b91310] = 1000;

		*node[0x5559c8b91370] = ;;

		*node[0x5559c8b913a0] = if;

		*node[0x5559c8b913d0] = op_no;

		*node[0x5559c8b91460] = ==;

		*node[0x5559c8b91400] = 0;

		*node[0x5559c8b91430] = 0;

		*node[0x5559c8b91490] = ;;

		*node[0x5559c8b914c0] = if;

		*node[0x5559c8b914f0] = op_no;

		*node[0x5559c8b91580] = ==;

		*node[0x5559c8b91520] = 1;

		*node[0x5559c8b91550] = 0;

		*node[0x5559c8b915b0] = ;;

		*node[0x5559c8b915e0] = print;

		*node[0x5559c8b91610] = 5;

		*node[0x5559c8b91640] = else;

		*node[0x5559c8b91670] = op_no;

		*node[0x5559c8b916a0] = ;;

		*node[0x5559c8b916d0] = print;

		*node[0x5559c8b91700] = 3;

		*node[0x5559c8b91730] = else;

		*node[0x5559c8b91760] = op_no;

		*node[0x5559c8b91790] = ;;

		*node[0x5559c8b918e0] = =;

		*node[0x5559c8b917c0] = 6;

		*node[0x5559c8b918b0] = -;

		*node[0x5559c8b917f0] = 0;

		*node[0x5559c8b91880] = /;

		*node[0x5559c8b91820] = 1;

		*node[0x5559c8b91850] = 0;

		*node[0x5559c8b91910] = ;;

		*node[0x5559c8b91940] = print;

		*node[0x5559c8b91970] = 4;

		*node[0x5559c8b919a0] = ;;

		*node[0x5559c8b919d0] = print;

		*node[0x5559c8b91a00] = 6;

		*node[0x5559c8b91a30] = ;;

		*node[0x5559c8b91a60] = return;

		*node[0x5559c8b91a90] = 0;

		*node[0x5559c8b91ac0] = ;;

		*node[0x5559c8b91b40] = 3;

		*node[0x5559c8b91b70] = 0;

		*node[0x5559c8b91ba0] = 1;

		*node[0x5559c8b91bd0] = 2;

		*node[0x5559c8b91c30] = ;;

		*node[0x5559c8b91d20] = =;

		*node[0x5559c8b91c60] = 3;

		*node[0x5559c8b91cf0] = -;

		*node[0x5559c8b91c90] = 0;

		*node[0x5559c8b91cc0] = 1;

		*node[0x5559c8b91d50] = ;;

		*node[0x5559c8b91e30] = =;

		*node[0x5559c8b91d80] = 4;

		*node[0x5559c8b91e00] = 1;

		*node[0x5559c8b91e60] = ;;

		*node[0x5559c8b91ef0] = =;

		*node[0x5559c8b91e90] = 7;

		*node[0x5559c8b91ec0] = 2;

		*node[0x5559c8b91f20] = ;;

		*node[0x5559c8b91f50] = if;

		*node[0x5559c8b91f80] = op_no;

		*node[0x5559c8b92010] = ==;

		*node[0x5559c8b91fb0] = 2;

		*node[0x5559c8b91fe0] = 0;

		*node[0x5559c8b92040] = ;;

		*node[0x5559c8b920d0] = =;

		*node[0x5559c8b92070] = 8;

		*node[0x5559c8b920a0] = 0;

		*node[0x5559c8b92100] = ;;

		*node[0x5559c8b92250] = =;

		*node[0x5559c8b92130] = 9;

		*node[0x5559c8b92220] = -;

		*node[0x5559c8b92160] = 0;

		*node[0x5559c8b921f0] = /;

		*node[0x5559c8b92190] = 1;

		*node[0x5559c8b921c0] = 0;

		*node[0x5559c8b92280] = ;;

		*node[0x5559c8b922b0] = print;

		*node[0x5559c8b922e0] = 7;

		*node[0x5559c8b92310] = ;;

		*node[0x5559c8b92340] = print;

		*node[0x5559c8b92370] = 8;

		*node[0x5559c8b923a0] = 9;

		*node[0x5559c8b923d0] = else;

		*node[0x5559c8b92400] = op_no;

		*node[0x5559c8b92430] = ;;

		*node[0x5559c8b926d0] = =;

		*node[0x5559c8b92460] = 10;

		*node[0x5559c8b926a0] = -;

		*node[0x5559c8b92580] = *;

		*node[0x5559c8b92520] = 1;

		*node[0x5559c8b92550] = 1;

		*node[0x5559c8b92670] = *;

		*node[0x5559c8b92610] = *;

		*node[0x5559c8b925b0] = 4;

		*node[0x5559c8b925e0] = 0;

		*node[0x5559c8b92640] = 2;

		*node[0x5559c8b92700] = ;;

		*node[0x5559c8b92730] = if;

		*node[0x5559c8b92760] = op_no;

		*node[0x5559c8b927f0] = >;

		*node[0x5559c8b92790] = 10;

		*node[0x5559c8b927c0] = 0;

		*node[0x5559c8b92820] = ;;

		*node[0x5559c8b928e0] = =;

		*node[0x5559c8b92850] = 11;

		*node[0x5559c8b928b0] = sqrt;

		*node[0x5559c8b92880] = 10;

		*node[0x5559c8b92910] = ;;

		*node[0x5559c8b92b20] = =;

		*node[0x5559c8b92940] = 8;

		*node[0x5559c8b92af0] = /;

		*node[0x5559c8b92a30] = -;

		*node[0x5559c8b929d0] = -;

		*node[0x5559c8b92970] = 0;

		*node[0x5559c8b929a0] = 1;

		*node[0x5559c8b92a00] = 11;

		*node[0x5559c8b92ac0] = *;

		*node[0x5559c8b92a60] = 2;

		*node[0x5559c8b92a90] = 0;

		*node[0x5559c8b92b50] = ;;

		*node[0x5559c8b92d60] = =;

		*node[0x5559c8b92b80] = 9;

		*node[0x5559c8b92d30] = /;

		*node[0x5559c8b92c70] = +;

		*node[0x5559c8b92c10] = -;

		*node[0x5559c8b92bb0] = 0;

		*node[0x5559c8b92be0] = 1;

		*node[0x5559c8b92c40] = 11;

		*node[0x5559c8b92d00] = *;

		*node[0x5559c8b92ca0] = 2;

		*node[0x5559c8b92cd0] = 0;

		*node[0x5559c8b92d90] = ;;

		*node[0x5559c8b92dc0] = print;

		*node[0x5559c8b92df0] = 7;

		*node[0x5559c8b92e20] = ;;

		*node[0x5559c8b92e50] = print;

		*node[0x5559c8b92e80] = 8;

		*node[0x5559c8b92eb0] = 9;

		*node[0x5559c8b92ee0] = elseif;

		*node[0x5559c8b92f10] = op_no;

		*node[0x5559c8b92fa0] = ==;

		*node[0x5559c8b92f40] = 10;

		*node[0x5559c8b92f70] = 0;

		*node[0x5559c8b92fd0] = ;;

		*node[0x5559c8b93180] = =;

		*node[0x5559c8b93000] = 6;

		*node[0x5559c8b93150] = -;

		*node[0x5559c8b93030] = 0;

		*node[0x5559c8b93120] = /;

		*node[0x5559c8b93060] = 1;

		*node[0x5559c8b930f0] = *;

		*node[0x5559c8b93090] = 2;

		*node[0x5559c8b930c0] = 0;

		*node[0x5559c8b931b0] = ;;

		*node[0x5559c8b931e0] = print;

		*node[0x5559c8b93210] = 4;

		*node[0x5559c8b93240] = ;;

		*node[0x5559c8b93270] = print;

		*node[0x5559c8b932a0] = 6;

		*node[0x5559c8b932d0] = else;

		*node[0x5559c8b93300] = op_no;

		*node[0x5559c8b93330] = ;;

		*node[0x5559c8b93360] = print;

		*node[0x5559c8b93390] = 3;

		*node[0x5559c8b933c0] = ;;

		*node[0x5559c8b933f0] = return;

		*node[0x5559c8b93420] = 0;

		*node[0x5559c8b93450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffedd1d2100] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x584dbb8f86d0] = ;;

		*node[0x584dbb8f8750] = 0;

		*node[0x584dbb8f8780] = ;;

		*node[0x584dbb8f87b0] = input;

		*node[0x584dbb8f87e0] = 0;

		*node[0x584dbb8f8810] = 1;

		*node[0x584dbb8f8840] = 2;

		*node[0x584dbb8f88a0] = ;;

		*node[0x584dbb8f8900] = 3;

		*node[0x584dbb8f8980] = 4;

		*node[0x584dbb8f89b0] = 5;

		*node[0x584dbb8f89e0] = ;;

		*node[0x584dbb8f8a60] = 1;

		*node[0x584dbb8f8a90] = 0;

		*node[0x584dbb8f8ac0] = 1;

		*node[0x584dbb8f8af0] = 2;

		*node[0x584dbb8f8b50] = ;;

		*node[0x584dbb8f8b80] = if;

		*node[0x584dbb8f8bb0] = op_no;

		*node[0x584dbb8f8c40] = ==;

		*node[0x584dbb8f8be0] = 0;

		*node[0x584dbb8f8c10] = 0;

		*node[0x584dbb8f8c70] = ;;

		*node[0x584dbb8f8d20] = 4;

		*node[0x584dbb8f8d50] = 5;

		*node[0x584dbb8f8d80] = else;

		*node[0x584dbb8f8db0] = op_no;

		*node[0x584dbb8f8de0] = ;;

		*node[0x584dbb8f8e40] = 6;

		*node[0x584dbb8f8f00] = 7;

		*node[0x584dbb8f8f30] = 8;

		*node[0x584dbb8f8f60] = ;;

		*node[0x584dbb8f8f90] = return;

		*node[0x584dbb8f8fc0] = 0;

		*node[0x584dbb8f8ff0] = ;;

		*node[0x584dbb8f9070] = 2;

		*node[0x584dbb8f90d0] = 0;

		*node[0x584dbb8f9100] = 1;

		*node[0x584dbb8f9130] = ;;

		*node[0x584dbb8f9250] = =;

		*node[0x584dbb8f9160] = 3;

		*node[0x584dbb8f9220] = -;

		*node[0x584dbb8f91c0] = 0;

		*node[0x584dbb8f91f0] = 1;

		*node[0x584dbb8f9280] = ;;

		*node[0x584dbb8f9310] = =;

		*node[0x584dbb8f92b0] = 4;

		*node[0x584dbb8f92e0] = 1;

		*node[0x584dbb8f9340] = ;;

		*node[0x584dbb8f9420] = =;

		*node[0x584dbb8f9370] = 5;

		*node[0x584dbb8f93f0] = 1000;

		*node[0x584dbb8f9450] = ;;

		*node[0x584dbb8f9480] = if;

		*node[0x584dbb8f94b0] = op_no;

		*node[0x584dbb8f9540] = ==;

		*node[0x584dbb8f94e0] = 0;

		*node[0x584dbb8f9510] = 0;

		*node[0x584dbb8f9570] = ;;

		*node[0x584dbb8f95a0] = if;

		*node[0x584dbb8f95d0] = op_no;

		*node[0x584dbb8f9660] = ==;

		*node[0x584dbb8f9600] = 1;

		*node[0x584dbb8f9630] = 0;

		*node[0x584dbb8f9690] = ;;

		*node[0x584dbb8f96c0] = print;

		*node[0x584dbb8f96f0] = 7;

		*node[0x584dbb8f9720] = else;

		*node[0x584dbb8f9750] = op_no;

		*node[0x584dbb8f9780] = ;;

		*node[0x584dbb8f97b0] = print;

		*node[0x584dbb8f97e0] = 8;

		*node[0x584dbb8f98a0] = else;

		*node[0x584dbb8f98d0] = op_no;

		*node[0x584dbb8f9900] = ;;

		*node[0x584dbb8f9a50] = =;

		*node[0x584dbb8f9930] = 6;

		*node[0x584dbb8f9a20] = -;

		*node[0x584dbb8f9960] = 0;

		*node[0x584dbb8f99f0] = /;

		*node[0x584dbb8f9990] = 1;

		*node[0x584dbb8f99c0] = 0;

		*node[0x584dbb8f9a80] = ;;

		*node[0x584dbb8f9ab0] = print;

		*node[0x584dbb8f9ae0] = 12;

		*node[0x584dbb8f9b10] = ;;

		*node[0x584dbb8f9b40] = print;

		*node[0x584dbb8f9b70] = 13;

		*node[0x584dbb8f9ba0] = ;;

		*node[0x584dbb8f9bd0] = return;

		*node[0x584dbb8f9c00] = 0;

		*node[0x584dbb8f9c30] = ;;

		*node[0x584dbb8f9cb0] = 3;

		*node[0x584dbb8f9ce0] = 0;

		*node[0x584dbb8f9d10] = 1;

		*node[0x584dbb8f9d40] = 2;

		*node[0x584dbb8f9da0] = ;;

		*node[0x584dbb8f9e90] = =;

		*node[0x584dbb8f9dd0] = 3;

		*node[0x584dbb8f9e60] = -;

		*node[0x584dbb8f9e00] = 0;

		*node[0x584dbb8f9e30] = 1;

		*node[0x584dbb8f9ec0] = ;;

		*node[0x584dbb8f9fa0] = =;

		*node[0x584dbb8f9ef0] = 4;

		*node[0x584dbb8f9f70] = 1;

		*node[0x584dbb8f9fd0] = ;;

		*node[0x584dbb8fa060] = =;

		*node[0x584dbb8fa000] = 7;

		*node[0x584dbb8fa030] = 2;

		*node[0x584dbb8fa090] = ;;

		*node[0x584dbb8fa0c0] = if;

		*node[0x584dbb8fa0f0] = op_no;

		*node[0x584dbb8fa180] = ==;

		*node[0x584dbb8fa120] = 2;

		*node[0x584dbb8fa150] = 0;

		*node[0x584dbb8fa1b0] = ;;

		*node[0x584dbb8fa240] = =;

		*node[0x584dbb8fa1e0] = 8;

		*node[0x584dbb8fa210] = 0;

		*node[0x584dbb8fa270] = ;;

		*node[0x584dbb8fa450] = =;

		*node[0x584dbb8fa2a0] = 9;

		*node[0x584dbb8fa420] = -;

		*node[0x584dbb8fa360] = 0;

		*node[0x584dbb8fa3f0] = /;

		*node[0x584dbb8fa390] = 1;

		*node[0x584dbb8fa3c0] = 0;

		*node[0x584dbb8fa480] = ;;

		*node[0x584dbb8fa4b0] = print;

		*node[0x584dbb8fa4e0] = 11;

		*node[0x584dbb8fa510] = ;;

		*node[0x584dbb8fa540] = print;

		*node[0x584dbb8fa570] = 12;

		*node[0x584dbb8fa5a0] = 13;

		*node[0x584dbb8fa5d0] = else;

		*node[0x584dbb8fa600] = op_no;

		*node[0x584dbb8fa630] = ;;

		*node[0x584dbb8fa950] = =;

		*node[0x584dbb8fa660] = 10;

		*node[0x584dbb8fa920] = -;

		*node[0x584dbb8fa800] = *;

		*node[0x584dbb8fa690] = 1;

		*node[0x584dbb8fa7d0] = 1;

		*node[0x584dbb8fa8f0] = *;

		*node[0x584dbb8fa890] = *;

		*node[0x584dbb8fa830] = 4;

		*node[0x584dbb8fa860] = 0;

		*node[0x584dbb8fa8c0] = 2;

		*node[0x584dbb8fa980] = ;;

		*node[0x584dbb8fa9b0] = if;

		*node[0x584dbb8fa9e0] = op_no;

		*node[0x584dbb8faa70] = >;

		*node[0x584dbb8faa10] = 10;

		*node[0x584dbb8faa40] = 0;

		*node[0x584dbb8faaa0] = ;;

		*node[0x584dbb8fab60] = =;

		*node[0x584dbb8faad0] = 11;

		*node[0x584dbb8fab30] = sqrt;

		*node[0x584dbb8fab00] = 10;

		*node[0x584dbb8fab90] = ;;

		*node[0x584dbb8fada0] = =;

		*node[0x584dbb8fabc0] = 8;

		*node[0x584dbb8fad70] = /;

		*node[0x584dbb8facb0] = -;

		*node[0x584dbb8fac50] = -;

		*node[0x584dbb8fabf0] = 0;

		*node[0x584dbb8fac20] = 1;

		*node[0x584dbb8fac80] = 11;

		*node[0x584dbb8fad40] = *;

		*node[0x584dbb8face0] = 2;

		*node[0x584dbb8fad10] = 0;

		*node[0x584dbb8fadd0] = ;;

		*node[0x584dbb8fafe0] = =;

		*node[0x584dbb8fae00] = 9;

		*node[0x584dbb8fafb0] = /;

		*node[0x584dbb8faef0] = +;

		*node[0x584dbb8fae90] = -;

		*node[0x584dbb8fae30] = 0;

		*node[0x584dbb8fae60] = 1;

		*node[0x584dbb8faec0] = 11;

		*node[0x584dbb8faf80] = *;

		*node[0x584dbb8faf20] = 2;

		*node[0x584dbb8faf50] = 0;

		*node[0x584dbb8fb010] = ;;

		*node[0x584dbb8fb040] = print;

		*node[0x584dbb8fb070] = 30;

		*node[0x584dbb8fb0a0] = ;;

		*node[0x584dbb8fb0d0] = print;

		*node[0x584dbb8fb100] = 31;

		*node[0x584dbb8fb130] = 32;

		*node[0x584dbb8fb370] = elseif;

		*node[0x584dbb8fb3a0] = op_no;

		*node[0x584dbb8fb430] = ==;

		*node[0x584dbb8fb3d0] = 10;

		*node[0x584dbb8fb400] = 0;

		*node[0x584dbb8fb460] = ;;

		*node[0x584dbb8fb610] = =;

		*node[0x584dbb8fb490] = 6;

		*node[0x584dbb8fb5e0] = -;

		*node[0x584dbb8fb4c0] = 0;

		*node[0x584dbb8fb5b0] = /;

		*node[0x584dbb8fb4f0] = 1;

		*node[0x584dbb8fb580] = *;

		*node[0x584dbb8fb520] = 2;

		*node[0x584dbb8fb550] = 0;

		*node[0x584dbb8fb640] = ;;

		*node[0x584dbb8fb670] = print;

		*node[0x584dbb8fb6a0] = 37;

		*node[0x584dbb8fb6d0] = ;;

		*node[0x584dbb8fb700] = print;

		*node[0x584dbb8fb730] = 38;

		*node[0x584dbb8fb760] = else;

		*node[0x584dbb8fb790] = op_no;

		*node[0x584dbb8fb7c0] = ;;

		*node[0x584dbb8fb7f0] = print;

		*node[0x584dbb8fb820] = 39;

		*node[0x584dbb8fb850] = ;;

		*node[0x584dbb8fb880] = return;

		*node[0x584dbb8fb8b0] = 0;

		*node[0x584dbb8fb8e0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffada58180] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5dfb2ce376d0] = ;;

		*node[0x5dfb2ce37750] = 0;

		*node[0x5dfb2ce37780] = ;;

		*node[0x5dfb2ce377b0] = input;

		*node[0x5dfb2ce377e0] = 0;

		*node[0x5dfb2ce37810] = 1;

		*node[0x5dfb2ce37840] = 2;

		*node[0x5dfb2ce378a0] = ;;

		*node[0x5dfb2ce37900] = 0;

		*node[0x5dfb2ce37930] = 1;

		*node[0x5dfb2ce37960] = 2;

		*node[0x5dfb2ce37990] = ;;

		*node[0x5dfb2ce37a10] = 1;

		*node[0x5dfb2ce37a40] = 0;

		*node[0x5dfb2ce37a70] = 1;

		*node[0x5dfb2ce37aa0] = 2;

		*node[0x5dfb2ce37b00] = ;;

		*node[0x5dfb2ce37b30] = if;

		*node[0x5dfb2ce37b60] = op_no;

		*node[0x5dfb2ce37bf0] = ==;

		*node[0x5dfb2ce37b90] = 0;

		*node[0x5dfb2ce37bc0] = 0;

		*node[0x5dfb2ce37c20] = ;;

		*node[0x5dfb2ce37c80] = 1;

		*node[0x5dfb2ce37cb0] = 2;

		*node[0x5dfb2ce37ce0] = else;

		*node[0x5dfb2ce37d10] = op_no;

		*node[0x5dfb2ce37d40] = ;;

		*node[0x5dfb2ce37df0] = 0;

		*node[0x5dfb2ce37e20] = 1;

		*node[0x5dfb2ce37e50] = 2;

		*node[0x5dfb2ce37e80] = ;;

		*node[0x5dfb2ce37eb0] = return;

		*node[0x5dfb2ce37ee0] = 0;

		*node[0x5dfb2ce37f10] = ;;

		*node[0x5dfb2ce37f90] = 2;

		*node[0x5dfb2ce37ff0] = 0;

		*node[0x5dfb2ce38020] = 1;

		*node[0x5dfb2ce38050] = ;;

		*node[0x5dfb2ce38170] = =;

		*node[0x5dfb2ce38080] = 2;

		*node[0x5dfb2ce38140] = -;

		*node[0x5dfb2ce380e0] = 0;

		*node[0x5dfb2ce38110] = 1;

		*node[0x5dfb2ce381a0] = ;;

		*node[0x5dfb2ce38230] = =;

		*node[0x5dfb2ce381d0] = 3;

		*node[0x5dfb2ce38200] = 1;

		*node[0x5dfb2ce38260] = ;;

		*node[0x5dfb2ce38340] = =;

		*node[0x5dfb2ce38290] = 4;

		*node[0x5dfb2ce38310] = 1000;

		*node[0x5dfb2ce38370] = ;;

		*node[0x5dfb2ce383a0] = if;

		*node[0x5dfb2ce383d0] = op_no;

		*node[0x5dfb2ce38460] = ==;

		*node[0x5dfb2ce38400] = 0;

		*node[0x5dfb2ce38430] = 0;

		*node[0x5dfb2ce38490] = ;;

		*node[0x5dfb2ce384c0] = if;

		*node[0x5dfb2ce384f0] = op_no;

		*node[0x5dfb2ce38580] = ==;

		*node[0x5dfb2ce38520] = 1;

		*node[0x5dfb2ce38550] = 0;

		*node[0x5dfb2ce385b0] = ;;

		*node[0x5dfb2ce385e0] = print;

		*node[0x5dfb2ce38610] = 4;

		*node[0x5dfb2ce38640] = else;

		*node[0x5dfb2ce38670] = op_no;

		*node[0x5dfb2ce386a0] = ;;

		*node[0x5dfb2ce386d0] = print;

		*node[0x5dfb2ce38700] = 2;

		*node[0x5dfb2ce38730] = else;

		*node[0x5dfb2ce38760] = op_no;

		*node[0x5dfb2ce38790] = ;;

		*node[0x5dfb2ce388e0] = =;

		*node[0x5dfb2ce387c0] = 5;

		*node[0x5dfb2ce388b0] = -;

		*node[0x5dfb2ce387f0] = 0;

		*node[0x5dfb2ce38880] = /;

		*node[0x5dfb2ce38820] = 1;

		*node[0x5dfb2ce38850] = 0;

		*node[0x5dfb2ce38910] = ;;

		*node[0x5dfb2ce38940] = print;

		*node[0x5dfb2ce38970] = 3;

		*node[0x5dfb2ce389a0] = ;;

		*node[0x5dfb2ce389d0] = print;

		*node[0x5dfb2ce38a00] = 5;

		*node[0x5dfb2ce38a30] = ;;

		*node[0x5dfb2ce38a60] = return;

		*node[0x5dfb2ce38a90] = 0;

		*node[0x5dfb2ce38ac0] = ;;

		*node[0x5dfb2ce38b40] = 3;

		*node[0x5dfb2ce38b70] = 0;

		*node[0x5dfb2ce38ba0] = 1;

		*node[0x5dfb2ce38bd0] = 2;

		*node[0x5dfb2ce38c30] = ;;

		*node[0x5dfb2ce38d20] = =;

		*node[0x5dfb2ce38c60] = 3;

		*node[0x5dfb2ce38cf0] = -;

		*node[0x5dfb2ce38c90] = 0;

		*node[0x5dfb2ce38cc0] = 1;

		*node[0x5dfb2ce38d50] = ;;

		*node[0x5dfb2ce38e30] = =;

		*node[0x5dfb2ce38d80] = 4;

		*node[0x5dfb2ce38e00] = 1;

		*node[0x5dfb2ce38e60] = ;;

		*node[0x5dfb2ce38ef0] = =;

		*node[0x5dfb2ce38e90] = 5;

		*node[0x5dfb2ce38ec0] = 2;

		*node[0x5dfb2ce38f20] = ;;

		*node[0x5dfb2ce38f50] = if;

		*node[0x5dfb2ce38f80] = op_no;

		*node[0x5dfb2ce39010] = ==;

		*node[0x5dfb2ce38fb0] = 2;

		*node[0x5dfb2ce38fe0] = 0;

		*node[0x5dfb2ce39040] = ;;

		*node[0x5dfb2ce390d0] = =;

		*node[0x5dfb2ce39070] = 6;

		*node[0x5dfb2ce390a0] = 0;

		*node[0x5dfb2ce39100] = ;;

		*node[0x5dfb2ce39250] = =;

		*node[0x5dfb2ce39130] = 7;

		*node[0x5dfb2ce39220] = -;

		*node[0x5dfb2ce39160] = 0;

		*node[0x5dfb2ce391f0] = /;

		*node[0x5dfb2ce39190] = 1;

		*node[0x5dfb2ce391c0] = 0;

		*node[0x5dfb2ce39280] = ;;

		*node[0x5dfb2ce392b0] = print;

		*node[0x5dfb2ce392e0] = 5;

		*node[0x5dfb2ce39310] = ;;

		*node[0x5dfb2ce39340] = print;

		*node[0x5dfb2ce39370] = 6;

		*node[0x5dfb2ce393a0] = 7;

		*node[0x5dfb2ce393d0] = else;

		*node[0x5dfb2ce39400] = op_no;

		*node[0x5dfb2ce39430] = ;;

		*node[0x5dfb2ce396d0] = =;

		*node[0x5dfb2ce39460] = 8;

		*node[0x5dfb2ce396a0] = -;

		*node[0x5dfb2ce39580] = *;

		*node[0x5dfb2ce39520] = 1;

		*node[0x5dfb2ce39550] = 1;

		*node[0x5dfb2ce39670] = *;

		*node[0x5dfb2ce39610] = *;

		*node[0x5dfb2ce395b0] = 4;

		*node[0x5dfb2ce395e0] = 0;

		*node[0x5dfb2ce39640] = 2;

		*node[0x5dfb2ce39700] = ;;

		*node[0x5dfb2ce39730] = if;

		*node[0x5dfb2ce39760] = op_no;

		*node[0x5dfb2ce397f0] = >;

		*node[0x5dfb2ce39790] = 8;

		*node[0x5dfb2ce397c0] = 0;

		*node[0x5dfb2ce39820] = ;;

		*node[0x5dfb2ce398e0] = =;

		*node[0x5dfb2ce39850] = 9;

		*node[0x5dfb2ce398b0] = sqrt;

		*node[0x5dfb2ce39880] = 8;

		*node[0x5dfb2ce39910] = ;;

		*node[0x5dfb2ce39b20] = =;

		*node[0x5dfb2ce39940] = 6;

		*node[0x5dfb2ce39af0] = /;

		*node[0x5dfb2ce39a30] = -;

		*node[0x5dfb2ce399d0] = -;

		*node[0x5dfb2ce39970] = 0;

		*node[0x5dfb2ce399a0] = 1;

		*node[0x5dfb2ce39a00] = 9;

		*node[0x5dfb2ce39ac0] = *;

		*node[0x5dfb2ce39a60] = 2;

		*node[0x5dfb2ce39a90] = 0;

		*node[0x5dfb2ce39b50] = ;;

		*node[0x5dfb2ce39d60] = =;

		*node[0x5dfb2ce39b80] = 7;

		*node[0x5dfb2ce39d30] = /;

		*node[0x5dfb2ce39c70] = +;

		*node[0x5dfb2ce39c10] = -;

		*node[0x5dfb2ce39bb0] = 0;

		*node[0x5dfb2ce39be0] = 1;

		*node[0x5dfb2ce39c40] = 9;

		*node[0x5dfb2ce39d00] = *;

		*node[0x5dfb2ce39ca0] = 2;

		*node[0x5dfb2ce39cd0] = 0;

		*node[0x5dfb2ce39d90] = ;;

		*node[0x5dfb2ce39dc0] = print;

		*node[0x5dfb2ce39df0] = 5;

		*node[0x5dfb2ce39e20] = ;;

		*node[0x5dfb2ce39e50] = print;

		*node[0x5dfb2ce39e80] = 6;

		*node[0x5dfb2ce39eb0] = 7;

		*node[0x5dfb2ce39ee0] = elseif;

		*node[0x5dfb2ce39f10] = op_no;

		*node[0x5dfb2ce39fa0] = ==;

		*node[0x5dfb2ce39f40] = 8;

		*node[0x5dfb2ce39f70] = 0;

		*node[0x5dfb2ce39fd0] = ;;

		*node[0x5dfb2ce3a180] = =;

		*node[0x5dfb2ce3a000] = 10;

		*node[0x5dfb2ce3a150] = -;

		*node[0x5dfb2ce3a030] = 0;

		*node[0x5dfb2ce3a120] = /;

		*node[0x5dfb2ce3a060] = 1;

		*node[0x5dfb2ce3a0f0] = *;

		*node[0x5dfb2ce3a090] = 2;

		*node[0x5dfb2ce3a0c0] = 0;

		*node[0x5dfb2ce3a1b0] = ;;

		*node[0x5dfb2ce3a1e0] = print;

		*node[0x5dfb2ce3a210] = 4;

		*node[0x5dfb2ce3a240] = ;;

		*node[0x5dfb2ce3a270] = print;

		*node[0x5dfb2ce3a2a0] = 10;

		*node[0x5dfb2ce3a2d0] = else;

		*node[0x5dfb2ce3a300] = op_no;

		*node[0x5dfb2ce3a330] = ;;

		*node[0x5dfb2ce3a360] = print;

		*node[0x5dfb2ce3a390] = 3;

		*node[0x5dfb2ce3a3c0] = ;;

		*node[0x5dfb2ce3a3f0] = return;

		*node[0x5dfb2ce3a420] = 0;

		*node[0x5dfb2ce3a450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe6285e720] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5b41fdcef6d0] = ;;

		*node[0x5b41fdcef750] = 0;

		*node[0x5b41fdcef780] = ;;

		*node[0x5b41fdcef7b0] = input;

		*node[0x5b41fdcef7e0] = 0;

		*node[0x5b41fdcef810] = 1;

		*node[0x5b41fdcef840] = 2;

		*node[0x5b41fdcef8a0] = ;;

		*node[0x5b41fdcef900] = 0;

		*node[0x5b41fdcef930] = 1;

		*node[0x5b41fdcef960] = 2;

		*node[0x5b41fdcef990] = ;;

		*node[0x5b41fdcefa10] = 1;

		*node[0x5b41fdcefa40] = 0;

		*node[0x5b41fdcefa70] = 1;

		*node[0x5b41fdcefaa0] = 2;

		*node[0x5b41fdcefb00] = ;;

		*node[0x5b41fdcefb30] = if;

		*node[0x5b41fdcefb60] = op_no;

		*node[0x5b41fdcefbf0] = ==;

		*node[0x5b41fdcefb90] = 0;

		*node[0x5b41fdcefbc0] = 0;

		*node[0x5b41fdcefc20] = ;;

		*node[0x5b41fdcefc80] = 1;

		*node[0x5b41fdcefcb0] = 2;

		*node[0x5b41fdcefce0] = else;

		*node[0x5b41fdcefd10] = op_no;

		*node[0x5b41fdcefd40] = ;;

		*node[0x5b41fdcefdf0] = 0;

		*node[0x5b41fdcefe20] = 1;

		*node[0x5b41fdcefe50] = 2;

		*node[0x5b41fdcefe80] = ;;

		*node[0x5b41fdcefeb0] = return;

		*node[0x5b41fdcefee0] = 0;

		*node[0x5b41fdceff10] = ;;

		*node[0x5b41fdceff90] = 2;

		*node[0x5b41fdcefff0] = 0;

		*node[0x5b41fdcf0020] = 1;

		*node[0x5b41fdcf0050] = ;;

		*node[0x5b41fdcf0170] = =;

		*node[0x5b41fdcf0080] = 2;

		*node[0x5b41fdcf0140] = -;

		*node[0x5b41fdcf00e0] = 0;

		*node[0x5b41fdcf0110] = 1;

		*node[0x5b41fdcf01a0] = ;;

		*node[0x5b41fdcf0230] = =;

		*node[0x5b41fdcf01d0] = 3;

		*node[0x5b41fdcf0200] = 1;

		*node[0x5b41fdcf0260] = ;;

		*node[0x5b41fdcf0340] = =;

		*node[0x5b41fdcf0290] = 4;

		*node[0x5b41fdcf0310] = 1000;

		*node[0x5b41fdcf0370] = ;;

		*node[0x5b41fdcf03a0] = if;

		*node[0x5b41fdcf03d0] = op_no;

		*node[0x5b41fdcf0460] = ==;

		*node[0x5b41fdcf0400] = 0;

		*node[0x5b41fdcf0430] = 0;

		*node[0x5b41fdcf0490] = ;;

		*node[0x5b41fdcf04c0] = if;

		*node[0x5b41fdcf04f0] = op_no;

		*node[0x5b41fdcf0580] = ==;

		*node[0x5b41fdcf0520] = 1;

		*node[0x5b41fdcf0550] = 0;

		*node[0x5b41fdcf05b0] = ;;

		*node[0x5b41fdcf05e0] = print;

		*node[0x5b41fdcf0610] = 4;

		*node[0x5b41fdcf0640] = else;

		*node[0x5b41fdcf0670] = op_no;

		*node[0x5b41fdcf06a0] = ;;

		*node[0x5b41fdcf06d0] = print;

		*node[0x5b41fdcf0700] = 2;

		*node[0x5b41fdcf0730] = else;

		*node[0x5b41fdcf0760] = op_no;

		*node[0x5b41fdcf0790] = ;;

		*node[0x5b41fdcf08e0] = =;

		*node[0x5b41fdcf07c0] = 5;

		*node[0x5b41fdcf08b0] = -;

		*node[0x5b41fdcf07f0] = 0;

		*node[0x5b41fdcf0880] = /;

		*node[0x5b41fdcf0820] = 1;

		*node[0x5b41fdcf0850] = 0;

		*node[0x5b41fdcf0910] = ;;

		*node[0x5b41fdcf0940] = print;

		*node[0x5b41fdcf0970] = 3;

		*node[0x5b41fdcf09a0] = ;;

		*node[0x5b41fdcf09d0] = print;

		*node[0x5b41fdcf0a00] = 5;

		*node[0x5b41fdcf0a30] = ;;

		*node[0x5b41fdcf0a60] = return;

		*node[0x5b41fdcf0a90] = 0;

		*node[0x5b41fdcf0ac0] = ;;

		*node[0x5b41fdcf0b40] = 3;

		*node[0x5b41fdcf0b70] = 0;

		*node[0x5b41fdcf0ba0] = 1;

		*node[0x5b41fdcf0bd0] = 2;

		*node[0x5b41fdcf0c30] = ;;

		*node[0x5b41fdcf0d20] = =;

		*node[0x5b41fdcf0c60] = 3;

		*node[0x5b41fdcf0cf0] = -;

		*node[0x5b41fdcf0c90] = 0;

		*node[0x5b41fdcf0cc0] = 1;

		*node[0x5b41fdcf0d50] = ;;

		*node[0x5b41fdcf0e30] = =;

		*node[0x5b41fdcf0d80] = 4;

		*node[0x5b41fdcf0e00] = 1;

		*node[0x5b41fdcf0e60] = ;;

		*node[0x5b41fdcf0ef0] = =;

		*node[0x5b41fdcf0e90] = 5;

		*node[0x5b41fdcf0ec0] = 2;

		*node[0x5b41fdcf0f20] = ;;

		*node[0x5b41fdcf0f50] = if;

		*node[0x5b41fdcf0f80] = op_no;

		*node[0x5b41fdcf1010] = ==;

		*node[0x5b41fdcf0fb0] = 2;

		*node[0x5b41fdcf0fe0] = 0;

		*node[0x5b41fdcf1040] = ;;

		*node[0x5b41fdcf10d0] = =;

		*node[0x5b41fdcf1070] = 6;

		*node[0x5b41fdcf10a0] = 0;

		*node[0x5b41fdcf1100] = ;;

		*node[0x5b41fdcf1250] = =;

		*node[0x5b41fdcf1130] = 7;

		*node[0x5b41fdcf1220] = -;

		*node[0x5b41fdcf1160] = 0;

		*node[0x5b41fdcf11f0] = /;

		*node[0x5b41fdcf1190] = 1;

		*node[0x5b41fdcf11c0] = 0;

		*node[0x5b41fdcf1280] = ;;

		*node[0x5b41fdcf12b0] = print;

		*node[0x5b41fdcf12e0] = 5;

		*node[0x5b41fdcf1310] = ;;

		*node[0x5b41fdcf1340] = print;

		*node[0x5b41fdcf1370] = 6;

		*node[0x5b41fdcf13a0] = 7;

		*node[0x5b41fdcf13d0] = else;

		*node[0x5b41fdcf1400] = op_no;

		*node[0x5b41fdcf1430] = ;;

		*node[0x5b41fdcf16d0] = =;

		*node[0x5b41fdcf1460] = 8;

		*node[0x5b41fdcf16a0] = -;

		*node[0x5b41fdcf1580] = *;

		*node[0x5b41fdcf1520] = 1;

		*node[0x5b41fdcf1550] = 1;

		*node[0x5b41fdcf1670] = *;

		*node[0x5b41fdcf1610] = *;

		*node[0x5b41fdcf15b0] = 4;

		*node[0x5b41fdcf15e0] = 0;

		*node[0x5b41fdcf1640] = 2;

		*node[0x5b41fdcf1700] = ;;

		*node[0x5b41fdcf1730] = if;

		*node[0x5b41fdcf1760] = op_no;

		*node[0x5b41fdcf17f0] = >;

		*node[0x5b41fdcf1790] = 8;

		*node[0x5b41fdcf17c0] = 0;

		*node[0x5b41fdcf1820] = ;;

		*node[0x5b41fdcf18e0] = =;

		*node[0x5b41fdcf1850] = 9;

		*node[0x5b41fdcf18b0] = sqrt;

		*node[0x5b41fdcf1880] = 8;

		*node[0x5b41fdcf1910] = ;;

		*node[0x5b41fdcf1b20] = =;

		*node[0x5b41fdcf1940] = 6;

		*node[0x5b41fdcf1af0] = /;

		*node[0x5b41fdcf1a30] = -;

		*node[0x5b41fdcf19d0] = -;

		*node[0x5b41fdcf1970] = 0;

		*node[0x5b41fdcf19a0] = 1;

		*node[0x5b41fdcf1a00] = 9;

		*node[0x5b41fdcf1ac0] = *;

		*node[0x5b41fdcf1a60] = 2;

		*node[0x5b41fdcf1a90] = 0;

		*node[0x5b41fdcf1b50] = ;;

		*node[0x5b41fdcf1d60] = =;

		*node[0x5b41fdcf1b80] = 7;

		*node[0x5b41fdcf1d30] = /;

		*node[0x5b41fdcf1c70] = +;

		*node[0x5b41fdcf1c10] = -;

		*node[0x5b41fdcf1bb0] = 0;

		*node[0x5b41fdcf1be0] = 1;

		*node[0x5b41fdcf1c40] = 9;

		*node[0x5b41fdcf1d00] = *;

		*node[0x5b41fdcf1ca0] = 2;

		*node[0x5b41fdcf1cd0] = 0;

		*node[0x5b41fdcf1d90] = ;;

		*node[0x5b41fdcf1dc0] = print;

		*node[0x5b41fdcf1df0] = 5;

		*node[0x5b41fdcf1e20] = ;;

		*node[0x5b41fdcf1e50] = print;

		*node[0x5b41fdcf1e80] = 6;

		*node[0x5b41fdcf1eb0] = 7;

		*node[0x5b41fdcf1ee0] = elseif;

		*node[0x5b41fdcf1f10] = op_no;

		*node[0x5b41fdcf1fa0] = ==;

		*node[0x5b41fdcf1f40] = 8;

		*node[0x5b41fdcf1f70] = 0;

		*node[0x5b41fdcf1fd0] = ;;

		*node[0x5b41fdcf2180] = =;

		*node[0x5b41fdcf2000] = 10;

		*node[0x5b41fdcf2150] = -;

		*node[0x5b41fdcf2030] = 0;

		*node[0x5b41fdcf2120] = /;

		*node[0x5b41fdcf2060] = 1;

		*node[0x5b41fdcf20f0] = *;

		*node[0x5b41fdcf2090] = 2;

		*node[0x5b41fdcf20c0] = 0;

		*node[0x5b41fdcf21b0] = ;;

		*node[0x5b41fdcf21e0] = print;

		*node[0x5b41fdcf2210] = 4;

		*node[0x5b41fdcf2240] = ;;

		*node[0x5b41fdcf2270] = print;

		*node[0x5b41fdcf22a0] = 10;

		*node[0x5b41fdcf22d0] = else;

		*node[0x5b41fdcf2300] = op_no;

		*node[0x5b41fdcf2330] = ;;

		*node[0x5b41fdcf2360] = print;

		*node[0x5b41fdcf2390] = 3;

		*node[0x5b41fdcf23c0] = ;;

		*node[0x5b41fdcf23f0] = return;

		*node[0x5b41fdcf2420] = 0;

		*node[0x5b41fdcf2450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffa4a50630] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5993530086d0] = ;;

		*node[0x599353008750] = 0;

		*node[0x599353008780] = ;;

		*node[0x5993530087b0] = input;

		*node[0x5993530087e0] = 0;

		*node[0x599353008810] = 1;

		*node[0x599353008840] = 2;

		*node[0x5993530088a0] = ;;

		*node[0x599353008900] = 0;

		*node[0x599353008930] = 1;

		*node[0x599353008960] = 2;

		*node[0x599353008990] = ;;

		*node[0x599353008a10] = 1;

		*node[0x599353008a40] = 0;

		*node[0x599353008a70] = 1;

		*node[0x599353008aa0] = 2;

		*node[0x599353008b00] = ;;

		*node[0x599353008b30] = if;

		*node[0x599353008b60] = op_no;

		*node[0x599353008bf0] = ==;

		*node[0x599353008b90] = 0;

		*node[0x599353008bc0] = 0;

		*node[0x599353008c20] = ;;

		*node[0x599353008c80] = 1;

		*node[0x599353008cb0] = 2;

		*node[0x599353008ce0] = else;

		*node[0x599353008d10] = op_no;

		*node[0x599353008d40] = ;;

		*node[0x599353008df0] = 0;

		*node[0x599353008e20] = 1;

		*node[0x599353008e50] = 2;

		*node[0x599353008e80] = ;;

		*node[0x599353008eb0] = return;

		*node[0x599353008ee0] = 0;

		*node[0x599353008f10] = ;;

		*node[0x599353008f90] = 2;

		*node[0x599353008ff0] = 0;

		*node[0x599353009020] = 1;

		*node[0x599353009050] = ;;

		*node[0x599353009170] = =;

		*node[0x599353009080] = 2;

		*node[0x599353009140] = -;

		*node[0x5993530090e0] = 0;

		*node[0x599353009110] = 1;

		*node[0x5993530091a0] = ;;

		*node[0x599353009230] = =;

		*node[0x5993530091d0] = 3;

		*node[0x599353009200] = 1;

		*node[0x599353009260] = ;;

		*node[0x599353009340] = =;

		*node[0x599353009290] = 4;

		*node[0x599353009310] = 1000;

		*node[0x599353009370] = ;;

		*node[0x5993530093a0] = if;

		*node[0x5993530093d0] = op_no;

		*node[0x599353009460] = ==;

		*node[0x599353009400] = 0;

		*node[0x599353009430] = 0;

		*node[0x599353009490] = ;;

		*node[0x5993530094c0] = if;

		*node[0x5993530094f0] = op_no;

		*node[0x599353009580] = ==;

		*node[0x599353009520] = 1;

		*node[0x599353009550] = 0;

		*node[0x5993530095b0] = ;;

		*node[0x5993530095e0] = print;

		*node[0x599353009610] = 4;

		*node[0x599353009640] = else;

		*node[0x599353009670] = op_no;

		*node[0x5993530096a0] = ;;

		*node[0x5993530096d0] = print;

		*node[0x599353009700] = 2;

		*node[0x599353009730] = else;

		*node[0x599353009760] = op_no;

		*node[0x599353009790] = ;;

		*node[0x5993530098e0] = =;

		*node[0x5993530097c0] = 5;

		*node[0x5993530098b0] = -;

		*node[0x5993530097f0] = 0;

		*node[0x599353009880] = /;

		*node[0x599353009820] = 1;

		*node[0x599353009850] = 0;

		*node[0x599353009910] = ;;

		*node[0x599353009940] = print;

		*node[0x599353009970] = 3;

		*node[0x5993530099a0] = ;;

		*node[0x5993530099d0] = print;

		*node[0x599353009a00] = 5;

		*node[0x599353009a30] = ;;

		*node[0x599353009a60] = return;

		*node[0x599353009a90] = 0;

		*node[0x599353009ac0] = ;;

		*node[0x599353009b40] = 3;

		*node[0x599353009b70] = 0;

		*node[0x599353009ba0] = 1;

		*node[0x599353009bd0] = 2;

		*node[0x599353009c30] = ;;

		*node[0x599353009d20] = =;

		*node[0x599353009c60] = 3;

		*node[0x599353009cf0] = -;

		*node[0x599353009c90] = 0;

		*node[0x599353009cc0] = 1;

		*node[0x599353009d50] = ;;

		*node[0x599353009e30] = =;

		*node[0x599353009d80] = 4;

		*node[0x599353009e00] = 1;

		*node[0x599353009e60] = ;;

		*node[0x599353009ef0] = =;

		*node[0x599353009e90] = 5;

		*node[0x599353009ec0] = 2;

		*node[0x599353009f20] = ;;

		*node[0x599353009f50] = if;

		*node[0x599353009f80] = op_no;

		*node[0x59935300a010] = ==;

		*node[0x599353009fb0] = 2;

		*node[0x599353009fe0] = 0;

		*node[0x59935300a040] = ;;

		*node[0x59935300a0d0] = =;

		*node[0x59935300a070] = 6;

		*node[0x59935300a0a0] = 0;

		*node[0x59935300a100] = ;;

		*node[0x59935300a250] = =;

		*node[0x59935300a130] = 7;

		*node[0x59935300a220] = -;

		*node[0x59935300a160] = 0;

		*node[0x59935300a1f0] = /;

		*node[0x59935300a190] = 1;

		*node[0x59935300a1c0] = 0;

		*node[0x59935300a280] = ;;

		*node[0x59935300a2b0] = print;

		*node[0x59935300a2e0] = 5;

		*node[0x59935300a310] = ;;

		*node[0x59935300a340] = print;

		*node[0x59935300a370] = 6;

		*node[0x59935300a3a0] = 7;

		*node[0x59935300a3d0] = else;

		*node[0x59935300a400] = op_no;

		*node[0x59935300a430] = ;;

		*node[0x59935300a6d0] = =;

		*node[0x59935300a460] = 8;

		*node[0x59935300a6a0] = -;

		*node[0x59935300a580] = *;

		*node[0x59935300a520] = 1;

		*node[0x59935300a550] = 1;

		*node[0x59935300a670] = *;

		*node[0x59935300a610] = *;

		*node[0x59935300a5b0] = 4;

		*node[0x59935300a5e0] = 0;

		*node[0x59935300a640] = 2;

		*node[0x59935300a700] = ;;

		*node[0x59935300a730] = if;

		*node[0x59935300a760] = op_no;

		*node[0x59935300a7f0] = >;

		*node[0x59935300a790] = 8;

		*node[0x59935300a7c0] = 0;

		*node[0x59935300a820] = ;;

		*node[0x59935300a8e0] = =;

		*node[0x59935300a850] = 9;

		*node[0x59935300a8b0] = sqrt;

		*node[0x59935300a880] = 8;

		*node[0x59935300a910] = ;;

		*node[0x59935300ab20] = =;

		*node[0x59935300a940] = 6;

		*node[0x59935300aaf0] = /;

		*node[0x59935300aa30] = -;

		*node[0x59935300a9d0] = -;

		*node[0x59935300a970] = 0;

		*node[0x59935300a9a0] = 1;

		*node[0x59935300aa00] = 9;

		*node[0x59935300aac0] = *;

		*node[0x59935300aa60] = 2;

		*node[0x59935300aa90] = 0;

		*node[0x59935300ab50] = ;;

		*node[0x59935300ad60] = =;

		*node[0x59935300ab80] = 7;

		*node[0x59935300ad30] = /;

		*node[0x59935300ac70] = +;

		*node[0x59935300ac10] = -;

		*node[0x59935300abb0] = 0;

		*node[0x59935300abe0] = 1;

		*node[0x59935300ac40] = 9;

		*node[0x59935300ad00] = *;

		*node[0x59935300aca0] = 2;

		*node[0x59935300acd0] = 0;

		*node[0x59935300ad90] = ;;

		*node[0x59935300adc0] = print;

		*node[0x59935300adf0] = 5;

		*node[0x59935300ae20] = ;;

		*node[0x59935300ae50] = print;

		*node[0x59935300ae80] = 6;

		*node[0x59935300aeb0] = 7;

		*node[0x59935300aee0] = elseif;

		*node[0x59935300af10] = op_no;

		*node[0x59935300afa0] = ==;

		*node[0x59935300af40] = 8;

		*node[0x59935300af70] = 0;

		*node[0x59935300afd0] = ;;

		*node[0x59935300b180] = =;

		*node[0x59935300b000] = 10;

		*node[0x59935300b150] = -;

		*node[0x59935300b030] = 0;

		*node[0x59935300b120] = /;

		*node[0x59935300b060] = 1;

		*node[0x59935300b0f0] = *;

		*node[0x59935300b090] = 2;

		*node[0x59935300b0c0] = 0;

		*node[0x59935300b1b0] = ;;

		*node[0x59935300b1e0] = print;

		*node[0x59935300b210] = 4;

		*node[0x59935300b240] = ;;

		*node[0x59935300b270] = print;

		*node[0x59935300b2a0] = 10;

		*node[0x59935300b2d0] = else;

		*node[0x59935300b300] = op_no;

		*node[0x59935300b330] = ;;

		*node[0x59935300b360] = print;

		*node[0x59935300b390] = 3;

		*node[0x59935300b3c0] = ;;

		*node[0x59935300b3f0] = return;

		*node[0x59935300b420] = 0;

		*node[0x59935300b450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffa0a8df10] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x56ad3e0e56d0] = ;;

		*node[0x56ad3e0e5750] = 0;

		*node[0x56ad3e0e5780] = ;;

		*node[0x56ad3e0e57b0] = input;

		*node[0x56ad3e0e57e0] = 0;

		*node[0x56ad3e0e5810] = 1;

		*node[0x56ad3e0e5840] = 2;

		*node[0x56ad3e0e58a0] = ;;

		*node[0x56ad3e0e5900] = 0;

		*node[0x56ad3e0e5930] = 1;

		*node[0x56ad3e0e5960] = 2;

		*node[0x56ad3e0e5990] = ;;

		*node[0x56ad3e0e5a10] = 1;

		*node[0x56ad3e0e5a40] = 0;

		*node[0x56ad3e0e5a70] = 1;

		*node[0x56ad3e0e5aa0] = 2;

		*node[0x56ad3e0e5b00] = ;;

		*node[0x56ad3e0e5b30] = if;

		*node[0x56ad3e0e5b60] = op_no;

		*node[0x56ad3e0e5bf0] = ==;

		*node[0x56ad3e0e5b90] = 0;

		*node[0x56ad3e0e5bc0] = 0;

		*node[0x56ad3e0e5c20] = ;;

		*node[0x56ad3e0e5c80] = 1;

		*node[0x56ad3e0e5cb0] = 2;

		*node[0x56ad3e0e5ce0] = else;

		*node[0x56ad3e0e5d10] = op_no;

		*node[0x56ad3e0e5d40] = ;;

		*node[0x56ad3e0e5df0] = 0;

		*node[0x56ad3e0e5e20] = 1;

		*node[0x56ad3e0e5e50] = 2;

		*node[0x56ad3e0e5e80] = ;;

		*node[0x56ad3e0e5eb0] = return;

		*node[0x56ad3e0e5ee0] = 0;

		*node[0x56ad3e0e5f10] = ;;

		*node[0x56ad3e0e5f90] = 2;

		*node[0x56ad3e0e5ff0] = 0;

		*node[0x56ad3e0e6020] = 1;

		*node[0x56ad3e0e6050] = ;;

		*node[0x56ad3e0e6170] = =;

		*node[0x56ad3e0e6080] = 2;

		*node[0x56ad3e0e6140] = -;

		*node[0x56ad3e0e60e0] = 0;

		*node[0x56ad3e0e6110] = 1;

		*node[0x56ad3e0e61a0] = ;;

		*node[0x56ad3e0e6230] = =;

		*node[0x56ad3e0e61d0] = 3;

		*node[0x56ad3e0e6200] = 1;

		*node[0x56ad3e0e6260] = ;;

		*node[0x56ad3e0e6340] = =;

		*node[0x56ad3e0e6290] = 4;

		*node[0x56ad3e0e6310] = 1000;

		*node[0x56ad3e0e6370] = ;;

		*node[0x56ad3e0e63a0] = if;

		*node[0x56ad3e0e63d0] = op_no;

		*node[0x56ad3e0e6460] = ==;

		*node[0x56ad3e0e6400] = 0;

		*node[0x56ad3e0e6430] = 0;

		*node[0x56ad3e0e6490] = ;;

		*node[0x56ad3e0e64c0] = if;

		*node[0x56ad3e0e64f0] = op_no;

		*node[0x56ad3e0e6580] = ==;

		*node[0x56ad3e0e6520] = 1;

		*node[0x56ad3e0e6550] = 0;

		*node[0x56ad3e0e65b0] = ;;

		*node[0x56ad3e0e65e0] = print;

		*node[0x56ad3e0e6610] = 4;

		*node[0x56ad3e0e6640] = else;

		*node[0x56ad3e0e6670] = op_no;

		*node[0x56ad3e0e66a0] = ;;

		*node[0x56ad3e0e66d0] = print;

		*node[0x56ad3e0e6700] = 2;

		*node[0x56ad3e0e6730] = else;

		*node[0x56ad3e0e6760] = op_no;

		*node[0x56ad3e0e6790] = ;;

		*node[0x56ad3e0e68e0] = =;

		*node[0x56ad3e0e67c0] = 5;

		*node[0x56ad3e0e68b0] = -;

		*node[0x56ad3e0e67f0] = 0;

		*node[0x56ad3e0e6880] = /;

		*node[0x56ad3e0e6820] = 1;

		*node[0x56ad3e0e6850] = 0;

		*node[0x56ad3e0e6910] = ;;

		*node[0x56ad3e0e6940] = print;

		*node[0x56ad3e0e6970] = 3;

		*node[0x56ad3e0e69a0] = ;;

		*node[0x56ad3e0e69d0] = print;

		*node[0x56ad3e0e6a00] = 5;

		*node[0x56ad3e0e6a30] = ;;

		*node[0x56ad3e0e6a60] = return;

		*node[0x56ad3e0e6a90] = 0;

		*node[0x56ad3e0e6ac0] = ;;

		*node[0x56ad3e0e6b40] = 3;

		*node[0x56ad3e0e6b70] = 0;

		*node[0x56ad3e0e6ba0] = 1;

		*node[0x56ad3e0e6bd0] = 2;

		*node[0x56ad3e0e6c30] = ;;

		*node[0x56ad3e0e6d20] = =;

		*node[0x56ad3e0e6c60] = 3;

		*node[0x56ad3e0e6cf0] = -;

		*node[0x56ad3e0e6c90] = 0;

		*node[0x56ad3e0e6cc0] = 1;

		*node[0x56ad3e0e6d50] = ;;

		*node[0x56ad3e0e6e30] = =;

		*node[0x56ad3e0e6d80] = 4;

		*node[0x56ad3e0e6e00] = 1;

		*node[0x56ad3e0e6e60] = ;;

		*node[0x56ad3e0e6ef0] = =;

		*node[0x56ad3e0e6e90] = 5;

		*node[0x56ad3e0e6ec0] = 2;

		*node[0x56ad3e0e6f20] = ;;

		*node[0x56ad3e0e6f50] = if;

		*node[0x56ad3e0e6f80] = op_no;

		*node[0x56ad3e0e7010] = ==;

		*node[0x56ad3e0e6fb0] = 2;

		*node[0x56ad3e0e6fe0] = 0;

		*node[0x56ad3e0e7040] = ;;

		*node[0x56ad3e0e70d0] = =;

		*node[0x56ad3e0e7070] = 6;

		*node[0x56ad3e0e70a0] = 0;

		*node[0x56ad3e0e7100] = ;;

		*node[0x56ad3e0e7250] = =;

		*node[0x56ad3e0e7130] = 7;

		*node[0x56ad3e0e7220] = -;

		*node[0x56ad3e0e7160] = 0;

		*node[0x56ad3e0e71f0] = /;

		*node[0x56ad3e0e7190] = 1;

		*node[0x56ad3e0e71c0] = 0;

		*node[0x56ad3e0e7280] = ;;

		*node[0x56ad3e0e72b0] = print;

		*node[0x56ad3e0e72e0] = 5;

		*node[0x56ad3e0e7310] = ;;

		*node[0x56ad3e0e7340] = print;

		*node[0x56ad3e0e7370] = 6;

		*node[0x56ad3e0e73a0] = 7;

		*node[0x56ad3e0e73d0] = else;

		*node[0x56ad3e0e7400] = op_no;

		*node[0x56ad3e0e7430] = ;;

		*node[0x56ad3e0e76d0] = =;

		*node[0x56ad3e0e7460] = 8;

		*node[0x56ad3e0e76a0] = -;

		*node[0x56ad3e0e7580] = *;

		*node[0x56ad3e0e7520] = 1;

		*node[0x56ad3e0e7550] = 1;

		*node[0x56ad3e0e7670] = *;

		*node[0x56ad3e0e7610] = *;

		*node[0x56ad3e0e75b0] = 4;

		*node[0x56ad3e0e75e0] = 0;

		*node[0x56ad3e0e7640] = 2;

		*node[0x56ad3e0e7700] = ;;

		*node[0x56ad3e0e7730] = if;

		*node[0x56ad3e0e7760] = op_no;

		*node[0x56ad3e0e77f0] = >;

		*node[0x56ad3e0e7790] = 8;

		*node[0x56ad3e0e77c0] = 0;

		*node[0x56ad3e0e7820] = ;;

		*node[0x56ad3e0e78e0] = =;

		*node[0x56ad3e0e7850] = 9;

		*node[0x56ad3e0e78b0] = sqrt;

		*node[0x56ad3e0e7880] = 8;

		*node[0x56ad3e0e7910] = ;;

		*node[0x56ad3e0e7b20] = =;

		*node[0x56ad3e0e7940] = 6;

		*node[0x56ad3e0e7af0] = /;

		*node[0x56ad3e0e7a30] = -;

		*node[0x56ad3e0e79d0] = -;

		*node[0x56ad3e0e7970] = 0;

		*node[0x56ad3e0e79a0] = 1;

		*node[0x56ad3e0e7a00] = 9;

		*node[0x56ad3e0e7ac0] = *;

		*node[0x56ad3e0e7a60] = 2;

		*node[0x56ad3e0e7a90] = 0;

		*node[0x56ad3e0e7b50] = ;;

		*node[0x56ad3e0e7d60] = =;

		*node[0x56ad3e0e7b80] = 7;

		*node[0x56ad3e0e7d30] = /;

		*node[0x56ad3e0e7c70] = +;

		*node[0x56ad3e0e7c10] = -;

		*node[0x56ad3e0e7bb0] = 0;

		*node[0x56ad3e0e7be0] = 1;

		*node[0x56ad3e0e7c40] = 9;

		*node[0x56ad3e0e7d00] = *;

		*node[0x56ad3e0e7ca0] = 2;

		*node[0x56ad3e0e7cd0] = 0;

		*node[0x56ad3e0e7d90] = ;;

		*node[0x56ad3e0e7dc0] = print;

		*node[0x56ad3e0e7df0] = 5;

		*node[0x56ad3e0e7e20] = ;;

		*node[0x56ad3e0e7e50] = print;

		*node[0x56ad3e0e7e80] = 6;

		*node[0x56ad3e0e7eb0] = 7;

		*node[0x56ad3e0e7ee0] = elseif;

		*node[0x56ad3e0e7f10] = op_no;

		*node[0x56ad3e0e7fa0] = ==;

		*node[0x56ad3e0e7f40] = 8;

		*node[0x56ad3e0e7f70] = 0;

		*node[0x56ad3e0e7fd0] = ;;

		*node[0x56ad3e0e8180] = =;

		*node[0x56ad3e0e8000] = 10;

		*node[0x56ad3e0e8150] = -;

		*node[0x56ad3e0e8030] = 0;

		*node[0x56ad3e0e8120] = /;

		*node[0x56ad3e0e8060] = 1;

		*node[0x56ad3e0e80f0] = *;

		*node[0x56ad3e0e8090] = 2;

		*node[0x56ad3e0e80c0] = 0;

		*node[0x56ad3e0e81b0] = ;;

		*node[0x56ad3e0e81e0] = print;

		*node[0x56ad3e0e8210] = 4;

		*node[0x56ad3e0e8240] = ;;

		*node[0x56ad3e0e8270] = print;

		*node[0x56ad3e0e82a0] = 10;

		*node[0x56ad3e0e82d0] = else;

		*node[0x56ad3e0e8300] = op_no;

		*node[0x56ad3e0e8330] = ;;

		*node[0x56ad3e0e8360] = print;

		*node[0x56ad3e0e8390] = 3;

		*node[0x56ad3e0e83c0] = ;;

		*node[0x56ad3e0e83f0] = return;

		*node[0x56ad3e0e8420] = 0;

		*node[0x56ad3e0e8450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe08a73e00] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x648f2c8c9020] = ;;

		*node[0x648f2c8c9050] = 0;

		*node[0x648f2c8c9080] = ;;

		*node[0x648f2c8c90b0] = input;

		*node[0x648f2c8c90e0] = 0;

		*node[0x648f2c8c9110] = 1;

		*node[0x648f2c8c9140] = 2;

		*node[0x648f2c8c9170] = ;;

		*node[0x648f2c8c91d0] = 0;

		*node[0x648f2c8c9200] = 1;

		*node[0x648f2c8c9230] = 2;

		*node[0x648f2c8c9260] = ;;

		*node[0x648f2c8c9290] = 1;

		*node[0x648f2c8c92c0] = 0;

		*node[0x648f2c8c92f0] = 1;

		*node[0x648f2c8c9320] = 2;

		*node[0x648f2c8c9350] = ;;

		*node[0x648f2c8c9380] = if;

		*node[0x648f2c8c93b0] = op_no;

		*node[0x648f2c8c93e0] = ==;

		*node[0x648f2c8c9410] = 0;

		*node[0x648f2c8c9440] = 0;

		*node[0x648f2c8c9470] = ;;

		*node[0x648f2c8c94d0] = 1;

		*node[0x648f2c8c9500] = 2;

		*node[0x648f2c8c9530] = else;

		*node[0x648f2c8c9560] = op_no;

		*node[0x648f2c8c9590] = ;;

		*node[0x648f2c8c95f0] = 0;

		*node[0x648f2c8c9620] = 1;

		*node[0x648f2c8c9650] = 2;

		*node[0x648f2c8c9680] = ;;

		*node[0x648f2c8c96b0] = return;

		*node[0x648f2c8c96e0] = 0;

		*node[0x648f2c8c9710] = ;;

		*node[0x648f2c8c9740] = 2;

		*node[0x648f2c8c9770] = 0;

		*node[0x648f2c8c97a0] = 1;

		*node[0x648f2c8c97d0] = ;;

		*node[0x648f2c8c9800] = =;

		*node[0x648f2c8c9830] = 2;

		*node[0x648f2c8c9860] = -;

		*node[0x648f2c8c9890] = 0;

		*node[0x648f2c8c98c0] = 1;

		*node[0x648f2c8c98f0] = ;;

		*node[0x648f2c8c9920] = =;

		*node[0x648f2c8c9950] = 3;

		*node[0x648f2c8c9980] = 1;

		*node[0x648f2c8c99b0] = ;;

		*node[0x648f2c8c99e0] = =;

		*node[0x648f2c8c9a10] = 4;

		*node[0x648f2c8c9a40] = 1000;

		*node[0x648f2c8c9a70] = ;;

		*node[0x648f2c8c9aa0] = if;

		*node[0x648f2c8c9ad0] = op_no;

		*node[0x648f2c8c9b00] = ==;

		*node[0x648f2c8c9b30] = 0;

		*node[0x648f2c8c9b60] = 0;

		*node[0x648f2c8c9b90] = ;;

		*node[0x648f2c8c9bc0] = if;

		*node[0x648f2c8c9bf0] = op_no;

		*node[0x648f2c8c9c20] = ==;

		*node[0x648f2c8c9c50] = 1;

		*node[0x648f2c8c9c80] = 0;

		*node[0x648f2c8c9cb0] = ;;

		*node[0x648f2c8c9ce0] = print;

		*node[0x648f2c8c9d10] = 4;

		*node[0x648f2c8c9d40] = else;

		*node[0x648f2c8c9d70] = op_no;

		*node[0x648f2c8c9da0] = ;;

		*node[0x648f2c8c9dd0] = print;

		*node[0x648f2c8c9e00] = 2;

		*node[0x648f2c8c9e30] = else;

		*node[0x648f2c8c9e60] = op_no;

		*node[0x648f2c8c9e90] = ;;

		*node[0x648f2c8c9ec0] = =;

		*node[0x648f2c8c9ef0] = 5;

		*node[0x648f2c8c9f20] = -;

		*node[0x648f2c8c9f50] = 0;

		*node[0x648f2c8c9f80] = /;

		*node[0x648f2c8c9fb0] = 1;

		*node[0x648f2c8c9fe0] = 0;

		*node[0x648f2c8ca010] = ;;

		*node[0x648f2c8ca040] = print;

		*node[0x648f2c8ca070] = 3;

		*node[0x648f2c8ca0a0] = ;;

		*node[0x648f2c8ca0d0] = print;

		*node[0x648f2c8ca100] = 5;

		*node[0x648f2c8ca130] = ;;

		*node[0x648f2c8ca160] = return;

		*node[0x648f2c8ca190] = 0;

		*node[0x648f2c8ca1c0] = ;;

		*node[0x648f2c8ca1f0] = 3;

		*node[0x648f2c8ca220] = 0;

		*node[0x648f2c8ca250] = 1;

		*node[0x648f2c8ca280] = 2;

		*node[0x648f2c8ca2b0] = ;;

		*node[0x648f2c8ca2e0] = =;

		*node[0x648f2c8ca310] = 3;

		*node[0x648f2c8ca340] = -;

		*node[0x648f2c8ca370] = 0;

		*node[0x648f2c8ca3a0] = 1;

		*node[0x648f2c8ca3d0] = ;;

		*node[0x648f2c8ca400] = =;

		*node[0x648f2c8ca430] = 4;

		*node[0x648f2c8ca460] = 1;

		*node[0x648f2c8ca490] = ;;

		*node[0x648f2c8ca4c0] = =;

		*node[0x648f2c8ca4f0] = 5;

		*node[0x648f2c8ca520] = 2;

		*node[0x648f2c8ca550] = ;;

		*node[0x648f2c8ca580] = if;

		*node[0x648f2c8ca5b0] = op_no;

		*node[0x648f2c8ca5e0] = ==;

		*node[0x648f2c8ca610] = 2;

		*node[0x648f2c8ca640] = 0;

		*node[0x648f2c8ca670] = ;;

		*node[0x648f2c8ca6a0] = =;

		*node[0x648f2c8ca6d0] = 6;

		*node[0x648f2c8ca700] = 0;

		*node[0x648f2c8ca730] = ;;

		*node[0x648f2c8ca760] = =;

		*node[0x648f2c8ca790] = 7;

		*node[0x648f2c8ca7c0] = -;

		*node[0x648f2c8ca7f0] = 0;

		*node[0x648f2c8ca820] = /;

		*node[0x648f2c8ca850] = 1;

		*node[0x648f2c8ca880] = 0;

		*node[0x648f2c8ca8b0] = ;;

		*node[0x648f2c8ca8e0] = print;

		*node[0x648f2c8ca910] = 5;

		*node[0x648f2c8ca940] = ;;

		*node[0x648f2c8ca970] = print;

		*node[0x648f2c8ca9a0] = 6;

		*node[0x648f2c8ca9d0] = 7;

		*node[0x648f2c8caa00] = else;

		*node[0x648f2c8caa30] = op_no;

		*node[0x648f2c8caa60] = ;;

		*node[0x648f2c8caa90] = =;

		*node[0x648f2c8caac0] = 8;

		*node[0x648f2c8caaf0] = -;

		*node[0x648f2c8cab20] = *;

		*node[0x648f2c8cab50] = 1;

		*node[0x648f2c8cab80] = 1;

		*node[0x648f2c8cabb0] = *;

		*node[0x648f2c8cabe0] = *;

		*node[0x648f2c8cac10] = 4;

		*node[0x648f2c8cac40] = 0;

		*node[0x648f2c8cac70] = 2;

		*node[0x648f2c8caca0] = ;;

		*node[0x648f2c8cacd0] = if;

		*node[0x648f2c8cad00] = op_no;

		*node[0x648f2c8cad30] = >;

		*node[0x648f2c8cad60] = 8;

		*node[0x648f2c8cad90] = 0;

		*node[0x648f2c8cadc0] = ;;

		*node[0x648f2c8cadf0] = =;

		*node[0x648f2c8cae20] = 9;

		*node[0x648f2c8cae50] = sqrt;

		*node[0x648f2c8cae80] = 8;

		*node[0x648f2c8caeb0] = ;;

		*node[0x648f2c8caee0] = =;

		*node[0x648f2c8caf10] = 6;

		*node[0x648f2c8caf40] = /;

		*node[0x648f2c8caf70] = -;

		*node[0x648f2c8cafa0] = -;

		*node[0x648f2c8cafd0] = 0;

		*node[0x648f2c8cb000] = 1;

		*node[0x648f2c8cb030] = 9;

		*node[0x648f2c8cb060] = *;

		*node[0x648f2c8cb090] = 2;

		*node[0x648f2c8cb0c0] = 0;

		*node[0x648f2c8cb0f0] = ;;

		*node[0x648f2c8cb120] = =;

		*node[0x648f2c8cb150] = 7;

		*node[0x648f2c8cb180] = /;

		*node[0x648f2c8cb1b0] = +;

		*node[0x648f2c8cb1e0] = -;

		*node[0x648f2c8cb210] = 0;

		*node[0x648f2c8cb240] = 1;

		*node[0x648f2c8cb270] = 9;

		*node[0x648f2c8cb2a0] = *;

		*node[0x648f2c8cb2d0] = 2;

		*node[0x648f2c8cb300] = 0;

		*node[0x648f2c8cb330] = ;;

		*node[0x648f2c8cb360] = print;

		*node[0x648f2c8cb390] = 5;

		*node[0x648f2c8cb3c0] = ;;

		*node[0x648f2c8cb3f0] = print;

		*node[0x648f2c8cb420] = 6;

		*node[0x648f2c8cb450] = 7;

		*node[0x648f2c8cb480] = elseif;

		*node[0x648f2c8cb4b0] = op_no;

		*node[0x648f2c8cb4e0] = ==;

		*node[0x648f2c8cb510] = 8;

		*node[0x648f2c8cb540] = 0;

		*node[0x648f2c8cb570] = ;;

		*node[0x648f2c8cb5a0] = =;

		*node[0x648f2c8cb5d0] = 10;

		*node[0x648f2c8cb600] = -;

		*node[0x648f2c8cb630] = 0;

		*node[0x648f2c8cb660] = /;

		*node[0x648f2c8cb690] = 1;

		*node[0x648f2c8cb6c0] = *;

		*node[0x648f2c8cb6f0] = 2;

		*node[0x648f2c8cb720] = 0;

		*node[0x648f2c8cb750] = ;;

		*node[0x648f2c8cb780] = print;

		*node[0x648f2c8cb7b0] = 4;

		*node[0x648f2c8cb7e0] = ;;

		*node[0x648f2c8cb810] = print;

		*node[0x648f2c8cb840] = 10;

		*node[0x648f2c8cb870] = else;

		*node[0x648f2c8cb8a0] = op_no;

		*node[0x648f2c8cb8d0] = ;;

		*node[0x648f2c8cb900] = print;

		*node[0x648f2c8cb930] = 3;

		*node[0x648f2c8cb960] = ;;

		*node[0x648f2c8cb990] = return;

		*node[0x648f2c8cb9c0] = 0;

		*node[0x648f2c8cb9f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd4321e5f0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x651d348f1020] = ;;

		*node[0x651d348f1050] = 0;

		*node[0x651d348f1080] = ;;

		*node[0x651d348f10b0] = input;

		*node[0x651d348f10e0] = 0;

		*node[0x651d348f1110] = 1;

		*node[0x651d348f1140] = 2;

		*node[0x651d348f1170] = ;;

		*node[0x651d348f11d0] = 0;

		*node[0x651d348f1200] = 1;

		*node[0x651d348f1230] = 2;

		*node[0x651d348f1260] = ;;

		*node[0x651d348f1290] = 1;

		*node[0x651d348f12c0] = 0;

		*node[0x651d348f12f0] = 1;

		*node[0x651d348f1320] = 2;

		*node[0x651d348f1350] = ;;

		*node[0x651d348f1380] = if;

		*node[0x651d348f13b0] = op_no;

		*node[0x651d348f13e0] = ==;

		*node[0x651d348f1410] = 0;

		*node[0x651d348f1440] = 0;

		*node[0x651d348f1470] = ;;

		*node[0x651d348f14d0] = 1;

		*node[0x651d348f1500] = 2;

		*node[0x651d348f1530] = else;

		*node[0x651d348f1560] = op_no;

		*node[0x651d348f1590] = ;;

		*node[0x651d348f15f0] = 0;

		*node[0x651d348f1620] = 1;

		*node[0x651d348f1650] = 2;

		*node[0x651d348f1680] = ;;

		*node[0x651d348f16b0] = return;

		*node[0x651d348f16e0] = 0;

		*node[0x651d348f1710] = ;;

		*node[0x651d348f1740] = 2;

		*node[0x651d348f1770] = 0;

		*node[0x651d348f17a0] = 1;

		*node[0x651d348f17d0] = ;;

		*node[0x651d348f1800] = =;

		*node[0x651d348f1830] = 2;

		*node[0x651d348f1860] = -;

		*node[0x651d348f1890] = 0;

		*node[0x651d348f18c0] = 1;

		*node[0x651d348f18f0] = ;;

		*node[0x651d348f1920] = =;

		*node[0x651d348f1950] = 3;

		*node[0x651d348f1980] = 1;

		*node[0x651d348f19b0] = ;;

		*node[0x651d348f19e0] = =;

		*node[0x651d348f1a10] = 4;

		*node[0x651d348f1a40] = 1000;

		*node[0x651d348f1a70] = ;;

		*node[0x651d348f1aa0] = if;

		*node[0x651d348f1ad0] = op_no;

		*node[0x651d348f1b00] = ==;

		*node[0x651d348f1b30] = 0;

		*node[0x651d348f1b60] = 0;

		*node[0x651d348f1b90] = ;;

		*node[0x651d348f1bc0] = if;

		*node[0x651d348f1bf0] = op_no;

		*node[0x651d348f1c20] = ==;

		*node[0x651d348f1c50] = 1;

		*node[0x651d348f1c80] = 0;

		*node[0x651d348f1cb0] = ;;

		*node[0x651d348f1ce0] = print;

		*node[0x651d348f1d10] = 4;

		*node[0x651d348f1d40] = else;

		*node[0x651d348f1d70] = op_no;

		*node[0x651d348f1da0] = ;;

		*node[0x651d348f1dd0] = print;

		*node[0x651d348f1e00] = 2;

		*node[0x651d348f1e30] = else;

		*node[0x651d348f1e60] = op_no;

		*node[0x651d348f1e90] = ;;

		*node[0x651d348f1ec0] = =;

		*node[0x651d348f1ef0] = 5;

		*node[0x651d348f1f20] = -;

		*node[0x651d348f1f50] = 0;

		*node[0x651d348f1f80] = /;

		*node[0x651d348f1fb0] = 1;

		*node[0x651d348f1fe0] = 0;

		*node[0x651d348f2010] = ;;

		*node[0x651d348f2040] = print;

		*node[0x651d348f2070] = 3;

		*node[0x651d348f20a0] = ;;

		*node[0x651d348f20d0] = print;

		*node[0x651d348f2100] = 5;

		*node[0x651d348f2130] = ;;

		*node[0x651d348f2160] = return;

		*node[0x651d348f2190] = 0;

		*node[0x651d348f21c0] = ;;

		*node[0x651d348f21f0] = 3;

		*node[0x651d348f2220] = 0;

		*node[0x651d348f2250] = 1;

		*node[0x651d348f2280] = 2;

		*node[0x651d348f22b0] = ;;

		*node[0x651d348f22e0] = =;

		*node[0x651d348f2310] = 3;

		*node[0x651d348f2340] = -;

		*node[0x651d348f2370] = 0;

		*node[0x651d348f23a0] = 1;

		*node[0x651d348f23d0] = ;;

		*node[0x651d348f2400] = =;

		*node[0x651d348f2430] = 4;

		*node[0x651d348f2460] = 1;

		*node[0x651d348f2490] = ;;

		*node[0x651d348f24c0] = =;

		*node[0x651d348f24f0] = 5;

		*node[0x651d348f2520] = 2;

		*node[0x651d348f2550] = ;;

		*node[0x651d348f2580] = if;

		*node[0x651d348f25b0] = op_no;

		*node[0x651d348f25e0] = ==;

		*node[0x651d348f2610] = 2;

		*node[0x651d348f2640] = 0;

		*node[0x651d348f2670] = ;;

		*node[0x651d348f26a0] = =;

		*node[0x651d348f26d0] = 6;

		*node[0x651d348f2700] = 0;

		*node[0x651d348f2730] = ;;

		*node[0x651d348f2760] = =;

		*node[0x651d348f2790] = 7;

		*node[0x651d348f27c0] = -;

		*node[0x651d348f27f0] = 0;

		*node[0x651d348f2820] = /;

		*node[0x651d348f2850] = 1;

		*node[0x651d348f2880] = 0;

		*node[0x651d348f28b0] = ;;

		*node[0x651d348f28e0] = print;

		*node[0x651d348f2910] = 5;

		*node[0x651d348f2940] = ;;

		*node[0x651d348f2970] = print;

		*node[0x651d348f29a0] = 6;

		*node[0x651d348f29d0] = 7;

		*node[0x651d348f2a00] = else;

		*node[0x651d348f2a30] = op_no;

		*node[0x651d348f2a60] = ;;

		*node[0x651d348f2a90] = =;

		*node[0x651d348f2ac0] = 8;

		*node[0x651d348f2af0] = -;

		*node[0x651d348f2b20] = *;

		*node[0x651d348f2b50] = 1;

		*node[0x651d348f2b80] = 1;

		*node[0x651d348f2bb0] = *;

		*node[0x651d348f2be0] = *;

		*node[0x651d348f2c10] = 4;

		*node[0x651d348f2c40] = 0;

		*node[0x651d348f2c70] = 2;

		*node[0x651d348f2ca0] = ;;

		*node[0x651d348f2cd0] = if;

		*node[0x651d348f2d00] = op_no;

		*node[0x651d348f2d30] = >;

		*node[0x651d348f2d60] = 8;

		*node[0x651d348f2d90] = 0;

		*node[0x651d348f2dc0] = ;;

		*node[0x651d348f2df0] = =;

		*node[0x651d348f2e20] = 9;

		*node[0x651d348f2e50] = sqrt;

		*node[0x651d348f2e80] = 8;

		*node[0x651d348f2eb0] = ;;

		*node[0x651d348f2ee0] = =;

		*node[0x651d348f2f10] = 6;

		*node[0x651d348f2f40] = /;

		*node[0x651d348f2f70] = -;

		*node[0x651d348f2fa0] = -;

		*node[0x651d348f2fd0] = 0;

		*node[0x651d348f3000] = 1;

		*node[0x651d348f3030] = 9;

		*node[0x651d348f3060] = *;

		*node[0x651d348f3090] = 2;

		*node[0x651d348f30c0] = 0;

		*node[0x651d348f30f0] = ;;

		*node[0x651d348f3120] = =;

		*node[0x651d348f3150] = 7;

		*node[0x651d348f3180] = /;

		*node[0x651d348f31b0] = +;

		*node[0x651d348f31e0] = -;

		*node[0x651d348f3210] = 0;

		*node[0x651d348f3240] = 1;

		*node[0x651d348f3270] = 9;

		*node[0x651d348f32a0] = *;

		*node[0x651d348f32d0] = 2;

		*node[0x651d348f3300] = 0;

		*node[0x651d348f3330] = ;;

		*node[0x651d348f3360] = print;

		*node[0x651d348f3390] = 5;

		*node[0x651d348f33c0] = ;;

		*node[0x651d348f33f0] = print;

		*node[0x651d348f3420] = 6;

		*node[0x651d348f3450] = 7;

		*node[0x651d348f3480] = elseif;

		*node[0x651d348f34b0] = op_no;

		*node[0x651d348f34e0] = ==;

		*node[0x651d348f3510] = 8;

		*node[0x651d348f3540] = 0;

		*node[0x651d348f3570] = ;;

		*node[0x651d348f35a0] = =;

		*node[0x651d348f35d0] = 10;

		*node[0x651d348f3600] = -;

		*node[0x651d348f3630] = 0;

		*node[0x651d348f3660] = /;

		*node[0x651d348f3690] = 1;

		*node[0x651d348f36c0] = *;

		*node[0x651d348f36f0] = 2;

		*node[0x651d348f3720] = 0;

		*node[0x651d348f3750] = ;;

		*node[0x651d348f3780] = print;

		*node[0x651d348f37b0] = 4;

		*node[0x651d348f37e0] = ;;

		*node[0x651d348f3810] = print;

		*node[0x651d348f3840] = 10;

		*node[0x651d348f3870] = else;

		*node[0x651d348f38a0] = op_no;

		*node[0x651d348f38d0] = ;;

		*node[0x651d348f3900] = print;

		*node[0x651d348f3930] = 3;

		*node[0x651d348f3960] = ;;

		*node[0x651d348f3990] = return;

		*node[0x651d348f39c0] = 0;

		*node[0x651d348f39f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffeb21ec4e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5a5850861020] = ;;

		*node[0x5a5850861050] = 0;

		*node[0x5a5850861080] = ;;

		*node[0x5a58508610b0] = input;

		*node[0x5a58508610e0] = 0;

		*node[0x5a5850861110] = 1;

		*node[0x5a5850861140] = 2;

		*node[0x5a5850861170] = ;;

		*node[0x5a58508611d0] = 0;

		*node[0x5a5850861200] = 1;

		*node[0x5a5850861230] = 2;

		*node[0x5a5850861260] = ;;

		*node[0x5a5850861290] = 1;

		*node[0x5a58508612c0] = 0;

		*node[0x5a58508612f0] = 1;

		*node[0x5a5850861320] = 2;

		*node[0x5a5850861350] = ;;

		*node[0x5a5850861380] = if;

		*node[0x5a58508613b0] = op_no;

		*node[0x5a58508613e0] = ==;

		*node[0x5a5850861410] = 0;

		*node[0x5a5850861440] = 0;

		*node[0x5a5850861470] = ;;

		*node[0x5a58508614d0] = 1;

		*node[0x5a5850861500] = 2;

		*node[0x5a5850861530] = else;

		*node[0x5a5850861560] = op_no;

		*node[0x5a5850861590] = ;;

		*node[0x5a58508615f0] = 0;

		*node[0x5a5850861620] = 1;

		*node[0x5a5850861650] = 2;

		*node[0x5a5850861680] = ;;

		*node[0x5a58508616b0] = return;

		*node[0x5a58508616e0] = 0;

		*node[0x5a5850861710] = ;;

		*node[0x5a5850861740] = 2;

		*node[0x5a5850861770] = 0;

		*node[0x5a58508617a0] = 1;

		*node[0x5a58508617d0] = ;;

		*node[0x5a5850861800] = =;

		*node[0x5a5850861830] = 2;

		*node[0x5a5850861860] = -;

		*node[0x5a5850861890] = 0;

		*node[0x5a58508618c0] = 1;

		*node[0x5a58508618f0] = ;;

		*node[0x5a5850861920] = =;

		*node[0x5a5850861950] = 3;

		*node[0x5a5850861980] = 1;

		*node[0x5a58508619b0] = ;;

		*node[0x5a58508619e0] = =;

		*node[0x5a5850861a10] = 4;

		*node[0x5a5850861a40] = 1000;

		*node[0x5a5850861a70] = ;;

		*node[0x5a5850861aa0] = if;

		*node[0x5a5850861ad0] = op_no;

		*node[0x5a5850861b00] = ==;

		*node[0x5a5850861b30] = 0;

		*node[0x5a5850861b60] = 0;

		*node[0x5a5850861b90] = ;;

		*node[0x5a5850861bc0] = if;

		*node[0x5a5850861bf0] = op_no;

		*node[0x5a5850861c20] = ==;

		*node[0x5a5850861c50] = 1;

		*node[0x5a5850861c80] = 0;

		*node[0x5a5850861cb0] = ;;

		*node[0x5a5850861ce0] = print;

		*node[0x5a5850861d10] = 4;

		*node[0x5a5850861d40] = else;

		*node[0x5a5850861d70] = op_no;

		*node[0x5a5850861da0] = ;;

		*node[0x5a5850861dd0] = print;

		*node[0x5a5850861e00] = 2;

		*node[0x5a5850861e30] = else;

		*node[0x5a5850861e60] = op_no;

		*node[0x5a5850861e90] = ;;

		*node[0x5a5850861ec0] = =;

		*node[0x5a5850861ef0] = 5;

		*node[0x5a5850861f20] = -;

		*node[0x5a5850861f50] = 0;

		*node[0x5a5850861f80] = /;

		*node[0x5a5850861fb0] = 1;

		*node[0x5a5850861fe0] = 0;

		*node[0x5a5850862010] = ;;

		*node[0x5a5850862040] = print;

		*node[0x5a5850862070] = 3;

		*node[0x5a58508620a0] = ;;

		*node[0x5a58508620d0] = print;

		*node[0x5a5850862100] = 5;

		*node[0x5a5850862130] = ;;

		*node[0x5a5850862160] = return;

		*node[0x5a5850862190] = 0;

		*node[0x5a58508621c0] = ;;

		*node[0x5a58508621f0] = 3;

		*node[0x5a5850862220] = 0;

		*node[0x5a5850862250] = 1;

		*node[0x5a5850862280] = 2;

		*node[0x5a58508622b0] = ;;

		*node[0x5a58508622e0] = =;

		*node[0x5a5850862310] = 3;

		*node[0x5a5850862340] = -;

		*node[0x5a5850862370] = 0;

		*node[0x5a58508623a0] = 1;

		*node[0x5a58508623d0] = ;;

		*node[0x5a5850862400] = =;

		*node[0x5a5850862430] = 4;

		*node[0x5a5850862460] = 1;

		*node[0x5a5850862490] = ;;

		*node[0x5a58508624c0] = =;

		*node[0x5a58508624f0] = 5;

		*node[0x5a5850862520] = 2;

		*node[0x5a5850862550] = ;;

		*node[0x5a5850862580] = if;

		*node[0x5a58508625b0] = op_no;

		*node[0x5a58508625e0] = ==;

		*node[0x5a5850862610] = 2;

		*node[0x5a5850862640] = 0;

		*node[0x5a5850862670] = ;;

		*node[0x5a58508626a0] = =;

		*node[0x5a58508626d0] = 6;

		*node[0x5a5850862700] = 0;

		*node[0x5a5850862730] = ;;

		*node[0x5a5850862760] = =;

		*node[0x5a5850862790] = 7;

		*node[0x5a58508627c0] = -;

		*node[0x5a58508627f0] = 0;

		*node[0x5a5850862820] = /;

		*node[0x5a5850862850] = 1;

		*node[0x5a5850862880] = 0;

		*node[0x5a58508628b0] = ;;

		*node[0x5a58508628e0] = print;

		*node[0x5a5850862910] = 5;

		*node[0x5a5850862940] = ;;

		*node[0x5a5850862970] = print;

		*node[0x5a58508629a0] = 6;

		*node[0x5a58508629d0] = 7;

		*node[0x5a5850862a00] = else;

		*node[0x5a5850862a30] = op_no;

		*node[0x5a5850862a60] = ;;

		*node[0x5a5850862a90] = =;

		*node[0x5a5850862ac0] = 8;

		*node[0x5a5850862af0] = -;

		*node[0x5a5850862b20] = *;

		*node[0x5a5850862b50] = 1;

		*node[0x5a5850862b80] = 1;

		*node[0x5a5850862bb0] = *;

		*node[0x5a5850862be0] = *;

		*node[0x5a5850862c10] = 4;

		*node[0x5a5850862c40] = 0;

		*node[0x5a5850862c70] = 2;

		*node[0x5a5850862ca0] = ;;

		*node[0x5a5850862cd0] = if;

		*node[0x5a5850862d00] = op_no;

		*node[0x5a5850862d30] = >;

		*node[0x5a5850862d60] = 8;

		*node[0x5a5850862d90] = 0;

		*node[0x5a5850862dc0] = ;;

		*node[0x5a5850862df0] = =;

		*node[0x5a5850862e20] = 9;

		*node[0x5a5850862e50] = sqrt;

		*node[0x5a5850862e80] = 8;

		*node[0x5a5850862eb0] = ;;

		*node[0x5a5850862ee0] = =;

		*node[0x5a5850862f10] = 6;

		*node[0x5a5850862f40] = /;

		*node[0x5a5850862f70] = -;

		*node[0x5a5850862fa0] = -;

		*node[0x5a5850862fd0] = 0;

		*node[0x5a5850863000] = 1;

		*node[0x5a5850863030] = 9;

		*node[0x5a5850863060] = *;

		*node[0x5a5850863090] = 2;

		*node[0x5a58508630c0] = 0;

		*node[0x5a58508630f0] = ;;

		*node[0x5a5850863120] = =;

		*node[0x5a5850863150] = 7;

		*node[0x5a5850863180] = /;

		*node[0x5a58508631b0] = +;

		*node[0x5a58508631e0] = -;

		*node[0x5a5850863210] = 0;

		*node[0x5a5850863240] = 1;

		*node[0x5a5850863270] = 9;

		*node[0x5a58508632a0] = *;

		*node[0x5a58508632d0] = 2;

		*node[0x5a5850863300] = 0;

		*node[0x5a5850863330] = ;;

		*node[0x5a5850863360] = print;

		*node[0x5a5850863390] = 5;

		*node[0x5a58508633c0] = ;;

		*node[0x5a58508633f0] = print;

		*node[0x5a5850863420] = 6;

		*node[0x5a5850863450] = 7;

		*node[0x5a5850863480] = elseif;

		*node[0x5a58508634b0] = op_no;

		*node[0x5a58508634e0] = ==;

		*node[0x5a5850863510] = 8;

		*node[0x5a5850863540] = 0;

		*node[0x5a5850863570] = ;;

		*node[0x5a58508635a0] = =;

		*node[0x5a58508635d0] = 10;

		*node[0x5a5850863600] = -;

		*node[0x5a5850863630] = 0;

		*node[0x5a5850863660] = /;

		*node[0x5a5850863690] = 1;

		*node[0x5a58508636c0] = *;

		*node[0x5a58508636f0] = 2;

		*node[0x5a5850863720] = 0;

		*node[0x5a5850863750] = ;;

		*node[0x5a5850863780] = print;

		*node[0x5a58508637b0] = 4;

		*node[0x5a58508637e0] = ;;

		*node[0x5a5850863810] = print;

		*node[0x5a5850863840] = 10;

		*node[0x5a5850863870] = else;

		*node[0x5a58508638a0] = op_no;

		*node[0x5a58508638d0] = ;;

		*node[0x5a5850863900] = print;

		*node[0x5a5850863930] = 3;

		*node[0x5a5850863960] = ;;

		*node[0x5a5850863990] = return;

		*node[0x5a58508639c0] = 0;

		*node[0x5a58508639f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd0f5ad3c0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x64c3d2484020] = ;;

		*node[0x64c3d2484050] = 0;

		*node[0x64c3d2484080] = ;;

		*node[0x64c3d24840b0] = input;

		*node[0x64c3d24840e0] = 0;

		*node[0x64c3d2484110] = 1;

		*node[0x64c3d2484140] = 2;

		*node[0x64c3d2484170] = ;;

		*node[0x64c3d24841d0] = 0;

		*node[0x64c3d2484200] = 1;

		*node[0x64c3d2484230] = 2;

		*node[0x64c3d2484260] = ;;

		*node[0x64c3d2484290] = 1;

		*node[0x64c3d24842c0] = 0;

		*node[0x64c3d24842f0] = 1;

		*node[0x64c3d2484320] = 2;

		*node[0x64c3d2484350] = ;;

		*node[0x64c3d2484380] = if;

		*node[0x64c3d24843b0] = op_no;

		*node[0x64c3d24843e0] = ==;

		*node[0x64c3d2484410] = 0;

		*node[0x64c3d2484440] = 0;

		*node[0x64c3d2484470] = ;;

		*node[0x64c3d24844d0] = 1;

		*node[0x64c3d2484500] = 2;

		*node[0x64c3d2484530] = else;

		*node[0x64c3d2484560] = op_no;

		*node[0x64c3d2484590] = ;;

		*node[0x64c3d24845f0] = 0;

		*node[0x64c3d2484620] = 1;

		*node[0x64c3d2484650] = 2;

		*node[0x64c3d2484680] = ;;

		*node[0x64c3d24846b0] = return;

		*node[0x64c3d24846e0] = 0;

		*node[0x64c3d2484710] = ;;

		*node[0x64c3d2484740] = 2;

		*node[0x64c3d2484770] = 0;

		*node[0x64c3d24847a0] = 1;

		*node[0x64c3d24847d0] = ;;

		*node[0x64c3d2484800] = =;

		*node[0x64c3d2484830] = 2;

		*node[0x64c3d2484860] = -;

		*node[0x64c3d2484890] = 0;

		*node[0x64c3d24848c0] = 1;

		*node[0x64c3d24848f0] = ;;

		*node[0x64c3d2484920] = =;

		*node[0x64c3d2484950] = 3;

		*node[0x64c3d2484980] = 1;

		*node[0x64c3d24849b0] = ;;

		*node[0x64c3d24849e0] = =;

		*node[0x64c3d2484a10] = 4;

		*node[0x64c3d2484a40] = 1000;

		*node[0x64c3d2484a70] = ;;

		*node[0x64c3d2484aa0] = if;

		*node[0x64c3d2484ad0] = op_no;

		*node[0x64c3d2484b00] = ==;

		*node[0x64c3d2484b30] = 0;

		*node[0x64c3d2484b60] = 0;

		*node[0x64c3d2484b90] = ;;

		*node[0x64c3d2484bc0] = if;

		*node[0x64c3d2484bf0] = op_no;

		*node[0x64c3d2484c20] = ==;

		*node[0x64c3d2484c50] = 1;

		*node[0x64c3d2484c80] = 0;

		*node[0x64c3d2484cb0] = ;;

		*node[0x64c3d2484ce0] = print;

		*node[0x64c3d2484d10] = 4;

		*node[0x64c3d2484d40] = else;

		*node[0x64c3d2484d70] = op_no;

		*node[0x64c3d2484da0] = ;;

		*node[0x64c3d2484dd0] = print;

		*node[0x64c3d2484e00] = 2;

		*node[0x64c3d2484e30] = else;

		*node[0x64c3d2484e60] = op_no;

		*node[0x64c3d2484e90] = ;;

		*node[0x64c3d2484ec0] = =;

		*node[0x64c3d2484ef0] = 5;

		*node[0x64c3d2484f20] = -;

		*node[0x64c3d2484f50] = 0;

		*node[0x64c3d2484f80] = /;

		*node[0x64c3d2484fb0] = 1;

		*node[0x64c3d2484fe0] = 0;

		*node[0x64c3d2485010] = ;;

		*node[0x64c3d2485040] = print;

		*node[0x64c3d2485070] = 3;

		*node[0x64c3d24850a0] = ;;

		*node[0x64c3d24850d0] = print;

		*node[0x64c3d2485100] = 5;

		*node[0x64c3d2485130] = ;;

		*node[0x64c3d2485160] = return;

		*node[0x64c3d2485190] = 0;

		*node[0x64c3d24851c0] = ;;

		*node[0x64c3d24851f0] = 3;

		*node[0x64c3d2485220] = 0;

		*node[0x64c3d2485250] = 1;

		*node[0x64c3d2485280] = 2;

		*node[0x64c3d24852b0] = ;;

		*node[0x64c3d24852e0] = =;

		*node[0x64c3d2485310] = 3;

		*node[0x64c3d2485340] = -;

		*node[0x64c3d2485370] = 0;

		*node[0x64c3d24853a0] = 1;

		*node[0x64c3d24853d0] = ;;

		*node[0x64c3d2485400] = =;

		*node[0x64c3d2485430] = 4;

		*node[0x64c3d2485460] = 1;

		*node[0x64c3d2485490] = ;;

		*node[0x64c3d24854c0] = =;

		*node[0x64c3d24854f0] = 5;

		*node[0x64c3d2485520] = 2;

		*node[0x64c3d2485550] = ;;

		*node[0x64c3d2485580] = if;

		*node[0x64c3d24855b0] = op_no;

		*node[0x64c3d24855e0] = ==;

		*node[0x64c3d2485610] = 2;

		*node[0x64c3d2485640] = 0;

		*node[0x64c3d2485670] = ;;

		*node[0x64c3d24856a0] = =;

		*node[0x64c3d24856d0] = 6;

		*node[0x64c3d2485700] = 0;

		*node[0x64c3d2485730] = ;;

		*node[0x64c3d2485760] = =;

		*node[0x64c3d2485790] = 7;

		*node[0x64c3d24857c0] = -;

		*node[0x64c3d24857f0] = 0;

		*node[0x64c3d2485820] = /;

		*node[0x64c3d2485850] = 1;

		*node[0x64c3d2485880] = 0;

		*node[0x64c3d24858b0] = ;;

		*node[0x64c3d24858e0] = print;

		*node[0x64c3d2485910] = 5;

		*node[0x64c3d2485940] = ;;

		*node[0x64c3d2485970] = print;

		*node[0x64c3d24859a0] = 6;

		*node[0x64c3d24859d0] = 7;

		*node[0x64c3d2485a00] = else;

		*node[0x64c3d2485a30] = op_no;

		*node[0x64c3d2485a60] = ;;

		*node[0x64c3d2485a90] = =;

		*node[0x64c3d2485ac0] = 8;

		*node[0x64c3d2485af0] = -;

		*node[0x64c3d2485b20] = *;

		*node[0x64c3d2485b50] = 1;

		*node[0x64c3d2485b80] = 1;

		*node[0x64c3d2485bb0] = *;

		*node[0x64c3d2485be0] = *;

		*node[0x64c3d2485c10] = 4;

		*node[0x64c3d2485c40] = 0;

		*node[0x64c3d2485c70] = 2;

		*node[0x64c3d2485ca0] = ;;

		*node[0x64c3d2485cd0] = if;

		*node[0x64c3d2485d00] = op_no;

		*node[0x64c3d2485d30] = >;

		*node[0x64c3d2485d60] = 8;

		*node[0x64c3d2485d90] = 0;

		*node[0x64c3d2485dc0] = ;;

		*node[0x64c3d2485df0] = =;

		*node[0x64c3d2485e20] = 9;

		*node[0x64c3d2485e50] = sqrt;

		*node[0x64c3d2485e80] = 8;

		*node[0x64c3d2485eb0] = ;;

		*node[0x64c3d2485ee0] = =;

		*node[0x64c3d2485f10] = 6;

		*node[0x64c3d2485f40] = /;

		*node[0x64c3d2485f70] = -;

		*node[0x64c3d2485fa0] = -;

		*node[0x64c3d2485fd0] = 0;

		*node[0x64c3d2486000] = 1;

		*node[0x64c3d2486030] = 9;

		*node[0x64c3d2486060] = *;

		*node[0x64c3d2486090] = 2;

		*node[0x64c3d24860c0] = 0;

		*node[0x64c3d24860f0] = ;;

		*node[0x64c3d2486120] = =;

		*node[0x64c3d2486150] = 7;

		*node[0x64c3d2486180] = /;

		*node[0x64c3d24861b0] = +;

		*node[0x64c3d24861e0] = -;

		*node[0x64c3d2486210] = 0;

		*node[0x64c3d2486240] = 1;

		*node[0x64c3d2486270] = 9;

		*node[0x64c3d24862a0] = *;

		*node[0x64c3d24862d0] = 2;

		*node[0x64c3d2486300] = 0;

		*node[0x64c3d2486330] = ;;

		*node[0x64c3d2486360] = print;

		*node[0x64c3d2486390] = 5;

		*node[0x64c3d24863c0] = ;;

		*node[0x64c3d24863f0] = print;

		*node[0x64c3d2486420] = 6;

		*node[0x64c3d2486450] = 7;

		*node[0x64c3d2486480] = elseif;

		*node[0x64c3d24864b0] = op_no;

		*node[0x64c3d24864e0] = ==;

		*node[0x64c3d2486510] = 8;

		*node[0x64c3d2486540] = 0;

		*node[0x64c3d2486570] = ;;

		*node[0x64c3d24865a0] = =;

		*node[0x64c3d24865d0] = 10;

		*node[0x64c3d2486600] = -;

		*node[0x64c3d2486630] = 0;

		*node[0x64c3d2486660] = /;

		*node[0x64c3d2486690] = 1;

		*node[0x64c3d24866c0] = *;

		*node[0x64c3d24866f0] = 2;

		*node[0x64c3d2486720] = 0;

		*node[0x64c3d2486750] = ;;

		*node[0x64c3d2486780] = print;

		*node[0x64c3d24867b0] = 4;

		*node[0x64c3d24867e0] = ;;

		*node[0x64c3d2486810] = print;

		*node[0x64c3d2486840] = 10;

		*node[0x64c3d2486870] = else;

		*node[0x64c3d24868a0] = op_no;

		*node[0x64c3d24868d0] = ;;

		*node[0x64c3d2486900] = print;

		*node[0x64c3d2486930] = 3;

		*node[0x64c3d2486960] = ;;

		*node[0x64c3d2486990] = return;

		*node[0x64c3d24869c0] = 0;

		*node[0x64c3d24869f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc8a5d4da0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x574334cce020] = ;;

		*node[0x574334cce050] = 0;

		*node[0x574334cce080] = ;;

		*node[0x574334cce0b0] = input;

		*node[0x574334cce0e0] = 0;

		*node[0x574334cce110] = 1;

		*node[0x574334cce140] = 2;

		*node[0x574334cce170] = ;;

		*node[0x574334cce1d0] = 0;

		*node[0x574334cce200] = 1;

		*node[0x574334cce230] = 2;

		*node[0x574334cce260] = ;;

		*node[0x574334cce290] = 1;

		*node[0x574334cce2c0] = 0;

		*node[0x574334cce2f0] = 1;

		*node[0x574334cce320] = 2;

		*node[0x574334cce350] = ;;

		*node[0x574334cce380] = if;

		*node[0x574334cce3b0] = op_no;

		*node[0x574334cce3e0] = ==;

		*node[0x574334cce410] = 0;

		*node[0x574334cce440] = 0;

		*node[0x574334cce470] = ;;

		*node[0x574334cce4d0] = 1;

		*node[0x574334cce500] = 2;

		*node[0x574334cce530] = else;

		*node[0x574334cce560] = op_no;

		*node[0x574334cce590] = ;;

		*node[0x574334cce5f0] = 0;

		*node[0x574334cce620] = 1;

		*node[0x574334cce650] = 2;

		*node[0x574334cce680] = ;;

		*node[0x574334cce6b0] = return;

		*node[0x574334cce6e0] = 0;

		*node[0x574334cce710] = ;;

		*node[0x574334cce740] = 2;

		*node[0x574334cce770] = 0;

		*node[0x574334cce7a0] = 1;

		*node[0x574334cce7d0] = ;;

		*node[0x574334cce800] = =;

		*node[0x574334cce830] = 2;

		*node[0x574334cce860] = -;

		*node[0x574334cce890] = 0;

		*node[0x574334cce8c0] = 1;

		*node[0x574334cce8f0] = ;;

		*node[0x574334cce920] = =;

		*node[0x574334cce950] = 3;

		*node[0x574334cce980] = 1;

		*node[0x574334cce9b0] = ;;

		*node[0x574334cce9e0] = =;

		*node[0x574334ccea10] = 4;

		*node[0x574334ccea40] = 1000;

		*node[0x574334ccea70] = ;;

		*node[0x574334cceaa0] = if;

		*node[0x574334ccead0] = op_no;

		*node[0x574334cceb00] = ==;

		*node[0x574334cceb30] = 0;

		*node[0x574334cceb60] = 0;

		*node[0x574334cceb90] = ;;

		*node[0x574334ccebc0] = if;

		*node[0x574334ccebf0] = op_no;

		*node[0x574334ccec20] = ==;

		*node[0x574334ccec50] = 1;

		*node[0x574334ccec80] = 0;

		*node[0x574334ccecb0] = ;;

		*node[0x574334ccece0] = print;

		*node[0x574334cced10] = 4;

		*node[0x574334cced40] = else;

		*node[0x574334cced70] = op_no;

		*node[0x574334cceda0] = ;;

		*node[0x574334ccedd0] = print;

		*node[0x574334ccee00] = 2;

		*node[0x574334ccee30] = else;

		*node[0x574334ccee60] = op_no;

		*node[0x574334ccee90] = ;;

		*node[0x574334cceec0] = =;

		*node[0x574334cceef0] = 5;

		*node[0x574334ccef20] = -;

		*node[0x574334ccef50] = 0;

		*node[0x574334ccef80] = /;

		*node[0x574334ccefb0] = 1;

		*node[0x574334ccefe0] = 0;

		*node[0x574334ccf010] = ;;

		*node[0x574334ccf040] = print;

		*node[0x574334ccf070] = 3;

		*node[0x574334ccf0a0] = ;;

		*node[0x574334ccf0d0] = print;

		*node[0x574334ccf100] = 5;

		*node[0x574334ccf130] = ;;

		*node[0x574334ccf160] = return;

		*node[0x574334ccf190] = 0;

		*node[0x574334ccf1c0] = ;;

		*node[0x574334ccf1f0] = 3;

		*node[0x574334ccf220] = 0;

		*node[0x574334ccf250] = 1;

		*node[0x574334ccf280] = 2;

		*node[0x574334ccf2b0] = ;;

		*node[0x574334ccf2e0] = =;

		*node[0x574334ccf310] = 3;

		*node[0x574334ccf340] = -;

		*node[0x574334ccf370] = 0;

		*node[0x574334ccf3a0] = 1;

		*node[0x574334ccf3d0] = ;;

		*node[0x574334ccf400] = =;

		*node[0x574334ccf430] = 4;

		*node[0x574334ccf460] = 1;

		*node[0x574334ccf490] = ;;

		*node[0x574334ccf4c0] = =;

		*node[0x574334ccf4f0] = 5;

		*node[0x574334ccf520] = 2;

		*node[0x574334ccf550] = ;;

		*node[0x574334ccf580] = if;

		*node[0x574334ccf5b0] = op_no;

		*node[0x574334ccf5e0] = ==;

		*node[0x574334ccf610] = 2;

		*node[0x574334ccf640] = 0;

		*node[0x574334ccf670] = ;;

		*node[0x574334ccf6a0] = =;

		*node[0x574334ccf6d0] = 6;

		*node[0x574334ccf700] = 0;

		*node[0x574334ccf730] = ;;

		*node[0x574334ccf760] = =;

		*node[0x574334ccf790] = 7;

		*node[0x574334ccf7c0] = -;

		*node[0x574334ccf7f0] = 0;

		*node[0x574334ccf820] = /;

		*node[0x574334ccf850] = 1;

		*node[0x574334ccf880] = 0;

		*node[0x574334ccf8b0] = ;;

		*node[0x574334ccf8e0] = print;

		*node[0x574334ccf910] = 5;

		*node[0x574334ccf940] = ;;

		*node[0x574334ccf970] = print;

		*node[0x574334ccf9a0] = 6;

		*node[0x574334ccf9d0] = 7;

		*node[0x574334ccfa00] = else;

		*node[0x574334ccfa30] = op_no;

		*node[0x574334ccfa60] = ;;

		*node[0x574334ccfa90] = =;

		*node[0x574334ccfac0] = 8;

		*node[0x574334ccfaf0] = -;

		*node[0x574334ccfb20] = *;

		*node[0x574334ccfb50] = 1;

		*node[0x574334ccfb80] = 1;

		*node[0x574334ccfbb0] = *;

		*node[0x574334ccfbe0] = *;

		*node[0x574334ccfc10] = 4;

		*node[0x574334ccfc40] = 0;

		*node[0x574334ccfc70] = 2;

		*node[0x574334ccfca0] = ;;

		*node[0x574334ccfcd0] = if;

		*node[0x574334ccfd00] = op_no;

		*node[0x574334ccfd30] = >;

		*node[0x574334ccfd60] = 8;

		*node[0x574334ccfd90] = 0;

		*node[0x574334ccfdc0] = ;;

		*node[0x574334ccfdf0] = =;

		*node[0x574334ccfe20] = 9;

		*node[0x574334ccfe50] = sqrt;

		*node[0x574334ccfe80] = 8;

		*node[0x574334ccfeb0] = ;;

		*node[0x574334ccfee0] = =;

		*node[0x574334ccff10] = 6;

		*node[0x574334ccff40] = /;

		*node[0x574334ccff70] = -;

		*node[0x574334ccffa0] = -;

		*node[0x574334ccffd0] = 0;

		*node[0x574334cd0000] = 1;

		*node[0x574334cd0030] = 9;

		*node[0x574334cd0060] = *;

		*node[0x574334cd0090] = 2;

		*node[0x574334cd00c0] = 0;

		*node[0x574334cd00f0] = ;;

		*node[0x574334cd0120] = =;

		*node[0x574334cd0150] = 7;

		*node[0x574334cd0180] = /;

		*node[0x574334cd01b0] = +;

		*node[0x574334cd01e0] = -;

		*node[0x574334cd0210] = 0;

		*node[0x574334cd0240] = 1;

		*node[0x574334cd0270] = 9;

		*node[0x574334cd02a0] = *;

		*node[0x574334cd02d0] = 2;

		*node[0x574334cd0300] = 0;

		*node[0x574334cd0330] = ;;

		*node[0x574334cd0360] = print;

		*node[0x574334cd0390] = 5;

		*node[0x574334cd03c0] = ;;

		*node[0x574334cd03f0] = print;

		*node[0x574334cd0420] = 6;

		*node[0x574334cd0450] = 7;

		*node[0x574334cd0480] = elseif;

		*node[0x574334cd04b0] = op_no;

		*node[0x574334cd04e0] = ==;

		*node[0x574334cd0510] = 8;

		*node[0x574334cd0540] = 0;

		*node[0x574334cd0570] = ;;

		*node[0x574334cd05a0] = =;

		*node[0x574334cd05d0] = 10;

		*node[0x574334cd0600] = -;

		*node[0x574334cd0630] = 0;

		*node[0x574334cd0660] = /;

		*node[0x574334cd0690] = 1;

		*node[0x574334cd06c0] = *;

		*node[0x574334cd06f0] = 2;

		*node[0x574334cd0720] = 0;

		*node[0x574334cd0750] = ;;

		*node[0x574334cd0780] = print;

		*node[0x574334cd07b0] = 4;

		*node[0x574334cd07e0] = ;;

		*node[0x574334cd0810] = print;

		*node[0x574334cd0840] = 10;

		*node[0x574334cd0870] = else;

		*node[0x574334cd08a0] = op_no;

		*node[0x574334cd08d0] = ;;

		*node[0x574334cd0900] = print;

		*node[0x574334cd0930] = 3;

		*node[0x574334cd0960] = ;;

		*node[0x574334cd0990] = return;

		*node[0x574334cd09c0] = 0;

		*node[0x574334cd09f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff94d19540] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5ff111089020] = ;;

		*node[0x5ff111089050] = 0;

		*node[0x5ff111089080] = ;;

		*node[0x5ff1110890b0] = input;

		*node[0x5ff1110890e0] = 0;

		*node[0x5ff111089110] = 1;

		*node[0x5ff111089140] = 2;

		*node[0x5ff111089170] = ;;

		*node[0x5ff1110891d0] = 0;

		*node[0x5ff111089200] = 1;

		*node[0x5ff111089230] = 2;

		*node[0x5ff111089260] = ;;

		*node[0x5ff111089290] = 1;

		*node[0x5ff1110892c0] = 0;

		*node[0x5ff1110892f0] = 1;

		*node[0x5ff111089320] = 2;

		*node[0x5ff111089350] = ;;

		*node[0x5ff111089380] = if;

		*node[0x5ff1110893b0] = op_no;

		*node[0x5ff1110893e0] = ==;

		*node[0x5ff111089410] = 0;

		*node[0x5ff111089440] = 0;

		*node[0x5ff111089470] = ;;

		*node[0x5ff1110894d0] = 1;

		*node[0x5ff111089500] = 2;

		*node[0x5ff111089530] = else;

		*node[0x5ff111089560] = op_no;

		*node[0x5ff111089590] = ;;

		*node[0x5ff1110895f0] = 0;

		*node[0x5ff111089620] = 1;

		*node[0x5ff111089650] = 2;

		*node[0x5ff111089680] = ;;

		*node[0x5ff1110896b0] = return;

		*node[0x5ff1110896e0] = 0;

		*node[0x5ff111089710] = ;;

		*node[0x5ff111089740] = 2;

		*node[0x5ff111089770] = 0;

		*node[0x5ff1110897a0] = 1;

		*node[0x5ff1110897d0] = ;;

		*node[0x5ff111089800] = =;

		*node[0x5ff111089830] = 2;

		*node[0x5ff111089860] = -;

		*node[0x5ff111089890] = 0;

		*node[0x5ff1110898c0] = 1;

		*node[0x5ff1110898f0] = ;;

		*node[0x5ff111089920] = =;

		*node[0x5ff111089950] = 3;

		*node[0x5ff111089980] = 1;

		*node[0x5ff1110899b0] = ;;

		*node[0x5ff1110899e0] = =;

		*node[0x5ff111089a10] = 4;

		*node[0x5ff111089a40] = 1000;

		*node[0x5ff111089a70] = ;;

		*node[0x5ff111089aa0] = if;

		*node[0x5ff111089ad0] = op_no;

		*node[0x5ff111089b00] = ==;

		*node[0x5ff111089b30] = 0;

		*node[0x5ff111089b60] = 0;

		*node[0x5ff111089b90] = ;;

		*node[0x5ff111089bc0] = if;

		*node[0x5ff111089bf0] = op_no;

		*node[0x5ff111089c20] = ==;

		*node[0x5ff111089c50] = 1;

		*node[0x5ff111089c80] = 0;

		*node[0x5ff111089cb0] = ;;

		*node[0x5ff111089ce0] = print;

		*node[0x5ff111089d10] = 4;

		*node[0x5ff111089d40] = else;

		*node[0x5ff111089d70] = op_no;

		*node[0x5ff111089da0] = ;;

		*node[0x5ff111089dd0] = print;

		*node[0x5ff111089e00] = 2;

		*node[0x5ff111089e30] = else;

		*node[0x5ff111089e60] = op_no;

		*node[0x5ff111089e90] = ;;

		*node[0x5ff111089ec0] = =;

		*node[0x5ff111089ef0] = 5;

		*node[0x5ff111089f20] = -;

		*node[0x5ff111089f50] = 0;

		*node[0x5ff111089f80] = /;

		*node[0x5ff111089fb0] = 1;

		*node[0x5ff111089fe0] = 0;

		*node[0x5ff11108a010] = ;;

		*node[0x5ff11108a040] = print;

		*node[0x5ff11108a070] = 3;

		*node[0x5ff11108a0a0] = ;;

		*node[0x5ff11108a0d0] = print;

		*node[0x5ff11108a100] = 5;

		*node[0x5ff11108a130] = ;;

		*node[0x5ff11108a160] = return;

		*node[0x5ff11108a190] = 0;

		*node[0x5ff11108a1c0] = ;;

		*node[0x5ff11108a1f0] = 3;

		*node[0x5ff11108a220] = 0;

		*node[0x5ff11108a250] = 1;

		*node[0x5ff11108a280] = 2;

		*node[0x5ff11108a2b0] = ;;

		*node[0x5ff11108a2e0] = =;

		*node[0x5ff11108a310] = 3;

		*node[0x5ff11108a340] = -;

		*node[0x5ff11108a370] = 0;

		*node[0x5ff11108a3a0] = 1;

		*node[0x5ff11108a3d0] = ;;

		*node[0x5ff11108a400] = =;

		*node[0x5ff11108a430] = 4;

		*node[0x5ff11108a460] = 1;

		*node[0x5ff11108a490] = ;;

		*node[0x5ff11108a4c0] = =;

		*node[0x5ff11108a4f0] = 5;

		*node[0x5ff11108a520] = 2;

		*node[0x5ff11108a550] = ;;

		*node[0x5ff11108a580] = if;

		*node[0x5ff11108a5b0] = op_no;

		*node[0x5ff11108a5e0] = ==;

		*node[0x5ff11108a610] = 2;

		*node[0x5ff11108a640] = 0;

		*node[0x5ff11108a670] = ;;

		*node[0x5ff11108a6a0] = =;

		*node[0x5ff11108a6d0] = 6;

		*node[0x5ff11108a700] = 0;

		*node[0x5ff11108a730] = ;;

		*node[0x5ff11108a760] = =;

		*node[0x5ff11108a790] = 7;

		*node[0x5ff11108a7c0] = -;

		*node[0x5ff11108a7f0] = 0;

		*node[0x5ff11108a820] = /;

		*node[0x5ff11108a850] = 1;

		*node[0x5ff11108a880] = 0;

		*node[0x5ff11108a8b0] = ;;

		*node[0x5ff11108a8e0] = print;

		*node[0x5ff11108a910] = 5;

		*node[0x5ff11108a940] = ;;

		*node[0x5ff11108a970] = print;

		*node[0x5ff11108a9a0] = 6;

		*node[0x5ff11108a9d0] = 7;

		*node[0x5ff11108aa00] = else;

		*node[0x5ff11108aa30] = op_no;

		*node[0x5ff11108aa60] = ;;

		*node[0x5ff11108aa90] = =;

		*node[0x5ff11108aac0] = 8;

		*node[0x5ff11108aaf0] = -;

		*node[0x5ff11108ab20] = *;

		*node[0x5ff11108ab50] = 1;

		*node[0x5ff11108ab80] = 1;

		*node[0x5ff11108abb0] = *;

		*node[0x5ff11108abe0] = *;

		*node[0x5ff11108ac10] = 4;

		*node[0x5ff11108ac40] = 0;

		*node[0x5ff11108ac70] = 2;

		*node[0x5ff11108aca0] = ;;

		*node[0x5ff11108acd0] = if;

		*node[0x5ff11108ad00] = op_no;

		*node[0x5ff11108ad30] = >;

		*node[0x5ff11108ad60] = 8;

		*node[0x5ff11108ad90] = 0;

		*node[0x5ff11108adc0] = ;;

		*node[0x5ff11108adf0] = =;

		*node[0x5ff11108ae20] = 9;

		*node[0x5ff11108ae50] = sqrt;

		*node[0x5ff11108ae80] = 8;

		*node[0x5ff11108aeb0] = ;;

		*node[0x5ff11108aee0] = =;

		*node[0x5ff11108af10] = 6;

		*node[0x5ff11108af40] = /;

		*node[0x5ff11108af70] = -;

		*node[0x5ff11108afa0] = -;

		*node[0x5ff11108afd0] = 0;

		*node[0x5ff11108b000] = 1;

		*node[0x5ff11108b030] = 9;

		*node[0x5ff11108b060] = *;

		*node[0x5ff11108b090] = 2;

		*node[0x5ff11108b0c0] = 0;

		*node[0x5ff11108b0f0] = ;;

		*node[0x5ff11108b120] = =;

		*node[0x5ff11108b150] = 7;

		*node[0x5ff11108b180] = /;

		*node[0x5ff11108b1b0] = +;

		*node[0x5ff11108b1e0] = -;

		*node[0x5ff11108b210] = 0;

		*node[0x5ff11108b240] = 1;

		*node[0x5ff11108b270] = 9;

		*node[0x5ff11108b2a0] = *;

		*node[0x5ff11108b2d0] = 2;

		*node[0x5ff11108b300] = 0;

		*node[0x5ff11108b330] = ;;

		*node[0x5ff11108b360] = print;

		*node[0x5ff11108b390] = 5;

		*node[0x5ff11108b3c0] = ;;

		*node[0x5ff11108b3f0] = print;

		*node[0x5ff11108b420] = 6;

		*node[0x5ff11108b450] = 7;

		*node[0x5ff11108b480] = elseif;

		*node[0x5ff11108b4b0] = op_no;

		*node[0x5ff11108b4e0] = ==;

		*node[0x5ff11108b510] = 8;

		*node[0x5ff11108b540] = 0;

		*node[0x5ff11108b570] = ;;

		*node[0x5ff11108b5a0] = =;

		*node[0x5ff11108b5d0] = 10;

		*node[0x5ff11108b600] = -;

		*node[0x5ff11108b630] = 0;

		*node[0x5ff11108b660] = /;

		*node[0x5ff11108b690] = 1;

		*node[0x5ff11108b6c0] = *;

		*node[0x5ff11108b6f0] = 2;

		*node[0x5ff11108b720] = 0;

		*node[0x5ff11108b750] = ;;

		*node[0x5ff11108b780] = print;

		*node[0x5ff11108b7b0] = 4;

		*node[0x5ff11108b7e0] = ;;

		*node[0x5ff11108b810] = print;

		*node[0x5ff11108b840] = 10;

		*node[0x5ff11108b870] = else;

		*node[0x5ff11108b8a0] = op_no;

		*node[0x5ff11108b8d0] = ;;

		*node[0x5ff11108b900] = print;

		*node[0x5ff11108b930] = 3;

		*node[0x5ff11108b960] = ;;

		*node[0x5ff11108b990] = return;

		*node[0x5ff11108b9c0] = 0;

		*node[0x5ff11108b9f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe4ebb9a50] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58c7df730020] = ;;

		*node[0x58c7df730050] = 0;

		*node[0x58c7df730080] = ;;

		*node[0x58c7df7300b0] = input;

		*node[0x58c7df7300e0] = 0;

		*node[0x58c7df730110] = 1;

		*node[0x58c7df730140] = 2;

		*node[0x58c7df730170] = ;;

		*node[0x58c7df7301d0] = 0;

		*node[0x58c7df730200] = 1;

		*node[0x58c7df730230] = 2;

		*node[0x58c7df730260] = ;;

		*node[0x58c7df730290] = 1;

		*node[0x58c7df7302c0] = 0;

		*node[0x58c7df7302f0] = 1;

		*node[0x58c7df730320] = 2;

		*node[0x58c7df730350] = ;;

		*node[0x58c7df730380] = if;

		*node[0x58c7df7303b0] = op_no;

		*node[0x58c7df7303e0] = ==;

		*node[0x58c7df730410] = 0;

		*node[0x58c7df730440] = 0;

		*node[0x58c7df730470] = ;;

		*node[0x58c7df7304d0] = 1;

		*node[0x58c7df730500] = 2;

		*node[0x58c7df730530] = else;

		*node[0x58c7df730560] = op_no;

		*node[0x58c7df730590] = ;;

		*node[0x58c7df7305f0] = 0;

		*node[0x58c7df730620] = 1;

		*node[0x58c7df730650] = 2;

		*node[0x58c7df730680] = ;;

		*node[0x58c7df7306b0] = return;

		*node[0x58c7df7306e0] = 0;

		*node[0x58c7df730710] = ;;

		*node[0x58c7df730740] = 2;

		*node[0x58c7df730770] = 0;

		*node[0x58c7df7307a0] = 1;

		*node[0x58c7df7307d0] = ;;

		*node[0x58c7df730800] = =;

		*node[0x58c7df730830] = 2;

		*node[0x58c7df730860] = -;

		*node[0x58c7df730890] = 0;

		*node[0x58c7df7308c0] = 1;

		*node[0x58c7df7308f0] = ;;

		*node[0x58c7df730920] = =;

		*node[0x58c7df730950] = 3;

		*node[0x58c7df730980] = 1;

		*node[0x58c7df7309b0] = ;;

		*node[0x58c7df7309e0] = =;

		*node[0x58c7df730a10] = 4;

		*node[0x58c7df730a40] = 1000;

		*node[0x58c7df730a70] = ;;

		*node[0x58c7df730aa0] = if;

		*node[0x58c7df730ad0] = op_no;

		*node[0x58c7df730b00] = ==;

		*node[0x58c7df730b30] = 0;

		*node[0x58c7df730b60] = 0;

		*node[0x58c7df730b90] = ;;

		*node[0x58c7df730bc0] = if;

		*node[0x58c7df730bf0] = op_no;

		*node[0x58c7df730c20] = ==;

		*node[0x58c7df730c50] = 1;

		*node[0x58c7df730c80] = 0;

		*node[0x58c7df730cb0] = ;;

		*node[0x58c7df730ce0] = print;

		*node[0x58c7df730d10] = 4;

		*node[0x58c7df730d40] = else;

		*node[0x58c7df730d70] = op_no;

		*node[0x58c7df730da0] = ;;

		*node[0x58c7df730dd0] = print;

		*node[0x58c7df730e00] = 2;

		*node[0x58c7df730e30] = else;

		*node[0x58c7df730e60] = op_no;

		*node[0x58c7df730e90] = ;;

		*node[0x58c7df730ec0] = =;

		*node[0x58c7df730ef0] = 5;

		*node[0x58c7df730f20] = -;

		*node[0x58c7df730f50] = 0;

		*node[0x58c7df730f80] = /;

		*node[0x58c7df730fb0] = 1;

		*node[0x58c7df730fe0] = 0;

		*node[0x58c7df731010] = ;;

		*node[0x58c7df731040] = print;

		*node[0x58c7df731070] = 3;

		*node[0x58c7df7310a0] = ;;

		*node[0x58c7df7310d0] = print;

		*node[0x58c7df731100] = 5;

		*node[0x58c7df731130] = ;;

		*node[0x58c7df731160] = return;

		*node[0x58c7df731190] = 0;

		*node[0x58c7df7311c0] = ;;

		*node[0x58c7df7311f0] = 3;

		*node[0x58c7df731220] = 0;

		*node[0x58c7df731250] = 1;

		*node[0x58c7df731280] = 2;

		*node[0x58c7df7312b0] = ;;

		*node[0x58c7df7312e0] = =;

		*node[0x58c7df731310] = 3;

		*node[0x58c7df731340] = -;

		*node[0x58c7df731370] = 0;

		*node[0x58c7df7313a0] = 1;

		*node[0x58c7df7313d0] = ;;

		*node[0x58c7df731400] = =;

		*node[0x58c7df731430] = 4;

		*node[0x58c7df731460] = 1;

		*node[0x58c7df731490] = ;;

		*node[0x58c7df7314c0] = =;

		*node[0x58c7df7314f0] = 5;

		*node[0x58c7df731520] = 2;

		*node[0x58c7df731550] = ;;

		*node[0x58c7df731580] = if;

		*node[0x58c7df7315b0] = op_no;

		*node[0x58c7df7315e0] = ==;

		*node[0x58c7df731610] = 2;

		*node[0x58c7df731640] = 0;

		*node[0x58c7df731670] = ;;

		*node[0x58c7df7316a0] = =;

		*node[0x58c7df7316d0] = 6;

		*node[0x58c7df731700] = 0;

		*node[0x58c7df731730] = ;;

		*node[0x58c7df731760] = =;

		*node[0x58c7df731790] = 7;

		*node[0x58c7df7317c0] = -;

		*node[0x58c7df7317f0] = 0;

		*node[0x58c7df731820] = /;

		*node[0x58c7df731850] = 1;

		*node[0x58c7df731880] = 0;

		*node[0x58c7df7318b0] = ;;

		*node[0x58c7df7318e0] = print;

		*node[0x58c7df731910] = 5;

		*node[0x58c7df731940] = ;;

		*node[0x58c7df731970] = print;

		*node[0x58c7df7319a0] = 6;

		*node[0x58c7df7319d0] = 7;

		*node[0x58c7df731a00] = else;

		*node[0x58c7df731a30] = op_no;

		*node[0x58c7df731a60] = ;;

		*node[0x58c7df731a90] = =;

		*node[0x58c7df731ac0] = 8;

		*node[0x58c7df731af0] = -;

		*node[0x58c7df731b20] = *;

		*node[0x58c7df731b50] = 1;

		*node[0x58c7df731b80] = 1;

		*node[0x58c7df731bb0] = *;

		*node[0x58c7df731be0] = *;

		*node[0x58c7df731c10] = 4;

		*node[0x58c7df731c40] = 0;

		*node[0x58c7df731c70] = 2;

		*node[0x58c7df731ca0] = ;;

		*node[0x58c7df731cd0] = if;

		*node[0x58c7df731d00] = op_no;

		*node[0x58c7df731d30] = >;

		*node[0x58c7df731d60] = 8;

		*node[0x58c7df731d90] = 0;

		*node[0x58c7df731dc0] = ;;

		*node[0x58c7df731df0] = =;

		*node[0x58c7df731e20] = 9;

		*node[0x58c7df731e50] = sqrt;

		*node[0x58c7df731e80] = 8;

		*node[0x58c7df731eb0] = ;;

		*node[0x58c7df731ee0] = =;

		*node[0x58c7df731f10] = 6;

		*node[0x58c7df731f40] = /;

		*node[0x58c7df731f70] = -;

		*node[0x58c7df731fa0] = -;

		*node[0x58c7df731fd0] = 0;

		*node[0x58c7df732000] = 1;

		*node[0x58c7df732030] = 9;

		*node[0x58c7df732060] = *;

		*node[0x58c7df732090] = 2;

		*node[0x58c7df7320c0] = 0;

		*node[0x58c7df7320f0] = ;;

		*node[0x58c7df732120] = =;

		*node[0x58c7df732150] = 7;

		*node[0x58c7df732180] = /;

		*node[0x58c7df7321b0] = +;

		*node[0x58c7df7321e0] = -;

		*node[0x58c7df732210] = 0;

		*node[0x58c7df732240] = 1;

		*node[0x58c7df732270] = 9;

		*node[0x58c7df7322a0] = *;

		*node[0x58c7df7322d0] = 2;

		*node[0x58c7df732300] = 0;

		*node[0x58c7df732330] = ;;

		*node[0x58c7df732360] = print;

		*node[0x58c7df732390] = 5;

		*node[0x58c7df7323c0] = ;;

		*node[0x58c7df7323f0] = print;

		*node[0x58c7df732420] = 6;

		*node[0x58c7df732450] = 7;

		*node[0x58c7df732480] = elseif;

		*node[0x58c7df7324b0] = op_no;

		*node[0x58c7df7324e0] = ==;

		*node[0x58c7df732510] = 8;

		*node[0x58c7df732540] = 0;

		*node[0x58c7df732570] = ;;

		*node[0x58c7df7325a0] = =;

		*node[0x58c7df7325d0] = 10;

		*node[0x58c7df732600] = -;

		*node[0x58c7df732630] = 0;

		*node[0x58c7df732660] = /;

		*node[0x58c7df732690] = 1;

		*node[0x58c7df7326c0] = *;

		*node[0x58c7df7326f0] = 2;

		*node[0x58c7df732720] = 0;

		*node[0x58c7df732750] = ;;

		*node[0x58c7df732780] = print;

		*node[0x58c7df7327b0] = 4;

		*node[0x58c7df7327e0] = ;;

		*node[0x58c7df732810] = print;

		*node[0x58c7df732840] = 10;

		*node[0x58c7df732870] = else;

		*node[0x58c7df7328a0] = op_no;

		*node[0x58c7df7328d0] = ;;

		*node[0x58c7df732900] = print;

		*node[0x58c7df732930] = 3;

		*node[0x58c7df732960] = ;;

		*node[0x58c7df732990] = return;

		*node[0x58c7df7329c0] = 0;

		*node[0x58c7df7329f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffde2a2f980] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6292224b1020] = ;;

		*node[0x6292224b1050] = 0;

		*node[0x6292224b1080] = ;;

		*node[0x6292224b10b0] = input;

		*node[0x6292224b10e0] = 0;

		*node[0x6292224b1110] = 1;

		*node[0x6292224b1140] = 2;

		*node[0x6292224b1170] = ;;

		*node[0x6292224b11d0] = 0;

		*node[0x6292224b1200] = 1;

		*node[0x6292224b1230] = 2;

		*node[0x6292224b1260] = ;;

		*node[0x6292224b1290] = 1;

		*node[0x6292224b12c0] = 0;

		*node[0x6292224b12f0] = 1;

		*node[0x6292224b1320] = 2;

		*node[0x6292224b1350] = ;;

		*node[0x6292224b1380] = if;

		*node[0x6292224b13b0] = op_no;

		*node[0x6292224b13e0] = ==;

		*node[0x6292224b1410] = 0;

		*node[0x6292224b1440] = 0;

		*node[0x6292224b1470] = ;;

		*node[0x6292224b14d0] = 1;

		*node[0x6292224b1500] = 2;

		*node[0x6292224b1530] = else;

		*node[0x6292224b1560] = op_no;

		*node[0x6292224b1590] = ;;

		*node[0x6292224b15f0] = 0;

		*node[0x6292224b1620] = 1;

		*node[0x6292224b1650] = 2;

		*node[0x6292224b1680] = ;;

		*node[0x6292224b16b0] = return;

		*node[0x6292224b16e0] = 0;

		*node[0x6292224b1710] = ;;

		*node[0x6292224b1740] = 2;

		*node[0x6292224b1770] = 0;

		*node[0x6292224b17a0] = 1;

		*node[0x6292224b17d0] = ;;

		*node[0x6292224b1800] = =;

		*node[0x6292224b1830] = 2;

		*node[0x6292224b1860] = -;

		*node[0x6292224b1890] = 0;

		*node[0x6292224b18c0] = 1;

		*node[0x6292224b18f0] = ;;

		*node[0x6292224b1920] = =;

		*node[0x6292224b1950] = 3;

		*node[0x6292224b1980] = 1;

		*node[0x6292224b19b0] = ;;

		*node[0x6292224b19e0] = =;

		*node[0x6292224b1a10] = 4;

		*node[0x6292224b1a40] = 1000;

		*node[0x6292224b1a70] = ;;

		*node[0x6292224b1aa0] = if;

		*node[0x6292224b1ad0] = op_no;

		*node[0x6292224b1b00] = ==;

		*node[0x6292224b1b30] = 0;

		*node[0x6292224b1b60] = 0;

		*node[0x6292224b1b90] = ;;

		*node[0x6292224b1bc0] = if;

		*node[0x6292224b1bf0] = op_no;

		*node[0x6292224b1c20] = ==;

		*node[0x6292224b1c50] = 1;

		*node[0x6292224b1c80] = 0;

		*node[0x6292224b1cb0] = ;;

		*node[0x6292224b1ce0] = print;

		*node[0x6292224b1d10] = 4;

		*node[0x6292224b1d40] = else;

		*node[0x6292224b1d70] = op_no;

		*node[0x6292224b1da0] = ;;

		*node[0x6292224b1dd0] = print;

		*node[0x6292224b1e00] = 2;

		*node[0x6292224b1e30] = else;

		*node[0x6292224b1e60] = op_no;

		*node[0x6292224b1e90] = ;;

		*node[0x6292224b1ec0] = =;

		*node[0x6292224b1ef0] = 5;

		*node[0x6292224b1f20] = -;

		*node[0x6292224b1f50] = 0;

		*node[0x6292224b1f80] = /;

		*node[0x6292224b1fb0] = 1;

		*node[0x6292224b1fe0] = 0;

		*node[0x6292224b2010] = ;;

		*node[0x6292224b2040] = print;

		*node[0x6292224b2070] = 3;

		*node[0x6292224b20a0] = ;;

		*node[0x6292224b20d0] = print;

		*node[0x6292224b2100] = 5;

		*node[0x6292224b2130] = ;;

		*node[0x6292224b2160] = return;

		*node[0x6292224b2190] = 0;

		*node[0x6292224b21c0] = ;;

		*node[0x6292224b21f0] = 3;

		*node[0x6292224b2220] = 0;

		*node[0x6292224b2250] = 1;

		*node[0x6292224b2280] = 2;

		*node[0x6292224b22b0] = ;;

		*node[0x6292224b22e0] = =;

		*node[0x6292224b2310] = 3;

		*node[0x6292224b2340] = -;

		*node[0x6292224b2370] = 0;

		*node[0x6292224b23a0] = 1;

		*node[0x6292224b23d0] = ;;

		*node[0x6292224b2400] = =;

		*node[0x6292224b2430] = 4;

		*node[0x6292224b2460] = 1;

		*node[0x6292224b2490] = ;;

		*node[0x6292224b24c0] = =;

		*node[0x6292224b24f0] = 5;

		*node[0x6292224b2520] = 2;

		*node[0x6292224b2550] = ;;

		*node[0x6292224b2580] = if;

		*node[0x6292224b25b0] = op_no;

		*node[0x6292224b25e0] = ==;

		*node[0x6292224b2610] = 2;

		*node[0x6292224b2640] = 0;

		*node[0x6292224b2670] = ;;

		*node[0x6292224b26a0] = =;

		*node[0x6292224b26d0] = 6;

		*node[0x6292224b2700] = 0;

		*node[0x6292224b2730] = ;;

		*node[0x6292224b2760] = =;

		*node[0x6292224b2790] = 7;

		*node[0x6292224b27c0] = -;

		*node[0x6292224b27f0] = 0;

		*node[0x6292224b2820] = /;

		*node[0x6292224b2850] = 1;

		*node[0x6292224b2880] = 0;

		*node[0x6292224b28b0] = ;;

		*node[0x6292224b28e0] = print;

		*node[0x6292224b2910] = 5;

		*node[0x6292224b2940] = ;;

		*node[0x6292224b2970] = print;

		*node[0x6292224b29a0] = 6;

		*node[0x6292224b29d0] = 7;

		*node[0x6292224b2a00] = else;

		*node[0x6292224b2a30] = op_no;

		*node[0x6292224b2a60] = ;;

		*node[0x6292224b2a90] = =;

		*node[0x6292224b2ac0] = 8;

		*node[0x6292224b2af0] = -;

		*node[0x6292224b2b20] = *;

		*node[0x6292224b2b50] = 1;

		*node[0x6292224b2b80] = 1;

		*node[0x6292224b2bb0] = *;

		*node[0x6292224b2be0] = *;

		*node[0x6292224b2c10] = 4;

		*node[0x6292224b2c40] = 0;

		*node[0x6292224b2c70] = 2;

		*node[0x6292224b2ca0] = ;;

		*node[0x6292224b2cd0] = if;

		*node[0x6292224b2d00] = op_no;

		*node[0x6292224b2d30] = >;

		*node[0x6292224b2d60] = 8;

		*node[0x6292224b2d90] = 0;

		*node[0x6292224b2dc0] = ;;

		*node[0x6292224b2df0] = =;

		*node[0x6292224b2e20] = 9;

		*node[0x6292224b2e50] = sqrt;

		*node[0x6292224b2e80] = 8;

		*node[0x6292224b2eb0] = ;;

		*node[0x6292224b2ee0] = =;

		*node[0x6292224b2f10] = 6;

		*node[0x6292224b2f40] = /;

		*node[0x6292224b2f70] = -;

		*node[0x6292224b2fa0] = -;

		*node[0x6292224b2fd0] = 0;

		*node[0x6292224b3000] = 1;

		*node[0x6292224b3030] = 9;

		*node[0x6292224b3060] = *;

		*node[0x6292224b3090] = 2;

		*node[0x6292224b30c0] = 0;

		*node[0x6292224b30f0] = ;;

		*node[0x6292224b3120] = =;

		*node[0x6292224b3150] = 7;

		*node[0x6292224b3180] = /;

		*node[0x6292224b31b0] = +;

		*node[0x6292224b31e0] = -;

		*node[0x6292224b3210] = 0;

		*node[0x6292224b3240] = 1;

		*node[0x6292224b3270] = 9;

		*node[0x6292224b32a0] = *;

		*node[0x6292224b32d0] = 2;

		*node[0x6292224b3300] = 0;

		*node[0x6292224b3330] = ;;

		*node[0x6292224b3360] = print;

		*node[0x6292224b3390] = 5;

		*node[0x6292224b33c0] = ;;

		*node[0x6292224b33f0] = print;

		*node[0x6292224b3420] = 6;

		*node[0x6292224b3450] = 7;

		*node[0x6292224b3480] = elseif;

		*node[0x6292224b34b0] = op_no;

		*node[0x6292224b34e0] = ==;

		*node[0x6292224b3510] = 8;

		*node[0x6292224b3540] = 0;

		*node[0x6292224b3570] = ;;

		*node[0x6292224b35a0] = =;

		*node[0x6292224b35d0] = 10;

		*node[0x6292224b3600] = -;

		*node[0x6292224b3630] = 0;

		*node[0x6292224b3660] = /;

		*node[0x6292224b3690] = 1;

		*node[0x6292224b36c0] = *;

		*node[0x6292224b36f0] = 2;

		*node[0x6292224b3720] = 0;

		*node[0x6292224b3750] = ;;

		*node[0x6292224b3780] = print;

		*node[0x6292224b37b0] = 4;

		*node[0x6292224b37e0] = ;;

		*node[0x6292224b3810] = print;

		*node[0x6292224b3840] = 10;

		*node[0x6292224b3870] = else;

		*node[0x6292224b38a0] = op_no;

		*node[0x6292224b38d0] = ;;

		*node[0x6292224b3900] = print;

		*node[0x6292224b3930] = 3;

		*node[0x6292224b3960] = ;;

		*node[0x6292224b3990] = return;

		*node[0x6292224b39c0] = 0;

		*node[0x6292224b39f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd39e1cc00] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x653b393bd020] = ;;

		*node[0x653b393bd050] = 0;

		*node[0x653b393bd080] = ;;

		*node[0x653b393bd0b0] = input;

		*node[0x653b393bd0e0] = 0;

		*node[0x653b393bd110] = 1;

		*node[0x653b393bd140] = 2;

		*node[0x653b393bd170] = ;;

		*node[0x653b393bd1d0] = 0;

		*node[0x653b393bd200] = 1;

		*node[0x653b393bd230] = 2;

		*node[0x653b393bd260] = ;;

		*node[0x653b393bd290] = 1;

		*node[0x653b393bd2c0] = 0;

		*node[0x653b393bd2f0] = 1;

		*node[0x653b393bd320] = 2;

		*node[0x653b393bd350] = ;;

		*node[0x653b393bd380] = if;

		*node[0x653b393bd3b0] = op_no;

		*node[0x653b393bd3e0] = ==;

		*node[0x653b393bd410] = 0;

		*node[0x653b393bd440] = 0;

		*node[0x653b393bd470] = ;;

		*node[0x653b393bd4d0] = 1;

		*node[0x653b393bd500] = 2;

		*node[0x653b393bd530] = else;

		*node[0x653b393bd560] = op_no;

		*node[0x653b393bd590] = ;;

		*node[0x653b393bd5f0] = 0;

		*node[0x653b393bd620] = 1;

		*node[0x653b393bd650] = 2;

		*node[0x653b393bd680] = ;;

		*node[0x653b393bd6b0] = return;

		*node[0x653b393bd6e0] = 0;

		*node[0x653b393bd710] = ;;

		*node[0x653b393bd740] = 2;

		*node[0x653b393bd770] = 0;

		*node[0x653b393bd7a0] = 1;

		*node[0x653b393bd7d0] = ;;

		*node[0x653b393bd800] = =;

		*node[0x653b393bd830] = 2;

		*node[0x653b393bd860] = -;

		*node[0x653b393bd890] = 0;

		*node[0x653b393bd8c0] = 1;

		*node[0x653b393bd8f0] = ;;

		*node[0x653b393bd920] = =;

		*node[0x653b393bd950] = 3;

		*node[0x653b393bd980] = 1;

		*node[0x653b393bd9b0] = ;;

		*node[0x653b393bd9e0] = =;

		*node[0x653b393bda10] = 4;

		*node[0x653b393bda40] = 1000;

		*node[0x653b393bda70] = ;;

		*node[0x653b393bdaa0] = if;

		*node[0x653b393bdad0] = op_no;

		*node[0x653b393bdb00] = ==;

		*node[0x653b393bdb30] = 0;

		*node[0x653b393bdb60] = 0;

		*node[0x653b393bdb90] = ;;

		*node[0x653b393bdbc0] = if;

		*node[0x653b393bdbf0] = op_no;

		*node[0x653b393bdc20] = ==;

		*node[0x653b393bdc50] = 1;

		*node[0x653b393bdc80] = 0;

		*node[0x653b393bdcb0] = ;;

		*node[0x653b393bdce0] = print;

		*node[0x653b393bdd10] = 4;

		*node[0x653b393bdd40] = else;

		*node[0x653b393bdd70] = op_no;

		*node[0x653b393bdda0] = ;;

		*node[0x653b393bddd0] = print;

		*node[0x653b393bde00] = 2;

		*node[0x653b393bde30] = else;

		*node[0x653b393bde60] = op_no;

		*node[0x653b393bde90] = ;;

		*node[0x653b393bdec0] = =;

		*node[0x653b393bdef0] = 5;

		*node[0x653b393bdf20] = -;

		*node[0x653b393bdf50] = 0;

		*node[0x653b393bdf80] = /;

		*node[0x653b393bdfb0] = 1;

		*node[0x653b393bdfe0] = 0;

		*node[0x653b393be010] = ;;

		*node[0x653b393be040] = print;

		*node[0x653b393be070] = 3;

		*node[0x653b393be0a0] = ;;

		*node[0x653b393be0d0] = print;

		*node[0x653b393be100] = 5;

		*node[0x653b393be130] = ;;

		*node[0x653b393be160] = return;

		*node[0x653b393be190] = 0;

		*node[0x653b393be1c0] = ;;

		*node[0x653b393be1f0] = 3;

		*node[0x653b393be220] = 0;

		*node[0x653b393be250] = 1;

		*node[0x653b393be280] = 2;

		*node[0x653b393be2b0] = ;;

		*node[0x653b393be2e0] = =;

		*node[0x653b393be310] = 3;

		*node[0x653b393be340] = -;

		*node[0x653b393be370] = 0;

		*node[0x653b393be3a0] = 1;

		*node[0x653b393be3d0] = ;;

		*node[0x653b393be400] = =;

		*node[0x653b393be430] = 4;

		*node[0x653b393be460] = 1;

		*node[0x653b393be490] = ;;

		*node[0x653b393be4c0] = =;

		*node[0x653b393be4f0] = 5;

		*node[0x653b393be520] = 2;

		*node[0x653b393be550] = ;;

		*node[0x653b393be580] = if;

		*node[0x653b393be5b0] = op_no;

		*node[0x653b393be5e0] = ==;

		*node[0x653b393be610] = 2;

		*node[0x653b393be640] = 0;

		*node[0x653b393be670] = ;;

		*node[0x653b393be6a0] = =;

		*node[0x653b393be6d0] = 6;

		*node[0x653b393be700] = 0;

		*node[0x653b393be730] = ;;

		*node[0x653b393be760] = =;

		*node[0x653b393be790] = 7;

		*node[0x653b393be7c0] = -;

		*node[0x653b393be7f0] = 0;

		*node[0x653b393be820] = /;

		*node[0x653b393be850] = 1;

		*node[0x653b393be880] = 0;

		*node[0x653b393be8b0] = ;;

		*node[0x653b393be8e0] = print;

		*node[0x653b393be910] = 5;

		*node[0x653b393be940] = ;;

		*node[0x653b393be970] = print;

		*node[0x653b393be9a0] = 6;

		*node[0x653b393be9d0] = 7;

		*node[0x653b393bea00] = else;

		*node[0x653b393bea30] = op_no;

		*node[0x653b393bea60] = ;;

		*node[0x653b393bea90] = =;

		*node[0x653b393beac0] = 8;

		*node[0x653b393beaf0] = -;

		*node[0x653b393beb20] = *;

		*node[0x653b393beb50] = 1;

		*node[0x653b393beb80] = 1;

		*node[0x653b393bebb0] = *;

		*node[0x653b393bebe0] = *;

		*node[0x653b393bec10] = 4;

		*node[0x653b393bec40] = 0;

		*node[0x653b393bec70] = 2;

		*node[0x653b393beca0] = ;;

		*node[0x653b393becd0] = if;

		*node[0x653b393bed00] = op_no;

		*node[0x653b393bed30] = >;

		*node[0x653b393bed60] = 8;

		*node[0x653b393bed90] = 0;

		*node[0x653b393bedc0] = ;;

		*node[0x653b393bedf0] = =;

		*node[0x653b393bee20] = 9;

		*node[0x653b393bee50] = sqrt;

		*node[0x653b393bee80] = 8;

		*node[0x653b393beeb0] = ;;

		*node[0x653b393beee0] = =;

		*node[0x653b393bef10] = 6;

		*node[0x653b393bef40] = /;

		*node[0x653b393bef70] = -;

		*node[0x653b393befa0] = -;

		*node[0x653b393befd0] = 0;

		*node[0x653b393bf000] = 1;

		*node[0x653b393bf030] = 9;

		*node[0x653b393bf060] = *;

		*node[0x653b393bf090] = 2;

		*node[0x653b393bf0c0] = 0;

		*node[0x653b393bf0f0] = ;;

		*node[0x653b393bf120] = =;

		*node[0x653b393bf150] = 7;

		*node[0x653b393bf180] = /;

		*node[0x653b393bf1b0] = +;

		*node[0x653b393bf1e0] = -;

		*node[0x653b393bf210] = 0;

		*node[0x653b393bf240] = 1;

		*node[0x653b393bf270] = 9;

		*node[0x653b393bf2a0] = *;

		*node[0x653b393bf2d0] = 2;

		*node[0x653b393bf300] = 0;

		*node[0x653b393bf330] = ;;

		*node[0x653b393bf360] = print;

		*node[0x653b393bf390] = 5;

		*node[0x653b393bf3c0] = ;;

		*node[0x653b393bf3f0] = print;

		*node[0x653b393bf420] = 6;

		*node[0x653b393bf450] = 7;

		*node[0x653b393bf480] = elseif;

		*node[0x653b393bf4b0] = op_no;

		*node[0x653b393bf4e0] = ==;

		*node[0x653b393bf510] = 8;

		*node[0x653b393bf540] = 0;

		*node[0x653b393bf570] = ;;

		*node[0x653b393bf5a0] = =;

		*node[0x653b393bf5d0] = 10;

		*node[0x653b393bf600] = -;

		*node[0x653b393bf630] = 0;

		*node[0x653b393bf660] = /;

		*node[0x653b393bf690] = 1;

		*node[0x653b393bf6c0] = *;

		*node[0x653b393bf6f0] = 2;

		*node[0x653b393bf720] = 0;

		*node[0x653b393bf750] = ;;

		*node[0x653b393bf780] = print;

		*node[0x653b393bf7b0] = 4;

		*node[0x653b393bf7e0] = ;;

		*node[0x653b393bf810] = print;

		*node[0x653b393bf840] = 10;

		*node[0x653b393bf870] = else;

		*node[0x653b393bf8a0] = op_no;

		*node[0x653b393bf8d0] = ;;

		*node[0x653b393bf900] = print;

		*node[0x653b393bf930] = 3;

		*node[0x653b393bf960] = ;;

		*node[0x653b393bf990] = return;

		*node[0x653b393bf9c0] = 0;

		*node[0x653b393bf9f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffa6b22bd0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5dba0a3da020] = ;;

		*node[0x5dba0a3da050] = 0;

		*node[0x5dba0a3da080] = ;;

		*node[0x5dba0a3da0b0] = input;

		*node[0x5dba0a3da0e0] = 0;

		*node[0x5dba0a3da110] = 1;

		*node[0x5dba0a3da140] = 2;

		*node[0x5dba0a3da170] = ;;

		*node[0x5dba0a3da1d0] = 0;

		*node[0x5dba0a3da200] = 1;

		*node[0x5dba0a3da230] = 2;

		*node[0x5dba0a3da260] = ;;

		*node[0x5dba0a3da290] = 1;

		*node[0x5dba0a3da2c0] = 0;

		*node[0x5dba0a3da2f0] = 1;

		*node[0x5dba0a3da320] = 2;

		*node[0x5dba0a3da350] = ;;

		*node[0x5dba0a3da380] = if;

		*node[0x5dba0a3da3b0] = op_no;

		*node[0x5dba0a3da3e0] = ==;

		*node[0x5dba0a3da410] = 0;

		*node[0x5dba0a3da440] = 0;

		*node[0x5dba0a3da470] = ;;

		*node[0x5dba0a3da4d0] = 1;

		*node[0x5dba0a3da500] = 2;

		*node[0x5dba0a3da530] = else;

		*node[0x5dba0a3da560] = op_no;

		*node[0x5dba0a3da590] = ;;

		*node[0x5dba0a3da5f0] = 0;

		*node[0x5dba0a3da620] = 1;

		*node[0x5dba0a3da650] = 2;

		*node[0x5dba0a3da680] = ;;

		*node[0x5dba0a3da6b0] = return;

		*node[0x5dba0a3da6e0] = 0;

		*node[0x5dba0a3da710] = ;;

		*node[0x5dba0a3da740] = 2;

		*node[0x5dba0a3da770] = 0;

		*node[0x5dba0a3da7a0] = 1;

		*node[0x5dba0a3da7d0] = ;;

		*node[0x5dba0a3da800] = =;

		*node[0x5dba0a3da830] = 2;

		*node[0x5dba0a3da860] = -;

		*node[0x5dba0a3da890] = 0;

		*node[0x5dba0a3da8c0] = 1;

		*node[0x5dba0a3da8f0] = ;;

		*node[0x5dba0a3da920] = =;

		*node[0x5dba0a3da950] = 3;

		*node[0x5dba0a3da980] = 1;

		*node[0x5dba0a3da9b0] = ;;

		*node[0x5dba0a3da9e0] = =;

		*node[0x5dba0a3daa10] = 4;

		*node[0x5dba0a3daa40] = 1000;

		*node[0x5dba0a3daa70] = ;;

		*node[0x5dba0a3daaa0] = if;

		*node[0x5dba0a3daad0] = op_no;

		*node[0x5dba0a3dab00] = ==;

		*node[0x5dba0a3dab30] = 0;

		*node[0x5dba0a3dab60] = 0;

		*node[0x5dba0a3dab90] = ;;

		*node[0x5dba0a3dabc0] = if;

		*node[0x5dba0a3dabf0] = op_no;

		*node[0x5dba0a3dac20] = ==;

		*node[0x5dba0a3dac50] = 1;

		*node[0x5dba0a3dac80] = 0;

		*node[0x5dba0a3dacb0] = ;;

		*node[0x5dba0a3dace0] = print;

		*node[0x5dba0a3dad10] = 4;

		*node[0x5dba0a3dad40] = else;

		*node[0x5dba0a3dad70] = op_no;

		*node[0x5dba0a3dada0] = ;;

		*node[0x5dba0a3dadd0] = print;

		*node[0x5dba0a3dae00] = 2;

		*node[0x5dba0a3dae30] = else;

		*node[0x5dba0a3dae60] = op_no;

		*node[0x5dba0a3dae90] = ;;

		*node[0x5dba0a3daec0] = =;

		*node[0x5dba0a3daef0] = 5;

		*node[0x5dba0a3daf20] = -;

		*node[0x5dba0a3daf50] = 0;

		*node[0x5dba0a3daf80] = /;

		*node[0x5dba0a3dafb0] = 1;

		*node[0x5dba0a3dafe0] = 0;

		*node[0x5dba0a3db010] = ;;

		*node[0x5dba0a3db040] = print;

		*node[0x5dba0a3db070] = 3;

		*node[0x5dba0a3db0a0] = ;;

		*node[0x5dba0a3db0d0] = print;

		*node[0x5dba0a3db100] = 5;

		*node[0x5dba0a3db130] = ;;

		*node[0x5dba0a3db160] = return;

		*node[0x5dba0a3db190] = 0;

		*node[0x5dba0a3db1c0] = ;;

		*node[0x5dba0a3db1f0] = 3;

		*node[0x5dba0a3db220] = 0;

		*node[0x5dba0a3db250] = 1;

		*node[0x5dba0a3db280] = 2;

		*node[0x5dba0a3db2b0] = ;;

		*node[0x5dba0a3db2e0] = =;

		*node[0x5dba0a3db310] = 3;

		*node[0x5dba0a3db340] = -;

		*node[0x5dba0a3db370] = 0;

		*node[0x5dba0a3db3a0] = 1;

		*node[0x5dba0a3db3d0] = ;;

		*node[0x5dba0a3db400] = =;

		*node[0x5dba0a3db430] = 4;

		*node[0x5dba0a3db460] = 1;

		*node[0x5dba0a3db490] = ;;

		*node[0x5dba0a3db4c0] = =;

		*node[0x5dba0a3db4f0] = 5;

		*node[0x5dba0a3db520] = 2;

		*node[0x5dba0a3db550] = ;;

		*node[0x5dba0a3db580] = if;

		*node[0x5dba0a3db5b0] = op_no;

		*node[0x5dba0a3db5e0] = ==;

		*node[0x5dba0a3db610] = 2;

		*node[0x5dba0a3db640] = 0;

		*node[0x5dba0a3db670] = ;;

		*node[0x5dba0a3db6a0] = =;

		*node[0x5dba0a3db6d0] = 6;

		*node[0x5dba0a3db700] = 0;

		*node[0x5dba0a3db730] = ;;

		*node[0x5dba0a3db760] = =;

		*node[0x5dba0a3db790] = 7;

		*node[0x5dba0a3db7c0] = -;

		*node[0x5dba0a3db7f0] = 0;

		*node[0x5dba0a3db820] = /;

		*node[0x5dba0a3db850] = 1;

		*node[0x5dba0a3db880] = 0;

		*node[0x5dba0a3db8b0] = ;;

		*node[0x5dba0a3db8e0] = print;

		*node[0x5dba0a3db910] = 5;

		*node[0x5dba0a3db940] = ;;

		*node[0x5dba0a3db970] = print;

		*node[0x5dba0a3db9a0] = 6;

		*node[0x5dba0a3db9d0] = 7;

		*node[0x5dba0a3dba00] = else;

		*node[0x5dba0a3dba30] = op_no;

		*node[0x5dba0a3dba60] = ;;

		*node[0x5dba0a3dba90] = =;

		*node[0x5dba0a3dbac0] = 8;

		*node[0x5dba0a3dbaf0] = -;

		*node[0x5dba0a3dbb20] = *;

		*node[0x5dba0a3dbb50] = 1;

		*node[0x5dba0a3dbb80] = 1;

		*node[0x5dba0a3dbbb0] = *;

		*node[0x5dba0a3dbbe0] = *;

		*node[0x5dba0a3dbc10] = 4;

		*node[0x5dba0a3dbc40] = 0;

		*node[0x5dba0a3dbc70] = 2;

		*node[0x5dba0a3dbca0] = ;;

		*node[0x5dba0a3dbcd0] = if;

		*node[0x5dba0a3dbd00] = op_no;

		*node[0x5dba0a3dbd30] = >;

		*node[0x5dba0a3dbd60] = 8;

		*node[0x5dba0a3dbd90] = 0;

		*node[0x5dba0a3dbdc0] = ;;

		*node[0x5dba0a3dbdf0] = =;

		*node[0x5dba0a3dbe20] = 9;

		*node[0x5dba0a3dbe50] = sqrt;

		*node[0x5dba0a3dbe80] = 8;

		*node[0x5dba0a3dbeb0] = ;;

		*node[0x5dba0a3dbee0] = =;

		*node[0x5dba0a3dbf10] = 6;

		*node[0x5dba0a3dbf40] = /;

		*node[0x5dba0a3dbf70] = -;

		*node[0x5dba0a3dbfa0] = -;

		*node[0x5dba0a3dbfd0] = 0;

		*node[0x5dba0a3dc000] = 1;

		*node[0x5dba0a3dc030] = 9;

		*node[0x5dba0a3dc060] = *;

		*node[0x5dba0a3dc090] = 2;

		*node[0x5dba0a3dc0c0] = 0;

		*node[0x5dba0a3dc0f0] = ;;

		*node[0x5dba0a3dc120] = =;

		*node[0x5dba0a3dc150] = 7;

		*node[0x5dba0a3dc180] = /;

		*node[0x5dba0a3dc1b0] = +;

		*node[0x5dba0a3dc1e0] = -;

		*node[0x5dba0a3dc210] = 0;

		*node[0x5dba0a3dc240] = 1;

		*node[0x5dba0a3dc270] = 9;

		*node[0x5dba0a3dc2a0] = *;

		*node[0x5dba0a3dc2d0] = 2;

		*node[0x5dba0a3dc300] = 0;

		*node[0x5dba0a3dc330] = ;;

		*node[0x5dba0a3dc360] = print;

		*node[0x5dba0a3dc390] = 5;

		*node[0x5dba0a3dc3c0] = ;;

		*node[0x5dba0a3dc3f0] = print;

		*node[0x5dba0a3dc420] = 6;

		*node[0x5dba0a3dc450] = 7;

		*node[0x5dba0a3dc480] = elseif;

		*node[0x5dba0a3dc4b0] = op_no;

		*node[0x5dba0a3dc4e0] = ==;

		*node[0x5dba0a3dc510] = 8;

		*node[0x5dba0a3dc540] = 0;

		*node[0x5dba0a3dc570] = ;;

		*node[0x5dba0a3dc5a0] = =;

		*node[0x5dba0a3dc5d0] = 10;

		*node[0x5dba0a3dc600] = -;

		*node[0x5dba0a3dc630] = 0;

		*node[0x5dba0a3dc660] = /;

		*node[0x5dba0a3dc690] = 1;

		*node[0x5dba0a3dc6c0] = *;

		*node[0x5dba0a3dc6f0] = 2;

		*node[0x5dba0a3dc720] = 0;

		*node[0x5dba0a3dc750] = ;;

		*node[0x5dba0a3dc780] = print;

		*node[0x5dba0a3dc7b0] = 4;

		*node[0x5dba0a3dc7e0] = ;;

		*node[0x5dba0a3dc810] = print;

		*node[0x5dba0a3dc840] = 10;

		*node[0x5dba0a3dc870] = else;

		*node[0x5dba0a3dc8a0] = op_no;

		*node[0x5dba0a3dc8d0] = ;;

		*node[0x5dba0a3dc900] = print;

		*node[0x5dba0a3dc930] = 3;

		*node[0x5dba0a3dc960] = ;;

		*node[0x5dba0a3dc990] = return;

		*node[0x5dba0a3dc9c0] = 0;

		*node[0x5dba0a3dc9f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe48cb3360] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x589c3b4fe020] = ;;

		*node[0x589c3b4fe050] = 0;

		*node[0x589c3b4fe080] = ;;

		*node[0x589c3b4fe0b0] = input;

		*node[0x589c3b4fe0e0] = 0;

		*node[0x589c3b4fe110] = 1;

		*node[0x589c3b4fe140] = 2;

		*node[0x589c3b4fe170] = ;;

		*node[0x589c3b4fe1d0] = 0;

		*node[0x589c3b4fe200] = 1;

		*node[0x589c3b4fe230] = 2;

		*node[0x589c3b4fe260] = ;;

		*node[0x589c3b4fe290] = 1;

		*node[0x589c3b4fe2c0] = 0;

		*node[0x589c3b4fe2f0] = 1;

		*node[0x589c3b4fe320] = 2;

		*node[0x589c3b4fe350] = ;;

		*node[0x589c3b4fe380] = if;

		*node[0x589c3b4fe3b0] = op_no;

		*node[0x589c3b4fe3e0] = ==;

		*node[0x589c3b4fe410] = 0;

		*node[0x589c3b4fe440] = 0;

		*node[0x589c3b4fe470] = ;;

		*node[0x589c3b4fe4d0] = 1;

		*node[0x589c3b4fe500] = 2;

		*node[0x589c3b4fe530] = else;

		*node[0x589c3b4fe560] = op_no;

		*node[0x589c3b4fe590] = ;;

		*node[0x589c3b4fe5f0] = 0;

		*node[0x589c3b4fe620] = 1;

		*node[0x589c3b4fe650] = 2;

		*node[0x589c3b4fe680] = ;;

		*node[0x589c3b4fe6b0] = return;

		*node[0x589c3b4fe6e0] = 0;

		*node[0x589c3b4fe710] = ;;

		*node[0x589c3b4fe740] = 2;

		*node[0x589c3b4fe770] = 0;

		*node[0x589c3b4fe7a0] = 1;

		*node[0x589c3b4fe7d0] = ;;

		*node[0x589c3b4fe800] = =;

		*node[0x589c3b4fe830] = 2;

		*node[0x589c3b4fe860] = -;

		*node[0x589c3b4fe890] = 0;

		*node[0x589c3b4fe8c0] = 1;

		*node[0x589c3b4fe8f0] = ;;

		*node[0x589c3b4fe920] = =;

		*node[0x589c3b4fe950] = 3;

		*node[0x589c3b4fe980] = 1;

		*node[0x589c3b4fe9b0] = ;;

		*node[0x589c3b4fe9e0] = =;

		*node[0x589c3b4fea10] = 4;

		*node[0x589c3b4fea40] = 1000;

		*node[0x589c3b4fea70] = ;;

		*node[0x589c3b4feaa0] = if;

		*node[0x589c3b4fead0] = op_no;

		*node[0x589c3b4feb00] = ==;

		*node[0x589c3b4feb30] = 0;

		*node[0x589c3b4feb60] = 0;

		*node[0x589c3b4feb90] = ;;

		*node[0x589c3b4febc0] = if;

		*node[0x589c3b4febf0] = op_no;

		*node[0x589c3b4fec20] = ==;

		*node[0x589c3b4fec50] = 1;

		*node[0x589c3b4fec80] = 0;

		*node[0x589c3b4fecb0] = ;;

		*node[0x589c3b4fece0] = print;

		*node[0x589c3b4fed10] = 4;

		*node[0x589c3b4fed40] = else;

		*node[0x589c3b4fed70] = op_no;

		*node[0x589c3b4feda0] = ;;

		*node[0x589c3b4fedd0] = print;

		*node[0x589c3b4fee00] = 2;

		*node[0x589c3b4fee30] = else;

		*node[0x589c3b4fee60] = op_no;

		*node[0x589c3b4fee90] = ;;

		*node[0x589c3b4feec0] = =;

		*node[0x589c3b4feef0] = 5;

		*node[0x589c3b4fef20] = -;

		*node[0x589c3b4fef50] = 0;

		*node[0x589c3b4fef80] = /;

		*node[0x589c3b4fefb0] = 1;

		*node[0x589c3b4fefe0] = 0;

		*node[0x589c3b4ff010] = ;;

		*node[0x589c3b4ff040] = print;

		*node[0x589c3b4ff070] = 3;

		*node[0x589c3b4ff0a0] = ;;

		*node[0x589c3b4ff0d0] = print;

		*node[0x589c3b4ff100] = 5;

		*node[0x589c3b4ff130] = ;;

		*node[0x589c3b4ff160] = return;

		*node[0x589c3b4ff190] = 0;

		*node[0x589c3b4ff1c0] = ;;

		*node[0x589c3b4ff1f0] = 3;

		*node[0x589c3b4ff220] = 0;

		*node[0x589c3b4ff250] = 1;

		*node[0x589c3b4ff280] = 2;

		*node[0x589c3b4ff2b0] = ;;

		*node[0x589c3b4ff2e0] = =;

		*node[0x589c3b4ff310] = 3;

		*node[0x589c3b4ff340] = -;

		*node[0x589c3b4ff370] = 0;

		*node[0x589c3b4ff3a0] = 1;

		*node[0x589c3b4ff3d0] = ;;

		*node[0x589c3b4ff400] = =;

		*node[0x589c3b4ff430] = 4;

		*node[0x589c3b4ff460] = 1;

		*node[0x589c3b4ff490] = ;;

		*node[0x589c3b4ff4c0] = =;

		*node[0x589c3b4ff4f0] = 5;

		*node[0x589c3b4ff520] = 2;

		*node[0x589c3b4ff550] = ;;

		*node[0x589c3b4ff580] = if;

		*node[0x589c3b4ff5b0] = op_no;

		*node[0x589c3b4ff5e0] = ==;

		*node[0x589c3b4ff610] = 2;

		*node[0x589c3b4ff640] = 0;

		*node[0x589c3b4ff670] = ;;

		*node[0x589c3b4ff6a0] = =;

		*node[0x589c3b4ff6d0] = 6;

		*node[0x589c3b4ff700] = 0;

		*node[0x589c3b4ff730] = ;;

		*node[0x589c3b4ff760] = =;

		*node[0x589c3b4ff790] = 7;

		*node[0x589c3b4ff7c0] = -;

		*node[0x589c3b4ff7f0] = 0;

		*node[0x589c3b4ff820] = /;

		*node[0x589c3b4ff850] = 1;

		*node[0x589c3b4ff880] = 0;

		*node[0x589c3b4ff8b0] = ;;

		*node[0x589c3b4ff8e0] = print;

		*node[0x589c3b4ff910] = 5;

		*node[0x589c3b4ff940] = ;;

		*node[0x589c3b4ff970] = print;

		*node[0x589c3b4ff9a0] = 6;

		*node[0x589c3b4ff9d0] = 7;

		*node[0x589c3b4ffa00] = else;

		*node[0x589c3b4ffa30] = op_no;

		*node[0x589c3b4ffa60] = ;;

		*node[0x589c3b4ffa90] = =;

		*node[0x589c3b4ffac0] = 8;

		*node[0x589c3b4ffaf0] = -;

		*node[0x589c3b4ffb20] = *;

		*node[0x589c3b4ffb50] = 1;

		*node[0x589c3b4ffb80] = 1;

		*node[0x589c3b4ffbb0] = *;

		*node[0x589c3b4ffbe0] = *;

		*node[0x589c3b4ffc10] = 4;

		*node[0x589c3b4ffc40] = 0;

		*node[0x589c3b4ffc70] = 2;

		*node[0x589c3b4ffca0] = ;;

		*node[0x589c3b4ffcd0] = if;

		*node[0x589c3b4ffd00] = op_no;

		*node[0x589c3b4ffd30] = >;

		*node[0x589c3b4ffd60] = 8;

		*node[0x589c3b4ffd90] = 0;

		*node[0x589c3b4ffdc0] = ;;

		*node[0x589c3b4ffdf0] = =;

		*node[0x589c3b4ffe20] = 9;

		*node[0x589c3b4ffe50] = sqrt;

		*node[0x589c3b4ffe80] = 8;

		*node[0x589c3b4ffeb0] = ;;

		*node[0x589c3b4ffee0] = =;

		*node[0x589c3b4fff10] = 6;

		*node[0x589c3b4fff40] = /;

		*node[0x589c3b4fff70] = -;

		*node[0x589c3b4fffa0] = -;

		*node[0x589c3b4fffd0] = 0;

		*node[0x589c3b500000] = 1;

		*node[0x589c3b500030] = 9;

		*node[0x589c3b500060] = *;

		*node[0x589c3b500090] = 2;

		*node[0x589c3b5000c0] = 0;

		*node[0x589c3b5000f0] = ;;

		*node[0x589c3b500120] = =;

		*node[0x589c3b500150] = 7;

		*node[0x589c3b500180] = /;

		*node[0x589c3b5001b0] = +;

		*node[0x589c3b5001e0] = -;

		*node[0x589c3b500210] = 0;

		*node[0x589c3b500240] = 1;

		*node[0x589c3b500270] = 9;

		*node[0x589c3b5002a0] = *;

		*node[0x589c3b5002d0] = 2;

		*node[0x589c3b500300] = 0;

		*node[0x589c3b500330] = ;;

		*node[0x589c3b500360] = print;

		*node[0x589c3b500390] = 5;

		*node[0x589c3b5003c0] = ;;

		*node[0x589c3b5003f0] = print;

		*node[0x589c3b500420] = 6;

		*node[0x589c3b500450] = 7;

		*node[0x589c3b500480] = elseif;

		*node[0x589c3b5004b0] = op_no;

		*node[0x589c3b5004e0] = ==;

		*node[0x589c3b500510] = 8;

		*node[0x589c3b500540] = 0;

		*node[0x589c3b500570] = ;;

		*node[0x589c3b5005a0] = =;

		*node[0x589c3b5005d0] = 10;

		*node[0x589c3b500600] = -;

		*node[0x589c3b500630] = 0;

		*node[0x589c3b500660] = /;

		*node[0x589c3b500690] = 1;

		*node[0x589c3b5006c0] = *;

		*node[0x589c3b5006f0] = 2;

		*node[0x589c3b500720] = 0;

		*node[0x589c3b500750] = ;;

		*node[0x589c3b500780] = print;

		*node[0x589c3b5007b0] = 4;

		*node[0x589c3b5007e0] = ;;

		*node[0x589c3b500810] = print;

		*node[0x589c3b500840] = 10;

		*node[0x589c3b500870] = else;

		*node[0x589c3b5008a0] = op_no;

		*node[0x589c3b5008d0] = ;;

		*node[0x589c3b500900] = print;

		*node[0x589c3b500930] = 3;

		*node[0x589c3b500960] = ;;

		*node[0x589c3b500990] = return;

		*node[0x589c3b5009c0] = 0;

		*node[0x589c3b5009f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe37fbde60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5ae16953d020] = ;;

		*node[0x5ae16953d050] = 0;

		*node[0x5ae16953d080] = ;;

		*node[0x5ae16953d0b0] = input;

		*node[0x5ae16953d0e0] = 0;

		*node[0x5ae16953d110] = 1;

		*node[0x5ae16953d140] = 2;

		*node[0x5ae16953d170] = ;;

		*node[0x5ae16953d1d0] = 0;

		*node[0x5ae16953d200] = 1;

		*node[0x5ae16953d230] = 2;

		*node[0x5ae16953d260] = ;;

		*node[0x5ae16953d290] = 1;

		*node[0x5ae16953d2c0] = 0;

		*node[0x5ae16953d2f0] = 1;

		*node[0x5ae16953d320] = 2;

		*node[0x5ae16953d350] = ;;

		*node[0x5ae16953d380] = if;

		*node[0x5ae16953d3b0] = op_no;

		*node[0x5ae16953d3e0] = ==;

		*node[0x5ae16953d410] = 0;

		*node[0x5ae16953d440] = 0;

		*node[0x5ae16953d470] = ;;

		*node[0x5ae16953d4d0] = 1;

		*node[0x5ae16953d500] = 2;

		*node[0x5ae16953d530] = else;

		*node[0x5ae16953d560] = op_no;

		*node[0x5ae16953d590] = ;;

		*node[0x5ae16953d5f0] = 0;

		*node[0x5ae16953d620] = 1;

		*node[0x5ae16953d650] = 2;

		*node[0x5ae16953d680] = ;;

		*node[0x5ae16953d6b0] = return;

		*node[0x5ae16953d6e0] = 0;

		*node[0x5ae16953d710] = ;;

		*node[0x5ae16953d740] = 2;

		*node[0x5ae16953d770] = 0;

		*node[0x5ae16953d7a0] = 1;

		*node[0x5ae16953d7d0] = ;;

		*node[0x5ae16953d800] = =;

		*node[0x5ae16953d830] = 2;

		*node[0x5ae16953d860] = -;

		*node[0x5ae16953d890] = 0;

		*node[0x5ae16953d8c0] = 1;

		*node[0x5ae16953d8f0] = ;;

		*node[0x5ae16953d920] = =;

		*node[0x5ae16953d950] = 3;

		*node[0x5ae16953d980] = 1;

		*node[0x5ae16953d9b0] = ;;

		*node[0x5ae16953d9e0] = =;

		*node[0x5ae16953da10] = 4;

		*node[0x5ae16953da40] = 1000;

		*node[0x5ae16953da70] = ;;

		*node[0x5ae16953daa0] = if;

		*node[0x5ae16953dad0] = op_no;

		*node[0x5ae16953db00] = ==;

		*node[0x5ae16953db30] = 0;

		*node[0x5ae16953db60] = 0;

		*node[0x5ae16953db90] = ;;

		*node[0x5ae16953dbc0] = if;

		*node[0x5ae16953dbf0] = op_no;

		*node[0x5ae16953dc20] = ==;

		*node[0x5ae16953dc50] = 1;

		*node[0x5ae16953dc80] = 0;

		*node[0x5ae16953dcb0] = ;;

		*node[0x5ae16953dce0] = print;

		*node[0x5ae16953dd10] = 4;

		*node[0x5ae16953dd40] = else;

		*node[0x5ae16953dd70] = op_no;

		*node[0x5ae16953dda0] = ;;

		*node[0x5ae16953ddd0] = print;

		*node[0x5ae16953de00] = 2;

		*node[0x5ae16953de30] = else;

		*node[0x5ae16953de60] = op_no;

		*node[0x5ae16953de90] = ;;

		*node[0x5ae16953dec0] = =;

		*node[0x5ae16953def0] = 5;

		*node[0x5ae16953df20] = -;

		*node[0x5ae16953df50] = 0;

		*node[0x5ae16953df80] = /;

		*node[0x5ae16953dfb0] = 1;

		*node[0x5ae16953dfe0] = 0;

		*node[0x5ae16953e010] = ;;

		*node[0x5ae16953e040] = print;

		*node[0x5ae16953e070] = 3;

		*node[0x5ae16953e0a0] = ;;

		*node[0x5ae16953e0d0] = print;

		*node[0x5ae16953e100] = 5;

		*node[0x5ae16953e130] = ;;

		*node[0x5ae16953e160] = return;

		*node[0x5ae16953e190] = 0;

		*node[0x5ae16953e1c0] = ;;

		*node[0x5ae16953e1f0] = 3;

		*node[0x5ae16953e220] = 0;

		*node[0x5ae16953e250] = 1;

		*node[0x5ae16953e280] = 2;

		*node[0x5ae16953e2b0] = ;;

		*node[0x5ae16953e2e0] = =;

		*node[0x5ae16953e310] = 3;

		*node[0x5ae16953e340] = -;

		*node[0x5ae16953e370] = 0;

		*node[0x5ae16953e3a0] = 1;

		*node[0x5ae16953e3d0] = ;;

		*node[0x5ae16953e400] = =;

		*node[0x5ae16953e430] = 4;

		*node[0x5ae16953e460] = 1;

		*node[0x5ae16953e490] = ;;

		*node[0x5ae16953e4c0] = =;

		*node[0x5ae16953e4f0] = 5;

		*node[0x5ae16953e520] = 2;

		*node[0x5ae16953e550] = ;;

		*node[0x5ae16953e580] = if;

		*node[0x5ae16953e5b0] = op_no;

		*node[0x5ae16953e5e0] = ==;

		*node[0x5ae16953e610] = 2;

		*node[0x5ae16953e640] = 0;

		*node[0x5ae16953e670] = ;;

		*node[0x5ae16953e6a0] = =;

		*node[0x5ae16953e6d0] = 6;

		*node[0x5ae16953e700] = 0;

		*node[0x5ae16953e730] = ;;

		*node[0x5ae16953e760] = =;

		*node[0x5ae16953e790] = 7;

		*node[0x5ae16953e7c0] = -;

		*node[0x5ae16953e7f0] = 0;

		*node[0x5ae16953e820] = /;

		*node[0x5ae16953e850] = 1;

		*node[0x5ae16953e880] = 0;

		*node[0x5ae16953e8b0] = ;;

		*node[0x5ae16953e8e0] = print;

		*node[0x5ae16953e910] = 5;

		*node[0x5ae16953e940] = ;;

		*node[0x5ae16953e970] = print;

		*node[0x5ae16953e9a0] = 6;

		*node[0x5ae16953e9d0] = 7;

		*node[0x5ae16953ea00] = else;

		*node[0x5ae16953ea30] = op_no;

		*node[0x5ae16953ea60] = ;;

		*node[0x5ae16953ea90] = =;

		*node[0x5ae16953eac0] = 8;

		*node[0x5ae16953eaf0] = -;

		*node[0x5ae16953eb20] = *;

		*node[0x5ae16953eb50] = 1;

		*node[0x5ae16953eb80] = 1;

		*node[0x5ae16953ebb0] = *;

		*node[0x5ae16953ebe0] = *;

		*node[0x5ae16953ec10] = 4;

		*node[0x5ae16953ec40] = 0;

		*node[0x5ae16953ec70] = 2;

		*node[0x5ae16953eca0] = ;;

		*node[0x5ae16953ecd0] = if;

		*node[0x5ae16953ed00] = op_no;

		*node[0x5ae16953ed30] = >;

		*node[0x5ae16953ed60] = 8;

		*node[0x5ae16953ed90] = 0;

		*node[0x5ae16953edc0] = ;;

		*node[0x5ae16953edf0] = =;

		*node[0x5ae16953ee20] = 9;

		*node[0x5ae16953ee50] = sqrt;

		*node[0x5ae16953ee80] = 8;

		*node[0x5ae16953eeb0] = ;;

		*node[0x5ae16953eee0] = =;

		*node[0x5ae16953ef10] = 6;

		*node[0x5ae16953ef40] = /;

		*node[0x5ae16953ef70] = -;

		*node[0x5ae16953efa0] = -;

		*node[0x5ae16953efd0] = 0;

		*node[0x5ae16953f000] = 1;

		*node[0x5ae16953f030] = 9;

		*node[0x5ae16953f060] = *;

		*node[0x5ae16953f090] = 2;

		*node[0x5ae16953f0c0] = 0;

		*node[0x5ae16953f0f0] = ;;

		*node[0x5ae16953f120] = =;

		*node[0x5ae16953f150] = 7;

		*node[0x5ae16953f180] = /;

		*node[0x5ae16953f1b0] = +;

		*node[0x5ae16953f1e0] = -;

		*node[0x5ae16953f210] = 0;

		*node[0x5ae16953f240] = 1;

		*node[0x5ae16953f270] = 9;

		*node[0x5ae16953f2a0] = *;

		*node[0x5ae16953f2d0] = 2;

		*node[0x5ae16953f300] = 0;

		*node[0x5ae16953f330] = ;;

		*node[0x5ae16953f360] = print;

		*node[0x5ae16953f390] = 5;

		*node[0x5ae16953f3c0] = ;;

		*node[0x5ae16953f3f0] = print;

		*node[0x5ae16953f420] = 6;

		*node[0x5ae16953f450] = 7;

		*node[0x5ae16953f480] = elseif;

		*node[0x5ae16953f4b0] = op_no;

		*node[0x5ae16953f4e0] = ==;

		*node[0x5ae16953f510] = 8;

		*node[0x5ae16953f540] = 0;

		*node[0x5ae16953f570] = ;;

		*node[0x5ae16953f5a0] = =;

		*node[0x5ae16953f5d0] = 10;

		*node[0x5ae16953f600] = -;

		*node[0x5ae16953f630] = 0;

		*node[0x5ae16953f660] = /;

		*node[0x5ae16953f690] = 1;

		*node[0x5ae16953f6c0] = *;

		*node[0x5ae16953f6f0] = 2;

		*node[0x5ae16953f720] = 0;

		*node[0x5ae16953f750] = ;;

		*node[0x5ae16953f780] = print;

		*node[0x5ae16953f7b0] = 4;

		*node[0x5ae16953f7e0] = ;;

		*node[0x5ae16953f810] = print;

		*node[0x5ae16953f840] = 10;

		*node[0x5ae16953f870] = else;

		*node[0x5ae16953f8a0] = op_no;

		*node[0x5ae16953f8d0] = ;;

		*node[0x5ae16953f900] = print;

		*node[0x5ae16953f930] = 3;

		*node[0x5ae16953f960] = ;;

		*node[0x5ae16953f990] = return;

		*node[0x5ae16953f9c0] = 0;

		*node[0x5ae16953f9f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe1cc49ea0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5d1347baa020] = ;;

		*node[0x5d1347baa050] = 0;

		*node[0x5d1347baa080] = ;;

		*node[0x5d1347baa0b0] = input;

		*node[0x5d1347baa0e0] = 0;

		*node[0x5d1347baa110] = 1;

		*node[0x5d1347baa140] = 2;

		*node[0x5d1347baa170] = ;;

		*node[0x5d1347baa1d0] = 0;

		*node[0x5d1347baa200] = 1;

		*node[0x5d1347baa230] = 2;

		*node[0x5d1347baa260] = ;;

		*node[0x5d1347baa290] = 1;

		*node[0x5d1347baa2c0] = 0;

		*node[0x5d1347baa2f0] = 1;

		*node[0x5d1347baa320] = 2;

		*node[0x5d1347baa350] = ;;

		*node[0x5d1347baa380] = if;

		*node[0x5d1347baa3b0] = op_no;

		*node[0x5d1347baa3e0] = ==;

		*node[0x5d1347baa410] = 0;

		*node[0x5d1347baa440] = 0;

		*node[0x5d1347baa470] = ;;

		*node[0x5d1347baa4d0] = 1;

		*node[0x5d1347baa500] = 2;

		*node[0x5d1347baa530] = else;

		*node[0x5d1347baa560] = op_no;

		*node[0x5d1347baa590] = ;;

		*node[0x5d1347baa5f0] = 0;

		*node[0x5d1347baa620] = 1;

		*node[0x5d1347baa650] = 2;

		*node[0x5d1347baa680] = ;;

		*node[0x5d1347baa6b0] = return;

		*node[0x5d1347baa6e0] = 0;

		*node[0x5d1347baa710] = ;;

		*node[0x5d1347baa740] = 2;

		*node[0x5d1347baa770] = 0;

		*node[0x5d1347baa7a0] = 1;

		*node[0x5d1347baa7d0] = ;;

		*node[0x5d1347baa800] = =;

		*node[0x5d1347baa830] = 2;

		*node[0x5d1347baa860] = -;

		*node[0x5d1347baa890] = 0;

		*node[0x5d1347baa8c0] = 1;

		*node[0x5d1347baa8f0] = ;;

		*node[0x5d1347baa920] = =;

		*node[0x5d1347baa950] = 3;

		*node[0x5d1347baa980] = 1;

		*node[0x5d1347baa9b0] = ;;

		*node[0x5d1347baa9e0] = =;

		*node[0x5d1347baaa10] = 4;

		*node[0x5d1347baaa40] = 1000;

		*node[0x5d1347baaa70] = ;;

		*node[0x5d1347baaaa0] = if;

		*node[0x5d1347baaad0] = op_no;

		*node[0x5d1347baab00] = ==;

		*node[0x5d1347baab30] = 0;

		*node[0x5d1347baab60] = 0;

		*node[0x5d1347baab90] = ;;

		*node[0x5d1347baabc0] = if;

		*node[0x5d1347baabf0] = op_no;

		*node[0x5d1347baac20] = ==;

		*node[0x5d1347baac50] = 1;

		*node[0x5d1347baac80] = 0;

		*node[0x5d1347baacb0] = ;;

		*node[0x5d1347baace0] = print;

		*node[0x5d1347baad10] = 4;

		*node[0x5d1347baad40] = else;

		*node[0x5d1347baad70] = op_no;

		*node[0x5d1347baada0] = ;;

		*node[0x5d1347baadd0] = print;

		*node[0x5d1347baae00] = 2;

		*node[0x5d1347baae30] = else;

		*node[0x5d1347baae60] = op_no;

		*node[0x5d1347baae90] = ;;

		*node[0x5d1347baaec0] = =;

		*node[0x5d1347baaef0] = 5;

		*node[0x5d1347baaf20] = -;

		*node[0x5d1347baaf50] = 0;

		*node[0x5d1347baaf80] = /;

		*node[0x5d1347baafb0] = 1;

		*node[0x5d1347baafe0] = 0;

		*node[0x5d1347bab010] = ;;

		*node[0x5d1347bab040] = print;

		*node[0x5d1347bab070] = 3;

		*node[0x5d1347bab0a0] = ;;

		*node[0x5d1347bab0d0] = print;

		*node[0x5d1347bab100] = 5;

		*node[0x5d1347bab130] = ;;

		*node[0x5d1347bab160] = return;

		*node[0x5d1347bab190] = 0;

		*node[0x5d1347bab1c0] = ;;

		*node[0x5d1347bab1f0] = 3;

		*node[0x5d1347bab220] = 0;

		*node[0x5d1347bab250] = 1;

		*node[0x5d1347bab280] = 2;

		*node[0x5d1347bab2b0] = ;;

		*node[0x5d1347bab2e0] = =;

		*node[0x5d1347bab310] = 3;

		*node[0x5d1347bab340] = -;

		*node[0x5d1347bab370] = 0;

		*node[0x5d1347bab3a0] = 1;

		*node[0x5d1347bab3d0] = ;;

		*node[0x5d1347bab400] = =;

		*node[0x5d1347bab430] = 4;

		*node[0x5d1347bab460] = 1;

		*node[0x5d1347bab490] = ;;

		*node[0x5d1347bab4c0] = =;

		*node[0x5d1347bab4f0] = 5;

		*node[0x5d1347bab520] = 2;

		*node[0x5d1347bab550] = ;;

		*node[0x5d1347bab580] = if;

		*node[0x5d1347bab5b0] = op_no;

		*node[0x5d1347bab5e0] = ==;

		*node[0x5d1347bab610] = 2;

		*node[0x5d1347bab640] = 0;

		*node[0x5d1347bab670] = ;;

		*node[0x5d1347bab6a0] = =;

		*node[0x5d1347bab6d0] = 6;

		*node[0x5d1347bab700] = 0;

		*node[0x5d1347bab730] = ;;

		*node[0x5d1347bab760] = =;

		*node[0x5d1347bab790] = 7;

		*node[0x5d1347bab7c0] = -;

		*node[0x5d1347bab7f0] = 0;

		*node[0x5d1347bab820] = /;

		*node[0x5d1347bab850] = 1;

		*node[0x5d1347bab880] = 0;

		*node[0x5d1347bab8b0] = ;;

		*node[0x5d1347bab8e0] = print;

		*node[0x5d1347bab910] = 5;

		*node[0x5d1347bab940] = ;;

		*node[0x5d1347bab970] = print;

		*node[0x5d1347bab9a0] = 6;

		*node[0x5d1347bab9d0] = 7;

		*node[0x5d1347baba00] = else;

		*node[0x5d1347baba30] = op_no;

		*node[0x5d1347baba60] = ;;

		*node[0x5d1347baba90] = =;

		*node[0x5d1347babac0] = 8;

		*node[0x5d1347babaf0] = -;

		*node[0x5d1347babb20] = *;

		*node[0x5d1347babb50] = 1;

		*node[0x5d1347babb80] = 1;

		*node[0x5d1347babbb0] = *;

		*node[0x5d1347babbe0] = *;

		*node[0x5d1347babc10] = 4;

		*node[0x5d1347babc40] = 0;

		*node[0x5d1347babc70] = 2;

		*node[0x5d1347babca0] = ;;

		*node[0x5d1347babcd0] = if;

		*node[0x5d1347babd00] = op_no;

		*node[0x5d1347babd30] = >;

		*node[0x5d1347babd60] = 8;

		*node[0x5d1347babd90] = 0;

		*node[0x5d1347babdc0] = ;;

		*node[0x5d1347babdf0] = =;

		*node[0x5d1347babe20] = 9;

		*node[0x5d1347babe50] = sqrt;

		*node[0x5d1347babe80] = 8;

		*node[0x5d1347babeb0] = ;;

		*node[0x5d1347babee0] = =;

		*node[0x5d1347babf10] = 6;

		*node[0x5d1347babf40] = /;

		*node[0x5d1347babf70] = -;

		*node[0x5d1347babfa0] = -;

		*node[0x5d1347babfd0] = 0;

		*node[0x5d1347bac000] = 1;

		*node[0x5d1347bac030] = 9;

		*node[0x5d1347bac060] = *;

		*node[0x5d1347bac090] = 2;

		*node[0x5d1347bac0c0] = 0;

		*node[0x5d1347bac0f0] = ;;

		*node[0x5d1347bac120] = =;

		*node[0x5d1347bac150] = 7;

		*node[0x5d1347bac180] = /;

		*node[0x5d1347bac1b0] = +;

		*node[0x5d1347bac1e0] = -;

		*node[0x5d1347bac210] = 0;

		*node[0x5d1347bac240] = 1;

		*node[0x5d1347bac270] = 9;

		*node[0x5d1347bac2a0] = *;

		*node[0x5d1347bac2d0] = 2;

		*node[0x5d1347bac300] = 0;

		*node[0x5d1347bac330] = ;;

		*node[0x5d1347bac360] = print;

		*node[0x5d1347bac390] = 5;

		*node[0x5d1347bac3c0] = ;;

		*node[0x5d1347bac3f0] = print;

		*node[0x5d1347bac420] = 6;

		*node[0x5d1347bac450] = 7;

		*node[0x5d1347bac480] = elseif;

		*node[0x5d1347bac4b0] = op_no;

		*node[0x5d1347bac4e0] = ==;

		*node[0x5d1347bac510] = 8;

		*node[0x5d1347bac540] = 0;

		*node[0x5d1347bac570] = ;;

		*node[0x5d1347bac5a0] = =;

		*node[0x5d1347bac5d0] = 10;

		*node[0x5d1347bac600] = -;

		*node[0x5d1347bac630] = 0;

		*node[0x5d1347bac660] = /;

		*node[0x5d1347bac690] = 1;

		*node[0x5d1347bac6c0] = *;

		*node[0x5d1347bac6f0] = 2;

		*node[0x5d1347bac720] = 0;

		*node[0x5d1347bac750] = ;;

		*node[0x5d1347bac780] = print;

		*node[0x5d1347bac7b0] = 4;

		*node[0x5d1347bac7e0] = ;;

		*node[0x5d1347bac810] = print;

		*node[0x5d1347bac840] = 10;

		*node[0x5d1347bac870] = else;

		*node[0x5d1347bac8a0] = op_no;

		*node[0x5d1347bac8d0] = ;;

		*node[0x5d1347bac900] = print;

		*node[0x5d1347bac930] = 3;

		*node[0x5d1347bac960] = ;;

		*node[0x5d1347bac990] = return;

		*node[0x5d1347bac9c0] = 0;

		*node[0x5d1347bac9f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe319d6460] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5b93db34b6d0] = ;;

		*node[0x5b93db34b750] = 0;

		*node[0x5b93db34b780] = ;;

		*node[0x5b93db34b7b0] = input;

		*node[0x5b93db34b7e0] = 0;

		*node[0x5b93db34b810] = 1;

		*node[0x5b93db34b840] = 2;

		*node[0x5b93db34b8a0] = ;;

		*node[0x5b93db34b900] = 0;

		*node[0x5b93db34b930] = 1;

		*node[0x5b93db34b960] = 2;

		*node[0x5b93db34b990] = ;;

		*node[0x5b93db34ba10] = 1;

		*node[0x5b93db34ba40] = 0;

		*node[0x5b93db34ba70] = 1;

		*node[0x5b93db34baa0] = 2;

		*node[0x5b93db34bb00] = ;;

		*node[0x5b93db34bb30] = if;

		*node[0x5b93db34bb60] = op_no;

		*node[0x5b93db34bbf0] = ==;

		*node[0x5b93db34bb90] = 0;

		*node[0x5b93db34bbc0] = 0;

		*node[0x5b93db34bc20] = ;;

		*node[0x5b93db34bc80] = 1;

		*node[0x5b93db34bcb0] = 2;

		*node[0x5b93db34bce0] = else;

		*node[0x5b93db34bd10] = op_no;

		*node[0x5b93db34bd40] = ;;

		*node[0x5b93db34bdf0] = 0;

		*node[0x5b93db34be20] = 1;

		*node[0x5b93db34be50] = 2;

		*node[0x5b93db34be80] = ;;

		*node[0x5b93db34beb0] = return;

		*node[0x5b93db34bee0] = 0;

		*node[0x5b93db34bf10] = ;;

		*node[0x5b93db34bf90] = 2;

		*node[0x5b93db34bff0] = 0;

		*node[0x5b93db34c020] = 1;

		*node[0x5b93db34c050] = ;;

		*node[0x5b93db34c170] = =;

		*node[0x5b93db34c080] = 2;

		*node[0x5b93db34c140] = -;

		*node[0x5b93db34c0e0] = 0;

		*node[0x5b93db34c110] = 1;

		*node[0x5b93db34c1a0] = ;;

		*node[0x5b93db34c230] = =;

		*node[0x5b93db34c1d0] = 3;

		*node[0x5b93db34c200] = 1;

		*node[0x5b93db34c260] = ;;

		*node[0x5b93db34c340] = =;

		*node[0x5b93db34c290] = 4;

		*node[0x5b93db34c310] = 1000;

		*node[0x5b93db34c370] = ;;

		*node[0x5b93db34c3a0] = if;

		*node[0x5b93db34c3d0] = op_no;

		*node[0x5b93db34c460] = ==;

		*node[0x5b93db34c400] = 0;

		*node[0x5b93db34c430] = 0;

		*node[0x5b93db34c490] = ;;

		*node[0x5b93db34c4c0] = if;

		*node[0x5b93db34c4f0] = op_no;

		*node[0x5b93db34c580] = ==;

		*node[0x5b93db34c520] = 1;

		*node[0x5b93db34c550] = 0;

		*node[0x5b93db34c5b0] = ;;

		*node[0x5b93db34c5e0] = print;

		*node[0x5b93db34c610] = 4;

		*node[0x5b93db34c640] = else;

		*node[0x5b93db34c670] = op_no;

		*node[0x5b93db34c6a0] = ;;

		*node[0x5b93db34c6d0] = print;

		*node[0x5b93db34c700] = 2;

		*node[0x5b93db34c730] = else;

		*node[0x5b93db34c760] = op_no;

		*node[0x5b93db34c790] = ;;

		*node[0x5b93db34c8e0] = =;

		*node[0x5b93db34c7c0] = 5;

		*node[0x5b93db34c8b0] = -;

		*node[0x5b93db34c7f0] = 0;

		*node[0x5b93db34c880] = /;

		*node[0x5b93db34c820] = 1;

		*node[0x5b93db34c850] = 0;

		*node[0x5b93db34c910] = ;;

		*node[0x5b93db34c940] = print;

		*node[0x5b93db34c970] = 3;

		*node[0x5b93db34c9a0] = ;;

		*node[0x5b93db34c9d0] = print;

		*node[0x5b93db34ca00] = 5;

		*node[0x5b93db34ca30] = ;;

		*node[0x5b93db34ca60] = return;

		*node[0x5b93db34ca90] = 0;

		*node[0x5b93db34cac0] = ;;

		*node[0x5b93db34cb40] = 3;

		*node[0x5b93db34cb70] = 0;

		*node[0x5b93db34cba0] = 1;

		*node[0x5b93db34cbd0] = 2;

		*node[0x5b93db34cc30] = ;;

		*node[0x5b93db34cd20] = =;

		*node[0x5b93db34cc60] = 3;

		*node[0x5b93db34ccf0] = -;

		*node[0x5b93db34cc90] = 0;

		*node[0x5b93db34ccc0] = 1;

		*node[0x5b93db34cd50] = ;;

		*node[0x5b93db34ce30] = =;

		*node[0x5b93db34cd80] = 4;

		*node[0x5b93db34ce00] = 1;

		*node[0x5b93db34ce60] = ;;

		*node[0x5b93db34cef0] = =;

		*node[0x5b93db34ce90] = 5;

		*node[0x5b93db34cec0] = 2;

		*node[0x5b93db34cf20] = ;;

		*node[0x5b93db34cf50] = if;

		*node[0x5b93db34cf80] = op_no;

		*node[0x5b93db34d010] = ==;

		*node[0x5b93db34cfb0] = 2;

		*node[0x5b93db34cfe0] = 0;

		*node[0x5b93db34d040] = ;;

		*node[0x5b93db34d0d0] = =;

		*node[0x5b93db34d070] = 6;

		*node[0x5b93db34d0a0] = 0;

		*node[0x5b93db34d100] = ;;

		*node[0x5b93db34d250] = =;

		*node[0x5b93db34d130] = 7;

		*node[0x5b93db34d220] = -;

		*node[0x5b93db34d160] = 0;

		*node[0x5b93db34d1f0] = /;

		*node[0x5b93db34d190] = 1;

		*node[0x5b93db34d1c0] = 0;

		*node[0x5b93db34d280] = ;;

		*node[0x5b93db34d2b0] = print;

		*node[0x5b93db34d2e0] = 5;

		*node[0x5b93db34d310] = ;;

		*node[0x5b93db34d340] = print;

		*node[0x5b93db34d370] = 6;

		*node[0x5b93db34d3a0] = 7;

		*node[0x5b93db34d3d0] = else;

		*node[0x5b93db34d400] = op_no;

		*node[0x5b93db34d430] = ;;

		*node[0x5b93db34d6d0] = =;

		*node[0x5b93db34d460] = 8;

		*node[0x5b93db34d6a0] = -;

		*node[0x5b93db34d580] = *;

		*node[0x5b93db34d520] = 1;

		*node[0x5b93db34d550] = 1;

		*node[0x5b93db34d670] = *;

		*node[0x5b93db34d610] = *;

		*node[0x5b93db34d5b0] = 4;

		*node[0x5b93db34d5e0] = 0;

		*node[0x5b93db34d640] = 2;

		*node[0x5b93db34d700] = ;;

		*node[0x5b93db34d730] = if;

		*node[0x5b93db34d760] = op_no;

		*node[0x5b93db34d7f0] = >;

		*node[0x5b93db34d790] = 8;

		*node[0x5b93db34d7c0] = 0;

		*node[0x5b93db34d820] = ;;

		*node[0x5b93db34d8e0] = =;

		*node[0x5b93db34d850] = 9;

		*node[0x5b93db34d8b0] = sqrt;

		*node[0x5b93db34d880] = 8;

		*node[0x5b93db34d910] = ;;

		*node[0x5b93db34db20] = =;

		*node[0x5b93db34d940] = 6;

		*node[0x5b93db34daf0] = /;

		*node[0x5b93db34da30] = -;

		*node[0x5b93db34d9d0] = -;

		*node[0x5b93db34d970] = 0;

		*node[0x5b93db34d9a0] = 1;

		*node[0x5b93db34da00] = 9;

		*node[0x5b93db34dac0] = *;

		*node[0x5b93db34da60] = 2;

		*node[0x5b93db34da90] = 0;

		*node[0x5b93db34db50] = ;;

		*node[0x5b93db34dd60] = =;

		*node[0x5b93db34db80] = 7;

		*node[0x5b93db34dd30] = /;

		*node[0x5b93db34dc70] = +;

		*node[0x5b93db34dc10] = -;

		*node[0x5b93db34dbb0] = 0;

		*node[0x5b93db34dbe0] = 1;

		*node[0x5b93db34dc40] = 9;

		*node[0x5b93db34dd00] = *;

		*node[0x5b93db34dca0] = 2;

		*node[0x5b93db34dcd0] = 0;

		*node[0x5b93db34dd90] = ;;

		*node[0x5b93db34ddc0] = print;

		*node[0x5b93db34ddf0] = 5;

		*node[0x5b93db34de20] = ;;

		*node[0x5b93db34de50] = print;

		*node[0x5b93db34de80] = 6;

		*node[0x5b93db34deb0] = 7;

		*node[0x5b93db34dee0] = elseif;

		*node[0x5b93db34df10] = op_no;

		*node[0x5b93db34dfa0] = ==;

		*node[0x5b93db34df40] = 8;

		*node[0x5b93db34df70] = 0;

		*node[0x5b93db34dfd0] = ;;

		*node[0x5b93db34e180] = =;

		*node[0x5b93db34e000] = 10;

		*node[0x5b93db34e150] = -;

		*node[0x5b93db34e030] = 0;

		*node[0x5b93db34e120] = /;

		*node[0x5b93db34e060] = 1;

		*node[0x5b93db34e0f0] = *;

		*node[0x5b93db34e090] = 2;

		*node[0x5b93db34e0c0] = 0;

		*node[0x5b93db34e1b0] = ;;

		*node[0x5b93db34e1e0] = print;

		*node[0x5b93db34e210] = 4;

		*node[0x5b93db34e240] = ;;

		*node[0x5b93db34e270] = print;

		*node[0x5b93db34e2a0] = 10;

		*node[0x5b93db34e2d0] = else;

		*node[0x5b93db34e300] = op_no;

		*node[0x5b93db34e330] = ;;

		*node[0x5b93db34e360] = print;

		*node[0x5b93db34e390] = 3;

		*node[0x5b93db34e3c0] = ;;

		*node[0x5b93db34e3f0] = return;

		*node[0x5b93db34e420] = 0;

		*node[0x5b93db34e450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff75b288c0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6504190616d0] = ;;

		*node[0x650419061750] = 0;

		*node[0x650419061780] = ;;

		*node[0x6504190617b0] = input;

		*node[0x6504190617e0] = 0;

		*node[0x650419061810] = 1;

		*node[0x650419061840] = 2;

		*node[0x6504190618a0] = ;;

		*node[0x650419061900] = 0;

		*node[0x650419061930] = 1;

		*node[0x650419061960] = 2;

		*node[0x650419061990] = ;;

		*node[0x650419061a10] = 1;

		*node[0x650419061a40] = 0;

		*node[0x650419061a70] = 1;

		*node[0x650419061aa0] = 2;

		*node[0x650419061b00] = ;;

		*node[0x650419061b30] = if;

		*node[0x650419061b60] = op_no;

		*node[0x650419061bf0] = ==;

		*node[0x650419061b90] = 0;

		*node[0x650419061bc0] = 0;

		*node[0x650419061c20] = ;;

		*node[0x650419061c80] = 1;

		*node[0x650419061cb0] = 2;

		*node[0x650419061ce0] = else;

		*node[0x650419061d10] = op_no;

		*node[0x650419061d40] = ;;

		*node[0x650419061df0] = 0;

		*node[0x650419061e20] = 1;

		*node[0x650419061e50] = 2;

		*node[0x650419061e80] = ;;

		*node[0x650419061eb0] = return;

		*node[0x650419061ee0] = 0;

		*node[0x650419061f10] = ;;

		*node[0x650419061f90] = 2;

		*node[0x650419061ff0] = 0;

		*node[0x650419062020] = 1;

		*node[0x650419062050] = ;;

		*node[0x650419062170] = =;

		*node[0x650419062080] = 2;

		*node[0x650419062140] = -;

		*node[0x6504190620e0] = 0;

		*node[0x650419062110] = 1;

		*node[0x6504190621a0] = ;;

		*node[0x650419062230] = =;

		*node[0x6504190621d0] = 3;

		*node[0x650419062200] = 1;

		*node[0x650419062260] = ;;

		*node[0x650419062340] = =;

		*node[0x650419062290] = 4;

		*node[0x650419062310] = 1000;

		*node[0x650419062370] = ;;

		*node[0x6504190623a0] = if;

		*node[0x6504190623d0] = op_no;

		*node[0x650419062460] = ==;

		*node[0x650419062400] = 0;

		*node[0x650419062430] = 0;

		*node[0x650419062490] = ;;

		*node[0x6504190624c0] = if;

		*node[0x6504190624f0] = op_no;

		*node[0x650419062580] = ==;

		*node[0x650419062520] = 1;

		*node[0x650419062550] = 0;

		*node[0x6504190625b0] = ;;

		*node[0x6504190625e0] = print;

		*node[0x650419062610] = 4;

		*node[0x650419062640] = else;

		*node[0x650419062670] = op_no;

		*node[0x6504190626a0] = ;;

		*node[0x6504190626d0] = print;

		*node[0x650419062700] = 2;

		*node[0x650419062730] = else;

		*node[0x650419062760] = op_no;

		*node[0x650419062790] = ;;

		*node[0x6504190628e0] = =;

		*node[0x6504190627c0] = 5;

		*node[0x6504190628b0] = -;

		*node[0x6504190627f0] = 0;

		*node[0x650419062880] = /;

		*node[0x650419062820] = 1;

		*node[0x650419062850] = 0;

		*node[0x650419062910] = ;;

		*node[0x650419062940] = print;

		*node[0x650419062970] = 3;

		*node[0x6504190629a0] = ;;

		*node[0x6504190629d0] = print;

		*node[0x650419062a00] = 5;

		*node[0x650419062a30] = ;;

		*node[0x650419062a60] = return;

		*node[0x650419062a90] = 0;

		*node[0x650419062ac0] = ;;

		*node[0x650419062b40] = 3;

		*node[0x650419062b70] = 0;

		*node[0x650419062ba0] = 1;

		*node[0x650419062bd0] = 2;

		*node[0x650419062c30] = ;;

		*node[0x650419062d20] = =;

		*node[0x650419062c60] = 3;

		*node[0x650419062cf0] = -;

		*node[0x650419062c90] = 0;

		*node[0x650419062cc0] = 1;

		*node[0x650419062d50] = ;;

		*node[0x650419062e30] = =;

		*node[0x650419062d80] = 4;

		*node[0x650419062e00] = 1;

		*node[0x650419062e60] = ;;

		*node[0x650419062ef0] = =;

		*node[0x650419062e90] = 5;

		*node[0x650419062ec0] = 2;

		*node[0x650419062f20] = ;;

		*node[0x650419062f50] = if;

		*node[0x650419062f80] = op_no;

		*node[0x650419063010] = ==;

		*node[0x650419062fb0] = 2;

		*node[0x650419062fe0] = 0;

		*node[0x650419063040] = ;;

		*node[0x6504190630d0] = =;

		*node[0x650419063070] = 6;

		*node[0x6504190630a0] = 0;

		*node[0x650419063100] = ;;

		*node[0x650419063250] = =;

		*node[0x650419063130] = 7;

		*node[0x650419063220] = -;

		*node[0x650419063160] = 0;

		*node[0x6504190631f0] = /;

		*node[0x650419063190] = 1;

		*node[0x6504190631c0] = 0;

		*node[0x650419063280] = ;;

		*node[0x6504190632b0] = print;

		*node[0x6504190632e0] = 5;

		*node[0x650419063310] = ;;

		*node[0x650419063340] = print;

		*node[0x650419063370] = 6;

		*node[0x6504190633a0] = 7;

		*node[0x6504190633d0] = else;

		*node[0x650419063400] = op_no;

		*node[0x650419063430] = ;;

		*node[0x6504190636d0] = =;

		*node[0x650419063460] = 8;

		*node[0x6504190636a0] = -;

		*node[0x650419063580] = *;

		*node[0x650419063520] = 1;

		*node[0x650419063550] = 1;

		*node[0x650419063670] = *;

		*node[0x650419063610] = *;

		*node[0x6504190635b0] = 4;

		*node[0x6504190635e0] = 0;

		*node[0x650419063640] = 2;

		*node[0x650419063700] = ;;

		*node[0x650419063730] = if;

		*node[0x650419063760] = op_no;

		*node[0x6504190637f0] = >;

		*node[0x650419063790] = 8;

		*node[0x6504190637c0] = 0;

		*node[0x650419063820] = ;;

		*node[0x6504190638e0] = =;

		*node[0x650419063850] = 9;

		*node[0x6504190638b0] = sqrt;

		*node[0x650419063880] = 8;

		*node[0x650419063910] = ;;

		*node[0x650419063b20] = =;

		*node[0x650419063940] = 6;

		*node[0x650419063af0] = /;

		*node[0x650419063a30] = -;

		*node[0x6504190639d0] = -;

		*node[0x650419063970] = 0;

		*node[0x6504190639a0] = 1;

		*node[0x650419063a00] = 9;

		*node[0x650419063ac0] = *;

		*node[0x650419063a60] = 2;

		*node[0x650419063a90] = 0;

		*node[0x650419063b50] = ;;

		*node[0x650419063d60] = =;

		*node[0x650419063b80] = 7;

		*node[0x650419063d30] = /;

		*node[0x650419063c70] = +;

		*node[0x650419063c10] = -;

		*node[0x650419063bb0] = 0;

		*node[0x650419063be0] = 1;

		*node[0x650419063c40] = 9;

		*node[0x650419063d00] = *;

		*node[0x650419063ca0] = 2;

		*node[0x650419063cd0] = 0;

		*node[0x650419063d90] = ;;

		*node[0x650419063dc0] = print;

		*node[0x650419063df0] = 5;

		*node[0x650419063e20] = ;;

		*node[0x650419063e50] = print;

		*node[0x650419063e80] = 6;

		*node[0x650419063eb0] = 7;

		*node[0x650419063ee0] = elseif;

		*node[0x650419063f10] = op_no;

		*node[0x650419063fa0] = ==;

		*node[0x650419063f40] = 8;

		*node[0x650419063f70] = 0;

		*node[0x650419063fd0] = ;;

		*node[0x650419064180] = =;

		*node[0x650419064000] = 10;

		*node[0x650419064150] = -;

		*node[0x650419064030] = 0;

		*node[0x650419064120] = /;

		*node[0x650419064060] = 1;

		*node[0x6504190640f0] = *;

		*node[0x650419064090] = 2;

		*node[0x6504190640c0] = 0;

		*node[0x6504190641b0] = ;;

		*node[0x6504190641e0] = print;

		*node[0x650419064210] = 4;

		*node[0x650419064240] = ;;

		*node[0x650419064270] = print;

		*node[0x6504190642a0] = 10;

		*node[0x6504190642d0] = else;

		*node[0x650419064300] = op_no;

		*node[0x650419064330] = ;;

		*node[0x650419064360] = print;

		*node[0x650419064390] = 3;

		*node[0x6504190643c0] = ;;

		*node[0x6504190643f0] = return;

		*node[0x650419064420] = 0;

		*node[0x650419064450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd98b1a440] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6091e7b45020] = ;;

		*node[0x6091e7b45050] = 0;

		*node[0x6091e7b45080] = ;;

		*node[0x6091e7b450b0] = input;

		*node[0x6091e7b450e0] = 0;

		*node[0x6091e7b45110] = 1;

		*node[0x6091e7b45140] = 2;

		*node[0x6091e7b45170] = ;;

		*node[0x6091e7b451d0] = 0;

		*node[0x6091e7b45200] = 1;

		*node[0x6091e7b45230] = 2;

		*node[0x6091e7b45260] = ;;

		*node[0x6091e7b45290] = 1;

		*node[0x6091e7b452c0] = 0;

		*node[0x6091e7b452f0] = 1;

		*node[0x6091e7b45320] = 2;

		*node[0x6091e7b45350] = ;;

		*node[0x6091e7b45380] = if;

		*node[0x6091e7b453b0] = op_no;

		*node[0x6091e7b453e0] = ==;

		*node[0x6091e7b45410] = 0;

		*node[0x6091e7b45440] = 0;

		*node[0x6091e7b45470] = ;;

		*node[0x6091e7b454d0] = 1;

		*node[0x6091e7b45500] = 2;

		*node[0x6091e7b45530] = else;

		*node[0x6091e7b45560] = op_no;

		*node[0x6091e7b45590] = ;;

		*node[0x6091e7b455f0] = 0;

		*node[0x6091e7b45620] = 1;

		*node[0x6091e7b45650] = 2;

		*node[0x6091e7b45680] = ;;

		*node[0x6091e7b456b0] = return;

		*node[0x6091e7b456e0] = 0;

		*node[0x6091e7b45710] = ;;

		*node[0x6091e7b45740] = 2;

		*node[0x6091e7b45770] = 0;

		*node[0x6091e7b457a0] = 1;

		*node[0x6091e7b457d0] = ;;

		*node[0x6091e7b45800] = =;

		*node[0x6091e7b45830] = 2;

		*node[0x6091e7b45860] = -;

		*node[0x6091e7b45890] = 0;

		*node[0x6091e7b458c0] = 1;

		*node[0x6091e7b458f0] = ;;

		*node[0x6091e7b45920] = =;

		*node[0x6091e7b45950] = 3;

		*node[0x6091e7b45980] = 1;

		*node[0x6091e7b459b0] = ;;

		*node[0x6091e7b459e0] = =;

		*node[0x6091e7b45a10] = 4;

		*node[0x6091e7b45a40] = 1000;

		*node[0x6091e7b45a70] = ;;

		*node[0x6091e7b45aa0] = if;

		*node[0x6091e7b45ad0] = op_no;

		*node[0x6091e7b45b00] = ==;

		*node[0x6091e7b45b30] = 0;

		*node[0x6091e7b45b60] = 0;

		*node[0x6091e7b45b90] = ;;

		*node[0x6091e7b45bc0] = if;

		*node[0x6091e7b45bf0] = op_no;

		*node[0x6091e7b45c20] = ==;

		*node[0x6091e7b45c50] = 1;

		*node[0x6091e7b45c80] = 0;

		*node[0x6091e7b45cb0] = ;;

		*node[0x6091e7b45ce0] = print;

		*node[0x6091e7b45d10] = 4;

		*node[0x6091e7b45d40] = else;

		*node[0x6091e7b45d70] = op_no;

		*node[0x6091e7b45da0] = ;;

		*node[0x6091e7b45dd0] = print;

		*node[0x6091e7b45e00] = 2;

		*node[0x6091e7b45e30] = else;

		*node[0x6091e7b45e60] = op_no;

		*node[0x6091e7b45e90] = ;;

		*node[0x6091e7b45ec0] = =;

		*node[0x6091e7b45ef0] = 5;

		*node[0x6091e7b45f20] = -;

		*node[0x6091e7b45f50] = 0;

		*node[0x6091e7b45f80] = /;

		*node[0x6091e7b45fb0] = 1;

		*node[0x6091e7b45fe0] = 0;

		*node[0x6091e7b46010] = ;;

		*node[0x6091e7b46040] = print;

		*node[0x6091e7b46070] = 3;

		*node[0x6091e7b460a0] = ;;

		*node[0x6091e7b460d0] = print;

		*node[0x6091e7b46100] = 5;

		*node[0x6091e7b46130] = ;;

		*node[0x6091e7b46160] = return;

		*node[0x6091e7b46190] = 0;

		*node[0x6091e7b461c0] = ;;

		*node[0x6091e7b461f0] = 3;

		*node[0x6091e7b46220] = 0;

		*node[0x6091e7b46250] = 1;

		*node[0x6091e7b46280] = 2;

		*node[0x6091e7b462b0] = ;;

		*node[0x6091e7b462e0] = =;

		*node[0x6091e7b46310] = 3;

		*node[0x6091e7b46340] = -;

		*node[0x6091e7b46370] = 0;

		*node[0x6091e7b463a0] = 1;

		*node[0x6091e7b463d0] = ;;

		*node[0x6091e7b46400] = =;

		*node[0x6091e7b46430] = 4;

		*node[0x6091e7b46460] = 1;

		*node[0x6091e7b46490] = ;;

		*node[0x6091e7b464c0] = =;

		*node[0x6091e7b464f0] = 5;

		*node[0x6091e7b46520] = 2;

		*node[0x6091e7b46550] = ;;

		*node[0x6091e7b46580] = if;

		*node[0x6091e7b465b0] = op_no;

		*node[0x6091e7b465e0] = ==;

		*node[0x6091e7b46610] = 2;

		*node[0x6091e7b46640] = 0;

		*node[0x6091e7b46670] = ;;

		*node[0x6091e7b466a0] = =;

		*node[0x6091e7b466d0] = 6;

		*node[0x6091e7b46700] = 0;

		*node[0x6091e7b46730] = ;;

		*node[0x6091e7b46760] = =;

		*node[0x6091e7b46790] = 7;

		*node[0x6091e7b467c0] = -;

		*node[0x6091e7b467f0] = 0;

		*node[0x6091e7b46820] = /;

		*node[0x6091e7b46850] = 1;

		*node[0x6091e7b46880] = 0;

		*node[0x6091e7b468b0] = ;;

		*node[0x6091e7b468e0] = print;

		*node[0x6091e7b46910] = 5;

		*node[0x6091e7b46940] = ;;

		*node[0x6091e7b46970] = print;

		*node[0x6091e7b469a0] = 6;

		*node[0x6091e7b469d0] = 7;

		*node[0x6091e7b46a00] = else;

		*node[0x6091e7b46a30] = op_no;

		*node[0x6091e7b46a60] = ;;

		*node[0x6091e7b46a90] = =;

		*node[0x6091e7b46ac0] = 8;

		*node[0x6091e7b46af0] = -;

		*node[0x6091e7b46b20] = *;

		*node[0x6091e7b46b50] = 1;

		*node[0x6091e7b46b80] = 1;

		*node[0x6091e7b46bb0] = *;

		*node[0x6091e7b46be0] = *;

		*node[0x6091e7b46c10] = 4;

		*node[0x6091e7b46c40] = 0;

		*node[0x6091e7b46c70] = 2;

		*node[0x6091e7b46ca0] = ;;

		*node[0x6091e7b46cd0] = if;

		*node[0x6091e7b46d00] = op_no;

		*node[0x6091e7b46d30] = >;

		*node[0x6091e7b46d60] = 8;

		*node[0x6091e7b46d90] = 0;

		*node[0x6091e7b46dc0] = ;;

		*node[0x6091e7b46df0] = =;

		*node[0x6091e7b46e20] = 9;

		*node[0x6091e7b46e50] = sqrt;

		*node[0x6091e7b46e80] = 8;

		*node[0x6091e7b46eb0] = ;;

		*node[0x6091e7b46ee0] = =;

		*node[0x6091e7b46f10] = 6;

		*node[0x6091e7b46f40] = /;

		*node[0x6091e7b46f70] = -;

		*node[0x6091e7b46fa0] = -;

		*node[0x6091e7b46fd0] = 0;

		*node[0x6091e7b47000] = 1;

		*node[0x6091e7b47030] = 9;

		*node[0x6091e7b47060] = *;

		*node[0x6091e7b47090] = 2;

		*node[0x6091e7b470c0] = 0;

		*node[0x6091e7b470f0] = ;;

		*node[0x6091e7b47120] = =;

		*node[0x6091e7b47150] = 7;

		*node[0x6091e7b47180] = /;

		*node[0x6091e7b471b0] = +;

		*node[0x6091e7b471e0] = -;

		*node[0x6091e7b47210] = 0;

		*node[0x6091e7b47240] = 1;

		*node[0x6091e7b47270] = 9;

		*node[0x6091e7b472a0] = *;

		*node[0x6091e7b472d0] = 2;

		*node[0x6091e7b47300] = 0;

		*node[0x6091e7b47330] = ;;

		*node[0x6091e7b47360] = print;

		*node[0x6091e7b47390] = 5;

		*node[0x6091e7b473c0] = ;;

		*node[0x6091e7b473f0] = print;

		*node[0x6091e7b47420] = 6;

		*node[0x6091e7b47450] = 7;

		*node[0x6091e7b47480] = elseif;

		*node[0x6091e7b474b0] = op_no;

		*node[0x6091e7b474e0] = ==;

		*node[0x6091e7b47510] = 8;

		*node[0x6091e7b47540] = 0;

		*node[0x6091e7b47570] = ;;

		*node[0x6091e7b475a0] = =;

		*node[0x6091e7b475d0] = 10;

		*node[0x6091e7b47600] = -;

		*node[0x6091e7b47630] = 0;

		*node[0x6091e7b47660] = /;

		*node[0x6091e7b47690] = 1;

		*node[0x6091e7b476c0] = *;

		*node[0x6091e7b476f0] = 2;

		*node[0x6091e7b47720] = 0;

		*node[0x6091e7b47750] = ;;

		*node[0x6091e7b47780] = print;

		*node[0x6091e7b477b0] = 4;

		*node[0x6091e7b477e0] = ;;

		*node[0x6091e7b47810] = print;

		*node[0x6091e7b47840] = 10;

		*node[0x6091e7b47870] = else;

		*node[0x6091e7b478a0] = op_no;

		*node[0x6091e7b478d0] = ;;

		*node[0x6091e7b47900] = print;

		*node[0x6091e7b47930] = 3;

		*node[0x6091e7b47960] = ;;

		*node[0x6091e7b47990] = return;

		*node[0x6091e7b479c0] = 0;

		*node[0x6091e7b479f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcca4d9db0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5a57db3a8020] = ;;

		*node[0x5a57db3a8050] = 0;

		*node[0x5a57db3a8080] = ;;

		*node[0x5a57db3a80b0] = input;

		*node[0x5a57db3a80e0] = 0;

		*node[0x5a57db3a8110] = 1;

		*node[0x5a57db3a8140] = 2;

		*node[0x5a57db3a8170] = ;;

		*node[0x5a57db3a81d0] = 0;

		*node[0x5a57db3a8200] = 1;

		*node[0x5a57db3a8230] = 2;

		*node[0x5a57db3a8260] = ;;

		*node[0x5a57db3a8290] = 1;

		*node[0x5a57db3a82c0] = 0;

		*node[0x5a57db3a82f0] = 1;

		*node[0x5a57db3a8320] = 2;

		*node[0x5a57db3a8350] = ;;

		*node[0x5a57db3a8380] = if;

		*node[0x5a57db3a83b0] = op_no;

		*node[0x5a57db3a83e0] = ==;

		*node[0x5a57db3a8410] = 0;

		*node[0x5a57db3a8440] = 0;

		*node[0x5a57db3a8470] = ;;

		*node[0x5a57db3a84d0] = 1;

		*node[0x5a57db3a8500] = 2;

		*node[0x5a57db3a8530] = else;

		*node[0x5a57db3a8560] = op_no;

		*node[0x5a57db3a8590] = ;;

		*node[0x5a57db3a85f0] = 0;

		*node[0x5a57db3a8620] = 1;

		*node[0x5a57db3a8650] = 2;

		*node[0x5a57db3a8680] = ;;

		*node[0x5a57db3a86b0] = return;

		*node[0x5a57db3a86e0] = 0;

		*node[0x5a57db3a8710] = ;;

		*node[0x5a57db3a8740] = 2;

		*node[0x5a57db3a8770] = 0;

		*node[0x5a57db3a87a0] = 1;

		*node[0x5a57db3a87d0] = ;;

		*node[0x5a57db3a8800] = =;

		*node[0x5a57db3a8830] = 2;

		*node[0x5a57db3a8860] = -;

		*node[0x5a57db3a8890] = 0;

		*node[0x5a57db3a88c0] = 1;

		*node[0x5a57db3a88f0] = ;;

		*node[0x5a57db3a8920] = =;

		*node[0x5a57db3a8950] = 3;

		*node[0x5a57db3a8980] = 1;

		*node[0x5a57db3a89b0] = ;;

		*node[0x5a57db3a89e0] = =;

		*node[0x5a57db3a8a10] = 4;

		*node[0x5a57db3a8a40] = 1000;

		*node[0x5a57db3a8a70] = ;;

		*node[0x5a57db3a8aa0] = if;

		*node[0x5a57db3a8ad0] = op_no;

		*node[0x5a57db3a8b00] = ==;

		*node[0x5a57db3a8b30] = 0;

		*node[0x5a57db3a8b60] = 0;

		*node[0x5a57db3a8b90] = ;;

		*node[0x5a57db3a8bc0] = if;

		*node[0x5a57db3a8bf0] = op_no;

		*node[0x5a57db3a8c20] = ==;

		*node[0x5a57db3a8c50] = 1;

		*node[0x5a57db3a8c80] = 0;

		*node[0x5a57db3a8cb0] = ;;

		*node[0x5a57db3a8ce0] = print;

		*node[0x5a57db3a8d10] = 4;

		*node[0x5a57db3a8d40] = else;

		*node[0x5a57db3a8d70] = op_no;

		*node[0x5a57db3a8da0] = ;;

		*node[0x5a57db3a8dd0] = print;

		*node[0x5a57db3a8e00] = 2;

		*node[0x5a57db3a8e30] = else;

		*node[0x5a57db3a8e60] = op_no;

		*node[0x5a57db3a8e90] = ;;

		*node[0x5a57db3a8ec0] = =;

		*node[0x5a57db3a8ef0] = 5;

		*node[0x5a57db3a8f20] = -;

		*node[0x5a57db3a8f50] = 0;

		*node[0x5a57db3a8f80] = /;

		*node[0x5a57db3a8fb0] = 1;

		*node[0x5a57db3a8fe0] = 0;

		*node[0x5a57db3a9010] = ;;

		*node[0x5a57db3a9040] = print;

		*node[0x5a57db3a9070] = 3;

		*node[0x5a57db3a90a0] = ;;

		*node[0x5a57db3a90d0] = print;

		*node[0x5a57db3a9100] = 5;

		*node[0x5a57db3a9130] = ;;

		*node[0x5a57db3a9160] = return;

		*node[0x5a57db3a9190] = 0;

		*node[0x5a57db3a91c0] = ;;

		*node[0x5a57db3a91f0] = 3;

		*node[0x5a57db3a9220] = 0;

		*node[0x5a57db3a9250] = 1;

		*node[0x5a57db3a9280] = 2;

		*node[0x5a57db3a92b0] = ;;

		*node[0x5a57db3a92e0] = =;

		*node[0x5a57db3a9310] = 3;

		*node[0x5a57db3a9340] = -;

		*node[0x5a57db3a9370] = 0;

		*node[0x5a57db3a93a0] = 1;

		*node[0x5a57db3a93d0] = ;;

		*node[0x5a57db3a9400] = =;

		*node[0x5a57db3a9430] = 4;

		*node[0x5a57db3a9460] = 1;

		*node[0x5a57db3a9490] = ;;

		*node[0x5a57db3a94c0] = =;

		*node[0x5a57db3a94f0] = 5;

		*node[0x5a57db3a9520] = 2;

		*node[0x5a57db3a9550] = ;;

		*node[0x5a57db3a9580] = if;

		*node[0x5a57db3a95b0] = op_no;

		*node[0x5a57db3a95e0] = ==;

		*node[0x5a57db3a9610] = 2;

		*node[0x5a57db3a9640] = 0;

		*node[0x5a57db3a9670] = ;;

		*node[0x5a57db3a96a0] = =;

		*node[0x5a57db3a96d0] = 6;

		*node[0x5a57db3a9700] = 0;

		*node[0x5a57db3a9730] = ;;

		*node[0x5a57db3a9760] = =;

		*node[0x5a57db3a9790] = 7;

		*node[0x5a57db3a97c0] = -;

		*node[0x5a57db3a97f0] = 0;

		*node[0x5a57db3a9820] = /;

		*node[0x5a57db3a9850] = 1;

		*node[0x5a57db3a9880] = 0;

		*node[0x5a57db3a98b0] = ;;

		*node[0x5a57db3a98e0] = print;

		*node[0x5a57db3a9910] = 5;

		*node[0x5a57db3a9940] = ;;

		*node[0x5a57db3a9970] = print;

		*node[0x5a57db3a99a0] = 6;

		*node[0x5a57db3a99d0] = 7;

		*node[0x5a57db3a9a00] = else;

		*node[0x5a57db3a9a30] = op_no;

		*node[0x5a57db3a9a60] = ;;

		*node[0x5a57db3a9a90] = =;

		*node[0x5a57db3a9ac0] = 8;

		*node[0x5a57db3a9af0] = -;

		*node[0x5a57db3a9b20] = *;

		*node[0x5a57db3a9b50] = 1;

		*node[0x5a57db3a9b80] = 1;

		*node[0x5a57db3a9bb0] = *;

		*node[0x5a57db3a9be0] = *;

		*node[0x5a57db3a9c10] = 4;

		*node[0x5a57db3a9c40] = 0;

		*node[0x5a57db3a9c70] = 2;

		*node[0x5a57db3a9ca0] = ;;

		*node[0x5a57db3a9cd0] = if;

		*node[0x5a57db3a9d00] = op_no;

		*node[0x5a57db3a9d30] = >;

		*node[0x5a57db3a9d60] = 8;

		*node[0x5a57db3a9d90] = 0;

		*node[0x5a57db3a9dc0] = ;;

		*node[0x5a57db3a9df0] = =;

		*node[0x5a57db3a9e20] = 9;

		*node[0x5a57db3a9e50] = sqrt;

		*node[0x5a57db3a9e80] = 8;

		*node[0x5a57db3a9eb0] = ;;

		*node[0x5a57db3a9ee0] = =;

		*node[0x5a57db3a9f10] = 6;

		*node[0x5a57db3a9f40] = /;

		*node[0x5a57db3a9f70] = -;

		*node[0x5a57db3a9fa0] = -;

		*node[0x5a57db3a9fd0] = 0;

		*node[0x5a57db3aa000] = 1;

		*node[0x5a57db3aa030] = 9;

		*node[0x5a57db3aa060] = *;

		*node[0x5a57db3aa090] = 2;

		*node[0x5a57db3aa0c0] = 0;

		*node[0x5a57db3aa0f0] = ;;

		*node[0x5a57db3aa120] = =;

		*node[0x5a57db3aa150] = 7;

		*node[0x5a57db3aa180] = /;

		*node[0x5a57db3aa1b0] = +;

		*node[0x5a57db3aa1e0] = -;

		*node[0x5a57db3aa210] = 0;

		*node[0x5a57db3aa240] = 1;

		*node[0x5a57db3aa270] = 9;

		*node[0x5a57db3aa2a0] = *;

		*node[0x5a57db3aa2d0] = 2;

		*node[0x5a57db3aa300] = 0;

		*node[0x5a57db3aa330] = ;;

		*node[0x5a57db3aa360] = print;

		*node[0x5a57db3aa390] = 5;

		*node[0x5a57db3aa3c0] = ;;

		*node[0x5a57db3aa3f0] = print;

		*node[0x5a57db3aa420] = 6;

		*node[0x5a57db3aa450] = 7;

		*node[0x5a57db3aa480] = elseif;

		*node[0x5a57db3aa4b0] = op_no;

		*node[0x5a57db3aa4e0] = ==;

		*node[0x5a57db3aa510] = 8;

		*node[0x5a57db3aa540] = 0;

		*node[0x5a57db3aa570] = ;;

		*node[0x5a57db3aa5a0] = =;

		*node[0x5a57db3aa5d0] = 10;

		*node[0x5a57db3aa600] = -;

		*node[0x5a57db3aa630] = 0;

		*node[0x5a57db3aa660] = /;

		*node[0x5a57db3aa690] = 1;

		*node[0x5a57db3aa6c0] = *;

		*node[0x5a57db3aa6f0] = 2;

		*node[0x5a57db3aa720] = 0;

		*node[0x5a57db3aa750] = ;;

		*node[0x5a57db3aa780] = print;

		*node[0x5a57db3aa7b0] = 4;

		*node[0x5a57db3aa7e0] = ;;

		*node[0x5a57db3aa810] = print;

		*node[0x5a57db3aa840] = 10;

		*node[0x5a57db3aa870] = else;

		*node[0x5a57db3aa8a0] = op_no;

		*node[0x5a57db3aa8d0] = ;;

		*node[0x5a57db3aa900] = print;

		*node[0x5a57db3aa930] = 3;

		*node[0x5a57db3aa960] = ;;

		*node[0x5a57db3aa990] = return;

		*node[0x5a57db3aa9c0] = 0;

		*node[0x5a57db3aa9f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff489304b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x572321643020] = ;;

		*node[0x572321643050] = 0;

		*node[0x572321643080] = ;;

		*node[0x5723216430b0] = input;

		*node[0x5723216430e0] = 0;

		*node[0x572321643110] = 1;

		*node[0x572321643140] = 2;

		*node[0x572321643170] = ;;

		*node[0x5723216431d0] = 0;

		*node[0x572321643200] = 1;

		*node[0x572321643230] = 2;

		*node[0x572321643260] = ;;

		*node[0x572321643290] = 1;

		*node[0x5723216432c0] = 0;

		*node[0x5723216432f0] = 1;

		*node[0x572321643320] = 2;

		*node[0x572321643350] = ;;

		*node[0x572321643380] = if;

		*node[0x5723216433b0] = op_no;

		*node[0x5723216433e0] = ==;

		*node[0x572321643410] = 0;

		*node[0x572321643440] = 0;

		*node[0x572321643470] = ;;

		*node[0x5723216434d0] = 1;

		*node[0x572321643500] = 2;

		*node[0x572321643530] = else;

		*node[0x572321643560] = op_no;

		*node[0x572321643590] = ;;

		*node[0x5723216435f0] = 0;

		*node[0x572321643620] = 1;

		*node[0x572321643650] = 2;

		*node[0x572321643680] = ;;

		*node[0x5723216436b0] = return;

		*node[0x5723216436e0] = 0;

		*node[0x572321643710] = ;;

		*node[0x572321643740] = 2;

		*node[0x572321643770] = 0;

		*node[0x5723216437a0] = 1;

		*node[0x5723216437d0] = ;;

		*node[0x572321643800] = =;

		*node[0x572321643830] = 2;

		*node[0x572321643860] = -;

		*node[0x572321643890] = 0;

		*node[0x5723216438c0] = 1;

		*node[0x5723216438f0] = ;;

		*node[0x572321643920] = =;

		*node[0x572321643950] = 3;

		*node[0x572321643980] = 1;

		*node[0x5723216439b0] = ;;

		*node[0x5723216439e0] = =;

		*node[0x572321643a10] = 4;

		*node[0x572321643a40] = 1000;

		*node[0x572321643a70] = ;;

		*node[0x572321643aa0] = if;

		*node[0x572321643ad0] = op_no;

		*node[0x572321643b00] = ==;

		*node[0x572321643b30] = 0;

		*node[0x572321643b60] = 0;

		*node[0x572321643b90] = ;;

		*node[0x572321643bc0] = if;

		*node[0x572321643bf0] = op_no;

		*node[0x572321643c20] = ==;

		*node[0x572321643c50] = 1;

		*node[0x572321643c80] = 0;

		*node[0x572321643cb0] = ;;

		*node[0x572321643ce0] = print;

		*node[0x572321643d10] = 4;

		*node[0x572321643d40] = else;

		*node[0x572321643d70] = op_no;

		*node[0x572321643da0] = ;;

		*node[0x572321643dd0] = print;

		*node[0x572321643e00] = 2;

		*node[0x572321643e30] = else;

		*node[0x572321643e60] = op_no;

		*node[0x572321643e90] = ;;

		*node[0x572321643ec0] = =;

		*node[0x572321643ef0] = 5;

		*node[0x572321643f20] = -;

		*node[0x572321643f50] = 0;

		*node[0x572321643f80] = /;

		*node[0x572321643fb0] = 1;

		*node[0x572321643fe0] = 0;

		*node[0x572321644010] = ;;

		*node[0x572321644040] = print;

		*node[0x572321644070] = 3;

		*node[0x5723216440a0] = ;;

		*node[0x5723216440d0] = print;

		*node[0x572321644100] = 5;

		*node[0x572321644130] = ;;

		*node[0x572321644160] = return;

		*node[0x572321644190] = 0;

		*node[0x5723216441c0] = ;;

		*node[0x5723216441f0] = 3;

		*node[0x572321644220] = 0;

		*node[0x572321644250] = 1;

		*node[0x572321644280] = 2;

		*node[0x5723216442b0] = ;;

		*node[0x5723216442e0] = =;

		*node[0x572321644310] = 3;

		*node[0x572321644340] = -;

		*node[0x572321644370] = 0;

		*node[0x5723216443a0] = 1;

		*node[0x5723216443d0] = ;;

		*node[0x572321644400] = =;

		*node[0x572321644430] = 4;

		*node[0x572321644460] = 1;

		*node[0x572321644490] = ;;

		*node[0x5723216444c0] = =;

		*node[0x5723216444f0] = 5;

		*node[0x572321644520] = 2;

		*node[0x572321644550] = ;;

		*node[0x572321644580] = if;

		*node[0x5723216445b0] = op_no;

		*node[0x5723216445e0] = ==;

		*node[0x572321644610] = 2;

		*node[0x572321644640] = 0;

		*node[0x572321644670] = ;;

		*node[0x5723216446a0] = =;

		*node[0x5723216446d0] = 6;

		*node[0x572321644700] = 0;

		*node[0x572321644730] = ;;

		*node[0x572321644760] = =;

		*node[0x572321644790] = 7;

		*node[0x5723216447c0] = -;

		*node[0x5723216447f0] = 0;

		*node[0x572321644820] = /;

		*node[0x572321644850] = 1;

		*node[0x572321644880] = 0;

		*node[0x5723216448b0] = ;;

		*node[0x5723216448e0] = print;

		*node[0x572321644910] = 5;

		*node[0x572321644940] = ;;

		*node[0x572321644970] = print;

		*node[0x5723216449a0] = 6;

		*node[0x5723216449d0] = 7;

		*node[0x572321644a00] = else;

		*node[0x572321644a30] = op_no;

		*node[0x572321644a60] = ;;

		*node[0x572321644a90] = =;

		*node[0x572321644ac0] = 8;

		*node[0x572321644af0] = -;

		*node[0x572321644b20] = *;

		*node[0x572321644b50] = 1;

		*node[0x572321644b80] = 1;

		*node[0x572321644bb0] = *;

		*node[0x572321644be0] = *;

		*node[0x572321644c10] = 4;

		*node[0x572321644c40] = 0;

		*node[0x572321644c70] = 2;

		*node[0x572321644ca0] = ;;

		*node[0x572321644cd0] = if;

		*node[0x572321644d00] = op_no;

		*node[0x572321644d30] = >;

		*node[0x572321644d60] = 8;

		*node[0x572321644d90] = 0;

		*node[0x572321644dc0] = ;;

		*node[0x572321644df0] = =;

		*node[0x572321644e20] = 9;

		*node[0x572321644e50] = sqrt;

		*node[0x572321644e80] = 8;

		*node[0x572321644eb0] = ;;

		*node[0x572321644ee0] = =;

		*node[0x572321644f10] = 6;

		*node[0x572321644f40] = /;

		*node[0x572321644f70] = -;

		*node[0x572321644fa0] = -;

		*node[0x572321644fd0] = 0;

		*node[0x572321645000] = 1;

		*node[0x572321645030] = 9;

		*node[0x572321645060] = *;

		*node[0x572321645090] = 2;

		*node[0x5723216450c0] = 0;

		*node[0x5723216450f0] = ;;

		*node[0x572321645120] = =;

		*node[0x572321645150] = 7;

		*node[0x572321645180] = /;

		*node[0x5723216451b0] = +;

		*node[0x5723216451e0] = -;

		*node[0x572321645210] = 0;

		*node[0x572321645240] = 1;

		*node[0x572321645270] = 9;

		*node[0x5723216452a0] = *;

		*node[0x5723216452d0] = 2;

		*node[0x572321645300] = 0;

		*node[0x572321645330] = ;;

		*node[0x572321645360] = print;

		*node[0x572321645390] = 5;

		*node[0x5723216453c0] = ;;

		*node[0x5723216453f0] = print;

		*node[0x572321645420] = 6;

		*node[0x572321645450] = 7;

		*node[0x572321645480] = elseif;

		*node[0x5723216454b0] = op_no;

		*node[0x5723216454e0] = ==;

		*node[0x572321645510] = 8;

		*node[0x572321645540] = 0;

		*node[0x572321645570] = ;;

		*node[0x5723216455a0] = =;

		*node[0x5723216455d0] = 10;

		*node[0x572321645600] = -;

		*node[0x572321645630] = 0;

		*node[0x572321645660] = /;

		*node[0x572321645690] = 1;

		*node[0x5723216456c0] = *;

		*node[0x5723216456f0] = 2;

		*node[0x572321645720] = 0;

		*node[0x572321645750] = ;;

		*node[0x572321645780] = print;

		*node[0x5723216457b0] = 4;

		*node[0x5723216457e0] = ;;

		*node[0x572321645810] = print;

		*node[0x572321645840] = 10;

		*node[0x572321645870] = else;

		*node[0x5723216458a0] = op_no;

		*node[0x5723216458d0] = ;;

		*node[0x572321645900] = print;

		*node[0x572321645930] = 3;

		*node[0x572321645960] = ;;

		*node[0x572321645990] = return;

		*node[0x5723216459c0] = 0;

		*node[0x5723216459f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffd689b310] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x55d1be4f1020] = ;;

		*node[0x55d1be4f1050] = 0;

		*node[0x55d1be4f1080] = ;;

		*node[0x55d1be4f10b0] = input;

		*node[0x55d1be4f10e0] = 0;

		*node[0x55d1be4f1110] = 1;

		*node[0x55d1be4f1140] = 2;

		*node[0x55d1be4f1170] = ;;

		*node[0x55d1be4f11d0] = 0;

		*node[0x55d1be4f1200] = 1;

		*node[0x55d1be4f1230] = 2;

		*node[0x55d1be4f1260] = ;;

		*node[0x55d1be4f1290] = 1;

		*node[0x55d1be4f12c0] = 0;

		*node[0x55d1be4f12f0] = 1;

		*node[0x55d1be4f1320] = 2;

		*node[0x55d1be4f1350] = ;;

		*node[0x55d1be4f1380] = if;

		*node[0x55d1be4f13b0] = op_no;

		*node[0x55d1be4f13e0] = ==;

		*node[0x55d1be4f1410] = 0;

		*node[0x55d1be4f1440] = 0;

		*node[0x55d1be4f1470] = ;;

		*node[0x55d1be4f14d0] = 1;

		*node[0x55d1be4f1500] = 2;

		*node[0x55d1be4f1530] = else;

		*node[0x55d1be4f1560] = op_no;

		*node[0x55d1be4f1590] = ;;

		*node[0x55d1be4f15f0] = 0;

		*node[0x55d1be4f1620] = 1;

		*node[0x55d1be4f1650] = 2;

		*node[0x55d1be4f1680] = ;;

		*node[0x55d1be4f16b0] = return;

		*node[0x55d1be4f16e0] = 0;

		*node[0x55d1be4f1710] = ;;

		*node[0x55d1be4f1740] = 2;

		*node[0x55d1be4f1770] = 0;

		*node[0x55d1be4f17a0] = 1;

		*node[0x55d1be4f17d0] = ;;

		*node[0x55d1be4f1800] = =;

		*node[0x55d1be4f1830] = 2;

		*node[0x55d1be4f1860] = -;

		*node[0x55d1be4f1890] = 0;

		*node[0x55d1be4f18c0] = 1;

		*node[0x55d1be4f18f0] = ;;

		*node[0x55d1be4f1920] = =;

		*node[0x55d1be4f1950] = 3;

		*node[0x55d1be4f1980] = 1;

		*node[0x55d1be4f19b0] = ;;

		*node[0x55d1be4f19e0] = =;

		*node[0x55d1be4f1a10] = 4;

		*node[0x55d1be4f1a40] = 1000;

		*node[0x55d1be4f1a70] = ;;

		*node[0x55d1be4f1aa0] = if;

		*node[0x55d1be4f1ad0] = op_no;

		*node[0x55d1be4f1b00] = ==;

		*node[0x55d1be4f1b30] = 0;

		*node[0x55d1be4f1b60] = 0;

		*node[0x55d1be4f1b90] = ;;

		*node[0x55d1be4f1bc0] = if;

		*node[0x55d1be4f1bf0] = op_no;

		*node[0x55d1be4f1c20] = ==;

		*node[0x55d1be4f1c50] = 1;

		*node[0x55d1be4f1c80] = 0;

		*node[0x55d1be4f1cb0] = ;;

		*node[0x55d1be4f1ce0] = print;

		*node[0x55d1be4f1d10] = 4;

		*node[0x55d1be4f1d40] = else;

		*node[0x55d1be4f1d70] = op_no;

		*node[0x55d1be4f1da0] = ;;

		*node[0x55d1be4f1dd0] = print;

		*node[0x55d1be4f1e00] = 2;

		*node[0x55d1be4f1e30] = else;

		*node[0x55d1be4f1e60] = op_no;

		*node[0x55d1be4f1e90] = ;;

		*node[0x55d1be4f1ec0] = =;

		*node[0x55d1be4f1ef0] = 5;

		*node[0x55d1be4f1f20] = -;

		*node[0x55d1be4f1f50] = 0;

		*node[0x55d1be4f1f80] = /;

		*node[0x55d1be4f1fb0] = 1;

		*node[0x55d1be4f1fe0] = 0;

		*node[0x55d1be4f2010] = ;;

		*node[0x55d1be4f2040] = print;

		*node[0x55d1be4f2070] = 3;

		*node[0x55d1be4f20a0] = ;;

		*node[0x55d1be4f20d0] = print;

		*node[0x55d1be4f2100] = 5;

		*node[0x55d1be4f2130] = ;;

		*node[0x55d1be4f2160] = return;

		*node[0x55d1be4f2190] = 0;

		*node[0x55d1be4f21c0] = ;;

		*node[0x55d1be4f21f0] = 3;

		*node[0x55d1be4f2220] = 0;

		*node[0x55d1be4f2250] = 1;

		*node[0x55d1be4f2280] = 2;

		*node[0x55d1be4f22b0] = ;;

		*node[0x55d1be4f22e0] = =;

		*node[0x55d1be4f2310] = 3;

		*node[0x55d1be4f2340] = -;

		*node[0x55d1be4f2370] = 0;

		*node[0x55d1be4f23a0] = 1;

		*node[0x55d1be4f23d0] = ;;

		*node[0x55d1be4f2400] = =;

		*node[0x55d1be4f2430] = 4;

		*node[0x55d1be4f2460] = 1;

		*node[0x55d1be4f2490] = ;;

		*node[0x55d1be4f24c0] = =;

		*node[0x55d1be4f24f0] = 5;

		*node[0x55d1be4f2520] = 2;

		*node[0x55d1be4f2550] = ;;

		*node[0x55d1be4f2580] = if;

		*node[0x55d1be4f25b0] = op_no;

		*node[0x55d1be4f25e0] = ==;

		*node[0x55d1be4f2610] = 2;

		*node[0x55d1be4f2640] = 0;

		*node[0x55d1be4f2670] = ;;

		*node[0x55d1be4f26a0] = =;

		*node[0x55d1be4f26d0] = 6;

		*node[0x55d1be4f2700] = 0;

		*node[0x55d1be4f2730] = ;;

		*node[0x55d1be4f2760] = =;

		*node[0x55d1be4f2790] = 7;

		*node[0x55d1be4f27c0] = -;

		*node[0x55d1be4f27f0] = 0;

		*node[0x55d1be4f2820] = /;

		*node[0x55d1be4f2850] = 1;

		*node[0x55d1be4f2880] = 0;

		*node[0x55d1be4f28b0] = ;;

		*node[0x55d1be4f28e0] = print;

		*node[0x55d1be4f2910] = 5;

		*node[0x55d1be4f2940] = ;;

		*node[0x55d1be4f2970] = print;

		*node[0x55d1be4f29a0] = 6;

		*node[0x55d1be4f29d0] = 7;

		*node[0x55d1be4f2a00] = else;

		*node[0x55d1be4f2a30] = op_no;

		*node[0x55d1be4f2a60] = ;;

		*node[0x55d1be4f2a90] = =;

		*node[0x55d1be4f2ac0] = 8;

		*node[0x55d1be4f2af0] = -;

		*node[0x55d1be4f2b20] = *;

		*node[0x55d1be4f2b50] = 1;

		*node[0x55d1be4f2b80] = 1;

		*node[0x55d1be4f2bb0] = *;

		*node[0x55d1be4f2be0] = *;

		*node[0x55d1be4f2c10] = 4;

		*node[0x55d1be4f2c40] = 0;

		*node[0x55d1be4f2c70] = 2;

		*node[0x55d1be4f2ca0] = ;;

		*node[0x55d1be4f2cd0] = if;

		*node[0x55d1be4f2d00] = op_no;

		*node[0x55d1be4f2d30] = >;

		*node[0x55d1be4f2d60] = 8;

		*node[0x55d1be4f2d90] = 0;

		*node[0x55d1be4f2dc0] = ;;

		*node[0x55d1be4f2df0] = =;

		*node[0x55d1be4f2e20] = 9;

		*node[0x55d1be4f2e50] = sqrt;

		*node[0x55d1be4f2e80] = 8;

		*node[0x55d1be4f2eb0] = ;;

		*node[0x55d1be4f2ee0] = =;

		*node[0x55d1be4f2f10] = 6;

		*node[0x55d1be4f2f40] = /;

		*node[0x55d1be4f2f70] = -;

		*node[0x55d1be4f2fa0] = -;

		*node[0x55d1be4f2fd0] = 0;

		*node[0x55d1be4f3000] = 1;

		*node[0x55d1be4f3030] = 9;

		*node[0x55d1be4f3060] = *;

		*node[0x55d1be4f3090] = 2;

		*node[0x55d1be4f30c0] = 0;

		*node[0x55d1be4f30f0] = ;;

		*node[0x55d1be4f3120] = =;

		*node[0x55d1be4f3150] = 7;

		*node[0x55d1be4f3180] = /;

		*node[0x55d1be4f31b0] = +;

		*node[0x55d1be4f31e0] = -;

		*node[0x55d1be4f3210] = 0;

		*node[0x55d1be4f3240] = 1;

		*node[0x55d1be4f3270] = 9;

		*node[0x55d1be4f32a0] = *;

		*node[0x55d1be4f32d0] = 2;

		*node[0x55d1be4f3300] = 0;

		*node[0x55d1be4f3330] = ;;

		*node[0x55d1be4f3360] = print;

		*node[0x55d1be4f3390] = 5;

		*node[0x55d1be4f33c0] = ;;

		*node[0x55d1be4f33f0] = print;

		*node[0x55d1be4f3420] = 6;

		*node[0x55d1be4f3450] = 7;

		*node[0x55d1be4f3480] = elseif;

		*node[0x55d1be4f34b0] = op_no;

		*node[0x55d1be4f34e0] = ==;

		*node[0x55d1be4f3510] = 8;

		*node[0x55d1be4f3540] = 0;

		*node[0x55d1be4f3570] = ;;

		*node[0x55d1be4f35a0] = =;

		*node[0x55d1be4f35d0] = 10;

		*node[0x55d1be4f3600] = -;

		*node[0x55d1be4f3630] = 0;

		*node[0x55d1be4f3660] = /;

		*node[0x55d1be4f3690] = 1;

		*node[0x55d1be4f36c0] = *;

		*node[0x55d1be4f36f0] = 2;

		*node[0x55d1be4f3720] = 0;

		*node[0x55d1be4f3750] = ;;

		*node[0x55d1be4f3780] = print;

		*node[0x55d1be4f37b0] = 4;

		*node[0x55d1be4f37e0] = ;;

		*node[0x55d1be4f3810] = print;

		*node[0x55d1be4f3840] = 10;

		*node[0x55d1be4f3870] = else;

		*node[0x55d1be4f38a0] = op_no;

		*node[0x55d1be4f38d0] = ;;

		*node[0x55d1be4f3900] = print;

		*node[0x55d1be4f3930] = 3;

		*node[0x55d1be4f3960] = ;;

		*node[0x55d1be4f3990] = return;

		*node[0x55d1be4f39c0] = 0;

		*node[0x55d1be4f39f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff110154d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5aac277b3020] = ;;

		*node[0x5aac277b3050] = 0;

		*node[0x5aac277b3080] = ;;

		*node[0x5aac277b30b0] = input;

		*node[0x5aac277b30e0] = 0;

		*node[0x5aac277b3110] = 1;

		*node[0x5aac277b3140] = 2;

		*node[0x5aac277b3170] = ;;

		*node[0x5aac277b31d0] = 0;

		*node[0x5aac277b3200] = 1;

		*node[0x5aac277b3230] = 2;

		*node[0x5aac277b3260] = ;;

		*node[0x5aac277b3290] = 1;

		*node[0x5aac277b32c0] = 0;

		*node[0x5aac277b32f0] = 1;

		*node[0x5aac277b3320] = 2;

		*node[0x5aac277b3350] = ;;

		*node[0x5aac277b3380] = if;

		*node[0x5aac277b33b0] = op_no;

		*node[0x5aac277b33e0] = ==;

		*node[0x5aac277b3410] = 0;

		*node[0x5aac277b3440] = 0;

		*node[0x5aac277b3470] = ;;

		*node[0x5aac277b34d0] = 1;

		*node[0x5aac277b3500] = 2;

		*node[0x5aac277b3530] = else;

		*node[0x5aac277b3560] = op_no;

		*node[0x5aac277b3590] = ;;

		*node[0x5aac277b35f0] = 0;

		*node[0x5aac277b3620] = 1;

		*node[0x5aac277b3650] = 2;

		*node[0x5aac277b3680] = ;;

		*node[0x5aac277b36b0] = return;

		*node[0x5aac277b36e0] = 0;

		*node[0x5aac277b3710] = ;;

		*node[0x5aac277b3740] = 2;

		*node[0x5aac277b3770] = 0;

		*node[0x5aac277b37a0] = 1;

		*node[0x5aac277b37d0] = ;;

		*node[0x5aac277b3800] = =;

		*node[0x5aac277b3830] = 2;

		*node[0x5aac277b3860] = -;

		*node[0x5aac277b3890] = 0;

		*node[0x5aac277b38c0] = 1;

		*node[0x5aac277b38f0] = ;;

		*node[0x5aac277b3920] = =;

		*node[0x5aac277b3950] = 3;

		*node[0x5aac277b3980] = 1;

		*node[0x5aac277b39b0] = ;;

		*node[0x5aac277b39e0] = =;

		*node[0x5aac277b3a10] = 4;

		*node[0x5aac277b3a40] = 1000;

		*node[0x5aac277b3a70] = ;;

		*node[0x5aac277b3aa0] = if;

		*node[0x5aac277b3ad0] = op_no;

		*node[0x5aac277b3b00] = ==;

		*node[0x5aac277b3b30] = 0;

		*node[0x5aac277b3b60] = 0;

		*node[0x5aac277b3b90] = ;;

		*node[0x5aac277b3bc0] = if;

		*node[0x5aac277b3bf0] = op_no;

		*node[0x5aac277b3c20] = ==;

		*node[0x5aac277b3c50] = 1;

		*node[0x5aac277b3c80] = 0;

		*node[0x5aac277b3cb0] = ;;

		*node[0x5aac277b3ce0] = print;

		*node[0x5aac277b3d10] = 4;

		*node[0x5aac277b3d40] = else;

		*node[0x5aac277b3d70] = op_no;

		*node[0x5aac277b3da0] = ;;

		*node[0x5aac277b3dd0] = print;

		*node[0x5aac277b3e00] = 2;

		*node[0x5aac277b3e30] = else;

		*node[0x5aac277b3e60] = op_no;

		*node[0x5aac277b3e90] = ;;

		*node[0x5aac277b3ec0] = =;

		*node[0x5aac277b3ef0] = 5;

		*node[0x5aac277b3f20] = -;

		*node[0x5aac277b3f50] = 0;

		*node[0x5aac277b3f80] = /;

		*node[0x5aac277b3fb0] = 1;

		*node[0x5aac277b3fe0] = 0;

		*node[0x5aac277b4010] = ;;

		*node[0x5aac277b4040] = print;

		*node[0x5aac277b4070] = 3;

		*node[0x5aac277b40a0] = ;;

		*node[0x5aac277b40d0] = print;

		*node[0x5aac277b4100] = 5;

		*node[0x5aac277b4130] = ;;

		*node[0x5aac277b4160] = return;

		*node[0x5aac277b4190] = 0;

		*node[0x5aac277b41c0] = ;;

		*node[0x5aac277b41f0] = 3;

		*node[0x5aac277b4220] = 0;

		*node[0x5aac277b4250] = 1;

		*node[0x5aac277b4280] = 2;

		*node[0x5aac277b42b0] = ;;

		*node[0x5aac277b42e0] = =;

		*node[0x5aac277b4310] = 3;

		*node[0x5aac277b4340] = -;

		*node[0x5aac277b4370] = 0;

		*node[0x5aac277b43a0] = 1;

		*node[0x5aac277b43d0] = ;;

		*node[0x5aac277b4400] = =;

		*node[0x5aac277b4430] = 4;

		*node[0x5aac277b4460] = 1;

		*node[0x5aac277b4490] = ;;

		*node[0x5aac277b44c0] = =;

		*node[0x5aac277b44f0] = 5;

		*node[0x5aac277b4520] = 2;

		*node[0x5aac277b4550] = ;;

		*node[0x5aac277b4580] = if;

		*node[0x5aac277b45b0] = op_no;

		*node[0x5aac277b45e0] = ==;

		*node[0x5aac277b4610] = 2;

		*node[0x5aac277b4640] = 0;

		*node[0x5aac277b4670] = ;;

		*node[0x5aac277b46a0] = =;

		*node[0x5aac277b46d0] = 6;

		*node[0x5aac277b4700] = 0;

		*node[0x5aac277b4730] = ;;

		*node[0x5aac277b4760] = =;

		*node[0x5aac277b4790] = 7;

		*node[0x5aac277b47c0] = -;

		*node[0x5aac277b47f0] = 0;

		*node[0x5aac277b4820] = /;

		*node[0x5aac277b4850] = 1;

		*node[0x5aac277b4880] = 0;

		*node[0x5aac277b48b0] = ;;

		*node[0x5aac277b48e0] = print;

		*node[0x5aac277b4910] = 5;

		*node[0x5aac277b4940] = ;;

		*node[0x5aac277b4970] = print;

		*node[0x5aac277b49a0] = 6;

		*node[0x5aac277b49d0] = 7;

		*node[0x5aac277b4a00] = else;

		*node[0x5aac277b4a30] = op_no;

		*node[0x5aac277b4a60] = ;;

		*node[0x5aac277b4a90] = =;

		*node[0x5aac277b4ac0] = 8;

		*node[0x5aac277b4af0] = -;

		*node[0x5aac277b4b20] = *;

		*node[0x5aac277b4b50] = 1;

		*node[0x5aac277b4b80] = 1;

		*node[0x5aac277b4bb0] = *;

		*node[0x5aac277b4be0] = *;

		*node[0x5aac277b4c10] = 4;

		*node[0x5aac277b4c40] = 0;

		*node[0x5aac277b4c70] = 2;

		*node[0x5aac277b4ca0] = ;;

		*node[0x5aac277b4cd0] = if;

		*node[0x5aac277b4d00] = op_no;

		*node[0x5aac277b4d30] = >;

		*node[0x5aac277b4d60] = 8;

		*node[0x5aac277b4d90] = 0;

		*node[0x5aac277b4dc0] = ;;

		*node[0x5aac277b4df0] = =;

		*node[0x5aac277b4e20] = 9;

		*node[0x5aac277b4e50] = sqrt;

		*node[0x5aac277b4e80] = 8;

		*node[0x5aac277b4eb0] = ;;

		*node[0x5aac277b4ee0] = =;

		*node[0x5aac277b4f10] = 6;

		*node[0x5aac277b4f40] = /;

		*node[0x5aac277b4f70] = -;

		*node[0x5aac277b4fa0] = -;

		*node[0x5aac277b4fd0] = 0;

		*node[0x5aac277b5000] = 1;

		*node[0x5aac277b5030] = 9;

		*node[0x5aac277b5060] = *;

		*node[0x5aac277b5090] = 2;

		*node[0x5aac277b50c0] = 0;

		*node[0x5aac277b50f0] = ;;

		*node[0x5aac277b5120] = =;

		*node[0x5aac277b5150] = 7;

		*node[0x5aac277b5180] = /;

		*node[0x5aac277b51b0] = +;

		*node[0x5aac277b51e0] = -;

		*node[0x5aac277b5210] = 0;

		*node[0x5aac277b5240] = 1;

		*node[0x5aac277b5270] = 9;

		*node[0x5aac277b52a0] = *;

		*node[0x5aac277b52d0] = 2;

		*node[0x5aac277b5300] = 0;

		*node[0x5aac277b5330] = ;;

		*node[0x5aac277b5360] = print;

		*node[0x5aac277b5390] = 5;

		*node[0x5aac277b53c0] = ;;

		*node[0x5aac277b53f0] = print;

		*node[0x5aac277b5420] = 6;

		*node[0x5aac277b5450] = 7;

		*node[0x5aac277b5480] = elseif;

		*node[0x5aac277b54b0] = op_no;

		*node[0x5aac277b54e0] = ==;

		*node[0x5aac277b5510] = 8;

		*node[0x5aac277b5540] = 0;

		*node[0x5aac277b5570] = ;;

		*node[0x5aac277b55a0] = =;

		*node[0x5aac277b55d0] = 10;

		*node[0x5aac277b5600] = -;

		*node[0x5aac277b5630] = 0;

		*node[0x5aac277b5660] = /;

		*node[0x5aac277b5690] = 1;

		*node[0x5aac277b56c0] = *;

		*node[0x5aac277b56f0] = 2;

		*node[0x5aac277b5720] = 0;

		*node[0x5aac277b5750] = ;;

		*node[0x5aac277b5780] = print;

		*node[0x5aac277b57b0] = 4;

		*node[0x5aac277b57e0] = ;;

		*node[0x5aac277b5810] = print;

		*node[0x5aac277b5840] = 10;

		*node[0x5aac277b5870] = else;

		*node[0x5aac277b58a0] = op_no;

		*node[0x5aac277b58d0] = ;;

		*node[0x5aac277b5900] = print;

		*node[0x5aac277b5930] = 3;

		*node[0x5aac277b5960] = ;;

		*node[0x5aac277b5990] = return;

		*node[0x5aac277b59c0] = 0;

		*node[0x5aac277b59f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe1dbc5390] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x57aadbeb3020] = ;;

		*node[0x57aadbeb3050] = 0;

		*node[0x57aadbeb3080] = ;;

		*node[0x57aadbeb30b0] = input;

		*node[0x57aadbeb30e0] = 0;

		*node[0x57aadbeb3110] = 1;

		*node[0x57aadbeb3140] = 2;

		*node[0x57aadbeb3170] = ;;

		*node[0x57aadbeb31d0] = 0;

		*node[0x57aadbeb3200] = 1;

		*node[0x57aadbeb3230] = 2;

		*node[0x57aadbeb3260] = ;;

		*node[0x57aadbeb3290] = 1;

		*node[0x57aadbeb32c0] = 0;

		*node[0x57aadbeb32f0] = 1;

		*node[0x57aadbeb3320] = 2;

		*node[0x57aadbeb3350] = ;;

		*node[0x57aadbeb3380] = if;

		*node[0x57aadbeb33b0] = op_no;

		*node[0x57aadbeb33e0] = ==;

		*node[0x57aadbeb3410] = 0;

		*node[0x57aadbeb3440] = 0;

		*node[0x57aadbeb3470] = ;;

		*node[0x57aadbeb34d0] = 1;

		*node[0x57aadbeb3500] = 2;

		*node[0x57aadbeb3530] = else;

		*node[0x57aadbeb3560] = op_no;

		*node[0x57aadbeb3590] = ;;

		*node[0x57aadbeb35f0] = 0;

		*node[0x57aadbeb3620] = 1;

		*node[0x57aadbeb3650] = 2;

		*node[0x57aadbeb3680] = ;;

		*node[0x57aadbeb36b0] = return;

		*node[0x57aadbeb36e0] = 0;

		*node[0x57aadbeb3710] = ;;

		*node[0x57aadbeb3740] = 2;

		*node[0x57aadbeb3770] = 0;

		*node[0x57aadbeb37a0] = 1;

		*node[0x57aadbeb37d0] = ;;

		*node[0x57aadbeb3800] = =;

		*node[0x57aadbeb3830] = 2;

		*node[0x57aadbeb3860] = -;

		*node[0x57aadbeb3890] = 0;

		*node[0x57aadbeb38c0] = 1;

		*node[0x57aadbeb38f0] = ;;

		*node[0x57aadbeb3920] = =;

		*node[0x57aadbeb3950] = 3;

		*node[0x57aadbeb3980] = 1;

		*node[0x57aadbeb39b0] = ;;

		*node[0x57aadbeb39e0] = =;

		*node[0x57aadbeb3a10] = 4;

		*node[0x57aadbeb3a40] = 1000;

		*node[0x57aadbeb3a70] = ;;

		*node[0x57aadbeb3aa0] = if;

		*node[0x57aadbeb3ad0] = op_no;

		*node[0x57aadbeb3b00] = ==;

		*node[0x57aadbeb3b30] = 0;

		*node[0x57aadbeb3b60] = 0;

		*node[0x57aadbeb3b90] = ;;

		*node[0x57aadbeb3bc0] = if;

		*node[0x57aadbeb3bf0] = op_no;

		*node[0x57aadbeb3c20] = ==;

		*node[0x57aadbeb3c50] = 1;

		*node[0x57aadbeb3c80] = 0;

		*node[0x57aadbeb3cb0] = ;;

		*node[0x57aadbeb3ce0] = print;

		*node[0x57aadbeb3d10] = 4;

		*node[0x57aadbeb3d40] = else;

		*node[0x57aadbeb3d70] = op_no;

		*node[0x57aadbeb3da0] = ;;

		*node[0x57aadbeb3dd0] = print;

		*node[0x57aadbeb3e00] = 2;

		*node[0x57aadbeb3e30] = else;

		*node[0x57aadbeb3e60] = op_no;

		*node[0x57aadbeb3e90] = ;;

		*node[0x57aadbeb3ec0] = =;

		*node[0x57aadbeb3ef0] = 5;

		*node[0x57aadbeb3f20] = -;

		*node[0x57aadbeb3f50] = 0;

		*node[0x57aadbeb3f80] = /;

		*node[0x57aadbeb3fb0] = 1;

		*node[0x57aadbeb3fe0] = 0;

		*node[0x57aadbeb4010] = ;;

		*node[0x57aadbeb4040] = print;

		*node[0x57aadbeb4070] = 3;

		*node[0x57aadbeb40a0] = ;;

		*node[0x57aadbeb40d0] = print;

		*node[0x57aadbeb4100] = 5;

		*node[0x57aadbeb4130] = ;;

		*node[0x57aadbeb4160] = return;

		*node[0x57aadbeb4190] = 0;

		*node[0x57aadbeb41c0] = ;;

		*node[0x57aadbeb41f0] = 3;

		*node[0x57aadbeb4220] = 0;

		*node[0x57aadbeb4250] = 1;

		*node[0x57aadbeb4280] = 2;

		*node[0x57aadbeb42b0] = ;;

		*node[0x57aadbeb42e0] = =;

		*node[0x57aadbeb4310] = 3;

		*node[0x57aadbeb4340] = -;

		*node[0x57aadbeb4370] = 0;

		*node[0x57aadbeb43a0] = 1;

		*node[0x57aadbeb43d0] = ;;

		*node[0x57aadbeb4400] = =;

		*node[0x57aadbeb4430] = 4;

		*node[0x57aadbeb4460] = 1;

		*node[0x57aadbeb4490] = ;;

		*node[0x57aadbeb44c0] = =;

		*node[0x57aadbeb44f0] = 5;

		*node[0x57aadbeb4520] = 2;

		*node[0x57aadbeb4550] = ;;

		*node[0x57aadbeb4580] = if;

		*node[0x57aadbeb45b0] = op_no;

		*node[0x57aadbeb45e0] = ==;

		*node[0x57aadbeb4610] = 2;

		*node[0x57aadbeb4640] = 0;

		*node[0x57aadbeb4670] = ;;

		*node[0x57aadbeb46a0] = =;

		*node[0x57aadbeb46d0] = 6;

		*node[0x57aadbeb4700] = 0;

		*node[0x57aadbeb4730] = ;;

		*node[0x57aadbeb4760] = =;

		*node[0x57aadbeb4790] = 7;

		*node[0x57aadbeb47c0] = -;

		*node[0x57aadbeb47f0] = 0;

		*node[0x57aadbeb4820] = /;

		*node[0x57aadbeb4850] = 1;

		*node[0x57aadbeb4880] = 0;

		*node[0x57aadbeb48b0] = ;;

		*node[0x57aadbeb48e0] = print;

		*node[0x57aadbeb4910] = 5;

		*node[0x57aadbeb4940] = ;;

		*node[0x57aadbeb4970] = print;

		*node[0x57aadbeb49a0] = 6;

		*node[0x57aadbeb49d0] = 7;

		*node[0x57aadbeb4a00] = else;

		*node[0x57aadbeb4a30] = op_no;

		*node[0x57aadbeb4a60] = ;;

		*node[0x57aadbeb4a90] = =;

		*node[0x57aadbeb4ac0] = 8;

		*node[0x57aadbeb4af0] = -;

		*node[0x57aadbeb4b20] = *;

		*node[0x57aadbeb4b50] = 1;

		*node[0x57aadbeb4b80] = 1;

		*node[0x57aadbeb4bb0] = *;

		*node[0x57aadbeb4be0] = *;

		*node[0x57aadbeb4c10] = 4;

		*node[0x57aadbeb4c40] = 0;

		*node[0x57aadbeb4c70] = 2;

		*node[0x57aadbeb4ca0] = ;;

		*node[0x57aadbeb4cd0] = if;

		*node[0x57aadbeb4d00] = op_no;

		*node[0x57aadbeb4d30] = >;

		*node[0x57aadbeb4d60] = 8;

		*node[0x57aadbeb4d90] = 0;

		*node[0x57aadbeb4dc0] = ;;

		*node[0x57aadbeb4df0] = =;

		*node[0x57aadbeb4e20] = 9;

		*node[0x57aadbeb4e50] = sqrt;

		*node[0x57aadbeb4e80] = 8;

		*node[0x57aadbeb4eb0] = ;;

		*node[0x57aadbeb4ee0] = =;

		*node[0x57aadbeb4f10] = 6;

		*node[0x57aadbeb4f40] = /;

		*node[0x57aadbeb4f70] = -;

		*node[0x57aadbeb4fa0] = -;

		*node[0x57aadbeb4fd0] = 0;

		*node[0x57aadbeb5000] = 1;

		*node[0x57aadbeb5030] = 9;

		*node[0x57aadbeb5060] = *;

		*node[0x57aadbeb5090] = 2;

		*node[0x57aadbeb50c0] = 0;

		*node[0x57aadbeb50f0] = ;;

		*node[0x57aadbeb5120] = =;

		*node[0x57aadbeb5150] = 7;

		*node[0x57aadbeb5180] = /;

		*node[0x57aadbeb51b0] = +;

		*node[0x57aadbeb51e0] = -;

		*node[0x57aadbeb5210] = 0;

		*node[0x57aadbeb5240] = 1;

		*node[0x57aadbeb5270] = 9;

		*node[0x57aadbeb52a0] = *;

		*node[0x57aadbeb52d0] = 2;

		*node[0x57aadbeb5300] = 0;

		*node[0x57aadbeb5330] = ;;

		*node[0x57aadbeb5360] = print;

		*node[0x57aadbeb5390] = 5;

		*node[0x57aadbeb53c0] = ;;

		*node[0x57aadbeb53f0] = print;

		*node[0x57aadbeb5420] = 6;

		*node[0x57aadbeb5450] = 7;

		*node[0x57aadbeb5480] = elseif;

		*node[0x57aadbeb54b0] = op_no;

		*node[0x57aadbeb54e0] = ==;

		*node[0x57aadbeb5510] = 8;

		*node[0x57aadbeb5540] = 0;

		*node[0x57aadbeb5570] = ;;

		*node[0x57aadbeb55a0] = =;

		*node[0x57aadbeb55d0] = 10;

		*node[0x57aadbeb5600] = -;

		*node[0x57aadbeb5630] = 0;

		*node[0x57aadbeb5660] = /;

		*node[0x57aadbeb5690] = 1;

		*node[0x57aadbeb56c0] = *;

		*node[0x57aadbeb56f0] = 2;

		*node[0x57aadbeb5720] = 0;

		*node[0x57aadbeb5750] = ;;

		*node[0x57aadbeb5780] = print;

		*node[0x57aadbeb57b0] = 4;

		*node[0x57aadbeb57e0] = ;;

		*node[0x57aadbeb5810] = print;

		*node[0x57aadbeb5840] = 10;

		*node[0x57aadbeb5870] = else;

		*node[0x57aadbeb58a0] = op_no;

		*node[0x57aadbeb58d0] = ;;

		*node[0x57aadbeb5900] = print;

		*node[0x57aadbeb5930] = 3;

		*node[0x57aadbeb5960] = ;;

		*node[0x57aadbeb5990] = return;

		*node[0x57aadbeb59c0] = 0;

		*node[0x57aadbeb59f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd92667610] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5fe160c633c0] = ;;

		*node[0x5fe160c63440] = 0;

		*node[0x5fe160c63470] = ;;

		*node[0x5fe160c634a0] = input;

		*node[0x5fe160c634d0] = 0;

		*node[0x5fe160c63500] = 1;

		*node[0x5fe160c63530] = 2;

		*node[0x5fe160c63590] = ;;

		*node[0x5fe160c635f0] = 0;

		*node[0x5fe160c63620] = 1;

		*node[0x5fe160c63650] = 2;

		*node[0x5fe160c63680] = ;;

		*node[0x5fe160c63700] = 1;

		*node[0x5fe160c63730] = 0;

		*node[0x5fe160c63760] = 1;

		*node[0x5fe160c63790] = 2;

		*node[0x5fe160c637f0] = ;;

		*node[0x5fe160c63820] = if;

		*node[0x5fe160c63850] = op_no;

		*node[0x5fe160c638e0] = ==;

		*node[0x5fe160c63880] = 0;

		*node[0x5fe160c638b0] = 0;

		*node[0x5fe160c63910] = ;;

		*node[0x5fe160c63970] = 1;

		*node[0x5fe160c639a0] = 2;

		*node[0x5fe160c639d0] = else;

		*node[0x5fe160c63a00] = op_no;

		*node[0x5fe160c63a30] = ;;

		*node[0x5fe160c63ae0] = 0;

		*node[0x5fe160c63b10] = 1;

		*node[0x5fe160c63b40] = 2;

		*node[0x5fe160c63b70] = ;;

		*node[0x5fe160c63ba0] = return;

		*node[0x5fe160c63bd0] = 0;

		*node[0x5fe160c63c00] = ;;

		*node[0x5fe160c63c80] = 2;

		*node[0x5fe160c63ce0] = 0;

		*node[0x5fe160c63d10] = 1;

		*node[0x5fe160c63d40] = ;;

		*node[0x5fe160c63e60] = =;

		*node[0x5fe160c63d70] = 2;

		*node[0x5fe160c63e30] = -;

		*node[0x5fe160c63dd0] = 0;

		*node[0x5fe160c63e00] = 1;

		*node[0x5fe160c63e90] = ;;

		*node[0x5fe160c63f20] = =;

		*node[0x5fe160c63ec0] = 3;

		*node[0x5fe160c63ef0] = 1;

		*node[0x5fe160c63f50] = ;;

		*node[0x5fe160c64030] = =;

		*node[0x5fe160c63f80] = 4;

		*node[0x5fe160c64000] = 1000;

		*node[0x5fe160c64060] = ;;

		*node[0x5fe160c64090] = if;

		*node[0x5fe160c640c0] = op_no;

		*node[0x5fe160c64150] = ==;

		*node[0x5fe160c640f0] = 0;

		*node[0x5fe160c64120] = 0;

		*node[0x5fe160c64180] = ;;

		*node[0x5fe160c641b0] = if;

		*node[0x5fe160c641e0] = op_no;

		*node[0x5fe160c64270] = ==;

		*node[0x5fe160c64210] = 1;

		*node[0x5fe160c64240] = 0;

		*node[0x5fe160c642a0] = ;;

		*node[0x5fe160c642d0] = print;

		*node[0x5fe160c64300] = 4;

		*node[0x5fe160c64330] = else;

		*node[0x5fe160c64360] = op_no;

		*node[0x5fe160c64390] = ;;

		*node[0x5fe160c643c0] = print;

		*node[0x5fe160c643f0] = 2;

		*node[0x5fe160c64420] = else;

		*node[0x5fe160c64450] = op_no;

		*node[0x5fe160c64480] = ;;

		*node[0x5fe160c645d0] = =;

		*node[0x5fe160c644b0] = 5;

		*node[0x5fe160c645a0] = -;

		*node[0x5fe160c644e0] = 0;

		*node[0x5fe160c64570] = /;

		*node[0x5fe160c64510] = 1;

		*node[0x5fe160c64540] = 0;

		*node[0x5fe160c64600] = ;;

		*node[0x5fe160c64630] = print;

		*node[0x5fe160c64660] = 3;

		*node[0x5fe160c64690] = ;;

		*node[0x5fe160c646c0] = print;

		*node[0x5fe160c646f0] = 5;

		*node[0x5fe160c64720] = ;;

		*node[0x5fe160c64750] = return;

		*node[0x5fe160c64780] = 0;

		*node[0x5fe160c647b0] = ;;

		*node[0x5fe160c64830] = 3;

		*node[0x5fe160c64860] = 0;

		*node[0x5fe160c64890] = 1;

		*node[0x5fe160c648c0] = 2;

		*node[0x5fe160c64920] = ;;

		*node[0x5fe160c64a10] = =;

		*node[0x5fe160c64950] = 3;

		*node[0x5fe160c649e0] = -;

		*node[0x5fe160c64980] = 0;

		*node[0x5fe160c649b0] = 1;

		*node[0x5fe160c64a40] = ;;

		*node[0x5fe160c64b20] = =;

		*node[0x5fe160c64a70] = 4;

		*node[0x5fe160c64af0] = 1;

		*node[0x5fe160c64b50] = ;;

		*node[0x5fe160c64be0] = =;

		*node[0x5fe160c64b80] = 5;

		*node[0x5fe160c64bb0] = 2;

		*node[0x5fe160c64c10] = ;;

		*node[0x5fe160c64c40] = if;

		*node[0x5fe160c64c70] = op_no;

		*node[0x5fe160c64d00] = ==;

		*node[0x5fe160c64ca0] = 2;

		*node[0x5fe160c64cd0] = 0;

		*node[0x5fe160c64d30] = ;;

		*node[0x5fe160c64dc0] = =;

		*node[0x5fe160c64d60] = 6;

		*node[0x5fe160c64d90] = 0;

		*node[0x5fe160c64df0] = ;;

		*node[0x5fe160c64f40] = =;

		*node[0x5fe160c64e20] = 7;

		*node[0x5fe160c64f10] = -;

		*node[0x5fe160c64e50] = 0;

		*node[0x5fe160c64ee0] = /;

		*node[0x5fe160c64e80] = 1;

		*node[0x5fe160c64eb0] = 0;

		*node[0x5fe160c64f70] = ;;

		*node[0x5fe160c64fa0] = print;

		*node[0x5fe160c64fd0] = 5;

		*node[0x5fe160c65000] = ;;

		*node[0x5fe160c65030] = print;

		*node[0x5fe160c65060] = 6;

		*node[0x5fe160c65090] = 7;

		*node[0x5fe160c650c0] = else;

		*node[0x5fe160c650f0] = op_no;

		*node[0x5fe160c65120] = ;;

		*node[0x5fe160c653c0] = =;

		*node[0x5fe160c65150] = 8;

		*node[0x5fe160c65390] = -;

		*node[0x5fe160c65270] = *;

		*node[0x5fe160c65210] = 1;

		*node[0x5fe160c65240] = 1;

		*node[0x5fe160c65360] = *;

		*node[0x5fe160c65300] = *;

		*node[0x5fe160c652a0] = 4;

		*node[0x5fe160c652d0] = 0;

		*node[0x5fe160c65330] = 2;

		*node[0x5fe160c653f0] = ;;

		*node[0x5fe160c65420] = if;

		*node[0x5fe160c65450] = op_no;

		*node[0x5fe160c654e0] = >;

		*node[0x5fe160c65480] = 8;

		*node[0x5fe160c654b0] = 0;

		*node[0x5fe160c65510] = ;;

		*node[0x5fe160c655d0] = =;

		*node[0x5fe160c65540] = 9;

		*node[0x5fe160c655a0] = sqrt;

		*node[0x5fe160c65570] = 8;

		*node[0x5fe160c65600] = ;;

		*node[0x5fe160c65810] = =;

		*node[0x5fe160c65630] = 6;

		*node[0x5fe160c657e0] = -;

		*node[0x5fe160c656c0] = -;

		*node[0x5fe160c65660] = 0;

		*node[0x5fe160c65690] = 1;

		*node[0x5fe160c657b0] = *;

		*node[0x5fe160c65750] = /;

		*node[0x5fe160c656f0] = 9;

		*node[0x5fe160c65720] = 2;

		*node[0x5fe160c65780] = 0;

		*node[0x5fe160c65840] = ;;

		*node[0x5fe160c65a50] = =;

		*node[0x5fe160c65870] = 7;

		*node[0x5fe160c65a20] = +;

		*node[0x5fe160c65900] = -;

		*node[0x5fe160c658a0] = 0;

		*node[0x5fe160c658d0] = 1;

		*node[0x5fe160c659f0] = *;

		*node[0x5fe160c65990] = /;

		*node[0x5fe160c65930] = 9;

		*node[0x5fe160c65960] = 2;

		*node[0x5fe160c659c0] = 0;

		*node[0x5fe160c65a80] = ;;

		*node[0x5fe160c65ab0] = print;

		*node[0x5fe160c65ae0] = 5;

		*node[0x5fe160c65b10] = ;;

		*node[0x5fe160c65b40] = print;

		*node[0x5fe160c65b70] = 6;

		*node[0x5fe160c65ba0] = 7;

		*node[0x5fe160c65bd0] = elseif;

		*node[0x5fe160c65c00] = op_no;

		*node[0x5fe160c65c90] = ==;

		*node[0x5fe160c65c30] = 8;

		*node[0x5fe160c65c60] = 0;

		*node[0x5fe160c65cc0] = ;;

		*node[0x5fe160c65e70] = =;

		*node[0x5fe160c65cf0] = 10;

		*node[0x5fe160c65e40] = -;

		*node[0x5fe160c65d20] = 0;

		*node[0x5fe160c65e10] = *;

		*node[0x5fe160c65db0] = /;

		*node[0x5fe160c65d50] = 1;

		*node[0x5fe160c65d80] = 2;

		*node[0x5fe160c65de0] = 0;

		*node[0x5fe160c65ea0] = ;;

		*node[0x5fe160c65ed0] = print;

		*node[0x5fe160c65f00] = 4;

		*node[0x5fe160c65f30] = ;;

		*node[0x5fe160c65f60] = print;

		*node[0x5fe160c65f90] = 10;

		*node[0x5fe160c65fc0] = else;

		*node[0x5fe160c65ff0] = op_no;

		*node[0x5fe160c66020] = ;;

		*node[0x5fe160c66050] = print;

		*node[0x5fe160c66080] = 3;

		*node[0x5fe160c660b0] = ;;

		*node[0x5fe160c660e0] = return;

		*node[0x5fe160c66110] = 0;

		*node[0x5fe160c66140] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff579f4220] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5914a0f9cef0] = ;;

		*node[0x5914a0f9cf70] = 0;

		*node[0x5914a0f9cfa0] = ;;

		*node[0x5914a0f9cfd0] = input;

		*node[0x5914a0f9d000] = 0;

		*node[0x5914a0f9d030] = ;;

		*node[0x5914a0f9d0c0] = =;

		*node[0x5914a0f9d060] = 1;

		*node[0x5914a0f9d090] = 1;

		*node[0x5914a0f9d0f0] = ;;

		*node[0x5914a0f9d120] = if;

		*node[0x5914a0f9d150] = op_no;

		*node[0x5914a0f9d2a0] = ||;

		*node[0x5914a0f9d1e0] = <;

		*node[0x5914a0f9d180] = 0;

		*node[0x5914a0f9d1b0] = 0;

		*node[0x5914a0f9d270] = ==;

		*node[0x5914a0f9d210] = 0;

		*node[0x5914a0f9d240] = 0;

		*node[0x5914a0f9d2d0] = ;;

		*node[0x5914a0f9d300] = print;

		*node[0x5914a0f9d330] = 1;

		*node[0x5914a0f9d360] = else;

		*node[0x5914a0f9d390] = op_no;

		*node[0x5914a0f9d3c0] = ;;

		*node[0x5914a0f9d4b0] = =;

		*node[0x5914a0f9d3f0] = 2;

		*node[0x5914a0f9d480] = 0;

		*node[0x5914a0f9d4e0] = ;;

		*node[0x5914a0f9d510] = print;

		*node[0x5914a0f9d540] = 2;

		*node[0x5914a0f9d570] = ;;

		*node[0x5914a0f9d680] = =;

		*node[0x5914a0f9d5a0] = 2;

		*node[0x5914a0f9d650] = 0;

		*node[0x5914a0f9d6b0] = ;;

		*node[0x5914a0f9d6e0] = print;

		*node[0x5914a0f9d710] = 2;

		*node[0x5914a0f9d740] = ;;

		*node[0x5914a0f9d7c0] = 2;

		*node[0x5914a0f9d7f0] = 0;

		*node[0x5914a0f9d820] = ;;

		*node[0x5914a0f9d850] = if;

		*node[0x5914a0f9d880] = op_no;

		*node[0x5914a0f9d9d0] = ||;

		*node[0x5914a0f9d910] = ==;

		*node[0x5914a0f9d8b0] = 0;

		*node[0x5914a0f9d8e0] = 2;

		*node[0x5914a0f9d9a0] = ==;

		*node[0x5914a0f9d940] = 0;

		*node[0x5914a0f9d970] = 1;

		*node[0x5914a0f9da00] = ;;

		*node[0x5914a0f9da30] = return;

		*node[0x5914a0f9da60] = 0;

		*node[0x5914a0f9da90] = ;;

		*node[0x5914a0f9db80] = =;

		*node[0x5914a0f9dac0] = 1;

		*node[0x5914a0f9db50] = -;

		*node[0x5914a0f9daf0] = 0;

		*node[0x5914a0f9db20] = 1;

		*node[0x5914a0f9dbb0] = ;;

		*node[0x5914a0f9dcd0] = =;

		*node[0x5914a0f9dbe0] = 2;

		*node[0x5914a0f9dca0] = -;

		*node[0x5914a0f9dc40] = 0;

		*node[0x5914a0f9dc70] = 2;

		*node[0x5914a0f9dd00] = ;;

		*node[0x5914a0f9ddc0] = =;

		*node[0x5914a0f9dd30] = 1;

		*node[0x5914a0f9dd90] = 1;

		*node[0x5914a0f9ddf0] = ;;

		*node[0x5914a0f9deb0] = =;

		*node[0x5914a0f9de20] = 2;

		*node[0x5914a0f9de80] = 2;

		*node[0x5914a0f9dee0] = ;;

		*node[0x5914a0f9df10] = return;

		*node[0x5914a0f9dfa0] = +;

		*node[0x5914a0f9df40] = 2;

		*node[0x5914a0f9df70] = 1;

		*node[0x5914a0f9dfd0] = ;;

		*node[0x5914a0f9e050] = 1;

		*node[0x5914a0f9e0b0] = 0;

		*node[0x5914a0f9e0e0] = ;;

		*node[0x5914a0f9e110] = if;

		*node[0x5914a0f9e140] = op_no;

		*node[0x5914a0f9e1d0] = ==;

		*node[0x5914a0f9e170] = 0;

		*node[0x5914a0f9e1a0] = 1;

		*node[0x5914a0f9e200] = ;;

		*node[0x5914a0f9e230] = return;

		*node[0x5914a0f9e260] = 0;

		*node[0x5914a0f9e290] = ;;

		*node[0x5914a0f9e380] = =;

		*node[0x5914a0f9e2c0] = 1;

		*node[0x5914a0f9e350] = -;

		*node[0x5914a0f9e2f0] = 0;

		*node[0x5914a0f9e320] = 1;

		*node[0x5914a0f9e3b0] = ;;

		*node[0x5914a0f9e500] = =;

		*node[0x5914a0f9e3e0] = 0;

		*node[0x5914a0f9e4d0] = *;

		*node[0x5914a0f9e410] = 0;

		*node[0x5914a0f9e4a0] = 1;

		*node[0x5914a0f9e530] = ;;

		*node[0x5914a0f9e560] = return;

		*node[0x5914a0f9e590] = 0;

		*node[0x5914a0f9e5c0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcca0839c0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5ca733a0eef0] = ;;

		*node[0x5ca733a0ef70] = 0;

		*node[0x5ca733a0efa0] = ;;

		*node[0x5ca733a0efd0] = input;

		*node[0x5ca733a0f000] = 0;

		*node[0x5ca733a0f030] = ;;

		*node[0x5ca733a0f0c0] = =;

		*node[0x5ca733a0f060] = 1;

		*node[0x5ca733a0f090] = 1;

		*node[0x5ca733a0f0f0] = ;;

		*node[0x5ca733a0f120] = if;

		*node[0x5ca733a0f150] = op_no;

		*node[0x5ca733a0f2a0] = ||;

		*node[0x5ca733a0f1e0] = <;

		*node[0x5ca733a0f180] = 0;

		*node[0x5ca733a0f1b0] = 0;

		*node[0x5ca733a0f270] = ==;

		*node[0x5ca733a0f210] = 0;

		*node[0x5ca733a0f240] = 0;

		*node[0x5ca733a0f2d0] = ;;

		*node[0x5ca733a0f300] = print;

		*node[0x5ca733a0f330] = 1;

		*node[0x5ca733a0f360] = else;

		*node[0x5ca733a0f390] = op_no;

		*node[0x5ca733a0f3c0] = ;;

		*node[0x5ca733a0f4b0] = =;

		*node[0x5ca733a0f3f0] = 2;

		*node[0x5ca733a0f480] = 0;

		*node[0x5ca733a0f4e0] = ;;

		*node[0x5ca733a0f510] = print;

		*node[0x5ca733a0f540] = 2;

		*node[0x5ca733a0f570] = ;;

		*node[0x5ca733a0f680] = =;

		*node[0x5ca733a0f5a0] = 2;

		*node[0x5ca733a0f650] = 0;

		*node[0x5ca733a0f6b0] = ;;

		*node[0x5ca733a0f6e0] = print;

		*node[0x5ca733a0f710] = 2;

		*node[0x5ca733a0f740] = ;;

		*node[0x5ca733a0f7c0] = 2;

		*node[0x5ca733a0f7f0] = 0;

		*node[0x5ca733a0f820] = ;;

		*node[0x5ca733a0f850] = if;

		*node[0x5ca733a0f880] = op_no;

		*node[0x5ca733a0f9d0] = ||;

		*node[0x5ca733a0f910] = ==;

		*node[0x5ca733a0f8b0] = 0;

		*node[0x5ca733a0f8e0] = 2;

		*node[0x5ca733a0f9a0] = ==;

		*node[0x5ca733a0f940] = 0;

		*node[0x5ca733a0f970] = 1;

		*node[0x5ca733a0fa00] = ;;

		*node[0x5ca733a0fa30] = return;

		*node[0x5ca733a0fa60] = 0;

		*node[0x5ca733a0fa90] = ;;

		*node[0x5ca733a0fb80] = =;

		*node[0x5ca733a0fac0] = 1;

		*node[0x5ca733a0fb50] = -;

		*node[0x5ca733a0faf0] = 0;

		*node[0x5ca733a0fb20] = 1;

		*node[0x5ca733a0fbb0] = ;;

		*node[0x5ca733a0fcd0] = =;

		*node[0x5ca733a0fbe0] = 2;

		*node[0x5ca733a0fca0] = -;

		*node[0x5ca733a0fc40] = 0;

		*node[0x5ca733a0fc70] = 2;

		*node[0x5ca733a0fd00] = ;;

		*node[0x5ca733a0fdc0] = =;

		*node[0x5ca733a0fd30] = 1;

		*node[0x5ca733a0fd90] = 1;

		*node[0x5ca733a0fdf0] = ;;

		*node[0x5ca733a0feb0] = =;

		*node[0x5ca733a0fe20] = 2;

		*node[0x5ca733a0fe80] = 2;

		*node[0x5ca733a0fee0] = ;;

		*node[0x5ca733a0ff10] = return;

		*node[0x5ca733a0ffa0] = +;

		*node[0x5ca733a0ff40] = 2;

		*node[0x5ca733a0ff70] = 1;

		*node[0x5ca733a0ffd0] = ;;

		*node[0x5ca733a10050] = 1;

		*node[0x5ca733a100b0] = 0;

		*node[0x5ca733a100e0] = ;;

		*node[0x5ca733a10110] = if;

		*node[0x5ca733a10140] = op_no;

		*node[0x5ca733a101d0] = ==;

		*node[0x5ca733a10170] = 0;

		*node[0x5ca733a101a0] = 1;

		*node[0x5ca733a10200] = ;;

		*node[0x5ca733a10230] = return;

		*node[0x5ca733a10260] = 0;

		*node[0x5ca733a10290] = ;;

		*node[0x5ca733a10380] = =;

		*node[0x5ca733a102c0] = 1;

		*node[0x5ca733a10350] = -;

		*node[0x5ca733a102f0] = 0;

		*node[0x5ca733a10320] = 1;

		*node[0x5ca733a103b0] = ;;

		*node[0x5ca733a10500] = =;

		*node[0x5ca733a103e0] = 0;

		*node[0x5ca733a104d0] = *;

		*node[0x5ca733a10410] = 0;

		*node[0x5ca733a104a0] = 1;

		*node[0x5ca733a10530] = ;;

		*node[0x5ca733a10560] = return;

		*node[0x5ca733a10590] = 0;

		*node[0x5ca733a105c0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffdfad42af0] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x59386c886020] = ;;

		*node[0x59386c886050] = 0;

		*node[0x59386c886080] = ;;

		*node[0x59386c8860b0] = input;

		*node[0x59386c8860e0] = 0;

		*node[0x59386c886110] = ;;

		*node[0x59386c886140] = =;

		*node[0x59386c886170] = 1;

		*node[0x59386c8861a0] = 1;

		*node[0x59386c8861d0] = ;;

		*node[0x59386c886200] = if;

		*node[0x59386c886230] = op_no;

		*node[0x59386c886260] = ||;

		*node[0x59386c886290] = <;

		*node[0x59386c8862c0] = 0;

		*node[0x59386c8862f0] = 0;

		*node[0x59386c886320] = ==;

		*node[0x59386c886350] = 0;

		*node[0x59386c886380] = 0;

		*node[0x59386c8863b0] = ;;

		*node[0x59386c8863e0] = print;

		*node[0x59386c886410] = 1;

		*node[0x59386c886440] = else;

		*node[0x59386c886470] = op_no;

		*node[0x59386c8864a0] = ;;

		*node[0x59386c8864d0] = =;

		*node[0x59386c886500] = 2;

		*node[0x59386c886560] = 0;

		*node[0x59386c886590] = ;;

		*node[0x59386c8865c0] = print;

		*node[0x59386c8865f0] = 2;

		*node[0x59386c886620] = ;;

		*node[0x59386c886650] = =;

		*node[0x59386c886680] = 2;

		*node[0x59386c8866e0] = 0;

		*node[0x59386c886710] = ;;

		*node[0x59386c886740] = print;

		*node[0x59386c886770] = 2;

		*node[0x59386c8867a0] = ;;

		*node[0x59386c8867d0] = 2;

		*node[0x59386c886800] = 0;

		*node[0x59386c886830] = ;;

		*node[0x59386c886860] = if;

		*node[0x59386c886890] = op_no;

		*node[0x59386c8868c0] = ||;

		*node[0x59386c8868f0] = ==;

		*node[0x59386c886920] = 0;

		*node[0x59386c886950] = 2;

		*node[0x59386c886980] = ==;

		*node[0x59386c8869b0] = 0;

		*node[0x59386c8869e0] = 1;

		*node[0x59386c886a10] = ;;

		*node[0x59386c886a40] = return;

		*node[0x59386c886a70] = 0;

		*node[0x59386c886aa0] = ;;

		*node[0x59386c886ad0] = =;

		*node[0x59386c886b00] = 1;

		*node[0x59386c886b30] = -;

		*node[0x59386c886b60] = 0;

		*node[0x59386c886b90] = 1;

		*node[0x59386c886bc0] = ;;

		*node[0x59386c886bf0] = =;

		*node[0x59386c886c20] = 2;

		*node[0x59386c886c50] = -;

		*node[0x59386c886c80] = 0;

		*node[0x59386c886cb0] = 2;

		*node[0x59386c886ce0] = ;;

		*node[0x59386c886d10] = =;

		*node[0x59386c886d40] = 1;

		*node[0x59386c886da0] = 1;

		*node[0x59386c886dd0] = ;;

		*node[0x59386c886e00] = =;

		*node[0x59386c886e30] = 2;

		*node[0x59386c886e90] = 2;

		*node[0x59386c886ec0] = ;;

		*node[0x59386c886ef0] = return;

		*node[0x59386c886f20] = +;

		*node[0x59386c886f50] = 2;

		*node[0x59386c886f80] = 1;

		*node[0x59386c886fb0] = ;;

		*node[0x59386c886fe0] = 1;

		*node[0x59386c887010] = 0;

		*node[0x59386c887040] = ;;

		*node[0x59386c887070] = if;

		*node[0x59386c8870a0] = op_no;

		*node[0x59386c8870d0] = ==;

		*node[0x59386c887100] = 0;

		*node[0x59386c887130] = 1;

		*node[0x59386c887160] = ;;

		*node[0x59386c887190] = return;

		*node[0x59386c8871c0] = 0;

		*node[0x59386c8871f0] = ;;

		*node[0x59386c887220] = =;

		*node[0x59386c887250] = 1;

		*node[0x59386c887280] = -;

		*node[0x59386c8872b0] = 0;

		*node[0x59386c8872e0] = 1;

		*node[0x59386c887310] = ;;

		*node[0x59386c887340] = =;

		*node[0x59386c887370] = 0;

		*node[0x59386c8873a0] = *;

		*node[0x59386c8873d0] = 0;

		*node[0x59386c887430] = 1;

		*node[0x59386c887460] = ;;

		*node[0x59386c887490] = return;

		*node[0x59386c8874c0] = 0;

		*node[0x59386c8874f0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc7ba3c050] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x643780ca93c0] = ;;

		*node[0x643780ca9440] = 0;

		*node[0x643780ca9470] = ;;

		*node[0x643780ca94a0] = input;

		*node[0x643780ca94d0] = 0;

		*node[0x643780ca9500] = 1;

		*node[0x643780ca9530] = 2;

		*node[0x643780ca9590] = ;;

		*node[0x643780ca95f0] = 0;

		*node[0x643780ca9620] = 1;

		*node[0x643780ca9650] = 2;

		*node[0x643780ca9680] = ;;

		*node[0x643780ca9700] = 1;

		*node[0x643780ca9730] = 0;

		*node[0x643780ca9760] = 1;

		*node[0x643780ca9790] = 2;

		*node[0x643780ca97f0] = ;;

		*node[0x643780ca9820] = if;

		*node[0x643780ca9850] = op_no;

		*node[0x643780ca98e0] = ==;

		*node[0x643780ca9880] = 0;

		*node[0x643780ca98b0] = 0;

		*node[0x643780ca9910] = ;;

		*node[0x643780ca9970] = 1;

		*node[0x643780ca99a0] = 2;

		*node[0x643780ca99d0] = else;

		*node[0x643780ca9a00] = op_no;

		*node[0x643780ca9a30] = ;;

		*node[0x643780ca9ae0] = 0;

		*node[0x643780ca9b10] = 1;

		*node[0x643780ca9b40] = 2;

		*node[0x643780ca9b70] = ;;

		*node[0x643780ca9ba0] = return;

		*node[0x643780ca9bd0] = 0;

		*node[0x643780ca9c00] = ;;

		*node[0x643780ca9c80] = 2;

		*node[0x643780ca9ce0] = 0;

		*node[0x643780ca9d10] = 1;

		*node[0x643780ca9d40] = ;;

		*node[0x643780ca9e60] = =;

		*node[0x643780ca9d70] = 2;

		*node[0x643780ca9e30] = -;

		*node[0x643780ca9dd0] = 0;

		*node[0x643780ca9e00] = 1;

		*node[0x643780ca9e90] = ;;

		*node[0x643780ca9f20] = =;

		*node[0x643780ca9ec0] = 3;

		*node[0x643780ca9ef0] = 1;

		*node[0x643780ca9f50] = ;;

		*node[0x643780caa030] = =;

		*node[0x643780ca9f80] = 4;

		*node[0x643780caa000] = 1000;

		*node[0x643780caa060] = ;;

		*node[0x643780caa090] = if;

		*node[0x643780caa0c0] = op_no;

		*node[0x643780caa150] = ==;

		*node[0x643780caa0f0] = 0;

		*node[0x643780caa120] = 0;

		*node[0x643780caa180] = ;;

		*node[0x643780caa1b0] = if;

		*node[0x643780caa1e0] = op_no;

		*node[0x643780caa270] = ==;

		*node[0x643780caa210] = 1;

		*node[0x643780caa240] = 0;

		*node[0x643780caa2a0] = ;;

		*node[0x643780caa2d0] = print;

		*node[0x643780caa300] = 4;

		*node[0x643780caa330] = else;

		*node[0x643780caa360] = op_no;

		*node[0x643780caa390] = ;;

		*node[0x643780caa3c0] = print;

		*node[0x643780caa3f0] = 2;

		*node[0x643780caa420] = else;

		*node[0x643780caa450] = op_no;

		*node[0x643780caa480] = ;;

		*node[0x643780caa5d0] = =;

		*node[0x643780caa4b0] = 5;

		*node[0x643780caa5a0] = -;

		*node[0x643780caa4e0] = 0;

		*node[0x643780caa570] = /;

		*node[0x643780caa510] = 1;

		*node[0x643780caa540] = 0;

		*node[0x643780caa600] = ;;

		*node[0x643780caa630] = print;

		*node[0x643780caa660] = 3;

		*node[0x643780caa690] = ;;

		*node[0x643780caa6c0] = print;

		*node[0x643780caa6f0] = 5;

		*node[0x643780caa720] = ;;

		*node[0x643780caa750] = return;

		*node[0x643780caa780] = 0;

		*node[0x643780caa7b0] = ;;

		*node[0x643780caa830] = 3;

		*node[0x643780caa860] = 0;

		*node[0x643780caa890] = 1;

		*node[0x643780caa8c0] = 2;

		*node[0x643780caa920] = ;;

		*node[0x643780caaa10] = =;

		*node[0x643780caa950] = 3;

		*node[0x643780caa9e0] = -;

		*node[0x643780caa980] = 0;

		*node[0x643780caa9b0] = 1;

		*node[0x643780caaa40] = ;;

		*node[0x643780caab20] = =;

		*node[0x643780caaa70] = 4;

		*node[0x643780caaaf0] = 1;

		*node[0x643780caab50] = ;;

		*node[0x643780caabe0] = =;

		*node[0x643780caab80] = 5;

		*node[0x643780caabb0] = 2;

		*node[0x643780caac10] = ;;

		*node[0x643780caac40] = if;

		*node[0x643780caac70] = op_no;

		*node[0x643780caad00] = ==;

		*node[0x643780caaca0] = 2;

		*node[0x643780caacd0] = 0;

		*node[0x643780caad30] = ;;

		*node[0x643780caadc0] = =;

		*node[0x643780caad60] = 6;

		*node[0x643780caad90] = 0;

		*node[0x643780caadf0] = ;;

		*node[0x643780caaf40] = =;

		*node[0x643780caae20] = 7;

		*node[0x643780caaf10] = -;

		*node[0x643780caae50] = 0;

		*node[0x643780caaee0] = /;

		*node[0x643780caae80] = 1;

		*node[0x643780caaeb0] = 0;

		*node[0x643780caaf70] = ;;

		*node[0x643780caafa0] = print;

		*node[0x643780caafd0] = 5;

		*node[0x643780cab000] = ;;

		*node[0x643780cab030] = print;

		*node[0x643780cab060] = 6;

		*node[0x643780cab090] = 7;

		*node[0x643780cab0c0] = else;

		*node[0x643780cab0f0] = op_no;

		*node[0x643780cab120] = ;;

		*node[0x643780cab3c0] = =;

		*node[0x643780cab150] = 8;

		*node[0x643780cab390] = -;

		*node[0x643780cab270] = *;

		*node[0x643780cab210] = 1;

		*node[0x643780cab240] = 1;

		*node[0x643780cab360] = *;

		*node[0x643780cab300] = *;

		*node[0x643780cab2a0] = 4;

		*node[0x643780cab2d0] = 0;

		*node[0x643780cab330] = 2;

		*node[0x643780cab3f0] = ;;

		*node[0x643780cab420] = if;

		*node[0x643780cab450] = op_no;

		*node[0x643780cab4e0] = >;

		*node[0x643780cab480] = 8;

		*node[0x643780cab4b0] = 0;

		*node[0x643780cab510] = ;;

		*node[0x643780cab5d0] = =;

		*node[0x643780cab540] = 9;

		*node[0x643780cab5a0] = sqrt;

		*node[0x643780cab570] = 8;

		*node[0x643780cab600] = ;;

		*node[0x643780cab810] = =;

		*node[0x643780cab630] = 6;

		*node[0x643780cab7e0] = -;

		*node[0x643780cab6c0] = -;

		*node[0x643780cab660] = 0;

		*node[0x643780cab690] = 1;

		*node[0x643780cab7b0] = *;

		*node[0x643780cab750] = /;

		*node[0x643780cab6f0] = 9;

		*node[0x643780cab720] = 2;

		*node[0x643780cab780] = 0;

		*node[0x643780cab840] = ;;

		*node[0x643780caba50] = =;

		*node[0x643780cab870] = 7;

		*node[0x643780caba20] = +;

		*node[0x643780cab900] = -;

		*node[0x643780cab8a0] = 0;

		*node[0x643780cab8d0] = 1;

		*node[0x643780cab9f0] = *;

		*node[0x643780cab990] = /;

		*node[0x643780cab930] = 9;

		*node[0x643780cab960] = 2;

		*node[0x643780cab9c0] = 0;

		*node[0x643780caba80] = ;;

		*node[0x643780cabab0] = print;

		*node[0x643780cabae0] = 5;

		*node[0x643780cabb10] = ;;

		*node[0x643780cabb40] = print;

		*node[0x643780cabb70] = 6;

		*node[0x643780cabba0] = 7;

		*node[0x643780cabbd0] = elseif;

		*node[0x643780cabc00] = op_no;

		*node[0x643780cabc90] = ==;

		*node[0x643780cabc30] = 8;

		*node[0x643780cabc60] = 0;

		*node[0x643780cabcc0] = ;;

		*node[0x643780cabe70] = =;

		*node[0x643780cabcf0] = 10;

		*node[0x643780cabe40] = -;

		*node[0x643780cabd20] = 0;

		*node[0x643780cabe10] = *;

		*node[0x643780cabdb0] = /;

		*node[0x643780cabd50] = 1;

		*node[0x643780cabd80] = 2;

		*node[0x643780cabde0] = 0;

		*node[0x643780cabea0] = ;;

		*node[0x643780cabed0] = print;

		*node[0x643780cabf00] = 4;

		*node[0x643780cabf30] = ;;

		*node[0x643780cabf60] = print;

		*node[0x643780cabf90] = 10;

		*node[0x643780cabfc0] = else;

		*node[0x643780cabff0] = op_no;

		*node[0x643780cac020] = ;;

		*node[0x643780cac050] = print;

		*node[0x643780cac080] = 3;

		*node[0x643780cac0b0] = ;;

		*node[0x643780cac0e0] = return;

		*node[0x643780cac110] = 0;

		*node[0x643780cac140] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc8dc24da0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x56cd8018e900] = ;;

		*node[0x56cd8018e980] = 0;

		*node[0x56cd8018e9b0] = ;;

		*node[0x56cd8018e9e0] = input;

		*node[0x56cd8018ea10] = 0;

		*node[0x56cd8018ea40] = ;;

		*node[0x56cd8018ead0] = =;

		*node[0x56cd8018ea70] = 1;

		*node[0x56cd8018eaa0] = 1;

		*node[0x56cd8018eb00] = ;;

		*node[0x56cd8018eb30] = if;

		*node[0x56cd8018eb60] = op_no;

		*node[0x56cd8018ecb0] = ||;

		*node[0x56cd8018ebf0] = <;

		*node[0x56cd8018eb90] = 0;

		*node[0x56cd8018ebc0] = 0;

		*node[0x56cd8018ec80] = ==;

		*node[0x56cd8018ec20] = 0;

		*node[0x56cd8018ec50] = 0;

		*node[0x56cd8018ece0] = ;;

		*node[0x56cd8018ed10] = print;

		*node[0x56cd8018ed40] = 1;

		*node[0x56cd8018ed70] = else;

		*node[0x56cd8018eda0] = op_no;

		*node[0x56cd8018edd0] = ;;

		*node[0x56cd8018eec0] = =;

		*node[0x56cd8018ee00] = 2;

		*node[0x56cd8018ee90] = 0;

		*node[0x56cd8018eef0] = ;;

		*node[0x56cd8018ef20] = print;

		*node[0x56cd8018ef50] = 2;

		*node[0x56cd8018ef80] = ;;

		*node[0x56cd8018f000] = 1;

		*node[0x56cd8018f030] = 0;

		*node[0x56cd8018f060] = ;;

		*node[0x56cd8018f090] = if;

		*node[0x56cd8018f0c0] = op_no;

		*node[0x56cd8018f150] = ==;

		*node[0x56cd8018f0f0] = 0;

		*node[0x56cd8018f120] = 1;

		*node[0x56cd8018f180] = ;;

		*node[0x56cd8018f1b0] = return;

		*node[0x56cd8018f1e0] = 0;

		*node[0x56cd8018f210] = ;;

		*node[0x56cd8018f300] = =;

		*node[0x56cd8018f240] = 1;

		*node[0x56cd8018f2d0] = -;

		*node[0x56cd8018f270] = 0;

		*node[0x56cd8018f2a0] = 1;

		*node[0x56cd8018f330] = ;;

		*node[0x56cd8018f480] = =;

		*node[0x56cd8018f360] = 0;

		*node[0x56cd8018f450] = *;

		*node[0x56cd8018f390] = 0;

		*node[0x56cd8018f420] = 1;

		*node[0x56cd8018f4b0] = ;;

		*node[0x56cd8018f4e0] = return;

		*node[0x56cd8018f510] = 0;

		*node[0x56cd8018f540] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd1a271df0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x587c8a08a6d0] = ;;

		*node[0x587c8a08a750] = 0;

		*node[0x587c8a08a780] = ;;

		*node[0x587c8a08a7b0] = input;

		*node[0x587c8a08a7e0] = 0;

		*node[0x587c8a08a810] = 1;

		*node[0x587c8a08a840] = 2;

		*node[0x587c8a08a8a0] = ;;

		*node[0x587c8a08a900] = 0;

		*node[0x587c8a08a930] = 1;

		*node[0x587c8a08a960] = 2;

		*node[0x587c8a08a990] = ;;

		*node[0x587c8a08aa10] = 1;

		*node[0x587c8a08aa40] = 0;

		*node[0x587c8a08aa70] = 1;

		*node[0x587c8a08aaa0] = 2;

		*node[0x587c8a08ab00] = ;;

		*node[0x587c8a08ab30] = if;

		*node[0x587c8a08ab60] = op_no;

		*node[0x587c8a08abf0] = ==;

		*node[0x587c8a08ab90] = 0;

		*node[0x587c8a08abc0] = 0;

		*node[0x587c8a08ac20] = ;;

		*node[0x587c8a08ac80] = 1;

		*node[0x587c8a08acb0] = 2;

		*node[0x587c8a08ace0] = else;

		*node[0x587c8a08ad10] = op_no;

		*node[0x587c8a08ad40] = ;;

		*node[0x587c8a08adf0] = 0;

		*node[0x587c8a08ae20] = 1;

		*node[0x587c8a08ae50] = 2;

		*node[0x587c8a08ae80] = ;;

		*node[0x587c8a08aeb0] = return;

		*node[0x587c8a08aee0] = 0;

		*node[0x587c8a08af10] = ;;

		*node[0x587c8a08af90] = 2;

		*node[0x587c8a08aff0] = 0;

		*node[0x587c8a08b020] = 1;

		*node[0x587c8a08b050] = ;;

		*node[0x587c8a08b170] = =;

		*node[0x587c8a08b080] = 2;

		*node[0x587c8a08b140] = -;

		*node[0x587c8a08b0e0] = 0;

		*node[0x587c8a08b110] = 1;

		*node[0x587c8a08b1a0] = ;;

		*node[0x587c8a08b230] = =;

		*node[0x587c8a08b1d0] = 3;

		*node[0x587c8a08b200] = 1;

		*node[0x587c8a08b260] = ;;

		*node[0x587c8a08b340] = =;

		*node[0x587c8a08b290] = 4;

		*node[0x587c8a08b310] = 1000;

		*node[0x587c8a08b370] = ;;

		*node[0x587c8a08b3a0] = if;

		*node[0x587c8a08b3d0] = op_no;

		*node[0x587c8a08b460] = ==;

		*node[0x587c8a08b400] = 0;

		*node[0x587c8a08b430] = 0;

		*node[0x587c8a08b490] = ;;

		*node[0x587c8a08b4c0] = if;

		*node[0x587c8a08b4f0] = op_no;

		*node[0x587c8a08b580] = ==;

		*node[0x587c8a08b520] = 1;

		*node[0x587c8a08b550] = 0;

		*node[0x587c8a08b5b0] = ;;

		*node[0x587c8a08b5e0] = print;

		*node[0x587c8a08b610] = 4;

		*node[0x587c8a08b640] = else;

		*node[0x587c8a08b670] = op_no;

		*node[0x587c8a08b6a0] = ;;

		*node[0x587c8a08b6d0] = print;

		*node[0x587c8a08b700] = 2;

		*node[0x587c8a08b730] = else;

		*node[0x587c8a08b760] = op_no;

		*node[0x587c8a08b790] = ;;

		*node[0x587c8a08b8e0] = =;

		*node[0x587c8a08b7c0] = 5;

		*node[0x587c8a08b8b0] = -;

		*node[0x587c8a08b7f0] = 0;

		*node[0x587c8a08b880] = /;

		*node[0x587c8a08b820] = 1;

		*node[0x587c8a08b850] = 0;

		*node[0x587c8a08b910] = ;;

		*node[0x587c8a08b940] = print;

		*node[0x587c8a08b970] = 3;

		*node[0x587c8a08b9a0] = ;;

		*node[0x587c8a08b9d0] = print;

		*node[0x587c8a08ba00] = 5;

		*node[0x587c8a08ba30] = ;;

		*node[0x587c8a08ba60] = return;

		*node[0x587c8a08ba90] = 0;

		*node[0x587c8a08bac0] = ;;

		*node[0x587c8a08bb40] = 3;

		*node[0x587c8a08bb70] = 0;

		*node[0x587c8a08bba0] = 1;

		*node[0x587c8a08bbd0] = 2;

		*node[0x587c8a08bc30] = ;;

		*node[0x587c8a08bd20] = =;

		*node[0x587c8a08bc60] = 3;

		*node[0x587c8a08bcf0] = -;

		*node[0x587c8a08bc90] = 0;

		*node[0x587c8a08bcc0] = 1;

		*node[0x587c8a08bd50] = ;;

		*node[0x587c8a08be30] = =;

		*node[0x587c8a08bd80] = 4;

		*node[0x587c8a08be00] = 1;

		*node[0x587c8a08be60] = ;;

		*node[0x587c8a08bef0] = =;

		*node[0x587c8a08be90] = 5;

		*node[0x587c8a08bec0] = 2;

		*node[0x587c8a08bf20] = ;;

		*node[0x587c8a08bf50] = if;

		*node[0x587c8a08bf80] = op_no;

		*node[0x587c8a08c010] = ==;

		*node[0x587c8a08bfb0] = 2;

		*node[0x587c8a08bfe0] = 0;

		*node[0x587c8a08c040] = ;;

		*node[0x587c8a08c0d0] = =;

		*node[0x587c8a08c070] = 6;

		*node[0x587c8a08c0a0] = 0;

		*node[0x587c8a08c100] = ;;

		*node[0x587c8a08c250] = =;

		*node[0x587c8a08c130] = 7;

		*node[0x587c8a08c220] = -;

		*node[0x587c8a08c160] = 0;

		*node[0x587c8a08c1f0] = /;

		*node[0x587c8a08c190] = 1;

		*node[0x587c8a08c1c0] = 0;

		*node[0x587c8a08c280] = ;;

		*node[0x587c8a08c2b0] = print;

		*node[0x587c8a08c2e0] = 5;

		*node[0x587c8a08c310] = ;;

		*node[0x587c8a08c340] = print;

		*node[0x587c8a08c370] = 6;

		*node[0x587c8a08c3a0] = 7;

		*node[0x587c8a08c3d0] = else;

		*node[0x587c8a08c400] = op_no;

		*node[0x587c8a08c430] = ;;

		*node[0x587c8a08c6d0] = =;

		*node[0x587c8a08c460] = 8;

		*node[0x587c8a08c6a0] = -;

		*node[0x587c8a08c580] = *;

		*node[0x587c8a08c520] = 1;

		*node[0x587c8a08c550] = 1;

		*node[0x587c8a08c670] = *;

		*node[0x587c8a08c610] = *;

		*node[0x587c8a08c5b0] = 4;

		*node[0x587c8a08c5e0] = 0;

		*node[0x587c8a08c640] = 2;

		*node[0x587c8a08c700] = ;;

		*node[0x587c8a08c730] = if;

		*node[0x587c8a08c760] = op_no;

		*node[0x587c8a08c7f0] = >;

		*node[0x587c8a08c790] = 8;

		*node[0x587c8a08c7c0] = 0;

		*node[0x587c8a08c820] = ;;

		*node[0x587c8a08c8e0] = =;

		*node[0x587c8a08c850] = 9;

		*node[0x587c8a08c8b0] = sqrt;

		*node[0x587c8a08c880] = 8;

		*node[0x587c8a08c910] = ;;

		*node[0x587c8a08cb20] = =;

		*node[0x587c8a08c940] = 6;

		*node[0x587c8a08caf0] = /;

		*node[0x587c8a08ca30] = -;

		*node[0x587c8a08c9d0] = -;

		*node[0x587c8a08c970] = 0;

		*node[0x587c8a08c9a0] = 1;

		*node[0x587c8a08ca00] = 9;

		*node[0x587c8a08cac0] = *;

		*node[0x587c8a08ca60] = 2;

		*node[0x587c8a08ca90] = 0;

		*node[0x587c8a08cb50] = ;;

		*node[0x587c8a08cd60] = =;

		*node[0x587c8a08cb80] = 7;

		*node[0x587c8a08cd30] = /;

		*node[0x587c8a08cc70] = +;

		*node[0x587c8a08cc10] = -;

		*node[0x587c8a08cbb0] = 0;

		*node[0x587c8a08cbe0] = 1;

		*node[0x587c8a08cc40] = 9;

		*node[0x587c8a08cd00] = *;

		*node[0x587c8a08cca0] = 2;

		*node[0x587c8a08ccd0] = 0;

		*node[0x587c8a08cd90] = ;;

		*node[0x587c8a08cdc0] = print;

		*node[0x587c8a08cdf0] = 5;

		*node[0x587c8a08ce20] = ;;

		*node[0x587c8a08ce50] = print;

		*node[0x587c8a08ce80] = 6;

		*node[0x587c8a08ceb0] = 7;

		*node[0x587c8a08cee0] = elseif;

		*node[0x587c8a08cf10] = op_no;

		*node[0x587c8a08cfa0] = ==;

		*node[0x587c8a08cf40] = 8;

		*node[0x587c8a08cf70] = 0;

		*node[0x587c8a08cfd0] = ;;

		*node[0x587c8a08d180] = =;

		*node[0x587c8a08d000] = 10;

		*node[0x587c8a08d150] = -;

		*node[0x587c8a08d030] = 0;

		*node[0x587c8a08d120] = /;

		*node[0x587c8a08d060] = 1;

		*node[0x587c8a08d0f0] = *;

		*node[0x587c8a08d090] = 2;

		*node[0x587c8a08d0c0] = 0;

		*node[0x587c8a08d1b0] = ;;

		*node[0x587c8a08d1e0] = print;

		*node[0x587c8a08d210] = 4;

		*node[0x587c8a08d240] = ;;

		*node[0x587c8a08d270] = print;

		*node[0x587c8a08d2a0] = 10;

		*node[0x587c8a08d2d0] = else;

		*node[0x587c8a08d300] = op_no;

		*node[0x587c8a08d330] = ;;

		*node[0x587c8a08d360] = print;

		*node[0x587c8a08d390] = 3;

		*node[0x587c8a08d3c0] = ;;

		*node[0x587c8a08d3f0] = return;

		*node[0x587c8a08d420] = 0;

		*node[0x587c8a08d450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff667e2cd0] "tree" called from frontend/src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x59e814fde900] = ;;

		*node[0x59e814fde980] = 0;

		*node[0x59e814fde9b0] = ;;

		*node[0x59e814fde9e0] = input;

		*node[0x59e814fdea10] = 0;

		*node[0x59e814fdea40] = ;;

		*node[0x59e814fdead0] = =;

		*node[0x59e814fdea70] = 1;

		*node[0x59e814fdeaa0] = 1;

		*node[0x59e814fdeb00] = ;;

		*node[0x59e814fdeb30] = if;

		*node[0x59e814fdeb60] = op_no;

		*node[0x59e814fdecb0] = ||;

		*node[0x59e814fdebf0] = <;

		*node[0x59e814fdeb90] = 0;

		*node[0x59e814fdebc0] = 0;

		*node[0x59e814fdec80] = ==;

		*node[0x59e814fdec20] = 0;

		*node[0x59e814fdec50] = 0;

		*node[0x59e814fdece0] = ;;

		*node[0x59e814fded10] = print;

		*node[0x59e814fded40] = 1;

		*node[0x59e814fded70] = else;

		*node[0x59e814fdeda0] = op_no;

		*node[0x59e814fdedd0] = ;;

		*node[0x59e814fdeec0] = =;

		*node[0x59e814fdee00] = 2;

		*node[0x59e814fdee90] = 0;

		*node[0x59e814fdeef0] = ;;

		*node[0x59e814fdef20] = print;

		*node[0x59e814fdef50] = 2;

		*node[0x59e814fdef80] = ;;

		*node[0x59e814fdf000] = 1;

		*node[0x59e814fdf030] = 0;

		*node[0x59e814fdf060] = ;;

		*node[0x59e814fdf090] = if;

		*node[0x59e814fdf0c0] = op_no;

		*node[0x59e814fdf150] = ==;

		*node[0x59e814fdf0f0] = 0;

		*node[0x59e814fdf120] = 1;

		*node[0x59e814fdf180] = ;;

		*node[0x59e814fdf1b0] = return;

		*node[0x59e814fdf1e0] = 0;

		*node[0x59e814fdf210] = ;;

		*node[0x59e814fdf300] = =;

		*node[0x59e814fdf240] = 1;

		*node[0x59e814fdf2d0] = -;

		*node[0x59e814fdf270] = 0;

		*node[0x59e814fdf2a0] = 1;

		*node[0x59e814fdf330] = ;;

		*node[0x59e814fdf480] = =;

		*node[0x59e814fdf360] = 0;

		*node[0x59e814fdf450] = *;

		*node[0x59e814fdf390] = 0;

		*node[0x59e814fdf420] = 1;

		*node[0x59e814fdf4b0] = ;;

		*node[0x59e814fdf4e0] = return;

		*node[0x59e814fdf510] = 0;

		*node[0x59e814fdf540] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff6fe3f680] "tree" called from frontend/src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5986d359f900] = ;;

		*node[0x5986d359f980] = 0;

		*node[0x5986d359f9b0] = ;;

		*node[0x5986d359f9e0] = input;

		*node[0x5986d359fa10] = 0;

		*node[0x5986d359fa40] = ;;

		*node[0x5986d359fad0] = =;

		*node[0x5986d359fa70] = 1;

		*node[0x5986d359faa0] = 1;

		*node[0x5986d359fb00] = ;;

		*node[0x5986d359fb30] = if;

		*node[0x5986d359fb60] = op_no;

		*node[0x5986d359fcb0] = ||;

		*node[0x5986d359fbf0] = <;

		*node[0x5986d359fb90] = 0;

		*node[0x5986d359fbc0] = 0;

		*node[0x5986d359fc80] = ==;

		*node[0x5986d359fc20] = 0;

		*node[0x5986d359fc50] = 0;

		*node[0x5986d359fce0] = ;;

		*node[0x5986d359fd10] = print;

		*node[0x5986d359fd40] = 1;

		*node[0x5986d359fd70] = else;

		*node[0x5986d359fda0] = op_no;

		*node[0x5986d359fdd0] = ;;

		*node[0x5986d359fec0] = =;

		*node[0x5986d359fe00] = 2;

		*node[0x5986d359fe90] = 0;

		*node[0x5986d359fef0] = ;;

		*node[0x5986d359ff20] = print;

		*node[0x5986d359ff50] = 2;

		*node[0x5986d359ff80] = ;;

		*node[0x5986d35a0000] = 1;

		*node[0x5986d35a0030] = 0;

		*node[0x5986d35a0060] = ;;

		*node[0x5986d35a0090] = if;

		*node[0x5986d35a00c0] = op_no;

		*node[0x5986d35a0150] = ==;

		*node[0x5986d35a00f0] = 0;

		*node[0x5986d35a0120] = 1;

		*node[0x5986d35a0180] = ;;

		*node[0x5986d35a01b0] = return;

		*node[0x5986d35a01e0] = 0;

		*node[0x5986d35a0210] = ;;

		*node[0x5986d35a0300] = =;

		*node[0x5986d35a0240] = 1;

		*node[0x5986d35a02d0] = -;

		*node[0x5986d35a0270] = 0;

		*node[0x5986d35a02a0] = 1;

		*node[0x5986d35a0330] = ;;

		*node[0x5986d35a0480] = =;

		*node[0x5986d35a0360] = 0;

		*node[0x5986d35a0450] = *;

		*node[0x5986d35a0390] = 0;

		*node[0x5986d35a0420] = 1;

		*node[0x5986d35a04b0] = ;;

		*node[0x5986d35a04e0] = return;

		*node[0x5986d35a0510] = 0;

		*node[0x5986d35a0540] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcb16c52d0] "tree" called from frontend/src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6413fc2a06d0] = ;;

		*node[0x6413fc2a0750] = 0;

		*node[0x6413fc2a0780] = ;;

		*node[0x6413fc2a07b0] = input;

		*node[0x6413fc2a07e0] = 0;

		*node[0x6413fc2a0810] = 1;

		*node[0x6413fc2a0840] = 2;

		*node[0x6413fc2a08a0] = ;;

		*node[0x6413fc2a0900] = 0;

		*node[0x6413fc2a0930] = 1;

		*node[0x6413fc2a0960] = 2;

		*node[0x6413fc2a0990] = ;;

		*node[0x6413fc2a0a10] = 1;

		*node[0x6413fc2a0a40] = 0;

		*node[0x6413fc2a0a70] = 1;

		*node[0x6413fc2a0aa0] = 2;

		*node[0x6413fc2a0b00] = ;;

		*node[0x6413fc2a0b30] = if;

		*node[0x6413fc2a0b60] = op_no;

		*node[0x6413fc2a0bf0] = ==;

		*node[0x6413fc2a0b90] = 0;

		*node[0x6413fc2a0bc0] = 0;

		*node[0x6413fc2a0c20] = ;;

		*node[0x6413fc2a0c80] = 1;

		*node[0x6413fc2a0cb0] = 2;

		*node[0x6413fc2a0ce0] = else;

		*node[0x6413fc2a0d10] = op_no;

		*node[0x6413fc2a0d40] = ;;

		*node[0x6413fc2a0df0] = 0;

		*node[0x6413fc2a0e20] = 1;

		*node[0x6413fc2a0e50] = 2;

		*node[0x6413fc2a0e80] = ;;

		*node[0x6413fc2a0eb0] = return;

		*node[0x6413fc2a0ee0] = 0;

		*node[0x6413fc2a0f10] = ;;

		*node[0x6413fc2a0f90] = 2;

		*node[0x6413fc2a0ff0] = 0;

		*node[0x6413fc2a1020] = 1;

		*node[0x6413fc2a1050] = ;;

		*node[0x6413fc2a1170] = =;

		*node[0x6413fc2a1080] = 2;

		*node[0x6413fc2a1140] = -;

		*node[0x6413fc2a10e0] = 0;

		*node[0x6413fc2a1110] = 1;

		*node[0x6413fc2a11a0] = ;;

		*node[0x6413fc2a1230] = =;

		*node[0x6413fc2a11d0] = 3;

		*node[0x6413fc2a1200] = 1;

		*node[0x6413fc2a1260] = ;;

		*node[0x6413fc2a1340] = =;

		*node[0x6413fc2a1290] = 4;

		*node[0x6413fc2a1310] = 1000;

		*node[0x6413fc2a1370] = ;;

		*node[0x6413fc2a13a0] = if;

		*node[0x6413fc2a13d0] = op_no;

		*node[0x6413fc2a1460] = ==;

		*node[0x6413fc2a1400] = 0;

		*node[0x6413fc2a1430] = 0;

		*node[0x6413fc2a1490] = ;;

		*node[0x6413fc2a14c0] = if;

		*node[0x6413fc2a14f0] = op_no;

		*node[0x6413fc2a1580] = ==;

		*node[0x6413fc2a1520] = 1;

		*node[0x6413fc2a1550] = 0;

		*node[0x6413fc2a15b0] = ;;

		*node[0x6413fc2a15e0] = print;

		*node[0x6413fc2a1610] = 4;

		*node[0x6413fc2a1640] = else;

		*node[0x6413fc2a1670] = op_no;

		*node[0x6413fc2a16a0] = ;;

		*node[0x6413fc2a16d0] = print;

		*node[0x6413fc2a1700] = 2;

		*node[0x6413fc2a1730] = else;

		*node[0x6413fc2a1760] = op_no;

		*node[0x6413fc2a1790] = ;;

		*node[0x6413fc2a18e0] = =;

		*node[0x6413fc2a17c0] = 5;

		*node[0x6413fc2a18b0] = -;

		*node[0x6413fc2a17f0] = 0;

		*node[0x6413fc2a1880] = /;

		*node[0x6413fc2a1820] = 1;

		*node[0x6413fc2a1850] = 0;

		*node[0x6413fc2a1910] = ;;

		*node[0x6413fc2a1940] = print;

		*node[0x6413fc2a1970] = 3;

		*node[0x6413fc2a19a0] = ;;

		*node[0x6413fc2a19d0] = print;

		*node[0x6413fc2a1a00] = 5;

		*node[0x6413fc2a1a30] = ;;

		*node[0x6413fc2a1a60] = return;

		*node[0x6413fc2a1a90] = 0;

		*node[0x6413fc2a1ac0] = ;;

		*node[0x6413fc2a1b40] = 3;

		*node[0x6413fc2a1b70] = 0;

		*node[0x6413fc2a1ba0] = 1;

		*node[0x6413fc2a1bd0] = 2;

		*node[0x6413fc2a1c30] = ;;

		*node[0x6413fc2a1d20] = =;

		*node[0x6413fc2a1c60] = 3;

		*node[0x6413fc2a1cf0] = -;

		*node[0x6413fc2a1c90] = 0;

		*node[0x6413fc2a1cc0] = 1;

		*node[0x6413fc2a1d50] = ;;

		*node[0x6413fc2a1e30] = =;

		*node[0x6413fc2a1d80] = 4;

		*node[0x6413fc2a1e00] = 1;

		*node[0x6413fc2a1e60] = ;;

		*node[0x6413fc2a1ef0] = =;

		*node[0x6413fc2a1e90] = 5;

		*node[0x6413fc2a1ec0] = 2;

		*node[0x6413fc2a1f20] = ;;

		*node[0x6413fc2a1f50] = if;

		*node[0x6413fc2a1f80] = op_no;

		*node[0x6413fc2a2010] = ==;

		*node[0x6413fc2a1fb0] = 2;

		*node[0x6413fc2a1fe0] = 0;

		*node[0x6413fc2a2040] = ;;

		*node[0x6413fc2a20d0] = =;

		*node[0x6413fc2a2070] = 6;

		*node[0x6413fc2a20a0] = 0;

		*node[0x6413fc2a2100] = ;;

		*node[0x6413fc2a2250] = =;

		*node[0x6413fc2a2130] = 7;

		*node[0x6413fc2a2220] = -;

		*node[0x6413fc2a2160] = 0;

		*node[0x6413fc2a21f0] = /;

		*node[0x6413fc2a2190] = 1;

		*node[0x6413fc2a21c0] = 0;

		*node[0x6413fc2a2280] = ;;

		*node[0x6413fc2a22b0] = print;

		*node[0x6413fc2a22e0] = 5;

		*node[0x6413fc2a2310] = ;;

		*node[0x6413fc2a2340] = print;

		*node[0x6413fc2a2370] = 6;

		*node[0x6413fc2a23a0] = 7;

		*node[0x6413fc2a23d0] = else;

		*node[0x6413fc2a2400] = op_no;

		*node[0x6413fc2a2430] = ;;

		*node[0x6413fc2a26d0] = =;

		*node[0x6413fc2a2460] = 8;

		*node[0x6413fc2a26a0] = -;

		*node[0x6413fc2a2580] = *;

		*node[0x6413fc2a2520] = 1;

		*node[0x6413fc2a2550] = 1;

		*node[0x6413fc2a2670] = *;

		*node[0x6413fc2a2610] = *;

		*node[0x6413fc2a25b0] = 4;

		*node[0x6413fc2a25e0] = 0;

		*node[0x6413fc2a2640] = 2;

		*node[0x6413fc2a2700] = ;;

		*node[0x6413fc2a2730] = if;

		*node[0x6413fc2a2760] = op_no;

		*node[0x6413fc2a27f0] = >;

		*node[0x6413fc2a2790] = 8;

		*node[0x6413fc2a27c0] = 0;

		*node[0x6413fc2a2820] = ;;

		*node[0x6413fc2a28e0] = =;

		*node[0x6413fc2a2850] = 9;

		*node[0x6413fc2a28b0] = sqrt;

		*node[0x6413fc2a2880] = 8;

		*node[0x6413fc2a2910] = ;;

		*node[0x6413fc2a2b20] = =;

		*node[0x6413fc2a2940] = 6;

		*node[0x6413fc2a2af0] = /;

		*node[0x6413fc2a2a30] = -;

		*node[0x6413fc2a29d0] = -;

		*node[0x6413fc2a2970] = 0;

		*node[0x6413fc2a29a0] = 1;

		*node[0x6413fc2a2a00] = 9;

		*node[0x6413fc2a2ac0] = *;

		*node[0x6413fc2a2a60] = 2;

		*node[0x6413fc2a2a90] = 0;

		*node[0x6413fc2a2b50] = ;;

		*node[0x6413fc2a2d60] = =;

		*node[0x6413fc2a2b80] = 7;

		*node[0x6413fc2a2d30] = /;

		*node[0x6413fc2a2c70] = +;

		*node[0x6413fc2a2c10] = -;

		*node[0x6413fc2a2bb0] = 0;

		*node[0x6413fc2a2be0] = 1;

		*node[0x6413fc2a2c40] = 9;

		*node[0x6413fc2a2d00] = *;

		*node[0x6413fc2a2ca0] = 2;

		*node[0x6413fc2a2cd0] = 0;

		*node[0x6413fc2a2d90] = ;;

		*node[0x6413fc2a2dc0] = print;

		*node[0x6413fc2a2df0] = 5;

		*node[0x6413fc2a2e20] = ;;

		*node[0x6413fc2a2e50] = print;

		*node[0x6413fc2a2e80] = 6;

		*node[0x6413fc2a2eb0] = 7;

		*node[0x6413fc2a2ee0] = elseif;

		*node[0x6413fc2a2f10] = op_no;

		*node[0x6413fc2a2fa0] = ==;

		*node[0x6413fc2a2f40] = 8;

		*node[0x6413fc2a2f70] = 0;

		*node[0x6413fc2a2fd0] = ;;

		*node[0x6413fc2a3180] = =;

		*node[0x6413fc2a3000] = 10;

		*node[0x6413fc2a3150] = -;

		*node[0x6413fc2a3030] = 0;

		*node[0x6413fc2a3120] = /;

		*node[0x6413fc2a3060] = 1;

		*node[0x6413fc2a30f0] = *;

		*node[0x6413fc2a3090] = 2;

		*node[0x6413fc2a30c0] = 0;

		*node[0x6413fc2a31b0] = ;;

		*node[0x6413fc2a31e0] = print;

		*node[0x6413fc2a3210] = 4;

		*node[0x6413fc2a3240] = ;;

		*node[0x6413fc2a3270] = print;

		*node[0x6413fc2a32a0] = 10;

		*node[0x6413fc2a32d0] = else;

		*node[0x6413fc2a3300] = op_no;

		*node[0x6413fc2a3330] = ;;

		*node[0x6413fc2a3360] = print;

		*node[0x6413fc2a3390] = 3;

		*node[0x6413fc2a33c0] = ;;

		*node[0x6413fc2a33f0] = return;

		*node[0x6413fc2a3420] = 0;

		*node[0x6413fc2a3450] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff7a4e8920] "tree" called from frontend/src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x600f8934c900] = ;;

		*node[0x600f8934c980] = 0;

		*node[0x600f8934c9b0] = ;;

		*node[0x600f8934c9e0] = input;

		*node[0x600f8934ca10] = 0;

		*node[0x600f8934ca40] = ;;

		*node[0x600f8934cad0] = =;

		*node[0x600f8934ca70] = 1;

		*node[0x600f8934caa0] = 1;

		*node[0x600f8934cb00] = ;;

		*node[0x600f8934cb30] = if;

		*node[0x600f8934cb60] = op_no;

		*node[0x600f8934ccb0] = ||;

		*node[0x600f8934cbf0] = <;

		*node[0x600f8934cb90] = 0;

		*node[0x600f8934cbc0] = 0;

		*node[0x600f8934cc80] = ==;

		*node[0x600f8934cc20] = 0;

		*node[0x600f8934cc50] = 0;

		*node[0x600f8934cce0] = ;;

		*node[0x600f8934cd10] = print;

		*node[0x600f8934cd40] = 1;

		*node[0x600f8934cd70] = else;

		*node[0x600f8934cda0] = op_no;

		*node[0x600f8934cdd0] = ;;

		*node[0x600f8934cec0] = =;

		*node[0x600f8934ce00] = 2;

		*node[0x600f8934ce90] = 0;

		*node[0x600f8934cef0] = ;;

		*node[0x600f8934cf20] = print;

		*node[0x600f8934cf50] = 2;

		*node[0x600f8934cf80] = ;;

		*node[0x600f8934d000] = 1;

		*node[0x600f8934d030] = 0;

		*node[0x600f8934d060] = ;;

		*node[0x600f8934d090] = if;

		*node[0x600f8934d0c0] = op_no;

		*node[0x600f8934d150] = ==;

		*node[0x600f8934d0f0] = 0;

		*node[0x600f8934d120] = 1;

		*node[0x600f8934d180] = ;;

		*node[0x600f8934d1b0] = return;

		*node[0x600f8934d1e0] = 0;

		*node[0x600f8934d210] = ;;

		*node[0x600f8934d300] = =;

		*node[0x600f8934d240] = 1;

		*node[0x600f8934d2d0] = -;

		*node[0x600f8934d270] = 0;

		*node[0x600f8934d2a0] = 1;

		*node[0x600f8934d330] = ;;

		*node[0x600f8934d480] = =;

		*node[0x600f8934d360] = 0;

		*node[0x600f8934d450] = *;

		*node[0x600f8934d390] = 0;

		*node[0x600f8934d420] = 1;

		*node[0x600f8934d4b0] = ;;

		*node[0x600f8934d4e0] = return;

		*node[0x600f8934d510] = 0;

		*node[0x600f8934d540] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


