--------------------------------------------------------------------------------------------------------
tree[0x7ffe9627f8e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5c94ecb0cd00] = ;;
		*node[0x5c94ecb0cd30] = 0;
		*node[0x5c94ecb0cd60] = ;;
		*node[0x5c94ecb0cd90] = input;
		*node[0x5c94ecb0cdc0] = 1;
		*node[0x5c94ecb0cdf0] = 2;
		*node[0x5c94ecb0ce20] = 3;
		*node[0x5c94ecb0ce50] = ;;
		*node[0x5c94ecb0cee0] = =;
		*node[0x5c94ecb0ce80] = 4;
		*node[0x5c94ecb0ceb0] = 1000;
		*node[0x5c94ecb0cf10] = ;;
		*node[0x5c94ecb0d000] = =;
		*node[0x5c94ecb0cf40] = 5;
		*node[0x5c94ecb0cfd0] = -;
		*node[0x5c94ecb0cf70] = 0;
		*node[0x5c94ecb0cfa0] = 1;
		*node[0x5c94ecb0d030] = ;;
		*node[0x5c94ecb0d0c0] = =;
		*node[0x5c94ecb0d060] = 6;
		*node[0x5c94ecb0d090] = 1;
		*node[0x5c94ecb0d0f0] = ;;
		*node[0x5c94ecb0d180] = =;
		*node[0x5c94ecb0d120] = 7;
		*node[0x5c94ecb0d150] = 2;
		*node[0x5c94ecb0d1b0] = ;;
		*node[0x5c94ecb0d1e0] = if;
		*node[0x5c94ecb0d210] = op_no;
		*node[0x5c94ecb0d2a0] = ==;
		*node[0x5c94ecb0d240] = 1;
		*node[0x5c94ecb0d270] = 0;
		*node[0x5c94ecb0d2d0] = ;;
		*node[0x5c94ecb0d300] = if;
		*node[0x5c94ecb0d330] = op_no;
		*node[0x5c94ecb0d3c0] = ==;
		*node[0x5c94ecb0d360] = 2;
		*node[0x5c94ecb0d390] = 0;
		*node[0x5c94ecb0d3f0] = ;;
		*node[0x5c94ecb0d420] = if;
		*node[0x5c94ecb0d450] = op_no;
		*node[0x5c94ecb0d4e0] = ==;
		*node[0x5c94ecb0d480] = 3;
		*node[0x5c94ecb0d4b0] = 0;
		*node[0x5c94ecb0d510] = ;;
		*node[0x5c94ecb0d540] = print;
		*node[0x5c94ecb0d570] = 4;
		*node[0x5c94ecb0d5a0] = ;;
		*node[0x5c94ecb0d5d0] = print;
		*node[0x5c94ecb0d600] = 5;
		*node[0x5c94ecb0d630] = ;;
		*node[0x5c94ecb0d780] = =;
		*node[0x5c94ecb0d660] = 8;
		*node[0x5c94ecb0d750] = -;
		*node[0x5c94ecb0d690] = 0;
		*node[0x5c94ecb0d720] = /;
		*node[0x5c94ecb0d6c0] = 3;
		*node[0x5c94ecb0d6f0] = 2;
		*node[0x5c94ecb0d7b0] = ;;
		*node[0x5c94ecb0d7e0] = print;
		*node[0x5c94ecb0d810] = 8;
		*node[0x5c94ecb0d840] = if;
		*node[0x5c94ecb0d870] = op_no;
		*node[0x5c94ecb0d900] = !=;
		*node[0x5c94ecb0d8a0] = 1;
		*node[0x5c94ecb0d8d0] = 0;
		*node[0x5c94ecb0d930] = ;;
		*node[0x5c94ecb0db40] = =;
		*node[0x5c94ecb0d960] = 9;
		*node[0x5c94ecb0db10] = -;
		*node[0x5c94ecb0d9f0] = ^;
		*node[0x5c94ecb0d990] = 2;
		*node[0x5c94ecb0d9c0] = 2;
		*node[0x5c94ecb0dae0] = *;
		*node[0x5c94ecb0da80] = *;
		*node[0x5c94ecb0da20] = 4;
		*node[0x5c94ecb0da50] = 1;
		*node[0x5c94ecb0dab0] = 3;
		*node[0x5c94ecb0db70] = ;;
		*node[0x5c94ecb0dba0] = if;
		*node[0x5c94ecb0dbd0] = op_no;
		*node[0x5c94ecb0dc60] = ==;
		*node[0x5c94ecb0dc00] = 9;
		*node[0x5c94ecb0dc30] = 0;
		*node[0x5c94ecb0dc90] = ;;
		*node[0x5c94ecb0de40] = =;
		*node[0x5c94ecb0dcc0] = 8;
		*node[0x5c94ecb0de10] = -;
		*node[0x5c94ecb0dcf0] = 0;
		*node[0x5c94ecb0dde0] = /;
		*node[0x5c94ecb0dd20] = 2;
		*node[0x5c94ecb0ddb0] = *;
		*node[0x5c94ecb0dd50] = 2;
		*node[0x5c94ecb0dd80] = 1;
		*node[0x5c94ecb0de70] = ;;
		*node[0x5c94ecb0dea0] = print;
		*node[0x5c94ecb0ded0] = 6;
		*node[0x5c94ecb0df00] = ;;
		*node[0x5c94ecb0df30] = print;
		*node[0x5c94ecb0df60] = 8;
		*node[0x5c94ecb0df90] = if;
		*node[0x5c94ecb0dfc0] = op_no;
		*node[0x5c94ecb0e050] = <;
		*node[0x5c94ecb0dff0] = 9;
		*node[0x5c94ecb0e020] = 0;
		*node[0x5c94ecb0e080] = ;;
		*node[0x5c94ecb0e0b0] = print;
		*node[0x5c94ecb0e0e0] = 5;
		*node[0x5c94ecb0e110] = ;;
		*node[0x5c94ecb0e380] = =;
		*node[0x5c94ecb0e140] = 10;
		*node[0x5c94ecb0e350] = /;
		*node[0x5c94ecb0e290] = -;
		*node[0x5c94ecb0e1d0] = -;
		*node[0x5c94ecb0e170] = 0;
		*node[0x5c94ecb0e1a0] = 2;
		*node[0x5c94ecb0e260] = sqrt;
		*node[0x5c94ecb0e230] = 1;
		*node[0x5c94ecb0e200] = 9;
		*node[0x5c94ecb0e320] = *;
		*node[0x5c94ecb0e2c0] = 2;
		*node[0x5c94ecb0e2f0] = 1;
		*node[0x5c94ecb0e3b0] = ;;
		*node[0x5c94ecb0e620] = =;
		*node[0x5c94ecb0e3e0] = 11;
		*node[0x5c94ecb0e5f0] = /;
		*node[0x5c94ecb0e530] = +;
		*node[0x5c94ecb0e470] = -;
		*node[0x5c94ecb0e410] = 0;
		*node[0x5c94ecb0e440] = 2;
		*node[0x5c94ecb0e500] = sqrt;
		*node[0x5c94ecb0e4d0] = 1;
		*node[0x5c94ecb0e4a0] = 9;
		*node[0x5c94ecb0e5c0] = *;
		*node[0x5c94ecb0e560] = 2;
		*node[0x5c94ecb0e590] = 1;
		*node[0x5c94ecb0e650] = ;;
		*node[0x5c94ecb0e680] = print;
		*node[0x5c94ecb0e6b0] = 10;
		*node[0x5c94ecb0e6e0] = ;;
		*node[0x5c94ecb0e710] = print;
		*node[0x5c94ecb0e740] = 11;
		*node[0x5c94ecb0e770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd51e031f0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e8078b6ad00] = ;;
		*node[0x5e8078b6ad30] = 0;
		*node[0x5e8078b6ad60] = ;;
		*node[0x5e8078b6ad90] = input;
		*node[0x5e8078b6adc0] = 1;
		*node[0x5e8078b6adf0] = 2;
		*node[0x5e8078b6ae20] = 3;
		*node[0x5e8078b6ae50] = ;;
		*node[0x5e8078b6aee0] = =;
		*node[0x5e8078b6ae80] = 4;
		*node[0x5e8078b6aeb0] = 1000;
		*node[0x5e8078b6af10] = ;;
		*node[0x5e8078b6b000] = =;
		*node[0x5e8078b6af40] = 5;
		*node[0x5e8078b6afd0] = -;
		*node[0x5e8078b6af70] = 0;
		*node[0x5e8078b6afa0] = 1;
		*node[0x5e8078b6b030] = ;;
		*node[0x5e8078b6b0c0] = =;
		*node[0x5e8078b6b060] = 6;
		*node[0x5e8078b6b090] = 1;
		*node[0x5e8078b6b0f0] = ;;
		*node[0x5e8078b6b180] = =;
		*node[0x5e8078b6b120] = 7;
		*node[0x5e8078b6b150] = 2;
		*node[0x5e8078b6b1b0] = ;;
		*node[0x5e8078b6b1e0] = if;
		*node[0x5e8078b6b210] = op_no;
		*node[0x5e8078b6b2a0] = ==;
		*node[0x5e8078b6b240] = 1;
		*node[0x5e8078b6b270] = 0;
		*node[0x5e8078b6b2d0] = ;;
		*node[0x5e8078b6b300] = if;
		*node[0x5e8078b6b330] = op_no;
		*node[0x5e8078b6b3c0] = ==;
		*node[0x5e8078b6b360] = 2;
		*node[0x5e8078b6b390] = 0;
		*node[0x5e8078b6b3f0] = ;;
		*node[0x5e8078b6b420] = if;
		*node[0x5e8078b6b450] = op_no;
		*node[0x5e8078b6b4e0] = ==;
		*node[0x5e8078b6b480] = 3;
		*node[0x5e8078b6b4b0] = 0;
		*node[0x5e8078b6b510] = ;;
		*node[0x5e8078b6b540] = print;
		*node[0x5e8078b6b570] = 4;
		*node[0x5e8078b6b5a0] = ;;
		*node[0x5e8078b6b5d0] = print;
		*node[0x5e8078b6b600] = 5;
		*node[0x5e8078b6b630] = ;;
		*node[0x5e8078b6b780] = =;
		*node[0x5e8078b6b660] = 8;
		*node[0x5e8078b6b750] = -;
		*node[0x5e8078b6b690] = 0;
		*node[0x5e8078b6b720] = /;
		*node[0x5e8078b6b6c0] = 3;
		*node[0x5e8078b6b6f0] = 2;
		*node[0x5e8078b6b7b0] = ;;
		*node[0x5e8078b6b7e0] = print;
		*node[0x5e8078b6b810] = 8;
		*node[0x5e8078b6b840] = if;
		*node[0x5e8078b6b870] = op_no;
		*node[0x5e8078b6b900] = !=;
		*node[0x5e8078b6b8a0] = 1;
		*node[0x5e8078b6b8d0] = 0;
		*node[0x5e8078b6b930] = ;;
		*node[0x5e8078b6bb40] = =;
		*node[0x5e8078b6b960] = 9;
		*node[0x5e8078b6bb10] = -;
		*node[0x5e8078b6b9f0] = ^;
		*node[0x5e8078b6b990] = 2;
		*node[0x5e8078b6b9c0] = 2;
		*node[0x5e8078b6bae0] = *;
		*node[0x5e8078b6ba80] = *;
		*node[0x5e8078b6ba20] = 4;
		*node[0x5e8078b6ba50] = 1;
		*node[0x5e8078b6bab0] = 3;
		*node[0x5e8078b6bb70] = ;;
		*node[0x5e8078b6bba0] = if;
		*node[0x5e8078b6bbd0] = op_no;
		*node[0x5e8078b6bc60] = ==;
		*node[0x5e8078b6bc00] = 9;
		*node[0x5e8078b6bc30] = 0;
		*node[0x5e8078b6bc90] = ;;
		*node[0x5e8078b6be40] = =;
		*node[0x5e8078b6bcc0] = 8;
		*node[0x5e8078b6be10] = -;
		*node[0x5e8078b6bcf0] = 0;
		*node[0x5e8078b6bde0] = /;
		*node[0x5e8078b6bd20] = 2;
		*node[0x5e8078b6bdb0] = *;
		*node[0x5e8078b6bd50] = 2;
		*node[0x5e8078b6bd80] = 1;
		*node[0x5e8078b6be70] = ;;
		*node[0x5e8078b6bea0] = print;
		*node[0x5e8078b6bed0] = 6;
		*node[0x5e8078b6bf00] = ;;
		*node[0x5e8078b6bf30] = print;
		*node[0x5e8078b6bf60] = 8;
		*node[0x5e8078b6bf90] = if;
		*node[0x5e8078b6bfc0] = op_no;
		*node[0x5e8078b6c050] = <;
		*node[0x5e8078b6bff0] = 9;
		*node[0x5e8078b6c020] = 0;
		*node[0x5e8078b6c080] = ;;
		*node[0x5e8078b6c0b0] = print;
		*node[0x5e8078b6c0e0] = 5;
		*node[0x5e8078b6c110] = ;;
		*node[0x5e8078b6c380] = =;
		*node[0x5e8078b6c140] = 10;
		*node[0x5e8078b6c350] = /;
		*node[0x5e8078b6c290] = -;
		*node[0x5e8078b6c1d0] = -;
		*node[0x5e8078b6c170] = 0;
		*node[0x5e8078b6c1a0] = 2;
		*node[0x5e8078b6c260] = sqrt;
		*node[0x5e8078b6c230] = 1;
		*node[0x5e8078b6c200] = 9;
		*node[0x5e8078b6c320] = *;
		*node[0x5e8078b6c2c0] = 2;
		*node[0x5e8078b6c2f0] = 1;
		*node[0x5e8078b6c3b0] = ;;
		*node[0x5e8078b6c620] = =;
		*node[0x5e8078b6c3e0] = 11;
		*node[0x5e8078b6c5f0] = /;
		*node[0x5e8078b6c530] = +;
		*node[0x5e8078b6c470] = -;
		*node[0x5e8078b6c410] = 0;
		*node[0x5e8078b6c440] = 2;
		*node[0x5e8078b6c500] = sqrt;
		*node[0x5e8078b6c4d0] = 1;
		*node[0x5e8078b6c4a0] = 9;
		*node[0x5e8078b6c5c0] = *;
		*node[0x5e8078b6c560] = 2;
		*node[0x5e8078b6c590] = 1;
		*node[0x5e8078b6c650] = ;;
		*node[0x5e8078b6c680] = print;
		*node[0x5e8078b6c6b0] = 10;
		*node[0x5e8078b6c6e0] = ;;
		*node[0x5e8078b6c710] = print;
		*node[0x5e8078b6c740] = 11;
		*node[0x5e8078b6c770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc74d48f80] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6086bbc6ad00] = ;;
		*node[0x6086bbc6ad30] = 0;
		*node[0x6086bbc6ad60] = ;;
		*node[0x6086bbc6ad90] = input;
		*node[0x6086bbc6adc0] = 1;
		*node[0x6086bbc6adf0] = 2;
		*node[0x6086bbc6ae20] = 3;
		*node[0x6086bbc6ae50] = ;;
		*node[0x6086bbc6aee0] = =;
		*node[0x6086bbc6ae80] = 4;
		*node[0x6086bbc6aeb0] = 1000;
		*node[0x6086bbc6af10] = ;;
		*node[0x6086bbc6b000] = =;
		*node[0x6086bbc6af40] = 5;
		*node[0x6086bbc6afd0] = -;
		*node[0x6086bbc6af70] = 0;
		*node[0x6086bbc6afa0] = 1;
		*node[0x6086bbc6b030] = ;;
		*node[0x6086bbc6b0c0] = =;
		*node[0x6086bbc6b060] = 6;
		*node[0x6086bbc6b090] = 1;
		*node[0x6086bbc6b0f0] = ;;
		*node[0x6086bbc6b180] = =;
		*node[0x6086bbc6b120] = 7;
		*node[0x6086bbc6b150] = 2;
		*node[0x6086bbc6b1b0] = ;;
		*node[0x6086bbc6b1e0] = if;
		*node[0x6086bbc6b210] = op_no;
		*node[0x6086bbc6b2a0] = ==;
		*node[0x6086bbc6b240] = 1;
		*node[0x6086bbc6b270] = 0;
		*node[0x6086bbc6b2d0] = ;;
		*node[0x6086bbc6b300] = if;
		*node[0x6086bbc6b330] = op_no;
		*node[0x6086bbc6b3c0] = ==;
		*node[0x6086bbc6b360] = 2;
		*node[0x6086bbc6b390] = 0;
		*node[0x6086bbc6b3f0] = ;;
		*node[0x6086bbc6b420] = if;
		*node[0x6086bbc6b450] = op_no;
		*node[0x6086bbc6b4e0] = ==;
		*node[0x6086bbc6b480] = 3;
		*node[0x6086bbc6b4b0] = 0;
		*node[0x6086bbc6b510] = ;;
		*node[0x6086bbc6b540] = print;
		*node[0x6086bbc6b570] = 4;
		*node[0x6086bbc6b5a0] = ;;
		*node[0x6086bbc6b5d0] = print;
		*node[0x6086bbc6b600] = 5;
		*node[0x6086bbc6b630] = ;;
		*node[0x6086bbc6b780] = =;
		*node[0x6086bbc6b660] = 8;
		*node[0x6086bbc6b750] = -;
		*node[0x6086bbc6b690] = 0;
		*node[0x6086bbc6b720] = /;
		*node[0x6086bbc6b6c0] = 3;
		*node[0x6086bbc6b6f0] = 2;
		*node[0x6086bbc6b7b0] = ;;
		*node[0x6086bbc6b7e0] = print;
		*node[0x6086bbc6b810] = 8;
		*node[0x6086bbc6b840] = if;
		*node[0x6086bbc6b870] = op_no;
		*node[0x6086bbc6b900] = !=;
		*node[0x6086bbc6b8a0] = 1;
		*node[0x6086bbc6b8d0] = 0;
		*node[0x6086bbc6b930] = ;;
		*node[0x6086bbc6bb40] = =;
		*node[0x6086bbc6b960] = 9;
		*node[0x6086bbc6bb10] = -;
		*node[0x6086bbc6b9f0] = ^;
		*node[0x6086bbc6b990] = 2;
		*node[0x6086bbc6b9c0] = 2;
		*node[0x6086bbc6bae0] = *;
		*node[0x6086bbc6ba80] = *;
		*node[0x6086bbc6ba20] = 4;
		*node[0x6086bbc6ba50] = 1;
		*node[0x6086bbc6bab0] = 3;
		*node[0x6086bbc6bb70] = ;;
		*node[0x6086bbc6bba0] = if;
		*node[0x6086bbc6bbd0] = op_no;
		*node[0x6086bbc6bc60] = ==;
		*node[0x6086bbc6bc00] = 9;
		*node[0x6086bbc6bc30] = 0;
		*node[0x6086bbc6bc90] = ;;
		*node[0x6086bbc6be40] = =;
		*node[0x6086bbc6bcc0] = 8;
		*node[0x6086bbc6be10] = -;
		*node[0x6086bbc6bcf0] = 0;
		*node[0x6086bbc6bde0] = /;
		*node[0x6086bbc6bd20] = 2;
		*node[0x6086bbc6bdb0] = *;
		*node[0x6086bbc6bd50] = 2;
		*node[0x6086bbc6bd80] = 1;
		*node[0x6086bbc6be70] = ;;
		*node[0x6086bbc6bea0] = print;
		*node[0x6086bbc6bed0] = 6;
		*node[0x6086bbc6bf00] = ;;
		*node[0x6086bbc6bf30] = print;
		*node[0x6086bbc6bf60] = 8;
		*node[0x6086bbc6bf90] = if;
		*node[0x6086bbc6bfc0] = op_no;
		*node[0x6086bbc6c050] = <;
		*node[0x6086bbc6bff0] = 9;
		*node[0x6086bbc6c020] = 0;
		*node[0x6086bbc6c080] = ;;
		*node[0x6086bbc6c0b0] = print;
		*node[0x6086bbc6c0e0] = 5;
		*node[0x6086bbc6c110] = ;;
		*node[0x6086bbc6c380] = =;
		*node[0x6086bbc6c140] = 10;
		*node[0x6086bbc6c350] = /;
		*node[0x6086bbc6c290] = -;
		*node[0x6086bbc6c1d0] = -;
		*node[0x6086bbc6c170] = 0;
		*node[0x6086bbc6c1a0] = 2;
		*node[0x6086bbc6c260] = sqrt;
		*node[0x6086bbc6c230] = 1;
		*node[0x6086bbc6c200] = 9;
		*node[0x6086bbc6c320] = *;
		*node[0x6086bbc6c2c0] = 2;
		*node[0x6086bbc6c2f0] = 1;
		*node[0x6086bbc6c3b0] = ;;
		*node[0x6086bbc6c620] = =;
		*node[0x6086bbc6c3e0] = 11;
		*node[0x6086bbc6c5f0] = /;
		*node[0x6086bbc6c530] = +;
		*node[0x6086bbc6c470] = -;
		*node[0x6086bbc6c410] = 0;
		*node[0x6086bbc6c440] = 2;
		*node[0x6086bbc6c500] = sqrt;
		*node[0x6086bbc6c4d0] = 1;
		*node[0x6086bbc6c4a0] = 9;
		*node[0x6086bbc6c5c0] = *;
		*node[0x6086bbc6c560] = 2;
		*node[0x6086bbc6c590] = 1;
		*node[0x6086bbc6c650] = ;;
		*node[0x6086bbc6c680] = print;
		*node[0x6086bbc6c6b0] = 10;
		*node[0x6086bbc6c6e0] = ;;
		*node[0x6086bbc6c710] = print;
		*node[0x6086bbc6c740] = 11;
		*node[0x6086bbc6c770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd73698490] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e7a52bced00] = ;;
		*node[0x5e7a52bced30] = 0;
		*node[0x5e7a52bced60] = ;;
		*node[0x5e7a52bced90] = input;
		*node[0x5e7a52bcedc0] = 1;
		*node[0x5e7a52bcedf0] = 2;
		*node[0x5e7a52bcee20] = 3;
		*node[0x5e7a52bcee50] = ;;
		*node[0x5e7a52bceee0] = =;
		*node[0x5e7a52bcee80] = 4;
		*node[0x5e7a52bceeb0] = 1000;
		*node[0x5e7a52bcef10] = ;;
		*node[0x5e7a52bcf000] = =;
		*node[0x5e7a52bcef40] = 5;
		*node[0x5e7a52bcefd0] = -;
		*node[0x5e7a52bcef70] = 0;
		*node[0x5e7a52bcefa0] = 1;
		*node[0x5e7a52bcf030] = ;;
		*node[0x5e7a52bcf0c0] = =;
		*node[0x5e7a52bcf060] = 6;
		*node[0x5e7a52bcf090] = 1;
		*node[0x5e7a52bcf0f0] = ;;
		*node[0x5e7a52bcf180] = =;
		*node[0x5e7a52bcf120] = 7;
		*node[0x5e7a52bcf150] = 2;
		*node[0x5e7a52bcf1b0] = ;;
		*node[0x5e7a52bcf1e0] = if;
		*node[0x5e7a52bcf210] = op_no;
		*node[0x5e7a52bcf2a0] = ==;
		*node[0x5e7a52bcf240] = 1;
		*node[0x5e7a52bcf270] = 0;
		*node[0x5e7a52bcf2d0] = ;;
		*node[0x5e7a52bcf300] = if;
		*node[0x5e7a52bcf330] = op_no;
		*node[0x5e7a52bcf3c0] = ==;
		*node[0x5e7a52bcf360] = 2;
		*node[0x5e7a52bcf390] = 0;
		*node[0x5e7a52bcf3f0] = ;;
		*node[0x5e7a52bcf420] = if;
		*node[0x5e7a52bcf450] = op_no;
		*node[0x5e7a52bcf4e0] = ==;
		*node[0x5e7a52bcf480] = 3;
		*node[0x5e7a52bcf4b0] = 0;
		*node[0x5e7a52bcf510] = ;;
		*node[0x5e7a52bcf540] = print;
		*node[0x5e7a52bcf570] = 4;
		*node[0x5e7a52bcf5a0] = ;;
		*node[0x5e7a52bcf5d0] = print;
		*node[0x5e7a52bcf600] = 5;
		*node[0x5e7a52bcf630] = ;;
		*node[0x5e7a52bcf780] = =;
		*node[0x5e7a52bcf660] = 8;
		*node[0x5e7a52bcf750] = -;
		*node[0x5e7a52bcf690] = 0;
		*node[0x5e7a52bcf720] = /;
		*node[0x5e7a52bcf6c0] = 3;
		*node[0x5e7a52bcf6f0] = 2;
		*node[0x5e7a52bcf7b0] = ;;
		*node[0x5e7a52bcf7e0] = print;
		*node[0x5e7a52bcf810] = 8;
		*node[0x5e7a52bcf840] = if;
		*node[0x5e7a52bcf870] = op_no;
		*node[0x5e7a52bcf900] = !=;
		*node[0x5e7a52bcf8a0] = 1;
		*node[0x5e7a52bcf8d0] = 0;
		*node[0x5e7a52bcf930] = ;;
		*node[0x5e7a52bcfb40] = =;
		*node[0x5e7a52bcf960] = 9;
		*node[0x5e7a52bcfb10] = -;
		*node[0x5e7a52bcf9f0] = ^;
		*node[0x5e7a52bcf990] = 2;
		*node[0x5e7a52bcf9c0] = 2;
		*node[0x5e7a52bcfae0] = *;
		*node[0x5e7a52bcfa80] = *;
		*node[0x5e7a52bcfa20] = 4;
		*node[0x5e7a52bcfa50] = 1;
		*node[0x5e7a52bcfab0] = 3;
		*node[0x5e7a52bcfb70] = ;;
		*node[0x5e7a52bcfba0] = if;
		*node[0x5e7a52bcfbd0] = op_no;
		*node[0x5e7a52bcfc60] = ==;
		*node[0x5e7a52bcfc00] = 9;
		*node[0x5e7a52bcfc30] = 0;
		*node[0x5e7a52bcfc90] = ;;
		*node[0x5e7a52bcfe40] = =;
		*node[0x5e7a52bcfcc0] = 8;
		*node[0x5e7a52bcfe10] = -;
		*node[0x5e7a52bcfcf0] = 0;
		*node[0x5e7a52bcfde0] = /;
		*node[0x5e7a52bcfd20] = 2;
		*node[0x5e7a52bcfdb0] = *;
		*node[0x5e7a52bcfd50] = 2;
		*node[0x5e7a52bcfd80] = 1;
		*node[0x5e7a52bcfe70] = ;;
		*node[0x5e7a52bcfea0] = print;
		*node[0x5e7a52bcfed0] = 6;
		*node[0x5e7a52bcff00] = ;;
		*node[0x5e7a52bcff30] = print;
		*node[0x5e7a52bcff60] = 8;
		*node[0x5e7a52bcff90] = if;
		*node[0x5e7a52bcffc0] = op_no;
		*node[0x5e7a52bd0050] = <;
		*node[0x5e7a52bcfff0] = 9;
		*node[0x5e7a52bd0020] = 0;
		*node[0x5e7a52bd0080] = ;;
		*node[0x5e7a52bd00b0] = print;
		*node[0x5e7a52bd00e0] = 5;
		*node[0x5e7a52bd0110] = ;;
		*node[0x5e7a52bd0380] = =;
		*node[0x5e7a52bd0140] = 10;
		*node[0x5e7a52bd0350] = /;
		*node[0x5e7a52bd0290] = -;
		*node[0x5e7a52bd01d0] = -;
		*node[0x5e7a52bd0170] = 0;
		*node[0x5e7a52bd01a0] = 2;
		*node[0x5e7a52bd0260] = sqrt;
		*node[0x5e7a52bd0230] = 1;
		*node[0x5e7a52bd0200] = 9;
		*node[0x5e7a52bd0320] = *;
		*node[0x5e7a52bd02c0] = 2;
		*node[0x5e7a52bd02f0] = 1;
		*node[0x5e7a52bd03b0] = ;;
		*node[0x5e7a52bd0620] = =;
		*node[0x5e7a52bd03e0] = 11;
		*node[0x5e7a52bd05f0] = /;
		*node[0x5e7a52bd0530] = +;
		*node[0x5e7a52bd0470] = -;
		*node[0x5e7a52bd0410] = 0;
		*node[0x5e7a52bd0440] = 2;
		*node[0x5e7a52bd0500] = sqrt;
		*node[0x5e7a52bd04d0] = 1;
		*node[0x5e7a52bd04a0] = 9;
		*node[0x5e7a52bd05c0] = *;
		*node[0x5e7a52bd0560] = 2;
		*node[0x5e7a52bd0590] = 1;
		*node[0x5e7a52bd0650] = ;;
		*node[0x5e7a52bd0680] = print;
		*node[0x5e7a52bd06b0] = 10;
		*node[0x5e7a52bd06e0] = ;;
		*node[0x5e7a52bd0710] = print;
		*node[0x5e7a52bd0740] = 11;
		*node[0x5e7a52bd0770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffda867bca0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x620a47dc3d00] = ;;
		*node[0x620a47dc3d30] = 0;
		*node[0x620a47dc3d60] = ;;
		*node[0x620a47dc3d90] = input;
		*node[0x620a47dc3dc0] = 1;
		*node[0x620a47dc3df0] = 2;
		*node[0x620a47dc3e20] = 3;
		*node[0x620a47dc3e50] = ;;
		*node[0x620a47dc3ee0] = =;
		*node[0x620a47dc3e80] = 4;
		*node[0x620a47dc3eb0] = 1000;
		*node[0x620a47dc3f10] = ;;
		*node[0x620a47dc4000] = =;
		*node[0x620a47dc3f40] = 5;
		*node[0x620a47dc3fd0] = -;
		*node[0x620a47dc3f70] = 0;
		*node[0x620a47dc3fa0] = 1;
		*node[0x620a47dc4030] = ;;
		*node[0x620a47dc40c0] = =;
		*node[0x620a47dc4060] = 6;
		*node[0x620a47dc4090] = 1;
		*node[0x620a47dc40f0] = ;;
		*node[0x620a47dc4180] = =;
		*node[0x620a47dc4120] = 7;
		*node[0x620a47dc4150] = 2;
		*node[0x620a47dc41b0] = ;;
		*node[0x620a47dc41e0] = if;
		*node[0x620a47dc4210] = op_no;
		*node[0x620a47dc42a0] = ==;
		*node[0x620a47dc4240] = 1;
		*node[0x620a47dc4270] = 0;
		*node[0x620a47dc42d0] = ;;
		*node[0x620a47dc4300] = if;
		*node[0x620a47dc4330] = op_no;
		*node[0x620a47dc43c0] = ==;
		*node[0x620a47dc4360] = 2;
		*node[0x620a47dc4390] = 0;
		*node[0x620a47dc43f0] = ;;
		*node[0x620a47dc4420] = if;
		*node[0x620a47dc4450] = op_no;
		*node[0x620a47dc44e0] = ==;
		*node[0x620a47dc4480] = 3;
		*node[0x620a47dc44b0] = 0;
		*node[0x620a47dc4510] = ;;
		*node[0x620a47dc4540] = print;
		*node[0x620a47dc4570] = 4;
		*node[0x620a47dc45a0] = ;;
		*node[0x620a47dc45d0] = print;
		*node[0x620a47dc4600] = 5;
		*node[0x620a47dc4630] = ;;
		*node[0x620a47dc4780] = =;
		*node[0x620a47dc4660] = 8;
		*node[0x620a47dc4750] = -;
		*node[0x620a47dc4690] = 0;
		*node[0x620a47dc4720] = /;
		*node[0x620a47dc46c0] = 3;
		*node[0x620a47dc46f0] = 2;
		*node[0x620a47dc47b0] = ;;
		*node[0x620a47dc47e0] = print;
		*node[0x620a47dc4810] = 8;
		*node[0x620a47dc4840] = if;
		*node[0x620a47dc4870] = op_no;
		*node[0x620a47dc4900] = !=;
		*node[0x620a47dc48a0] = 1;
		*node[0x620a47dc48d0] = 0;
		*node[0x620a47dc4930] = ;;
		*node[0x620a47dc4b40] = =;
		*node[0x620a47dc4960] = 9;
		*node[0x620a47dc4b10] = -;
		*node[0x620a47dc49f0] = ^;
		*node[0x620a47dc4990] = 2;
		*node[0x620a47dc49c0] = 2;
		*node[0x620a47dc4ae0] = *;
		*node[0x620a47dc4a80] = *;
		*node[0x620a47dc4a20] = 4;
		*node[0x620a47dc4a50] = 1;
		*node[0x620a47dc4ab0] = 3;
		*node[0x620a47dc4b70] = ;;
		*node[0x620a47dc4ba0] = if;
		*node[0x620a47dc4bd0] = op_no;
		*node[0x620a47dc4c60] = ==;
		*node[0x620a47dc4c00] = 9;
		*node[0x620a47dc4c30] = 0;
		*node[0x620a47dc4c90] = ;;
		*node[0x620a47dc4e40] = =;
		*node[0x620a47dc4cc0] = 8;
		*node[0x620a47dc4e10] = -;
		*node[0x620a47dc4cf0] = 0;
		*node[0x620a47dc4de0] = /;
		*node[0x620a47dc4d20] = 2;
		*node[0x620a47dc4db0] = *;
		*node[0x620a47dc4d50] = 2;
		*node[0x620a47dc4d80] = 1;
		*node[0x620a47dc4e70] = ;;
		*node[0x620a47dc4ea0] = print;
		*node[0x620a47dc4ed0] = 6;
		*node[0x620a47dc4f00] = ;;
		*node[0x620a47dc4f30] = print;
		*node[0x620a47dc4f60] = 8;
		*node[0x620a47dc4f90] = if;
		*node[0x620a47dc4fc0] = op_no;
		*node[0x620a47dc5050] = <;
		*node[0x620a47dc4ff0] = 9;
		*node[0x620a47dc5020] = 0;
		*node[0x620a47dc5080] = ;;
		*node[0x620a47dc50b0] = print;
		*node[0x620a47dc50e0] = 5;
		*node[0x620a47dc5110] = ;;
		*node[0x620a47dc5380] = =;
		*node[0x620a47dc5140] = 10;
		*node[0x620a47dc5350] = /;
		*node[0x620a47dc5290] = -;
		*node[0x620a47dc51d0] = -;
		*node[0x620a47dc5170] = 0;
		*node[0x620a47dc51a0] = 2;
		*node[0x620a47dc5260] = sqrt;
		*node[0x620a47dc5230] = 1;
		*node[0x620a47dc5200] = 9;
		*node[0x620a47dc5320] = *;
		*node[0x620a47dc52c0] = 2;
		*node[0x620a47dc52f0] = 1;
		*node[0x620a47dc53b0] = ;;
		*node[0x620a47dc5620] = =;
		*node[0x620a47dc53e0] = 11;
		*node[0x620a47dc55f0] = /;
		*node[0x620a47dc5530] = +;
		*node[0x620a47dc5470] = -;
		*node[0x620a47dc5410] = 0;
		*node[0x620a47dc5440] = 2;
		*node[0x620a47dc5500] = sqrt;
		*node[0x620a47dc54d0] = 1;
		*node[0x620a47dc54a0] = 9;
		*node[0x620a47dc55c0] = *;
		*node[0x620a47dc5560] = 2;
		*node[0x620a47dc5590] = 1;
		*node[0x620a47dc5650] = ;;
		*node[0x620a47dc5680] = print;
		*node[0x620a47dc56b0] = 10;
		*node[0x620a47dc56e0] = ;;
		*node[0x620a47dc5710] = print;
		*node[0x620a47dc5740] = 11;
		*node[0x620a47dc5770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffdf7b25760] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x606b05b5cd00] = ;;
		*node[0x606b05b5cd30] = 0;
		*node[0x606b05b5cd60] = ;;
		*node[0x606b05b5cd90] = input;
		*node[0x606b05b5cdc0] = 1;
		*node[0x606b05b5cdf0] = 2;
		*node[0x606b05b5ce20] = 3;
		*node[0x606b05b5ce50] = ;;
		*node[0x606b05b5cee0] = =;
		*node[0x606b05b5ce80] = 4;
		*node[0x606b05b5ceb0] = 1000;
		*node[0x606b05b5cf10] = ;;
		*node[0x606b05b5d000] = =;
		*node[0x606b05b5cf40] = 5;
		*node[0x606b05b5cfd0] = -;
		*node[0x606b05b5cf70] = 0;
		*node[0x606b05b5cfa0] = 1;
		*node[0x606b05b5d030] = ;;
		*node[0x606b05b5d0c0] = =;
		*node[0x606b05b5d060] = 6;
		*node[0x606b05b5d090] = 1;
		*node[0x606b05b5d0f0] = ;;
		*node[0x606b05b5d180] = =;
		*node[0x606b05b5d120] = 7;
		*node[0x606b05b5d150] = 2;
		*node[0x606b05b5d1b0] = ;;
		*node[0x606b05b5d1e0] = if;
		*node[0x606b05b5d210] = op_no;
		*node[0x606b05b5d2a0] = ==;
		*node[0x606b05b5d240] = 1;
		*node[0x606b05b5d270] = 0;
		*node[0x606b05b5d2d0] = ;;
		*node[0x606b05b5d300] = if;
		*node[0x606b05b5d330] = op_no;
		*node[0x606b05b5d3c0] = ==;
		*node[0x606b05b5d360] = 2;
		*node[0x606b05b5d390] = 0;
		*node[0x606b05b5d3f0] = ;;
		*node[0x606b05b5d420] = if;
		*node[0x606b05b5d450] = op_no;
		*node[0x606b05b5d4e0] = ==;
		*node[0x606b05b5d480] = 3;
		*node[0x606b05b5d4b0] = 0;
		*node[0x606b05b5d510] = ;;
		*node[0x606b05b5d540] = print;
		*node[0x606b05b5d570] = 4;
		*node[0x606b05b5d5a0] = ;;
		*node[0x606b05b5d5d0] = print;
		*node[0x606b05b5d600] = 5;
		*node[0x606b05b5d630] = ;;
		*node[0x606b05b5d780] = =;
		*node[0x606b05b5d660] = 8;
		*node[0x606b05b5d750] = -;
		*node[0x606b05b5d690] = 0;
		*node[0x606b05b5d720] = /;
		*node[0x606b05b5d6c0] = 3;
		*node[0x606b05b5d6f0] = 2;
		*node[0x606b05b5d7b0] = ;;
		*node[0x606b05b5d7e0] = print;
		*node[0x606b05b5d810] = 8;
		*node[0x606b05b5d840] = if;
		*node[0x606b05b5d870] = op_no;
		*node[0x606b05b5d900] = !=;
		*node[0x606b05b5d8a0] = 1;
		*node[0x606b05b5d8d0] = 0;
		*node[0x606b05b5d930] = ;;
		*node[0x606b05b5db40] = =;
		*node[0x606b05b5d960] = 9;
		*node[0x606b05b5db10] = -;
		*node[0x606b05b5d9f0] = ^;
		*node[0x606b05b5d990] = 2;
		*node[0x606b05b5d9c0] = 2;
		*node[0x606b05b5dae0] = *;
		*node[0x606b05b5da80] = *;
		*node[0x606b05b5da20] = 4;
		*node[0x606b05b5da50] = 1;
		*node[0x606b05b5dab0] = 3;
		*node[0x606b05b5db70] = ;;
		*node[0x606b05b5dba0] = if;
		*node[0x606b05b5dbd0] = op_no;
		*node[0x606b05b5dc60] = ==;
		*node[0x606b05b5dc00] = 9;
		*node[0x606b05b5dc30] = 0;
		*node[0x606b05b5dc90] = ;;
		*node[0x606b05b5de40] = =;
		*node[0x606b05b5dcc0] = 8;
		*node[0x606b05b5de10] = -;
		*node[0x606b05b5dcf0] = 0;
		*node[0x606b05b5dde0] = /;
		*node[0x606b05b5dd20] = 2;
		*node[0x606b05b5ddb0] = *;
		*node[0x606b05b5dd50] = 2;
		*node[0x606b05b5dd80] = 1;
		*node[0x606b05b5de70] = ;;
		*node[0x606b05b5dea0] = print;
		*node[0x606b05b5ded0] = 6;
		*node[0x606b05b5df00] = ;;
		*node[0x606b05b5df30] = print;
		*node[0x606b05b5df60] = 8;
		*node[0x606b05b5df90] = if;
		*node[0x606b05b5dfc0] = op_no;
		*node[0x606b05b5e050] = <;
		*node[0x606b05b5dff0] = 9;
		*node[0x606b05b5e020] = 0;
		*node[0x606b05b5e080] = ;;
		*node[0x606b05b5e0b0] = print;
		*node[0x606b05b5e0e0] = 5;
		*node[0x606b05b5e110] = ;;
		*node[0x606b05b5e380] = =;
		*node[0x606b05b5e140] = 10;
		*node[0x606b05b5e350] = /;
		*node[0x606b05b5e290] = -;
		*node[0x606b05b5e1d0] = -;
		*node[0x606b05b5e170] = 0;
		*node[0x606b05b5e1a0] = 2;
		*node[0x606b05b5e260] = sqrt;
		*node[0x606b05b5e230] = 1;
		*node[0x606b05b5e200] = 9;
		*node[0x606b05b5e320] = *;
		*node[0x606b05b5e2c0] = 2;
		*node[0x606b05b5e2f0] = 1;
		*node[0x606b05b5e3b0] = ;;
		*node[0x606b05b5e620] = =;
		*node[0x606b05b5e3e0] = 11;
		*node[0x606b05b5e5f0] = /;
		*node[0x606b05b5e530] = +;
		*node[0x606b05b5e470] = -;
		*node[0x606b05b5e410] = 0;
		*node[0x606b05b5e440] = 2;
		*node[0x606b05b5e500] = sqrt;
		*node[0x606b05b5e4d0] = 1;
		*node[0x606b05b5e4a0] = 9;
		*node[0x606b05b5e5c0] = *;
		*node[0x606b05b5e560] = 2;
		*node[0x606b05b5e590] = 1;
		*node[0x606b05b5e650] = ;;
		*node[0x606b05b5e680] = print;
		*node[0x606b05b5e6b0] = 10;
		*node[0x606b05b5e6e0] = ;;
		*node[0x606b05b5e710] = print;
		*node[0x606b05b5e740] = 11;
		*node[0x606b05b5e770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffde06c5090] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x57074ea82d00] = ;;
		*node[0x57074ea82d30] = 0;
		*node[0x57074ea82d60] = ;;
		*node[0x57074ea82d90] = input;
		*node[0x57074ea82dc0] = 1;
		*node[0x57074ea82df0] = 2;
		*node[0x57074ea82e20] = 3;
		*node[0x57074ea82e50] = ;;
		*node[0x57074ea82ee0] = =;
		*node[0x57074ea82e80] = 4;
		*node[0x57074ea82eb0] = 1000;
		*node[0x57074ea82f10] = ;;
		*node[0x57074ea83000] = =;
		*node[0x57074ea82f40] = 5;
		*node[0x57074ea82fd0] = -;
		*node[0x57074ea82f70] = 0;
		*node[0x57074ea82fa0] = 1;
		*node[0x57074ea83030] = ;;
		*node[0x57074ea830c0] = =;
		*node[0x57074ea83060] = 6;
		*node[0x57074ea83090] = 1;
		*node[0x57074ea830f0] = ;;
		*node[0x57074ea83180] = =;
		*node[0x57074ea83120] = 7;
		*node[0x57074ea83150] = 2;
		*node[0x57074ea831b0] = ;;
		*node[0x57074ea831e0] = if;
		*node[0x57074ea83210] = op_no;
		*node[0x57074ea832a0] = ==;
		*node[0x57074ea83240] = 1;
		*node[0x57074ea83270] = 0;
		*node[0x57074ea832d0] = ;;
		*node[0x57074ea83300] = if;
		*node[0x57074ea83330] = op_no;
		*node[0x57074ea833c0] = ==;
		*node[0x57074ea83360] = 2;
		*node[0x57074ea83390] = 0;
		*node[0x57074ea833f0] = ;;
		*node[0x57074ea83420] = if;
		*node[0x57074ea83450] = op_no;
		*node[0x57074ea834e0] = ==;
		*node[0x57074ea83480] = 3;
		*node[0x57074ea834b0] = 0;
		*node[0x57074ea83510] = ;;
		*node[0x57074ea83540] = print;
		*node[0x57074ea83570] = 4;
		*node[0x57074ea835a0] = ;;
		*node[0x57074ea835d0] = print;
		*node[0x57074ea83600] = 5;
		*node[0x57074ea83630] = ;;
		*node[0x57074ea83780] = =;
		*node[0x57074ea83660] = 8;
		*node[0x57074ea83750] = -;
		*node[0x57074ea83690] = 0;
		*node[0x57074ea83720] = /;
		*node[0x57074ea836c0] = 3;
		*node[0x57074ea836f0] = 2;
		*node[0x57074ea837b0] = ;;
		*node[0x57074ea837e0] = print;
		*node[0x57074ea83810] = 8;
		*node[0x57074ea83840] = if;
		*node[0x57074ea83870] = op_no;
		*node[0x57074ea83900] = !=;
		*node[0x57074ea838a0] = 1;
		*node[0x57074ea838d0] = 0;
		*node[0x57074ea83930] = ;;
		*node[0x57074ea83b40] = =;
		*node[0x57074ea83960] = 9;
		*node[0x57074ea83b10] = -;
		*node[0x57074ea839f0] = ^;
		*node[0x57074ea83990] = 2;
		*node[0x57074ea839c0] = 2;
		*node[0x57074ea83ae0] = *;
		*node[0x57074ea83a80] = *;
		*node[0x57074ea83a20] = 4;
		*node[0x57074ea83a50] = 1;
		*node[0x57074ea83ab0] = 3;
		*node[0x57074ea83b70] = ;;
		*node[0x57074ea83ba0] = if;
		*node[0x57074ea83bd0] = op_no;
		*node[0x57074ea83c60] = ==;
		*node[0x57074ea83c00] = 9;
		*node[0x57074ea83c30] = 0;
		*node[0x57074ea83c90] = ;;
		*node[0x57074ea83e40] = =;
		*node[0x57074ea83cc0] = 8;
		*node[0x57074ea83e10] = -;
		*node[0x57074ea83cf0] = 0;
		*node[0x57074ea83de0] = /;
		*node[0x57074ea83d20] = 2;
		*node[0x57074ea83db0] = *;
		*node[0x57074ea83d50] = 2;
		*node[0x57074ea83d80] = 1;
		*node[0x57074ea83e70] = ;;
		*node[0x57074ea83ea0] = print;
		*node[0x57074ea83ed0] = 6;
		*node[0x57074ea83f00] = ;;
		*node[0x57074ea83f30] = print;
		*node[0x57074ea83f60] = 8;
		*node[0x57074ea83f90] = if;
		*node[0x57074ea83fc0] = op_no;
		*node[0x57074ea84050] = <;
		*node[0x57074ea83ff0] = 9;
		*node[0x57074ea84020] = 0;
		*node[0x57074ea84080] = ;;
		*node[0x57074ea840b0] = print;
		*node[0x57074ea840e0] = 5;
		*node[0x57074ea84110] = ;;
		*node[0x57074ea84380] = =;
		*node[0x57074ea84140] = 10;
		*node[0x57074ea84350] = /;
		*node[0x57074ea84290] = -;
		*node[0x57074ea841d0] = -;
		*node[0x57074ea84170] = 0;
		*node[0x57074ea841a0] = 2;
		*node[0x57074ea84260] = sqrt;
		*node[0x57074ea84230] = 1;
		*node[0x57074ea84200] = 9;
		*node[0x57074ea84320] = *;
		*node[0x57074ea842c0] = 2;
		*node[0x57074ea842f0] = 1;
		*node[0x57074ea843b0] = ;;
		*node[0x57074ea84620] = =;
		*node[0x57074ea843e0] = 11;
		*node[0x57074ea845f0] = /;
		*node[0x57074ea84530] = +;
		*node[0x57074ea84470] = -;
		*node[0x57074ea84410] = 0;
		*node[0x57074ea84440] = 2;
		*node[0x57074ea84500] = sqrt;
		*node[0x57074ea844d0] = 1;
		*node[0x57074ea844a0] = 9;
		*node[0x57074ea845c0] = *;
		*node[0x57074ea84560] = 2;
		*node[0x57074ea84590] = 1;
		*node[0x57074ea84650] = ;;
		*node[0x57074ea84680] = print;
		*node[0x57074ea846b0] = 10;
		*node[0x57074ea846e0] = ;;
		*node[0x57074ea84710] = print;
		*node[0x57074ea84740] = 11;
		*node[0x57074ea84770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffec72f1010] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x585694790d00] = ;;
		*node[0x585694790d30] = 0;
		*node[0x585694790d60] = ;;
		*node[0x585694790d90] = input;
		*node[0x585694790dc0] = 1;
		*node[0x585694790df0] = 2;
		*node[0x585694790e20] = 3;
		*node[0x585694790e50] = ;;
		*node[0x585694790ee0] = =;
		*node[0x585694790e80] = 4;
		*node[0x585694790eb0] = 1000;
		*node[0x585694790f10] = ;;
		*node[0x585694791000] = =;
		*node[0x585694790f40] = 5;
		*node[0x585694790fd0] = -;
		*node[0x585694790f70] = 0;
		*node[0x585694790fa0] = 1;
		*node[0x585694791030] = ;;
		*node[0x5856947910c0] = =;
		*node[0x585694791060] = 6;
		*node[0x585694791090] = 1;
		*node[0x5856947910f0] = ;;
		*node[0x585694791180] = =;
		*node[0x585694791120] = 7;
		*node[0x585694791150] = 2;
		*node[0x5856947911b0] = ;;
		*node[0x5856947911e0] = if;
		*node[0x585694791210] = op_no;
		*node[0x5856947912a0] = ==;
		*node[0x585694791240] = 1;
		*node[0x585694791270] = 0;
		*node[0x5856947912d0] = ;;
		*node[0x585694791300] = if;
		*node[0x585694791330] = op_no;
		*node[0x5856947913c0] = ==;
		*node[0x585694791360] = 2;
		*node[0x585694791390] = 0;
		*node[0x5856947913f0] = ;;
		*node[0x585694791420] = if;
		*node[0x585694791450] = op_no;
		*node[0x5856947914e0] = ==;
		*node[0x585694791480] = 3;
		*node[0x5856947914b0] = 0;
		*node[0x585694791510] = ;;
		*node[0x585694791540] = print;
		*node[0x585694791570] = 4;
		*node[0x5856947915a0] = ;;
		*node[0x5856947915d0] = print;
		*node[0x585694791600] = 5;
		*node[0x585694791630] = ;;
		*node[0x585694791780] = =;
		*node[0x585694791660] = 8;
		*node[0x585694791750] = -;
		*node[0x585694791690] = 0;
		*node[0x585694791720] = /;
		*node[0x5856947916c0] = 3;
		*node[0x5856947916f0] = 2;
		*node[0x5856947917b0] = ;;
		*node[0x5856947917e0] = print;
		*node[0x585694791810] = 8;
		*node[0x585694791840] = if;
		*node[0x585694791870] = op_no;
		*node[0x585694791900] = !=;
		*node[0x5856947918a0] = 1;
		*node[0x5856947918d0] = 0;
		*node[0x585694791930] = ;;
		*node[0x585694791b40] = =;
		*node[0x585694791960] = 9;
		*node[0x585694791b10] = -;
		*node[0x5856947919f0] = ^;
		*node[0x585694791990] = 2;
		*node[0x5856947919c0] = 2;
		*node[0x585694791ae0] = *;
		*node[0x585694791a80] = *;
		*node[0x585694791a20] = 4;
		*node[0x585694791a50] = 1;
		*node[0x585694791ab0] = 3;
		*node[0x585694791b70] = ;;
		*node[0x585694791ba0] = if;
		*node[0x585694791bd0] = op_no;
		*node[0x585694791c60] = ==;
		*node[0x585694791c00] = 9;
		*node[0x585694791c30] = 0;
		*node[0x585694791c90] = ;;
		*node[0x585694791e40] = =;
		*node[0x585694791cc0] = 8;
		*node[0x585694791e10] = -;
		*node[0x585694791cf0] = 0;
		*node[0x585694791de0] = /;
		*node[0x585694791d20] = 2;
		*node[0x585694791db0] = *;
		*node[0x585694791d50] = 2;
		*node[0x585694791d80] = 1;
		*node[0x585694791e70] = ;;
		*node[0x585694791ea0] = print;
		*node[0x585694791ed0] = 6;
		*node[0x585694791f00] = ;;
		*node[0x585694791f30] = print;
		*node[0x585694791f60] = 8;
		*node[0x585694791f90] = if;
		*node[0x585694791fc0] = op_no;
		*node[0x585694792050] = <;
		*node[0x585694791ff0] = 9;
		*node[0x585694792020] = 0;
		*node[0x585694792080] = ;;
		*node[0x5856947920b0] = print;
		*node[0x5856947920e0] = 5;
		*node[0x585694792110] = ;;
		*node[0x585694792380] = =;
		*node[0x585694792140] = 10;
		*node[0x585694792350] = /;
		*node[0x585694792290] = -;
		*node[0x5856947921d0] = -;
		*node[0x585694792170] = 0;
		*node[0x5856947921a0] = 2;
		*node[0x585694792260] = sqrt;
		*node[0x585694792230] = 1;
		*node[0x585694792200] = 9;
		*node[0x585694792320] = *;
		*node[0x5856947922c0] = 2;
		*node[0x5856947922f0] = 1;
		*node[0x5856947923b0] = ;;
		*node[0x585694792620] = =;
		*node[0x5856947923e0] = 11;
		*node[0x5856947925f0] = /;
		*node[0x585694792530] = +;
		*node[0x585694792470] = -;
		*node[0x585694792410] = 0;
		*node[0x585694792440] = 2;
		*node[0x585694792500] = sqrt;
		*node[0x5856947924d0] = 1;
		*node[0x5856947924a0] = 9;
		*node[0x5856947925c0] = *;
		*node[0x585694792560] = 2;
		*node[0x585694792590] = 1;
		*node[0x585694792650] = ;;
		*node[0x585694792680] = print;
		*node[0x5856947926b0] = 10;
		*node[0x5856947926e0] = ;;
		*node[0x585694792710] = print;
		*node[0x585694792740] = 11;
		*node[0x585694792770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc18509ce0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5ea6fda83d00] = ;;
		*node[0x5ea6fda83d30] = 0;
		*node[0x5ea6fda83d60] = ;;
		*node[0x5ea6fda83d90] = input;
		*node[0x5ea6fda83dc0] = 1;
		*node[0x5ea6fda83df0] = 2;
		*node[0x5ea6fda83e20] = 3;
		*node[0x5ea6fda83e50] = ;;
		*node[0x5ea6fda83ee0] = =;
		*node[0x5ea6fda83e80] = 4;
		*node[0x5ea6fda83eb0] = 1000;
		*node[0x5ea6fda83f10] = ;;
		*node[0x5ea6fda84000] = =;
		*node[0x5ea6fda83f40] = 5;
		*node[0x5ea6fda83fd0] = -;
		*node[0x5ea6fda83f70] = 0;
		*node[0x5ea6fda83fa0] = 1;
		*node[0x5ea6fda84030] = ;;
		*node[0x5ea6fda840c0] = =;
		*node[0x5ea6fda84060] = 6;
		*node[0x5ea6fda84090] = 1;
		*node[0x5ea6fda840f0] = ;;
		*node[0x5ea6fda84180] = =;
		*node[0x5ea6fda84120] = 7;
		*node[0x5ea6fda84150] = 2;
		*node[0x5ea6fda841b0] = ;;
		*node[0x5ea6fda841e0] = if;
		*node[0x5ea6fda84210] = op_no;
		*node[0x5ea6fda842a0] = ==;
		*node[0x5ea6fda84240] = 1;
		*node[0x5ea6fda84270] = 0;
		*node[0x5ea6fda842d0] = ;;
		*node[0x5ea6fda84300] = if;
		*node[0x5ea6fda84330] = op_no;
		*node[0x5ea6fda843c0] = ==;
		*node[0x5ea6fda84360] = 2;
		*node[0x5ea6fda84390] = 0;
		*node[0x5ea6fda843f0] = ;;
		*node[0x5ea6fda84420] = if;
		*node[0x5ea6fda84450] = op_no;
		*node[0x5ea6fda844e0] = ==;
		*node[0x5ea6fda84480] = 3;
		*node[0x5ea6fda844b0] = 0;
		*node[0x5ea6fda84510] = ;;
		*node[0x5ea6fda84540] = print;
		*node[0x5ea6fda84570] = 4;
		*node[0x5ea6fda845a0] = ;;
		*node[0x5ea6fda845d0] = print;
		*node[0x5ea6fda84600] = 5;
		*node[0x5ea6fda84630] = ;;
		*node[0x5ea6fda84780] = =;
		*node[0x5ea6fda84660] = 8;
		*node[0x5ea6fda84750] = -;
		*node[0x5ea6fda84690] = 0;
		*node[0x5ea6fda84720] = /;
		*node[0x5ea6fda846c0] = 3;
		*node[0x5ea6fda846f0] = 2;
		*node[0x5ea6fda847b0] = ;;
		*node[0x5ea6fda847e0] = print;
		*node[0x5ea6fda84810] = 8;
		*node[0x5ea6fda84840] = if;
		*node[0x5ea6fda84870] = op_no;
		*node[0x5ea6fda84900] = !=;
		*node[0x5ea6fda848a0] = 1;
		*node[0x5ea6fda848d0] = 0;
		*node[0x5ea6fda84930] = ;;
		*node[0x5ea6fda84b40] = =;
		*node[0x5ea6fda84960] = 9;
		*node[0x5ea6fda84b10] = -;
		*node[0x5ea6fda849f0] = ^;
		*node[0x5ea6fda84990] = 2;
		*node[0x5ea6fda849c0] = 2;
		*node[0x5ea6fda84ae0] = *;
		*node[0x5ea6fda84a80] = *;
		*node[0x5ea6fda84a20] = 4;
		*node[0x5ea6fda84a50] = 1;
		*node[0x5ea6fda84ab0] = 3;
		*node[0x5ea6fda84b70] = ;;
		*node[0x5ea6fda84ba0] = if;
		*node[0x5ea6fda84bd0] = op_no;
		*node[0x5ea6fda84c60] = ==;
		*node[0x5ea6fda84c00] = 9;
		*node[0x5ea6fda84c30] = 0;
		*node[0x5ea6fda84c90] = ;;
		*node[0x5ea6fda84e40] = =;
		*node[0x5ea6fda84cc0] = 8;
		*node[0x5ea6fda84e10] = -;
		*node[0x5ea6fda84cf0] = 0;
		*node[0x5ea6fda84de0] = /;
		*node[0x5ea6fda84d20] = 2;
		*node[0x5ea6fda84db0] = *;
		*node[0x5ea6fda84d50] = 2;
		*node[0x5ea6fda84d80] = 1;
		*node[0x5ea6fda84e70] = ;;
		*node[0x5ea6fda84ea0] = print;
		*node[0x5ea6fda84ed0] = 6;
		*node[0x5ea6fda84f00] = ;;
		*node[0x5ea6fda84f30] = print;
		*node[0x5ea6fda84f60] = 8;
		*node[0x5ea6fda84f90] = if;
		*node[0x5ea6fda84fc0] = op_no;
		*node[0x5ea6fda85050] = <;
		*node[0x5ea6fda84ff0] = 9;
		*node[0x5ea6fda85020] = 0;
		*node[0x5ea6fda85080] = ;;
		*node[0x5ea6fda850b0] = print;
		*node[0x5ea6fda850e0] = 5;
		*node[0x5ea6fda85110] = ;;
		*node[0x5ea6fda85380] = =;
		*node[0x5ea6fda85140] = 10;
		*node[0x5ea6fda85350] = /;
		*node[0x5ea6fda85290] = -;
		*node[0x5ea6fda851d0] = -;
		*node[0x5ea6fda85170] = 0;
		*node[0x5ea6fda851a0] = 2;
		*node[0x5ea6fda85260] = sqrt;
		*node[0x5ea6fda85230] = 1;
		*node[0x5ea6fda85200] = 9;
		*node[0x5ea6fda85320] = *;
		*node[0x5ea6fda852c0] = 2;
		*node[0x5ea6fda852f0] = 1;
		*node[0x5ea6fda853b0] = ;;
		*node[0x5ea6fda85620] = =;
		*node[0x5ea6fda853e0] = 11;
		*node[0x5ea6fda855f0] = /;
		*node[0x5ea6fda85530] = +;
		*node[0x5ea6fda85470] = -;
		*node[0x5ea6fda85410] = 0;
		*node[0x5ea6fda85440] = 2;
		*node[0x5ea6fda85500] = sqrt;
		*node[0x5ea6fda854d0] = 1;
		*node[0x5ea6fda854a0] = 9;
		*node[0x5ea6fda855c0] = *;
		*node[0x5ea6fda85560] = 2;
		*node[0x5ea6fda85590] = 1;
		*node[0x5ea6fda85650] = ;;
		*node[0x5ea6fda85680] = print;
		*node[0x5ea6fda856b0] = 10;
		*node[0x5ea6fda856e0] = ;;
		*node[0x5ea6fda85710] = print;
		*node[0x5ea6fda85740] = 11;
		*node[0x5ea6fda85770] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffea951bd80] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffea951bd80] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc3495afc0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc3495afc0] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fffe513d4d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fffe513d4d0] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc47362cb0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc47362cb0] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc3d725f20] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffc3d725f20] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd2e365050] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffd2e365050] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffdf1298870] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffdf1298870] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd88b6d2f0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffd88b6d2f0] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd2c741650] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffd2c741650] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffca53e97b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffca53e97b0] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffde2655f60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffde2655f60] "tree" called from ../tree/tree.cpp(270) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc8bd661b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5694e822ead0] = ;;
		*node[0x5694e822eb00] = 0;
		*node[0x5694e822eb30] = ;;
		*node[0x5694e822eb60] = input;
		*node[0x5694e822eb90] = 1;
		*node[0x5694e822ebc0] = 2;
		*node[0x5694e822ebf0] = 3;
		*node[0x5694e822f030] = ;;
		*node[0x5694e822f0c0] = 1;
		*node[0x5694e822f0f0] = 2;
		*node[0x5694e822f120] = 3;
		*node[0x5694e822f090] = 4;
		*node[0x5694e822f150] = ;;
		*node[0x5694e822f180] = 0;
		*node[0x5694e822f1b0] = 1;
		*node[0x5694e822f1e0] = 2;
		*node[0x5694e822f210] = 3;
		*node[0x5694e822f240] = ;;
		*node[0x5694e822f270] = if;
		*node[0x5694e822f2a0] = op_no;
		*node[0x5694e822f330] = ==;
		*node[0x5694e822f2d0] = 1;
		*node[0x5694e822f300] = 0;
		*node[0x5694e822f360] = ;;
		*node[0x5694e822f3f0] = 2;
		*node[0x5694e822f420] = 3;
		*node[0x5694e822f3c0] = 5;
		*node[0x5694e822f450] = ;;
		*node[0x5694e822f4e0] = 1;
		*node[0x5694e822f510] = 2;
		*node[0x5694e822f540] = 3;
		*node[0x5694e822f4b0] = 6;
		*node[0x5694e822f570] = ;;
		*node[0x5694e822f5a0] = 0;
		*node[0x5694e822f5d0] = 1;
		*node[0x5694e822f600] = 2;
		*node[0x5694e822f630] = ;;
		*node[0x5694e822f6c0] = =;
		*node[0x5694e822f660] = 7;
		*node[0x5694e822f6f0] = ;;
		*node[0x5694e822f780] = =;
		*node[0x5694e822f720] = 8;
		*node[0x5694e822f750] = 1;
		*node[0x5694e822f7b0] = ;;
		*node[0x5694e822f840] = =;
		*node[0x5694e822f7e0] = 9;
		*node[0x5694e822f810] = 1000;
		*node[0x5694e822f870] = ;;
		*node[0x5694e822f8a0] = if;
		*node[0x5694e822f8d0] = op_no;
		*node[0x5694e822f960] = ==;
		*node[0x5694e822f900] = 1;
		*node[0x5694e822f930] = 0;
		*node[0x5694e822f990] = ;;
		*node[0x5694e822f9c0] = if;
		*node[0x5694e822f9f0] = op_no;
		*node[0x5694e822fa80] = ==;
		*node[0x5694e822fa20] = 2;
		*node[0x5694e822fa50] = 0;
		*node[0x5694e822fab0] = ;;
		*node[0x5694e822fae0] = print;
		*node[0x5694e822fb10] = 9;
		*node[0x5694e822fb40] = ;;
		*node[0x5694e822fb70] = print;
		*node[0x5694e822fba0] = 7;
		*node[0x5694e822fbd0] = ;;
		*node[0x5694e822fd20] = =;
		*node[0x5694e822fc00] = 10;
		*node[0x5694e822fcf0] = /;
		*node[0x5694e822fc90] = -;
		*node[0x5694e822fc30] = 0;
		*node[0x5694e822fc60] = 2;
		*node[0x5694e822fcc0] = 1;
		*node[0x5694e822fd50] = ;;
		*node[0x5694e822fd80] = print;
		*node[0x5694e822fdb0] = 8;
		*node[0x5694e822fde0] = ;;
		*node[0x5694e822fe10] = print;
		*node[0x5694e822fe40] = 10;
		*node[0x5694e822fe70] = ;;
		*node[0x5694e822fea0] = return;
		*node[0x5694e822fed0] = 0;
		*node[0x5694e822ff00] = ;;
		*node[0x5694e822ff30] = 0;
		*node[0x5694e822ff60] = 1;
		*node[0x5694e822ff90] = 2;
		*node[0x5694e822ffc0] = 3;
		*node[0x5694e822fff0] = ;;
		*node[0x5694e8230080] = =;
		*node[0x5694e8230020] = 7;
		*node[0x5694e82300b0] = ;;
		*node[0x5694e8230140] = =;
		*node[0x5694e82300e0] = 8;
		*node[0x5694e8230110] = 1;
		*node[0x5694e8230170] = ;;
		*node[0x5694e8230200] = =;
		*node[0x5694e82301a0] = 11;
		*node[0x5694e82301d0] = 2;
		*node[0x5694e8230230] = ;;
		*node[0x5694e8230260] = if;
		*node[0x5694e8230290] = op_no;
		*node[0x5694e8230320] = ==;
		*node[0x5694e82302c0] = 3;
		*node[0x5694e82302f0] = 0;
		*node[0x5694e8230350] = ;;
		*node[0x5694e82303e0] = =;
		*node[0x5694e8230380] = 12;
		*node[0x5694e82303b0] = 0;
		*node[0x5694e8230410] = ;;
		*node[0x5694e8230560] = =;
		*node[0x5694e8230440] = 13;
		*node[0x5694e8230530] = /;
		*node[0x5694e82304d0] = -;
		*node[0x5694e8230470] = 0;
		*node[0x5694e82304a0] = 2;
		*node[0x5694e8230500] = 1;
		*node[0x5694e8230590] = ;;
		*node[0x5694e82305c0] = print;
		*node[0x5694e82305f0] = 11;
		*node[0x5694e8230620] = ;;
		*node[0x5694e8230650] = print;
		*node[0x5694e8230680] = 12;
		*node[0x5694e82306b0] = 13;
		*node[0x5694e82306e0] = ;;
		*node[0x5694e82308f0] = =;
		*node[0x5694e8230710] = 14;
		*node[0x5694e82308c0] = -;
		*node[0x5694e82307a0] = *;
		*node[0x5694e8230740] = 2;
		*node[0x5694e8230770] = 2;
		*node[0x5694e8230890] = *;
		*node[0x5694e8230830] = *;
		*node[0x5694e82307d0] = 4;
		*node[0x5694e8230800] = 1;
		*node[0x5694e8230860] = 3;
		*node[0x5694e8230920] = ;;
		*node[0x5694e8230950] = if;
		*node[0x5694e8230980] = op_no;
		*node[0x5694e8230a10] = >;
		*node[0x5694e82309b0] = 14;
		*node[0x5694e82309e0] = 0;
		*node[0x5694e8230a40] = ;;
		*node[0x5694e8230cb0] = =;
		*node[0x5694e8230a70] = 12;
		*node[0x5694e8230c80] = /;
		*node[0x5694e8230bc0] = -;
		*node[0x5694e8230b00] = -;
		*node[0x5694e8230aa0] = 0;
		*node[0x5694e8230ad0] = 2;
		*node[0x5694e8230b90] = sqrt;
		*node[0x5694e8230b60] = 1;
		*node[0x5694e8230b30] = 15;
		*node[0x5694e8230c50] = *;
		*node[0x5694e8230bf0] = 2;
		*node[0x5694e8230c20] = 1;
		*node[0x5694e8230ce0] = ;;
		*node[0x5694e8230f50] = =;
		*node[0x5694e8230d10] = 13;
		*node[0x5694e8230f20] = /;
		*node[0x5694e8230e60] = +;
		*node[0x5694e8230da0] = -;
		*node[0x5694e8230d40] = 0;
		*node[0x5694e8230d70] = 2;
		*node[0x5694e8230e30] = sqrt;
		*node[0x5694e8230e00] = 1;
		*node[0x5694e8230dd0] = 15;
		*node[0x5694e8230ef0] = *;
		*node[0x5694e8230e90] = 2;
		*node[0x5694e8230ec0] = 1;
		*node[0x5694e8230f80] = ;;
		*node[0x5694e8230fb0] = print;
		*node[0x5694e8230fe0] = 11;
		*node[0x5694e8231010] = ;;
		*node[0x5694e8231040] = print;
		*node[0x5694e8231070] = 12;
		*node[0x5694e82310a0] = 13;
		*node[0x5694e82310d0] = if;
		*node[0x5694e8231100] = op_no;
		*node[0x5694e8231190] = ==;
		*node[0x5694e8231130] = 14;
		*node[0x5694e8231160] = 0;
		*node[0x5694e82311c0] = ;;
		*node[0x5694e8231370] = =;
		*node[0x5694e82311f0] = 10;
		*node[0x5694e8231340] = /;
		*node[0x5694e8231280] = -;
		*node[0x5694e8231220] = 0;
		*node[0x5694e8231250] = 2;
		*node[0x5694e8231310] = *;
		*node[0x5694e82312b0] = 2;
		*node[0x5694e82312e0] = 1;
		*node[0x5694e82313a0] = ;;
		*node[0x5694e82313d0] = print;
		*node[0x5694e8231400] = 8;
		*node[0x5694e8231430] = ;;
		*node[0x5694e8231460] = print;
		*node[0x5694e8231490] = 10;
		*node[0x5694e82314c0] = ;;
		*node[0x5694e82314f0] = print;
		*node[0x5694e8231520] = 7;
		*node[0x5694e8231550] = ;;
		*node[0x5694e8231580] = return;
		*node[0x5694e82315b0] = 0;
		*node[0x5694e82315e0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc8c01c7c0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5bc386ded5d0] = ;;
		*node[0x5bc386ded600] = 0;
		*node[0x5bc386ded630] = ;;
		*node[0x5bc386ded660] = input;
		*node[0x5bc386ded690] = 1;
		*node[0x5bc386ded6c0] = 2;
		*node[0x5bc386ded6f0] = 3;
		*node[0x5bc386ded720] = ;;
		*node[0x5bc386ded7b0] = 1;
		*node[0x5bc386ded7e0] = 2;
		*node[0x5bc386ded810] = 3;
		*node[0x5bc386ded780] = 4;
		*node[0x5bc386ded840] = ;;
		*node[0x5bc386ded870] = 0;
		*node[0x5bc386ded8a0] = 1;
		*node[0x5bc386ded8d0] = 2;
		*node[0x5bc386ded900] = 3;
		*node[0x5bc386ded930] = ;;
		*node[0x5bc386ded960] = if;
		*node[0x5bc386ded990] = op_no;
		*node[0x5bc386deda20] = ==;
		*node[0x5bc386ded9c0] = 1;
		*node[0x5bc386ded9f0] = 0;
		*node[0x5bc386deda50] = ;;
		*node[0x5bc386dedae0] = 2;
		*node[0x5bc386dedb10] = 3;
		*node[0x5bc386dedab0] = 5;
		*node[0x5bc386dedb40] = ;;
		*node[0x5bc386dedbd0] = 1;
		*node[0x5bc386dedc00] = 2;
		*node[0x5bc386dedc30] = 3;
		*node[0x5bc386dedba0] = 6;
		*node[0x5bc386dedc60] = ;;
		*node[0x5bc386dedc90] = 0;
		*node[0x5bc386dedcc0] = 1;
		*node[0x5bc386dedcf0] = 2;
		*node[0x5bc386dedd20] = ;;
		*node[0x5bc386deddb0] = =;
		*node[0x5bc386dedd50] = 7;
		*node[0x5bc386dedde0] = ;;
		*node[0x5bc386dede70] = =;
		*node[0x5bc386dede10] = 8;
		*node[0x5bc386dede40] = 1;
		*node[0x5bc386dedea0] = ;;
		*node[0x5bc386dedf30] = =;
		*node[0x5bc386deded0] = 9;
		*node[0x5bc386dedf00] = 1000;
		*node[0x5bc386dedf60] = ;;
		*node[0x5bc386dedf90] = if;
		*node[0x5bc386dedfc0] = op_no;
		*node[0x5bc386dee050] = ==;
		*node[0x5bc386dedff0] = 1;
		*node[0x5bc386dee020] = 0;
		*node[0x5bc386dee080] = ;;
		*node[0x5bc386dee0b0] = if;
		*node[0x5bc386dee0e0] = op_no;
		*node[0x5bc386dee170] = ==;
		*node[0x5bc386dee110] = 2;
		*node[0x5bc386dee140] = 0;
		*node[0x5bc386dee1a0] = ;;
		*node[0x5bc386dee1d0] = print;
		*node[0x5bc386dee200] = 9;
		*node[0x5bc386dee230] = ;;
		*node[0x5bc386dee260] = print;
		*node[0x5bc386dee290] = 7;
		*node[0x5bc386dee2c0] = ;;
		*node[0x5bc386dee410] = =;
		*node[0x5bc386dee2f0] = 10;
		*node[0x5bc386dee3e0] = /;
		*node[0x5bc386dee380] = -;
		*node[0x5bc386dee320] = 0;
		*node[0x5bc386dee350] = 2;
		*node[0x5bc386dee3b0] = 1;
		*node[0x5bc386dee440] = ;;
		*node[0x5bc386dee470] = print;
		*node[0x5bc386dee4a0] = 8;
		*node[0x5bc386dee4d0] = ;;
		*node[0x5bc386dee500] = print;
		*node[0x5bc386dee530] = 10;
		*node[0x5bc386dee560] = ;;
		*node[0x5bc386dee590] = return;
		*node[0x5bc386dee5c0] = 0;
		*node[0x5bc386dee5f0] = ;;
		*node[0x5bc386dee620] = 0;
		*node[0x5bc386dee650] = 1;
		*node[0x5bc386dee680] = 2;
		*node[0x5bc386dee6b0] = 3;
		*node[0x5bc386dee6e0] = ;;
		*node[0x5bc386dee770] = =;
		*node[0x5bc386dee710] = 7;
		*node[0x5bc386dee7a0] = ;;
		*node[0x5bc386dee830] = =;
		*node[0x5bc386dee7d0] = 8;
		*node[0x5bc386dee800] = 1;
		*node[0x5bc386dee860] = ;;
		*node[0x5bc386dee8f0] = =;
		*node[0x5bc386dee890] = 11;
		*node[0x5bc386dee8c0] = 2;
		*node[0x5bc386dee920] = ;;
		*node[0x5bc386dee950] = if;
		*node[0x5bc386dee980] = op_no;
		*node[0x5bc386deea10] = ==;
		*node[0x5bc386dee9b0] = 3;
		*node[0x5bc386dee9e0] = 0;
		*node[0x5bc386deea40] = ;;
		*node[0x5bc386deead0] = =;
		*node[0x5bc386deea70] = 12;
		*node[0x5bc386deeaa0] = 0;
		*node[0x5bc386deeb00] = ;;
		*node[0x5bc386deec50] = =;
		*node[0x5bc386deeb30] = 13;
		*node[0x5bc386deec20] = /;
		*node[0x5bc386deebc0] = -;
		*node[0x5bc386deeb60] = 0;
		*node[0x5bc386deeb90] = 2;
		*node[0x5bc386deebf0] = 1;
		*node[0x5bc386deec80] = ;;
		*node[0x5bc386deecb0] = print;
		*node[0x5bc386deece0] = 11;
		*node[0x5bc386deed10] = ;;
		*node[0x5bc386deed40] = print;
		*node[0x5bc386deed70] = 12;
		*node[0x5bc386deeda0] = 13;
		*node[0x5bc386deedd0] = ;;
		*node[0x5bc386deefe0] = =;
		*node[0x5bc386deee00] = 14;
		*node[0x5bc386deefb0] = -;
		*node[0x5bc386deee90] = *;
		*node[0x5bc386deee30] = 2;
		*node[0x5bc386deee60] = 2;
		*node[0x5bc386deef80] = *;
		*node[0x5bc386deef20] = *;
		*node[0x5bc386deeec0] = 4;
		*node[0x5bc386deeef0] = 1;
		*node[0x5bc386deef50] = 3;
		*node[0x5bc386def010] = ;;
		*node[0x5bc386def040] = if;
		*node[0x5bc386def070] = op_no;
		*node[0x5bc386def100] = >;
		*node[0x5bc386def0a0] = 14;
		*node[0x5bc386def0d0] = 0;
		*node[0x5bc386def130] = ;;
		*node[0x5bc386def220] = =;
		*node[0x5bc386def160] = 15;
		*node[0x5bc386def1f0] = sqrt;
		*node[0x5bc386def1c0] = 1;
		*node[0x5bc386def190] = 14;
		*node[0x5bc386def250] = ;;
		*node[0x5bc386def460] = =;
		*node[0x5bc386def280] = 12;
		*node[0x5bc386def430] = /;
		*node[0x5bc386def370] = -;
		*node[0x5bc386def310] = -;
		*node[0x5bc386def2b0] = 0;
		*node[0x5bc386def2e0] = 2;
		*node[0x5bc386def340] = 15;
		*node[0x5bc386def400] = *;
		*node[0x5bc386def3a0] = 2;
		*node[0x5bc386def3d0] = 1;
		*node[0x5bc386def490] = ;;
		*node[0x5bc386def6a0] = =;
		*node[0x5bc386def4c0] = 13;
		*node[0x5bc386def670] = /;
		*node[0x5bc386def5b0] = +;
		*node[0x5bc386def550] = -;
		*node[0x5bc386def4f0] = 0;
		*node[0x5bc386def520] = 2;
		*node[0x5bc386def580] = 15;
		*node[0x5bc386def640] = *;
		*node[0x5bc386def5e0] = 2;
		*node[0x5bc386def610] = 1;
		*node[0x5bc386def6d0] = ;;
		*node[0x5bc386def700] = print;
		*node[0x5bc386def730] = 11;
		*node[0x5bc386def760] = ;;
		*node[0x5bc386def790] = print;
		*node[0x5bc386def7c0] = 12;
		*node[0x5bc386def7f0] = 13;
		*node[0x5bc386def820] = if;
		*node[0x5bc386def850] = op_no;
		*node[0x5bc386def8e0] = ==;
		*node[0x5bc386def880] = 14;
		*node[0x5bc386def8b0] = 0;
		*node[0x5bc386def910] = ;;
		*node[0x5bc386defac0] = =;
		*node[0x5bc386def940] = 10;
		*node[0x5bc386defa90] = /;
		*node[0x5bc386def9d0] = -;
		*node[0x5bc386def970] = 0;
		*node[0x5bc386def9a0] = 2;
		*node[0x5bc386defa60] = *;
		*node[0x5bc386defa00] = 2;
		*node[0x5bc386defa30] = 1;
		*node[0x5bc386defaf0] = ;;
		*node[0x5bc386defb20] = print;
		*node[0x5bc386defb50] = 8;
		*node[0x5bc386defb80] = ;;
		*node[0x5bc386defbb0] = print;
		*node[0x5bc386defbe0] = 10;
		*node[0x5bc386defc10] = ;;
		*node[0x5bc386defc40] = print;
		*node[0x5bc386defc70] = 7;
		*node[0x5bc386defca0] = ;;
		*node[0x5bc386defcd0] = return;
		*node[0x5bc386defd00] = 0;
		*node[0x5bc386defd30] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd46088450] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58b4642915d0] = ;;
		*node[0x58b464291600] = 0;
		*node[0x58b464291630] = ;;
		*node[0x58b464291660] = input;
		*node[0x58b464291690] = 1;
		*node[0x58b4642916c0] = 2;
		*node[0x58b4642916f0] = 3;
		*node[0x58b464291720] = ;;
		*node[0x58b4642917b0] = 1;
		*node[0x58b4642917e0] = 2;
		*node[0x58b464291810] = 3;
		*node[0x58b464291780] = 4;
		*node[0x58b464291840] = ;;
		*node[0x58b464291870] = 0;
		*node[0x58b4642918a0] = 1;
		*node[0x58b4642918d0] = 2;
		*node[0x58b464291900] = 3;
		*node[0x58b464291930] = ;;
		*node[0x58b464291960] = if;
		*node[0x58b464291990] = op_no;
		*node[0x58b464291a20] = ==;
		*node[0x58b4642919c0] = 1;
		*node[0x58b4642919f0] = 0;
		*node[0x58b464291a50] = ;;
		*node[0x58b464291ae0] = 2;
		*node[0x58b464291b10] = 3;
		*node[0x58b464291ab0] = 5;
		*node[0x58b464291b40] = ;;
		*node[0x58b464291bd0] = 1;
		*node[0x58b464291c00] = 2;
		*node[0x58b464291c30] = 3;
		*node[0x58b464291ba0] = 6;
		*node[0x58b464291c60] = ;;
		*node[0x58b464291c90] = 0;
		*node[0x58b464291cc0] = 1;
		*node[0x58b464291cf0] = 2;
		*node[0x58b464291d20] = ;;
		*node[0x58b464291db0] = =;
		*node[0x58b464291d50] = 7;
		*node[0x58b464291de0] = ;;
		*node[0x58b464291e70] = =;
		*node[0x58b464291e10] = 8;
		*node[0x58b464291e40] = 1;
		*node[0x58b464291ea0] = ;;
		*node[0x58b464291f30] = =;
		*node[0x58b464291ed0] = 9;
		*node[0x58b464291f00] = 1000;
		*node[0x58b464291f60] = ;;
		*node[0x58b464291f90] = if;
		*node[0x58b464291fc0] = op_no;
		*node[0x58b464292050] = ==;
		*node[0x58b464291ff0] = 1;
		*node[0x58b464292020] = 0;
		*node[0x58b464292080] = ;;
		*node[0x58b4642920b0] = if;
		*node[0x58b4642920e0] = op_no;
		*node[0x58b464292170] = ==;
		*node[0x58b464292110] = 2;
		*node[0x58b464292140] = 0;
		*node[0x58b4642921a0] = ;;
		*node[0x58b4642921d0] = print;
		*node[0x58b464292200] = 9;
		*node[0x58b464292230] = ;;
		*node[0x58b464292260] = print;
		*node[0x58b464292290] = 7;
		*node[0x58b4642922c0] = ;;
		*node[0x58b464292410] = =;
		*node[0x58b4642922f0] = 10;
		*node[0x58b4642923e0] = /;
		*node[0x58b464292380] = -;
		*node[0x58b464292320] = 0;
		*node[0x58b464292350] = 2;
		*node[0x58b4642923b0] = 1;
		*node[0x58b464292440] = ;;
		*node[0x58b464292470] = print;
		*node[0x58b4642924a0] = 8;
		*node[0x58b4642924d0] = ;;
		*node[0x58b464292500] = print;
		*node[0x58b464292530] = 10;
		*node[0x58b464292560] = ;;
		*node[0x58b464292590] = return;
		*node[0x58b4642925c0] = 0;
		*node[0x58b4642925f0] = ;;
		*node[0x58b464292620] = 0;
		*node[0x58b464292650] = 1;
		*node[0x58b464292680] = 2;
		*node[0x58b4642926b0] = 3;
		*node[0x58b4642926e0] = ;;
		*node[0x58b464292770] = =;
		*node[0x58b464292710] = 7;
		*node[0x58b4642927a0] = ;;
		*node[0x58b464292830] = =;
		*node[0x58b4642927d0] = 8;
		*node[0x58b464292800] = 1;
		*node[0x58b464292860] = ;;
		*node[0x58b4642928f0] = =;
		*node[0x58b464292890] = 11;
		*node[0x58b4642928c0] = 2;
		*node[0x58b464292920] = ;;
		*node[0x58b464292950] = if;
		*node[0x58b464292980] = op_no;
		*node[0x58b464292a10] = ==;
		*node[0x58b4642929b0] = 3;
		*node[0x58b4642929e0] = 0;
		*node[0x58b464292a40] = ;;
		*node[0x58b464292ad0] = =;
		*node[0x58b464292a70] = 12;
		*node[0x58b464292aa0] = 0;
		*node[0x58b464292b00] = ;;
		*node[0x58b464292c50] = =;
		*node[0x58b464292b30] = 13;
		*node[0x58b464292c20] = /;
		*node[0x58b464292bc0] = -;
		*node[0x58b464292b60] = 0;
		*node[0x58b464292b90] = 2;
		*node[0x58b464292bf0] = 1;
		*node[0x58b464292c80] = ;;
		*node[0x58b464292cb0] = print;
		*node[0x58b464292ce0] = 11;
		*node[0x58b464292d10] = ;;
		*node[0x58b464292d40] = print;
		*node[0x58b464292d70] = 12;
		*node[0x58b464292da0] = 13;
		*node[0x58b464292dd0] = ;;
		*node[0x58b464292fe0] = =;
		*node[0x58b464292e00] = 14;
		*node[0x58b464292fb0] = -;
		*node[0x58b464292e90] = *;
		*node[0x58b464292e30] = 2;
		*node[0x58b464292e60] = 2;
		*node[0x58b464292f80] = *;
		*node[0x58b464292f20] = *;
		*node[0x58b464292ec0] = 4;
		*node[0x58b464292ef0] = 1;
		*node[0x58b464292f50] = 3;
		*node[0x58b464293010] = ;;
		*node[0x58b464293040] = if;
		*node[0x58b464293070] = op_no;
		*node[0x58b464293100] = >;
		*node[0x58b4642930a0] = 14;
		*node[0x58b4642930d0] = 0;
		*node[0x58b464293130] = ;;
		*node[0x58b464293220] = =;
		*node[0x58b464293160] = 15;
		*node[0x58b4642931f0] = sqrt;
		*node[0x58b4642931c0] = 1;
		*node[0x58b464293190] = 14;
		*node[0x58b464293250] = ;;
		*node[0x58b464293460] = =;
		*node[0x58b464293280] = 12;
		*node[0x58b464293430] = /;
		*node[0x58b464293370] = -;
		*node[0x58b464293310] = -;
		*node[0x58b4642932b0] = 0;
		*node[0x58b4642932e0] = 2;
		*node[0x58b464293340] = 15;
		*node[0x58b464293400] = *;
		*node[0x58b4642933a0] = 2;
		*node[0x58b4642933d0] = 1;
		*node[0x58b464293490] = ;;
		*node[0x58b4642936a0] = =;
		*node[0x58b4642934c0] = 13;
		*node[0x58b464293670] = /;
		*node[0x58b4642935b0] = +;
		*node[0x58b464293550] = -;
		*node[0x58b4642934f0] = 0;
		*node[0x58b464293520] = 2;
		*node[0x58b464293580] = 15;
		*node[0x58b464293640] = *;
		*node[0x58b4642935e0] = 2;
		*node[0x58b464293610] = 1;
		*node[0x58b4642936d0] = ;;
		*node[0x58b464293700] = print;
		*node[0x58b464293730] = 11;
		*node[0x58b464293760] = ;;
		*node[0x58b464293790] = print;
		*node[0x58b4642937c0] = 12;
		*node[0x58b4642937f0] = 13;
		*node[0x58b464293820] = if;
		*node[0x58b464293850] = op_no;
		*node[0x58b4642938e0] = ==;
		*node[0x58b464293880] = 14;
		*node[0x58b4642938b0] = 0;
		*node[0x58b464293910] = ;;
		*node[0x58b464293ac0] = =;
		*node[0x58b464293940] = 10;
		*node[0x58b464293a90] = /;
		*node[0x58b4642939d0] = -;
		*node[0x58b464293970] = 0;
		*node[0x58b4642939a0] = 2;
		*node[0x58b464293a60] = *;
		*node[0x58b464293a00] = 2;
		*node[0x58b464293a30] = 1;
		*node[0x58b464293af0] = ;;
		*node[0x58b464293b20] = print;
		*node[0x58b464293b50] = 8;
		*node[0x58b464293b80] = ;;
		*node[0x58b464293bb0] = print;
		*node[0x58b464293be0] = 10;
		*node[0x58b464293c10] = ;;
		*node[0x58b464293c40] = print;
		*node[0x58b464293c70] = 7;
		*node[0x58b464293ca0] = ;;
		*node[0x58b464293cd0] = return;
		*node[0x58b464293d00] = 0;
		*node[0x58b464293d30] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe80e757e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6455bee2e610] = ;;
		*node[0x6455bee2e640] = 0;
		*node[0x6455bee2e670] = ;;
		*node[0x6455bee2e6a0] = input;
		*node[0x6455bee2e6d0] = 1;
		*node[0x6455bee2e700] = 2;
		*node[0x6455bee2e730] = 3;
		*node[0x6455bee2e760] = ;;
		*node[0x6455bee2e7f0] = 1;
		*node[0x6455bee2e820] = 2;
		*node[0x6455bee2e850] = 3;
		*node[0x6455bee2e7c0] = 4;
		*node[0x6455bee2e880] = ;;
		*node[0x6455bee2e8b0] = 0;
		*node[0x6455bee2e8e0] = 1;
		*node[0x6455bee2e910] = 2;
		*node[0x6455bee2e940] = 3;
		*node[0x6455bee2e970] = ;;
		*node[0x6455bee2e9a0] = if;
		*node[0x6455bee2e9d0] = op_no;
		*node[0x6455bee2ea60] = ==;
		*node[0x6455bee2ea00] = 1;
		*node[0x6455bee2ea30] = 0;
		*node[0x6455bee2ea90] = ;;
		*node[0x6455bee2eb20] = 2;
		*node[0x6455bee2eb50] = 3;
		*node[0x6455bee2eaf0] = 5;
		*node[0x6455bee2eb80] = ;;
		*node[0x6455bee2ec10] = 1;
		*node[0x6455bee2ec40] = 2;
		*node[0x6455bee2ec70] = 3;
		*node[0x6455bee2ebe0] = 6;
		*node[0x6455bee2eca0] = ;;
		*node[0x6455bee2ecd0] = 0;
		*node[0x6455bee2ed00] = 1;
		*node[0x6455bee2ed30] = 2;
		*node[0x6455bee2ed60] = ;;
		*node[0x6455bee2edf0] = =;
		*node[0x6455bee2ed90] = 7;
		*node[0x6455bee2ee20] = ;;
		*node[0x6455bee2eeb0] = =;
		*node[0x6455bee2ee50] = 8;
		*node[0x6455bee2ee80] = 1;
		*node[0x6455bee2eee0] = ;;
		*node[0x6455bee2ef70] = =;
		*node[0x6455bee2ef10] = 9;
		*node[0x6455bee2ef40] = 1000;
		*node[0x6455bee2efa0] = ;;
		*node[0x6455bee2efd0] = if;
		*node[0x6455bee2f000] = op_no;
		*node[0x6455bee2f090] = ==;
		*node[0x6455bee2f030] = 1;
		*node[0x6455bee2f060] = 0;
		*node[0x6455bee2f0c0] = ;;
		*node[0x6455bee2f0f0] = if;
		*node[0x6455bee2f120] = op_no;
		*node[0x6455bee2f1b0] = ==;
		*node[0x6455bee2f150] = 2;
		*node[0x6455bee2f180] = 0;
		*node[0x6455bee2f1e0] = ;;
		*node[0x6455bee2f210] = print;
		*node[0x6455bee2f240] = 9;
		*node[0x6455bee2f270] = ;;
		*node[0x6455bee2f2a0] = print;
		*node[0x6455bee2f2d0] = 7;
		*node[0x6455bee2f300] = ;;
		*node[0x6455bee2f450] = =;
		*node[0x6455bee2f330] = 10;
		*node[0x6455bee2f420] = /;
		*node[0x6455bee2f3c0] = -;
		*node[0x6455bee2f360] = 0;
		*node[0x6455bee2f390] = 2;
		*node[0x6455bee2f3f0] = 1;
		*node[0x6455bee2f480] = ;;
		*node[0x6455bee2f4b0] = print;
		*node[0x6455bee2f4e0] = 8;
		*node[0x6455bee2f510] = ;;
		*node[0x6455bee2f540] = print;
		*node[0x6455bee2f570] = 10;
		*node[0x6455bee2f5a0] = ;;
		*node[0x6455bee2f5d0] = return;
		*node[0x6455bee2f600] = 0;
		*node[0x6455bee2f630] = ;;
		*node[0x6455bee2f660] = 0;
		*node[0x6455bee2f690] = 1;
		*node[0x6455bee2f6c0] = 2;
		*node[0x6455bee2f6f0] = 3;
		*node[0x6455bee2f720] = ;;
		*node[0x6455bee2f810] = =;
		*node[0x6455bee2f750] = 7;
		*node[0x6455bee2f7e0] = -;
		*node[0x6455bee2f780] = 0;
		*node[0x6455bee2f7b0] = 1;
		*node[0x6455bee2f840] = ;;
		*node[0x6455bee2f8d0] = =;
		*node[0x6455bee2f870] = 8;
		*node[0x6455bee2f8a0] = 1;
		*node[0x6455bee2f900] = ;;
		*node[0x6455bee2f990] = =;
		*node[0x6455bee2f930] = 11;
		*node[0x6455bee2f960] = 2;
		*node[0x6455bee2f9c0] = ;;
		*node[0x6455bee2f9f0] = if;
		*node[0x6455bee2fa20] = op_no;
		*node[0x6455bee2fab0] = ==;
		*node[0x6455bee2fa50] = 3;
		*node[0x6455bee2fa80] = 0;
		*node[0x6455bee2fae0] = ;;
		*node[0x6455bee2fb70] = =;
		*node[0x6455bee2fb10] = 12;
		*node[0x6455bee2fb40] = 0;
		*node[0x6455bee2fba0] = ;;
		*node[0x6455bee2fcf0] = =;
		*node[0x6455bee2fbd0] = 13;
		*node[0x6455bee2fcc0] = /;
		*node[0x6455bee2fc60] = -;
		*node[0x6455bee2fc00] = 0;
		*node[0x6455bee2fc30] = 2;
		*node[0x6455bee2fc90] = 1;
		*node[0x6455bee2fd20] = ;;
		*node[0x6455bee2fd50] = print;
		*node[0x6455bee2fd80] = 11;
		*node[0x6455bee2fdb0] = ;;
		*node[0x6455bee2fde0] = print;
		*node[0x6455bee2fe10] = 12;
		*node[0x6455bee2fe40] = 13;
		*node[0x6455bee2fe70] = ;;
		*node[0x6455bee30080] = =;
		*node[0x6455bee2fea0] = 14;
		*node[0x6455bee30050] = -;
		*node[0x6455bee2ff30] = *;
		*node[0x6455bee2fed0] = 2;
		*node[0x6455bee2ff00] = 2;
		*node[0x6455bee30020] = *;
		*node[0x6455bee2ffc0] = *;
		*node[0x6455bee2ff60] = 4;
		*node[0x6455bee2ff90] = 1;
		*node[0x6455bee2fff0] = 3;
		*node[0x6455bee300b0] = ;;
		*node[0x6455bee300e0] = if;
		*node[0x6455bee30110] = op_no;
		*node[0x6455bee301a0] = >;
		*node[0x6455bee30140] = 14;
		*node[0x6455bee30170] = 0;
		*node[0x6455bee301d0] = ;;
		*node[0x6455bee302c0] = =;
		*node[0x6455bee30200] = 15;
		*node[0x6455bee30290] = sqrt;
		*node[0x6455bee30260] = 1;
		*node[0x6455bee30230] = 14;
		*node[0x6455bee302f0] = ;;
		*node[0x6455bee30500] = =;
		*node[0x6455bee30320] = 12;
		*node[0x6455bee304d0] = /;
		*node[0x6455bee30410] = -;
		*node[0x6455bee303b0] = -;
		*node[0x6455bee30350] = 0;
		*node[0x6455bee30380] = 2;
		*node[0x6455bee303e0] = 15;
		*node[0x6455bee304a0] = *;
		*node[0x6455bee30440] = 2;
		*node[0x6455bee30470] = 1;
		*node[0x6455bee30530] = ;;
		*node[0x6455bee30740] = =;
		*node[0x6455bee30560] = 13;
		*node[0x6455bee30710] = /;
		*node[0x6455bee30650] = +;
		*node[0x6455bee305f0] = -;
		*node[0x6455bee30590] = 0;
		*node[0x6455bee305c0] = 2;
		*node[0x6455bee30620] = 15;
		*node[0x6455bee306e0] = *;
		*node[0x6455bee30680] = 2;
		*node[0x6455bee306b0] = 1;
		*node[0x6455bee30770] = ;;
		*node[0x6455bee307a0] = print;
		*node[0x6455bee307d0] = 11;
		*node[0x6455bee30800] = ;;
		*node[0x6455bee30830] = print;
		*node[0x6455bee30860] = 12;
		*node[0x6455bee30890] = 13;
		*node[0x6455bee308c0] = if;
		*node[0x6455bee308f0] = op_no;
		*node[0x6455bee30980] = ==;
		*node[0x6455bee30920] = 14;
		*node[0x6455bee30950] = 0;
		*node[0x6455bee309b0] = ;;
		*node[0x6455bee30b60] = =;
		*node[0x6455bee309e0] = 10;
		*node[0x6455bee30b30] = /;
		*node[0x6455bee30a70] = -;
		*node[0x6455bee30a10] = 0;
		*node[0x6455bee30a40] = 2;
		*node[0x6455bee30b00] = *;
		*node[0x6455bee30aa0] = 2;
		*node[0x6455bee30ad0] = 1;
		*node[0x6455bee30b90] = ;;
		*node[0x6455bee30bc0] = print;
		*node[0x6455bee30bf0] = 8;
		*node[0x6455bee30c20] = ;;
		*node[0x6455bee30c50] = print;
		*node[0x6455bee30c80] = 10;
		*node[0x6455bee30cb0] = ;;
		*node[0x6455bee30ce0] = print;
		*node[0x6455bee30d10] = 7;
		*node[0x6455bee30d40] = ;;
		*node[0x6455bee30d70] = return;
		*node[0x6455bee30da0] = 0;
		*node[0x6455bee30dd0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff4137a600] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5c428d7a4630] = ;;
		*node[0x5c428d7a4660] = 0;
		*node[0x5c428d7a4690] = ;;
		*node[0x5c428d7a46c0] = input;
		*node[0x5c428d7a46f0] = 1;
		*node[0x5c428d7a4720] = 2;
		*node[0x5c428d7a4750] = 3;
		*node[0x5c428d7a4780] = ;;
		*node[0x5c428d7a4810] = 1;
		*node[0x5c428d7a4840] = 2;
		*node[0x5c428d7a4870] = 3;
		*node[0x5c428d7a47e0] = 4;
		*node[0x5c428d7a48a0] = ;;
		*node[0x5c428d7a48d0] = 0;
		*node[0x5c428d7a4900] = 1;
		*node[0x5c428d7a4930] = 2;
		*node[0x5c428d7a4960] = 3;
		*node[0x5c428d7a4990] = ;;
		*node[0x5c428d7a49c0] = if;
		*node[0x5c428d7a49f0] = op_no;
		*node[0x5c428d7a4a80] = ==;
		*node[0x5c428d7a4a20] = 1;
		*node[0x5c428d7a4a50] = 0;
		*node[0x5c428d7a4ab0] = ;;
		*node[0x5c428d7a4b40] = 2;
		*node[0x5c428d7a4b70] = 3;
		*node[0x5c428d7a4b10] = 5;
		*node[0x5c428d7a4ba0] = ;;
		*node[0x5c428d7a4c30] = 1;
		*node[0x5c428d7a4c60] = 2;
		*node[0x5c428d7a4c90] = 3;
		*node[0x5c428d7a4c00] = 6;
		*node[0x5c428d7a4cc0] = ;;
		*node[0x5c428d7a4cf0] = 0;
		*node[0x5c428d7a4d20] = 1;
		*node[0x5c428d7a4d50] = 2;
		*node[0x5c428d7a4d80] = ;;
		*node[0x5c428d7a4e70] = =;
		*node[0x5c428d7a4db0] = 7;
		*node[0x5c428d7a4e40] = -;
		*node[0x5c428d7a4de0] = 0;
		*node[0x5c428d7a4e10] = 1;
		*node[0x5c428d7a4ea0] = ;;
		*node[0x5c428d7a4f30] = =;
		*node[0x5c428d7a4ed0] = 8;
		*node[0x5c428d7a4f00] = 1;
		*node[0x5c428d7a4f60] = ;;
		*node[0x5c428d7a4ff0] = =;
		*node[0x5c428d7a4f90] = 9;
		*node[0x5c428d7a4fc0] = 1000;
		*node[0x5c428d7a5020] = ;;
		*node[0x5c428d7a5050] = if;
		*node[0x5c428d7a5080] = op_no;
		*node[0x5c428d7a5110] = ==;
		*node[0x5c428d7a50b0] = 1;
		*node[0x5c428d7a50e0] = 0;
		*node[0x5c428d7a5140] = ;;
		*node[0x5c428d7a5170] = if;
		*node[0x5c428d7a51a0] = op_no;
		*node[0x5c428d7a5230] = ==;
		*node[0x5c428d7a51d0] = 2;
		*node[0x5c428d7a5200] = 0;
		*node[0x5c428d7a5260] = ;;
		*node[0x5c428d7a5290] = print;
		*node[0x5c428d7a52c0] = 9;
		*node[0x5c428d7a52f0] = ;;
		*node[0x5c428d7a5320] = print;
		*node[0x5c428d7a5350] = 7;
		*node[0x5c428d7a5380] = ;;
		*node[0x5c428d7a54d0] = =;
		*node[0x5c428d7a53b0] = 10;
		*node[0x5c428d7a54a0] = /;
		*node[0x5c428d7a5440] = -;
		*node[0x5c428d7a53e0] = 0;
		*node[0x5c428d7a5410] = 2;
		*node[0x5c428d7a5470] = 1;
		*node[0x5c428d7a5500] = ;;
		*node[0x5c428d7a5530] = print;
		*node[0x5c428d7a5560] = 8;
		*node[0x5c428d7a5590] = ;;
		*node[0x5c428d7a55c0] = print;
		*node[0x5c428d7a55f0] = 10;
		*node[0x5c428d7a5620] = ;;
		*node[0x5c428d7a5650] = return;
		*node[0x5c428d7a5680] = 0;
		*node[0x5c428d7a56b0] = ;;
		*node[0x5c428d7a56e0] = 0;
		*node[0x5c428d7a5710] = 1;
		*node[0x5c428d7a5740] = 2;
		*node[0x5c428d7a5770] = 3;
		*node[0x5c428d7a57a0] = ;;
		*node[0x5c428d7a5890] = =;
		*node[0x5c428d7a57d0] = 7;
		*node[0x5c428d7a5860] = -;
		*node[0x5c428d7a5800] = 0;
		*node[0x5c428d7a5830] = 1;
		*node[0x5c428d7a58c0] = ;;
		*node[0x5c428d7a5950] = =;
		*node[0x5c428d7a58f0] = 8;
		*node[0x5c428d7a5920] = 1;
		*node[0x5c428d7a5980] = ;;
		*node[0x5c428d7a5a10] = =;
		*node[0x5c428d7a59b0] = 11;
		*node[0x5c428d7a59e0] = 2;
		*node[0x5c428d7a5a40] = ;;
		*node[0x5c428d7a5a70] = if;
		*node[0x5c428d7a5aa0] = op_no;
		*node[0x5c428d7a5b30] = ==;
		*node[0x5c428d7a5ad0] = 3;
		*node[0x5c428d7a5b00] = 0;
		*node[0x5c428d7a5b60] = ;;
		*node[0x5c428d7a5bf0] = =;
		*node[0x5c428d7a5b90] = 12;
		*node[0x5c428d7a5bc0] = 0;
		*node[0x5c428d7a5c20] = ;;
		*node[0x5c428d7a5d70] = =;
		*node[0x5c428d7a5c50] = 13;
		*node[0x5c428d7a5d40] = /;
		*node[0x5c428d7a5ce0] = -;
		*node[0x5c428d7a5c80] = 0;
		*node[0x5c428d7a5cb0] = 2;
		*node[0x5c428d7a5d10] = 1;
		*node[0x5c428d7a5da0] = ;;
		*node[0x5c428d7a5dd0] = print;
		*node[0x5c428d7a5e00] = 11;
		*node[0x5c428d7a5e30] = ;;
		*node[0x5c428d7a5e60] = print;
		*node[0x5c428d7a5e90] = 12;
		*node[0x5c428d7a5ec0] = 13;
		*node[0x5c428d7a5ef0] = ;;
		*node[0x5c428d7a6100] = =;
		*node[0x5c428d7a5f20] = 14;
		*node[0x5c428d7a60d0] = -;
		*node[0x5c428d7a5fb0] = *;
		*node[0x5c428d7a5f50] = 2;
		*node[0x5c428d7a5f80] = 2;
		*node[0x5c428d7a60a0] = *;
		*node[0x5c428d7a6040] = *;
		*node[0x5c428d7a5fe0] = 4;
		*node[0x5c428d7a6010] = 1;
		*node[0x5c428d7a6070] = 3;
		*node[0x5c428d7a6130] = ;;
		*node[0x5c428d7a6160] = if;
		*node[0x5c428d7a6190] = op_no;
		*node[0x5c428d7a6220] = >;
		*node[0x5c428d7a61c0] = 14;
		*node[0x5c428d7a61f0] = 0;
		*node[0x5c428d7a6250] = ;;
		*node[0x5c428d7a6340] = =;
		*node[0x5c428d7a6280] = 15;
		*node[0x5c428d7a6310] = sqrt;
		*node[0x5c428d7a62e0] = 1;
		*node[0x5c428d7a62b0] = 14;
		*node[0x5c428d7a6370] = ;;
		*node[0x5c428d7a6580] = =;
		*node[0x5c428d7a63a0] = 12;
		*node[0x5c428d7a6550] = /;
		*node[0x5c428d7a6490] = -;
		*node[0x5c428d7a6430] = -;
		*node[0x5c428d7a63d0] = 0;
		*node[0x5c428d7a6400] = 2;
		*node[0x5c428d7a6460] = 15;
		*node[0x5c428d7a6520] = *;
		*node[0x5c428d7a64c0] = 2;
		*node[0x5c428d7a64f0] = 1;
		*node[0x5c428d7a65b0] = ;;
		*node[0x5c428d7a67c0] = =;
		*node[0x5c428d7a65e0] = 13;
		*node[0x5c428d7a6790] = /;
		*node[0x5c428d7a66d0] = +;
		*node[0x5c428d7a6670] = -;
		*node[0x5c428d7a6610] = 0;
		*node[0x5c428d7a6640] = 2;
		*node[0x5c428d7a66a0] = 15;
		*node[0x5c428d7a6760] = *;
		*node[0x5c428d7a6700] = 2;
		*node[0x5c428d7a6730] = 1;
		*node[0x5c428d7a67f0] = ;;
		*node[0x5c428d7a6820] = print;
		*node[0x5c428d7a6850] = 11;
		*node[0x5c428d7a6880] = ;;
		*node[0x5c428d7a68b0] = print;
		*node[0x5c428d7a68e0] = 12;
		*node[0x5c428d7a6910] = 13;
		*node[0x5c428d7a6940] = if;
		*node[0x5c428d7a6970] = op_no;
		*node[0x5c428d7a6a00] = ==;
		*node[0x5c428d7a69a0] = 14;
		*node[0x5c428d7a69d0] = 0;
		*node[0x5c428d7a6a30] = ;;
		*node[0x5c428d7a6be0] = =;
		*node[0x5c428d7a6a60] = 10;
		*node[0x5c428d7a6bb0] = /;
		*node[0x5c428d7a6af0] = -;
		*node[0x5c428d7a6a90] = 0;
		*node[0x5c428d7a6ac0] = 2;
		*node[0x5c428d7a6b80] = *;
		*node[0x5c428d7a6b20] = 2;
		*node[0x5c428d7a6b50] = 1;
		*node[0x5c428d7a6c10] = ;;
		*node[0x5c428d7a6c40] = print;
		*node[0x5c428d7a6c70] = 8;
		*node[0x5c428d7a6ca0] = ;;
		*node[0x5c428d7a6cd0] = print;
		*node[0x5c428d7a6d00] = 10;
		*node[0x5c428d7a6d30] = ;;
		*node[0x5c428d7a6d60] = print;
		*node[0x5c428d7a6d90] = 7;
		*node[0x5c428d7a6dc0] = ;;
		*node[0x5c428d7a6df0] = return;
		*node[0x5c428d7a6e20] = 0;
		*node[0x5c428d7a6e50] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe37bcb2c0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5dbecc964630] = ;;
		*node[0x5dbecc964660] = 0;
		*node[0x5dbecc964690] = ;;
		*node[0x5dbecc9646c0] = input;
		*node[0x5dbecc9646f0] = 1;
		*node[0x5dbecc964720] = 2;
		*node[0x5dbecc964750] = 3;
		*node[0x5dbecc964780] = ;;
		*node[0x5dbecc964810] = 1;
		*node[0x5dbecc964840] = 2;
		*node[0x5dbecc964870] = 3;
		*node[0x5dbecc9647e0] = 4;
		*node[0x5dbecc9648a0] = ;;
		*node[0x5dbecc9648d0] = 0;
		*node[0x5dbecc964900] = 1;
		*node[0x5dbecc964930] = 2;
		*node[0x5dbecc964960] = 3;
		*node[0x5dbecc964990] = ;;
		*node[0x5dbecc9649c0] = if;
		*node[0x5dbecc9649f0] = op_no;
		*node[0x5dbecc964a80] = ==;
		*node[0x5dbecc964a20] = 1;
		*node[0x5dbecc964a50] = 0;
		*node[0x5dbecc964ab0] = ;;
		*node[0x5dbecc964b40] = 2;
		*node[0x5dbecc964b70] = 3;
		*node[0x5dbecc964b10] = 5;
		*node[0x5dbecc964ba0] = ;;
		*node[0x5dbecc964c30] = 1;
		*node[0x5dbecc964c60] = 2;
		*node[0x5dbecc964c90] = 3;
		*node[0x5dbecc964c00] = 6;
		*node[0x5dbecc964cc0] = ;;
		*node[0x5dbecc964cf0] = 0;
		*node[0x5dbecc964d20] = 1;
		*node[0x5dbecc964d50] = 2;
		*node[0x5dbecc964d80] = ;;
		*node[0x5dbecc964e70] = =;
		*node[0x5dbecc964db0] = 7;
		*node[0x5dbecc964e40] = -;
		*node[0x5dbecc964de0] = 0;
		*node[0x5dbecc964e10] = 1;
		*node[0x5dbecc964ea0] = ;;
		*node[0x5dbecc964f30] = =;
		*node[0x5dbecc964ed0] = 8;
		*node[0x5dbecc964f00] = 1;
		*node[0x5dbecc964f60] = ;;
		*node[0x5dbecc964ff0] = =;
		*node[0x5dbecc964f90] = 9;
		*node[0x5dbecc964fc0] = 1000;
		*node[0x5dbecc965020] = ;;
		*node[0x5dbecc965050] = if;
		*node[0x5dbecc965080] = op_no;
		*node[0x5dbecc965110] = ==;
		*node[0x5dbecc9650b0] = 1;
		*node[0x5dbecc9650e0] = 0;
		*node[0x5dbecc965140] = ;;
		*node[0x5dbecc965170] = if;
		*node[0x5dbecc9651a0] = op_no;
		*node[0x5dbecc965230] = ==;
		*node[0x5dbecc9651d0] = 2;
		*node[0x5dbecc965200] = 0;
		*node[0x5dbecc965260] = ;;
		*node[0x5dbecc965290] = print;
		*node[0x5dbecc9652c0] = 9;
		*node[0x5dbecc9652f0] = ;;
		*node[0x5dbecc965320] = print;
		*node[0x5dbecc965350] = 7;
		*node[0x5dbecc965380] = ;;
		*node[0x5dbecc9654d0] = =;
		*node[0x5dbecc9653b0] = 10;
		*node[0x5dbecc9654a0] = /;
		*node[0x5dbecc965440] = -;
		*node[0x5dbecc9653e0] = 0;
		*node[0x5dbecc965410] = 2;
		*node[0x5dbecc965470] = 1;
		*node[0x5dbecc965500] = ;;
		*node[0x5dbecc965530] = print;
		*node[0x5dbecc965560] = 8;
		*node[0x5dbecc965590] = ;;
		*node[0x5dbecc9655c0] = print;
		*node[0x5dbecc9655f0] = 10;
		*node[0x5dbecc965620] = ;;
		*node[0x5dbecc965650] = return;
		*node[0x5dbecc965680] = 0;
		*node[0x5dbecc9656b0] = ;;
		*node[0x5dbecc9656e0] = 0;
		*node[0x5dbecc965710] = 1;
		*node[0x5dbecc965740] = 2;
		*node[0x5dbecc965770] = 3;
		*node[0x5dbecc9657a0] = ;;
		*node[0x5dbecc965890] = =;
		*node[0x5dbecc9657d0] = 7;
		*node[0x5dbecc965860] = -;
		*node[0x5dbecc965800] = 0;
		*node[0x5dbecc965830] = 1;
		*node[0x5dbecc9658c0] = ;;
		*node[0x5dbecc965950] = =;
		*node[0x5dbecc9658f0] = 8;
		*node[0x5dbecc965920] = 1;
		*node[0x5dbecc965980] = ;;
		*node[0x5dbecc965a10] = =;
		*node[0x5dbecc9659b0] = 11;
		*node[0x5dbecc9659e0] = 2;
		*node[0x5dbecc965a40] = ;;
		*node[0x5dbecc965a70] = if;
		*node[0x5dbecc965aa0] = op_no;
		*node[0x5dbecc965b30] = ==;
		*node[0x5dbecc965ad0] = 3;
		*node[0x5dbecc965b00] = 0;
		*node[0x5dbecc965b60] = ;;
		*node[0x5dbecc965bf0] = =;
		*node[0x5dbecc965b90] = 12;
		*node[0x5dbecc965bc0] = 0;
		*node[0x5dbecc965c20] = ;;
		*node[0x5dbecc965d70] = =;
		*node[0x5dbecc965c50] = 13;
		*node[0x5dbecc965d40] = /;
		*node[0x5dbecc965ce0] = -;
		*node[0x5dbecc965c80] = 0;
		*node[0x5dbecc965cb0] = 2;
		*node[0x5dbecc965d10] = 1;
		*node[0x5dbecc965da0] = ;;
		*node[0x5dbecc965dd0] = print;
		*node[0x5dbecc965e00] = 11;
		*node[0x5dbecc965e30] = ;;
		*node[0x5dbecc965e60] = print;
		*node[0x5dbecc965e90] = 12;
		*node[0x5dbecc965ec0] = 13;
		*node[0x5dbecc965ef0] = ;;
		*node[0x5dbecc966100] = =;
		*node[0x5dbecc965f20] = 14;
		*node[0x5dbecc9660d0] = -;
		*node[0x5dbecc965fb0] = *;
		*node[0x5dbecc965f50] = 2;
		*node[0x5dbecc965f80] = 2;
		*node[0x5dbecc9660a0] = *;
		*node[0x5dbecc966040] = *;
		*node[0x5dbecc965fe0] = 4;
		*node[0x5dbecc966010] = 1;
		*node[0x5dbecc966070] = 3;
		*node[0x5dbecc966130] = ;;
		*node[0x5dbecc966160] = if;
		*node[0x5dbecc966190] = op_no;
		*node[0x5dbecc966220] = >;
		*node[0x5dbecc9661c0] = 14;
		*node[0x5dbecc9661f0] = 0;
		*node[0x5dbecc966250] = ;;
		*node[0x5dbecc966340] = =;
		*node[0x5dbecc966280] = 15;
		*node[0x5dbecc966310] = sqrt;
		*node[0x5dbecc9662e0] = 1;
		*node[0x5dbecc9662b0] = 14;
		*node[0x5dbecc966370] = ;;
		*node[0x5dbecc966580] = =;
		*node[0x5dbecc9663a0] = 12;
		*node[0x5dbecc966550] = /;
		*node[0x5dbecc966490] = -;
		*node[0x5dbecc966430] = -;
		*node[0x5dbecc9663d0] = 0;
		*node[0x5dbecc966400] = 2;
		*node[0x5dbecc966460] = 15;
		*node[0x5dbecc966520] = *;
		*node[0x5dbecc9664c0] = 2;
		*node[0x5dbecc9664f0] = 1;
		*node[0x5dbecc9665b0] = ;;
		*node[0x5dbecc9667c0] = =;
		*node[0x5dbecc9665e0] = 13;
		*node[0x5dbecc966790] = /;
		*node[0x5dbecc9666d0] = +;
		*node[0x5dbecc966670] = -;
		*node[0x5dbecc966610] = 0;
		*node[0x5dbecc966640] = 2;
		*node[0x5dbecc9666a0] = 15;
		*node[0x5dbecc966760] = *;
		*node[0x5dbecc966700] = 2;
		*node[0x5dbecc966730] = 1;
		*node[0x5dbecc9667f0] = ;;
		*node[0x5dbecc966820] = print;
		*node[0x5dbecc966850] = 11;
		*node[0x5dbecc966880] = ;;
		*node[0x5dbecc9668b0] = print;
		*node[0x5dbecc9668e0] = 12;
		*node[0x5dbecc966910] = 13;
		*node[0x5dbecc966940] = if;
		*node[0x5dbecc966970] = op_no;
		*node[0x5dbecc966a00] = ==;
		*node[0x5dbecc9669a0] = 14;
		*node[0x5dbecc9669d0] = 0;
		*node[0x5dbecc966a30] = ;;
		*node[0x5dbecc966be0] = =;
		*node[0x5dbecc966a60] = 10;
		*node[0x5dbecc966bb0] = /;
		*node[0x5dbecc966af0] = -;
		*node[0x5dbecc966a90] = 0;
		*node[0x5dbecc966ac0] = 2;
		*node[0x5dbecc966b80] = *;
		*node[0x5dbecc966b20] = 2;
		*node[0x5dbecc966b50] = 1;
		*node[0x5dbecc966c10] = ;;
		*node[0x5dbecc966c40] = print;
		*node[0x5dbecc966c70] = 8;
		*node[0x5dbecc966ca0] = ;;
		*node[0x5dbecc966cd0] = print;
		*node[0x5dbecc966d00] = 10;
		*node[0x5dbecc966d30] = ;;
		*node[0x5dbecc966d60] = print;
		*node[0x5dbecc966d90] = 7;
		*node[0x5dbecc966dc0] = ;;
		*node[0x5dbecc966df0] = return;
		*node[0x5dbecc966e20] = 0;
		*node[0x5dbecc966e50] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff494aa180] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x55cfdfc54220] = ;;
		*node[0x55cfdfc54250] = 0;
		*node[0x55cfdfc54280] = ;;
		*node[0x55cfdfc542b0] = input;
		*node[0x55cfdfc542e0] = 1;
		*node[0x55cfdfc54310] = 2;
		*node[0x55cfdfc54340] = 3;
		*node[0x55cfdfc54370] = ;;
		*node[0x55cfdfc54400] = 1;
		*node[0x55cfdfc54430] = 2;
		*node[0x55cfdfc54460] = 3;
		*node[0x55cfdfc543d0] = 4;
		*node[0x55cfdfc54490] = ;;
		*node[0x55cfdfc544c0] = 0;
		*node[0x55cfdfc544f0] = 1;
		*node[0x55cfdfc54520] = 2;
		*node[0x55cfdfc54550] = 3;
		*node[0x55cfdfc54580] = ;;
		*node[0x55cfdfc545b0] = if;
		*node[0x55cfdfc545e0] = op_no;
		*node[0x55cfdfc54670] = ==;
		*node[0x55cfdfc54610] = 1;
		*node[0x55cfdfc54640] = 0;
		*node[0x55cfdfc546a0] = ;;
		*node[0x55cfdfc54730] = 2;
		*node[0x55cfdfc54760] = 3;
		*node[0x55cfdfc54700] = 5;
		*node[0x55cfdfc54790] = ;;
		*node[0x55cfdfc54820] = 1;
		*node[0x55cfdfc54850] = 2;
		*node[0x55cfdfc54880] = 3;
		*node[0x55cfdfc547f0] = 6;
		*node[0x55cfdfc548b0] = ;;
		*node[0x55cfdfc548e0] = 0;
		*node[0x55cfdfc54910] = 1;
		*node[0x55cfdfc54940] = 2;
		*node[0x55cfdfc54970] = ;;
		*node[0x55cfdfc54a60] = =;
		*node[0x55cfdfc549a0] = 7;
		*node[0x55cfdfc54a30] = -;
		*node[0x55cfdfc549d0] = 0;
		*node[0x55cfdfc54a00] = 1;
		*node[0x55cfdfc54a90] = ;;
		*node[0x55cfdfc54b20] = =;
		*node[0x55cfdfc54ac0] = 8;
		*node[0x55cfdfc54af0] = 1;
		*node[0x55cfdfc54b50] = ;;
		*node[0x55cfdfc54be0] = =;
		*node[0x55cfdfc54b80] = 9;
		*node[0x55cfdfc54bb0] = 1000;
		*node[0x55cfdfc54c10] = ;;
		*node[0x55cfdfc54c40] = if;
		*node[0x55cfdfc54c70] = op_no;
		*node[0x55cfdfc54d00] = ==;
		*node[0x55cfdfc54ca0] = 1;
		*node[0x55cfdfc54cd0] = 0;
		*node[0x55cfdfc54d30] = ;;
		*node[0x55cfdfc54d60] = if;
		*node[0x55cfdfc54d90] = op_no;
		*node[0x55cfdfc54e20] = ==;
		*node[0x55cfdfc54dc0] = 2;
		*node[0x55cfdfc54df0] = 0;
		*node[0x55cfdfc54e50] = ;;
		*node[0x55cfdfc54e80] = print;
		*node[0x55cfdfc54eb0] = 9;
		*node[0x55cfdfc54ee0] = ;;
		*node[0x55cfdfc54f10] = print;
		*node[0x55cfdfc54f40] = 7;
		*node[0x55cfdfc54f70] = ;;
		*node[0x55cfdfc550c0] = =;
		*node[0x55cfdfc54fa0] = 10;
		*node[0x55cfdfc55090] = /;
		*node[0x55cfdfc55030] = -;
		*node[0x55cfdfc54fd0] = 0;
		*node[0x55cfdfc55000] = 2;
		*node[0x55cfdfc55060] = 1;
		*node[0x55cfdfc550f0] = ;;
		*node[0x55cfdfc55120] = print;
		*node[0x55cfdfc55150] = 8;
		*node[0x55cfdfc55180] = ;;
		*node[0x55cfdfc551b0] = print;
		*node[0x55cfdfc551e0] = 10;
		*node[0x55cfdfc55210] = ;;
		*node[0x55cfdfc55240] = return;
		*node[0x55cfdfc55270] = 0;
		*node[0x55cfdfc552a0] = ;;
		*node[0x55cfdfc552d0] = 0;
		*node[0x55cfdfc55300] = 1;
		*node[0x55cfdfc55330] = 2;
		*node[0x55cfdfc55360] = 3;
		*node[0x55cfdfc55390] = ;;
		*node[0x55cfdfc55480] = =;
		*node[0x55cfdfc553c0] = 7;
		*node[0x55cfdfc55450] = -;
		*node[0x55cfdfc553f0] = 0;
		*node[0x55cfdfc55420] = 1;
		*node[0x55cfdfc554b0] = ;;
		*node[0x55cfdfc55540] = =;
		*node[0x55cfdfc554e0] = 8;
		*node[0x55cfdfc55510] = 1;
		*node[0x55cfdfc55570] = ;;
		*node[0x55cfdfc55600] = =;
		*node[0x55cfdfc555a0] = 11;
		*node[0x55cfdfc555d0] = 2;
		*node[0x55cfdfc55630] = ;;
		*node[0x55cfdfc55660] = if;
		*node[0x55cfdfc55690] = op_no;
		*node[0x55cfdfc55720] = ==;
		*node[0x55cfdfc556c0] = 3;
		*node[0x55cfdfc556f0] = 0;
		*node[0x55cfdfc55750] = ;;
		*node[0x55cfdfc557e0] = =;
		*node[0x55cfdfc55780] = 12;
		*node[0x55cfdfc557b0] = 0;
		*node[0x55cfdfc55810] = ;;
		*node[0x55cfdfc55960] = =;
		*node[0x55cfdfc55840] = 13;
		*node[0x55cfdfc55930] = /;
		*node[0x55cfdfc558d0] = -;
		*node[0x55cfdfc55870] = 0;
		*node[0x55cfdfc558a0] = 2;
		*node[0x55cfdfc55900] = 1;
		*node[0x55cfdfc55990] = ;;
		*node[0x55cfdfc559c0] = print;
		*node[0x55cfdfc559f0] = 11;
		*node[0x55cfdfc55a20] = ;;
		*node[0x55cfdfc55a50] = print;
		*node[0x55cfdfc55a80] = 12;
		*node[0x55cfdfc55ab0] = 13;
		*node[0x55cfdfc55ae0] = ;;
		*node[0x55cfdfc55cf0] = =;
		*node[0x55cfdfc55b10] = 14;
		*node[0x55cfdfc55cc0] = -;
		*node[0x55cfdfc55ba0] = *;
		*node[0x55cfdfc55b40] = 2;
		*node[0x55cfdfc55b70] = 2;
		*node[0x55cfdfc55c90] = *;
		*node[0x55cfdfc55c30] = *;
		*node[0x55cfdfc55bd0] = 4;
		*node[0x55cfdfc55c00] = 1;
		*node[0x55cfdfc55c60] = 3;
		*node[0x55cfdfc55d20] = ;;
		*node[0x55cfdfc55d50] = if;
		*node[0x55cfdfc55d80] = op_no;
		*node[0x55cfdfc55e10] = >;
		*node[0x55cfdfc55db0] = 14;
		*node[0x55cfdfc55de0] = 0;
		*node[0x55cfdfc55e40] = ;;
		*node[0x55cfdfc55f30] = =;
		*node[0x55cfdfc55e70] = 15;
		*node[0x55cfdfc55f00] = sqrt;
		*node[0x55cfdfc55ed0] = 1;
		*node[0x55cfdfc55ea0] = 14;
		*node[0x55cfdfc55f60] = ;;
		*node[0x55cfdfc56170] = =;
		*node[0x55cfdfc55f90] = 12;
		*node[0x55cfdfc56140] = /;
		*node[0x55cfdfc56080] = -;
		*node[0x55cfdfc56020] = -;
		*node[0x55cfdfc55fc0] = 0;
		*node[0x55cfdfc55ff0] = 2;
		*node[0x55cfdfc56050] = 15;
		*node[0x55cfdfc56110] = *;
		*node[0x55cfdfc560b0] = 2;
		*node[0x55cfdfc560e0] = 1;
		*node[0x55cfdfc561a0] = ;;
		*node[0x55cfdfc563b0] = =;
		*node[0x55cfdfc561d0] = 13;
		*node[0x55cfdfc56380] = /;
		*node[0x55cfdfc562c0] = +;
		*node[0x55cfdfc56260] = -;
		*node[0x55cfdfc56200] = 0;
		*node[0x55cfdfc56230] = 2;
		*node[0x55cfdfc56290] = 15;
		*node[0x55cfdfc56350] = *;
		*node[0x55cfdfc562f0] = 2;
		*node[0x55cfdfc56320] = 1;
		*node[0x55cfdfc563e0] = ;;
		*node[0x55cfdfc56410] = print;
		*node[0x55cfdfc56440] = 11;
		*node[0x55cfdfc56470] = ;;
		*node[0x55cfdfc564a0] = print;
		*node[0x55cfdfc564d0] = 12;
		*node[0x55cfdfc56500] = 13;
		*node[0x55cfdfc56530] = if;
		*node[0x55cfdfc56560] = op_no;
		*node[0x55cfdfc565f0] = ==;
		*node[0x55cfdfc56590] = 14;
		*node[0x55cfdfc565c0] = 0;
		*node[0x55cfdfc56620] = ;;
		*node[0x55cfdfc567d0] = =;
		*node[0x55cfdfc56650] = 10;
		*node[0x55cfdfc567a0] = /;
		*node[0x55cfdfc566e0] = -;
		*node[0x55cfdfc56680] = 0;
		*node[0x55cfdfc566b0] = 2;
		*node[0x55cfdfc56770] = *;
		*node[0x55cfdfc56710] = 2;
		*node[0x55cfdfc56740] = 1;
		*node[0x55cfdfc56800] = ;;
		*node[0x55cfdfc56830] = print;
		*node[0x55cfdfc56860] = 8;
		*node[0x55cfdfc56890] = ;;
		*node[0x55cfdfc568c0] = print;
		*node[0x55cfdfc568f0] = 10;
		*node[0x55cfdfc56920] = ;;
		*node[0x55cfdfc56950] = print;
		*node[0x55cfdfc56980] = 7;
		*node[0x55cfdfc569b0] = ;;
		*node[0x55cfdfc569e0] = return;
		*node[0x55cfdfc56a10] = 0;
		*node[0x55cfdfc56a40] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc8b9d6370] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5f3a575f3220] = ;;
		*node[0x5f3a575f3250] = 0;
		*node[0x5f3a575f3280] = ;;
		*node[0x5f3a575f32b0] = input;
		*node[0x5f3a575f32e0] = 1;
		*node[0x5f3a575f3310] = 2;
		*node[0x5f3a575f3340] = 3;
		*node[0x5f3a575f3370] = ;;
		*node[0x5f3a575f3400] = 1;
		*node[0x5f3a575f3430] = 2;
		*node[0x5f3a575f3460] = 3;
		*node[0x5f3a575f33d0] = 4;
		*node[0x5f3a575f3490] = ;;
		*node[0x5f3a575f34c0] = 4;
		*node[0x5f3a575f34f0] = 1;
		*node[0x5f3a575f3520] = 2;
		*node[0x5f3a575f3550] = 3;
		*node[0x5f3a575f3580] = ;;
		*node[0x5f3a575f35b0] = if;
		*node[0x5f3a575f35e0] = op_no;
		*node[0x5f3a575f3670] = ==;
		*node[0x5f3a575f3610] = 1;
		*node[0x5f3a575f3640] = 0;
		*node[0x5f3a575f36a0] = ;;
		*node[0x5f3a575f3730] = 2;
		*node[0x5f3a575f3760] = 3;
		*node[0x5f3a575f3700] = 5;
		*node[0x5f3a575f3790] = ;;
		*node[0x5f3a575f3820] = 1;
		*node[0x5f3a575f3850] = 2;
		*node[0x5f3a575f3880] = 3;
		*node[0x5f3a575f37f0] = 6;
		*node[0x5f3a575f38b0] = ;;
		*node[0x5f3a575f38e0] = 5;
		*node[0x5f3a575f3910] = 1;
		*node[0x5f3a575f3940] = 2;
		*node[0x5f3a575f3970] = ;;
		*node[0x5f3a575f3a60] = =;
		*node[0x5f3a575f39a0] = 7;
		*node[0x5f3a575f3a30] = -;
		*node[0x5f3a575f39d0] = 0;
		*node[0x5f3a575f3a00] = 1;
		*node[0x5f3a575f3a90] = ;;
		*node[0x5f3a575f3b20] = =;
		*node[0x5f3a575f3ac0] = 8;
		*node[0x5f3a575f3af0] = 1;
		*node[0x5f3a575f3b50] = ;;
		*node[0x5f3a575f3be0] = =;
		*node[0x5f3a575f3b80] = 9;
		*node[0x5f3a575f3bb0] = 1000;
		*node[0x5f3a575f3c10] = ;;
		*node[0x5f3a575f3c40] = if;
		*node[0x5f3a575f3c70] = op_no;
		*node[0x5f3a575f3d00] = ==;
		*node[0x5f3a575f3ca0] = 1;
		*node[0x5f3a575f3cd0] = 0;
		*node[0x5f3a575f3d30] = ;;
		*node[0x5f3a575f3d60] = if;
		*node[0x5f3a575f3d90] = op_no;
		*node[0x5f3a575f3e20] = ==;
		*node[0x5f3a575f3dc0] = 2;
		*node[0x5f3a575f3df0] = 0;
		*node[0x5f3a575f3e50] = ;;
		*node[0x5f3a575f3e80] = print;
		*node[0x5f3a575f3eb0] = 9;
		*node[0x5f3a575f3ee0] = ;;
		*node[0x5f3a575f3f10] = print;
		*node[0x5f3a575f3f40] = 7;
		*node[0x5f3a575f3f70] = ;;
		*node[0x5f3a575f40c0] = =;
		*node[0x5f3a575f3fa0] = 10;
		*node[0x5f3a575f4090] = /;
		*node[0x5f3a575f4030] = -;
		*node[0x5f3a575f3fd0] = 0;
		*node[0x5f3a575f4000] = 2;
		*node[0x5f3a575f4060] = 1;
		*node[0x5f3a575f40f0] = ;;
		*node[0x5f3a575f4120] = print;
		*node[0x5f3a575f4150] = 8;
		*node[0x5f3a575f4180] = ;;
		*node[0x5f3a575f41b0] = print;
		*node[0x5f3a575f41e0] = 10;
		*node[0x5f3a575f4210] = ;;
		*node[0x5f3a575f4240] = return;
		*node[0x5f3a575f4270] = 0;
		*node[0x5f3a575f42a0] = ;;
		*node[0x5f3a575f42d0] = 6;
		*node[0x5f3a575f4300] = 1;
		*node[0x5f3a575f4330] = 2;
		*node[0x5f3a575f4360] = 3;
		*node[0x5f3a575f4390] = ;;
		*node[0x5f3a575f4480] = =;
		*node[0x5f3a575f43c0] = 7;
		*node[0x5f3a575f4450] = -;
		*node[0x5f3a575f43f0] = 0;
		*node[0x5f3a575f4420] = 1;
		*node[0x5f3a575f44b0] = ;;
		*node[0x5f3a575f4540] = =;
		*node[0x5f3a575f44e0] = 8;
		*node[0x5f3a575f4510] = 1;
		*node[0x5f3a575f4570] = ;;
		*node[0x5f3a575f4600] = =;
		*node[0x5f3a575f45a0] = 11;
		*node[0x5f3a575f45d0] = 2;
		*node[0x5f3a575f4630] = ;;
		*node[0x5f3a575f4660] = if;
		*node[0x5f3a575f4690] = op_no;
		*node[0x5f3a575f4720] = ==;
		*node[0x5f3a575f46c0] = 3;
		*node[0x5f3a575f46f0] = 0;
		*node[0x5f3a575f4750] = ;;
		*node[0x5f3a575f47e0] = =;
		*node[0x5f3a575f4780] = 12;
		*node[0x5f3a575f47b0] = 0;
		*node[0x5f3a575f4810] = ;;
		*node[0x5f3a575f4960] = =;
		*node[0x5f3a575f4840] = 13;
		*node[0x5f3a575f4930] = /;
		*node[0x5f3a575f48d0] = -;
		*node[0x5f3a575f4870] = 0;
		*node[0x5f3a575f48a0] = 2;
		*node[0x5f3a575f4900] = 1;
		*node[0x5f3a575f4990] = ;;
		*node[0x5f3a575f49c0] = print;
		*node[0x5f3a575f49f0] = 11;
		*node[0x5f3a575f4a20] = ;;
		*node[0x5f3a575f4a50] = print;
		*node[0x5f3a575f4a80] = 12;
		*node[0x5f3a575f4ab0] = 13;
		*node[0x5f3a575f4ae0] = ;;
		*node[0x5f3a575f4cf0] = =;
		*node[0x5f3a575f4b10] = 14;
		*node[0x5f3a575f4cc0] = -;
		*node[0x5f3a575f4ba0] = *;
		*node[0x5f3a575f4b40] = 2;
		*node[0x5f3a575f4b70] = 2;
		*node[0x5f3a575f4c90] = *;
		*node[0x5f3a575f4c30] = *;
		*node[0x5f3a575f4bd0] = 4;
		*node[0x5f3a575f4c00] = 1;
		*node[0x5f3a575f4c60] = 3;
		*node[0x5f3a575f4d20] = ;;
		*node[0x5f3a575f4d50] = if;
		*node[0x5f3a575f4d80] = op_no;
		*node[0x5f3a575f4e10] = >;
		*node[0x5f3a575f4db0] = 14;
		*node[0x5f3a575f4de0] = 0;
		*node[0x5f3a575f4e40] = ;;
		*node[0x5f3a575f4f30] = =;
		*node[0x5f3a575f4e70] = 15;
		*node[0x5f3a575f4f00] = sqrt;
		*node[0x5f3a575f4ed0] = 1;
		*node[0x5f3a575f4ea0] = 14;
		*node[0x5f3a575f4f60] = ;;
		*node[0x5f3a575f5170] = =;
		*node[0x5f3a575f4f90] = 12;
		*node[0x5f3a575f5140] = /;
		*node[0x5f3a575f5080] = -;
		*node[0x5f3a575f5020] = -;
		*node[0x5f3a575f4fc0] = 0;
		*node[0x5f3a575f4ff0] = 2;
		*node[0x5f3a575f5050] = 15;
		*node[0x5f3a575f5110] = *;
		*node[0x5f3a575f50b0] = 2;
		*node[0x5f3a575f50e0] = 1;
		*node[0x5f3a575f51a0] = ;;
		*node[0x5f3a575f53b0] = =;
		*node[0x5f3a575f51d0] = 13;
		*node[0x5f3a575f5380] = /;
		*node[0x5f3a575f52c0] = +;
		*node[0x5f3a575f5260] = -;
		*node[0x5f3a575f5200] = 0;
		*node[0x5f3a575f5230] = 2;
		*node[0x5f3a575f5290] = 15;
		*node[0x5f3a575f5350] = *;
		*node[0x5f3a575f52f0] = 2;
		*node[0x5f3a575f5320] = 1;
		*node[0x5f3a575f53e0] = ;;
		*node[0x5f3a575f5410] = print;
		*node[0x5f3a575f5440] = 11;
		*node[0x5f3a575f5470] = ;;
		*node[0x5f3a575f54a0] = print;
		*node[0x5f3a575f54d0] = 12;
		*node[0x5f3a575f5500] = 13;
		*node[0x5f3a575f5530] = if;
		*node[0x5f3a575f5560] = op_no;
		*node[0x5f3a575f55f0] = ==;
		*node[0x5f3a575f5590] = 14;
		*node[0x5f3a575f55c0] = 0;
		*node[0x5f3a575f5620] = ;;
		*node[0x5f3a575f57d0] = =;
		*node[0x5f3a575f5650] = 10;
		*node[0x5f3a575f57a0] = /;
		*node[0x5f3a575f56e0] = -;
		*node[0x5f3a575f5680] = 0;
		*node[0x5f3a575f56b0] = 2;
		*node[0x5f3a575f5770] = *;
		*node[0x5f3a575f5710] = 2;
		*node[0x5f3a575f5740] = 1;
		*node[0x5f3a575f5800] = ;;
		*node[0x5f3a575f5830] = print;
		*node[0x5f3a575f5860] = 8;
		*node[0x5f3a575f5890] = ;;
		*node[0x5f3a575f58c0] = print;
		*node[0x5f3a575f58f0] = 10;
		*node[0x5f3a575f5920] = ;;
		*node[0x5f3a575f5950] = print;
		*node[0x5f3a575f5980] = 7;
		*node[0x5f3a575f59b0] = ;;
		*node[0x5f3a575f59e0] = return;
		*node[0x5f3a575f5a10] = 0;
		*node[0x5f3a575f5a40] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: an error occurred while opening the file[0m
tree[0x7ffd7f4428a0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd06074670] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5888dc5cdf40] = ;;
		*node[0x5888dc5cdf70] = 0;
		*node[0x5888dc5cdfa0] = ;;
		*node[0x5888dc5cdfd0] = input;
		*node[0x5888dc5ce000] = 1;
		*node[0x5888dc5ce030] = ;;
		*node[0x5888dc5ce0c0] = =;
		*node[0x5888dc5ce060] = 2;
		*node[0x5888dc5ce090] = 1;
		*node[0x5888dc5ce0f0] = ;;
		*node[0x5888dc5ce120] = if;
		*node[0x5888dc5ce150] = op_no;
		*node[0x5888dc5ce2a0] = ||;
		*node[0x5888dc5ce1e0] = <;
		*node[0x5888dc5ce180] = 1;
		*node[0x5888dc5ce1b0] = 0;
		*node[0x5888dc5ce270] = ==;
		*node[0x5888dc5ce210] = 1;
		*node[0x5888dc5ce240] = 0;
		*node[0x5888dc5ce2d0] = ;;
		*node[0x5888dc5ce300] = print;
		*node[0x5888dc5ce330] = 2;
		*node[0x5888dc5ce360] = if;
		*node[0x5888dc5ce390] = op_no;
		*node[0x5888dc5ce420] = ==;
		*node[0x5888dc5ce3c0] = 1;
		*node[0x5888dc5ce3f0] = 1;
		*node[0x5888dc5ce450] = ;;
		*node[0x5888dc5ce480] = print;
		*node[0x5888dc5ce4b0] = 1;
		*node[0x5888dc5ce4e0] = ;;
		*node[0x5888dc5ce570] = 1;
		*node[0x5888dc5ce540] = 3;
		*node[0x5888dc5ce5a0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc1ad68bb0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffc1ad68bb0] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffe6fa3f2e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffe6fa3f2e0] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffd21b316d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffd21b316d0] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd1d30d870] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x561cfa297280] = ;;
		*node[0x561cfa2972b0] = 0;
		*node[0x561cfa2972e0] = ;;
		*node[0x561cfa297310] = input;
		*node[0x561cfa297340] = 1;
		*node[0x561cfa297370] = 2;
		*node[0x561cfa2973a0] = 3;
		*node[0x561cfa2973d0] = ;;
		*node[0x561cfa297460] = 1;
		*node[0x561cfa297490] = 2;
		*node[0x561cfa2974c0] = 3;
		*node[0x561cfa297430] = 4;
		*node[0x561cfa2974f0] = ;;
		*node[0x561cfa297520] = 4;
		*node[0x561cfa297550] = 1;
		*node[0x561cfa297580] = 2;
		*node[0x561cfa2975b0] = 3;
		*node[0x561cfa2975e0] = ;;
		*node[0x561cfa297610] = if;
		*node[0x561cfa297640] = op_no;
		*node[0x561cfa2976d0] = ==;
		*node[0x561cfa297670] = 1;
		*node[0x561cfa2976a0] = 0;
		*node[0x561cfa297700] = ;;
		*node[0x561cfa297790] = 2;
		*node[0x561cfa2977c0] = 3;
		*node[0x561cfa297760] = 5;
		*node[0x561cfa2977f0] = ;;
		*node[0x561cfa297880] = 1;
		*node[0x561cfa2978b0] = 2;
		*node[0x561cfa2978e0] = 3;
		*node[0x561cfa297850] = 6;
		*node[0x561cfa297910] = ;;
		*node[0x561cfa297940] = 5;
		*node[0x561cfa297970] = 1;
		*node[0x561cfa2979a0] = 2;
		*node[0x561cfa2979d0] = ;;
		*node[0x561cfa297ac0] = =;
		*node[0x561cfa297a00] = 7;
		*node[0x561cfa297a90] = -;
		*node[0x561cfa297a30] = 0;
		*node[0x561cfa297a60] = 1;
		*node[0x561cfa297af0] = ;;
		*node[0x561cfa297b80] = =;
		*node[0x561cfa297b20] = 8;
		*node[0x561cfa297b50] = 1;
		*node[0x561cfa297bb0] = ;;
		*node[0x561cfa297c40] = =;
		*node[0x561cfa297be0] = 9;
		*node[0x561cfa297c10] = 1000;
		*node[0x561cfa297c70] = ;;
		*node[0x561cfa297ca0] = if;
		*node[0x561cfa297cd0] = op_no;
		*node[0x561cfa297d60] = ==;
		*node[0x561cfa297d00] = 1;
		*node[0x561cfa297d30] = 0;
		*node[0x561cfa297d90] = ;;
		*node[0x561cfa297dc0] = if;
		*node[0x561cfa297df0] = op_no;
		*node[0x561cfa297e80] = ==;
		*node[0x561cfa297e20] = 2;
		*node[0x561cfa297e50] = 0;
		*node[0x561cfa297eb0] = ;;
		*node[0x561cfa297ee0] = print;
		*node[0x561cfa297f10] = 9;
		*node[0x561cfa297f40] = ;;
		*node[0x561cfa297f70] = print;
		*node[0x561cfa297fa0] = 7;
		*node[0x561cfa297fd0] = ;;
		*node[0x561cfa298120] = =;
		*node[0x561cfa298000] = 10;
		*node[0x561cfa2980f0] = /;
		*node[0x561cfa298090] = -;
		*node[0x561cfa298030] = 0;
		*node[0x561cfa298060] = 2;
		*node[0x561cfa2980c0] = 1;
		*node[0x561cfa298150] = ;;
		*node[0x561cfa298180] = print;
		*node[0x561cfa2981b0] = 8;
		*node[0x561cfa2981e0] = ;;
		*node[0x561cfa298210] = print;
		*node[0x561cfa298240] = 10;
		*node[0x561cfa298270] = ;;
		*node[0x561cfa2982a0] = return;
		*node[0x561cfa298330] = -;
		*node[0x561cfa2982d0] = 0;
		*node[0x561cfa298300] = 1;
		*node[0x561cfa298360] = ;;
		*node[0x561cfa298390] = 6;
		*node[0x561cfa2983c0] = 1;
		*node[0x561cfa2983f0] = 2;
		*node[0x561cfa298420] = 3;
		*node[0x561cfa298450] = ;;
		*node[0x561cfa298540] = =;
		*node[0x561cfa298480] = 7;
		*node[0x561cfa298510] = -;
		*node[0x561cfa2984b0] = 0;
		*node[0x561cfa2984e0] = 1;
		*node[0x561cfa298570] = ;;
		*node[0x561cfa298600] = =;
		*node[0x561cfa2985a0] = 8;
		*node[0x561cfa2985d0] = 1;
		*node[0x561cfa298630] = ;;
		*node[0x561cfa2986c0] = =;
		*node[0x561cfa298660] = 11;
		*node[0x561cfa298690] = 2;
		*node[0x561cfa2986f0] = ;;
		*node[0x561cfa298720] = if;
		*node[0x561cfa298750] = op_no;
		*node[0x561cfa2987e0] = ==;
		*node[0x561cfa298780] = 3;
		*node[0x561cfa2987b0] = 0;
		*node[0x561cfa298810] = ;;
		*node[0x561cfa2988a0] = =;
		*node[0x561cfa298840] = 12;
		*node[0x561cfa298870] = 0;
		*node[0x561cfa2988d0] = ;;
		*node[0x561cfa298a20] = =;
		*node[0x561cfa298900] = 13;
		*node[0x561cfa2989f0] = /;
		*node[0x561cfa298990] = -;
		*node[0x561cfa298930] = 0;
		*node[0x561cfa298960] = 2;
		*node[0x561cfa2989c0] = 1;
		*node[0x561cfa298a50] = ;;
		*node[0x561cfa298a80] = print;
		*node[0x561cfa298ab0] = 11;
		*node[0x561cfa298ae0] = ;;
		*node[0x561cfa298b10] = print;
		*node[0x561cfa298b40] = 12;
		*node[0x561cfa298b70] = 13;
		*node[0x561cfa298ba0] = ;;
		*node[0x561cfa298db0] = =;
		*node[0x561cfa298bd0] = 14;
		*node[0x561cfa298d80] = -;
		*node[0x561cfa298c60] = *;
		*node[0x561cfa298c00] = 2;
		*node[0x561cfa298c30] = 2;
		*node[0x561cfa298d50] = *;
		*node[0x561cfa298cf0] = *;
		*node[0x561cfa298c90] = 4;
		*node[0x561cfa298cc0] = 1;
		*node[0x561cfa298d20] = 3;
		*node[0x561cfa298de0] = ;;
		*node[0x561cfa298e10] = if;
		*node[0x561cfa298e40] = op_no;
		*node[0x561cfa298ed0] = >;
		*node[0x561cfa298e70] = 14;
		*node[0x561cfa298ea0] = 0;
		*node[0x561cfa298f00] = ;;
		*node[0x561cfa298ff0] = =;
		*node[0x561cfa298f30] = 15;
		*node[0x561cfa298fc0] = sqrt;
		*node[0x561cfa298f90] = 1;
		*node[0x561cfa298f60] = 14;
		*node[0x561cfa299020] = ;;
		*node[0x561cfa299230] = =;
		*node[0x561cfa299050] = 12;
		*node[0x561cfa299200] = /;
		*node[0x561cfa299140] = -;
		*node[0x561cfa2990e0] = -;
		*node[0x561cfa299080] = 0;
		*node[0x561cfa2990b0] = 2;
		*node[0x561cfa299110] = 15;
		*node[0x561cfa2991d0] = *;
		*node[0x561cfa299170] = 2;
		*node[0x561cfa2991a0] = 1;
		*node[0x561cfa299260] = ;;
		*node[0x561cfa299470] = =;
		*node[0x561cfa299290] = 13;
		*node[0x561cfa299440] = /;
		*node[0x561cfa299380] = +;
		*node[0x561cfa299320] = -;
		*node[0x561cfa2992c0] = 0;
		*node[0x561cfa2992f0] = 2;
		*node[0x561cfa299350] = 15;
		*node[0x561cfa299410] = *;
		*node[0x561cfa2993b0] = 2;
		*node[0x561cfa2993e0] = 1;
		*node[0x561cfa2994a0] = ;;
		*node[0x561cfa2994d0] = print;
		*node[0x561cfa299500] = 11;
		*node[0x561cfa299530] = ;;
		*node[0x561cfa299560] = print;
		*node[0x561cfa299590] = 12;
		*node[0x561cfa2995c0] = 13;
		*node[0x561cfa2995f0] = if;
		*node[0x561cfa299620] = op_no;
		*node[0x561cfa2996b0] = ==;
		*node[0x561cfa299650] = 14;
		*node[0x561cfa299680] = 0;
		*node[0x561cfa2996e0] = ;;
		*node[0x561cfa299890] = =;
		*node[0x561cfa299710] = 10;
		*node[0x561cfa299860] = /;
		*node[0x561cfa2997a0] = -;
		*node[0x561cfa299740] = 0;
		*node[0x561cfa299770] = 2;
		*node[0x561cfa299830] = *;
		*node[0x561cfa2997d0] = 2;
		*node[0x561cfa299800] = 1;
		*node[0x561cfa2998c0] = ;;
		*node[0x561cfa2998f0] = print;
		*node[0x561cfa299920] = 8;
		*node[0x561cfa299950] = ;;
		*node[0x561cfa299980] = print;
		*node[0x561cfa2999b0] = 10;
		*node[0x561cfa2999e0] = ;;
		*node[0x561cfa299a10] = print;
		*node[0x561cfa299a40] = 7;
		*node[0x561cfa299a70] = ;;
		*node[0x561cfa299aa0] = return;
		*node[0x561cfa299ad0] = 0;
		*node[0x561cfa299b00] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffcd0941440] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffcd0941440] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffc256c9720] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffc256c9720] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fff96701fe0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7fff96701fe0] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd15e4f8d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x62c7811b73c0] = ;;
		*node[0x62c7811b73f0] = 0;
		*node[0x62c7811b7420] = ;;
		*node[0x62c7811b7450] = input;
		*node[0x62c7811b7480] = 1;
		*node[0x62c7811b74b0] = ;;
		*node[0x62c7811b7540] = =;
		*node[0x62c7811b74e0] = 2;
		*node[0x62c7811b7510] = 1;
		*node[0x62c7811b7570] = ;;
		*node[0x62c7811b75a0] = if;
		*node[0x62c7811b75d0] = op_no;
		*node[0x62c7811b7720] = ||;
		*node[0x62c7811b7660] = <;
		*node[0x62c7811b7600] = 1;
		*node[0x62c7811b7630] = 0;
		*node[0x62c7811b76f0] = ==;
		*node[0x62c7811b7690] = 1;
		*node[0x62c7811b76c0] = 0;
		*node[0x62c7811b7750] = ;;
		*node[0x62c7811b7780] = print;
		*node[0x62c7811b77b0] = 2;
		*node[0x62c7811b77e0] = if;
		*node[0x62c7811b7810] = op_no;
		*node[0x62c7811b78a0] = ==;
		*node[0x62c7811b7840] = 1;
		*node[0x62c7811b7870] = 1;
		*node[0x62c7811b78d0] = ;;
		*node[0x62c7811b7900] = print;
		*node[0x62c7811b7930] = 1;
		*node[0x62c7811b7960] = ;;
		*node[0x62c7811b7990] = print;
		*node[0x62c7811b79c0] = 3;
		*node[0x62c7811b79f0] = ;;
		*node[0x62c7811b7a20] = 4;
		*node[0x62c7811b7a50] = 1;
		*node[0x62c7811b7a80] = ;;
		*node[0x62c7811b7ab0] = if;
		*node[0x62c7811b7ae0] = op_no;
		*node[0x62c7811b7b70] = ==;
		*node[0x62c7811b7b10] = 1;
		*node[0x62c7811b7b40] = 1;
		*node[0x62c7811b7ba0] = ;;
		*node[0x62c7811b7bd0] = return;
		*node[0x62c7811b7c00] = 1;
		*node[0x62c7811b7c30] = ;;
		*node[0x62c7811b7c60] = return;
		*node[0x62c7811b7c90] = 1;
		*node[0x62c7811b7cc0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd027a4f30] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x55ce250bb220] = ;;
		*node[0x55ce250bb250] = 0;
		*node[0x55ce250bb280] = ;;
		*node[0x55ce250bb2b0] = input;
		*node[0x55ce250bb2e0] = 1;
		*node[0x55ce250bb310] = 2;
		*node[0x55ce250bb340] = 3;
		*node[0x55ce250bb370] = ;;
		*node[0x55ce250bb400] = 1;
		*node[0x55ce250bb430] = 2;
		*node[0x55ce250bb460] = 3;
		*node[0x55ce250bb3d0] = 4;
		*node[0x55ce250bb490] = ;;
		*node[0x55ce250bb4c0] = 4;
		*node[0x55ce250bb4f0] = 1;
		*node[0x55ce250bb520] = 2;
		*node[0x55ce250bb550] = 3;
		*node[0x55ce250bb580] = ;;
		*node[0x55ce250bb5b0] = if;
		*node[0x55ce250bb5e0] = op_no;
		*node[0x55ce250bb670] = ==;
		*node[0x55ce250bb610] = 1;
		*node[0x55ce250bb640] = 0;
		*node[0x55ce250bb6a0] = ;;
		*node[0x55ce250bb730] = 2;
		*node[0x55ce250bb760] = 3;
		*node[0x55ce250bb700] = 5;
		*node[0x55ce250bb790] = ;;
		*node[0x55ce250bb820] = 1;
		*node[0x55ce250bb850] = 2;
		*node[0x55ce250bb880] = 3;
		*node[0x55ce250bb7f0] = 6;
		*node[0x55ce250bb8b0] = ;;
		*node[0x55ce250bb8e0] = 5;
		*node[0x55ce250bb910] = 1;
		*node[0x55ce250bb940] = 2;
		*node[0x55ce250bb970] = ;;
		*node[0x55ce250bba60] = =;
		*node[0x55ce250bb9a0] = 7;
		*node[0x55ce250bba30] = -;
		*node[0x55ce250bb9d0] = 0;
		*node[0x55ce250bba00] = 1;
		*node[0x55ce250bba90] = ;;
		*node[0x55ce250bbb20] = =;
		*node[0x55ce250bbac0] = 8;
		*node[0x55ce250bbaf0] = 1;
		*node[0x55ce250bbb50] = ;;
		*node[0x55ce250bbbe0] = =;
		*node[0x55ce250bbb80] = 9;
		*node[0x55ce250bbbb0] = 1000;
		*node[0x55ce250bbc10] = ;;
		*node[0x55ce250bbc40] = if;
		*node[0x55ce250bbc70] = op_no;
		*node[0x55ce250bbd00] = ==;
		*node[0x55ce250bbca0] = 1;
		*node[0x55ce250bbcd0] = 0;
		*node[0x55ce250bbd30] = ;;
		*node[0x55ce250bbd60] = if;
		*node[0x55ce250bbd90] = op_no;
		*node[0x55ce250bbe20] = ==;
		*node[0x55ce250bbdc0] = 2;
		*node[0x55ce250bbdf0] = 0;
		*node[0x55ce250bbe50] = ;;
		*node[0x55ce250bbe80] = print;
		*node[0x55ce250bbeb0] = 9;
		*node[0x55ce250bbee0] = ;;
		*node[0x55ce250bbf10] = print;
		*node[0x55ce250bbf40] = 7;
		*node[0x55ce250bbf70] = ;;
		*node[0x55ce250bc0c0] = =;
		*node[0x55ce250bbfa0] = 10;
		*node[0x55ce250bc090] = /;
		*node[0x55ce250bc030] = -;
		*node[0x55ce250bbfd0] = 0;
		*node[0x55ce250bc000] = 2;
		*node[0x55ce250bc060] = 1;
		*node[0x55ce250bc0f0] = ;;
		*node[0x55ce250bc120] = print;
		*node[0x55ce250bc150] = 8;
		*node[0x55ce250bc180] = ;;
		*node[0x55ce250bc1b0] = print;
		*node[0x55ce250bc1e0] = 10;
		*node[0x55ce250bc210] = ;;
		*node[0x55ce250bc240] = return;
		*node[0x55ce250bc270] = 0;
		*node[0x55ce250bc2a0] = ;;
		*node[0x55ce250bc2d0] = 6;
		*node[0x55ce250bc300] = 1;
		*node[0x55ce250bc330] = 2;
		*node[0x55ce250bc360] = 3;
		*node[0x55ce250bc390] = ;;
		*node[0x55ce250bc480] = =;
		*node[0x55ce250bc3c0] = 7;
		*node[0x55ce250bc450] = -;
		*node[0x55ce250bc3f0] = 0;
		*node[0x55ce250bc420] = 1;
		*node[0x55ce250bc4b0] = ;;
		*node[0x55ce250bc540] = =;
		*node[0x55ce250bc4e0] = 8;
		*node[0x55ce250bc510] = 1;
		*node[0x55ce250bc570] = ;;
		*node[0x55ce250bc600] = =;
		*node[0x55ce250bc5a0] = 11;
		*node[0x55ce250bc5d0] = 2;
		*node[0x55ce250bc630] = ;;
		*node[0x55ce250bc660] = if;
		*node[0x55ce250bc690] = op_no;
		*node[0x55ce250bc720] = ==;
		*node[0x55ce250bc6c0] = 3;
		*node[0x55ce250bc6f0] = 0;
		*node[0x55ce250bc750] = ;;
		*node[0x55ce250bc7e0] = =;
		*node[0x55ce250bc780] = 12;
		*node[0x55ce250bc7b0] = 0;
		*node[0x55ce250bc810] = ;;
		*node[0x55ce250bc960] = =;
		*node[0x55ce250bc840] = 13;
		*node[0x55ce250bc930] = /;
		*node[0x55ce250bc8d0] = -;
		*node[0x55ce250bc870] = 0;
		*node[0x55ce250bc8a0] = 2;
		*node[0x55ce250bc900] = 1;
		*node[0x55ce250bc990] = ;;
		*node[0x55ce250bc9c0] = print;
		*node[0x55ce250bc9f0] = 11;
		*node[0x55ce250bca20] = ;;
		*node[0x55ce250bca50] = print;
		*node[0x55ce250bca80] = 12;
		*node[0x55ce250bcab0] = 13;
		*node[0x55ce250bcae0] = ;;
		*node[0x55ce250bccf0] = =;
		*node[0x55ce250bcb10] = 14;
		*node[0x55ce250bccc0] = -;
		*node[0x55ce250bcba0] = *;
		*node[0x55ce250bcb40] = 2;
		*node[0x55ce250bcb70] = 2;
		*node[0x55ce250bcc90] = *;
		*node[0x55ce250bcc30] = *;
		*node[0x55ce250bcbd0] = 4;
		*node[0x55ce250bcc00] = 1;
		*node[0x55ce250bcc60] = 3;
		*node[0x55ce250bcd20] = ;;
		*node[0x55ce250bcd50] = if;
		*node[0x55ce250bcd80] = op_no;
		*node[0x55ce250bce10] = >;
		*node[0x55ce250bcdb0] = 14;
		*node[0x55ce250bcde0] = 0;
		*node[0x55ce250bce40] = ;;
		*node[0x55ce250bcf30] = =;
		*node[0x55ce250bce70] = 15;
		*node[0x55ce250bcf00] = sqrt;
		*node[0x55ce250bced0] = 1;
		*node[0x55ce250bcea0] = 14;
		*node[0x55ce250bcf60] = ;;
		*node[0x55ce250bd170] = =;
		*node[0x55ce250bcf90] = 12;
		*node[0x55ce250bd140] = /;
		*node[0x55ce250bd080] = -;
		*node[0x55ce250bd020] = -;
		*node[0x55ce250bcfc0] = 0;
		*node[0x55ce250bcff0] = 2;
		*node[0x55ce250bd050] = 15;
		*node[0x55ce250bd110] = *;
		*node[0x55ce250bd0b0] = 2;
		*node[0x55ce250bd0e0] = 1;
		*node[0x55ce250bd1a0] = ;;
		*node[0x55ce250bd3b0] = =;
		*node[0x55ce250bd1d0] = 13;
		*node[0x55ce250bd380] = /;
		*node[0x55ce250bd2c0] = +;
		*node[0x55ce250bd260] = -;
		*node[0x55ce250bd200] = 0;
		*node[0x55ce250bd230] = 2;
		*node[0x55ce250bd290] = 15;
		*node[0x55ce250bd350] = *;
		*node[0x55ce250bd2f0] = 2;
		*node[0x55ce250bd320] = 1;
		*node[0x55ce250bd3e0] = ;;
		*node[0x55ce250bd410] = print;
		*node[0x55ce250bd440] = 11;
		*node[0x55ce250bd470] = ;;
		*node[0x55ce250bd4a0] = print;
		*node[0x55ce250bd4d0] = 12;
		*node[0x55ce250bd500] = 13;
		*node[0x55ce250bd530] = if;
		*node[0x55ce250bd560] = op_no;
		*node[0x55ce250bd5f0] = ==;
		*node[0x55ce250bd590] = 14;
		*node[0x55ce250bd5c0] = 0;
		*node[0x55ce250bd620] = ;;
		*node[0x55ce250bd7d0] = =;
		*node[0x55ce250bd650] = 10;
		*node[0x55ce250bd7a0] = /;
		*node[0x55ce250bd6e0] = -;
		*node[0x55ce250bd680] = 0;
		*node[0x55ce250bd6b0] = 2;
		*node[0x55ce250bd770] = *;
		*node[0x55ce250bd710] = 2;
		*node[0x55ce250bd740] = 1;
		*node[0x55ce250bd800] = ;;
		*node[0x55ce250bd830] = print;
		*node[0x55ce250bd860] = 8;
		*node[0x55ce250bd890] = ;;
		*node[0x55ce250bd8c0] = print;
		*node[0x55ce250bd8f0] = 10;
		*node[0x55ce250bd920] = ;;
		*node[0x55ce250bd950] = print;
		*node[0x55ce250bd980] = 7;
		*node[0x55ce250bd9b0] = ;;
		*node[0x55ce250bd9e0] = return;
		*node[0x55ce250bda10] = 0;
		*node[0x55ce250bda40] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffead19cc60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5cba6eb324d0] = ;;
		*node[0x5cba6eb32500] = 0;
		*node[0x5cba6eb32530] = ;;
		*node[0x5cba6eb32560] = input;
		*node[0x5cba6eb32590] = 1;
		*node[0x5cba6eb325c0] = ;;
		*node[0x5cba6eb32650] = =;
		*node[0x5cba6eb325f0] = 2;
		*node[0x5cba6eb32620] = 1;
		*node[0x5cba6eb32680] = ;;
		*node[0x5cba6eb326b0] = if;
		*node[0x5cba6eb326e0] = op_no;
		*node[0x5cba6eb32830] = ||;
		*node[0x5cba6eb32770] = <;
		*node[0x5cba6eb32710] = 1;
		*node[0x5cba6eb32740] = 0;
		*node[0x5cba6eb32800] = ==;
		*node[0x5cba6eb327a0] = 1;
		*node[0x5cba6eb327d0] = 0;
		*node[0x5cba6eb32860] = ;;
		*node[0x5cba6eb32890] = print;
		*node[0x5cba6eb328c0] = 2;
		*node[0x5cba6eb328f0] = if;
		*node[0x5cba6eb32920] = op_no;
		*node[0x5cba6eb329b0] = ==;
		*node[0x5cba6eb32950] = 1;
		*node[0x5cba6eb32980] = 1;
		*node[0x5cba6eb329e0] = ;;
		*node[0x5cba6eb32a10] = print;
		*node[0x5cba6eb32a40] = 1;
		*node[0x5cba6eb32a70] = ;;
		*node[0x5cba6eb32aa0] = print;
		*node[0x5cba6eb32ad0] = 3;
		*node[0x5cba6eb32b00] = ;;
		*node[0x5cba6eb32b30] = 4;
		*node[0x5cba6eb32b60] = 1;
		*node[0x5cba6eb32b90] = ;;
		*node[0x5cba6eb32bc0] = if;
		*node[0x5cba6eb32bf0] = op_no;
		*node[0x5cba6eb32c80] = ==;
		*node[0x5cba6eb32c20] = 1;
		*node[0x5cba6eb32c50] = 1;
		*node[0x5cba6eb32cb0] = ;;
		*node[0x5cba6eb32ce0] = return;
		*node[0x5cba6eb32d10] = 1;
		*node[0x5cba6eb32d40] = ;;
		*node[0x5cba6eb32e30] = =;
		*node[0x5cba6eb32d70] = 5;
		*node[0x5cba6eb32e00] = -;
		*node[0x5cba6eb32da0] = 1;
		*node[0x5cba6eb32dd0] = 1;
		*node[0x5cba6eb32e60] = ;;
		*node[0x5cba6eb32e90] = return;
		*node[0x5cba6eb32ec0] = 1;
		*node[0x5cba6eb32ef0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd77a4fd30] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e361e4bb220] = ;;
		*node[0x5e361e4bb250] = 0;
		*node[0x5e361e4bb280] = ;;
		*node[0x5e361e4bb2b0] = input;
		*node[0x5e361e4bb2e0] = 1;
		*node[0x5e361e4bb310] = 2;
		*node[0x5e361e4bb340] = 3;
		*node[0x5e361e4bb370] = ;;
		*node[0x5e361e4bb400] = 1;
		*node[0x5e361e4bb430] = 2;
		*node[0x5e361e4bb460] = 3;
		*node[0x5e361e4bb3d0] = 4;
		*node[0x5e361e4bb490] = ;;
		*node[0x5e361e4bb4c0] = 4;
		*node[0x5e361e4bb4f0] = 1;
		*node[0x5e361e4bb520] = 2;
		*node[0x5e361e4bb550] = 3;
		*node[0x5e361e4bb580] = ;;
		*node[0x5e361e4bb5b0] = if;
		*node[0x5e361e4bb5e0] = op_no;
		*node[0x5e361e4bb670] = ==;
		*node[0x5e361e4bb610] = 1;
		*node[0x5e361e4bb640] = 0;
		*node[0x5e361e4bb6a0] = ;;
		*node[0x5e361e4bb730] = 2;
		*node[0x5e361e4bb760] = 3;
		*node[0x5e361e4bb700] = 5;
		*node[0x5e361e4bb790] = ;;
		*node[0x5e361e4bb820] = 1;
		*node[0x5e361e4bb850] = 2;
		*node[0x5e361e4bb880] = 3;
		*node[0x5e361e4bb7f0] = 6;
		*node[0x5e361e4bb8b0] = ;;
		*node[0x5e361e4bb8e0] = 5;
		*node[0x5e361e4bb910] = 1;
		*node[0x5e361e4bb940] = 2;
		*node[0x5e361e4bb970] = ;;
		*node[0x5e361e4bba60] = =;
		*node[0x5e361e4bb9a0] = 7;
		*node[0x5e361e4bba30] = -;
		*node[0x5e361e4bb9d0] = 0;
		*node[0x5e361e4bba00] = 1;
		*node[0x5e361e4bba90] = ;;
		*node[0x5e361e4bbb20] = =;
		*node[0x5e361e4bbac0] = 8;
		*node[0x5e361e4bbaf0] = 1;
		*node[0x5e361e4bbb50] = ;;
		*node[0x5e361e4bbbe0] = =;
		*node[0x5e361e4bbb80] = 9;
		*node[0x5e361e4bbbb0] = 1000;
		*node[0x5e361e4bbc10] = ;;
		*node[0x5e361e4bbc40] = if;
		*node[0x5e361e4bbc70] = op_no;
		*node[0x5e361e4bbd00] = ==;
		*node[0x5e361e4bbca0] = 1;
		*node[0x5e361e4bbcd0] = 0;
		*node[0x5e361e4bbd30] = ;;
		*node[0x5e361e4bbd60] = if;
		*node[0x5e361e4bbd90] = op_no;
		*node[0x5e361e4bbe20] = ==;
		*node[0x5e361e4bbdc0] = 2;
		*node[0x5e361e4bbdf0] = 0;
		*node[0x5e361e4bbe50] = ;;
		*node[0x5e361e4bbe80] = print;
		*node[0x5e361e4bbeb0] = 9;
		*node[0x5e361e4bbee0] = ;;
		*node[0x5e361e4bbf10] = print;
		*node[0x5e361e4bbf40] = 7;
		*node[0x5e361e4bbf70] = ;;
		*node[0x5e361e4bc0c0] = =;
		*node[0x5e361e4bbfa0] = 10;
		*node[0x5e361e4bc090] = /;
		*node[0x5e361e4bc030] = -;
		*node[0x5e361e4bbfd0] = 0;
		*node[0x5e361e4bc000] = 2;
		*node[0x5e361e4bc060] = 1;
		*node[0x5e361e4bc0f0] = ;;
		*node[0x5e361e4bc120] = print;
		*node[0x5e361e4bc150] = 8;
		*node[0x5e361e4bc180] = ;;
		*node[0x5e361e4bc1b0] = print;
		*node[0x5e361e4bc1e0] = 10;
		*node[0x5e361e4bc210] = ;;
		*node[0x5e361e4bc240] = return;
		*node[0x5e361e4bc270] = 0;
		*node[0x5e361e4bc2a0] = ;;
		*node[0x5e361e4bc2d0] = 6;
		*node[0x5e361e4bc300] = 1;
		*node[0x5e361e4bc330] = 2;
		*node[0x5e361e4bc360] = 3;
		*node[0x5e361e4bc390] = ;;
		*node[0x5e361e4bc480] = =;
		*node[0x5e361e4bc3c0] = 7;
		*node[0x5e361e4bc450] = -;
		*node[0x5e361e4bc3f0] = 0;
		*node[0x5e361e4bc420] = 1;
		*node[0x5e361e4bc4b0] = ;;
		*node[0x5e361e4bc540] = =;
		*node[0x5e361e4bc4e0] = 8;
		*node[0x5e361e4bc510] = 1;
		*node[0x5e361e4bc570] = ;;
		*node[0x5e361e4bc600] = =;
		*node[0x5e361e4bc5a0] = 11;
		*node[0x5e361e4bc5d0] = 2;
		*node[0x5e361e4bc630] = ;;
		*node[0x5e361e4bc660] = if;
		*node[0x5e361e4bc690] = op_no;
		*node[0x5e361e4bc720] = ==;
		*node[0x5e361e4bc6c0] = 3;
		*node[0x5e361e4bc6f0] = 0;
		*node[0x5e361e4bc750] = ;;
		*node[0x5e361e4bc7e0] = =;
		*node[0x5e361e4bc780] = 12;
		*node[0x5e361e4bc7b0] = 0;
		*node[0x5e361e4bc810] = ;;
		*node[0x5e361e4bc960] = =;
		*node[0x5e361e4bc840] = 13;
		*node[0x5e361e4bc930] = /;
		*node[0x5e361e4bc8d0] = -;
		*node[0x5e361e4bc870] = 0;
		*node[0x5e361e4bc8a0] = 2;
		*node[0x5e361e4bc900] = 1;
		*node[0x5e361e4bc990] = ;;
		*node[0x5e361e4bc9c0] = print;
		*node[0x5e361e4bc9f0] = 11;
		*node[0x5e361e4bca20] = ;;
		*node[0x5e361e4bca50] = print;
		*node[0x5e361e4bca80] = 12;
		*node[0x5e361e4bcab0] = 13;
		*node[0x5e361e4bcae0] = ;;
		*node[0x5e361e4bccf0] = =;
		*node[0x5e361e4bcb10] = 14;
		*node[0x5e361e4bccc0] = -;
		*node[0x5e361e4bcba0] = *;
		*node[0x5e361e4bcb40] = 2;
		*node[0x5e361e4bcb70] = 2;
		*node[0x5e361e4bcc90] = *;
		*node[0x5e361e4bcc30] = *;
		*node[0x5e361e4bcbd0] = 4;
		*node[0x5e361e4bcc00] = 1;
		*node[0x5e361e4bcc60] = 3;
		*node[0x5e361e4bcd20] = ;;
		*node[0x5e361e4bcd50] = if;
		*node[0x5e361e4bcd80] = op_no;
		*node[0x5e361e4bce10] = >;
		*node[0x5e361e4bcdb0] = 14;
		*node[0x5e361e4bcde0] = 0;
		*node[0x5e361e4bce40] = ;;
		*node[0x5e361e4bcf30] = =;
		*node[0x5e361e4bce70] = 15;
		*node[0x5e361e4bcf00] = sqrt;
		*node[0x5e361e4bced0] = 1;
		*node[0x5e361e4bcea0] = 14;
		*node[0x5e361e4bcf60] = ;;
		*node[0x5e361e4bd170] = =;
		*node[0x5e361e4bcf90] = 12;
		*node[0x5e361e4bd140] = /;
		*node[0x5e361e4bd080] = -;
		*node[0x5e361e4bd020] = -;
		*node[0x5e361e4bcfc0] = 0;
		*node[0x5e361e4bcff0] = 2;
		*node[0x5e361e4bd050] = 15;
		*node[0x5e361e4bd110] = *;
		*node[0x5e361e4bd0b0] = 2;
		*node[0x5e361e4bd0e0] = 1;
		*node[0x5e361e4bd1a0] = ;;
		*node[0x5e361e4bd3b0] = =;
		*node[0x5e361e4bd1d0] = 13;
		*node[0x5e361e4bd380] = /;
		*node[0x5e361e4bd2c0] = +;
		*node[0x5e361e4bd260] = -;
		*node[0x5e361e4bd200] = 0;
		*node[0x5e361e4bd230] = 2;
		*node[0x5e361e4bd290] = 15;
		*node[0x5e361e4bd350] = *;
		*node[0x5e361e4bd2f0] = 2;
		*node[0x5e361e4bd320] = 1;
		*node[0x5e361e4bd3e0] = ;;
		*node[0x5e361e4bd410] = print;
		*node[0x5e361e4bd440] = 11;
		*node[0x5e361e4bd470] = ;;
		*node[0x5e361e4bd4a0] = print;
		*node[0x5e361e4bd4d0] = 12;
		*node[0x5e361e4bd500] = 13;
		*node[0x5e361e4bd530] = if;
		*node[0x5e361e4bd560] = op_no;
		*node[0x5e361e4bd5f0] = ==;
		*node[0x5e361e4bd590] = 14;
		*node[0x5e361e4bd5c0] = 0;
		*node[0x5e361e4bd620] = ;;
		*node[0x5e361e4bd7d0] = =;
		*node[0x5e361e4bd650] = 10;
		*node[0x5e361e4bd7a0] = /;
		*node[0x5e361e4bd6e0] = -;
		*node[0x5e361e4bd680] = 0;
		*node[0x5e361e4bd6b0] = 2;
		*node[0x5e361e4bd770] = *;
		*node[0x5e361e4bd710] = 2;
		*node[0x5e361e4bd740] = 1;
		*node[0x5e361e4bd800] = ;;
		*node[0x5e361e4bd830] = print;
		*node[0x5e361e4bd860] = 8;
		*node[0x5e361e4bd890] = ;;
		*node[0x5e361e4bd8c0] = print;
		*node[0x5e361e4bd8f0] = 10;
		*node[0x5e361e4bd920] = ;;
		*node[0x5e361e4bd950] = print;
		*node[0x5e361e4bd980] = 7;
		*node[0x5e361e4bd9b0] = ;;
		*node[0x5e361e4bd9e0] = return;
		*node[0x5e361e4bda10] = 0;
		*node[0x5e361e4bda40] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fff99a673e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7fff99a673e0] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff132a15b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x56acc4374710] = ;;
		*node[0x56acc4374740] = 0;
		*node[0x56acc4374770] = ;;
		*node[0x56acc43747a0] = input;
		*node[0x56acc43747d0] = 1;
		*node[0x56acc4374800] = ;;
		*node[0x56acc4374890] = =;
		*node[0x56acc4374830] = 2;
		*node[0x56acc4374860] = 1;
		*node[0x56acc43748c0] = ;;
		*node[0x56acc43748f0] = if;
		*node[0x56acc4374920] = op_no;
		*node[0x56acc4374a70] = ||;
		*node[0x56acc43749b0] = <;
		*node[0x56acc4374950] = 1;
		*node[0x56acc4374980] = 0;
		*node[0x56acc4374a40] = ==;
		*node[0x56acc43749e0] = 1;
		*node[0x56acc4374a10] = 0;
		*node[0x56acc4374aa0] = ;;
		*node[0x56acc4374ad0] = print;
		*node[0x56acc4374b00] = 2;
		*node[0x56acc4374b30] = if;
		*node[0x56acc4374b60] = op_no;
		*node[0x56acc4374bf0] = ==;
		*node[0x56acc4374b90] = 1;
		*node[0x56acc4374bc0] = 1;
		*node[0x56acc4374c20] = ;;
		*node[0x56acc4374c50] = print;
		*node[0x56acc4374c80] = 1;
		*node[0x56acc4374cb0] = ;;
		*node[0x56acc4374da0] = =;
		*node[0x56acc4374ce0] = 3;
		*node[0x56acc4374d70] = 1;
		*node[0x56acc4374d40] = 4;
		*node[0x56acc4374dd0] = ;;
		*node[0x56acc4374e00] = print;
		*node[0x56acc4374e30] = 3;
		*node[0x56acc4374e60] = ;;
		*node[0x56acc4374e90] = 4;
		*node[0x56acc4374ec0] = 1;
		*node[0x56acc4374ef0] = ;;
		*node[0x56acc4374f20] = if;
		*node[0x56acc4374f50] = op_no;
		*node[0x56acc4374fe0] = ==;
		*node[0x56acc4374f80] = 1;
		*node[0x56acc4374fb0] = 1;
		*node[0x56acc4375010] = ;;
		*node[0x56acc4375040] = return;
		*node[0x56acc4375070] = 1;
		*node[0x56acc43750a0] = ;;
		*node[0x56acc4375190] = =;
		*node[0x56acc43750d0] = 5;
		*node[0x56acc4375160] = -;
		*node[0x56acc4375100] = 1;
		*node[0x56acc4375130] = 1;
		*node[0x56acc43751c0] = ;;
		*node[0x56acc43751f0] = return;
		*node[0x56acc4375220] = 1;
		*node[0x56acc4375250] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe5118d2f0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5d700d6809a0] = ;;
		*node[0x5d700d6809d0] = 0;
		*node[0x5d700d680a00] = ;;
		*node[0x5d700d680a30] = input;
		*node[0x5d700d680a60] = 1;
		*node[0x5d700d680a90] = ;;
		*node[0x5d700d680b20] = =;
		*node[0x5d700d680ac0] = 2;
		*node[0x5d700d680af0] = 1;
		*node[0x5d700d680b50] = ;;
		*node[0x5d700d680b80] = if;
		*node[0x5d700d680bb0] = op_no;
		*node[0x5d700d680d00] = ||;
		*node[0x5d700d680c40] = <;
		*node[0x5d700d680be0] = 1;
		*node[0x5d700d680c10] = 0;
		*node[0x5d700d680cd0] = ==;
		*node[0x5d700d680c70] = 1;
		*node[0x5d700d680ca0] = 0;
		*node[0x5d700d680d30] = ;;
		*node[0x5d700d680d60] = print;
		*node[0x5d700d680d90] = 2;
		*node[0x5d700d680dc0] = if;
		*node[0x5d700d680df0] = op_no;
		*node[0x5d700d680e80] = ==;
		*node[0x5d700d680e20] = 1;
		*node[0x5d700d680e50] = 1;
		*node[0x5d700d680eb0] = ;;
		*node[0x5d700d680ee0] = print;
		*node[0x5d700d680f10] = 1;
		*node[0x5d700d680f40] = ;;
		*node[0x5d700d681030] = =;
		*node[0x5d700d680f70] = 3;
		*node[0x5d700d681000] = 1;
		*node[0x5d700d680fd0] = 4;
		*node[0x5d700d681060] = ;;
		*node[0x5d700d681090] = print;
		*node[0x5d700d6810c0] = 3;
		*node[0x5d700d6810f0] = ;;
		*node[0x5d700d681120] = 4;
		*node[0x5d700d681150] = 1;
		*node[0x5d700d681180] = ;;
		*node[0x5d700d6811b0] = if;
		*node[0x5d700d6811e0] = op_no;
		*node[0x5d700d681270] = ==;
		*node[0x5d700d681210] = 1;
		*node[0x5d700d681240] = 1;
		*node[0x5d700d6812a0] = ;;
		*node[0x5d700d6812d0] = return;
		*node[0x5d700d681300] = 1;
		*node[0x5d700d681330] = ;;
		*node[0x5d700d681420] = =;
		*node[0x5d700d681360] = 5;
		*node[0x5d700d6813f0] = -;
		*node[0x5d700d681390] = 1;
		*node[0x5d700d6813c0] = 1;
		*node[0x5d700d681450] = ;;
		*node[0x5d700d6815a0] = =;
		*node[0x5d700d681480] = 1;
		*node[0x5d700d681570] = *;
		*node[0x5d700d6814b0] = 1;
		*node[0x5d700d681540] = 5;
		*node[0x5d700d681510] = 4;
		*node[0x5d700d6815d0] = ;;
		*node[0x5d700d681600] = return;
		*node[0x5d700d681630] = 1;
		*node[0x5d700d681660] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff341fa880] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x652322fc2220] = ;;
		*node[0x652322fc2250] = 0;
		*node[0x652322fc2280] = ;;
		*node[0x652322fc22b0] = input;
		*node[0x652322fc22e0] = 1;
		*node[0x652322fc2310] = 2;
		*node[0x652322fc2340] = 3;
		*node[0x652322fc2370] = ;;
		*node[0x652322fc23d0] = 1;
		*node[0x652322fc2400] = 2;
		*node[0x652322fc2430] = 3;
		*node[0x652322fc2460] = ;;
		*node[0x652322fc2490] = 4;
		*node[0x652322fc24c0] = 1;
		*node[0x652322fc24f0] = 2;
		*node[0x652322fc2520] = 3;
		*node[0x652322fc2550] = ;;
		*node[0x652322fc2580] = if;
		*node[0x652322fc25b0] = op_no;
		*node[0x652322fc2640] = ==;
		*node[0x652322fc25e0] = 1;
		*node[0x652322fc2610] = 0;
		*node[0x652322fc2670] = ;;
		*node[0x652322fc26d0] = 2;
		*node[0x652322fc2700] = 3;
		*node[0x652322fc2730] = ;;
		*node[0x652322fc2790] = 1;
		*node[0x652322fc27c0] = 2;
		*node[0x652322fc27f0] = 3;
		*node[0x652322fc2820] = ;;
		*node[0x652322fc2850] = 5;
		*node[0x652322fc2880] = 1;
		*node[0x652322fc28b0] = 2;
		*node[0x652322fc28e0] = ;;
		*node[0x652322fc29d0] = =;
		*node[0x652322fc2910] = 7;
		*node[0x652322fc29a0] = -;
		*node[0x652322fc2940] = 0;
		*node[0x652322fc2970] = 1;
		*node[0x652322fc2a00] = ;;
		*node[0x652322fc2a90] = =;
		*node[0x652322fc2a30] = 8;
		*node[0x652322fc2a60] = 1;
		*node[0x652322fc2ac0] = ;;
		*node[0x652322fc2b50] = =;
		*node[0x652322fc2af0] = 9;
		*node[0x652322fc2b20] = 1000;
		*node[0x652322fc2b80] = ;;
		*node[0x652322fc2bb0] = if;
		*node[0x652322fc2be0] = op_no;
		*node[0x652322fc2c70] = ==;
		*node[0x652322fc2c10] = 1;
		*node[0x652322fc2c40] = 0;
		*node[0x652322fc2ca0] = ;;
		*node[0x652322fc2cd0] = if;
		*node[0x652322fc2d00] = op_no;
		*node[0x652322fc2d90] = ==;
		*node[0x652322fc2d30] = 2;
		*node[0x652322fc2d60] = 0;
		*node[0x652322fc2dc0] = ;;
		*node[0x652322fc2df0] = print;
		*node[0x652322fc2e20] = 9;
		*node[0x652322fc2e50] = ;;
		*node[0x652322fc2e80] = print;
		*node[0x652322fc2eb0] = 7;
		*node[0x652322fc2ee0] = ;;
		*node[0x652322fc3030] = =;
		*node[0x652322fc2f10] = 10;
		*node[0x652322fc3000] = /;
		*node[0x652322fc2fa0] = -;
		*node[0x652322fc2f40] = 0;
		*node[0x652322fc2f70] = 2;
		*node[0x652322fc2fd0] = 1;
		*node[0x652322fc3060] = ;;
		*node[0x652322fc3090] = print;
		*node[0x652322fc30c0] = 8;
		*node[0x652322fc30f0] = ;;
		*node[0x652322fc3120] = print;
		*node[0x652322fc3150] = 10;
		*node[0x652322fc3180] = ;;
		*node[0x652322fc31b0] = return;
		*node[0x652322fc31e0] = 0;
		*node[0x652322fc3210] = ;;
		*node[0x652322fc3240] = 6;
		*node[0x652322fc3270] = 1;
		*node[0x652322fc32a0] = 2;
		*node[0x652322fc32d0] = 3;
		*node[0x652322fc3300] = ;;
		*node[0x652322fc33f0] = =;
		*node[0x652322fc3330] = 7;
		*node[0x652322fc33c0] = -;
		*node[0x652322fc3360] = 0;
		*node[0x652322fc3390] = 1;
		*node[0x652322fc3420] = ;;
		*node[0x652322fc34b0] = =;
		*node[0x652322fc3450] = 8;
		*node[0x652322fc3480] = 1;
		*node[0x652322fc34e0] = ;;
		*node[0x652322fc3570] = =;
		*node[0x652322fc3510] = 11;
		*node[0x652322fc3540] = 2;
		*node[0x652322fc35a0] = ;;
		*node[0x652322fc35d0] = if;
		*node[0x652322fc3600] = op_no;
		*node[0x652322fc3690] = ==;
		*node[0x652322fc3630] = 3;
		*node[0x652322fc3660] = 0;
		*node[0x652322fc36c0] = ;;
		*node[0x652322fc3750] = =;
		*node[0x652322fc36f0] = 12;
		*node[0x652322fc3720] = 0;
		*node[0x652322fc3780] = ;;
		*node[0x652322fc38d0] = =;
		*node[0x652322fc37b0] = 13;
		*node[0x652322fc38a0] = /;
		*node[0x652322fc3840] = -;
		*node[0x652322fc37e0] = 0;
		*node[0x652322fc3810] = 2;
		*node[0x652322fc3870] = 1;
		*node[0x652322fc3900] = ;;
		*node[0x652322fc3930] = print;
		*node[0x652322fc3960] = 11;
		*node[0x652322fc3990] = ;;
		*node[0x652322fc39c0] = print;
		*node[0x652322fc39f0] = 12;
		*node[0x652322fc3a20] = 13;
		*node[0x652322fc3a50] = ;;
		*node[0x652322fc3c60] = =;
		*node[0x652322fc3a80] = 14;
		*node[0x652322fc3c30] = -;
		*node[0x652322fc3b10] = *;
		*node[0x652322fc3ab0] = 2;
		*node[0x652322fc3ae0] = 2;
		*node[0x652322fc3c00] = *;
		*node[0x652322fc3ba0] = *;
		*node[0x652322fc3b40] = 4;
		*node[0x652322fc3b70] = 1;
		*node[0x652322fc3bd0] = 3;
		*node[0x652322fc3c90] = ;;
		*node[0x652322fc3cc0] = if;
		*node[0x652322fc3cf0] = op_no;
		*node[0x652322fc3d80] = >;
		*node[0x652322fc3d20] = 14;
		*node[0x652322fc3d50] = 0;
		*node[0x652322fc3db0] = ;;
		*node[0x652322fc3ea0] = =;
		*node[0x652322fc3de0] = 15;
		*node[0x652322fc3e70] = sqrt;
		*node[0x652322fc3e40] = 1;
		*node[0x652322fc3e10] = 14;
		*node[0x652322fc3ed0] = ;;
		*node[0x652322fc40e0] = =;
		*node[0x652322fc3f00] = 12;
		*node[0x652322fc40b0] = /;
		*node[0x652322fc3ff0] = -;
		*node[0x652322fc3f90] = -;
		*node[0x652322fc3f30] = 0;
		*node[0x652322fc3f60] = 2;
		*node[0x652322fc3fc0] = 15;
		*node[0x652322fc4080] = *;
		*node[0x652322fc4020] = 2;
		*node[0x652322fc4050] = 1;
		*node[0x652322fc4110] = ;;
		*node[0x652322fc4320] = =;
		*node[0x652322fc4140] = 13;
		*node[0x652322fc42f0] = /;
		*node[0x652322fc4230] = +;
		*node[0x652322fc41d0] = -;
		*node[0x652322fc4170] = 0;
		*node[0x652322fc41a0] = 2;
		*node[0x652322fc4200] = 15;
		*node[0x652322fc42c0] = *;
		*node[0x652322fc4260] = 2;
		*node[0x652322fc4290] = 1;
		*node[0x652322fc4350] = ;;
		*node[0x652322fc4380] = print;
		*node[0x652322fc43b0] = 11;
		*node[0x652322fc43e0] = ;;
		*node[0x652322fc4410] = print;
		*node[0x652322fc4440] = 12;
		*node[0x652322fc4470] = 13;
		*node[0x652322fc44a0] = if;
		*node[0x652322fc44d0] = op_no;
		*node[0x652322fc4560] = ==;
		*node[0x652322fc4500] = 14;
		*node[0x652322fc4530] = 0;
		*node[0x652322fc4590] = ;;
		*node[0x652322fc4740] = =;
		*node[0x652322fc45c0] = 10;
		*node[0x652322fc4710] = /;
		*node[0x652322fc4650] = -;
		*node[0x652322fc45f0] = 0;
		*node[0x652322fc4620] = 2;
		*node[0x652322fc46e0] = *;
		*node[0x652322fc4680] = 2;
		*node[0x652322fc46b0] = 1;
		*node[0x652322fc4770] = ;;
		*node[0x652322fc47a0] = print;
		*node[0x652322fc47d0] = 8;
		*node[0x652322fc4800] = ;;
		*node[0x652322fc4830] = print;
		*node[0x652322fc4860] = 10;
		*node[0x652322fc4890] = ;;
		*node[0x652322fc48c0] = print;
		*node[0x652322fc48f0] = 7;
		*node[0x652322fc4920] = ;;
		*node[0x652322fc4950] = return;
		*node[0x652322fc4980] = 0;
		*node[0x652322fc49b0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff759b0040] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5d379e911220] = ;;
		*node[0x5d379e911250] = 0;
		*node[0x5d379e911280] = ;;
		*node[0x5d379e9112b0] = input;
		*node[0x5d379e9112e0] = 1;
		*node[0x5d379e911310] = 2;
		*node[0x5d379e911340] = 3;
		*node[0x5d379e911370] = ;;
		*node[0x5d379e9113d0] = 1;
		*node[0x5d379e911400] = 2;
		*node[0x5d379e911430] = 3;
		*node[0x5d379e911460] = ;;
		*node[0x5d379e911490] = 4;
		*node[0x5d379e9114c0] = 1;
		*node[0x5d379e9114f0] = 2;
		*node[0x5d379e911520] = 3;
		*node[0x5d379e911550] = ;;
		*node[0x5d379e911580] = if;
		*node[0x5d379e9115b0] = op_no;
		*node[0x5d379e911640] = ==;
		*node[0x5d379e9115e0] = 1;
		*node[0x5d379e911610] = 0;
		*node[0x5d379e911670] = ;;
		*node[0x5d379e9116d0] = 2;
		*node[0x5d379e911700] = 3;
		*node[0x5d379e911730] = ;;
		*node[0x5d379e911790] = 1;
		*node[0x5d379e9117c0] = 2;
		*node[0x5d379e9117f0] = 3;
		*node[0x5d379e911820] = ;;
		*node[0x5d379e911850] = 5;
		*node[0x5d379e911880] = 1;
		*node[0x5d379e9118b0] = 2;
		*node[0x5d379e9118e0] = ;;
		*node[0x5d379e9119d0] = =;
		*node[0x5d379e911910] = 7;
		*node[0x5d379e9119a0] = -;
		*node[0x5d379e911940] = 0;
		*node[0x5d379e911970] = 1;
		*node[0x5d379e911a00] = ;;
		*node[0x5d379e911a90] = =;
		*node[0x5d379e911a30] = 8;
		*node[0x5d379e911a60] = 1;
		*node[0x5d379e911ac0] = ;;
		*node[0x5d379e911b50] = =;
		*node[0x5d379e911af0] = 9;
		*node[0x5d379e911b20] = 1000;
		*node[0x5d379e911b80] = ;;
		*node[0x5d379e911bb0] = if;
		*node[0x5d379e911be0] = op_no;
		*node[0x5d379e911c70] = ==;
		*node[0x5d379e911c10] = 1;
		*node[0x5d379e911c40] = 0;
		*node[0x5d379e911ca0] = ;;
		*node[0x5d379e911cd0] = if;
		*node[0x5d379e911d00] = op_no;
		*node[0x5d379e911d90] = ==;
		*node[0x5d379e911d30] = 2;
		*node[0x5d379e911d60] = 0;
		*node[0x5d379e911dc0] = ;;
		*node[0x5d379e911df0] = print;
		*node[0x5d379e911e20] = 9;
		*node[0x5d379e911e50] = ;;
		*node[0x5d379e911e80] = print;
		*node[0x5d379e911eb0] = 7;
		*node[0x5d379e911ee0] = ;;
		*node[0x5d379e912030] = =;
		*node[0x5d379e911f10] = 10;
		*node[0x5d379e912000] = /;
		*node[0x5d379e911fa0] = -;
		*node[0x5d379e911f40] = 0;
		*node[0x5d379e911f70] = 2;
		*node[0x5d379e911fd0] = 1;
		*node[0x5d379e912060] = ;;
		*node[0x5d379e912090] = print;
		*node[0x5d379e9120c0] = 8;
		*node[0x5d379e9120f0] = ;;
		*node[0x5d379e912120] = print;
		*node[0x5d379e912150] = 10;
		*node[0x5d379e912180] = ;;
		*node[0x5d379e9121b0] = return;
		*node[0x5d379e9121e0] = 0;
		*node[0x5d379e912210] = ;;
		*node[0x5d379e912240] = 6;
		*node[0x5d379e912270] = 1;
		*node[0x5d379e9122a0] = 2;
		*node[0x5d379e9122d0] = 3;
		*node[0x5d379e912300] = ;;
		*node[0x5d379e9123f0] = =;
		*node[0x5d379e912330] = 7;
		*node[0x5d379e9123c0] = -;
		*node[0x5d379e912360] = 0;
		*node[0x5d379e912390] = 1;
		*node[0x5d379e912420] = ;;
		*node[0x5d379e9124b0] = =;
		*node[0x5d379e912450] = 8;
		*node[0x5d379e912480] = 1;
		*node[0x5d379e9124e0] = ;;
		*node[0x5d379e912570] = =;
		*node[0x5d379e912510] = 11;
		*node[0x5d379e912540] = 2;
		*node[0x5d379e9125a0] = ;;
		*node[0x5d379e9125d0] = if;
		*node[0x5d379e912600] = op_no;
		*node[0x5d379e912690] = ==;
		*node[0x5d379e912630] = 3;
		*node[0x5d379e912660] = 0;
		*node[0x5d379e9126c0] = ;;
		*node[0x5d379e912750] = =;
		*node[0x5d379e9126f0] = 12;
		*node[0x5d379e912720] = 0;
		*node[0x5d379e912780] = ;;
		*node[0x5d379e9128d0] = =;
		*node[0x5d379e9127b0] = 13;
		*node[0x5d379e9128a0] = /;
		*node[0x5d379e912840] = -;
		*node[0x5d379e9127e0] = 0;
		*node[0x5d379e912810] = 2;
		*node[0x5d379e912870] = 1;
		*node[0x5d379e912900] = ;;
		*node[0x5d379e912930] = print;
		*node[0x5d379e912960] = 11;
		*node[0x5d379e912990] = ;;
		*node[0x5d379e9129c0] = print;
		*node[0x5d379e9129f0] = 12;
		*node[0x5d379e912a20] = 13;
		*node[0x5d379e912a50] = ;;
		*node[0x5d379e912c60] = =;
		*node[0x5d379e912a80] = 14;
		*node[0x5d379e912c30] = -;
		*node[0x5d379e912b10] = *;
		*node[0x5d379e912ab0] = 2;
		*node[0x5d379e912ae0] = 2;
		*node[0x5d379e912c00] = *;
		*node[0x5d379e912ba0] = *;
		*node[0x5d379e912b40] = 4;
		*node[0x5d379e912b70] = 1;
		*node[0x5d379e912bd0] = 3;
		*node[0x5d379e912c90] = ;;
		*node[0x5d379e912cc0] = if;
		*node[0x5d379e912cf0] = op_no;
		*node[0x5d379e912d80] = >;
		*node[0x5d379e912d20] = 14;
		*node[0x5d379e912d50] = 0;
		*node[0x5d379e912db0] = ;;
		*node[0x5d379e912ea0] = =;
		*node[0x5d379e912de0] = 15;
		*node[0x5d379e912e70] = sqrt;
		*node[0x5d379e912e40] = 1;
		*node[0x5d379e912e10] = 14;
		*node[0x5d379e912ed0] = ;;
		*node[0x5d379e9130e0] = =;
		*node[0x5d379e912f00] = 12;
		*node[0x5d379e9130b0] = /;
		*node[0x5d379e912ff0] = -;
		*node[0x5d379e912f90] = -;
		*node[0x5d379e912f30] = 0;
		*node[0x5d379e912f60] = 2;
		*node[0x5d379e912fc0] = 15;
		*node[0x5d379e913080] = *;
		*node[0x5d379e913020] = 2;
		*node[0x5d379e913050] = 1;
		*node[0x5d379e913110] = ;;
		*node[0x5d379e913320] = =;
		*node[0x5d379e913140] = 13;
		*node[0x5d379e9132f0] = /;
		*node[0x5d379e913230] = +;
		*node[0x5d379e9131d0] = -;
		*node[0x5d379e913170] = 0;
		*node[0x5d379e9131a0] = 2;
		*node[0x5d379e913200] = 15;
		*node[0x5d379e9132c0] = *;
		*node[0x5d379e913260] = 2;
		*node[0x5d379e913290] = 1;
		*node[0x5d379e913350] = ;;
		*node[0x5d379e913380] = print;
		*node[0x5d379e9133b0] = 11;
		*node[0x5d379e9133e0] = ;;
		*node[0x5d379e913410] = print;
		*node[0x5d379e913440] = 12;
		*node[0x5d379e913470] = 13;
		*node[0x5d379e9134a0] = if;
		*node[0x5d379e9134d0] = op_no;
		*node[0x5d379e913560] = ==;
		*node[0x5d379e913500] = 14;
		*node[0x5d379e913530] = 0;
		*node[0x5d379e913590] = ;;
		*node[0x5d379e913740] = =;
		*node[0x5d379e9135c0] = 10;
		*node[0x5d379e913710] = /;
		*node[0x5d379e913650] = -;
		*node[0x5d379e9135f0] = 0;
		*node[0x5d379e913620] = 2;
		*node[0x5d379e9136e0] = *;
		*node[0x5d379e913680] = 2;
		*node[0x5d379e9136b0] = 1;
		*node[0x5d379e913770] = ;;
		*node[0x5d379e9137a0] = print;
		*node[0x5d379e9137d0] = 8;
		*node[0x5d379e913800] = ;;
		*node[0x5d379e913830] = print;
		*node[0x5d379e913860] = 10;
		*node[0x5d379e913890] = ;;
		*node[0x5d379e9138c0] = print;
		*node[0x5d379e9138f0] = 7;
		*node[0x5d379e913920] = ;;
		*node[0x5d379e913950] = return;
		*node[0x5d379e913980] = 0;
		*node[0x5d379e9139b0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd15946360] "tree" called from ./src/main.cpp(13) main
{
	is_init = 1
	{
		*node[0x64dda06a5f70] = ;;
		*node[0x64dda06a5fa0] = 0;
		*node[0x64dda06a5fd0] = ;;
		*node[0x64dda06a6000] = input;
		*node[0x64dda06a6030] = 1;
		*node[0x64dda06a6060] = 2;
		*node[0x64dda06a6090] = 3;
		*node[0x64dda06a60c0] = ;;
		*node[0x64dda06a6120] = 1;
		*node[0x64dda06a6150] = 2;
		*node[0x64dda06a6180] = 3;
		*node[0x64dda06a61b0] = ;;
		*node[0x64dda06a61e0] = 4;
		*node[0x64dda06a6210] = 1;
		*node[0x64dda06a6240] = 2;
		*node[0x64dda06a6270] = 3;
		*node[0x64dda06a62a0] = ;;
		*node[0x64dda06a62d0] = if;
		*node[0x64dda06a6300] = op_no;
		*node[0x64dda06a6330] = ==;
		*node[0x64dda06a6360] = 1;
		*node[0x64dda06a6390] = 0;
		*node[0x64dda06a63c0] = ;;
		*node[0x64dda06a6420] = 2;
		*node[0x64dda06a6450] = 3;
		*node[0x64dda06a6480] = ;;
		*node[0x64dda06a64e0] = 1;
		*node[0x64dda06a6510] = 2;
		*node[0x64dda06a6540] = 3;
		*node[0x64dda06a6570] = ;;
		*node[0x64dda06a65a0] = 5;
		*node[0x64dda06a65d0] = 1;
		*node[0x64dda06a6600] = 2;
		*node[0x64dda06a6630] = ;;
		*node[0x64dda06a6660] = =;
		*node[0x64dda06a6690] = 7;
		*node[0x64dda06a66c0] = -;
		*node[0x64dda06a66f0] = 0;
		*node[0x64dda06a6720] = 1;
		*node[0x64dda06a6750] = ;;
		*node[0x64dda06a6780] = =;
		*node[0x64dda06a67b0] = 8;
		*node[0x64dda06a67e0] = 1;
		*node[0x64dda06a6810] = ;;
		*node[0x64dda06a6840] = =;
		*node[0x64dda06a6870] = 9;
		*node[0x64dda06a68a0] = 1000;
		*node[0x64dda06a68d0] = ;;
		*node[0x64dda06a6900] = if;
		*node[0x64dda06a6930] = op_no;
		*node[0x64dda06a6960] = ==;
		*node[0x64dda06a6990] = 1;
		*node[0x64dda06a69c0] = 0;
		*node[0x64dda06a69f0] = ;;
		*node[0x64dda06a6a20] = if;
		*node[0x64dda06a6a50] = op_no;
		*node[0x64dda06a6a80] = ==;
		*node[0x64dda06a6ab0] = 2;
		*node[0x64dda06a6ae0] = 0;
		*node[0x64dda06a6b10] = ;;
		*node[0x64dda06a6b40] = print;
		*node[0x64dda06a6b70] = 9;
		*node[0x64dda06a6ba0] = ;;
		*node[0x64dda06a6bd0] = print;
		*node[0x64dda06a6c00] = 7;
		*node[0x64dda06a6c30] = ;;
		*node[0x64dda06a6c60] = =;
		*node[0x64dda06a6c90] = 10;
		*node[0x64dda06a6cc0] = /;
		*node[0x64dda06a6cf0] = -;
		*node[0x64dda06a6d20] = 0;
		*node[0x64dda06a6d50] = 2;
		*node[0x64dda06a6d80] = 1;
		*node[0x64dda06a6db0] = ;;
		*node[0x64dda06a6de0] = print;
		*node[0x64dda06a6e10] = 8;
		*node[0x64dda06a6e40] = ;;
		*node[0x64dda06a6e70] = print;
		*node[0x64dda06a6ea0] = 10;
		*node[0x64dda06a6ed0] = ;;
		*node[0x64dda06a6f00] = return;
		*node[0x64dda06a6f30] = 0;
		*node[0x64dda06a6f60] = ;;
		*node[0x64dda06a6f90] = 6;
		*node[0x64dda06a6fc0] = 1;
		*node[0x64dda06a6ff0] = 2;
		*node[0x64dda06a7020] = 3;
		*node[0x64dda06a7050] = ;;
		*node[0x64dda06a7080] = =;
		*node[0x64dda06a70b0] = 7;
		*node[0x64dda06a70e0] = -;
		*node[0x64dda06a7110] = 0;
		*node[0x64dda06a7140] = 1;
		*node[0x64dda06a7170] = ;;
		*node[0x64dda06a71a0] = =;
		*node[0x64dda06a71d0] = 8;
		*node[0x64dda06a7200] = 1;
		*node[0x64dda06a7230] = ;;
		*node[0x64dda06a7260] = =;
		*node[0x64dda06a7290] = 11;
		*node[0x64dda06a72c0] = 2;
		*node[0x64dda06a72f0] = ;;
		*node[0x64dda06a7320] = if;
		*node[0x64dda06a7350] = op_no;
		*node[0x64dda06a7380] = ==;
		*node[0x64dda06a73b0] = 3;
		*node[0x64dda06a73e0] = 0;
		*node[0x64dda06a7410] = ;;
		*node[0x64dda06a7440] = =;
		*node[0x64dda06a7470] = 12;
		*node[0x64dda06a74a0] = 0;
		*node[0x64dda06a74d0] = ;;
		*node[0x64dda06a7500] = =;
		*node[0x64dda06a7530] = 13;
		*node[0x64dda06a7560] = /;
		*node[0x64dda06a7590] = -;
		*node[0x64dda06a75c0] = 0;
		*node[0x64dda06a75f0] = 2;
		*node[0x64dda06a7620] = 1;
		*node[0x64dda06a7650] = ;;
		*node[0x64dda06a7680] = print;
		*node[0x64dda06a76b0] = 11;
		*node[0x64dda06a76e0] = ;;
		*node[0x64dda06a7710] = print;
		*node[0x64dda06a7740] = 12;
		*node[0x64dda06a7770] = 13;
		*node[0x64dda06a77a0] = ;;
		*node[0x64dda06a77d0] = =;
		*node[0x64dda06a7800] = 14;
		*node[0x64dda06a7830] = -;
		*node[0x64dda06a7860] = *;
		*node[0x64dda06a7890] = 2;
		*node[0x64dda06a78c0] = 2;
		*node[0x64dda06a78f0] = *;
		*node[0x64dda06a7920] = *;
		*node[0x64dda06a7950] = 4;
		*node[0x64dda06a7980] = 1;
		*node[0x64dda06a79b0] = 3;
		*node[0x64dda06a79e0] = ;;
		*node[0x64dda06a7a10] = if;
		*node[0x64dda06a7a40] = op_no;
		*node[0x64dda06a7a70] = >;
		*node[0x64dda06a7aa0] = 14;
		*node[0x64dda06a7ad0] = 0;
		*node[0x64dda06a7b00] = ;;
		*node[0x64dda06a7b30] = =;
		*node[0x64dda06a7b60] = 15;
		*node[0x64dda06a7b90] = sqrt;
		*node[0x64dda06a7bc0] = 1;
		*node[0x64dda06a7bf0] = 14;
		*node[0x64dda06a7c20] = ;;
		*node[0x64dda06a7c50] = =;
		*node[0x64dda06a7c80] = 12;
		*node[0x64dda06a7cb0] = /;
		*node[0x64dda06a7ce0] = -;
		*node[0x64dda06a7d10] = -;
		*node[0x64dda06a7d40] = 0;
		*node[0x64dda06a7d70] = 2;
		*node[0x64dda06a7da0] = 15;
		*node[0x64dda06a7dd0] = *;
		*node[0x64dda06a7e00] = 2;
		*node[0x64dda06a7e30] = 1;
		*node[0x64dda06a7e60] = ;;
		*node[0x64dda06a7e90] = =;
		*node[0x64dda06a7ec0] = 13;
		*node[0x64dda06a7ef0] = /;
		*node[0x64dda06a7f20] = +;
		*node[0x64dda06a7f50] = -;
		*node[0x64dda06a7f80] = 0;
		*node[0x64dda06a7fb0] = 2;
		*node[0x64dda06a7fe0] = 15;
		*node[0x64dda06a8010] = *;
		*node[0x64dda06a8040] = 2;
		*node[0x64dda06a8070] = 1;
		*node[0x64dda06a80a0] = ;;
		*node[0x64dda06a80d0] = print;
		*node[0x64dda06a8100] = 11;
		*node[0x64dda06a8130] = ;;
		*node[0x64dda06a8160] = print;
		*node[0x64dda06a8190] = 12;
		*node[0x64dda06a81c0] = 13;
		*node[0x64dda06a81f0] = if;
		*node[0x64dda06a8220] = op_no;
		*node[0x64dda06a8250] = ==;
		*node[0x64dda06a8280] = 14;
		*node[0x64dda06a82b0] = 0;
		*node[0x64dda06a82e0] = ;;
		*node[0x64dda06a8310] = =;
		*node[0x64dda06a8340] = 10;
		*node[0x64dda06a8370] = /;
		*node[0x64dda06a83a0] = -;
		*node[0x64dda06a83d0] = 0;
		*node[0x64dda06a8400] = 2;
		*node[0x64dda06a8430] = *;
		*node[0x64dda06a8460] = 2;
		*node[0x64dda06a8490] = 1;
		*node[0x64dda06a84c0] = ;;
		*node[0x64dda06a84f0] = print;
		*node[0x64dda06a8520] = 8;
		*node[0x64dda06a8550] = ;;
		*node[0x64dda06a8580] = print;
		*node[0x64dda06a85b0] = 10;
		*node[0x64dda06a85e0] = ;;
		*node[0x64dda06a8610] = print;
		*node[0x64dda06a8640] = 7;
		*node[0x64dda06a8670] = ;;
		*node[0x64dda06a86a0] = return;
		*node[0x64dda06a86d0] = 0;
		*node[0x64dda06a8700] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc03efafb0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5f2bee58bf70] = ;;
		*node[0x5f2bee58bfa0] = 0;
		*node[0x5f2bee58bfd0] = ;;
		*node[0x5f2bee58c000] = input;
		*node[0x5f2bee58c030] = 1;
		*node[0x5f2bee58c060] = 2;
		*node[0x5f2bee58c090] = 3;
		*node[0x5f2bee58c0c0] = ;;
		*node[0x5f2bee58c120] = 1;
		*node[0x5f2bee58c150] = 2;
		*node[0x5f2bee58c180] = 3;
		*node[0x5f2bee58c1b0] = ;;
		*node[0x5f2bee58c1e0] = 4;
		*node[0x5f2bee58c210] = 1;
		*node[0x5f2bee58c240] = 2;
		*node[0x5f2bee58c270] = 3;
		*node[0x5f2bee58c2a0] = ;;
		*node[0x5f2bee58c2d0] = if;
		*node[0x5f2bee58c300] = op_no;
		*node[0x5f2bee58c330] = ==;
		*node[0x5f2bee58c360] = 1;
		*node[0x5f2bee58c390] = 0;
		*node[0x5f2bee58c3c0] = ;;
		*node[0x5f2bee58c420] = 2;
		*node[0x5f2bee58c450] = 3;
		*node[0x5f2bee58c480] = ;;
		*node[0x5f2bee58c4e0] = 1;
		*node[0x5f2bee58c510] = 2;
		*node[0x5f2bee58c540] = 3;
		*node[0x5f2bee58c570] = ;;
		*node[0x5f2bee58c5a0] = 5;
		*node[0x5f2bee58c5d0] = 1;
		*node[0x5f2bee58c600] = 2;
		*node[0x5f2bee58c630] = ;;
		*node[0x5f2bee58c660] = =;
		*node[0x5f2bee58c690] = 7;
		*node[0x5f2bee58c6c0] = -;
		*node[0x5f2bee58c6f0] = 0;
		*node[0x5f2bee58c720] = 1;
		*node[0x5f2bee58c750] = ;;
		*node[0x5f2bee58c780] = =;
		*node[0x5f2bee58c7b0] = 8;
		*node[0x5f2bee58c7e0] = 1;
		*node[0x5f2bee58c810] = ;;
		*node[0x5f2bee58c840] = =;
		*node[0x5f2bee58c870] = 9;
		*node[0x5f2bee58c8a0] = 1000;
		*node[0x5f2bee58c8d0] = ;;
		*node[0x5f2bee58c900] = if;
		*node[0x5f2bee58c930] = op_no;
		*node[0x5f2bee58c960] = ==;
		*node[0x5f2bee58c990] = 1;
		*node[0x5f2bee58c9c0] = 0;
		*node[0x5f2bee58c9f0] = ;;
		*node[0x5f2bee58ca20] = if;
		*node[0x5f2bee58ca50] = op_no;
		*node[0x5f2bee58ca80] = ==;
		*node[0x5f2bee58cab0] = 2;
		*node[0x5f2bee58cae0] = 0;
		*node[0x5f2bee58cb10] = ;;
		*node[0x5f2bee58cb40] = print;
		*node[0x5f2bee58cb70] = 9;
		*node[0x5f2bee58cba0] = ;;
		*node[0x5f2bee58cbd0] = print;
		*node[0x5f2bee58cc00] = 7;
		*node[0x5f2bee58cc30] = ;;
		*node[0x5f2bee58cc60] = =;
		*node[0x5f2bee58cc90] = 10;
		*node[0x5f2bee58ccc0] = /;
		*node[0x5f2bee58ccf0] = -;
		*node[0x5f2bee58cd20] = 0;
		*node[0x5f2bee58cd50] = 2;
		*node[0x5f2bee58cd80] = 1;
		*node[0x5f2bee58cdb0] = ;;
		*node[0x5f2bee58cde0] = print;
		*node[0x5f2bee58ce10] = 8;
		*node[0x5f2bee58ce40] = ;;
		*node[0x5f2bee58ce70] = print;
		*node[0x5f2bee58cea0] = 10;
		*node[0x5f2bee58ced0] = ;;
		*node[0x5f2bee58cf00] = return;
		*node[0x5f2bee58cf30] = 0;
		*node[0x5f2bee58cf60] = ;;
		*node[0x5f2bee58cf90] = 6;
		*node[0x5f2bee58cfc0] = 1;
		*node[0x5f2bee58cff0] = 2;
		*node[0x5f2bee58d020] = 3;
		*node[0x5f2bee58d050] = ;;
		*node[0x5f2bee58d080] = =;
		*node[0x5f2bee58d0b0] = 7;
		*node[0x5f2bee58d0e0] = -;
		*node[0x5f2bee58d110] = 0;
		*node[0x5f2bee58d140] = 1;
		*node[0x5f2bee58d170] = ;;
		*node[0x5f2bee58d1a0] = =;
		*node[0x5f2bee58d1d0] = 8;
		*node[0x5f2bee58d200] = 1;
		*node[0x5f2bee58d230] = ;;
		*node[0x5f2bee58d260] = =;
		*node[0x5f2bee58d290] = 11;
		*node[0x5f2bee58d2c0] = 2;
		*node[0x5f2bee58d2f0] = ;;
		*node[0x5f2bee58d320] = if;
		*node[0x5f2bee58d350] = op_no;
		*node[0x5f2bee58d380] = ==;
		*node[0x5f2bee58d3b0] = 3;
		*node[0x5f2bee58d3e0] = 0;
		*node[0x5f2bee58d410] = ;;
		*node[0x5f2bee58d440] = =;
		*node[0x5f2bee58d470] = 12;
		*node[0x5f2bee58d4a0] = 0;
		*node[0x5f2bee58d4d0] = ;;
		*node[0x5f2bee58d500] = =;
		*node[0x5f2bee58d530] = 13;
		*node[0x5f2bee58d560] = /;
		*node[0x5f2bee58d590] = -;
		*node[0x5f2bee58d5c0] = 0;
		*node[0x5f2bee58d5f0] = 2;
		*node[0x5f2bee58d620] = 1;
		*node[0x5f2bee58d650] = ;;
		*node[0x5f2bee58d680] = print;
		*node[0x5f2bee58d6b0] = 11;
		*node[0x5f2bee58d6e0] = ;;
		*node[0x5f2bee58d710] = print;
		*node[0x5f2bee58d740] = 12;
		*node[0x5f2bee58d770] = 13;
		*node[0x5f2bee58d7a0] = ;;
		*node[0x5f2bee58d7d0] = =;
		*node[0x5f2bee58d800] = 14;
		*node[0x5f2bee58d830] = -;
		*node[0x5f2bee58d860] = *;
		*node[0x5f2bee58d890] = 2;
		*node[0x5f2bee58d8c0] = 2;
		*node[0x5f2bee58d8f0] = *;
		*node[0x5f2bee58d920] = *;
		*node[0x5f2bee58d950] = 4;
		*node[0x5f2bee58d980] = 1;
		*node[0x5f2bee58d9b0] = 3;
		*node[0x5f2bee58d9e0] = ;;
		*node[0x5f2bee58da10] = if;
		*node[0x5f2bee58da40] = op_no;
		*node[0x5f2bee58da70] = >;
		*node[0x5f2bee58daa0] = 14;
		*node[0x5f2bee58dad0] = 0;
		*node[0x5f2bee58db00] = ;;
		*node[0x5f2bee58db30] = =;
		*node[0x5f2bee58db60] = 15;
		*node[0x5f2bee58db90] = sqrt;
		*node[0x5f2bee58dbc0] = 1;
		*node[0x5f2bee58dbf0] = 14;
		*node[0x5f2bee58dc20] = ;;
		*node[0x5f2bee58dc50] = =;
		*node[0x5f2bee58dc80] = 12;
		*node[0x5f2bee58dcb0] = /;
		*node[0x5f2bee58dce0] = -;
		*node[0x5f2bee58dd10] = -;
		*node[0x5f2bee58dd40] = 0;
		*node[0x5f2bee58dd70] = 2;
		*node[0x5f2bee58dda0] = 15;
		*node[0x5f2bee58ddd0] = *;
		*node[0x5f2bee58de00] = 2;
		*node[0x5f2bee58de30] = 1;
		*node[0x5f2bee58de60] = ;;
		*node[0x5f2bee58de90] = =;
		*node[0x5f2bee58dec0] = 13;
		*node[0x5f2bee58def0] = /;
		*node[0x5f2bee58df20] = +;
		*node[0x5f2bee58df50] = -;
		*node[0x5f2bee58df80] = 0;
		*node[0x5f2bee58dfb0] = 2;
		*node[0x5f2bee58dfe0] = 15;
		*node[0x5f2bee58e010] = *;
		*node[0x5f2bee58e040] = 2;
		*node[0x5f2bee58e070] = 1;
		*node[0x5f2bee58e0a0] = ;;
		*node[0x5f2bee58e0d0] = print;
		*node[0x5f2bee58e100] = 11;
		*node[0x5f2bee58e130] = ;;
		*node[0x5f2bee58e160] = print;
		*node[0x5f2bee58e190] = 12;
		*node[0x5f2bee58e1c0] = 13;
		*node[0x5f2bee58e1f0] = if;
		*node[0x5f2bee58e220] = op_no;
		*node[0x5f2bee58e250] = ==;
		*node[0x5f2bee58e280] = 14;
		*node[0x5f2bee58e2b0] = 0;
		*node[0x5f2bee58e2e0] = ;;
		*node[0x5f2bee58e310] = =;
		*node[0x5f2bee58e340] = 10;
		*node[0x5f2bee58e370] = /;
		*node[0x5f2bee58e3a0] = -;
		*node[0x5f2bee58e3d0] = 0;
		*node[0x5f2bee58e400] = 2;
		*node[0x5f2bee58e430] = *;
		*node[0x5f2bee58e460] = 2;
		*node[0x5f2bee58e490] = 1;
		*node[0x5f2bee58e4c0] = ;;
		*node[0x5f2bee58e4f0] = print;
		*node[0x5f2bee58e520] = 8;
		*node[0x5f2bee58e550] = ;;
		*node[0x5f2bee58e580] = print;
		*node[0x5f2bee58e5b0] = 10;
		*node[0x5f2bee58e5e0] = ;;
		*node[0x5f2bee58e610] = print;
		*node[0x5f2bee58e640] = 7;
		*node[0x5f2bee58e670] = ;;
		*node[0x5f2bee58e6a0] = return;
		*node[0x5f2bee58e6d0] = 0;
		*node[0x5f2bee58e700] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc5a6308b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58441e850800] = ;;
		*node[0x58441e850830] = 0;
		*node[0x58441e850860] = ;;
		*node[0x58441e850890] = input;
		*node[0x58441e8508c0] = 1;
		*node[0x58441e8508f0] = 2;
		*node[0x58441e850920] = 3;
		*node[0x58441e850950] = ;;
		*node[0x58441e8509b0] = 1;
		*node[0x58441e8509e0] = 2;
		*node[0x58441e850a10] = 3;
		*node[0x58441e850a40] = ;;
		*node[0x58441e850a70] = 4;
		*node[0x58441e850aa0] = 1;
		*node[0x58441e850ad0] = 2;
		*node[0x58441e850b00] = 3;
		*node[0x58441e850b30] = ;;
		*node[0x58441e850b60] = if;
		*node[0x58441e850b90] = op_no;
		*node[0x58441e850bc0] = ==;
		*node[0x58441e850bf0] = 1;
		*node[0x58441e850c20] = 0;
		*node[0x58441e850c50] = ;;
		*node[0x58441e850cb0] = 2;
		*node[0x58441e850ce0] = 3;
		*node[0x58441e850d10] = ;;
		*node[0x58441e850d70] = 1;
		*node[0x58441e850da0] = 2;
		*node[0x58441e850dd0] = 3;
		*node[0x58441e850e00] = ;;
		*node[0x58441e850e30] = 5;
		*node[0x58441e850e60] = 1;
		*node[0x58441e850e90] = 2;
		*node[0x58441e850ec0] = ;;
		*node[0x58441e850ef0] = =;
		*node[0x58441e850f20] = 7;
		*node[0x58441e850f50] = -;
		*node[0x58441e850f80] = 0;
		*node[0x58441e850fb0] = 1;
		*node[0x58441e850fe0] = ;;
		*node[0x58441e851010] = =;
		*node[0x58441e851040] = 8;
		*node[0x58441e851070] = 1;
		*node[0x58441e8510a0] = ;;
		*node[0x58441e8510d0] = =;
		*node[0x58441e851100] = 9;
		*node[0x58441e851130] = 1000;
		*node[0x58441e851160] = ;;
		*node[0x58441e851190] = if;
		*node[0x58441e8511c0] = op_no;
		*node[0x58441e8511f0] = ==;
		*node[0x58441e851220] = 1;
		*node[0x58441e851250] = 0;
		*node[0x58441e851280] = ;;
		*node[0x58441e8512b0] = if;
		*node[0x58441e8512e0] = op_no;
		*node[0x58441e851310] = ==;
		*node[0x58441e851340] = 2;
		*node[0x58441e851370] = 0;
		*node[0x58441e8513a0] = ;;
		*node[0x58441e8513d0] = print;
		*node[0x58441e851400] = 9;
		*node[0x58441e851430] = ;;
		*node[0x58441e851460] = print;
		*node[0x58441e851490] = 7;
		*node[0x58441e8514c0] = ;;
		*node[0x58441e8514f0] = =;
		*node[0x58441e851520] = 10;
		*node[0x58441e851550] = /;
		*node[0x58441e851580] = -;
		*node[0x58441e8515b0] = 0;
		*node[0x58441e8515e0] = 2;
		*node[0x58441e851610] = 1;
		*node[0x58441e851640] = ;;
		*node[0x58441e851670] = print;
		*node[0x58441e8516a0] = 8;
		*node[0x58441e8516d0] = ;;
		*node[0x58441e851700] = print;
		*node[0x58441e851730] = 10;
		*node[0x58441e851760] = ;;
		*node[0x58441e851790] = return;
		*node[0x58441e8517c0] = 0;
		*node[0x58441e8517f0] = ;;
		*node[0x58441e851820] = 6;
		*node[0x58441e851850] = 1;
		*node[0x58441e851880] = 2;
		*node[0x58441e8518b0] = 3;
		*node[0x58441e8518e0] = ;;
		*node[0x58441e851910] = =;
		*node[0x58441e851940] = 7;
		*node[0x58441e851970] = -;
		*node[0x58441e8519a0] = 0;
		*node[0x58441e8519d0] = 1;
		*node[0x58441e851a00] = ;;
		*node[0x58441e851a30] = =;
		*node[0x58441e851a60] = 8;
		*node[0x58441e851a90] = 1;
		*node[0x58441e851ac0] = ;;
		*node[0x58441e851af0] = =;
		*node[0x58441e851b20] = 11;
		*node[0x58441e851b50] = 2;
		*node[0x58441e851b80] = ;;
		*node[0x58441e851bb0] = if;
		*node[0x58441e851be0] = op_no;
		*node[0x58441e851c10] = ==;
		*node[0x58441e851c40] = 3;
		*node[0x58441e851c70] = 0;
		*node[0x58441e851ca0] = ;;
		*node[0x58441e851cd0] = =;
		*node[0x58441e851d00] = 12;
		*node[0x58441e851d30] = 0;
		*node[0x58441e851d60] = ;;
		*node[0x58441e851d90] = =;
		*node[0x58441e851dc0] = 13;
		*node[0x58441e851df0] = /;
		*node[0x58441e851e20] = -;
		*node[0x58441e851e50] = 0;
		*node[0x58441e851e80] = 2;
		*node[0x58441e851eb0] = 1;
		*node[0x58441e851ee0] = ;;
		*node[0x58441e851f10] = print;
		*node[0x58441e851f40] = 11;
		*node[0x58441e851f70] = ;;
		*node[0x58441e851fa0] = print;
		*node[0x58441e851fd0] = 12;
		*node[0x58441e852000] = 13;
		*node[0x58441e852030] = ;;
		*node[0x58441e852060] = =;
		*node[0x58441e852090] = 14;
		*node[0x58441e8520c0] = -;
		*node[0x58441e8520f0] = *;
		*node[0x58441e852120] = 2;
		*node[0x58441e852150] = 2;
		*node[0x58441e852180] = *;
		*node[0x58441e8521b0] = *;
		*node[0x58441e8521e0] = 4;
		*node[0x58441e852210] = 1;
		*node[0x58441e852240] = 3;
		*node[0x58441e852270] = ;;
		*node[0x58441e8522a0] = if;
		*node[0x58441e8522d0] = op_no;
		*node[0x58441e852300] = >;
		*node[0x58441e852330] = 14;
		*node[0x58441e852360] = 0;
		*node[0x58441e852390] = ;;
		*node[0x58441e8523c0] = =;
		*node[0x58441e8523f0] = 15;
		*node[0x58441e852420] = sqrt;
		*node[0x58441e852450] = 1;
		*node[0x58441e852480] = 14;
		*node[0x58441e8524b0] = ;;
		*node[0x58441e8524e0] = =;
		*node[0x58441e852510] = 12;
		*node[0x58441e852540] = /;
		*node[0x58441e852570] = -;
		*node[0x58441e8525a0] = -;
		*node[0x58441e8525d0] = 0;
		*node[0x58441e852600] = 2;
		*node[0x58441e852630] = 15;
		*node[0x58441e852660] = *;
		*node[0x58441e852690] = 2;
		*node[0x58441e8526c0] = 1;
		*node[0x58441e8526f0] = ;;
		*node[0x58441e852720] = =;
		*node[0x58441e852750] = 13;
		*node[0x58441e852780] = /;
		*node[0x58441e8527b0] = +;
		*node[0x58441e8527e0] = -;
		*node[0x58441e852810] = 0;
		*node[0x58441e852840] = 2;
		*node[0x58441e852870] = 15;
		*node[0x58441e8528a0] = *;
		*node[0x58441e8528d0] = 2;
		*node[0x58441e852900] = 1;
		*node[0x58441e852930] = ;;
		*node[0x58441e852960] = print;
		*node[0x58441e852990] = 11;
		*node[0x58441e8529c0] = ;;
		*node[0x58441e8529f0] = print;
		*node[0x58441e852a20] = 12;
		*node[0x58441e852a50] = 13;
		*node[0x58441e852a80] = if;
		*node[0x58441e852ab0] = op_no;
		*node[0x58441e852ae0] = ==;
		*node[0x58441e852b10] = 14;
		*node[0x58441e852b40] = 0;
		*node[0x58441e852b70] = ;;
		*node[0x58441e852ba0] = =;
		*node[0x58441e852bd0] = 10;
		*node[0x58441e852c00] = /;
		*node[0x58441e852c30] = -;
		*node[0x58441e852c60] = 0;
		*node[0x58441e852c90] = 2;
		*node[0x58441e852cc0] = *;
		*node[0x58441e852cf0] = 2;
		*node[0x58441e852d20] = 1;
		*node[0x58441e852d50] = ;;
		*node[0x58441e852d80] = print;
		*node[0x58441e852db0] = 8;
		*node[0x58441e852de0] = ;;
		*node[0x58441e852e10] = print;
		*node[0x58441e852e40] = 10;
		*node[0x58441e852e70] = ;;
		*node[0x58441e852ea0] = print;
		*node[0x58441e852ed0] = 7;
		*node[0x58441e852f00] = ;;
		*node[0x58441e852f30] = return;
		*node[0x58441e852f60] = 0;
		*node[0x58441e852f90] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcdfd108c0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5c888236f090] = ;;
		*node[0x5c888236f0c0] = 0;
		*node[0x5c888236f0f0] = ;;
		*node[0x5c888236f120] = input;
		*node[0x5c888236f150] = 1;
		*node[0x5c888236f180] = 2;
		*node[0x5c888236f1b0] = 3;
		*node[0x5c888236f1e0] = ;;
		*node[0x5c888236f240] = 1;
		*node[0x5c888236f270] = 2;
		*node[0x5c888236f2a0] = 3;
		*node[0x5c888236f2d0] = ;;
		*node[0x5c888236f300] = 4;
		*node[0x5c888236f330] = 1;
		*node[0x5c888236f360] = 2;
		*node[0x5c888236f390] = 3;
		*node[0x5c888236f3c0] = ;;
		*node[0x5c888236f3f0] = if;
		*node[0x5c888236f420] = op_no;
		*node[0x5c888236f450] = ==;
		*node[0x5c888236f480] = 1;
		*node[0x5c888236f4b0] = 0;
		*node[0x5c888236f4e0] = ;;
		*node[0x5c888236f540] = 2;
		*node[0x5c888236f570] = 3;
		*node[0x5c888236f5a0] = ;;
		*node[0x5c888236f600] = 1;
		*node[0x5c888236f630] = 2;
		*node[0x5c888236f660] = 3;
		*node[0x5c888236f690] = ;;
		*node[0x5c888236f6c0] = 5;
		*node[0x5c888236f6f0] = 1;
		*node[0x5c888236f720] = 2;
		*node[0x5c888236f750] = ;;
		*node[0x5c888236f780] = =;
		*node[0x5c888236f7b0] = 7;
		*node[0x5c888236f7e0] = -;
		*node[0x5c888236f810] = 0;
		*node[0x5c888236f840] = 1;
		*node[0x5c888236f870] = ;;
		*node[0x5c888236f8a0] = =;
		*node[0x5c888236f8d0] = 8;
		*node[0x5c888236f900] = 1;
		*node[0x5c888236f930] = ;;
		*node[0x5c888236f960] = =;
		*node[0x5c888236f990] = 9;
		*node[0x5c888236f9c0] = 1000;
		*node[0x5c888236f9f0] = ;;
		*node[0x5c888236fa20] = if;
		*node[0x5c888236fa50] = op_no;
		*node[0x5c888236fa80] = ==;
		*node[0x5c888236fab0] = 1;
		*node[0x5c888236fae0] = 0;
		*node[0x5c888236fb10] = ;;
		*node[0x5c888236fb40] = if;
		*node[0x5c888236fb70] = op_no;
		*node[0x5c888236fba0] = ==;
		*node[0x5c888236fbd0] = 2;
		*node[0x5c888236fc00] = 0;
		*node[0x5c888236fc30] = ;;
		*node[0x5c888236fc60] = print;
		*node[0x5c888236fc90] = 9;
		*node[0x5c888236fcc0] = ;;
		*node[0x5c888236fcf0] = print;
		*node[0x5c888236fd20] = 7;
		*node[0x5c888236fd50] = ;;
		*node[0x5c888236fd80] = =;
		*node[0x5c888236fdb0] = 10;
		*node[0x5c888236fde0] = /;
		*node[0x5c888236fe10] = -;
		*node[0x5c888236fe40] = 0;
		*node[0x5c888236fe70] = 2;
		*node[0x5c888236fea0] = 1;
		*node[0x5c888236fed0] = ;;
		*node[0x5c888236ff00] = print;
		*node[0x5c888236ff30] = 8;
		*node[0x5c888236ff60] = ;;
		*node[0x5c888236ff90] = print;
		*node[0x5c888236ffc0] = 10;
		*node[0x5c888236fff0] = ;;
		*node[0x5c8882370020] = return;
		*node[0x5c8882370050] = 0;
		*node[0x5c8882370080] = ;;
		*node[0x5c88823700b0] = 6;
		*node[0x5c88823700e0] = 1;
		*node[0x5c8882370110] = 2;
		*node[0x5c8882370140] = 3;
		*node[0x5c8882370170] = ;;
		*node[0x5c88823701a0] = =;
		*node[0x5c88823701d0] = 7;
		*node[0x5c8882370200] = -;
		*node[0x5c8882370230] = 0;
		*node[0x5c8882370260] = 1;
		*node[0x5c8882370290] = ;;
		*node[0x5c88823702c0] = =;
		*node[0x5c88823702f0] = 8;
		*node[0x5c8882370320] = 1;
		*node[0x5c8882370350] = ;;
		*node[0x5c8882370380] = =;
		*node[0x5c88823703b0] = 11;
		*node[0x5c88823703e0] = 2;
		*node[0x5c8882370410] = ;;
		*node[0x5c8882370440] = if;
		*node[0x5c8882370470] = op_no;
		*node[0x5c88823704a0] = ==;
		*node[0x5c88823704d0] = 3;
		*node[0x5c8882370500] = 0;
		*node[0x5c8882370530] = ;;
		*node[0x5c8882370560] = =;
		*node[0x5c8882370590] = 12;
		*node[0x5c88823705c0] = 0;
		*node[0x5c88823705f0] = ;;
		*node[0x5c8882370620] = =;
		*node[0x5c8882370650] = 13;
		*node[0x5c8882370680] = /;
		*node[0x5c88823706b0] = -;
		*node[0x5c88823706e0] = 0;
		*node[0x5c8882370710] = 2;
		*node[0x5c8882370740] = 1;
		*node[0x5c8882370770] = ;;
		*node[0x5c88823707a0] = print;
		*node[0x5c88823707d0] = 11;
		*node[0x5c8882370800] = ;;
		*node[0x5c8882370830] = print;
		*node[0x5c8882370860] = 12;
		*node[0x5c8882370890] = 13;
		*node[0x5c88823708c0] = ;;
		*node[0x5c88823708f0] = =;
		*node[0x5c8882370920] = 14;
		*node[0x5c8882370950] = -;
		*node[0x5c8882370980] = *;
		*node[0x5c88823709b0] = 2;
		*node[0x5c88823709e0] = 2;
		*node[0x5c8882370a10] = *;
		*node[0x5c8882370a40] = *;
		*node[0x5c8882370a70] = 4;
		*node[0x5c8882370aa0] = 1;
		*node[0x5c8882370ad0] = 3;
		*node[0x5c8882370b00] = ;;
		*node[0x5c8882370b30] = if;
		*node[0x5c8882370b60] = op_no;
		*node[0x5c8882370b90] = >;
		*node[0x5c8882370bc0] = 14;
		*node[0x5c8882370bf0] = 0;
		*node[0x5c8882370c20] = ;;
		*node[0x5c8882370c50] = =;
		*node[0x5c8882370c80] = 15;
		*node[0x5c8882370cb0] = sqrt;
		*node[0x5c8882370ce0] = 1;
		*node[0x5c8882370d10] = 14;
		*node[0x5c8882370d40] = ;;
		*node[0x5c8882370d70] = =;
		*node[0x5c8882370da0] = 12;
		*node[0x5c8882370dd0] = /;
		*node[0x5c8882370e00] = -;
		*node[0x5c8882370e30] = -;
		*node[0x5c8882370e60] = 0;
		*node[0x5c8882370e90] = 2;
		*node[0x5c8882370ec0] = 15;
		*node[0x5c8882370ef0] = *;
		*node[0x5c8882370f20] = 2;
		*node[0x5c8882370f50] = 1;
		*node[0x5c8882370f80] = ;;
		*node[0x5c8882370fb0] = =;
		*node[0x5c8882370fe0] = 13;
		*node[0x5c8882371010] = /;
		*node[0x5c8882371040] = +;
		*node[0x5c8882371070] = -;
		*node[0x5c88823710a0] = 0;
		*node[0x5c88823710d0] = 2;
		*node[0x5c8882371100] = 15;
		*node[0x5c8882371130] = *;
		*node[0x5c8882371160] = 2;
		*node[0x5c8882371190] = 1;
		*node[0x5c88823711c0] = ;;
		*node[0x5c88823711f0] = print;
		*node[0x5c8882371220] = 11;
		*node[0x5c8882371250] = ;;
		*node[0x5c8882371280] = print;
		*node[0x5c88823712b0] = 12;
		*node[0x5c88823712e0] = 13;
		*node[0x5c8882371310] = if;
		*node[0x5c8882371340] = op_no;
		*node[0x5c8882371370] = ==;
		*node[0x5c88823713a0] = 14;
		*node[0x5c88823713d0] = 0;
		*node[0x5c8882371400] = ;;
		*node[0x5c8882371430] = =;
		*node[0x5c8882371460] = 10;
		*node[0x5c8882371490] = /;
		*node[0x5c88823714c0] = -;
		*node[0x5c88823714f0] = 0;
		*node[0x5c8882371520] = 2;
		*node[0x5c8882371550] = *;
		*node[0x5c8882371580] = 2;
		*node[0x5c88823715b0] = 1;
		*node[0x5c88823715e0] = ;;
		*node[0x5c8882371610] = print;
		*node[0x5c8882371640] = 8;
		*node[0x5c8882371670] = ;;
		*node[0x5c88823716a0] = print;
		*node[0x5c88823716d0] = 10;
		*node[0x5c8882371700] = ;;
		*node[0x5c8882371730] = print;
		*node[0x5c8882371760] = 7;
		*node[0x5c8882371790] = ;;
		*node[0x5c88823717c0] = return;
		*node[0x5c88823717f0] = 0;
		*node[0x5c8882371820] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffee6b776d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x6419942cb930] = ;;
		*node[0x6419942cb960] = 0;
		*node[0x6419942cb990] = ;;
		*node[0x6419942cb9c0] = input;
		*node[0x6419942cb9f0] = 1;
		*node[0x6419942cba20] = 2;
		*node[0x6419942cba50] = 3;
		*node[0x6419942cba80] = ;;
		*node[0x6419942cbae0] = 1;
		*node[0x6419942cbb10] = 2;
		*node[0x6419942cbb40] = 3;
		*node[0x6419942cbb70] = ;;
		*node[0x6419942cbba0] = 4;
		*node[0x6419942cbbd0] = 1;
		*node[0x6419942cbc00] = 2;
		*node[0x6419942cbc30] = 3;
		*node[0x6419942cbc60] = ;;
		*node[0x6419942cbc90] = if;
		*node[0x6419942cbcc0] = op_no;
		*node[0x6419942cbcf0] = ==;
		*node[0x6419942cbd20] = 1;
		*node[0x6419942cbd50] = 0;
		*node[0x6419942cbd80] = ;;
		*node[0x6419942cbde0] = 2;
		*node[0x6419942cbe10] = 3;
		*node[0x6419942cbe40] = ;;
		*node[0x6419942cbea0] = 1;
		*node[0x6419942cbed0] = 2;
		*node[0x6419942cbf00] = 3;
		*node[0x6419942cbf30] = ;;
		*node[0x6419942cbf60] = 5;
		*node[0x6419942cbf90] = 1;
		*node[0x6419942cbfc0] = 2;
		*node[0x6419942cbff0] = ;;
		*node[0x6419942cc020] = =;
		*node[0x6419942cc050] = 7;
		*node[0x6419942cc080] = -;
		*node[0x6419942cc0b0] = 0;
		*node[0x6419942cc0e0] = 1;
		*node[0x6419942cc110] = ;;
		*node[0x6419942cc140] = =;
		*node[0x6419942cc170] = 8;
		*node[0x6419942cc1a0] = 1;
		*node[0x6419942cc1d0] = ;;
		*node[0x6419942cc200] = =;
		*node[0x6419942cc230] = 9;
		*node[0x6419942cc260] = 1000;
		*node[0x6419942cc290] = ;;
		*node[0x6419942cc2c0] = if;
		*node[0x6419942cc2f0] = op_no;
		*node[0x6419942cc320] = ==;
		*node[0x6419942cc350] = 1;
		*node[0x6419942cc380] = 0;
		*node[0x6419942cc3b0] = ;;
		*node[0x6419942cc3e0] = if;
		*node[0x6419942cc410] = op_no;
		*node[0x6419942cc440] = ==;
		*node[0x6419942cc470] = 2;
		*node[0x6419942cc4a0] = 0;
		*node[0x6419942cc4d0] = ;;
		*node[0x6419942cc500] = print;
		*node[0x6419942cc530] = 9;
		*node[0x6419942cc560] = ;;
		*node[0x6419942cc590] = print;
		*node[0x6419942cc5c0] = 7;
		*node[0x6419942cc5f0] = ;;
		*node[0x6419942cc620] = =;
		*node[0x6419942cc650] = 10;
		*node[0x6419942cc680] = /;
		*node[0x6419942cc6b0] = -;
		*node[0x6419942cc6e0] = 0;
		*node[0x6419942cc710] = 2;
		*node[0x6419942cc740] = 1;
		*node[0x6419942cc770] = ;;
		*node[0x6419942cc7a0] = print;
		*node[0x6419942cc7d0] = 8;
		*node[0x6419942cc800] = ;;
		*node[0x6419942cc830] = print;
		*node[0x6419942cc860] = 10;
		*node[0x6419942cc890] = ;;
		*node[0x6419942cc8c0] = return;
		*node[0x6419942cc8f0] = 0;
		*node[0x6419942cc920] = ;;
		*node[0x6419942cc950] = 6;
		*node[0x6419942cc980] = 1;
		*node[0x6419942cc9b0] = 2;
		*node[0x6419942cc9e0] = 3;
		*node[0x6419942cca10] = ;;
		*node[0x6419942cca40] = =;
		*node[0x6419942cca70] = 7;
		*node[0x6419942ccaa0] = -;
		*node[0x6419942ccad0] = 0;
		*node[0x6419942ccb00] = 1;
		*node[0x6419942ccb30] = ;;
		*node[0x6419942ccb60] = =;
		*node[0x6419942ccb90] = 8;
		*node[0x6419942ccbc0] = 1;
		*node[0x6419942ccbf0] = ;;
		*node[0x6419942ccc20] = =;
		*node[0x6419942ccc50] = 11;
		*node[0x6419942ccc80] = 2;
		*node[0x6419942cccb0] = ;;
		*node[0x6419942ccce0] = if;
		*node[0x6419942ccd10] = op_no;
		*node[0x6419942ccd40] = ==;
		*node[0x6419942ccd70] = 3;
		*node[0x6419942ccda0] = 0;
		*node[0x6419942ccdd0] = ;;
		*node[0x6419942cce00] = =;
		*node[0x6419942cce30] = 12;
		*node[0x6419942cce60] = 0;
		*node[0x6419942cce90] = ;;
		*node[0x6419942ccec0] = =;
		*node[0x6419942ccef0] = 13;
		*node[0x6419942ccf20] = /;
		*node[0x6419942ccf50] = -;
		*node[0x6419942ccf80] = 0;
		*node[0x6419942ccfb0] = 2;
		*node[0x6419942ccfe0] = 1;
		*node[0x6419942cd010] = ;;
		*node[0x6419942cd040] = print;
		*node[0x6419942cd070] = 11;
		*node[0x6419942cd0a0] = ;;
		*node[0x6419942cd0d0] = print;
		*node[0x6419942cd100] = 12;
		*node[0x6419942cd130] = 13;
		*node[0x6419942cd160] = ;;
		*node[0x6419942cd190] = =;
		*node[0x6419942cd1c0] = 14;
		*node[0x6419942cd1f0] = -;
		*node[0x6419942cd220] = *;
		*node[0x6419942cd250] = 2;
		*node[0x6419942cd280] = 2;
		*node[0x6419942cd2b0] = *;
		*node[0x6419942cd2e0] = *;
		*node[0x6419942cd310] = 4;
		*node[0x6419942cd340] = 1;
		*node[0x6419942cd370] = 3;
		*node[0x6419942cd3a0] = ;;
		*node[0x6419942cd3d0] = if;
		*node[0x6419942cd400] = op_no;
		*node[0x6419942cd430] = >;
		*node[0x6419942cd460] = 14;
		*node[0x6419942cd490] = 0;
		*node[0x6419942cd4c0] = ;;
		*node[0x6419942cd4f0] = =;
		*node[0x6419942cd520] = 15;
		*node[0x6419942cd550] = sqrt;
		*node[0x6419942cd580] = 1;
		*node[0x6419942cd5b0] = 14;
		*node[0x6419942cd5e0] = ;;
		*node[0x6419942cd610] = =;
		*node[0x6419942cd640] = 12;
		*node[0x6419942cd670] = /;
		*node[0x6419942cd6a0] = -;
		*node[0x6419942cd6d0] = -;
		*node[0x6419942cd700] = 0;
		*node[0x6419942cd730] = 2;
		*node[0x6419942cd760] = 15;
		*node[0x6419942cd790] = *;
		*node[0x6419942cd7c0] = 2;
		*node[0x6419942cd7f0] = 1;
		*node[0x6419942cd820] = ;;
		*node[0x6419942cd850] = =;
		*node[0x6419942cd880] = 13;
		*node[0x6419942cd8b0] = /;
		*node[0x6419942cd8e0] = +;
		*node[0x6419942cd910] = -;
		*node[0x6419942cd940] = 0;
		*node[0x6419942cd970] = 2;
		*node[0x6419942cd9a0] = 15;
		*node[0x6419942cd9d0] = *;
		*node[0x6419942cda00] = 2;
		*node[0x6419942cda30] = 1;
		*node[0x6419942cda60] = ;;
		*node[0x6419942cda90] = print;
		*node[0x6419942cdac0] = 11;
		*node[0x6419942cdaf0] = ;;
		*node[0x6419942cdb20] = print;
		*node[0x6419942cdb50] = 12;
		*node[0x6419942cdb80] = 13;
		*node[0x6419942cdbb0] = if;
		*node[0x6419942cdbe0] = op_no;
		*node[0x6419942cdc10] = ==;
		*node[0x6419942cdc40] = 14;
		*node[0x6419942cdc70] = 0;
		*node[0x6419942cdca0] = ;;
		*node[0x6419942cdcd0] = =;
		*node[0x6419942cdd00] = 10;
		*node[0x6419942cdd30] = /;
		*node[0x6419942cdd60] = -;
		*node[0x6419942cdd90] = 0;
		*node[0x6419942cddc0] = 2;
		*node[0x6419942cddf0] = *;
		*node[0x6419942cde20] = 2;
		*node[0x6419942cde50] = 1;
		*node[0x6419942cde80] = ;;
		*node[0x6419942cdeb0] = print;
		*node[0x6419942cdee0] = 8;
		*node[0x6419942cdf10] = ;;
		*node[0x6419942cdf40] = print;
		*node[0x6419942cdf70] = 10;
		*node[0x6419942cdfa0] = ;;
		*node[0x6419942cdfd0] = print;
		*node[0x6419942ce000] = 7;
		*node[0x6419942ce030] = ;;
		*node[0x6419942ce060] = return;
		*node[0x6419942ce090] = 0;
		*node[0x6419942ce0c0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffff7239740] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x59f286ab41c0] = ;;
		*node[0x59f286ab41f0] = 0;
		*node[0x59f286ab4220] = ;;
		*node[0x59f286ab4250] = input;
		*node[0x59f286ab4280] = 1;
		*node[0x59f286ab42b0] = 2;
		*node[0x59f286ab42e0] = 3;
		*node[0x59f286ab4310] = ;;
		*node[0x59f286ab4370] = 1;
		*node[0x59f286ab43a0] = 2;
		*node[0x59f286ab43d0] = 3;
		*node[0x59f286ab4400] = ;;
		*node[0x59f286ab4430] = 4;
		*node[0x59f286ab4460] = 1;
		*node[0x59f286ab4490] = 2;
		*node[0x59f286ab44c0] = 3;
		*node[0x59f286ab44f0] = ;;
		*node[0x59f286ab4520] = if;
		*node[0x59f286ab4550] = op_no;
		*node[0x59f286ab4580] = ==;
		*node[0x59f286ab45b0] = 1;
		*node[0x59f286ab45e0] = 0;
		*node[0x59f286ab4610] = ;;
		*node[0x59f286ab4670] = 2;
		*node[0x59f286ab46a0] = 3;
		*node[0x59f286ab46d0] = ;;
		*node[0x59f286ab4730] = 1;
		*node[0x59f286ab4760] = 2;
		*node[0x59f286ab4790] = 3;
		*node[0x59f286ab47c0] = ;;
		*node[0x59f286ab47f0] = 5;
		*node[0x59f286ab4820] = 1;
		*node[0x59f286ab4850] = 2;
		*node[0x59f286ab4880] = ;;
		*node[0x59f286ab48b0] = =;
		*node[0x59f286ab48e0] = 7;
		*node[0x59f286ab4910] = -;
		*node[0x59f286ab4940] = 0;
		*node[0x59f286ab4970] = 1;
		*node[0x59f286ab49a0] = ;;
		*node[0x59f286ab49d0] = =;
		*node[0x59f286ab4a00] = 8;
		*node[0x59f286ab4a30] = 1;
		*node[0x59f286ab4a60] = ;;
		*node[0x59f286ab4a90] = =;
		*node[0x59f286ab4ac0] = 9;
		*node[0x59f286ab4af0] = 1000;
		*node[0x59f286ab4b20] = ;;
		*node[0x59f286ab4b50] = if;
		*node[0x59f286ab4b80] = op_no;
		*node[0x59f286ab4bb0] = ==;
		*node[0x59f286ab4be0] = 1;
		*node[0x59f286ab4c10] = 0;
		*node[0x59f286ab4c40] = ;;
		*node[0x59f286ab4c70] = if;
		*node[0x59f286ab4ca0] = op_no;
		*node[0x59f286ab4cd0] = ==;
		*node[0x59f286ab4d00] = 2;
		*node[0x59f286ab4d30] = 0;
		*node[0x59f286ab4d60] = ;;
		*node[0x59f286ab4d90] = print;
		*node[0x59f286ab4dc0] = 9;
		*node[0x59f286ab4df0] = ;;
		*node[0x59f286ab4e20] = print;
		*node[0x59f286ab4e50] = 7;
		*node[0x59f286ab4e80] = ;;
		*node[0x59f286ab4eb0] = =;
		*node[0x59f286ab4ee0] = 10;
		*node[0x59f286ab4f10] = /;
		*node[0x59f286ab4f40] = -;
		*node[0x59f286ab4f70] = 0;
		*node[0x59f286ab4fa0] = 2;
		*node[0x59f286ab4fd0] = 1;
		*node[0x59f286ab5000] = ;;
		*node[0x59f286ab5030] = print;
		*node[0x59f286ab5060] = 8;
		*node[0x59f286ab5090] = ;;
		*node[0x59f286ab50c0] = print;
		*node[0x59f286ab50f0] = 10;
		*node[0x59f286ab5120] = ;;
		*node[0x59f286ab5150] = return;
		*node[0x59f286ab5180] = 0;
		*node[0x59f286ab51b0] = ;;
		*node[0x59f286ab51e0] = 6;
		*node[0x59f286ab5210] = 1;
		*node[0x59f286ab5240] = 2;
		*node[0x59f286ab5270] = 3;
		*node[0x59f286ab52a0] = ;;
		*node[0x59f286ab52d0] = =;
		*node[0x59f286ab5300] = 7;
		*node[0x59f286ab5330] = -;
		*node[0x59f286ab5360] = 0;
		*node[0x59f286ab5390] = 1;
		*node[0x59f286ab53c0] = ;;
		*node[0x59f286ab53f0] = =;
		*node[0x59f286ab5420] = 8;
		*node[0x59f286ab5450] = 1;
		*node[0x59f286ab5480] = ;;
		*node[0x59f286ab54b0] = =;
		*node[0x59f286ab54e0] = 11;
		*node[0x59f286ab5510] = 2;
		*node[0x59f286ab5540] = ;;
		*node[0x59f286ab5570] = if;
		*node[0x59f286ab55a0] = op_no;
		*node[0x59f286ab55d0] = ==;
		*node[0x59f286ab5600] = 3;
		*node[0x59f286ab5630] = 0;
		*node[0x59f286ab5660] = ;;
		*node[0x59f286ab5690] = =;
		*node[0x59f286ab56c0] = 12;
		*node[0x59f286ab56f0] = 0;
		*node[0x59f286ab5720] = ;;
		*node[0x59f286ab5750] = =;
		*node[0x59f286ab5780] = 13;
		*node[0x59f286ab57b0] = /;
		*node[0x59f286ab57e0] = -;
		*node[0x59f286ab5810] = 0;
		*node[0x59f286ab5840] = 2;
		*node[0x59f286ab5870] = 1;
		*node[0x59f286ab58a0] = ;;
		*node[0x59f286ab58d0] = print;
		*node[0x59f286ab5900] = 11;
		*node[0x59f286ab5930] = ;;
		*node[0x59f286ab5960] = print;
		*node[0x59f286ab5990] = 12;
		*node[0x59f286ab59c0] = 13;
		*node[0x59f286ab59f0] = ;;
		*node[0x59f286ab5a20] = =;
		*node[0x59f286ab5a50] = 14;
		*node[0x59f286ab5a80] = -;
		*node[0x59f286ab5ab0] = *;
		*node[0x59f286ab5ae0] = 2;
		*node[0x59f286ab5b10] = 2;
		*node[0x59f286ab5b40] = *;
		*node[0x59f286ab5b70] = *;
		*node[0x59f286ab5ba0] = 4;
		*node[0x59f286ab5bd0] = 1;
		*node[0x59f286ab5c00] = 3;
		*node[0x59f286ab5c30] = ;;
		*node[0x59f286ab5c60] = if;
		*node[0x59f286ab5c90] = op_no;
		*node[0x59f286ab5cc0] = >;
		*node[0x59f286ab5cf0] = 14;
		*node[0x59f286ab5d20] = 0;
		*node[0x59f286ab5d50] = ;;
		*node[0x59f286ab5d80] = =;
		*node[0x59f286ab5db0] = 15;
		*node[0x59f286ab5de0] = sqrt;
		*node[0x59f286ab5e10] = 1;
		*node[0x59f286ab5e40] = 14;
		*node[0x59f286ab5e70] = ;;
		*node[0x59f286ab5ea0] = =;
		*node[0x59f286ab5ed0] = 12;
		*node[0x59f286ab5f00] = /;
		*node[0x59f286ab5f30] = -;
		*node[0x59f286ab5f60] = -;
		*node[0x59f286ab5f90] = 0;
		*node[0x59f286ab5fc0] = 2;
		*node[0x59f286ab5ff0] = 15;
		*node[0x59f286ab6020] = *;
		*node[0x59f286ab6050] = 2;
		*node[0x59f286ab6080] = 1;
		*node[0x59f286ab60b0] = ;;
		*node[0x59f286ab60e0] = =;
		*node[0x59f286ab6110] = 13;
		*node[0x59f286ab6140] = /;
		*node[0x59f286ab6170] = +;
		*node[0x59f286ab61a0] = -;
		*node[0x59f286ab61d0] = 0;
		*node[0x59f286ab6200] = 2;
		*node[0x59f286ab6230] = 15;
		*node[0x59f286ab6260] = *;
		*node[0x59f286ab6290] = 2;
		*node[0x59f286ab62c0] = 1;
		*node[0x59f286ab62f0] = ;;
		*node[0x59f286ab6320] = print;
		*node[0x59f286ab6350] = 11;
		*node[0x59f286ab6380] = ;;
		*node[0x59f286ab63b0] = print;
		*node[0x59f286ab63e0] = 12;
		*node[0x59f286ab6410] = 13;
		*node[0x59f286ab6440] = if;
		*node[0x59f286ab6470] = op_no;
		*node[0x59f286ab64a0] = ==;
		*node[0x59f286ab64d0] = 14;
		*node[0x59f286ab6500] = 0;
		*node[0x59f286ab6530] = ;;
		*node[0x59f286ab6560] = =;
		*node[0x59f286ab6590] = 10;
		*node[0x59f286ab65c0] = /;
		*node[0x59f286ab65f0] = -;
		*node[0x59f286ab6620] = 0;
		*node[0x59f286ab6650] = 2;
		*node[0x59f286ab6680] = *;
		*node[0x59f286ab66b0] = 2;
		*node[0x59f286ab66e0] = 1;
		*node[0x59f286ab6710] = ;;
		*node[0x59f286ab6740] = print;
		*node[0x59f286ab6770] = 8;
		*node[0x59f286ab67a0] = ;;
		*node[0x59f286ab67d0] = print;
		*node[0x59f286ab6800] = 10;
		*node[0x59f286ab6830] = ;;
		*node[0x59f286ab6860] = print;
		*node[0x59f286ab6890] = 7;
		*node[0x59f286ab68c0] = ;;
		*node[0x59f286ab68f0] = return;
		*node[0x59f286ab6920] = 0;
		*node[0x59f286ab6950] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff4688a360] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x56ba55235a50] = ;;
		*node[0x56ba55235a80] = 0;
		*node[0x56ba55235ab0] = ;;
		*node[0x56ba55235ae0] = input;
		*node[0x56ba55235b10] = 1;
		*node[0x56ba55235b40] = 2;
		*node[0x56ba55235b70] = 3;
		*node[0x56ba55235ba0] = ;;
		*node[0x56ba55235c00] = 1;
		*node[0x56ba55235c30] = 2;
		*node[0x56ba55235c60] = 3;
		*node[0x56ba55235c90] = ;;
		*node[0x56ba55235cc0] = 4;
		*node[0x56ba55235cf0] = 1;
		*node[0x56ba55235d20] = 2;
		*node[0x56ba55235d50] = 3;
		*node[0x56ba55235d80] = ;;
		*node[0x56ba55235db0] = if;
		*node[0x56ba55235de0] = op_no;
		*node[0x56ba55235e10] = ==;
		*node[0x56ba55235e40] = 1;
		*node[0x56ba55235e70] = 0;
		*node[0x56ba55235ea0] = ;;
		*node[0x56ba55235f00] = 2;
		*node[0x56ba55235f30] = 3;
		*node[0x56ba55235f60] = ;;
		*node[0x56ba55235fc0] = 1;
		*node[0x56ba55235ff0] = 2;
		*node[0x56ba55236020] = 3;
		*node[0x56ba55236050] = ;;
		*node[0x56ba55236080] = 5;
		*node[0x56ba552360b0] = 1;
		*node[0x56ba552360e0] = 2;
		*node[0x56ba55236110] = ;;
		*node[0x56ba55236140] = =;
		*node[0x56ba55236170] = 7;
		*node[0x56ba552361a0] = -;
		*node[0x56ba552361d0] = 0;
		*node[0x56ba55236200] = 1;
		*node[0x56ba55236230] = ;;
		*node[0x56ba55236260] = =;
		*node[0x56ba55236290] = 8;
		*node[0x56ba552362c0] = 1;
		*node[0x56ba552362f0] = ;;
		*node[0x56ba55236320] = =;
		*node[0x56ba55236350] = 9;
		*node[0x56ba55236380] = 1000;
		*node[0x56ba552363b0] = ;;
		*node[0x56ba552363e0] = if;
		*node[0x56ba55236410] = op_no;
		*node[0x56ba55236440] = ==;
		*node[0x56ba55236470] = 1;
		*node[0x56ba552364a0] = 0;
		*node[0x56ba552364d0] = ;;
		*node[0x56ba55236500] = if;
		*node[0x56ba55236530] = op_no;
		*node[0x56ba55236560] = ==;
		*node[0x56ba55236590] = 2;
		*node[0x56ba552365c0] = 0;
		*node[0x56ba552365f0] = ;;
		*node[0x56ba55236620] = print;
		*node[0x56ba55236650] = 9;
		*node[0x56ba55236680] = ;;
		*node[0x56ba552366b0] = print;
		*node[0x56ba552366e0] = 7;
		*node[0x56ba55236710] = ;;
		*node[0x56ba55236740] = =;
		*node[0x56ba55236770] = 10;
		*node[0x56ba552367a0] = /;
		*node[0x56ba552367d0] = -;
		*node[0x56ba55236800] = 0;
		*node[0x56ba55236830] = 2;
		*node[0x56ba55236860] = 1;
		*node[0x56ba55236890] = ;;
		*node[0x56ba552368c0] = print;
		*node[0x56ba552368f0] = 8;
		*node[0x56ba55236920] = ;;
		*node[0x56ba55236950] = print;
		*node[0x56ba55236980] = 10;
		*node[0x56ba552369b0] = ;;
		*node[0x56ba552369e0] = return;
		*node[0x56ba55236a10] = 0;
		*node[0x56ba55236a40] = ;;
		*node[0x56ba55236a70] = 6;
		*node[0x56ba55236aa0] = 1;
		*node[0x56ba55236ad0] = 2;
		*node[0x56ba55236b00] = 3;
		*node[0x56ba55236b30] = ;;
		*node[0x56ba55236b60] = =;
		*node[0x56ba55236b90] = 7;
		*node[0x56ba55236bc0] = -;
		*node[0x56ba55236bf0] = 0;
		*node[0x56ba55236c20] = 1;
		*node[0x56ba55236c50] = ;;
		*node[0x56ba55236c80] = =;
		*node[0x56ba55236cb0] = 8;
		*node[0x56ba55236ce0] = 1;
		*node[0x56ba55236d10] = ;;
		*node[0x56ba55236d40] = =;
		*node[0x56ba55236d70] = 11;
		*node[0x56ba55236da0] = 2;
		*node[0x56ba55236dd0] = ;;
		*node[0x56ba55236e00] = if;
		*node[0x56ba55236e30] = op_no;
		*node[0x56ba55236e60] = ==;
		*node[0x56ba55236e90] = 3;
		*node[0x56ba55236ec0] = 0;
		*node[0x56ba55236ef0] = ;;
		*node[0x56ba55236f20] = =;
		*node[0x56ba55236f50] = 12;
		*node[0x56ba55236f80] = 0;
		*node[0x56ba55236fb0] = ;;
		*node[0x56ba55236fe0] = =;
		*node[0x56ba55237010] = 13;
		*node[0x56ba55237040] = /;
		*node[0x56ba55237070] = -;
		*node[0x56ba552370a0] = 0;
		*node[0x56ba552370d0] = 2;
		*node[0x56ba55237100] = 1;
		*node[0x56ba55237130] = ;;
		*node[0x56ba55237160] = print;
		*node[0x56ba55237190] = 11;
		*node[0x56ba552371c0] = ;;
		*node[0x56ba552371f0] = print;
		*node[0x56ba55237220] = 12;
		*node[0x56ba55237250] = 13;
		*node[0x56ba55237280] = ;;
		*node[0x56ba552372b0] = =;
		*node[0x56ba552372e0] = 14;
		*node[0x56ba55237310] = -;
		*node[0x56ba55237340] = *;
		*node[0x56ba55237370] = 2;
		*node[0x56ba552373a0] = 2;
		*node[0x56ba552373d0] = *;
		*node[0x56ba55237400] = *;
		*node[0x56ba55237430] = 4;
		*node[0x56ba55237460] = 1;
		*node[0x56ba55237490] = 3;
		*node[0x56ba552374c0] = ;;
		*node[0x56ba552374f0] = if;
		*node[0x56ba55237520] = op_no;
		*node[0x56ba55237550] = >;
		*node[0x56ba55237580] = 14;
		*node[0x56ba552375b0] = 0;
		*node[0x56ba552375e0] = ;;
		*node[0x56ba55237610] = =;
		*node[0x56ba55237640] = 15;
		*node[0x56ba55237670] = sqrt;
		*node[0x56ba552376a0] = 1;
		*node[0x56ba552376d0] = 14;
		*node[0x56ba55237700] = ;;
		*node[0x56ba55237730] = =;
		*node[0x56ba55237760] = 12;
		*node[0x56ba55237790] = /;
		*node[0x56ba552377c0] = -;
		*node[0x56ba552377f0] = -;
		*node[0x56ba55237820] = 0;
		*node[0x56ba55237850] = 2;
		*node[0x56ba55237880] = 15;
		*node[0x56ba552378b0] = *;
		*node[0x56ba552378e0] = 2;
		*node[0x56ba55237910] = 1;
		*node[0x56ba55237940] = ;;
		*node[0x56ba55237970] = =;
		*node[0x56ba552379a0] = 13;
		*node[0x56ba552379d0] = /;
		*node[0x56ba55237a00] = +;
		*node[0x56ba55237a30] = -;
		*node[0x56ba55237a60] = 0;
		*node[0x56ba55237a90] = 2;
		*node[0x56ba55237ac0] = 15;
		*node[0x56ba55237af0] = *;
		*node[0x56ba55237b20] = 2;
		*node[0x56ba55237b50] = 1;
		*node[0x56ba55237b80] = ;;
		*node[0x56ba55237bb0] = print;
		*node[0x56ba55237be0] = 11;
		*node[0x56ba55237c10] = ;;
		*node[0x56ba55237c40] = print;
		*node[0x56ba55237c70] = 12;
		*node[0x56ba55237ca0] = 13;
		*node[0x56ba55237cd0] = if;
		*node[0x56ba55237d00] = op_no;
		*node[0x56ba55237d30] = ==;
		*node[0x56ba55237d60] = 14;
		*node[0x56ba55237d90] = 0;
		*node[0x56ba55237dc0] = ;;
		*node[0x56ba55237df0] = =;
		*node[0x56ba55237e20] = 10;
		*node[0x56ba55237e50] = /;
		*node[0x56ba55237e80] = -;
		*node[0x56ba55237eb0] = 0;
		*node[0x56ba55237ee0] = 2;
		*node[0x56ba55237f10] = *;
		*node[0x56ba55237f40] = 2;
		*node[0x56ba55237f70] = 1;
		*node[0x56ba55237fa0] = ;;
		*node[0x56ba55237fd0] = print;
		*node[0x56ba55238000] = 8;
		*node[0x56ba55238030] = ;;
		*node[0x56ba55238060] = print;
		*node[0x56ba55238090] = 10;
		*node[0x56ba552380c0] = ;;
		*node[0x56ba552380f0] = print;
		*node[0x56ba55238120] = 7;
		*node[0x56ba55238150] = ;;
		*node[0x56ba55238180] = return;
		*node[0x56ba552381b0] = 0;
		*node[0x56ba552381e0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff231c20a0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58d7598312e0] = ;;
		*node[0x58d759831310] = 0;
		*node[0x58d759831340] = ;;
		*node[0x58d759831370] = input;
		*node[0x58d7598313a0] = 1;
		*node[0x58d7598313d0] = 2;
		*node[0x58d759831400] = 3;
		*node[0x58d759831430] = ;;
		*node[0x58d759831490] = 1;
		*node[0x58d7598314c0] = 2;
		*node[0x58d7598314f0] = 3;
		*node[0x58d759831520] = ;;
		*node[0x58d759831550] = 4;
		*node[0x58d759831580] = 1;
		*node[0x58d7598315b0] = 2;
		*node[0x58d7598315e0] = 3;
		*node[0x58d759831610] = ;;
		*node[0x58d759831640] = if;
		*node[0x58d759831670] = op_no;
		*node[0x58d7598316a0] = ==;
		*node[0x58d7598316d0] = 1;
		*node[0x58d759831700] = 0;
		*node[0x58d759831730] = ;;
		*node[0x58d759831790] = 2;
		*node[0x58d7598317c0] = 3;
		*node[0x58d7598317f0] = ;;
		*node[0x58d759831850] = 1;
		*node[0x58d759831880] = 2;
		*node[0x58d7598318b0] = 3;
		*node[0x58d7598318e0] = ;;
		*node[0x58d759831910] = 5;
		*node[0x58d759831940] = 1;
		*node[0x58d759831970] = 2;
		*node[0x58d7598319a0] = ;;
		*node[0x58d7598319d0] = =;
		*node[0x58d759831a00] = 7;
		*node[0x58d759831a30] = -;
		*node[0x58d759831a60] = 0;
		*node[0x58d759831a90] = 1;
		*node[0x58d759831ac0] = ;;
		*node[0x58d759831af0] = =;
		*node[0x58d759831b20] = 8;
		*node[0x58d759831b50] = 1;
		*node[0x58d759831b80] = ;;
		*node[0x58d759831bb0] = =;
		*node[0x58d759831be0] = 9;
		*node[0x58d759831c10] = 1000;
		*node[0x58d759831c40] = ;;
		*node[0x58d759831c70] = if;
		*node[0x58d759831ca0] = op_no;
		*node[0x58d759831cd0] = ==;
		*node[0x58d759831d00] = 1;
		*node[0x58d759831d30] = 0;
		*node[0x58d759831d60] = ;;
		*node[0x58d759831d90] = if;
		*node[0x58d759831dc0] = op_no;
		*node[0x58d759831df0] = ==;
		*node[0x58d759831e20] = 2;
		*node[0x58d759831e50] = 0;
		*node[0x58d759831e80] = ;;
		*node[0x58d759831eb0] = print;
		*node[0x58d759831ee0] = 9;
		*node[0x58d759831f10] = ;;
		*node[0x58d759831f40] = print;
		*node[0x58d759831f70] = 7;
		*node[0x58d759831fa0] = ;;
		*node[0x58d759831fd0] = =;
		*node[0x58d759832000] = 10;
		*node[0x58d759832030] = /;
		*node[0x58d759832060] = -;
		*node[0x58d759832090] = 0;
		*node[0x58d7598320c0] = 2;
		*node[0x58d7598320f0] = 1;
		*node[0x58d759832120] = ;;
		*node[0x58d759832150] = print;
		*node[0x58d759832180] = 8;
		*node[0x58d7598321b0] = ;;
		*node[0x58d7598321e0] = print;
		*node[0x58d759832210] = 10;
		*node[0x58d759832240] = ;;
		*node[0x58d759832270] = return;
		*node[0x58d7598322a0] = 0;
		*node[0x58d7598322d0] = ;;
		*node[0x58d759832300] = 6;
		*node[0x58d759832330] = 1;
		*node[0x58d759832360] = 2;
		*node[0x58d759832390] = 3;
		*node[0x58d7598323c0] = ;;
		*node[0x58d7598323f0] = =;
		*node[0x58d759832420] = 7;
		*node[0x58d759832450] = -;
		*node[0x58d759832480] = 0;
		*node[0x58d7598324b0] = 1;
		*node[0x58d7598324e0] = ;;
		*node[0x58d759832510] = =;
		*node[0x58d759832540] = 8;
		*node[0x58d759832570] = 1;
		*node[0x58d7598325a0] = ;;
		*node[0x58d7598325d0] = =;
		*node[0x58d759832600] = 11;
		*node[0x58d759832630] = 2;
		*node[0x58d759832660] = ;;
		*node[0x58d759832690] = if;
		*node[0x58d7598326c0] = op_no;
		*node[0x58d7598326f0] = ==;
		*node[0x58d759832720] = 3;
		*node[0x58d759832750] = 0;
		*node[0x58d759832780] = ;;
		*node[0x58d7598327b0] = =;
		*node[0x58d7598327e0] = 12;
		*node[0x58d759832810] = 0;
		*node[0x58d759832840] = ;;
		*node[0x58d759832870] = =;
		*node[0x58d7598328a0] = 13;
		*node[0x58d7598328d0] = /;
		*node[0x58d759832900] = -;
		*node[0x58d759832930] = 0;
		*node[0x58d759832960] = 2;
		*node[0x58d759832990] = 1;
		*node[0x58d7598329c0] = ;;
		*node[0x58d7598329f0] = print;
		*node[0x58d759832a20] = 11;
		*node[0x58d759832a50] = ;;
		*node[0x58d759832a80] = print;
		*node[0x58d759832ab0] = 12;
		*node[0x58d759832ae0] = 13;
		*node[0x58d759832b10] = ;;
		*node[0x58d759832b40] = =;
		*node[0x58d759832b70] = 14;
		*node[0x58d759832ba0] = -;
		*node[0x58d759832bd0] = *;
		*node[0x58d759832c00] = 2;
		*node[0x58d759832c30] = 2;
		*node[0x58d759832c60] = *;
		*node[0x58d759832c90] = *;
		*node[0x58d759832cc0] = 4;
		*node[0x58d759832cf0] = 1;
		*node[0x58d759832d20] = 3;
		*node[0x58d759832d50] = ;;
		*node[0x58d759832d80] = if;
		*node[0x58d759832db0] = op_no;
		*node[0x58d759832de0] = >;
		*node[0x58d759832e10] = 14;
		*node[0x58d759832e40] = 0;
		*node[0x58d759832e70] = ;;
		*node[0x58d759832ea0] = =;
		*node[0x58d759832ed0] = 15;
		*node[0x58d759832f00] = sqrt;
		*node[0x58d759832f30] = 1;
		*node[0x58d759832f60] = 14;
		*node[0x58d759832f90] = ;;
		*node[0x58d759832fc0] = =;
		*node[0x58d759832ff0] = 12;
		*node[0x58d759833020] = /;
		*node[0x58d759833050] = -;
		*node[0x58d759833080] = -;
		*node[0x58d7598330b0] = 0;
		*node[0x58d7598330e0] = 2;
		*node[0x58d759833110] = 15;
		*node[0x58d759833140] = *;
		*node[0x58d759833170] = 2;
		*node[0x58d7598331a0] = 1;
		*node[0x58d7598331d0] = ;;
		*node[0x58d759833200] = =;
		*node[0x58d759833230] = 13;
		*node[0x58d759833260] = /;
		*node[0x58d759833290] = +;
		*node[0x58d7598332c0] = -;
		*node[0x58d7598332f0] = 0;
		*node[0x58d759833320] = 2;
		*node[0x58d759833350] = 15;
		*node[0x58d759833380] = *;
		*node[0x58d7598333b0] = 2;
		*node[0x58d7598333e0] = 1;
		*node[0x58d759833410] = ;;
		*node[0x58d759833440] = print;
		*node[0x58d759833470] = 11;
		*node[0x58d7598334a0] = ;;
		*node[0x58d7598334d0] = print;
		*node[0x58d759833500] = 12;
		*node[0x58d759833530] = 13;
		*node[0x58d759833560] = if;
		*node[0x58d759833590] = op_no;
		*node[0x58d7598335c0] = ==;
		*node[0x58d7598335f0] = 14;
		*node[0x58d759833620] = 0;
		*node[0x58d759833650] = ;;
		*node[0x58d759833680] = =;
		*node[0x58d7598336b0] = 10;
		*node[0x58d7598336e0] = /;
		*node[0x58d759833710] = -;
		*node[0x58d759833740] = 0;
		*node[0x58d759833770] = 2;
		*node[0x58d7598337a0] = *;
		*node[0x58d7598337d0] = 2;
		*node[0x58d759833800] = 1;
		*node[0x58d759833830] = ;;
		*node[0x58d759833860] = print;
		*node[0x58d759833890] = 8;
		*node[0x58d7598338c0] = ;;
		*node[0x58d7598338f0] = print;
		*node[0x58d759833920] = 10;
		*node[0x58d759833950] = ;;
		*node[0x58d759833980] = print;
		*node[0x58d7598339b0] = 7;
		*node[0x58d7598339e0] = ;;
		*node[0x58d759833a10] = return;
		*node[0x58d759833a40] = 0;
		*node[0x58d759833a70] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffff0ade9b0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x597825604b70] = ;;
		*node[0x597825604ba0] = 0;
		*node[0x597825604bd0] = ;;
		*node[0x597825604c00] = input;
		*node[0x597825604c30] = 1;
		*node[0x597825604c60] = 2;
		*node[0x597825604c90] = 3;
		*node[0x597825604cc0] = ;;
		*node[0x597825604d20] = 1;
		*node[0x597825604d50] = 2;
		*node[0x597825604d80] = 3;
		*node[0x597825604db0] = ;;
		*node[0x597825604de0] = 4;
		*node[0x597825604e10] = 1;
		*node[0x597825604e40] = 2;
		*node[0x597825604e70] = 3;
		*node[0x597825604ea0] = ;;
		*node[0x597825604ed0] = if;
		*node[0x597825604f00] = op_no;
		*node[0x597825604f30] = ==;
		*node[0x597825604f60] = 1;
		*node[0x597825604f90] = 0;
		*node[0x597825604fc0] = ;;
		*node[0x597825605020] = 2;
		*node[0x597825605050] = 3;
		*node[0x597825605080] = ;;
		*node[0x5978256050e0] = 1;
		*node[0x597825605110] = 2;
		*node[0x597825605140] = 3;
		*node[0x597825605170] = ;;
		*node[0x5978256051a0] = 5;
		*node[0x5978256051d0] = 1;
		*node[0x597825605200] = 2;
		*node[0x597825605230] = ;;
		*node[0x597825605260] = =;
		*node[0x597825605290] = 7;
		*node[0x5978256052c0] = -;
		*node[0x5978256052f0] = 0;
		*node[0x597825605320] = 1;
		*node[0x597825605350] = ;;
		*node[0x597825605380] = =;
		*node[0x5978256053b0] = 8;
		*node[0x5978256053e0] = 1;
		*node[0x597825605410] = ;;
		*node[0x597825605440] = =;
		*node[0x597825605470] = 9;
		*node[0x5978256054a0] = 1000;
		*node[0x5978256054d0] = ;;
		*node[0x597825605500] = if;
		*node[0x597825605530] = op_no;
		*node[0x597825605560] = ==;
		*node[0x597825605590] = 1;
		*node[0x5978256055c0] = 0;
		*node[0x5978256055f0] = ;;
		*node[0x597825605620] = if;
		*node[0x597825605650] = op_no;
		*node[0x597825605680] = ==;
		*node[0x5978256056b0] = 2;
		*node[0x5978256056e0] = 0;
		*node[0x597825605710] = ;;
		*node[0x597825605740] = print;
		*node[0x597825605770] = 9;
		*node[0x5978256057a0] = ;;
		*node[0x5978256057d0] = print;
		*node[0x597825605800] = 7;
		*node[0x597825605830] = ;;
		*node[0x597825605860] = =;
		*node[0x597825605890] = 10;
		*node[0x5978256058c0] = /;
		*node[0x5978256058f0] = -;
		*node[0x597825605920] = 0;
		*node[0x597825605950] = 2;
		*node[0x597825605980] = 1;
		*node[0x5978256059b0] = ;;
		*node[0x5978256059e0] = print;
		*node[0x597825605a10] = 8;
		*node[0x597825605a40] = ;;
		*node[0x597825605a70] = print;
		*node[0x597825605aa0] = 10;
		*node[0x597825605ad0] = ;;
		*node[0x597825605b00] = return;
		*node[0x597825605b30] = 0;
		*node[0x597825605b60] = ;;
		*node[0x597825605b90] = 6;
		*node[0x597825605bc0] = 1;
		*node[0x597825605bf0] = 2;
		*node[0x597825605c20] = 3;
		*node[0x597825605c50] = ;;
		*node[0x597825605c80] = =;
		*node[0x597825605cb0] = 7;
		*node[0x597825605ce0] = -;
		*node[0x597825605d10] = 0;
		*node[0x597825605d40] = 1;
		*node[0x597825605d70] = ;;
		*node[0x597825605da0] = =;
		*node[0x597825605dd0] = 8;
		*node[0x597825605e00] = 1;
		*node[0x597825605e30] = ;;
		*node[0x597825605e60] = =;
		*node[0x597825605e90] = 11;
		*node[0x597825605ec0] = 2;
		*node[0x597825605ef0] = ;;
		*node[0x597825605f20] = if;
		*node[0x597825605f50] = op_no;
		*node[0x597825605f80] = ==;
		*node[0x597825605fb0] = 3;
		*node[0x597825605fe0] = 0;
		*node[0x597825606010] = ;;
		*node[0x597825606040] = =;
		*node[0x597825606070] = 12;
		*node[0x5978256060a0] = 0;
		*node[0x5978256060d0] = ;;
		*node[0x597825606100] = =;
		*node[0x597825606130] = 13;
		*node[0x597825606160] = /;
		*node[0x597825606190] = -;
		*node[0x5978256061c0] = 0;
		*node[0x5978256061f0] = 2;
		*node[0x597825606220] = 1;
		*node[0x597825606250] = ;;
		*node[0x597825606280] = print;
		*node[0x5978256062b0] = 11;
		*node[0x5978256062e0] = ;;
		*node[0x597825606310] = print;
		*node[0x597825606340] = 12;
		*node[0x597825606370] = 13;
		*node[0x5978256063a0] = ;;
		*node[0x5978256063d0] = =;
		*node[0x597825606400] = 14;
		*node[0x597825606430] = -;
		*node[0x597825606460] = *;
		*node[0x597825606490] = 2;
		*node[0x5978256064c0] = 2;
		*node[0x5978256064f0] = *;
		*node[0x597825606520] = *;
		*node[0x597825606550] = 4;
		*node[0x597825606580] = 1;
		*node[0x5978256065b0] = 3;
		*node[0x5978256065e0] = ;;
		*node[0x597825606610] = if;
		*node[0x597825606640] = op_no;
		*node[0x597825606670] = >;
		*node[0x5978256066a0] = 14;
		*node[0x5978256066d0] = 0;
		*node[0x597825606700] = ;;
		*node[0x597825606730] = =;
		*node[0x597825606760] = 15;
		*node[0x597825606790] = sqrt;
		*node[0x5978256067c0] = 1;
		*node[0x5978256067f0] = 14;
		*node[0x597825606820] = ;;
		*node[0x597825606850] = =;
		*node[0x597825606880] = 12;
		*node[0x5978256068b0] = /;
		*node[0x5978256068e0] = -;
		*node[0x597825606910] = -;
		*node[0x597825606940] = 0;
		*node[0x597825606970] = 2;
		*node[0x5978256069a0] = 15;
		*node[0x5978256069d0] = *;
		*node[0x597825606a00] = 2;
		*node[0x597825606a30] = 1;
		*node[0x597825606a60] = ;;
		*node[0x597825606a90] = =;
		*node[0x597825606ac0] = 13;
		*node[0x597825606af0] = /;
		*node[0x597825606b20] = +;
		*node[0x597825606b50] = -;
		*node[0x597825606b80] = 0;
		*node[0x597825606bb0] = 2;
		*node[0x597825606be0] = 15;
		*node[0x597825606c10] = *;
		*node[0x597825606c40] = 2;
		*node[0x597825606c70] = 1;
		*node[0x597825606ca0] = ;;
		*node[0x597825606cd0] = print;
		*node[0x597825606d00] = 11;
		*node[0x597825606d30] = ;;
		*node[0x597825606d60] = print;
		*node[0x597825606d90] = 12;
		*node[0x597825606dc0] = 13;
		*node[0x597825606df0] = if;
		*node[0x597825606e20] = op_no;
		*node[0x597825606e50] = ==;
		*node[0x597825606e80] = 14;
		*node[0x597825606eb0] = 0;
		*node[0x597825606ee0] = ;;
		*node[0x597825606f10] = =;
		*node[0x597825606f40] = 10;
		*node[0x597825606f70] = /;
		*node[0x597825606fa0] = -;
		*node[0x597825606fd0] = 0;
		*node[0x597825607000] = 2;
		*node[0x597825607030] = *;
		*node[0x597825607060] = 2;
		*node[0x597825607090] = 1;
		*node[0x5978256070c0] = ;;
		*node[0x5978256070f0] = print;
		*node[0x597825607120] = 8;
		*node[0x597825607150] = ;;
		*node[0x597825607180] = print;
		*node[0x5978256071b0] = 10;
		*node[0x5978256071e0] = ;;
		*node[0x597825607210] = print;
		*node[0x597825607240] = 7;
		*node[0x597825607270] = ;;
		*node[0x5978256072a0] = return;
		*node[0x5978256072d0] = 0;
		*node[0x597825607300] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffa4d6c1f0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5a687c682400] = ;;
		*node[0x5a687c682430] = 0;
		*node[0x5a687c682460] = ;;
		*node[0x5a687c682490] = input;
		*node[0x5a687c6824c0] = 1;
		*node[0x5a687c6824f0] = 2;
		*node[0x5a687c682520] = 3;
		*node[0x5a687c682550] = ;;
		*node[0x5a687c6825b0] = 1;
		*node[0x5a687c6825e0] = 2;
		*node[0x5a687c682610] = 3;
		*node[0x5a687c682640] = ;;
		*node[0x5a687c682670] = 4;
		*node[0x5a687c6826a0] = 1;
		*node[0x5a687c6826d0] = 2;
		*node[0x5a687c682700] = 3;
		*node[0x5a687c682730] = ;;
		*node[0x5a687c682760] = if;
		*node[0x5a687c682790] = op_no;
		*node[0x5a687c6827c0] = ==;
		*node[0x5a687c6827f0] = 1;
		*node[0x5a687c682820] = 0;
		*node[0x5a687c682850] = ;;
		*node[0x5a687c6828b0] = 2;
		*node[0x5a687c6828e0] = 3;
		*node[0x5a687c682910] = ;;
		*node[0x5a687c682970] = 1;
		*node[0x5a687c6829a0] = 2;
		*node[0x5a687c6829d0] = 3;
		*node[0x5a687c682a00] = ;;
		*node[0x5a687c682a30] = 5;
		*node[0x5a687c682a60] = 1;
		*node[0x5a687c682a90] = 2;
		*node[0x5a687c682ac0] = ;;
		*node[0x5a687c682af0] = =;
		*node[0x5a687c682b20] = 7;
		*node[0x5a687c682b50] = -;
		*node[0x5a687c682b80] = 0;
		*node[0x5a687c682bb0] = 1;
		*node[0x5a687c682be0] = ;;
		*node[0x5a687c682c10] = =;
		*node[0x5a687c682c40] = 8;
		*node[0x5a687c682c70] = 1;
		*node[0x5a687c682ca0] = ;;
		*node[0x5a687c682cd0] = =;
		*node[0x5a687c682d00] = 9;
		*node[0x5a687c682d30] = 1000;
		*node[0x5a687c682d60] = ;;
		*node[0x5a687c682d90] = if;
		*node[0x5a687c682dc0] = op_no;
		*node[0x5a687c682df0] = ==;
		*node[0x5a687c682e20] = 1;
		*node[0x5a687c682e50] = 0;
		*node[0x5a687c682e80] = ;;
		*node[0x5a687c682eb0] = if;
		*node[0x5a687c682ee0] = op_no;
		*node[0x5a687c682f10] = ==;
		*node[0x5a687c682f40] = 2;
		*node[0x5a687c682f70] = 0;
		*node[0x5a687c682fa0] = ;;
		*node[0x5a687c682fd0] = print;
		*node[0x5a687c683000] = 9;
		*node[0x5a687c683030] = ;;
		*node[0x5a687c683060] = print;
		*node[0x5a687c683090] = 7;
		*node[0x5a687c6830c0] = ;;
		*node[0x5a687c6830f0] = =;
		*node[0x5a687c683120] = 10;
		*node[0x5a687c683150] = /;
		*node[0x5a687c683180] = -;
		*node[0x5a687c6831b0] = 0;
		*node[0x5a687c6831e0] = 2;
		*node[0x5a687c683210] = 1;
		*node[0x5a687c683240] = ;;
		*node[0x5a687c683270] = print;
		*node[0x5a687c6832a0] = 8;
		*node[0x5a687c6832d0] = ;;
		*node[0x5a687c683300] = print;
		*node[0x5a687c683330] = 10;
		*node[0x5a687c683360] = ;;
		*node[0x5a687c683390] = return;
		*node[0x5a687c6833c0] = 0;
		*node[0x5a687c6833f0] = ;;
		*node[0x5a687c683420] = 6;
		*node[0x5a687c683450] = 1;
		*node[0x5a687c683480] = 2;
		*node[0x5a687c6834b0] = 3;
		*node[0x5a687c6834e0] = ;;
		*node[0x5a687c683510] = =;
		*node[0x5a687c683540] = 7;
		*node[0x5a687c683570] = -;
		*node[0x5a687c6835a0] = 0;
		*node[0x5a687c6835d0] = 1;
		*node[0x5a687c683600] = ;;
		*node[0x5a687c683630] = =;
		*node[0x5a687c683660] = 8;
		*node[0x5a687c683690] = 1;
		*node[0x5a687c6836c0] = ;;
		*node[0x5a687c6836f0] = =;
		*node[0x5a687c683720] = 11;
		*node[0x5a687c683750] = 2;
		*node[0x5a687c683780] = ;;
		*node[0x5a687c6837b0] = if;
		*node[0x5a687c6837e0] = op_no;
		*node[0x5a687c683810] = ==;
		*node[0x5a687c683840] = 3;
		*node[0x5a687c683870] = 0;
		*node[0x5a687c6838a0] = ;;
		*node[0x5a687c6838d0] = =;
		*node[0x5a687c683900] = 12;
		*node[0x5a687c683930] = 0;
		*node[0x5a687c683960] = ;;
		*node[0x5a687c683990] = =;
		*node[0x5a687c6839c0] = 13;
		*node[0x5a687c6839f0] = /;
		*node[0x5a687c683a20] = -;
		*node[0x5a687c683a50] = 0;
		*node[0x5a687c683a80] = 2;
		*node[0x5a687c683ab0] = 1;
		*node[0x5a687c683ae0] = ;;
		*node[0x5a687c683b10] = print;
		*node[0x5a687c683b40] = 11;
		*node[0x5a687c683b70] = ;;
		*node[0x5a687c683ba0] = print;
		*node[0x5a687c683bd0] = 12;
		*node[0x5a687c683c00] = 13;
		*node[0x5a687c683c30] = ;;
		*node[0x5a687c683c60] = =;
		*node[0x5a687c683c90] = 14;
		*node[0x5a687c683cc0] = -;
		*node[0x5a687c683cf0] = *;
		*node[0x5a687c683d20] = 2;
		*node[0x5a687c683d50] = 2;
		*node[0x5a687c683d80] = *;
		*node[0x5a687c683db0] = *;
		*node[0x5a687c683de0] = 4;
		*node[0x5a687c683e10] = 1;
		*node[0x5a687c683e40] = 3;
		*node[0x5a687c683e70] = ;;
		*node[0x5a687c683ea0] = if;
		*node[0x5a687c683ed0] = op_no;
		*node[0x5a687c683f00] = >;
		*node[0x5a687c683f30] = 14;
		*node[0x5a687c683f60] = 0;
		*node[0x5a687c683f90] = ;;
		*node[0x5a687c683fc0] = =;
		*node[0x5a687c683ff0] = 15;
		*node[0x5a687c684020] = sqrt;
		*node[0x5a687c684050] = 1;
		*node[0x5a687c684080] = 14;
		*node[0x5a687c6840b0] = ;;
		*node[0x5a687c6840e0] = =;
		*node[0x5a687c684110] = 12;
		*node[0x5a687c684140] = /;
		*node[0x5a687c684170] = -;
		*node[0x5a687c6841a0] = -;
		*node[0x5a687c6841d0] = 0;
		*node[0x5a687c684200] = 2;
		*node[0x5a687c684230] = 15;
		*node[0x5a687c684260] = *;
		*node[0x5a687c684290] = 2;
		*node[0x5a687c6842c0] = 1;
		*node[0x5a687c6842f0] = ;;
		*node[0x5a687c684320] = =;
		*node[0x5a687c684350] = 13;
		*node[0x5a687c684380] = /;
		*node[0x5a687c6843b0] = +;
		*node[0x5a687c6843e0] = -;
		*node[0x5a687c684410] = 0;
		*node[0x5a687c684440] = 2;
		*node[0x5a687c684470] = 15;
		*node[0x5a687c6844a0] = *;
		*node[0x5a687c6844d0] = 2;
		*node[0x5a687c684500] = 1;
		*node[0x5a687c684530] = ;;
		*node[0x5a687c684560] = print;
		*node[0x5a687c684590] = 11;
		*node[0x5a687c6845c0] = ;;
		*node[0x5a687c6845f0] = print;
		*node[0x5a687c684620] = 12;
		*node[0x5a687c684650] = 13;
		*node[0x5a687c684680] = if;
		*node[0x5a687c6846b0] = op_no;
		*node[0x5a687c6846e0] = ==;
		*node[0x5a687c684710] = 14;
		*node[0x5a687c684740] = 0;
		*node[0x5a687c684770] = ;;
		*node[0x5a687c6847a0] = =;
		*node[0x5a687c6847d0] = 10;
		*node[0x5a687c684800] = /;
		*node[0x5a687c684830] = -;
		*node[0x5a687c684860] = 0;
		*node[0x5a687c684890] = 2;
		*node[0x5a687c6848c0] = *;
		*node[0x5a687c6848f0] = 2;
		*node[0x5a687c684920] = 1;
		*node[0x5a687c684950] = ;;
		*node[0x5a687c684980] = print;
		*node[0x5a687c6849b0] = 8;
		*node[0x5a687c6849e0] = ;;
		*node[0x5a687c684a10] = print;
		*node[0x5a687c684a40] = 10;
		*node[0x5a687c684a70] = ;;
		*node[0x5a687c684aa0] = print;
		*node[0x5a687c684ad0] = 7;
		*node[0x5a687c684b00] = ;;
		*node[0x5a687c684b30] = return;
		*node[0x5a687c684b60] = 0;
		*node[0x5a687c684b90] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffefa0baf90] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x609202253c90] = ;;
		*node[0x609202253cc0] = 0;
		*node[0x609202253cf0] = ;;
		*node[0x609202253d20] = input;
		*node[0x609202253d50] = 1;
		*node[0x609202253d80] = 2;
		*node[0x609202253db0] = 3;
		*node[0x609202253de0] = ;;
		*node[0x609202253e40] = 1;
		*node[0x609202253e70] = 2;
		*node[0x609202253ea0] = 3;
		*node[0x609202253ed0] = ;;
		*node[0x609202253f00] = 4;
		*node[0x609202253f30] = 1;
		*node[0x609202253f60] = 2;
		*node[0x609202253f90] = 3;
		*node[0x609202253fc0] = ;;
		*node[0x609202253ff0] = if;
		*node[0x609202254020] = op_no;
		*node[0x609202254050] = ==;
		*node[0x609202254080] = 1;
		*node[0x6092022540b0] = 0;
		*node[0x6092022540e0] = ;;
		*node[0x609202254140] = 2;
		*node[0x609202254170] = 3;
		*node[0x6092022541a0] = ;;
		*node[0x609202254200] = 1;
		*node[0x609202254230] = 2;
		*node[0x609202254260] = 3;
		*node[0x609202254290] = ;;
		*node[0x6092022542c0] = 5;
		*node[0x6092022542f0] = 1;
		*node[0x609202254320] = 2;
		*node[0x609202254350] = ;;
		*node[0x609202254380] = =;
		*node[0x6092022543b0] = 7;
		*node[0x6092022543e0] = -;
		*node[0x609202254410] = 0;
		*node[0x609202254440] = 1;
		*node[0x609202254470] = ;;
		*node[0x6092022544a0] = =;
		*node[0x6092022544d0] = 8;
		*node[0x609202254500] = 1;
		*node[0x609202254530] = ;;
		*node[0x609202254560] = =;
		*node[0x609202254590] = 9;
		*node[0x6092022545c0] = 1000;
		*node[0x6092022545f0] = ;;
		*node[0x609202254620] = if;
		*node[0x609202254650] = op_no;
		*node[0x609202254680] = ==;
		*node[0x6092022546b0] = 1;
		*node[0x6092022546e0] = 0;
		*node[0x609202254710] = ;;
		*node[0x609202254740] = if;
		*node[0x609202254770] = op_no;
		*node[0x6092022547a0] = ==;
		*node[0x6092022547d0] = 2;
		*node[0x609202254800] = 0;
		*node[0x609202254830] = ;;
		*node[0x609202254860] = print;
		*node[0x609202254890] = 9;
		*node[0x6092022548c0] = ;;
		*node[0x6092022548f0] = print;
		*node[0x609202254920] = 7;
		*node[0x609202254950] = ;;
		*node[0x609202254980] = =;
		*node[0x6092022549b0] = 10;
		*node[0x6092022549e0] = /;
		*node[0x609202254a10] = -;
		*node[0x609202254a40] = 0;
		*node[0x609202254a70] = 2;
		*node[0x609202254aa0] = 1;
		*node[0x609202254ad0] = ;;
		*node[0x609202254b00] = print;
		*node[0x609202254b30] = 8;
		*node[0x609202254b60] = ;;
		*node[0x609202254b90] = print;
		*node[0x609202254bc0] = 10;
		*node[0x609202254bf0] = ;;
		*node[0x609202254c20] = return;
		*node[0x609202254c50] = 0;
		*node[0x609202254c80] = ;;
		*node[0x609202254cb0] = 6;
		*node[0x609202254ce0] = 1;
		*node[0x609202254d10] = 2;
		*node[0x609202254d40] = 3;
		*node[0x609202254d70] = ;;
		*node[0x609202254da0] = =;
		*node[0x609202254dd0] = 7;
		*node[0x609202254e00] = -;
		*node[0x609202254e30] = 0;
		*node[0x609202254e60] = 1;
		*node[0x609202254e90] = ;;
		*node[0x609202254ec0] = =;
		*node[0x609202254ef0] = 8;
		*node[0x609202254f20] = 1;
		*node[0x609202254f50] = ;;
		*node[0x609202254f80] = =;
		*node[0x609202254fb0] = 11;
		*node[0x609202254fe0] = 2;
		*node[0x609202255010] = ;;
		*node[0x609202255040] = if;
		*node[0x609202255070] = op_no;
		*node[0x6092022550a0] = ==;
		*node[0x6092022550d0] = 3;
		*node[0x609202255100] = 0;
		*node[0x609202255130] = ;;
		*node[0x609202255160] = =;
		*node[0x609202255190] = 12;
		*node[0x6092022551c0] = 0;
		*node[0x6092022551f0] = ;;
		*node[0x609202255220] = =;
		*node[0x609202255250] = 13;
		*node[0x609202255280] = /;
		*node[0x6092022552b0] = -;
		*node[0x6092022552e0] = 0;
		*node[0x609202255310] = 2;
		*node[0x609202255340] = 1;
		*node[0x609202255370] = ;;
		*node[0x6092022553a0] = print;
		*node[0x6092022553d0] = 11;
		*node[0x609202255400] = ;;
		*node[0x609202255430] = print;
		*node[0x609202255460] = 12;
		*node[0x609202255490] = 13;
		*node[0x6092022554c0] = ;;
		*node[0x6092022554f0] = =;
		*node[0x609202255520] = 14;
		*node[0x609202255550] = -;
		*node[0x609202255580] = *;
		*node[0x6092022555b0] = 2;
		*node[0x6092022555e0] = 2;
		*node[0x609202255610] = *;
		*node[0x609202255640] = *;
		*node[0x609202255670] = 4;
		*node[0x6092022556a0] = 1;
		*node[0x6092022556d0] = 3;
		*node[0x609202255700] = ;;
		*node[0x609202255730] = if;
		*node[0x609202255760] = op_no;
		*node[0x609202255790] = >;
		*node[0x6092022557c0] = 14;
		*node[0x6092022557f0] = 0;
		*node[0x609202255820] = ;;
		*node[0x609202255850] = =;
		*node[0x609202255880] = 15;
		*node[0x6092022558b0] = sqrt;
		*node[0x6092022558e0] = 1;
		*node[0x609202255910] = 14;
		*node[0x609202255940] = ;;
		*node[0x609202255970] = =;
		*node[0x6092022559a0] = 12;
		*node[0x6092022559d0] = /;
		*node[0x609202255a00] = -;
		*node[0x609202255a30] = -;
		*node[0x609202255a60] = 0;
		*node[0x609202255a90] = 2;
		*node[0x609202255ac0] = 15;
		*node[0x609202255af0] = *;
		*node[0x609202255b20] = 2;
		*node[0x609202255b50] = 1;
		*node[0x609202255b80] = ;;
		*node[0x609202255bb0] = =;
		*node[0x609202255be0] = 13;
		*node[0x609202255c10] = /;
		*node[0x609202255c40] = +;
		*node[0x609202255c70] = -;
		*node[0x609202255ca0] = 0;
		*node[0x609202255cd0] = 2;
		*node[0x609202255d00] = 15;
		*node[0x609202255d30] = *;
		*node[0x609202255d60] = 2;
		*node[0x609202255d90] = 1;
		*node[0x609202255dc0] = ;;
		*node[0x609202255df0] = print;
		*node[0x609202255e20] = 11;
		*node[0x609202255e50] = ;;
		*node[0x609202255e80] = print;
		*node[0x609202255eb0] = 12;
		*node[0x609202255ee0] = 13;
		*node[0x609202255f10] = if;
		*node[0x609202255f40] = op_no;
		*node[0x609202255f70] = ==;
		*node[0x609202255fa0] = 14;
		*node[0x609202255fd0] = 0;
		*node[0x609202256000] = ;;
		*node[0x609202256030] = =;
		*node[0x609202256060] = 10;
		*node[0x609202256090] = /;
		*node[0x6092022560c0] = -;
		*node[0x6092022560f0] = 0;
		*node[0x609202256120] = 2;
		*node[0x609202256150] = *;
		*node[0x609202256180] = 2;
		*node[0x6092022561b0] = 1;
		*node[0x6092022561e0] = ;;
		*node[0x609202256210] = print;
		*node[0x609202256240] = 8;
		*node[0x609202256270] = ;;
		*node[0x6092022562a0] = print;
		*node[0x6092022562d0] = 10;
		*node[0x609202256300] = ;;
		*node[0x609202256330] = print;
		*node[0x609202256360] = 7;
		*node[0x609202256390] = ;;
		*node[0x6092022563c0] = return;
		*node[0x6092022563f0] = 0;
		*node[0x609202256420] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc2168a8a0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5b5dfe072520] = ;;
		*node[0x5b5dfe072550] = 0;
		*node[0x5b5dfe072580] = ;;
		*node[0x5b5dfe0725b0] = input;
		*node[0x5b5dfe0725e0] = 1;
		*node[0x5b5dfe072610] = 2;
		*node[0x5b5dfe072640] = 3;
		*node[0x5b5dfe072670] = ;;
		*node[0x5b5dfe0726d0] = 1;
		*node[0x5b5dfe072700] = 2;
		*node[0x5b5dfe072730] = 3;
		*node[0x5b5dfe072760] = ;;
		*node[0x5b5dfe072790] = 4;
		*node[0x5b5dfe0727c0] = 1;
		*node[0x5b5dfe0727f0] = 2;
		*node[0x5b5dfe072820] = 3;
		*node[0x5b5dfe072850] = ;;
		*node[0x5b5dfe072880] = if;
		*node[0x5b5dfe0728b0] = op_no;
		*node[0x5b5dfe0728e0] = ==;
		*node[0x5b5dfe072910] = 1;
		*node[0x5b5dfe072940] = 0;
		*node[0x5b5dfe072970] = ;;
		*node[0x5b5dfe0729d0] = 2;
		*node[0x5b5dfe072a00] = 3;
		*node[0x5b5dfe072a30] = ;;
		*node[0x5b5dfe072a90] = 1;
		*node[0x5b5dfe072ac0] = 2;
		*node[0x5b5dfe072af0] = 3;
		*node[0x5b5dfe072b20] = ;;
		*node[0x5b5dfe072b50] = 5;
		*node[0x5b5dfe072b80] = 1;
		*node[0x5b5dfe072bb0] = 2;
		*node[0x5b5dfe072be0] = ;;
		*node[0x5b5dfe072c10] = =;
		*node[0x5b5dfe072c40] = 7;
		*node[0x5b5dfe072c70] = -;
		*node[0x5b5dfe072ca0] = 0;
		*node[0x5b5dfe072cd0] = 1;
		*node[0x5b5dfe072d00] = ;;
		*node[0x5b5dfe072d30] = =;
		*node[0x5b5dfe072d60] = 8;
		*node[0x5b5dfe072d90] = 1;
		*node[0x5b5dfe072dc0] = ;;
		*node[0x5b5dfe072df0] = =;
		*node[0x5b5dfe072e20] = 9;
		*node[0x5b5dfe072e50] = 1000;
		*node[0x5b5dfe072e80] = ;;
		*node[0x5b5dfe072eb0] = if;
		*node[0x5b5dfe072ee0] = op_no;
		*node[0x5b5dfe072f10] = ==;
		*node[0x5b5dfe072f40] = 1;
		*node[0x5b5dfe072f70] = 0;
		*node[0x5b5dfe072fa0] = ;;
		*node[0x5b5dfe072fd0] = if;
		*node[0x5b5dfe073000] = op_no;
		*node[0x5b5dfe073030] = ==;
		*node[0x5b5dfe073060] = 2;
		*node[0x5b5dfe073090] = 0;
		*node[0x5b5dfe0730c0] = ;;
		*node[0x5b5dfe0730f0] = print;
		*node[0x5b5dfe073120] = 9;
		*node[0x5b5dfe073150] = ;;
		*node[0x5b5dfe073180] = print;
		*node[0x5b5dfe0731b0] = 7;
		*node[0x5b5dfe0731e0] = ;;
		*node[0x5b5dfe073210] = =;
		*node[0x5b5dfe073240] = 10;
		*node[0x5b5dfe073270] = /;
		*node[0x5b5dfe0732a0] = -;
		*node[0x5b5dfe0732d0] = 0;
		*node[0x5b5dfe073300] = 2;
		*node[0x5b5dfe073330] = 1;
		*node[0x5b5dfe073360] = ;;
		*node[0x5b5dfe073390] = print;
		*node[0x5b5dfe0733c0] = 8;
		*node[0x5b5dfe0733f0] = ;;
		*node[0x5b5dfe073420] = print;
		*node[0x5b5dfe073450] = 10;
		*node[0x5b5dfe073480] = ;;
		*node[0x5b5dfe0734b0] = return;
		*node[0x5b5dfe0734e0] = 0;
		*node[0x5b5dfe073510] = ;;
		*node[0x5b5dfe073540] = 6;
		*node[0x5b5dfe073570] = 1;
		*node[0x5b5dfe0735a0] = 2;
		*node[0x5b5dfe0735d0] = 3;
		*node[0x5b5dfe073600] = ;;
		*node[0x5b5dfe073630] = =;
		*node[0x5b5dfe073660] = 7;
		*node[0x5b5dfe073690] = -;
		*node[0x5b5dfe0736c0] = 0;
		*node[0x5b5dfe0736f0] = 1;
		*node[0x5b5dfe073720] = ;;
		*node[0x5b5dfe073750] = =;
		*node[0x5b5dfe073780] = 8;
		*node[0x5b5dfe0737b0] = 1;
		*node[0x5b5dfe0737e0] = ;;
		*node[0x5b5dfe073810] = =;
		*node[0x5b5dfe073840] = 11;
		*node[0x5b5dfe073870] = 2;
		*node[0x5b5dfe0738a0] = ;;
		*node[0x5b5dfe0738d0] = if;
		*node[0x5b5dfe073900] = op_no;
		*node[0x5b5dfe073930] = ==;
		*node[0x5b5dfe073960] = 3;
		*node[0x5b5dfe073990] = 0;
		*node[0x5b5dfe0739c0] = ;;
		*node[0x5b5dfe0739f0] = =;
		*node[0x5b5dfe073a20] = 12;
		*node[0x5b5dfe073a50] = 0;
		*node[0x5b5dfe073a80] = ;;
		*node[0x5b5dfe073ab0] = =;
		*node[0x5b5dfe073ae0] = 13;
		*node[0x5b5dfe073b10] = /;
		*node[0x5b5dfe073b40] = -;
		*node[0x5b5dfe073b70] = 0;
		*node[0x5b5dfe073ba0] = 2;
		*node[0x5b5dfe073bd0] = 1;
		*node[0x5b5dfe073c00] = ;;
		*node[0x5b5dfe073c30] = print;
		*node[0x5b5dfe073c60] = 11;
		*node[0x5b5dfe073c90] = ;;
		*node[0x5b5dfe073cc0] = print;
		*node[0x5b5dfe073cf0] = 12;
		*node[0x5b5dfe073d20] = 13;
		*node[0x5b5dfe073d50] = ;;
		*node[0x5b5dfe073d80] = =;
		*node[0x5b5dfe073db0] = 14;
		*node[0x5b5dfe073de0] = -;
		*node[0x5b5dfe073e10] = *;
		*node[0x5b5dfe073e40] = 2;
		*node[0x5b5dfe073e70] = 2;
		*node[0x5b5dfe073ea0] = *;
		*node[0x5b5dfe073ed0] = *;
		*node[0x5b5dfe073f00] = 4;
		*node[0x5b5dfe073f30] = 1;
		*node[0x5b5dfe073f60] = 3;
		*node[0x5b5dfe073f90] = ;;
		*node[0x5b5dfe073fc0] = if;
		*node[0x5b5dfe073ff0] = op_no;
		*node[0x5b5dfe074020] = >;
		*node[0x5b5dfe074050] = 14;
		*node[0x5b5dfe074080] = 0;
		*node[0x5b5dfe0740b0] = ;;
		*node[0x5b5dfe0740e0] = =;
		*node[0x5b5dfe074110] = 15;
		*node[0x5b5dfe074140] = sqrt;
		*node[0x5b5dfe074170] = 1;
		*node[0x5b5dfe0741a0] = 14;
		*node[0x5b5dfe0741d0] = ;;
		*node[0x5b5dfe074200] = =;
		*node[0x5b5dfe074230] = 12;
		*node[0x5b5dfe074260] = /;
		*node[0x5b5dfe074290] = -;
		*node[0x5b5dfe0742c0] = -;
		*node[0x5b5dfe0742f0] = 0;
		*node[0x5b5dfe074320] = 2;
		*node[0x5b5dfe074350] = 15;
		*node[0x5b5dfe074380] = *;
		*node[0x5b5dfe0743b0] = 2;
		*node[0x5b5dfe0743e0] = 1;
		*node[0x5b5dfe074410] = ;;
		*node[0x5b5dfe074440] = =;
		*node[0x5b5dfe074470] = 13;
		*node[0x5b5dfe0744a0] = /;
		*node[0x5b5dfe0744d0] = +;
		*node[0x5b5dfe074500] = -;
		*node[0x5b5dfe074530] = 0;
		*node[0x5b5dfe074560] = 2;
		*node[0x5b5dfe074590] = 15;
		*node[0x5b5dfe0745c0] = *;
		*node[0x5b5dfe0745f0] = 2;
		*node[0x5b5dfe074620] = 1;
		*node[0x5b5dfe074650] = ;;
		*node[0x5b5dfe074680] = print;
		*node[0x5b5dfe0746b0] = 11;
		*node[0x5b5dfe0746e0] = ;;
		*node[0x5b5dfe074710] = print;
		*node[0x5b5dfe074740] = 12;
		*node[0x5b5dfe074770] = 13;
		*node[0x5b5dfe0747a0] = if;
		*node[0x5b5dfe0747d0] = op_no;
		*node[0x5b5dfe074800] = ==;
		*node[0x5b5dfe074830] = 14;
		*node[0x5b5dfe074860] = 0;
		*node[0x5b5dfe074890] = ;;
		*node[0x5b5dfe0748c0] = =;
		*node[0x5b5dfe0748f0] = 10;
		*node[0x5b5dfe074920] = /;
		*node[0x5b5dfe074950] = -;
		*node[0x5b5dfe074980] = 0;
		*node[0x5b5dfe0749b0] = 2;
		*node[0x5b5dfe0749e0] = *;
		*node[0x5b5dfe074a10] = 2;
		*node[0x5b5dfe074a40] = 1;
		*node[0x5b5dfe074a70] = ;;
		*node[0x5b5dfe074aa0] = print;
		*node[0x5b5dfe074ad0] = 8;
		*node[0x5b5dfe074b00] = ;;
		*node[0x5b5dfe074b30] = print;
		*node[0x5b5dfe074b60] = 10;
		*node[0x5b5dfe074b90] = ;;
		*node[0x5b5dfe074bc0] = print;
		*node[0x5b5dfe074bf0] = 7;
		*node[0x5b5dfe074c20] = ;;
		*node[0x5b5dfe074c50] = return;
		*node[0x5b5dfe074c80] = 0;
		*node[0x5b5dfe074cb0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffea472d960] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x62ab72d96dc0] = ;;
		*node[0x62ab72d96df0] = 0;
		*node[0x62ab72d96e20] = ;;
		*node[0x62ab72d96e50] = input;
		*node[0x62ab72d96e80] = 1;
		*node[0x62ab72d96eb0] = 2;
		*node[0x62ab72d96ee0] = 3;
		*node[0x62ab72d96f10] = ;;
		*node[0x62ab72d96f70] = 1;
		*node[0x62ab72d96fa0] = 2;
		*node[0x62ab72d96fd0] = 3;
		*node[0x62ab72d97000] = ;;
		*node[0x62ab72d97030] = 4;
		*node[0x62ab72d97060] = 1;
		*node[0x62ab72d97090] = 2;
		*node[0x62ab72d970c0] = 3;
		*node[0x62ab72d970f0] = ;;
		*node[0x62ab72d97120] = if;
		*node[0x62ab72d97150] = op_no;
		*node[0x62ab72d97180] = ==;
		*node[0x62ab72d971b0] = 1;
		*node[0x62ab72d971e0] = 0;
		*node[0x62ab72d97210] = ;;
		*node[0x62ab72d97270] = 2;
		*node[0x62ab72d972a0] = 3;
		*node[0x62ab72d972d0] = ;;
		*node[0x62ab72d97330] = 1;
		*node[0x62ab72d97360] = 2;
		*node[0x62ab72d97390] = 3;
		*node[0x62ab72d973c0] = ;;
		*node[0x62ab72d973f0] = 5;
		*node[0x62ab72d97420] = 1;
		*node[0x62ab72d97450] = 2;
		*node[0x62ab72d97480] = ;;
		*node[0x62ab72d974b0] = =;
		*node[0x62ab72d974e0] = 7;
		*node[0x62ab72d97510] = -;
		*node[0x62ab72d97540] = 0;
		*node[0x62ab72d97570] = 1;
		*node[0x62ab72d975a0] = ;;
		*node[0x62ab72d975d0] = =;
		*node[0x62ab72d97600] = 8;
		*node[0x62ab72d97630] = 1;
		*node[0x62ab72d97660] = ;;
		*node[0x62ab72d97690] = =;
		*node[0x62ab72d976c0] = 9;
		*node[0x62ab72d976f0] = 1000;
		*node[0x62ab72d97720] = ;;
		*node[0x62ab72d97750] = if;
		*node[0x62ab72d97780] = op_no;
		*node[0x62ab72d977b0] = ==;
		*node[0x62ab72d977e0] = 1;
		*node[0x62ab72d97810] = 0;
		*node[0x62ab72d97840] = ;;
		*node[0x62ab72d97870] = if;
		*node[0x62ab72d978a0] = op_no;
		*node[0x62ab72d978d0] = ==;
		*node[0x62ab72d97900] = 2;
		*node[0x62ab72d97930] = 0;
		*node[0x62ab72d97960] = ;;
		*node[0x62ab72d97990] = print;
		*node[0x62ab72d979c0] = 9;
		*node[0x62ab72d979f0] = ;;
		*node[0x62ab72d97a20] = print;
		*node[0x62ab72d97a50] = 7;
		*node[0x62ab72d97a80] = ;;
		*node[0x62ab72d97ab0] = =;
		*node[0x62ab72d97ae0] = 10;
		*node[0x62ab72d97b10] = /;
		*node[0x62ab72d97b40] = -;
		*node[0x62ab72d97b70] = 0;
		*node[0x62ab72d97ba0] = 2;
		*node[0x62ab72d97bd0] = 1;
		*node[0x62ab72d97c00] = ;;
		*node[0x62ab72d97c30] = print;
		*node[0x62ab72d97c60] = 8;
		*node[0x62ab72d97c90] = ;;
		*node[0x62ab72d97cc0] = print;
		*node[0x62ab72d97cf0] = 10;
		*node[0x62ab72d97d20] = ;;
		*node[0x62ab72d97d50] = return;
		*node[0x62ab72d97d80] = 0;
		*node[0x62ab72d97db0] = ;;
		*node[0x62ab72d97de0] = 6;
		*node[0x62ab72d97e10] = 1;
		*node[0x62ab72d97e40] = 2;
		*node[0x62ab72d97e70] = 3;
		*node[0x62ab72d97ea0] = ;;
		*node[0x62ab72d97ed0] = =;
		*node[0x62ab72d97f00] = 7;
		*node[0x62ab72d97f30] = -;
		*node[0x62ab72d97f60] = 0;
		*node[0x62ab72d97f90] = 1;
		*node[0x62ab72d97fc0] = ;;
		*node[0x62ab72d97ff0] = =;
		*node[0x62ab72d98020] = 8;
		*node[0x62ab72d98050] = 1;
		*node[0x62ab72d98080] = ;;
		*node[0x62ab72d980b0] = =;
		*node[0x62ab72d980e0] = 11;
		*node[0x62ab72d98110] = 2;
		*node[0x62ab72d98140] = ;;
		*node[0x62ab72d98170] = if;
		*node[0x62ab72d981a0] = op_no;
		*node[0x62ab72d981d0] = ==;
		*node[0x62ab72d98200] = 3;
		*node[0x62ab72d98230] = 0;
		*node[0x62ab72d98260] = ;;
		*node[0x62ab72d98290] = =;
		*node[0x62ab72d982c0] = 12;
		*node[0x62ab72d982f0] = 0;
		*node[0x62ab72d98320] = ;;
		*node[0x62ab72d98350] = =;
		*node[0x62ab72d98380] = 13;
		*node[0x62ab72d983b0] = /;
		*node[0x62ab72d983e0] = -;
		*node[0x62ab72d98410] = 0;
		*node[0x62ab72d98440] = 2;
		*node[0x62ab72d98470] = 1;
		*node[0x62ab72d984a0] = ;;
		*node[0x62ab72d984d0] = print;
		*node[0x62ab72d98500] = 11;
		*node[0x62ab72d98530] = ;;
		*node[0x62ab72d98560] = print;
		*node[0x62ab72d98590] = 12;
		*node[0x62ab72d985c0] = 13;
		*node[0x62ab72d985f0] = ;;
		*node[0x62ab72d98620] = =;
		*node[0x62ab72d98650] = 14;
		*node[0x62ab72d98680] = -;
		*node[0x62ab72d986b0] = *;
		*node[0x62ab72d986e0] = 2;
		*node[0x62ab72d98710] = 2;
		*node[0x62ab72d98740] = *;
		*node[0x62ab72d98770] = *;
		*node[0x62ab72d987a0] = 4;
		*node[0x62ab72d987d0] = 1;
		*node[0x62ab72d98800] = 3;
		*node[0x62ab72d98830] = ;;
		*node[0x62ab72d98860] = if;
		*node[0x62ab72d98890] = op_no;
		*node[0x62ab72d988c0] = >;
		*node[0x62ab72d988f0] = 14;
		*node[0x62ab72d98920] = 0;
		*node[0x62ab72d98950] = ;;
		*node[0x62ab72d98980] = =;
		*node[0x62ab72d989b0] = 15;
		*node[0x62ab72d989e0] = sqrt;
		*node[0x62ab72d98a10] = 1;
		*node[0x62ab72d98a40] = 14;
		*node[0x62ab72d98a70] = ;;
		*node[0x62ab72d98aa0] = =;
		*node[0x62ab72d98ad0] = 12;
		*node[0x62ab72d98b00] = /;
		*node[0x62ab72d98b30] = -;
		*node[0x62ab72d98b60] = -;
		*node[0x62ab72d98b90] = 0;
		*node[0x62ab72d98bc0] = 2;
		*node[0x62ab72d98bf0] = 15;
		*node[0x62ab72d98c20] = *;
		*node[0x62ab72d98c50] = 2;
		*node[0x62ab72d98c80] = 1;
		*node[0x62ab72d98cb0] = ;;
		*node[0x62ab72d98ce0] = =;
		*node[0x62ab72d98d10] = 13;
		*node[0x62ab72d98d40] = /;
		*node[0x62ab72d98d70] = +;
		*node[0x62ab72d98da0] = -;
		*node[0x62ab72d98dd0] = 0;
		*node[0x62ab72d98e00] = 2;
		*node[0x62ab72d98e30] = 15;
		*node[0x62ab72d98e60] = *;
		*node[0x62ab72d98e90] = 2;
		*node[0x62ab72d98ec0] = 1;
		*node[0x62ab72d98ef0] = ;;
		*node[0x62ab72d98f20] = print;
		*node[0x62ab72d98f50] = 11;
		*node[0x62ab72d98f80] = ;;
		*node[0x62ab72d98fb0] = print;
		*node[0x62ab72d98fe0] = 12;
		*node[0x62ab72d99010] = 13;
		*node[0x62ab72d99040] = if;
		*node[0x62ab72d99070] = op_no;
		*node[0x62ab72d990a0] = ==;
		*node[0x62ab72d990d0] = 14;
		*node[0x62ab72d99100] = 0;
		*node[0x62ab72d99130] = ;;
		*node[0x62ab72d99160] = =;
		*node[0x62ab72d99190] = 10;
		*node[0x62ab72d991c0] = /;
		*node[0x62ab72d991f0] = -;
		*node[0x62ab72d99220] = 0;
		*node[0x62ab72d99250] = 2;
		*node[0x62ab72d99280] = *;
		*node[0x62ab72d992b0] = 2;
		*node[0x62ab72d992e0] = 1;
		*node[0x62ab72d99310] = ;;
		*node[0x62ab72d99340] = print;
		*node[0x62ab72d99370] = 8;
		*node[0x62ab72d993a0] = ;;
		*node[0x62ab72d993d0] = print;
		*node[0x62ab72d99400] = 10;
		*node[0x62ab72d99430] = ;;
		*node[0x62ab72d99460] = print;
		*node[0x62ab72d99490] = 7;
		*node[0x62ab72d994c0] = ;;
		*node[0x62ab72d994f0] = return;
		*node[0x62ab72d99520] = 0;
		*node[0x62ab72d99550] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe71c18340] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x636122431220] = ;;
		*node[0x636122431250] = 0;
		*node[0x636122431280] = ;;
		*node[0x6361224312b0] = input;
		*node[0x6361224312e0] = 1;
		*node[0x636122431310] = 2;
		*node[0x636122431340] = 3;
		*node[0x636122431370] = ;;
		*node[0x6361224313d0] = 1;
		*node[0x636122431400] = 2;
		*node[0x636122431430] = 3;
		*node[0x636122431460] = ;;
		*node[0x636122431490] = 4;
		*node[0x6361224314c0] = 1;
		*node[0x6361224314f0] = 2;
		*node[0x636122431520] = 3;
		*node[0x636122431550] = ;;
		*node[0x636122431580] = if;
		*node[0x6361224315b0] = op_no;
		*node[0x636122431640] = ==;
		*node[0x6361224315e0] = 1;
		*node[0x636122431610] = 0;
		*node[0x636122431670] = ;;
		*node[0x6361224316d0] = 2;
		*node[0x636122431700] = 3;
		*node[0x636122431730] = ;;
		*node[0x636122431790] = 1;
		*node[0x6361224317c0] = 2;
		*node[0x6361224317f0] = 3;
		*node[0x636122431820] = ;;
		*node[0x636122431850] = 5;
		*node[0x636122431880] = 1;
		*node[0x6361224318b0] = 2;
		*node[0x6361224318e0] = ;;
		*node[0x6361224319d0] = =;
		*node[0x636122431910] = 7;
		*node[0x6361224319a0] = -;
		*node[0x636122431940] = 0;
		*node[0x636122431970] = 1;
		*node[0x636122431a00] = ;;
		*node[0x636122431a90] = =;
		*node[0x636122431a30] = 8;
		*node[0x636122431a60] = 1;
		*node[0x636122431ac0] = ;;
		*node[0x636122431b50] = =;
		*node[0x636122431af0] = 9;
		*node[0x636122431b20] = 1000;
		*node[0x636122431b80] = ;;
		*node[0x636122431bb0] = if;
		*node[0x636122431be0] = op_no;
		*node[0x636122431c70] = ==;
		*node[0x636122431c10] = 1;
		*node[0x636122431c40] = 0;
		*node[0x636122431ca0] = ;;
		*node[0x636122431cd0] = if;
		*node[0x636122431d00] = op_no;
		*node[0x636122431d90] = ==;
		*node[0x636122431d30] = 2;
		*node[0x636122431d60] = 0;
		*node[0x636122431dc0] = ;;
		*node[0x636122431df0] = print;
		*node[0x636122431e20] = 9;
		*node[0x636122431e50] = ;;
		*node[0x636122431e80] = print;
		*node[0x636122431eb0] = 7;
		*node[0x636122431ee0] = ;;
		*node[0x636122432030] = =;
		*node[0x636122431f10] = 10;
		*node[0x636122432000] = /;
		*node[0x636122431fa0] = -;
		*node[0x636122431f40] = 0;
		*node[0x636122431f70] = 2;
		*node[0x636122431fd0] = 1;
		*node[0x636122432060] = ;;
		*node[0x636122432090] = print;
		*node[0x6361224320c0] = 8;
		*node[0x6361224320f0] = ;;
		*node[0x636122432120] = print;
		*node[0x636122432150] = 10;
		*node[0x636122432180] = ;;
		*node[0x6361224321b0] = return;
		*node[0x6361224321e0] = 0;
		*node[0x636122432210] = ;;
		*node[0x636122432240] = 6;
		*node[0x636122432270] = 1;
		*node[0x6361224322a0] = 2;
		*node[0x6361224322d0] = 3;
		*node[0x636122432300] = ;;
		*node[0x6361224323f0] = =;
		*node[0x636122432330] = 7;
		*node[0x6361224323c0] = -;
		*node[0x636122432360] = 0;
		*node[0x636122432390] = 1;
		*node[0x636122432420] = ;;
		*node[0x6361224324b0] = =;
		*node[0x636122432450] = 8;
		*node[0x636122432480] = 1;
		*node[0x6361224324e0] = ;;
		*node[0x636122432570] = =;
		*node[0x636122432510] = 11;
		*node[0x636122432540] = 2;
		*node[0x6361224325a0] = ;;
		*node[0x6361224325d0] = if;
		*node[0x636122432600] = op_no;
		*node[0x636122432690] = ==;
		*node[0x636122432630] = 3;
		*node[0x636122432660] = 0;
		*node[0x6361224326c0] = ;;
		*node[0x636122432750] = =;
		*node[0x6361224326f0] = 12;
		*node[0x636122432720] = 0;
		*node[0x636122432780] = ;;
		*node[0x6361224328d0] = =;
		*node[0x6361224327b0] = 13;
		*node[0x6361224328a0] = /;
		*node[0x636122432840] = -;
		*node[0x6361224327e0] = 0;
		*node[0x636122432810] = 2;
		*node[0x636122432870] = 1;
		*node[0x636122432900] = ;;
		*node[0x636122432930] = print;
		*node[0x636122432960] = 11;
		*node[0x636122432990] = ;;
		*node[0x6361224329c0] = print;
		*node[0x6361224329f0] = 12;
		*node[0x636122432a20] = 13;
		*node[0x636122432a50] = ;;
		*node[0x636122432c60] = =;
		*node[0x636122432a80] = 14;
		*node[0x636122432c30] = -;
		*node[0x636122432b10] = *;
		*node[0x636122432ab0] = 2;
		*node[0x636122432ae0] = 2;
		*node[0x636122432c00] = *;
		*node[0x636122432ba0] = *;
		*node[0x636122432b40] = 4;
		*node[0x636122432b70] = 1;
		*node[0x636122432bd0] = 3;
		*node[0x636122432c90] = ;;
		*node[0x636122432cc0] = if;
		*node[0x636122432cf0] = op_no;
		*node[0x636122432d80] = >;
		*node[0x636122432d20] = 14;
		*node[0x636122432d50] = 0;
		*node[0x636122432db0] = ;;
		*node[0x636122432ea0] = =;
		*node[0x636122432de0] = 15;
		*node[0x636122432e70] = sqrt;
		*node[0x636122432e40] = 1;
		*node[0x636122432e10] = 14;
		*node[0x636122432ed0] = ;;
		*node[0x6361224330e0] = =;
		*node[0x636122432f00] = 12;
		*node[0x6361224330b0] = /;
		*node[0x636122432ff0] = -;
		*node[0x636122432f90] = -;
		*node[0x636122432f30] = 0;
		*node[0x636122432f60] = 2;
		*node[0x636122432fc0] = 15;
		*node[0x636122433080] = *;
		*node[0x636122433020] = 2;
		*node[0x636122433050] = 1;
		*node[0x636122433110] = ;;
		*node[0x636122433320] = =;
		*node[0x636122433140] = 13;
		*node[0x6361224332f0] = /;
		*node[0x636122433230] = +;
		*node[0x6361224331d0] = -;
		*node[0x636122433170] = 0;
		*node[0x6361224331a0] = 2;
		*node[0x636122433200] = 15;
		*node[0x6361224332c0] = *;
		*node[0x636122433260] = 2;
		*node[0x636122433290] = 1;
		*node[0x636122433350] = ;;
		*node[0x636122433380] = print;
		*node[0x6361224333b0] = 11;
		*node[0x6361224333e0] = ;;
		*node[0x636122433410] = print;
		*node[0x636122433440] = 12;
		*node[0x636122433470] = 13;
		*node[0x6361224334a0] = if;
		*node[0x6361224334d0] = op_no;
		*node[0x636122433560] = ==;
		*node[0x636122433500] = 14;
		*node[0x636122433530] = 0;
		*node[0x636122433590] = ;;
		*node[0x636122433740] = =;
		*node[0x6361224335c0] = 10;
		*node[0x636122433710] = /;
		*node[0x636122433650] = -;
		*node[0x6361224335f0] = 0;
		*node[0x636122433620] = 2;
		*node[0x6361224336e0] = *;
		*node[0x636122433680] = 2;
		*node[0x6361224336b0] = 1;
		*node[0x636122433770] = ;;
		*node[0x6361224337a0] = print;
		*node[0x6361224337d0] = 8;
		*node[0x636122433800] = ;;
		*node[0x636122433830] = print;
		*node[0x636122433860] = 10;
		*node[0x636122433890] = ;;
		*node[0x6361224338c0] = print;
		*node[0x6361224338f0] = 7;
		*node[0x636122433920] = ;;
		*node[0x636122433950] = return;
		*node[0x636122433980] = 0;
		*node[0x6361224339b0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe625c4630] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x561c93e55f70] = ;;
		*node[0x561c93e55fa0] = 0;
		*node[0x561c93e55fd0] = ;;
		*node[0x561c93e56000] = input;
		*node[0x561c93e56030] = 1;
		*node[0x561c93e56060] = 2;
		*node[0x561c93e56090] = 3;
		*node[0x561c93e560c0] = ;;
		*node[0x561c93e56120] = 1;
		*node[0x561c93e56150] = 2;
		*node[0x561c93e56180] = 3;
		*node[0x561c93e561b0] = ;;
		*node[0x561c93e561e0] = 4;
		*node[0x561c93e56210] = 1;
		*node[0x561c93e56240] = 2;
		*node[0x561c93e56270] = 3;
		*node[0x561c93e562a0] = ;;
		*node[0x561c93e562d0] = if;
		*node[0x561c93e56300] = op_no;
		*node[0x561c93e56330] = ==;
		*node[0x561c93e56360] = 1;
		*node[0x561c93e56390] = 0;
		*node[0x561c93e563c0] = ;;
		*node[0x561c93e56420] = 2;
		*node[0x561c93e56450] = 3;
		*node[0x561c93e56480] = ;;
		*node[0x561c93e564e0] = 1;
		*node[0x561c93e56510] = 2;
		*node[0x561c93e56540] = 3;
		*node[0x561c93e56570] = ;;
		*node[0x561c93e565a0] = 5;
		*node[0x561c93e565d0] = 1;
		*node[0x561c93e56600] = 2;
		*node[0x561c93e56630] = ;;
		*node[0x561c93e56660] = =;
		*node[0x561c93e56690] = 7;
		*node[0x561c93e566c0] = -;
		*node[0x561c93e566f0] = 0;
		*node[0x561c93e56720] = 1;
		*node[0x561c93e56750] = ;;
		*node[0x561c93e56780] = =;
		*node[0x561c93e567b0] = 8;
		*node[0x561c93e567e0] = 1;
		*node[0x561c93e56810] = ;;
		*node[0x561c93e56840] = =;
		*node[0x561c93e56870] = 9;
		*node[0x561c93e568a0] = 1000;
		*node[0x561c93e568d0] = ;;
		*node[0x561c93e56900] = if;
		*node[0x561c93e56930] = op_no;
		*node[0x561c93e56960] = ==;
		*node[0x561c93e56990] = 1;
		*node[0x561c93e569c0] = 0;
		*node[0x561c93e569f0] = ;;
		*node[0x561c93e56a20] = if;
		*node[0x561c93e56a50] = op_no;
		*node[0x561c93e56a80] = ==;
		*node[0x561c93e56ab0] = 2;
		*node[0x561c93e56ae0] = 0;
		*node[0x561c93e56b10] = ;;
		*node[0x561c93e56b40] = print;
		*node[0x561c93e56b70] = 9;
		*node[0x561c93e56ba0] = ;;
		*node[0x561c93e56bd0] = print;
		*node[0x561c93e56c00] = 7;
		*node[0x561c93e56c30] = ;;
		*node[0x561c93e56c60] = =;
		*node[0x561c93e56c90] = 10;
		*node[0x561c93e56cc0] = /;
		*node[0x561c93e56cf0] = -;
		*node[0x561c93e56d20] = 0;
		*node[0x561c93e56d50] = 2;
		*node[0x561c93e56d80] = 1;
		*node[0x561c93e56db0] = ;;
		*node[0x561c93e56de0] = print;
		*node[0x561c93e56e10] = 8;
		*node[0x561c93e56e40] = ;;
		*node[0x561c93e56e70] = print;
		*node[0x561c93e56ea0] = 10;
		*node[0x561c93e56ed0] = ;;
		*node[0x561c93e56f00] = return;
		*node[0x561c93e56f30] = 0;
		*node[0x561c93e56f60] = ;;
		*node[0x561c93e56f90] = 6;
		*node[0x561c93e56fc0] = 1;
		*node[0x561c93e56ff0] = 2;
		*node[0x561c93e57020] = 3;
		*node[0x561c93e57050] = ;;
		*node[0x561c93e57080] = =;
		*node[0x561c93e570b0] = 7;
		*node[0x561c93e570e0] = -;
		*node[0x561c93e57110] = 0;
		*node[0x561c93e57140] = 1;
		*node[0x561c93e57170] = ;;
		*node[0x561c93e571a0] = =;
		*node[0x561c93e571d0] = 8;
		*node[0x561c93e57200] = 1;
		*node[0x561c93e57230] = ;;
		*node[0x561c93e57260] = =;
		*node[0x561c93e57290] = 11;
		*node[0x561c93e572c0] = 2;
		*node[0x561c93e572f0] = ;;
		*node[0x561c93e57320] = if;
		*node[0x561c93e57350] = op_no;
		*node[0x561c93e57380] = ==;
		*node[0x561c93e573b0] = 3;
		*node[0x561c93e573e0] = 0;
		*node[0x561c93e57410] = ;;
		*node[0x561c93e57440] = =;
		*node[0x561c93e57470] = 12;
		*node[0x561c93e574a0] = 0;
		*node[0x561c93e574d0] = ;;
		*node[0x561c93e57500] = =;
		*node[0x561c93e57530] = 13;
		*node[0x561c93e57560] = /;
		*node[0x561c93e57590] = -;
		*node[0x561c93e575c0] = 0;
		*node[0x561c93e575f0] = 2;
		*node[0x561c93e57620] = 1;
		*node[0x561c93e57650] = ;;
		*node[0x561c93e57680] = print;
		*node[0x561c93e576b0] = 11;
		*node[0x561c93e576e0] = ;;
		*node[0x561c93e57710] = print;
		*node[0x561c93e57740] = 12;
		*node[0x561c93e57770] = 13;
		*node[0x561c93e577a0] = ;;
		*node[0x561c93e577d0] = =;
		*node[0x561c93e57800] = 14;
		*node[0x561c93e57830] = -;
		*node[0x561c93e57860] = *;
		*node[0x561c93e57890] = 2;
		*node[0x561c93e578c0] = 2;
		*node[0x561c93e578f0] = *;
		*node[0x561c93e57920] = *;
		*node[0x561c93e57950] = 4;
		*node[0x561c93e57980] = 1;
		*node[0x561c93e579b0] = 3;
		*node[0x561c93e579e0] = ;;
		*node[0x561c93e57a10] = if;
		*node[0x561c93e57a40] = op_no;
		*node[0x561c93e57a70] = >;
		*node[0x561c93e57aa0] = 14;
		*node[0x561c93e57ad0] = 0;
		*node[0x561c93e57b00] = ;;
		*node[0x561c93e57b30] = =;
		*node[0x561c93e57b60] = 15;
		*node[0x561c93e57b90] = sqrt;
		*node[0x561c93e57bc0] = 1;
		*node[0x561c93e57bf0] = 14;
		*node[0x561c93e57c20] = ;;
		*node[0x561c93e57c50] = =;
		*node[0x561c93e57c80] = 12;
		*node[0x561c93e57cb0] = /;
		*node[0x561c93e57ce0] = -;
		*node[0x561c93e57d10] = -;
		*node[0x561c93e57d40] = 0;
		*node[0x561c93e57d70] = 2;
		*node[0x561c93e57da0] = 15;
		*node[0x561c93e57dd0] = *;
		*node[0x561c93e57e00] = 2;
		*node[0x561c93e57e30] = 1;
		*node[0x561c93e57e60] = ;;
		*node[0x561c93e57e90] = =;
		*node[0x561c93e57ec0] = 13;
		*node[0x561c93e57ef0] = /;
		*node[0x561c93e57f20] = +;
		*node[0x561c93e57f50] = -;
		*node[0x561c93e57f80] = 0;
		*node[0x561c93e57fb0] = 2;
		*node[0x561c93e57fe0] = 15;
		*node[0x561c93e58010] = *;
		*node[0x561c93e58040] = 2;
		*node[0x561c93e58070] = 1;
		*node[0x561c93e580a0] = ;;
		*node[0x561c93e580d0] = print;
		*node[0x561c93e58100] = 11;
		*node[0x561c93e58130] = ;;
		*node[0x561c93e58160] = print;
		*node[0x561c93e58190] = 12;
		*node[0x561c93e581c0] = 13;
		*node[0x561c93e581f0] = if;
		*node[0x561c93e58220] = op_no;
		*node[0x561c93e58250] = ==;
		*node[0x561c93e58280] = 14;
		*node[0x561c93e582b0] = 0;
		*node[0x561c93e582e0] = ;;
		*node[0x561c93e58310] = =;
		*node[0x561c93e58340] = 10;
		*node[0x561c93e58370] = /;
		*node[0x561c93e583a0] = -;
		*node[0x561c93e583d0] = 0;
		*node[0x561c93e58400] = 2;
		*node[0x561c93e58430] = *;
		*node[0x561c93e58460] = 2;
		*node[0x561c93e58490] = 1;
		*node[0x561c93e584c0] = ;;
		*node[0x561c93e584f0] = print;
		*node[0x561c93e58520] = 8;
		*node[0x561c93e58550] = ;;
		*node[0x561c93e58580] = print;
		*node[0x561c93e585b0] = 10;
		*node[0x561c93e585e0] = ;;
		*node[0x561c93e58610] = print;
		*node[0x561c93e58640] = 7;
		*node[0x561c93e58670] = ;;
		*node[0x561c93e586a0] = return;
		*node[0x561c93e586d0] = 0;
		*node[0x561c93e58700] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: an error occurred while opening the file[0m
tree[0x7ffe9133f890] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: an error occurred while opening the file[0m
tree[0x7ffc5de95b80] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff7591a840] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x55672316e810] = ;;
		*node[0x55672316e840] = 0;
		*node[0x55672316e870] = ;;
		*node[0x55672316e8a0] = input;
		*node[0x55672316e8d0] = 1;
		*node[0x55672316e900] = 2;
		*node[0x55672316e930] = 3;
		*node[0x55672316e960] = ;;
		*node[0x55672316e9c0] = 1;
		*node[0x55672316e9f0] = 2;
		*node[0x55672316ea20] = 3;
		*node[0x55672316ea50] = ;;
		*node[0x55672316ea80] = 4;
		*node[0x55672316eab0] = 1;
		*node[0x55672316eae0] = 2;
		*node[0x55672316eb10] = 3;
		*node[0x55672316eb40] = ;;
		*node[0x55672316eb70] = if;
		*node[0x55672316eba0] = op_no;
		*node[0x55672316ebd0] = ==;
		*node[0x55672316ec00] = 1;
		*node[0x55672316ec30] = 0;
		*node[0x55672316ec60] = ;;
		*node[0x55672316ecc0] = 2;
		*node[0x55672316ecf0] = 3;
		*node[0x55672316ed20] = ;;
		*node[0x55672316ed80] = 1;
		*node[0x55672316edb0] = 2;
		*node[0x55672316ede0] = 3;
		*node[0x55672316ee10] = ;;
		*node[0x55672316ee40] = 5;
		*node[0x55672316ee70] = 1;
		*node[0x55672316eea0] = 2;
		*node[0x55672316eed0] = ;;
		*node[0x55672316ef00] = =;
		*node[0x55672316ef30] = 7;
		*node[0x5567231715c0] = -1;
		*node[0x55672316eff0] = ;;
		*node[0x55672316f020] = =;
		*node[0x55672316f050] = 8;
		*node[0x55672316f080] = 1;
		*node[0x55672316f0b0] = ;;
		*node[0x55672316f0e0] = =;
		*node[0x55672316f110] = 9;
		*node[0x55672316f140] = 1000;
		*node[0x55672316f170] = ;;
		*node[0x55672316f1a0] = if;
		*node[0x55672316f1d0] = op_no;
		*node[0x55672316f200] = ==;
		*node[0x55672316f230] = 1;
		*node[0x55672316f260] = 0;
		*node[0x55672316f290] = ;;
		*node[0x55672316f2c0] = if;
		*node[0x55672316f2f0] = op_no;
		*node[0x55672316f320] = ==;
		*node[0x55672316f350] = 2;
		*node[0x55672316f380] = 0;
		*node[0x55672316f3b0] = ;;
		*node[0x55672316f3e0] = print;
		*node[0x55672316f410] = 9;
		*node[0x55672316f440] = ;;
		*node[0x55672316f470] = print;
		*node[0x55672316f4a0] = 7;
		*node[0x55672316f4d0] = ;;
		*node[0x55672316f500] = =;
		*node[0x55672316f530] = 10;
		*node[0x55672316f560] = /;
		*node[0x55672316f590] = -;
		*node[0x55672316f5c0] = 0;
		*node[0x55672316f5f0] = 2;
		*node[0x55672316f620] = 1;
		*node[0x55672316f650] = ;;
		*node[0x55672316f680] = print;
		*node[0x55672316f6b0] = 8;
		*node[0x55672316f6e0] = ;;
		*node[0x55672316f710] = print;
		*node[0x55672316f740] = 10;
		*node[0x55672316f770] = ;;
		*node[0x55672316f7a0] = return;
		*node[0x55672316f7d0] = 0;
		*node[0x55672316f800] = ;;
		*node[0x55672316f830] = 6;
		*node[0x55672316f860] = 1;
		*node[0x55672316f890] = 2;
		*node[0x55672316f8c0] = 3;
		*node[0x55672316f8f0] = ;;
		*node[0x55672316f920] = =;
		*node[0x55672316f950] = 7;
		*node[0x5567231715f0] = -1;
		*node[0x55672316fa10] = ;;
		*node[0x55672316fa40] = =;
		*node[0x55672316fa70] = 8;
		*node[0x55672316faa0] = 1;
		*node[0x55672316fad0] = ;;
		*node[0x55672316fb00] = =;
		*node[0x55672316fb30] = 11;
		*node[0x55672316fb60] = 2;
		*node[0x55672316fb90] = ;;
		*node[0x55672316fbc0] = if;
		*node[0x55672316fbf0] = op_no;
		*node[0x55672316fc20] = ==;
		*node[0x55672316fc50] = 3;
		*node[0x55672316fc80] = 0;
		*node[0x55672316fcb0] = ;;
		*node[0x55672316fce0] = =;
		*node[0x55672316fd10] = 12;
		*node[0x55672316fd40] = 0;
		*node[0x55672316fd70] = ;;
		*node[0x55672316fda0] = =;
		*node[0x55672316fdd0] = 13;
		*node[0x55672316fe00] = /;
		*node[0x55672316fe30] = -;
		*node[0x55672316fe60] = 0;
		*node[0x55672316fe90] = 2;
		*node[0x55672316fec0] = 1;
		*node[0x55672316fef0] = ;;
		*node[0x55672316ff20] = print;
		*node[0x55672316ff50] = 11;
		*node[0x55672316ff80] = ;;
		*node[0x55672316ffb0] = print;
		*node[0x55672316ffe0] = 12;
		*node[0x556723170010] = 13;
		*node[0x556723170040] = ;;
		*node[0x556723170070] = =;
		*node[0x5567231700a0] = 14;
		*node[0x5567231700d0] = -;
		*node[0x556723170100] = *;
		*node[0x556723170130] = 2;
		*node[0x556723170160] = 2;
		*node[0x556723170190] = *;
		*node[0x5567231701c0] = *;
		*node[0x5567231701f0] = 4;
		*node[0x556723170220] = 1;
		*node[0x556723170250] = 3;
		*node[0x556723170280] = ;;
		*node[0x5567231702b0] = if;
		*node[0x5567231702e0] = op_no;
		*node[0x556723170310] = >;
		*node[0x556723170340] = 14;
		*node[0x556723170370] = 0;
		*node[0x5567231703a0] = ;;
		*node[0x5567231703d0] = =;
		*node[0x556723170400] = 15;
		*node[0x556723170430] = sqrt;
		*node[0x556723170460] = 1;
		*node[0x556723170490] = 14;
		*node[0x5567231704c0] = ;;
		*node[0x5567231704f0] = =;
		*node[0x556723170520] = 12;
		*node[0x556723170550] = /;
		*node[0x556723170580] = -;
		*node[0x5567231705b0] = -;
		*node[0x5567231705e0] = 0;
		*node[0x556723170610] = 2;
		*node[0x556723170640] = 15;
		*node[0x556723170670] = *;
		*node[0x5567231706a0] = 2;
		*node[0x5567231706d0] = 1;
		*node[0x556723170700] = ;;
		*node[0x556723170730] = =;
		*node[0x556723170760] = 13;
		*node[0x556723170790] = /;
		*node[0x5567231707c0] = +;
		*node[0x5567231707f0] = -;
		*node[0x556723170820] = 0;
		*node[0x556723170850] = 2;
		*node[0x556723170880] = 15;
		*node[0x5567231708b0] = *;
		*node[0x5567231708e0] = 2;
		*node[0x556723170910] = 1;
		*node[0x556723170940] = ;;
		*node[0x556723170970] = print;
		*node[0x5567231709a0] = 11;
		*node[0x5567231709d0] = ;;
		*node[0x556723170a00] = print;
		*node[0x556723170a30] = 12;
		*node[0x556723170a60] = 13;
		*node[0x556723170a90] = if;
		*node[0x556723170ac0] = op_no;
		*node[0x556723170af0] = ==;
		*node[0x556723170b20] = 14;
		*node[0x556723170b50] = 0;
		*node[0x556723170b80] = ;;
		*node[0x556723170bb0] = =;
		*node[0x556723170be0] = 10;
		*node[0x556723170c10] = /;
		*node[0x556723170c40] = -;
		*node[0x556723170c70] = 0;
		*node[0x556723170ca0] = 2;
		*node[0x556723170cd0] = *;
		*node[0x556723170d00] = 2;
		*node[0x556723170d30] = 1;
		*node[0x556723170d60] = ;;
		*node[0x556723170d90] = print;
		*node[0x556723170dc0] = 8;
		*node[0x556723170df0] = ;;
		*node[0x556723170e20] = print;
		*node[0x556723170e50] = 10;
		*node[0x556723170e80] = ;;
		*node[0x556723170eb0] = print;
		*node[0x556723170ee0] = 7;
		*node[0x556723170f10] = ;;
		*node[0x556723170f40] = return;
		*node[0x556723170f70] = 0;
		*node[0x556723170fa0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe77a8c5d0] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x56a947f83080] = ;;
		*node[0x56a947f830b0] = 0;
		*node[0x56a947f830e0] = ;;
		*node[0x56a947f83110] = input;
		*node[0x56a947f83140] = 1;
		*node[0x56a947f83170] = 2;
		*node[0x56a947f831a0] = 3;
		*node[0x56a947f831d0] = ;;
		*node[0x56a947f83230] = 1;
		*node[0x56a947f83260] = 2;
		*node[0x56a947f83290] = 3;
		*node[0x56a947f832c0] = ;;
		*node[0x56a947f832f0] = 4;
		*node[0x56a947f83320] = 1;
		*node[0x56a947f83350] = 2;
		*node[0x56a947f83380] = 3;
		*node[0x56a947f833b0] = ;;
		*node[0x56a947f833e0] = if;
		*node[0x56a947f83410] = op_no;
		*node[0x56a947f83440] = ==;
		*node[0x56a947f83470] = 1;
		*node[0x56a947f834a0] = 0;
		*node[0x56a947f834d0] = ;;
		*node[0x56a947f83530] = 2;
		*node[0x56a947f83560] = 3;
		*node[0x56a947f83590] = ;;
		*node[0x56a947f835f0] = 1;
		*node[0x56a947f83620] = 2;
		*node[0x56a947f83650] = 3;
		*node[0x56a947f83680] = ;;
		*node[0x56a947f836b0] = 5;
		*node[0x56a947f836e0] = 1;
		*node[0x56a947f83710] = 2;
		*node[0x56a947f83740] = ;;
		*node[0x56a947f83770] = =;
		*node[0x56a947f837a0] = 7;
		*node[0x56a947f85a20] = -1;
		*node[0x56a947f83860] = ;;
		*node[0x56a947f83890] = =;
		*node[0x56a947f838c0] = 8;
		*node[0x56a947f838f0] = 1;
		*node[0x56a947f83920] = ;;
		*node[0x56a947f83950] = =;
		*node[0x56a947f83980] = 9;
		*node[0x56a947f839b0] = 1000;
		*node[0x56a947f839e0] = ;;
		*node[0x56a947f83a10] = if;
		*node[0x56a947f83a40] = op_no;
		*node[0x56a947f83a70] = ==;
		*node[0x56a947f83aa0] = 1;
		*node[0x56a947f83ad0] = 0;
		*node[0x56a947f83b00] = ;;
		*node[0x56a947f83b30] = if;
		*node[0x56a947f83b60] = op_no;
		*node[0x56a947f83b90] = ==;
		*node[0x56a947f83bc0] = 2;
		*node[0x56a947f83bf0] = 0;
		*node[0x56a947f83c20] = ;;
		*node[0x56a947f83c50] = print;
		*node[0x56a947f83c80] = 9;
		*node[0x56a947f83cb0] = ;;
		*node[0x56a947f83ce0] = print;
		*node[0x56a947f83d10] = 7;
		*node[0x56a947f83d40] = ;;
		*node[0x56a947f83d70] = =;
		*node[0x56a947f83da0] = 10;
		*node[0x56a947f83dd0] = /;
		*node[0x56a947f83e00] = -;
		*node[0x56a947f83e30] = 0;
		*node[0x56a947f83e60] = 2;
		*node[0x56a947f83e90] = 1;
		*node[0x56a947f83ec0] = ;;
		*node[0x56a947f83ef0] = print;
		*node[0x56a947f83f20] = 8;
		*node[0x56a947f83f50] = ;;
		*node[0x56a947f83f80] = print;
		*node[0x56a947f83fb0] = 10;
		*node[0x56a947f83fe0] = ;;
		*node[0x56a947f84010] = return;
		*node[0x56a947f84040] = 0;
		*node[0x56a947f84070] = ;;
		*node[0x56a947f840a0] = 6;
		*node[0x56a947f840d0] = 1;
		*node[0x56a947f84100] = 2;
		*node[0x56a947f84130] = 3;
		*node[0x56a947f84160] = ;;
		*node[0x56a947f84190] = =;
		*node[0x56a947f841c0] = 7;
		*node[0x56a947f85a50] = -1;
		*node[0x56a947f84280] = ;;
		*node[0x56a947f842b0] = =;
		*node[0x56a947f842e0] = 8;
		*node[0x56a947f84310] = 1;
		*node[0x56a947f84340] = ;;
		*node[0x56a947f84370] = =;
		*node[0x56a947f843a0] = 11;
		*node[0x56a947f843d0] = 2;
		*node[0x56a947f84400] = ;;
		*node[0x56a947f84430] = if;
		*node[0x56a947f84460] = op_no;
		*node[0x56a947f84490] = ==;
		*node[0x56a947f844c0] = 3;
		*node[0x56a947f844f0] = 0;
		*node[0x56a947f84520] = ;;
		*node[0x56a947f84550] = =;
		*node[0x56a947f84580] = 12;
		*node[0x56a947f845b0] = 0;
		*node[0x56a947f845e0] = ;;
		*node[0x56a947f84610] = =;
		*node[0x56a947f84640] = 13;
		*node[0x56a947f84670] = /;
		*node[0x56a947f846a0] = -;
		*node[0x56a947f846d0] = 0;
		*node[0x56a947f84700] = 2;
		*node[0x56a947f84730] = 1;
		*node[0x56a947f84760] = ;;
		*node[0x56a947f84790] = print;
		*node[0x56a947f847c0] = 11;
		*node[0x56a947f847f0] = ;;
		*node[0x56a947f84820] = print;
		*node[0x56a947f84850] = 12;
		*node[0x56a947f84880] = 13;
		*node[0x56a947f848b0] = ;;
		*node[0x56a947f848e0] = =;
		*node[0x56a947f84910] = 14;
		*node[0x56a947f84940] = -;
		*node[0x56a947f84970] = *;
		*node[0x56a947f849a0] = 2;
		*node[0x56a947f849d0] = 2;
		*node[0x56a947f84a00] = *;
		*node[0x56a947f84a30] = *;
		*node[0x56a947f84a60] = 4;
		*node[0x56a947f84a90] = 1;
		*node[0x56a947f84ac0] = 3;
		*node[0x56a947f84af0] = ;;
		*node[0x56a947f84b20] = if;
		*node[0x56a947f84b50] = op_no;
		*node[0x56a947f84b80] = >;
		*node[0x56a947f84bb0] = 14;
		*node[0x56a947f84be0] = 0;
		*node[0x56a947f84c10] = ;;
		*node[0x56a947f84c40] = =;
		*node[0x56a947f84c70] = 15;
		*node[0x56a947f84ca0] = sqrt;
		*node[0x56a947f84cd0] = 1;
		*node[0x56a947f84d00] = 14;
		*node[0x56a947f84d30] = ;;
		*node[0x56a947f84d60] = =;
		*node[0x56a947f84d90] = 12;
		*node[0x56a947f84dc0] = /;
		*node[0x56a947f84df0] = -;
		*node[0x56a947f84e20] = -;
		*node[0x56a947f84e50] = 0;
		*node[0x56a947f84e80] = 2;
		*node[0x56a947f84eb0] = 15;
		*node[0x56a947f84ee0] = *;
		*node[0x56a947f84f10] = 2;
		*node[0x56a947f84f40] = 1;
		*node[0x56a947f84f70] = ;;
		*node[0x56a947f84fa0] = =;
		*node[0x56a947f84fd0] = 13;
		*node[0x56a947f85000] = /;
		*node[0x56a947f85030] = +;
		*node[0x56a947f85060] = -;
		*node[0x56a947f85090] = 0;
		*node[0x56a947f850c0] = 2;
		*node[0x56a947f850f0] = 15;
		*node[0x56a947f85120] = *;
		*node[0x56a947f85150] = 2;
		*node[0x56a947f85180] = 1;
		*node[0x56a947f851b0] = ;;
		*node[0x56a947f851e0] = print;
		*node[0x56a947f85210] = 11;
		*node[0x56a947f85240] = ;;
		*node[0x56a947f85270] = print;
		*node[0x56a947f852a0] = 12;
		*node[0x56a947f852d0] = 13;
		*node[0x56a947f85300] = if;
		*node[0x56a947f85330] = op_no;
		*node[0x56a947f85360] = ==;
		*node[0x56a947f85390] = 14;
		*node[0x56a947f853c0] = 0;
		*node[0x56a947f853f0] = ;;
		*node[0x56a947f85420] = =;
		*node[0x56a947f85450] = 10;
		*node[0x56a947f85480] = /;
		*node[0x56a947f854b0] = -;
		*node[0x56a947f854e0] = 0;
		*node[0x56a947f85510] = 2;
		*node[0x56a947f85540] = *;
		*node[0x56a947f85570] = 2;
		*node[0x56a947f855a0] = 1;
		*node[0x56a947f855d0] = ;;
		*node[0x56a947f85600] = print;
		*node[0x56a947f85630] = 8;
		*node[0x56a947f85660] = ;;
		*node[0x56a947f85690] = print;
		*node[0x56a947f856c0] = 10;
		*node[0x56a947f856f0] = ;;
		*node[0x56a947f85720] = print;
		*node[0x56a947f85750] = 7;
		*node[0x56a947f85780] = ;;
		*node[0x56a947f857b0] = return;
		*node[0x56a947f857e0] = 0;
		*node[0x56a947f85810] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc4e5da4e0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5c761ac4f220] = ;;
		*node[0x5c761ac4f250] = 0;
		*node[0x5c761ac4f280] = ;;
		*node[0x5c761ac4f2b0] = input;
		*node[0x5c761ac4f2e0] = 1;
		*node[0x5c761ac4f310] = 2;
		*node[0x5c761ac4f340] = 3;
		*node[0x5c761ac4f370] = ;;
		*node[0x5c761ac4f3d0] = 1;
		*node[0x5c761ac4f400] = 2;
		*node[0x5c761ac4f430] = 3;
		*node[0x5c761ac4f460] = ;;
		*node[0x5c761ac4f490] = 4;
		*node[0x5c761ac4f4c0] = 1;
		*node[0x5c761ac4f4f0] = 2;
		*node[0x5c761ac4f520] = 3;
		*node[0x5c761ac4f550] = ;;
		*node[0x5c761ac4f580] = if;
		*node[0x5c761ac4f5b0] = op_no;
		*node[0x5c761ac4f640] = ==;
		*node[0x5c761ac4f5e0] = 1;
		*node[0x5c761ac4f610] = 0;
		*node[0x5c761ac4f670] = ;;
		*node[0x5c761ac4f6d0] = 2;
		*node[0x5c761ac4f700] = 3;
		*node[0x5c761ac4f730] = ;;
		*node[0x5c761ac4f790] = 1;
		*node[0x5c761ac4f7c0] = 2;
		*node[0x5c761ac4f7f0] = 3;
		*node[0x5c761ac4f820] = ;;
		*node[0x5c761ac4f850] = 5;
		*node[0x5c761ac4f880] = 1;
		*node[0x5c761ac4f8b0] = 2;
		*node[0x5c761ac4f8e0] = ;;
		*node[0x5c761ac4f9d0] = =;
		*node[0x5c761ac4f910] = 7;
		*node[0x5c761ac4f9a0] = -;
		*node[0x5c761ac4f940] = 0;
		*node[0x5c761ac4f970] = 1;
		*node[0x5c761ac4fa00] = ;;
		*node[0x5c761ac4fa90] = =;
		*node[0x5c761ac4fa30] = 8;
		*node[0x5c761ac4fa60] = 1;
		*node[0x5c761ac4fac0] = ;;
		*node[0x5c761ac4fb50] = =;
		*node[0x5c761ac4faf0] = 9;
		*node[0x5c761ac4fb20] = 1000;
		*node[0x5c761ac4fb80] = ;;
		*node[0x5c761ac4fbb0] = if;
		*node[0x5c761ac4fbe0] = op_no;
		*node[0x5c761ac4fc70] = ==;
		*node[0x5c761ac4fc10] = 1;
		*node[0x5c761ac4fc40] = 0;
		*node[0x5c761ac4fca0] = ;;
		*node[0x5c761ac4fcd0] = if;
		*node[0x5c761ac4fd00] = op_no;
		*node[0x5c761ac4fd90] = ==;
		*node[0x5c761ac4fd30] = 2;
		*node[0x5c761ac4fd60] = 0;
		*node[0x5c761ac4fdc0] = ;;
		*node[0x5c761ac4fdf0] = print;
		*node[0x5c761ac4fe20] = 9;
		*node[0x5c761ac4fe50] = ;;
		*node[0x5c761ac4fe80] = print;
		*node[0x5c761ac4feb0] = 7;
		*node[0x5c761ac4fee0] = ;;
		*node[0x5c761ac50030] = =;
		*node[0x5c761ac4ff10] = 10;
		*node[0x5c761ac50000] = /;
		*node[0x5c761ac4ffa0] = -;
		*node[0x5c761ac4ff40] = 0;
		*node[0x5c761ac4ff70] = 2;
		*node[0x5c761ac4ffd0] = 1;
		*node[0x5c761ac50060] = ;;
		*node[0x5c761ac50090] = print;
		*node[0x5c761ac500c0] = 8;
		*node[0x5c761ac500f0] = ;;
		*node[0x5c761ac50120] = print;
		*node[0x5c761ac50150] = 10;
		*node[0x5c761ac50180] = ;;
		*node[0x5c761ac501b0] = return;
		*node[0x5c761ac501e0] = 0;
		*node[0x5c761ac50210] = ;;
		*node[0x5c761ac50240] = 6;
		*node[0x5c761ac50270] = 1;
		*node[0x5c761ac502a0] = 2;
		*node[0x5c761ac502d0] = 3;
		*node[0x5c761ac50300] = ;;
		*node[0x5c761ac503f0] = =;
		*node[0x5c761ac50330] = 7;
		*node[0x5c761ac503c0] = -;
		*node[0x5c761ac50360] = 0;
		*node[0x5c761ac50390] = 1;
		*node[0x5c761ac50420] = ;;
		*node[0x5c761ac504b0] = =;
		*node[0x5c761ac50450] = 8;
		*node[0x5c761ac50480] = 1;
		*node[0x5c761ac504e0] = ;;
		*node[0x5c761ac50570] = =;
		*node[0x5c761ac50510] = 11;
		*node[0x5c761ac50540] = 2;
		*node[0x5c761ac505a0] = ;;
		*node[0x5c761ac505d0] = if;
		*node[0x5c761ac50600] = op_no;
		*node[0x5c761ac50690] = ==;
		*node[0x5c761ac50630] = 3;
		*node[0x5c761ac50660] = 0;
		*node[0x5c761ac506c0] = ;;
		*node[0x5c761ac50750] = =;
		*node[0x5c761ac506f0] = 12;
		*node[0x5c761ac50720] = 0;
		*node[0x5c761ac50780] = ;;
		*node[0x5c761ac508d0] = =;
		*node[0x5c761ac507b0] = 13;
		*node[0x5c761ac508a0] = /;
		*node[0x5c761ac50840] = -;
		*node[0x5c761ac507e0] = 0;
		*node[0x5c761ac50810] = 2;
		*node[0x5c761ac50870] = 1;
		*node[0x5c761ac50900] = ;;
		*node[0x5c761ac50930] = print;
		*node[0x5c761ac50960] = 11;
		*node[0x5c761ac50990] = ;;
		*node[0x5c761ac509c0] = print;
		*node[0x5c761ac509f0] = 12;
		*node[0x5c761ac50a20] = 13;
		*node[0x5c761ac50a50] = ;;
		*node[0x5c761ac50c60] = =;
		*node[0x5c761ac50a80] = 14;
		*node[0x5c761ac50c30] = -;
		*node[0x5c761ac50b10] = *;
		*node[0x5c761ac50ab0] = 2;
		*node[0x5c761ac50ae0] = 2;
		*node[0x5c761ac50c00] = *;
		*node[0x5c761ac50ba0] = *;
		*node[0x5c761ac50b40] = 4;
		*node[0x5c761ac50b70] = 1;
		*node[0x5c761ac50bd0] = 3;
		*node[0x5c761ac50c90] = ;;
		*node[0x5c761ac50cc0] = if;
		*node[0x5c761ac50cf0] = op_no;
		*node[0x5c761ac50d80] = >;
		*node[0x5c761ac50d20] = 14;
		*node[0x5c761ac50d50] = 0;
		*node[0x5c761ac50db0] = ;;
		*node[0x5c761ac50ea0] = =;
		*node[0x5c761ac50de0] = 15;
		*node[0x5c761ac50e70] = sqrt;
		*node[0x5c761ac50e40] = 1;
		*node[0x5c761ac50e10] = 14;
		*node[0x5c761ac50ed0] = ;;
		*node[0x5c761ac510e0] = =;
		*node[0x5c761ac50f00] = 12;
		*node[0x5c761ac510b0] = /;
		*node[0x5c761ac50ff0] = -;
		*node[0x5c761ac50f90] = -;
		*node[0x5c761ac50f30] = 0;
		*node[0x5c761ac50f60] = 2;
		*node[0x5c761ac50fc0] = 15;
		*node[0x5c761ac51080] = *;
		*node[0x5c761ac51020] = 2;
		*node[0x5c761ac51050] = 1;
		*node[0x5c761ac51110] = ;;
		*node[0x5c761ac51320] = =;
		*node[0x5c761ac51140] = 13;
		*node[0x5c761ac512f0] = /;
		*node[0x5c761ac51230] = +;
		*node[0x5c761ac511d0] = -;
		*node[0x5c761ac51170] = 0;
		*node[0x5c761ac511a0] = 2;
		*node[0x5c761ac51200] = 15;
		*node[0x5c761ac512c0] = *;
		*node[0x5c761ac51260] = 2;
		*node[0x5c761ac51290] = 1;
		*node[0x5c761ac51350] = ;;
		*node[0x5c761ac51380] = print;
		*node[0x5c761ac513b0] = 11;
		*node[0x5c761ac513e0] = ;;
		*node[0x5c761ac51410] = print;
		*node[0x5c761ac51440] = 12;
		*node[0x5c761ac51470] = 13;
		*node[0x5c761ac514a0] = if;
		*node[0x5c761ac514d0] = op_no;
		*node[0x5c761ac51560] = ==;
		*node[0x5c761ac51500] = 14;
		*node[0x5c761ac51530] = 0;
		*node[0x5c761ac51590] = ;;
		*node[0x5c761ac51740] = =;
		*node[0x5c761ac515c0] = 10;
		*node[0x5c761ac51710] = /;
		*node[0x5c761ac51650] = -;
		*node[0x5c761ac515f0] = 0;
		*node[0x5c761ac51620] = 2;
		*node[0x5c761ac516e0] = *;
		*node[0x5c761ac51680] = 2;
		*node[0x5c761ac516b0] = 1;
		*node[0x5c761ac51770] = ;;
		*node[0x5c761ac517a0] = print;
		*node[0x5c761ac517d0] = 8;
		*node[0x5c761ac51800] = ;;
		*node[0x5c761ac51830] = print;
		*node[0x5c761ac51860] = 10;
		*node[0x5c761ac51890] = ;;
		*node[0x5c761ac518c0] = print;
		*node[0x5c761ac518f0] = 7;
		*node[0x5c761ac51920] = ;;
		*node[0x5c761ac51950] = return;
		*node[0x5c761ac51980] = 0;
		*node[0x5c761ac519b0] = ;;
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcaa10c140] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5834ead59220] = ;;

		*node[0x5834ead59250] = 0;

		*node[0x5834ead59280] = ;;

		*node[0x5834ead592b0] = input;

		*node[0x5834ead592e0] = 1;

		*node[0x5834ead59310] = 2;

		*node[0x5834ead59340] = 3;

		*node[0x5834ead59370] = ;;

		*node[0x5834ead593d0] = 1;

		*node[0x5834ead59400] = 2;

		*node[0x5834ead59430] = 3;

		*node[0x5834ead59460] = ;;

		*node[0x5834ead59490] = 4;

		*node[0x5834ead594c0] = 1;

		*node[0x5834ead594f0] = 2;

		*node[0x5834ead59520] = 3;

		*node[0x5834ead59550] = ;;

		*node[0x5834ead59580] = if;

		*node[0x5834ead595b0] = op_no;

		*node[0x5834ead59640] = ==;

		*node[0x5834ead595e0] = 1;

		*node[0x5834ead59610] = 0;

		*node[0x5834ead59670] = ;;

		*node[0x5834ead596d0] = 2;

		*node[0x5834ead59700] = 3;

		*node[0x5834ead59730] = ;;

		*node[0x5834ead59790] = 1;

		*node[0x5834ead597c0] = 2;

		*node[0x5834ead597f0] = 3;

		*node[0x5834ead59820] = ;;

		*node[0x5834ead59850] = 5;

		*node[0x5834ead59880] = 1;

		*node[0x5834ead598b0] = 2;

		*node[0x5834ead598e0] = ;;

		*node[0x5834ead599d0] = =;

		*node[0x5834ead59910] = 7;

		*node[0x5834ead599a0] = -;

		*node[0x5834ead59940] = 0;

		*node[0x5834ead59970] = 1;

		*node[0x5834ead59a00] = ;;

		*node[0x5834ead59a90] = =;

		*node[0x5834ead59a30] = 8;

		*node[0x5834ead59a60] = 1;

		*node[0x5834ead59ac0] = ;;

		*node[0x5834ead59b50] = =;

		*node[0x5834ead59af0] = 9;

		*node[0x5834ead59b20] = 1000;

		*node[0x5834ead59b80] = ;;

		*node[0x5834ead59bb0] = if;

		*node[0x5834ead59be0] = op_no;

		*node[0x5834ead59c70] = ==;

		*node[0x5834ead59c10] = 1;

		*node[0x5834ead59c40] = 0;

		*node[0x5834ead59ca0] = ;;

		*node[0x5834ead59cd0] = if;

		*node[0x5834ead59d00] = op_no;

		*node[0x5834ead59d90] = ==;

		*node[0x5834ead59d30] = 2;

		*node[0x5834ead59d60] = 0;

		*node[0x5834ead59dc0] = ;;

		*node[0x5834ead59df0] = print;

		*node[0x5834ead59e20] = 9;

		*node[0x5834ead59e50] = ;;

		*node[0x5834ead59e80] = print;

		*node[0x5834ead59eb0] = 7;

		*node[0x5834ead59ee0] = ;;

		*node[0x5834ead5a030] = =;

		*node[0x5834ead59f10] = 10;

		*node[0x5834ead5a000] = /;

		*node[0x5834ead59fa0] = -;

		*node[0x5834ead59f40] = 0;

		*node[0x5834ead59f70] = 2;

		*node[0x5834ead59fd0] = 1;

		*node[0x5834ead5a060] = ;;

		*node[0x5834ead5a090] = print;

		*node[0x5834ead5a0c0] = 8;

		*node[0x5834ead5a0f0] = ;;

		*node[0x5834ead5a120] = print;

		*node[0x5834ead5a150] = 10;

		*node[0x5834ead5a180] = ;;

		*node[0x5834ead5a1b0] = return;

		*node[0x5834ead5a1e0] = 0;

		*node[0x5834ead5a210] = ;;

		*node[0x5834ead5a240] = 6;

		*node[0x5834ead5a270] = 1;

		*node[0x5834ead5a2a0] = 2;

		*node[0x5834ead5a2d0] = 3;

		*node[0x5834ead5a300] = ;;

		*node[0x5834ead5a3f0] = =;

		*node[0x5834ead5a330] = 7;

		*node[0x5834ead5a3c0] = -;

		*node[0x5834ead5a360] = 0;

		*node[0x5834ead5a390] = 1;

		*node[0x5834ead5a420] = ;;

		*node[0x5834ead5a4b0] = =;

		*node[0x5834ead5a450] = 8;

		*node[0x5834ead5a480] = 1;

		*node[0x5834ead5a4e0] = ;;

		*node[0x5834ead5a570] = =;

		*node[0x5834ead5a510] = 11;

		*node[0x5834ead5a540] = 2;

		*node[0x5834ead5a5a0] = ;;

		*node[0x5834ead5a5d0] = if;

		*node[0x5834ead5a600] = op_no;

		*node[0x5834ead5a690] = ==;

		*node[0x5834ead5a630] = 3;

		*node[0x5834ead5a660] = 0;

		*node[0x5834ead5a6c0] = ;;

		*node[0x5834ead5a750] = =;

		*node[0x5834ead5a6f0] = 12;

		*node[0x5834ead5a720] = 0;

		*node[0x5834ead5a780] = ;;

		*node[0x5834ead5a8d0] = =;

		*node[0x5834ead5a7b0] = 13;

		*node[0x5834ead5a8a0] = /;

		*node[0x5834ead5a840] = -;

		*node[0x5834ead5a7e0] = 0;

		*node[0x5834ead5a810] = 2;

		*node[0x5834ead5a870] = 1;

		*node[0x5834ead5a900] = ;;

		*node[0x5834ead5a930] = print;

		*node[0x5834ead5a960] = 11;

		*node[0x5834ead5a990] = ;;

		*node[0x5834ead5a9c0] = print;

		*node[0x5834ead5a9f0] = 12;

		*node[0x5834ead5aa20] = 13;

		*node[0x5834ead5aa50] = ;;

		*node[0x5834ead5ac60] = =;

		*node[0x5834ead5aa80] = 14;

		*node[0x5834ead5ac30] = -;

		*node[0x5834ead5ab10] = *;

		*node[0x5834ead5aab0] = 2;

		*node[0x5834ead5aae0] = 2;

		*node[0x5834ead5ac00] = *;

		*node[0x5834ead5aba0] = *;

		*node[0x5834ead5ab40] = 4;

		*node[0x5834ead5ab70] = 1;

		*node[0x5834ead5abd0] = 3;

		*node[0x5834ead5ac90] = ;;

		*node[0x5834ead5acc0] = if;

		*node[0x5834ead5acf0] = op_no;

		*node[0x5834ead5ad80] = >;

		*node[0x5834ead5ad20] = 14;

		*node[0x5834ead5ad50] = 0;

		*node[0x5834ead5adb0] = ;;

		*node[0x5834ead5aea0] = =;

		*node[0x5834ead5ade0] = 15;

		*node[0x5834ead5ae70] = sqrt;

		*node[0x5834ead5ae40] = 1;

		*node[0x5834ead5ae10] = 14;

		*node[0x5834ead5aed0] = ;;

		*node[0x5834ead5b0e0] = =;

		*node[0x5834ead5af00] = 12;

		*node[0x5834ead5b0b0] = /;

		*node[0x5834ead5aff0] = -;

		*node[0x5834ead5af90] = -;

		*node[0x5834ead5af30] = 0;

		*node[0x5834ead5af60] = 2;

		*node[0x5834ead5afc0] = 15;

		*node[0x5834ead5b080] = *;

		*node[0x5834ead5b020] = 2;

		*node[0x5834ead5b050] = 1;

		*node[0x5834ead5b110] = ;;

		*node[0x5834ead5b320] = =;

		*node[0x5834ead5b140] = 13;

		*node[0x5834ead5b2f0] = /;

		*node[0x5834ead5b230] = +;

		*node[0x5834ead5b1d0] = -;

		*node[0x5834ead5b170] = 0;

		*node[0x5834ead5b1a0] = 2;

		*node[0x5834ead5b200] = 15;

		*node[0x5834ead5b2c0] = *;

		*node[0x5834ead5b260] = 2;

		*node[0x5834ead5b290] = 1;

		*node[0x5834ead5b350] = ;;

		*node[0x5834ead5b380] = print;

		*node[0x5834ead5b3b0] = 11;

		*node[0x5834ead5b3e0] = ;;

		*node[0x5834ead5b410] = print;

		*node[0x5834ead5b440] = 12;

		*node[0x5834ead5b470] = 13;

		*node[0x5834ead5b4a0] = if;

		*node[0x5834ead5b4d0] = op_no;

		*node[0x5834ead5b560] = ==;

		*node[0x5834ead5b500] = 14;

		*node[0x5834ead5b530] = 0;

		*node[0x5834ead5b590] = ;;

		*node[0x5834ead5b740] = =;

		*node[0x5834ead5b5c0] = 10;

		*node[0x5834ead5b710] = /;

		*node[0x5834ead5b650] = -;

		*node[0x5834ead5b5f0] = 0;

		*node[0x5834ead5b620] = 2;

		*node[0x5834ead5b6e0] = *;

		*node[0x5834ead5b680] = 2;

		*node[0x5834ead5b6b0] = 1;

		*node[0x5834ead5b770] = ;;

		*node[0x5834ead5b7a0] = print;

		*node[0x5834ead5b7d0] = 8;

		*node[0x5834ead5b800] = ;;

		*node[0x5834ead5b830] = print;

		*node[0x5834ead5b860] = 10;

		*node[0x5834ead5b890] = ;;

		*node[0x5834ead5b8c0] = print;

		*node[0x5834ead5b8f0] = 7;

		*node[0x5834ead5b920] = ;;

		*node[0x5834ead5b950] = return;

		*node[0x5834ead5b980] = 0;

		*node[0x5834ead5b9b0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffeaac11620] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x59a72e32b220] = ;;

		*node[0x59a72e32b250] = 0;

		*node[0x59a72e32b280] = ;;

		*node[0x59a72e32b2b0] = input;

		*node[0x59a72e32b2e0] = 1;

		*node[0x59a72e32b310] = 2;

		*node[0x59a72e32b340] = 3;

		*node[0x59a72e32b370] = ;;

		*node[0x59a72e32b3d0] = 1;

		*node[0x59a72e32b400] = 2;

		*node[0x59a72e32b430] = 3;

		*node[0x59a72e32b460] = ;;

		*node[0x59a72e32b490] = 4;

		*node[0x59a72e32b4c0] = 1;

		*node[0x59a72e32b4f0] = 2;

		*node[0x59a72e32b520] = 3;

		*node[0x59a72e32b550] = ;;

		*node[0x59a72e32b580] = if;

		*node[0x59a72e32b5b0] = op_no;

		*node[0x59a72e32b640] = ==;

		*node[0x59a72e32b5e0] = 1;

		*node[0x59a72e32b610] = 0;

		*node[0x59a72e32b670] = ;;

		*node[0x59a72e32b6d0] = 2;

		*node[0x59a72e32b700] = 3;

		*node[0x59a72e32b730] = ;;

		*node[0x59a72e32b790] = 1;

		*node[0x59a72e32b7c0] = 2;

		*node[0x59a72e32b7f0] = 3;

		*node[0x59a72e32b820] = ;;

		*node[0x59a72e32b850] = 5;

		*node[0x59a72e32b880] = 1;

		*node[0x59a72e32b8b0] = 2;

		*node[0x59a72e32b8e0] = ;;

		*node[0x59a72e32b9d0] = =;

		*node[0x59a72e32b910] = 7;

		*node[0x59a72e32b9a0] = -;

		*node[0x59a72e32b940] = 0;

		*node[0x59a72e32b970] = 1;

		*node[0x59a72e32ba00] = ;;

		*node[0x59a72e32ba90] = =;

		*node[0x59a72e32ba30] = 8;

		*node[0x59a72e32ba60] = 1;

		*node[0x59a72e32bac0] = ;;

		*node[0x59a72e32bb50] = =;

		*node[0x59a72e32baf0] = 9;

		*node[0x59a72e32bb20] = 1000;

		*node[0x59a72e32bb80] = ;;

		*node[0x59a72e32bbb0] = if;

		*node[0x59a72e32bbe0] = op_no;

		*node[0x59a72e32bc70] = ==;

		*node[0x59a72e32bc10] = 1;

		*node[0x59a72e32bc40] = 0;

		*node[0x59a72e32bca0] = ;;

		*node[0x59a72e32bcd0] = if;

		*node[0x59a72e32bd00] = op_no;

		*node[0x59a72e32bd90] = ==;

		*node[0x59a72e32bd30] = 2;

		*node[0x59a72e32bd60] = 0;

		*node[0x59a72e32bdc0] = ;;

		*node[0x59a72e32bdf0] = print;

		*node[0x59a72e32be20] = 9;

		*node[0x59a72e32be50] = ;;

		*node[0x59a72e32be80] = print;

		*node[0x59a72e32beb0] = 7;

		*node[0x59a72e32bee0] = ;;

		*node[0x59a72e32c030] = =;

		*node[0x59a72e32bf10] = 10;

		*node[0x59a72e32c000] = /;

		*node[0x59a72e32bfa0] = -;

		*node[0x59a72e32bf40] = 0;

		*node[0x59a72e32bf70] = 2;

		*node[0x59a72e32bfd0] = 1;

		*node[0x59a72e32c060] = ;;

		*node[0x59a72e32c090] = print;

		*node[0x59a72e32c0c0] = 8;

		*node[0x59a72e32c0f0] = ;;

		*node[0x59a72e32c120] = print;

		*node[0x59a72e32c150] = 10;

		*node[0x59a72e32c180] = ;;

		*node[0x59a72e32c1b0] = return;

		*node[0x59a72e32c1e0] = 0;

		*node[0x59a72e32c210] = ;;

		*node[0x59a72e32c240] = 6;

		*node[0x59a72e32c270] = 1;

		*node[0x59a72e32c2a0] = 2;

		*node[0x59a72e32c2d0] = 3;

		*node[0x59a72e32c300] = ;;

		*node[0x59a72e32c3f0] = =;

		*node[0x59a72e32c330] = 7;

		*node[0x59a72e32c3c0] = -;

		*node[0x59a72e32c360] = 0;

		*node[0x59a72e32c390] = 1;

		*node[0x59a72e32c420] = ;;

		*node[0x59a72e32c4b0] = =;

		*node[0x59a72e32c450] = 8;

		*node[0x59a72e32c480] = 1;

		*node[0x59a72e32c4e0] = ;;

		*node[0x59a72e32c570] = =;

		*node[0x59a72e32c510] = 11;

		*node[0x59a72e32c540] = 2;

		*node[0x59a72e32c5a0] = ;;

		*node[0x59a72e32c5d0] = if;

		*node[0x59a72e32c600] = op_no;

		*node[0x59a72e32c690] = ==;

		*node[0x59a72e32c630] = 3;

		*node[0x59a72e32c660] = 0;

		*node[0x59a72e32c6c0] = ;;

		*node[0x59a72e32c750] = =;

		*node[0x59a72e32c6f0] = 12;

		*node[0x59a72e32c720] = 0;

		*node[0x59a72e32c780] = ;;

		*node[0x59a72e32c8d0] = =;

		*node[0x59a72e32c7b0] = 13;

		*node[0x59a72e32c8a0] = /;

		*node[0x59a72e32c840] = -;

		*node[0x59a72e32c7e0] = 0;

		*node[0x59a72e32c810] = 2;

		*node[0x59a72e32c870] = 1;

		*node[0x59a72e32c900] = ;;

		*node[0x59a72e32c930] = print;

		*node[0x59a72e32c960] = 11;

		*node[0x59a72e32c990] = ;;

		*node[0x59a72e32c9c0] = print;

		*node[0x59a72e32c9f0] = 12;

		*node[0x59a72e32ca20] = 13;

		*node[0x59a72e32ca50] = ;;

		*node[0x59a72e32cc60] = =;

		*node[0x59a72e32ca80] = 14;

		*node[0x59a72e32cc30] = -;

		*node[0x59a72e32cb10] = *;

		*node[0x59a72e32cab0] = 2;

		*node[0x59a72e32cae0] = 2;

		*node[0x59a72e32cc00] = *;

		*node[0x59a72e32cba0] = *;

		*node[0x59a72e32cb40] = 4;

		*node[0x59a72e32cb70] = 1;

		*node[0x59a72e32cbd0] = 3;

		*node[0x59a72e32cc90] = ;;

		*node[0x59a72e32ccc0] = if;

		*node[0x59a72e32ccf0] = op_no;

		*node[0x59a72e32cd80] = >;

		*node[0x59a72e32cd20] = 14;

		*node[0x59a72e32cd50] = 0;

		*node[0x59a72e32cdb0] = ;;

		*node[0x59a72e32ce70] = =;

		*node[0x59a72e32cde0] = 15;

		*node[0x59a72e32ce40] = sqrt;

		*node[0x59a72e32ce10] = 14;

		*node[0x59a72e32cea0] = ;;

		*node[0x59a72e32d0b0] = =;

		*node[0x59a72e32ced0] = 12;

		*node[0x59a72e32d080] = /;

		*node[0x59a72e32cfc0] = -;

		*node[0x59a72e32cf60] = -;

		*node[0x59a72e32cf00] = 0;

		*node[0x59a72e32cf30] = 2;

		*node[0x59a72e32cf90] = 15;

		*node[0x59a72e32d050] = *;

		*node[0x59a72e32cff0] = 2;

		*node[0x59a72e32d020] = 1;

		*node[0x59a72e32d0e0] = ;;

		*node[0x59a72e32d2f0] = =;

		*node[0x59a72e32d110] = 13;

		*node[0x59a72e32d2c0] = /;

		*node[0x59a72e32d200] = +;

		*node[0x59a72e32d1a0] = -;

		*node[0x59a72e32d140] = 0;

		*node[0x59a72e32d170] = 2;

		*node[0x59a72e32d1d0] = 15;

		*node[0x59a72e32d290] = *;

		*node[0x59a72e32d230] = 2;

		*node[0x59a72e32d260] = 1;

		*node[0x59a72e32d320] = ;;

		*node[0x59a72e32d350] = print;

		*node[0x59a72e32d380] = 11;

		*node[0x59a72e32d3b0] = ;;

		*node[0x59a72e32d3e0] = print;

		*node[0x59a72e32d410] = 12;

		*node[0x59a72e32d440] = 13;

		*node[0x59a72e32d470] = if;

		*node[0x59a72e32d4a0] = op_no;

		*node[0x59a72e32d530] = ==;

		*node[0x59a72e32d4d0] = 14;

		*node[0x59a72e32d500] = 0;

		*node[0x59a72e32d560] = ;;

		*node[0x59a72e32d710] = =;

		*node[0x59a72e32d590] = 10;

		*node[0x59a72e32d6e0] = /;

		*node[0x59a72e32d620] = -;

		*node[0x59a72e32d5c0] = 0;

		*node[0x59a72e32d5f0] = 2;

		*node[0x59a72e32d6b0] = *;

		*node[0x59a72e32d650] = 2;

		*node[0x59a72e32d680] = 1;

		*node[0x59a72e32d740] = ;;

		*node[0x59a72e32d770] = print;

		*node[0x59a72e32d7a0] = 8;

		*node[0x59a72e32d7d0] = ;;

		*node[0x59a72e32d800] = print;

		*node[0x59a72e32d830] = 10;

		*node[0x59a72e32d860] = ;;

		*node[0x59a72e32d890] = print;

		*node[0x59a72e32d8c0] = 7;

		*node[0x59a72e32d8f0] = ;;

		*node[0x59a72e32d920] = return;

		*node[0x59a72e32d950] = 0;

		*node[0x59a72e32d980] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffdff06d590] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffdff06d590] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fffe3e1b040] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7fffe3e1b040] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffce4afda60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffce4afda60] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7ffeaf10fc60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7ffeaf10fc60] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
tree[0x7fff048c6e00] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: Syntax error[0m
[31mERROR: error when counting the number of variables[0m
tree[0x7fff048c6e00] "tree" called from ../tree/tree.cpp(275) destroy_tree
{
	is_init = 1
	{
		*root[NULL]
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcbe217860] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x63a1d48f5620] = ;;

		*node[0x63a1d48f5650] = 0;

		*node[0x63a1d48f5680] = ;;

		*node[0x63a1d48f56b0] = input;

		*node[0x63a1d48f56e0] = 1;

		*node[0x63a1d48f5710] = 2;

		*node[0x63a1d48f5740] = 3;

		*node[0x63a1d48f5770] = ;;

		*node[0x63a1d48f57d0] = 1;

		*node[0x63a1d48f5800] = 2;

		*node[0x63a1d48f5830] = 3;

		*node[0x63a1d48f5860] = ;;

		*node[0x63a1d48f5890] = 4;

		*node[0x63a1d48f58c0] = 1;

		*node[0x63a1d48f58f0] = 2;

		*node[0x63a1d48f5920] = 3;

		*node[0x63a1d48f5950] = ;;

		*node[0x63a1d48f5980] = if;

		*node[0x63a1d48f59b0] = op_no;

		*node[0x63a1d48f5a40] = ==;

		*node[0x63a1d48f59e0] = 1;

		*node[0x63a1d48f5a10] = 0;

		*node[0x63a1d48f5a70] = ;;

		*node[0x63a1d48f5ad0] = 2;

		*node[0x63a1d48f5b00] = 3;

		*node[0x63a1d48f5b30] = else;

		*node[0x63a1d48f5b60] = op_no;

		*node[0x63a1d48f5b90] = ;;

		*node[0x63a1d48f5bf0] = 1;

		*node[0x63a1d48f5c20] = 2;

		*node[0x63a1d48f5c50] = 3;

		*node[0x63a1d48f5c80] = ;;

		*node[0x63a1d48f5cb0] = 5;

		*node[0x63a1d48f5ce0] = 1;

		*node[0x63a1d48f5d10] = 2;

		*node[0x63a1d48f5d40] = ;;

		*node[0x63a1d48f5e30] = =;

		*node[0x63a1d48f5d70] = 7;

		*node[0x63a1d48f5e00] = -;

		*node[0x63a1d48f5da0] = 0;

		*node[0x63a1d48f5dd0] = 1;

		*node[0x63a1d48f5e60] = ;;

		*node[0x63a1d48f5ef0] = =;

		*node[0x63a1d48f5e90] = 8;

		*node[0x63a1d48f5ec0] = 1;

		*node[0x63a1d48f5f20] = ;;

		*node[0x63a1d48f5fb0] = =;

		*node[0x63a1d48f5f50] = 9;

		*node[0x63a1d48f5f80] = 1000;

		*node[0x63a1d48f5fe0] = ;;

		*node[0x63a1d48f6010] = if;

		*node[0x63a1d48f6040] = op_no;

		*node[0x63a1d48f60d0] = ==;

		*node[0x63a1d48f6070] = 1;

		*node[0x63a1d48f60a0] = 0;

		*node[0x63a1d48f6100] = ;;

		*node[0x63a1d48f6130] = if;

		*node[0x63a1d48f6160] = op_no;

		*node[0x63a1d48f61f0] = ==;

		*node[0x63a1d48f6190] = 2;

		*node[0x63a1d48f61c0] = 0;

		*node[0x63a1d48f6220] = ;;

		*node[0x63a1d48f6250] = print;

		*node[0x63a1d48f6280] = 9;

		*node[0x63a1d48f62b0] = else;

		*node[0x63a1d48f62e0] = op_no;

		*node[0x63a1d48f6310] = ;;

		*node[0x63a1d48f6340] = print;

		*node[0x63a1d48f6370] = 7;

		*node[0x63a1d48f63a0] = else;

		*node[0x63a1d48f63d0] = op_no;

		*node[0x63a1d48f6400] = ;;

		*node[0x63a1d48f6550] = =;

		*node[0x63a1d48f6430] = 10;

		*node[0x63a1d48f6520] = /;

		*node[0x63a1d48f64c0] = -;

		*node[0x63a1d48f6460] = 0;

		*node[0x63a1d48f6490] = 2;

		*node[0x63a1d48f64f0] = 1;

		*node[0x63a1d48f6580] = ;;

		*node[0x63a1d48f65b0] = print;

		*node[0x63a1d48f65e0] = 8;

		*node[0x63a1d48f6610] = ;;

		*node[0x63a1d48f6640] = print;

		*node[0x63a1d48f6670] = 10;

		*node[0x63a1d48f66a0] = ;;

		*node[0x63a1d48f66d0] = return;

		*node[0x63a1d48f6700] = 0;

		*node[0x63a1d48f6730] = ;;

		*node[0x63a1d48f6760] = 6;

		*node[0x63a1d48f6790] = 1;

		*node[0x63a1d48f67c0] = 2;

		*node[0x63a1d48f67f0] = 3;

		*node[0x63a1d48f6820] = ;;

		*node[0x63a1d48f6910] = =;

		*node[0x63a1d48f6850] = 7;

		*node[0x63a1d48f68e0] = -;

		*node[0x63a1d48f6880] = 0;

		*node[0x63a1d48f68b0] = 1;

		*node[0x63a1d48f6940] = ;;

		*node[0x63a1d48f69d0] = =;

		*node[0x63a1d48f6970] = 8;

		*node[0x63a1d48f69a0] = 1;

		*node[0x63a1d48f6a00] = ;;

		*node[0x63a1d48f6a90] = =;

		*node[0x63a1d48f6a30] = 11;

		*node[0x63a1d48f6a60] = 2;

		*node[0x63a1d48f6ac0] = ;;

		*node[0x63a1d48f6af0] = if;

		*node[0x63a1d48f6b20] = op_no;

		*node[0x63a1d48f6bb0] = ==;

		*node[0x63a1d48f6b50] = 3;

		*node[0x63a1d48f6b80] = 0;

		*node[0x63a1d48f6be0] = ;;

		*node[0x63a1d48f6c70] = =;

		*node[0x63a1d48f6c10] = 12;

		*node[0x63a1d48f6c40] = 0;

		*node[0x63a1d48f6ca0] = ;;

		*node[0x63a1d48f6df0] = =;

		*node[0x63a1d48f6cd0] = 13;

		*node[0x63a1d48f6dc0] = /;

		*node[0x63a1d48f6d60] = -;

		*node[0x63a1d48f6d00] = 0;

		*node[0x63a1d48f6d30] = 2;

		*node[0x63a1d48f6d90] = 1;

		*node[0x63a1d48f6e20] = ;;

		*node[0x63a1d48f6e50] = print;

		*node[0x63a1d48f6e80] = 11;

		*node[0x63a1d48f6eb0] = ;;

		*node[0x63a1d48f6ee0] = print;

		*node[0x63a1d48f6f10] = 12;

		*node[0x63a1d48f6f40] = 13;

		*node[0x63a1d48f6f70] = else;

		*node[0x63a1d48f6fa0] = op_no;

		*node[0x63a1d48f6fd0] = ;;

		*node[0x63a1d48f71e0] = =;

		*node[0x63a1d48f7000] = 14;

		*node[0x63a1d48f71b0] = -;

		*node[0x63a1d48f7090] = *;

		*node[0x63a1d48f7030] = 2;

		*node[0x63a1d48f7060] = 2;

		*node[0x63a1d48f7180] = *;

		*node[0x63a1d48f7120] = *;

		*node[0x63a1d48f70c0] = 4;

		*node[0x63a1d48f70f0] = 1;

		*node[0x63a1d48f7150] = 3;

		*node[0x63a1d48f7210] = ;;

		*node[0x63a1d48f7240] = if;

		*node[0x63a1d48f7270] = op_no;

		*node[0x63a1d48f7300] = >;

		*node[0x63a1d48f72a0] = 14;

		*node[0x63a1d48f72d0] = 0;

		*node[0x63a1d48f7330] = ;;

		*node[0x63a1d48f73f0] = =;

		*node[0x63a1d48f7360] = 15;

		*node[0x63a1d48f73c0] = sqrt;

		*node[0x63a1d48f7390] = 14;

		*node[0x63a1d48f7420] = ;;

		*node[0x63a1d48f7630] = =;

		*node[0x63a1d48f7450] = 12;

		*node[0x63a1d48f7600] = /;

		*node[0x63a1d48f7540] = -;

		*node[0x63a1d48f74e0] = -;

		*node[0x63a1d48f7480] = 0;

		*node[0x63a1d48f74b0] = 2;

		*node[0x63a1d48f7510] = 15;

		*node[0x63a1d48f75d0] = *;

		*node[0x63a1d48f7570] = 2;

		*node[0x63a1d48f75a0] = 1;

		*node[0x63a1d48f7660] = ;;

		*node[0x63a1d48f7870] = =;

		*node[0x63a1d48f7690] = 13;

		*node[0x63a1d48f7840] = /;

		*node[0x63a1d48f7780] = +;

		*node[0x63a1d48f7720] = -;

		*node[0x63a1d48f76c0] = 0;

		*node[0x63a1d48f76f0] = 2;

		*node[0x63a1d48f7750] = 15;

		*node[0x63a1d48f7810] = *;

		*node[0x63a1d48f77b0] = 2;

		*node[0x63a1d48f77e0] = 1;

		*node[0x63a1d48f78a0] = ;;

		*node[0x63a1d48f78d0] = print;

		*node[0x63a1d48f7900] = 11;

		*node[0x63a1d48f7930] = ;;

		*node[0x63a1d48f7960] = print;

		*node[0x63a1d48f7990] = 12;

		*node[0x63a1d48f79c0] = 13;

		*node[0x63a1d48f79f0] = elseif;

		*node[0x63a1d48f7a20] = op_no;

		*node[0x63a1d48f7ab0] = ==;

		*node[0x63a1d48f7a50] = 14;

		*node[0x63a1d48f7a80] = 0;

		*node[0x63a1d48f7ae0] = ;;

		*node[0x63a1d48f7c90] = =;

		*node[0x63a1d48f7b10] = 10;

		*node[0x63a1d48f7c60] = /;

		*node[0x63a1d48f7ba0] = -;

		*node[0x63a1d48f7b40] = 0;

		*node[0x63a1d48f7b70] = 2;

		*node[0x63a1d48f7c30] = *;

		*node[0x63a1d48f7bd0] = 2;

		*node[0x63a1d48f7c00] = 1;

		*node[0x63a1d48f7cc0] = ;;

		*node[0x63a1d48f7cf0] = print;

		*node[0x63a1d48f7d20] = 8;

		*node[0x63a1d48f7d50] = ;;

		*node[0x63a1d48f7d80] = print;

		*node[0x63a1d48f7db0] = 10;

		*node[0x63a1d48f7de0] = else;

		*node[0x63a1d48f7e10] = op_no;

		*node[0x63a1d48f7e40] = ;;

		*node[0x63a1d48f7e70] = print;

		*node[0x63a1d48f7ea0] = 7;

		*node[0x63a1d48f7ed0] = ;;

		*node[0x63a1d48f7f00] = return;

		*node[0x63a1d48f7f30] = 0;

		*node[0x63a1d48f7f60] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffc3a57e20] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x653e9e6f9210] = ;;

		*node[0x653e9e6f9240] = 0;

		*node[0x653e9e6f9270] = ;;

		*node[0x653e9e6f92a0] = input;

		*node[0x653e9e6f92d0] = 1;

		*node[0x653e9e6f9300] = 2;

		*node[0x653e9e6f9330] = 3;

		*node[0x653e9e6f9360] = ;;

		*node[0x653e9e6f93c0] = 1;

		*node[0x653e9e6f93f0] = 2;

		*node[0x653e9e6f9420] = 3;

		*node[0x653e9e6f9450] = ;;

		*node[0x653e9e6f9480] = 4;

		*node[0x653e9e6f94b0] = 1;

		*node[0x653e9e6f94e0] = 2;

		*node[0x653e9e6f9510] = 3;

		*node[0x653e9e6f9540] = ;;

		*node[0x653e9e6f9570] = if;

		*node[0x653e9e6f95a0] = op_no;

		*node[0x653e9e6f9630] = ==;

		*node[0x653e9e6f95d0] = 1;

		*node[0x653e9e6f9600] = 0;

		*node[0x653e9e6f9660] = ;;

		*node[0x653e9e6f96c0] = 2;

		*node[0x653e9e6f96f0] = 3;

		*node[0x653e9e6f9720] = else;

		*node[0x653e9e6f9750] = op_no;

		*node[0x653e9e6f9b90] = ;;

		*node[0x653e9e6f9bf0] = 1;

		*node[0x653e9e6f9c20] = 2;

		*node[0x653e9e6f9c50] = 3;

		*node[0x653e9e6f9c80] = ;;

		*node[0x653e9e6f9cb0] = 5;

		*node[0x653e9e6f9ce0] = 1;

		*node[0x653e9e6f9d10] = 2;

		*node[0x653e9e6f9d40] = ;;

		*node[0x653e9e6f9e30] = =;

		*node[0x653e9e6f9d70] = 7;

		*node[0x653e9e6f9e00] = -;

		*node[0x653e9e6f9da0] = 0;

		*node[0x653e9e6f9dd0] = 1;

		*node[0x653e9e6f9e60] = ;;

		*node[0x653e9e6f9ef0] = =;

		*node[0x653e9e6f9e90] = 8;

		*node[0x653e9e6f9ec0] = 1;

		*node[0x653e9e6f9f20] = ;;

		*node[0x653e9e6f9fb0] = =;

		*node[0x653e9e6f9f50] = 9;

		*node[0x653e9e6f9f80] = 1000;

		*node[0x653e9e6f9fe0] = ;;

		*node[0x653e9e6fa010] = if;

		*node[0x653e9e6fa040] = op_no;

		*node[0x653e9e6fa0d0] = ==;

		*node[0x653e9e6fa070] = 1;

		*node[0x653e9e6fa0a0] = 0;

		*node[0x653e9e6fa100] = ;;

		*node[0x653e9e6fa130] = if;

		*node[0x653e9e6fa160] = op_no;

		*node[0x653e9e6fa1f0] = ==;

		*node[0x653e9e6fa190] = 2;

		*node[0x653e9e6fa1c0] = 0;

		*node[0x653e9e6fa220] = ;;

		*node[0x653e9e6fa250] = print;

		*node[0x653e9e6fa280] = 9;

		*node[0x653e9e6fa2b0] = else;

		*node[0x653e9e6fa2e0] = op_no;

		*node[0x653e9e6fa310] = ;;

		*node[0x653e9e6fa340] = print;

		*node[0x653e9e6fa370] = 7;

		*node[0x653e9e6fa3a0] = else;

		*node[0x653e9e6fa3d0] = op_no;

		*node[0x653e9e6fa400] = ;;

		*node[0x653e9e6fa550] = =;

		*node[0x653e9e6fa430] = 10;

		*node[0x653e9e6fa520] = /;

		*node[0x653e9e6fa4c0] = -;

		*node[0x653e9e6fa460] = 0;

		*node[0x653e9e6fa490] = 2;

		*node[0x653e9e6fa4f0] = 1;

		*node[0x653e9e6fa580] = ;;

		*node[0x653e9e6fa5b0] = print;

		*node[0x653e9e6fa5e0] = 8;

		*node[0x653e9e6fa610] = ;;

		*node[0x653e9e6fa640] = print;

		*node[0x653e9e6fa670] = 10;

		*node[0x653e9e6fa6a0] = ;;

		*node[0x653e9e6fa6d0] = return;

		*node[0x653e9e6fa700] = 0;

		*node[0x653e9e6fa730] = ;;

		*node[0x653e9e6fa760] = 6;

		*node[0x653e9e6fa790] = 1;

		*node[0x653e9e6fa7c0] = 2;

		*node[0x653e9e6fa7f0] = 3;

		*node[0x653e9e6fa820] = ;;

		*node[0x653e9e6fa910] = =;

		*node[0x653e9e6fa850] = 7;

		*node[0x653e9e6fa8e0] = -;

		*node[0x653e9e6fa880] = 0;

		*node[0x653e9e6fa8b0] = 1;

		*node[0x653e9e6fa940] = ;;

		*node[0x653e9e6fa9d0] = =;

		*node[0x653e9e6fa970] = 8;

		*node[0x653e9e6fa9a0] = 1;

		*node[0x653e9e6faa00] = ;;

		*node[0x653e9e6faa90] = =;

		*node[0x653e9e6faa30] = 11;

		*node[0x653e9e6faa60] = 2;

		*node[0x653e9e6faac0] = ;;

		*node[0x653e9e6faaf0] = if;

		*node[0x653e9e6fab20] = op_no;

		*node[0x653e9e6fabb0] = ==;

		*node[0x653e9e6fab50] = 3;

		*node[0x653e9e6fab80] = 0;

		*node[0x653e9e6fabe0] = ;;

		*node[0x653e9e6fac70] = =;

		*node[0x653e9e6fac10] = 12;

		*node[0x653e9e6fac40] = 0;

		*node[0x653e9e6faca0] = ;;

		*node[0x653e9e6fadf0] = =;

		*node[0x653e9e6facd0] = 13;

		*node[0x653e9e6fadc0] = /;

		*node[0x653e9e6fad60] = -;

		*node[0x653e9e6fad00] = 0;

		*node[0x653e9e6fad30] = 2;

		*node[0x653e9e6fad90] = 1;

		*node[0x653e9e6fae20] = ;;

		*node[0x653e9e6fae50] = print;

		*node[0x653e9e6fae80] = 11;

		*node[0x653e9e6faeb0] = ;;

		*node[0x653e9e6faee0] = print;

		*node[0x653e9e6faf10] = 12;

		*node[0x653e9e6faf40] = 13;

		*node[0x653e9e6faf70] = else;

		*node[0x653e9e6fafa0] = op_no;

		*node[0x653e9e6fafd0] = ;;

		*node[0x653e9e6fb1e0] = =;

		*node[0x653e9e6fb000] = 14;

		*node[0x653e9e6fb1b0] = -;

		*node[0x653e9e6fb090] = *;

		*node[0x653e9e6fb030] = 2;

		*node[0x653e9e6fb060] = 2;

		*node[0x653e9e6fb180] = *;

		*node[0x653e9e6fb120] = *;

		*node[0x653e9e6fb0c0] = 4;

		*node[0x653e9e6fb0f0] = 1;

		*node[0x653e9e6fb150] = 3;

		*node[0x653e9e6fb210] = ;;

		*node[0x653e9e6fb240] = if;

		*node[0x653e9e6fb270] = op_no;

		*node[0x653e9e6fb300] = >;

		*node[0x653e9e6fb2a0] = 14;

		*node[0x653e9e6fb2d0] = 0;

		*node[0x653e9e6fb330] = ;;

		*node[0x653e9e6fb3f0] = =;

		*node[0x653e9e6fb360] = 15;

		*node[0x653e9e6fb3c0] = sqrt;

		*node[0x653e9e6fb390] = 14;

		*node[0x653e9e6fb420] = ;;

		*node[0x653e9e6fb630] = =;

		*node[0x653e9e6fb450] = 12;

		*node[0x653e9e6fb600] = /;

		*node[0x653e9e6fb540] = -;

		*node[0x653e9e6fb4e0] = -;

		*node[0x653e9e6fb480] = 0;

		*node[0x653e9e6fb4b0] = 2;

		*node[0x653e9e6fb510] = 15;

		*node[0x653e9e6fb5d0] = *;

		*node[0x653e9e6fb570] = 2;

		*node[0x653e9e6fb5a0] = 1;

		*node[0x653e9e6fb660] = ;;

		*node[0x653e9e6fb870] = =;

		*node[0x653e9e6fb690] = 13;

		*node[0x653e9e6fb840] = /;

		*node[0x653e9e6fb780] = +;

		*node[0x653e9e6fb720] = -;

		*node[0x653e9e6fb6c0] = 0;

		*node[0x653e9e6fb6f0] = 2;

		*node[0x653e9e6fb750] = 15;

		*node[0x653e9e6fb810] = *;

		*node[0x653e9e6fb7b0] = 2;

		*node[0x653e9e6fb7e0] = 1;

		*node[0x653e9e6fb8a0] = ;;

		*node[0x653e9e6fb8d0] = print;

		*node[0x653e9e6fb900] = 11;

		*node[0x653e9e6fb930] = ;;

		*node[0x653e9e6fb960] = print;

		*node[0x653e9e6fb990] = 12;

		*node[0x653e9e6fb9c0] = 13;

		*node[0x653e9e6fb9f0] = elseif;

		*node[0x653e9e6fba20] = op_no;

		*node[0x653e9e6fbab0] = ==;

		*node[0x653e9e6fba50] = 14;

		*node[0x653e9e6fba80] = 0;

		*node[0x653e9e6fbae0] = ;;

		*node[0x653e9e6fbc90] = =;

		*node[0x653e9e6fbb10] = 10;

		*node[0x653e9e6fbc60] = /;

		*node[0x653e9e6fbba0] = -;

		*node[0x653e9e6fbb40] = 0;

		*node[0x653e9e6fbb70] = 2;

		*node[0x653e9e6fbc30] = *;

		*node[0x653e9e6fbbd0] = 2;

		*node[0x653e9e6fbc00] = 1;

		*node[0x653e9e6fbcc0] = ;;

		*node[0x653e9e6fbcf0] = print;

		*node[0x653e9e6fbd20] = 8;

		*node[0x653e9e6fbd50] = ;;

		*node[0x653e9e6fbd80] = print;

		*node[0x653e9e6fbdb0] = 10;

		*node[0x653e9e6fbde0] = else;

		*node[0x653e9e6fbe10] = op_no;

		*node[0x653e9e6fbe40] = ;;

		*node[0x653e9e6fbe70] = print;

		*node[0x653e9e6fbea0] = 7;

		*node[0x653e9e6fbed0] = ;;

		*node[0x653e9e6fbf00] = return;

		*node[0x653e9e6fbf30] = 0;

		*node[0x653e9e6fbf60] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffff703bc40] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5913057d3210] = ;;

		*node[0x5913057d3240] = 0;

		*node[0x5913057d3270] = ;;

		*node[0x5913057d32a0] = input;

		*node[0x5913057d32d0] = 1;

		*node[0x5913057d3300] = 2;

		*node[0x5913057d3330] = 3;

		*node[0x5913057d3360] = ;;

		*node[0x5913057d33c0] = 1;

		*node[0x5913057d33f0] = 2;

		*node[0x5913057d3420] = 3;

		*node[0x5913057d3450] = ;;

		*node[0x5913057d3480] = 4;

		*node[0x5913057d34b0] = 1;

		*node[0x5913057d34e0] = 2;

		*node[0x5913057d3510] = 3;

		*node[0x5913057d3540] = ;;

		*node[0x5913057d3570] = if;

		*node[0x5913057d35a0] = op_no;

		*node[0x5913057d3630] = ==;

		*node[0x5913057d35d0] = 1;

		*node[0x5913057d3600] = 0;

		*node[0x5913057d3660] = ;;

		*node[0x5913057d36c0] = 2;

		*node[0x5913057d36f0] = 3;

		*node[0x5913057d3720] = else;

		*node[0x5913057d3750] = op_no;

		*node[0x5913057d3780] = ;;

		*node[0x5913057d37e0] = 1;

		*node[0x5913057d3810] = 2;

		*node[0x5913057d3840] = 3;

		*node[0x5913057d3870] = ;;

		*node[0x5913057d38a0] = 5;

		*node[0x5913057d38d0] = 1;

		*node[0x5913057d3900] = 2;

		*node[0x5913057d3930] = ;;

		*node[0x5913057d3a20] = =;

		*node[0x5913057d3960] = 7;

		*node[0x5913057d39f0] = -;

		*node[0x5913057d3990] = 0;

		*node[0x5913057d39c0] = 1;

		*node[0x5913057d3a50] = ;;

		*node[0x5913057d3ae0] = =;

		*node[0x5913057d3a80] = 8;

		*node[0x5913057d3ab0] = 1;

		*node[0x5913057d3b10] = ;;

		*node[0x5913057d3ba0] = =;

		*node[0x5913057d3b40] = 9;

		*node[0x5913057d3b70] = 1000;

		*node[0x5913057d3bd0] = ;;

		*node[0x5913057d3c00] = if;

		*node[0x5913057d3c30] = op_no;

		*node[0x5913057d3cc0] = ==;

		*node[0x5913057d3c60] = 1;

		*node[0x5913057d3c90] = 0;

		*node[0x5913057d3cf0] = ;;

		*node[0x5913057d3d20] = if;

		*node[0x5913057d3d50] = op_no;

		*node[0x5913057d3de0] = ==;

		*node[0x5913057d3d80] = 2;

		*node[0x5913057d3db0] = 0;

		*node[0x5913057d3e10] = ;;

		*node[0x5913057d3e40] = print;

		*node[0x5913057d3e70] = 9;

		*node[0x5913057d3ea0] = else;

		*node[0x5913057d3ed0] = op_no;

		*node[0x5913057d3f00] = ;;

		*node[0x5913057d3f30] = print;

		*node[0x5913057d3f60] = 7;

		*node[0x5913057d3f90] = else;

		*node[0x5913057d3fc0] = op_no;

		*node[0x5913057d3ff0] = ;;

		*node[0x5913057d4140] = =;

		*node[0x5913057d4020] = 10;

		*node[0x5913057d4110] = /;

		*node[0x5913057d40b0] = -;

		*node[0x5913057d4050] = 0;

		*node[0x5913057d4080] = 2;

		*node[0x5913057d40e0] = 1;

		*node[0x5913057d4170] = ;;

		*node[0x5913057d41a0] = print;

		*node[0x5913057d41d0] = 8;

		*node[0x5913057d4200] = ;;

		*node[0x5913057d4230] = print;

		*node[0x5913057d4260] = 10;

		*node[0x5913057d4290] = ;;

		*node[0x5913057d42c0] = return;

		*node[0x5913057d42f0] = 0;

		*node[0x5913057d4320] = ;;

		*node[0x5913057d4350] = 6;

		*node[0x5913057d4380] = 1;

		*node[0x5913057d43b0] = 2;

		*node[0x5913057d43e0] = 3;

		*node[0x5913057d4410] = ;;

		*node[0x5913057d4500] = =;

		*node[0x5913057d4440] = 7;

		*node[0x5913057d44d0] = -;

		*node[0x5913057d4470] = 0;

		*node[0x5913057d44a0] = 1;

		*node[0x5913057d4530] = ;;

		*node[0x5913057d45c0] = =;

		*node[0x5913057d4560] = 8;

		*node[0x5913057d4590] = 1;

		*node[0x5913057d45f0] = ;;

		*node[0x5913057d4680] = =;

		*node[0x5913057d4620] = 11;

		*node[0x5913057d4650] = 2;

		*node[0x5913057d46b0] = ;;

		*node[0x5913057d46e0] = if;

		*node[0x5913057d4710] = op_no;

		*node[0x5913057d47a0] = ==;

		*node[0x5913057d4740] = 3;

		*node[0x5913057d4770] = 0;

		*node[0x5913057d47d0] = ;;

		*node[0x5913057d4860] = =;

		*node[0x5913057d4800] = 12;

		*node[0x5913057d4830] = 0;

		*node[0x5913057d4890] = ;;

		*node[0x5913057d49e0] = =;

		*node[0x5913057d48c0] = 13;

		*node[0x5913057d49b0] = /;

		*node[0x5913057d4950] = -;

		*node[0x5913057d48f0] = 0;

		*node[0x5913057d4920] = 2;

		*node[0x5913057d4980] = 1;

		*node[0x5913057d4a10] = ;;

		*node[0x5913057d4a40] = print;

		*node[0x5913057d4a70] = 11;

		*node[0x5913057d4aa0] = ;;

		*node[0x5913057d4ad0] = print;

		*node[0x5913057d4b00] = 12;

		*node[0x5913057d4b30] = 13;

		*node[0x5913057d4b60] = else;

		*node[0x5913057d4b90] = op_no;

		*node[0x5913057d4bc0] = ;;

		*node[0x5913057d4dd0] = =;

		*node[0x5913057d4bf0] = 14;

		*node[0x5913057d4da0] = -;

		*node[0x5913057d4c80] = *;

		*node[0x5913057d4c20] = 2;

		*node[0x5913057d4c50] = 2;

		*node[0x5913057d4d70] = *;

		*node[0x5913057d4d10] = *;

		*node[0x5913057d4cb0] = 4;

		*node[0x5913057d4ce0] = 1;

		*node[0x5913057d4d40] = 3;

		*node[0x5913057d4e00] = ;;

		*node[0x5913057d4e30] = if;

		*node[0x5913057d4e60] = op_no;

		*node[0x5913057d4ef0] = >;

		*node[0x5913057d4e90] = 14;

		*node[0x5913057d4ec0] = 0;

		*node[0x5913057d4f20] = ;;

		*node[0x5913057d4fe0] = =;

		*node[0x5913057d4f50] = 15;

		*node[0x5913057d4fb0] = sqrt;

		*node[0x5913057d4f80] = 14;

		*node[0x5913057d5010] = ;;

		*node[0x5913057d5220] = =;

		*node[0x5913057d5040] = 12;

		*node[0x5913057d51f0] = /;

		*node[0x5913057d5130] = -;

		*node[0x5913057d50d0] = -;

		*node[0x5913057d5070] = 0;

		*node[0x5913057d50a0] = 2;

		*node[0x5913057d5100] = 15;

		*node[0x5913057d51c0] = *;

		*node[0x5913057d5160] = 2;

		*node[0x5913057d5190] = 1;

		*node[0x5913057d5250] = ;;

		*node[0x5913057d5460] = =;

		*node[0x5913057d5280] = 13;

		*node[0x5913057d5430] = /;

		*node[0x5913057d5370] = +;

		*node[0x5913057d5310] = -;

		*node[0x5913057d52b0] = 0;

		*node[0x5913057d52e0] = 2;

		*node[0x5913057d5340] = 15;

		*node[0x5913057d5400] = *;

		*node[0x5913057d53a0] = 2;

		*node[0x5913057d53d0] = 1;

		*node[0x5913057d5490] = ;;

		*node[0x5913057d54c0] = print;

		*node[0x5913057d54f0] = 11;

		*node[0x5913057d5520] = ;;

		*node[0x5913057d5550] = print;

		*node[0x5913057d5580] = 12;

		*node[0x5913057d55b0] = 13;

		*node[0x5913057d55e0] = elseif;

		*node[0x5913057d5610] = op_no;

		*node[0x5913057d56a0] = ==;

		*node[0x5913057d5640] = 14;

		*node[0x5913057d5670] = 0;

		*node[0x5913057d56d0] = ;;

		*node[0x5913057d5880] = =;

		*node[0x5913057d5700] = 10;

		*node[0x5913057d5850] = /;

		*node[0x5913057d5790] = -;

		*node[0x5913057d5730] = 0;

		*node[0x5913057d5760] = 2;

		*node[0x5913057d5820] = *;

		*node[0x5913057d57c0] = 2;

		*node[0x5913057d57f0] = 1;

		*node[0x5913057d58b0] = ;;

		*node[0x5913057d58e0] = print;

		*node[0x5913057d5910] = 8;

		*node[0x5913057d5940] = ;;

		*node[0x5913057d5970] = print;

		*node[0x5913057d59a0] = 10;

		*node[0x5913057d59d0] = else;

		*node[0x5913057d5a00] = op_no;

		*node[0x5913057d5a30] = ;;

		*node[0x5913057d5a60] = print;

		*node[0x5913057d5a90] = 7;

		*node[0x5913057d5ac0] = ;;

		*node[0x5913057d5af0] = return;

		*node[0x5913057d5b20] = 0;

		*node[0x5913057d5b50] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffecf067fb0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5838f1fe1210] = ;;

		*node[0x5838f1fe1240] = 0;

		*node[0x5838f1fe1270] = ;;

		*node[0x5838f1fe12a0] = input;

		*node[0x5838f1fe12d0] = 1;

		*node[0x5838f1fe1300] = 2;

		*node[0x5838f1fe1330] = 3;

		*node[0x5838f1fe1360] = ;;

		*node[0x5838f1fe13c0] = 1;

		*node[0x5838f1fe13f0] = 2;

		*node[0x5838f1fe1420] = 3;

		*node[0x5838f1fe1450] = ;;

		*node[0x5838f1fe1480] = 4;

		*node[0x5838f1fe14b0] = 1;

		*node[0x5838f1fe14e0] = 2;

		*node[0x5838f1fe1510] = 3;

		*node[0x5838f1fe1540] = ;;

		*node[0x5838f1fe1570] = if;

		*node[0x5838f1fe15a0] = op_no;

		*node[0x5838f1fe1630] = ==;

		*node[0x5838f1fe15d0] = 1;

		*node[0x5838f1fe1600] = 0;

		*node[0x5838f1fe1660] = ;;

		*node[0x5838f1fe16c0] = 2;

		*node[0x5838f1fe16f0] = 3;

		*node[0x5838f1fe1720] = else;

		*node[0x5838f1fe1750] = op_no;

		*node[0x5838f1fe1780] = ;;

		*node[0x5838f1fe17e0] = 1;

		*node[0x5838f1fe1810] = 2;

		*node[0x5838f1fe1840] = 3;

		*node[0x5838f1fe1870] = ;;

		*node[0x5838f1fe18a0] = 5;

		*node[0x5838f1fe18d0] = 1;

		*node[0x5838f1fe1900] = 2;

		*node[0x5838f1fe1930] = ;;

		*node[0x5838f1fe1a20] = =;

		*node[0x5838f1fe1960] = 7;

		*node[0x5838f1fe19f0] = -;

		*node[0x5838f1fe1990] = 0;

		*node[0x5838f1fe19c0] = 1;

		*node[0x5838f1fe1a50] = ;;

		*node[0x5838f1fe1ae0] = =;

		*node[0x5838f1fe1a80] = 8;

		*node[0x5838f1fe1ab0] = 1;

		*node[0x5838f1fe1b10] = ;;

		*node[0x5838f1fe1ba0] = =;

		*node[0x5838f1fe1b40] = 9;

		*node[0x5838f1fe1b70] = 1000;

		*node[0x5838f1fe1bd0] = ;;

		*node[0x5838f1fe1c00] = if;

		*node[0x5838f1fe1c30] = op_no;

		*node[0x5838f1fe1cc0] = ==;

		*node[0x5838f1fe1c60] = 1;

		*node[0x5838f1fe1c90] = 0;

		*node[0x5838f1fe1cf0] = ;;

		*node[0x5838f1fe1d20] = if;

		*node[0x5838f1fe1d50] = op_no;

		*node[0x5838f1fe1de0] = ==;

		*node[0x5838f1fe1d80] = 2;

		*node[0x5838f1fe1db0] = 0;

		*node[0x5838f1fe1e10] = ;;

		*node[0x5838f1fe1e40] = print;

		*node[0x5838f1fe1e70] = 9;

		*node[0x5838f1fe1ea0] = else;

		*node[0x5838f1fe1ed0] = op_no;

		*node[0x5838f1fe1f00] = ;;

		*node[0x5838f1fe1f30] = print;

		*node[0x5838f1fe1f60] = 7;

		*node[0x5838f1fe1f90] = else;

		*node[0x5838f1fe1fc0] = op_no;

		*node[0x5838f1fe1ff0] = ;;

		*node[0x5838f1fe2140] = =;

		*node[0x5838f1fe2020] = 10;

		*node[0x5838f1fe2110] = /;

		*node[0x5838f1fe20b0] = -;

		*node[0x5838f1fe2050] = 0;

		*node[0x5838f1fe2080] = 2;

		*node[0x5838f1fe20e0] = 1;

		*node[0x5838f1fe2170] = ;;

		*node[0x5838f1fe21a0] = print;

		*node[0x5838f1fe21d0] = 8;

		*node[0x5838f1fe2200] = ;;

		*node[0x5838f1fe2230] = print;

		*node[0x5838f1fe2260] = 10;

		*node[0x5838f1fe2290] = ;;

		*node[0x5838f1fe22c0] = return;

		*node[0x5838f1fe22f0] = 0;

		*node[0x5838f1fe2320] = ;;

		*node[0x5838f1fe2350] = 6;

		*node[0x5838f1fe2380] = 1;

		*node[0x5838f1fe23b0] = 2;

		*node[0x5838f1fe23e0] = 3;

		*node[0x5838f1fe2410] = ;;

		*node[0x5838f1fe2500] = =;

		*node[0x5838f1fe2440] = 7;

		*node[0x5838f1fe24d0] = -;

		*node[0x5838f1fe2470] = 0;

		*node[0x5838f1fe24a0] = 1;

		*node[0x5838f1fe2530] = ;;

		*node[0x5838f1fe25c0] = =;

		*node[0x5838f1fe2560] = 8;

		*node[0x5838f1fe2590] = 1;

		*node[0x5838f1fe25f0] = ;;

		*node[0x5838f1fe2680] = =;

		*node[0x5838f1fe2620] = 11;

		*node[0x5838f1fe2650] = 2;

		*node[0x5838f1fe26b0] = ;;

		*node[0x5838f1fe26e0] = if;

		*node[0x5838f1fe2710] = op_no;

		*node[0x5838f1fe27a0] = ==;

		*node[0x5838f1fe2740] = 3;

		*node[0x5838f1fe2770] = 0;

		*node[0x5838f1fe27d0] = ;;

		*node[0x5838f1fe2860] = =;

		*node[0x5838f1fe2800] = 12;

		*node[0x5838f1fe2830] = 0;

		*node[0x5838f1fe2890] = ;;

		*node[0x5838f1fe29e0] = =;

		*node[0x5838f1fe28c0] = 13;

		*node[0x5838f1fe29b0] = /;

		*node[0x5838f1fe2950] = -;

		*node[0x5838f1fe28f0] = 0;

		*node[0x5838f1fe2920] = 2;

		*node[0x5838f1fe2980] = 1;

		*node[0x5838f1fe2a10] = ;;

		*node[0x5838f1fe2a40] = print;

		*node[0x5838f1fe2a70] = 11;

		*node[0x5838f1fe2aa0] = ;;

		*node[0x5838f1fe2ad0] = print;

		*node[0x5838f1fe2b00] = 12;

		*node[0x5838f1fe2b30] = 13;

		*node[0x5838f1fe2b60] = else;

		*node[0x5838f1fe2b90] = op_no;

		*node[0x5838f1fe2bc0] = ;;

		*node[0x5838f1fe2dd0] = =;

		*node[0x5838f1fe2bf0] = 14;

		*node[0x5838f1fe2da0] = -;

		*node[0x5838f1fe2c80] = *;

		*node[0x5838f1fe2c20] = 2;

		*node[0x5838f1fe2c50] = 2;

		*node[0x5838f1fe2d70] = *;

		*node[0x5838f1fe2d10] = *;

		*node[0x5838f1fe2cb0] = 4;

		*node[0x5838f1fe2ce0] = 1;

		*node[0x5838f1fe2d40] = 3;

		*node[0x5838f1fe2e00] = ;;

		*node[0x5838f1fe2e30] = if;

		*node[0x5838f1fe2e60] = op_no;

		*node[0x5838f1fe2ef0] = >;

		*node[0x5838f1fe2e90] = 14;

		*node[0x5838f1fe2ec0] = 0;

		*node[0x5838f1fe2f20] = ;;

		*node[0x5838f1fe2fe0] = =;

		*node[0x5838f1fe2f50] = 15;

		*node[0x5838f1fe2fb0] = sqrt;

		*node[0x5838f1fe2f80] = 14;

		*node[0x5838f1fe3010] = ;;

		*node[0x5838f1fe3220] = =;

		*node[0x5838f1fe3040] = 12;

		*node[0x5838f1fe31f0] = /;

		*node[0x5838f1fe3130] = -;

		*node[0x5838f1fe30d0] = -;

		*node[0x5838f1fe3070] = 0;

		*node[0x5838f1fe30a0] = 2;

		*node[0x5838f1fe3100] = 15;

		*node[0x5838f1fe31c0] = *;

		*node[0x5838f1fe3160] = 2;

		*node[0x5838f1fe3190] = 1;

		*node[0x5838f1fe3250] = ;;

		*node[0x5838f1fe3460] = =;

		*node[0x5838f1fe3280] = 13;

		*node[0x5838f1fe3430] = /;

		*node[0x5838f1fe3370] = +;

		*node[0x5838f1fe3310] = -;

		*node[0x5838f1fe32b0] = 0;

		*node[0x5838f1fe32e0] = 2;

		*node[0x5838f1fe3340] = 15;

		*node[0x5838f1fe3400] = *;

		*node[0x5838f1fe33a0] = 2;

		*node[0x5838f1fe33d0] = 1;

		*node[0x5838f1fe3490] = ;;

		*node[0x5838f1fe34c0] = print;

		*node[0x5838f1fe34f0] = 11;

		*node[0x5838f1fe3520] = ;;

		*node[0x5838f1fe3550] = print;

		*node[0x5838f1fe3580] = 12;

		*node[0x5838f1fe35b0] = 13;

		*node[0x5838f1fe35e0] = elseif;

		*node[0x5838f1fe3610] = op_no;

		*node[0x5838f1fe36a0] = ==;

		*node[0x5838f1fe3640] = 14;

		*node[0x5838f1fe3670] = 0;

		*node[0x5838f1fe36d0] = ;;

		*node[0x5838f1fe3880] = =;

		*node[0x5838f1fe3700] = 10;

		*node[0x5838f1fe3850] = /;

		*node[0x5838f1fe3790] = -;

		*node[0x5838f1fe3730] = 0;

		*node[0x5838f1fe3760] = 2;

		*node[0x5838f1fe3820] = *;

		*node[0x5838f1fe37c0] = 2;

		*node[0x5838f1fe37f0] = 1;

		*node[0x5838f1fe38b0] = ;;

		*node[0x5838f1fe38e0] = print;

		*node[0x5838f1fe3910] = 8;

		*node[0x5838f1fe3940] = ;;

		*node[0x5838f1fe3970] = print;

		*node[0x5838f1fe39a0] = 10;

		*node[0x5838f1fe39d0] = else;

		*node[0x5838f1fe3a00] = op_no;

		*node[0x5838f1fe3a30] = ;;

		*node[0x5838f1fe3a60] = print;

		*node[0x5838f1fe3a90] = 7;

		*node[0x5838f1fe3ac0] = ;;

		*node[0x5838f1fe3af0] = return;

		*node[0x5838f1fe3b20] = 0;

		*node[0x5838f1fe3b50] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcfee41070] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x592bf3def210] = ;;

		*node[0x592bf3def240] = 0;

		*node[0x592bf3def270] = ;;

		*node[0x592bf3def2a0] = input;

		*node[0x592bf3def2d0] = 1;

		*node[0x592bf3def300] = 2;

		*node[0x592bf3def330] = 3;

		*node[0x592bf3def360] = ;;

		*node[0x592bf3def3c0] = 1;

		*node[0x592bf3def3f0] = 2;

		*node[0x592bf3def420] = 3;

		*node[0x592bf3def450] = ;;

		*node[0x592bf3def480] = 4;

		*node[0x592bf3def4b0] = 1;

		*node[0x592bf3def4e0] = 2;

		*node[0x592bf3def510] = 3;

		*node[0x592bf3def540] = ;;

		*node[0x592bf3def570] = if;

		*node[0x592bf3def5a0] = op_no;

		*node[0x592bf3def630] = ==;

		*node[0x592bf3def5d0] = 1;

		*node[0x592bf3def600] = 0;

		*node[0x592bf3def660] = ;;

		*node[0x592bf3def6c0] = 2;

		*node[0x592bf3def6f0] = 3;

		*node[0x592bf3def720] = else;

		*node[0x592bf3def750] = op_no;

		*node[0x592bf3def780] = ;;

		*node[0x592bf3def7e0] = 1;

		*node[0x592bf3def810] = 2;

		*node[0x592bf3def840] = 3;

		*node[0x592bf3def870] = ;;

		*node[0x592bf3def8a0] = 5;

		*node[0x592bf3def8d0] = 1;

		*node[0x592bf3def900] = 2;

		*node[0x592bf3def930] = ;;

		*node[0x592bf3defa20] = =;

		*node[0x592bf3def960] = 7;

		*node[0x592bf3def9f0] = -;

		*node[0x592bf3def990] = 0;

		*node[0x592bf3def9c0] = 1;

		*node[0x592bf3defa50] = ;;

		*node[0x592bf3defae0] = =;

		*node[0x592bf3defa80] = 8;

		*node[0x592bf3defab0] = 1;

		*node[0x592bf3defb10] = ;;

		*node[0x592bf3defba0] = =;

		*node[0x592bf3defb40] = 9;

		*node[0x592bf3defb70] = 1000;

		*node[0x592bf3defbd0] = ;;

		*node[0x592bf3defc00] = if;

		*node[0x592bf3defc30] = op_no;

		*node[0x592bf3defcc0] = ==;

		*node[0x592bf3defc60] = 1;

		*node[0x592bf3defc90] = 0;

		*node[0x592bf3defcf0] = ;;

		*node[0x592bf3defd20] = if;

		*node[0x592bf3defd50] = op_no;

		*node[0x592bf3defde0] = ==;

		*node[0x592bf3defd80] = 2;

		*node[0x592bf3defdb0] = 0;

		*node[0x592bf3defe10] = ;;

		*node[0x592bf3defe40] = print;

		*node[0x592bf3defe70] = 9;

		*node[0x592bf3defea0] = else;

		*node[0x592bf3defed0] = op_no;

		*node[0x592bf3deff00] = ;;

		*node[0x592bf3deff30] = print;

		*node[0x592bf3deff60] = 7;

		*node[0x592bf3deff90] = else;

		*node[0x592bf3deffc0] = op_no;

		*node[0x592bf3defff0] = ;;

		*node[0x592bf3df0140] = =;

		*node[0x592bf3df0020] = 10;

		*node[0x592bf3df0110] = /;

		*node[0x592bf3df00b0] = -;

		*node[0x592bf3df0050] = 0;

		*node[0x592bf3df0080] = 2;

		*node[0x592bf3df00e0] = 1;

		*node[0x592bf3df0170] = ;;

		*node[0x592bf3df01a0] = print;

		*node[0x592bf3df01d0] = 8;

		*node[0x592bf3df0200] = ;;

		*node[0x592bf3df0230] = print;

		*node[0x592bf3df0260] = 10;

		*node[0x592bf3df0290] = ;;

		*node[0x592bf3df02c0] = return;

		*node[0x592bf3df02f0] = 0;

		*node[0x592bf3df0320] = ;;

		*node[0x592bf3df0350] = 6;

		*node[0x592bf3df0380] = 1;

		*node[0x592bf3df03b0] = 2;

		*node[0x592bf3df03e0] = 3;

		*node[0x592bf3df0410] = ;;

		*node[0x592bf3df0500] = =;

		*node[0x592bf3df0440] = 7;

		*node[0x592bf3df04d0] = -;

		*node[0x592bf3df0470] = 0;

		*node[0x592bf3df04a0] = 1;

		*node[0x592bf3df0530] = ;;

		*node[0x592bf3df05c0] = =;

		*node[0x592bf3df0560] = 8;

		*node[0x592bf3df0590] = 1;

		*node[0x592bf3df05f0] = ;;

		*node[0x592bf3df0680] = =;

		*node[0x592bf3df0620] = 11;

		*node[0x592bf3df0650] = 2;

		*node[0x592bf3df06b0] = ;;

		*node[0x592bf3df06e0] = if;

		*node[0x592bf3df0710] = op_no;

		*node[0x592bf3df07a0] = ==;

		*node[0x592bf3df0740] = 3;

		*node[0x592bf3df0770] = 0;

		*node[0x592bf3df07d0] = ;;

		*node[0x592bf3df0860] = =;

		*node[0x592bf3df0800] = 12;

		*node[0x592bf3df0830] = 0;

		*node[0x592bf3df0890] = ;;

		*node[0x592bf3df09e0] = =;

		*node[0x592bf3df08c0] = 13;

		*node[0x592bf3df09b0] = /;

		*node[0x592bf3df0950] = -;

		*node[0x592bf3df08f0] = 0;

		*node[0x592bf3df0920] = 2;

		*node[0x592bf3df0980] = 1;

		*node[0x592bf3df0a10] = ;;

		*node[0x592bf3df0a40] = print;

		*node[0x592bf3df0a70] = 11;

		*node[0x592bf3df0aa0] = ;;

		*node[0x592bf3df0ad0] = print;

		*node[0x592bf3df0b00] = 12;

		*node[0x592bf3df0b30] = 13;

		*node[0x592bf3df0b60] = else;

		*node[0x592bf3df0b90] = op_no;

		*node[0x592bf3df0bc0] = ;;

		*node[0x592bf3df0dd0] = =;

		*node[0x592bf3df0bf0] = 14;

		*node[0x592bf3df0da0] = -;

		*node[0x592bf3df0c80] = *;

		*node[0x592bf3df0c20] = 2;

		*node[0x592bf3df0c50] = 2;

		*node[0x592bf3df0d70] = *;

		*node[0x592bf3df0d10] = *;

		*node[0x592bf3df0cb0] = 4;

		*node[0x592bf3df0ce0] = 1;

		*node[0x592bf3df0d40] = 3;

		*node[0x592bf3df0e00] = ;;

		*node[0x592bf3df0e30] = if;

		*node[0x592bf3df0e60] = op_no;

		*node[0x592bf3df0ef0] = >;

		*node[0x592bf3df0e90] = 14;

		*node[0x592bf3df0ec0] = 0;

		*node[0x592bf3df0f20] = ;;

		*node[0x592bf3df0fe0] = =;

		*node[0x592bf3df0f50] = 15;

		*node[0x592bf3df0fb0] = sqrt;

		*node[0x592bf3df0f80] = 14;

		*node[0x592bf3df1010] = ;;

		*node[0x592bf3df1220] = =;

		*node[0x592bf3df1040] = 12;

		*node[0x592bf3df11f0] = /;

		*node[0x592bf3df1130] = -;

		*node[0x592bf3df10d0] = -;

		*node[0x592bf3df1070] = 0;

		*node[0x592bf3df10a0] = 2;

		*node[0x592bf3df1100] = 15;

		*node[0x592bf3df11c0] = *;

		*node[0x592bf3df1160] = 2;

		*node[0x592bf3df1190] = 1;

		*node[0x592bf3df1250] = ;;

		*node[0x592bf3df1460] = =;

		*node[0x592bf3df1280] = 13;

		*node[0x592bf3df1430] = /;

		*node[0x592bf3df1370] = +;

		*node[0x592bf3df1310] = -;

		*node[0x592bf3df12b0] = 0;

		*node[0x592bf3df12e0] = 2;

		*node[0x592bf3df1340] = 15;

		*node[0x592bf3df1400] = *;

		*node[0x592bf3df13a0] = 2;

		*node[0x592bf3df13d0] = 1;

		*node[0x592bf3df1490] = ;;

		*node[0x592bf3df14c0] = print;

		*node[0x592bf3df14f0] = 11;

		*node[0x592bf3df1520] = ;;

		*node[0x592bf3df1550] = print;

		*node[0x592bf3df1580] = 12;

		*node[0x592bf3df15b0] = 13;

		*node[0x592bf3df15e0] = elseif;

		*node[0x592bf3df1610] = op_no;

		*node[0x592bf3df16a0] = ==;

		*node[0x592bf3df1640] = 14;

		*node[0x592bf3df1670] = 0;

		*node[0x592bf3df16d0] = ;;

		*node[0x592bf3df1880] = =;

		*node[0x592bf3df1700] = 10;

		*node[0x592bf3df1850] = /;

		*node[0x592bf3df1790] = -;

		*node[0x592bf3df1730] = 0;

		*node[0x592bf3df1760] = 2;

		*node[0x592bf3df1820] = *;

		*node[0x592bf3df17c0] = 2;

		*node[0x592bf3df17f0] = 1;

		*node[0x592bf3df18b0] = ;;

		*node[0x592bf3df18e0] = print;

		*node[0x592bf3df1910] = 8;

		*node[0x592bf3df1940] = ;;

		*node[0x592bf3df1970] = print;

		*node[0x592bf3df19a0] = 10;

		*node[0x592bf3df19d0] = else;

		*node[0x592bf3df1a00] = op_no;

		*node[0x592bf3df1a30] = ;;

		*node[0x592bf3df1a60] = print;

		*node[0x592bf3df1a90] = 7;

		*node[0x592bf3df1ac0] = ;;

		*node[0x592bf3df1af0] = return;

		*node[0x592bf3df1b20] = 0;

		*node[0x592bf3df1b50] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe46eea9d0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x57903d9e4fd0] = ;;

		*node[0x57903d9e5000] = 0;

		*node[0x57903d9e5030] = ;;

		*node[0x57903d9e5060] = input;

		*node[0x57903d9e5090] = 1;

		*node[0x57903d9e50c0] = 2;

		*node[0x57903d9e50f0] = 3;

		*node[0x57903d9e5120] = ;;

		*node[0x57903d9e5180] = 1;

		*node[0x57903d9e51b0] = 2;

		*node[0x57903d9e51e0] = 3;

		*node[0x57903d9e5210] = ;;

		*node[0x57903d9e5240] = 4;

		*node[0x57903d9e5270] = 1;

		*node[0x57903d9e52a0] = 2;

		*node[0x57903d9e52d0] = 3;

		*node[0x57903d9e5300] = ;;

		*node[0x57903d9e5330] = if;

		*node[0x57903d9e5360] = op_no;

		*node[0x57903d9e5390] = ==;

		*node[0x57903d9e53c0] = 1;

		*node[0x57903d9e53f0] = 0;

		*node[0x57903d9e5420] = ;;

		*node[0x57903d9e5480] = 2;

		*node[0x57903d9e54b0] = 3;

		*node[0x57903d9e54e0] = else;

		*node[0x57903d9e5510] = op_no;

		*node[0x57903d9e5540] = ;;

		*node[0x57903d9e55a0] = 1;

		*node[0x57903d9e55d0] = 2;

		*node[0x57903d9e5600] = 3;

		*node[0x57903d9e5630] = ;;

		*node[0x57903d9e5660] = 5;

		*node[0x57903d9e5690] = 1;

		*node[0x57903d9e56c0] = 2;

		*node[0x57903d9e56f0] = ;;

		*node[0x57903d9e5720] = =;

		*node[0x57903d9e5750] = 7;

		*node[0x57903d9e5780] = -;

		*node[0x57903d9e57b0] = 0;

		*node[0x57903d9e57e0] = 1;

		*node[0x57903d9e5810] = ;;

		*node[0x57903d9e5840] = =;

		*node[0x57903d9e5870] = 8;

		*node[0x57903d9e58a0] = 1;

		*node[0x57903d9e58d0] = ;;

		*node[0x57903d9e5900] = =;

		*node[0x57903d9e5930] = 9;

		*node[0x57903d9e5960] = 1000;

		*node[0x57903d9e5990] = ;;

		*node[0x57903d9e59c0] = if;

		*node[0x57903d9e59f0] = op_no;

		*node[0x57903d9e5a20] = ==;

		*node[0x57903d9e5a50] = 1;

		*node[0x57903d9e5a80] = 0;

		*node[0x57903d9e5ab0] = ;;

		*node[0x57903d9e5ae0] = if;

		*node[0x57903d9e5b10] = op_no;

		*node[0x57903d9e5b40] = ==;

		*node[0x57903d9e5b70] = 2;

		*node[0x57903d9e5ba0] = 0;

		*node[0x57903d9e5bd0] = ;;

		*node[0x57903d9e5c00] = print;

		*node[0x57903d9e5c30] = 9;

		*node[0x57903d9e5c60] = else;

		*node[0x57903d9e5c90] = op_no;

		*node[0x57903d9e5cc0] = ;;

		*node[0x57903d9e5cf0] = print;

		*node[0x57903d9e5d20] = 7;

		*node[0x57903d9e5d50] = else;

		*node[0x57903d9e5d80] = op_no;

		*node[0x57903d9e5db0] = ;;

		*node[0x57903d9e5de0] = =;

		*node[0x57903d9e5e10] = 10;

		*node[0x57903d9e5e40] = /;

		*node[0x57903d9e5e70] = -;

		*node[0x57903d9e5ea0] = 0;

		*node[0x57903d9e5ed0] = 2;

		*node[0x57903d9e5f00] = 1;

		*node[0x57903d9e5f30] = ;;

		*node[0x57903d9e5f60] = print;

		*node[0x57903d9e5f90] = 8;

		*node[0x57903d9e5fc0] = ;;

		*node[0x57903d9e5ff0] = print;

		*node[0x57903d9e6020] = 10;

		*node[0x57903d9e6050] = ;;

		*node[0x57903d9e6080] = return;

		*node[0x57903d9e60b0] = 0;

		*node[0x57903d9e60e0] = ;;

		*node[0x57903d9e6110] = 6;

		*node[0x57903d9e6140] = 1;

		*node[0x57903d9e6170] = 2;

		*node[0x57903d9e61a0] = 3;

		*node[0x57903d9e61d0] = ;;

		*node[0x57903d9e6200] = =;

		*node[0x57903d9e6230] = 7;

		*node[0x57903d9e6260] = -;

		*node[0x57903d9e6290] = 0;

		*node[0x57903d9e62c0] = 1;

		*node[0x57903d9e62f0] = ;;

		*node[0x57903d9e6320] = =;

		*node[0x57903d9e6350] = 8;

		*node[0x57903d9e6380] = 1;

		*node[0x57903d9e63b0] = ;;

		*node[0x57903d9e63e0] = =;

		*node[0x57903d9e6410] = 11;

		*node[0x57903d9e6440] = 2;

		*node[0x57903d9e6470] = ;;

		*node[0x57903d9e64a0] = if;

		*node[0x57903d9e64d0] = op_no;

		*node[0x57903d9e6500] = ==;

		*node[0x57903d9e6530] = 3;

		*node[0x57903d9e6560] = 0;

		*node[0x57903d9e6590] = ;;

		*node[0x57903d9e65c0] = =;

		*node[0x57903d9e65f0] = 12;

		*node[0x57903d9e6620] = 0;

		*node[0x57903d9e6650] = ;;

		*node[0x57903d9e6680] = =;

		*node[0x57903d9e66b0] = 13;

		*node[0x57903d9e66e0] = /;

		*node[0x57903d9e6710] = -;

		*node[0x57903d9e6740] = 0;

		*node[0x57903d9e6770] = 2;

		*node[0x57903d9e67a0] = 1;

		*node[0x57903d9e67d0] = ;;

		*node[0x57903d9e6800] = print;

		*node[0x57903d9e6830] = 11;

		*node[0x57903d9e6860] = ;;

		*node[0x57903d9e6890] = print;

		*node[0x57903d9e68c0] = 12;

		*node[0x57903d9e68f0] = 13;

		*node[0x57903d9e6920] = else;

		*node[0x57903d9e6950] = op_no;

		*node[0x57903d9e6980] = ;;

		*node[0x57903d9e69b0] = =;

		*node[0x57903d9e69e0] = 14;

		*node[0x57903d9e6a10] = -;

		*node[0x57903d9e6a40] = *;

		*node[0x57903d9e6a70] = 2;

		*node[0x57903d9e6aa0] = 2;

		*node[0x57903d9e6ad0] = *;

		*node[0x57903d9e6b00] = *;

		*node[0x57903d9e6b30] = 4;

		*node[0x57903d9e6b60] = 1;

		*node[0x57903d9e6b90] = 3;

		*node[0x57903d9e6bc0] = ;;

		*node[0x57903d9e6bf0] = if;

		*node[0x57903d9e6c20] = op_no;

		*node[0x57903d9e6c50] = >;

		*node[0x57903d9e6c80] = 14;

		*node[0x57903d9e6cb0] = 0;

		*node[0x57903d9e6ce0] = ;;

		*node[0x57903d9e6d10] = =;

		*node[0x57903d9e6d40] = 15;

		*node[0x57903d9e6d70] = sqrt;

		*node[0x57903d9e6da0] = 14;

		*node[0x57903d9e6dd0] = ;;

		*node[0x57903d9e6e00] = =;

		*node[0x57903d9e6e30] = 12;

		*node[0x57903d9e6e60] = /;

		*node[0x57903d9e6e90] = -;

		*node[0x57903d9e6ec0] = -;

		*node[0x57903d9e6ef0] = 0;

		*node[0x57903d9e6f20] = 2;

		*node[0x57903d9e6f50] = 15;

		*node[0x57903d9e6f80] = *;

		*node[0x57903d9e6fb0] = 2;

		*node[0x57903d9e6fe0] = 1;

		*node[0x57903d9e7010] = ;;

		*node[0x57903d9e7040] = =;

		*node[0x57903d9e7070] = 13;

		*node[0x57903d9e70a0] = /;

		*node[0x57903d9e70d0] = +;

		*node[0x57903d9e7100] = -;

		*node[0x57903d9e7130] = 0;

		*node[0x57903d9e7160] = 2;

		*node[0x57903d9e7190] = 15;

		*node[0x57903d9e71c0] = *;

		*node[0x57903d9e71f0] = 2;

		*node[0x57903d9e7220] = 1;

		*node[0x57903d9e7250] = ;;

		*node[0x57903d9e7280] = print;

		*node[0x57903d9e72b0] = 11;

		*node[0x57903d9e72e0] = ;;

		*node[0x57903d9e7310] = print;

		*node[0x57903d9e7340] = 12;

		*node[0x57903d9e7370] = 13;

		*node[0x57903d9e73a0] = elseif;

		*node[0x57903d9e73d0] = op_no;

		*node[0x57903d9e7400] = ==;

		*node[0x57903d9e7430] = 14;

		*node[0x57903d9e7460] = 0;

		*node[0x57903d9e7490] = ;;

		*node[0x57903d9e74c0] = =;

		*node[0x57903d9e74f0] = 10;

		*node[0x57903d9e7520] = /;

		*node[0x57903d9e7550] = -;

		*node[0x57903d9e7580] = 0;

		*node[0x57903d9e75b0] = 2;

		*node[0x57903d9e75e0] = *;

		*node[0x57903d9e7610] = 2;

		*node[0x57903d9e7640] = 1;

		*node[0x57903d9e7670] = ;;

		*node[0x57903d9e76a0] = print;

		*node[0x57903d9e76d0] = 8;

		*node[0x57903d9e7700] = ;;

		*node[0x57903d9e7730] = print;

		*node[0x57903d9e7760] = 10;

		*node[0x57903d9e7790] = else;

		*node[0x57903d9e77c0] = op_no;

		*node[0x57903d9e77f0] = ;;

		*node[0x57903d9e7820] = print;

		*node[0x57903d9e7850] = 7;

		*node[0x57903d9e7880] = ;;

		*node[0x57903d9e78b0] = return;

		*node[0x57903d9e78e0] = 0;

		*node[0x57903d9e7910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff27301d70] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5ceda833afd0] = ;;

		*node[0x5ceda833b000] = 0;

		*node[0x5ceda833b030] = ;;

		*node[0x5ceda833b060] = input;

		*node[0x5ceda833b090] = 1;

		*node[0x5ceda833b0c0] = 2;

		*node[0x5ceda833b0f0] = 3;

		*node[0x5ceda833b120] = ;;

		*node[0x5ceda833b180] = 1;

		*node[0x5ceda833b1b0] = 2;

		*node[0x5ceda833b1e0] = 3;

		*node[0x5ceda833b210] = ;;

		*node[0x5ceda833b240] = 4;

		*node[0x5ceda833b270] = 1;

		*node[0x5ceda833b2a0] = 2;

		*node[0x5ceda833b2d0] = 3;

		*node[0x5ceda833b300] = ;;

		*node[0x5ceda833b330] = if;

		*node[0x5ceda833b360] = op_no;

		*node[0x5ceda833b390] = ==;

		*node[0x5ceda833b3c0] = 1;

		*node[0x5ceda833b3f0] = 0;

		*node[0x5ceda833b420] = ;;

		*node[0x5ceda833b480] = 2;

		*node[0x5ceda833b4b0] = 3;

		*node[0x5ceda833b4e0] = else;

		*node[0x5ceda833b510] = op_no;

		*node[0x5ceda833b540] = ;;

		*node[0x5ceda833b5a0] = 1;

		*node[0x5ceda833b5d0] = 2;

		*node[0x5ceda833b600] = 3;

		*node[0x5ceda833b630] = ;;

		*node[0x5ceda833b660] = 5;

		*node[0x5ceda833b690] = 1;

		*node[0x5ceda833b6c0] = 2;

		*node[0x5ceda833b6f0] = ;;

		*node[0x5ceda833b720] = =;

		*node[0x5ceda833b750] = 7;

		*node[0x5ceda833b780] = -;

		*node[0x5ceda833b7b0] = 0;

		*node[0x5ceda833b7e0] = 1;

		*node[0x5ceda833b810] = ;;

		*node[0x5ceda833b840] = =;

		*node[0x5ceda833b870] = 8;

		*node[0x5ceda833b8a0] = 1;

		*node[0x5ceda833b8d0] = ;;

		*node[0x5ceda833b900] = =;

		*node[0x5ceda833b930] = 9;

		*node[0x5ceda833b960] = 1000;

		*node[0x5ceda833b990] = ;;

		*node[0x5ceda833b9c0] = if;

		*node[0x5ceda833b9f0] = op_no;

		*node[0x5ceda833ba20] = ==;

		*node[0x5ceda833ba50] = 1;

		*node[0x5ceda833ba80] = 0;

		*node[0x5ceda833bab0] = ;;

		*node[0x5ceda833bae0] = if;

		*node[0x5ceda833bb10] = op_no;

		*node[0x5ceda833bb40] = ==;

		*node[0x5ceda833bb70] = 2;

		*node[0x5ceda833bba0] = 0;

		*node[0x5ceda833bbd0] = ;;

		*node[0x5ceda833bc00] = print;

		*node[0x5ceda833bc30] = 9;

		*node[0x5ceda833bc60] = else;

		*node[0x5ceda833bc90] = op_no;

		*node[0x5ceda833bcc0] = ;;

		*node[0x5ceda833bcf0] = print;

		*node[0x5ceda833bd20] = 7;

		*node[0x5ceda833bd50] = else;

		*node[0x5ceda833bd80] = op_no;

		*node[0x5ceda833bdb0] = ;;

		*node[0x5ceda833bde0] = =;

		*node[0x5ceda833be10] = 10;

		*node[0x5ceda833be40] = /;

		*node[0x5ceda833be70] = -;

		*node[0x5ceda833bea0] = 0;

		*node[0x5ceda833bed0] = 2;

		*node[0x5ceda833bf00] = 1;

		*node[0x5ceda833bf30] = ;;

		*node[0x5ceda833bf60] = print;

		*node[0x5ceda833bf90] = 8;

		*node[0x5ceda833bfc0] = ;;

		*node[0x5ceda833bff0] = print;

		*node[0x5ceda833c020] = 10;

		*node[0x5ceda833c050] = ;;

		*node[0x5ceda833c080] = return;

		*node[0x5ceda833c0b0] = 0;

		*node[0x5ceda833c0e0] = ;;

		*node[0x5ceda833c110] = 6;

		*node[0x5ceda833c140] = 1;

		*node[0x5ceda833c170] = 2;

		*node[0x5ceda833c1a0] = 3;

		*node[0x5ceda833c1d0] = ;;

		*node[0x5ceda833c200] = =;

		*node[0x5ceda833c230] = 7;

		*node[0x5ceda833c260] = -;

		*node[0x5ceda833c290] = 0;

		*node[0x5ceda833c2c0] = 1;

		*node[0x5ceda833c2f0] = ;;

		*node[0x5ceda833c320] = =;

		*node[0x5ceda833c350] = 8;

		*node[0x5ceda833c380] = 1;

		*node[0x5ceda833c3b0] = ;;

		*node[0x5ceda833c3e0] = =;

		*node[0x5ceda833c410] = 11;

		*node[0x5ceda833c440] = 2;

		*node[0x5ceda833c470] = ;;

		*node[0x5ceda833c4a0] = if;

		*node[0x5ceda833c4d0] = op_no;

		*node[0x5ceda833c500] = ==;

		*node[0x5ceda833c530] = 3;

		*node[0x5ceda833c560] = 0;

		*node[0x5ceda833c590] = ;;

		*node[0x5ceda833c5c0] = =;

		*node[0x5ceda833c5f0] = 12;

		*node[0x5ceda833c620] = 0;

		*node[0x5ceda833c650] = ;;

		*node[0x5ceda833c680] = =;

		*node[0x5ceda833c6b0] = 13;

		*node[0x5ceda833c6e0] = /;

		*node[0x5ceda833c710] = -;

		*node[0x5ceda833c740] = 0;

		*node[0x5ceda833c770] = 2;

		*node[0x5ceda833c7a0] = 1;

		*node[0x5ceda833c7d0] = ;;

		*node[0x5ceda833c800] = print;

		*node[0x5ceda833c830] = 11;

		*node[0x5ceda833c860] = ;;

		*node[0x5ceda833c890] = print;

		*node[0x5ceda833c8c0] = 12;

		*node[0x5ceda833c8f0] = 13;

		*node[0x5ceda833c920] = else;

		*node[0x5ceda833c950] = op_no;

		*node[0x5ceda833c980] = ;;

		*node[0x5ceda833c9b0] = =;

		*node[0x5ceda833c9e0] = 14;

		*node[0x5ceda833ca10] = -;

		*node[0x5ceda833ca40] = *;

		*node[0x5ceda833ca70] = 2;

		*node[0x5ceda833caa0] = 2;

		*node[0x5ceda833cad0] = *;

		*node[0x5ceda833cb00] = *;

		*node[0x5ceda833cb30] = 4;

		*node[0x5ceda833cb60] = 1;

		*node[0x5ceda833cb90] = 3;

		*node[0x5ceda833cbc0] = ;;

		*node[0x5ceda833cbf0] = if;

		*node[0x5ceda833cc20] = op_no;

		*node[0x5ceda833cc50] = >;

		*node[0x5ceda833cc80] = 14;

		*node[0x5ceda833ccb0] = 0;

		*node[0x5ceda833cce0] = ;;

		*node[0x5ceda833cd10] = =;

		*node[0x5ceda833cd40] = 15;

		*node[0x5ceda833cd70] = sqrt;

		*node[0x5ceda833cda0] = 14;

		*node[0x5ceda833cdd0] = ;;

		*node[0x5ceda833ce00] = =;

		*node[0x5ceda833ce30] = 12;

		*node[0x5ceda833ce60] = /;

		*node[0x5ceda833ce90] = -;

		*node[0x5ceda833cec0] = -;

		*node[0x5ceda833cef0] = 0;

		*node[0x5ceda833cf20] = 2;

		*node[0x5ceda833cf50] = 15;

		*node[0x5ceda833cf80] = *;

		*node[0x5ceda833cfb0] = 2;

		*node[0x5ceda833cfe0] = 1;

		*node[0x5ceda833d010] = ;;

		*node[0x5ceda833d040] = =;

		*node[0x5ceda833d070] = 13;

		*node[0x5ceda833d0a0] = /;

		*node[0x5ceda833d0d0] = +;

		*node[0x5ceda833d100] = -;

		*node[0x5ceda833d130] = 0;

		*node[0x5ceda833d160] = 2;

		*node[0x5ceda833d190] = 15;

		*node[0x5ceda833d1c0] = *;

		*node[0x5ceda833d1f0] = 2;

		*node[0x5ceda833d220] = 1;

		*node[0x5ceda833d250] = ;;

		*node[0x5ceda833d280] = print;

		*node[0x5ceda833d2b0] = 11;

		*node[0x5ceda833d2e0] = ;;

		*node[0x5ceda833d310] = print;

		*node[0x5ceda833d340] = 12;

		*node[0x5ceda833d370] = 13;

		*node[0x5ceda833d3a0] = elseif;

		*node[0x5ceda833d3d0] = op_no;

		*node[0x5ceda833d400] = ==;

		*node[0x5ceda833d430] = 14;

		*node[0x5ceda833d460] = 0;

		*node[0x5ceda833d490] = ;;

		*node[0x5ceda833d4c0] = =;

		*node[0x5ceda833d4f0] = 10;

		*node[0x5ceda833d520] = /;

		*node[0x5ceda833d550] = -;

		*node[0x5ceda833d580] = 0;

		*node[0x5ceda833d5b0] = 2;

		*node[0x5ceda833d5e0] = *;

		*node[0x5ceda833d610] = 2;

		*node[0x5ceda833d640] = 1;

		*node[0x5ceda833d670] = ;;

		*node[0x5ceda833d6a0] = print;

		*node[0x5ceda833d6d0] = 8;

		*node[0x5ceda833d700] = ;;

		*node[0x5ceda833d730] = print;

		*node[0x5ceda833d760] = 10;

		*node[0x5ceda833d790] = else;

		*node[0x5ceda833d7c0] = op_no;

		*node[0x5ceda833d7f0] = ;;

		*node[0x5ceda833d820] = print;

		*node[0x5ceda833d850] = 7;

		*node[0x5ceda833d880] = ;;

		*node[0x5ceda833d8b0] = return;

		*node[0x5ceda833d8e0] = 0;

		*node[0x5ceda833d910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffd06dfb00] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5f258c8bbfd0] = ;;

		*node[0x5f258c8bc000] = 0;

		*node[0x5f258c8bc030] = ;;

		*node[0x5f258c8bc060] = input;

		*node[0x5f258c8bc090] = 1;

		*node[0x5f258c8bc0c0] = 2;

		*node[0x5f258c8bc0f0] = 3;

		*node[0x5f258c8bc120] = ;;

		*node[0x5f258c8bc180] = 1;

		*node[0x5f258c8bc1b0] = 2;

		*node[0x5f258c8bc1e0] = 3;

		*node[0x5f258c8bc210] = ;;

		*node[0x5f258c8bc240] = 4;

		*node[0x5f258c8bc270] = 1;

		*node[0x5f258c8bc2a0] = 2;

		*node[0x5f258c8bc2d0] = 3;

		*node[0x5f258c8bc300] = ;;

		*node[0x5f258c8bc330] = if;

		*node[0x5f258c8bc360] = op_no;

		*node[0x5f258c8bc390] = ==;

		*node[0x5f258c8bc3c0] = 1;

		*node[0x5f258c8bc3f0] = 0;

		*node[0x5f258c8bc420] = ;;

		*node[0x5f258c8bc480] = 2;

		*node[0x5f258c8bc4b0] = 3;

		*node[0x5f258c8bc4e0] = else;

		*node[0x5f258c8bc510] = op_no;

		*node[0x5f258c8bc540] = ;;

		*node[0x5f258c8bc5a0] = 1;

		*node[0x5f258c8bc5d0] = 2;

		*node[0x5f258c8bc600] = 3;

		*node[0x5f258c8bc630] = ;;

		*node[0x5f258c8bc660] = 5;

		*node[0x5f258c8bc690] = 1;

		*node[0x5f258c8bc6c0] = 2;

		*node[0x5f258c8bc6f0] = ;;

		*node[0x5f258c8bc720] = =;

		*node[0x5f258c8bc750] = 7;

		*node[0x5f258c8bc780] = -;

		*node[0x5f258c8bc7b0] = 0;

		*node[0x5f258c8bc7e0] = 1;

		*node[0x5f258c8bc810] = ;;

		*node[0x5f258c8bc840] = =;

		*node[0x5f258c8bc870] = 8;

		*node[0x5f258c8bc8a0] = 1;

		*node[0x5f258c8bc8d0] = ;;

		*node[0x5f258c8bc900] = =;

		*node[0x5f258c8bc930] = 9;

		*node[0x5f258c8bc960] = 1000;

		*node[0x5f258c8bc990] = ;;

		*node[0x5f258c8bc9c0] = if;

		*node[0x5f258c8bc9f0] = op_no;

		*node[0x5f258c8bca20] = ==;

		*node[0x5f258c8bca50] = 1;

		*node[0x5f258c8bca80] = 0;

		*node[0x5f258c8bcab0] = ;;

		*node[0x5f258c8bcae0] = if;

		*node[0x5f258c8bcb10] = op_no;

		*node[0x5f258c8bcb40] = ==;

		*node[0x5f258c8bcb70] = 2;

		*node[0x5f258c8bcba0] = 0;

		*node[0x5f258c8bcbd0] = ;;

		*node[0x5f258c8bcc00] = print;

		*node[0x5f258c8bcc30] = 9;

		*node[0x5f258c8bcc60] = else;

		*node[0x5f258c8bcc90] = op_no;

		*node[0x5f258c8bccc0] = ;;

		*node[0x5f258c8bccf0] = print;

		*node[0x5f258c8bcd20] = 7;

		*node[0x5f258c8bcd50] = else;

		*node[0x5f258c8bcd80] = op_no;

		*node[0x5f258c8bcdb0] = ;;

		*node[0x5f258c8bcde0] = =;

		*node[0x5f258c8bce10] = 10;

		*node[0x5f258c8bce40] = /;

		*node[0x5f258c8bce70] = -;

		*node[0x5f258c8bcea0] = 0;

		*node[0x5f258c8bced0] = 2;

		*node[0x5f258c8bcf00] = 1;

		*node[0x5f258c8bcf30] = ;;

		*node[0x5f258c8bcf60] = print;

		*node[0x5f258c8bcf90] = 8;

		*node[0x5f258c8bcfc0] = ;;

		*node[0x5f258c8bcff0] = print;

		*node[0x5f258c8bd020] = 10;

		*node[0x5f258c8bd050] = ;;

		*node[0x5f258c8bd080] = return;

		*node[0x5f258c8bd0b0] = 0;

		*node[0x5f258c8bd0e0] = ;;

		*node[0x5f258c8bd110] = 6;

		*node[0x5f258c8bd140] = 1;

		*node[0x5f258c8bd170] = 2;

		*node[0x5f258c8bd1a0] = 3;

		*node[0x5f258c8bd1d0] = ;;

		*node[0x5f258c8bd200] = =;

		*node[0x5f258c8bd230] = 7;

		*node[0x5f258c8bd260] = -;

		*node[0x5f258c8bd290] = 0;

		*node[0x5f258c8bd2c0] = 1;

		*node[0x5f258c8bd2f0] = ;;

		*node[0x5f258c8bd320] = =;

		*node[0x5f258c8bd350] = 8;

		*node[0x5f258c8bd380] = 1;

		*node[0x5f258c8bd3b0] = ;;

		*node[0x5f258c8bd3e0] = =;

		*node[0x5f258c8bd410] = 11;

		*node[0x5f258c8bd440] = 2;

		*node[0x5f258c8bd470] = ;;

		*node[0x5f258c8bd4a0] = if;

		*node[0x5f258c8bd4d0] = op_no;

		*node[0x5f258c8bd500] = ==;

		*node[0x5f258c8bd530] = 3;

		*node[0x5f258c8bd560] = 0;

		*node[0x5f258c8bd590] = ;;

		*node[0x5f258c8bd5c0] = =;

		*node[0x5f258c8bd5f0] = 12;

		*node[0x5f258c8bd620] = 0;

		*node[0x5f258c8bd650] = ;;

		*node[0x5f258c8bd680] = =;

		*node[0x5f258c8bd6b0] = 13;

		*node[0x5f258c8bd6e0] = /;

		*node[0x5f258c8bd710] = -;

		*node[0x5f258c8bd740] = 0;

		*node[0x5f258c8bd770] = 2;

		*node[0x5f258c8bd7a0] = 1;

		*node[0x5f258c8bd7d0] = ;;

		*node[0x5f258c8bd800] = print;

		*node[0x5f258c8bd830] = 11;

		*node[0x5f258c8bd860] = ;;

		*node[0x5f258c8bd890] = print;

		*node[0x5f258c8bd8c0] = 12;

		*node[0x5f258c8bd8f0] = 13;

		*node[0x5f258c8bd920] = else;

		*node[0x5f258c8bd950] = op_no;

		*node[0x5f258c8bd980] = ;;

		*node[0x5f258c8bd9b0] = =;

		*node[0x5f258c8bd9e0] = 14;

		*node[0x5f258c8bda10] = -;

		*node[0x5f258c8bda40] = *;

		*node[0x5f258c8bda70] = 2;

		*node[0x5f258c8bdaa0] = 2;

		*node[0x5f258c8bdad0] = *;

		*node[0x5f258c8bdb00] = *;

		*node[0x5f258c8bdb30] = 4;

		*node[0x5f258c8bdb60] = 1;

		*node[0x5f258c8bdb90] = 3;

		*node[0x5f258c8bdbc0] = ;;

		*node[0x5f258c8bdbf0] = if;

		*node[0x5f258c8bdc20] = op_no;

		*node[0x5f258c8bdc50] = >;

		*node[0x5f258c8bdc80] = 14;

		*node[0x5f258c8bdcb0] = 0;

		*node[0x5f258c8bdce0] = ;;

		*node[0x5f258c8bdd10] = =;

		*node[0x5f258c8bdd40] = 15;

		*node[0x5f258c8bdd70] = sqrt;

		*node[0x5f258c8bdda0] = 14;

		*node[0x5f258c8bddd0] = ;;

		*node[0x5f258c8bde00] = =;

		*node[0x5f258c8bde30] = 12;

		*node[0x5f258c8bde60] = /;

		*node[0x5f258c8bde90] = -;

		*node[0x5f258c8bdec0] = -;

		*node[0x5f258c8bdef0] = 0;

		*node[0x5f258c8bdf20] = 2;

		*node[0x5f258c8bdf50] = 15;

		*node[0x5f258c8bdf80] = *;

		*node[0x5f258c8bdfb0] = 2;

		*node[0x5f258c8bdfe0] = 1;

		*node[0x5f258c8be010] = ;;

		*node[0x5f258c8be040] = =;

		*node[0x5f258c8be070] = 13;

		*node[0x5f258c8be0a0] = /;

		*node[0x5f258c8be0d0] = +;

		*node[0x5f258c8be100] = -;

		*node[0x5f258c8be130] = 0;

		*node[0x5f258c8be160] = 2;

		*node[0x5f258c8be190] = 15;

		*node[0x5f258c8be1c0] = *;

		*node[0x5f258c8be1f0] = 2;

		*node[0x5f258c8be220] = 1;

		*node[0x5f258c8be250] = ;;

		*node[0x5f258c8be280] = print;

		*node[0x5f258c8be2b0] = 11;

		*node[0x5f258c8be2e0] = ;;

		*node[0x5f258c8be310] = print;

		*node[0x5f258c8be340] = 12;

		*node[0x5f258c8be370] = 13;

		*node[0x5f258c8be3a0] = elseif;

		*node[0x5f258c8be3d0] = op_no;

		*node[0x5f258c8be400] = ==;

		*node[0x5f258c8be430] = 14;

		*node[0x5f258c8be460] = 0;

		*node[0x5f258c8be490] = ;;

		*node[0x5f258c8be4c0] = =;

		*node[0x5f258c8be4f0] = 10;

		*node[0x5f258c8be520] = /;

		*node[0x5f258c8be550] = -;

		*node[0x5f258c8be580] = 0;

		*node[0x5f258c8be5b0] = 2;

		*node[0x5f258c8be5e0] = *;

		*node[0x5f258c8be610] = 2;

		*node[0x5f258c8be640] = 1;

		*node[0x5f258c8be670] = ;;

		*node[0x5f258c8be6a0] = print;

		*node[0x5f258c8be6d0] = 8;

		*node[0x5f258c8be700] = ;;

		*node[0x5f258c8be730] = print;

		*node[0x5f258c8be760] = 10;

		*node[0x5f258c8be790] = else;

		*node[0x5f258c8be7c0] = op_no;

		*node[0x5f258c8be7f0] = ;;

		*node[0x5f258c8be820] = print;

		*node[0x5f258c8be850] = 7;

		*node[0x5f258c8be880] = ;;

		*node[0x5f258c8be8b0] = return;

		*node[0x5f258c8be8e0] = 0;

		*node[0x5f258c8be910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
[31mERROR: an error occurred while opening the file[0m
tree[0x7ffd90578f60] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffeff9ad680] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5664b7fc8fd0] = ;;

		*node[0x5664b7fc9000] = 0;

		*node[0x5664b7fc9030] = ;;

		*node[0x5664b7fc9060] = input;

		*node[0x5664b7fc9090] = 1;

		*node[0x5664b7fc90c0] = 2;

		*node[0x5664b7fc90f0] = 3;

		*node[0x5664b7fc9120] = ;;

		*node[0x5664b7fc9180] = 1;

		*node[0x5664b7fc91b0] = 2;

		*node[0x5664b7fc91e0] = 3;

		*node[0x5664b7fc9210] = ;;

		*node[0x5664b7fc9240] = 4;

		*node[0x5664b7fc9270] = 1;

		*node[0x5664b7fc92a0] = 2;

		*node[0x5664b7fc92d0] = 3;

		*node[0x5664b7fc9300] = ;;

		*node[0x5664b7fc9330] = if;

		*node[0x5664b7fc9360] = op_no;

		*node[0x5664b7fc9390] = ==;

		*node[0x5664b7fc93c0] = 1;

		*node[0x5664b7fc93f0] = 0;

		*node[0x5664b7fc9420] = ;;

		*node[0x5664b7fc9480] = 2;

		*node[0x5664b7fc94b0] = 3;

		*node[0x5664b7fc94e0] = else;

		*node[0x5664b7fc9510] = op_no;

		*node[0x5664b7fc9540] = ;;

		*node[0x5664b7fc95a0] = 1;

		*node[0x5664b7fc95d0] = 2;

		*node[0x5664b7fc9600] = 3;

		*node[0x5664b7fc9630] = ;;

		*node[0x5664b7fc9660] = 5;

		*node[0x5664b7fc9690] = 1;

		*node[0x5664b7fc96c0] = 2;

		*node[0x5664b7fc96f0] = ;;

		*node[0x5664b7fc9720] = =;

		*node[0x5664b7fc9750] = 7;

		*node[0x5664b7fc9780] = -;

		*node[0x5664b7fc97b0] = 0;

		*node[0x5664b7fc97e0] = 1;

		*node[0x5664b7fc9810] = ;;

		*node[0x5664b7fc9840] = =;

		*node[0x5664b7fc9870] = 8;

		*node[0x5664b7fc98a0] = 1;

		*node[0x5664b7fc98d0] = ;;

		*node[0x5664b7fc9900] = =;

		*node[0x5664b7fc9930] = 9;

		*node[0x5664b7fc9960] = 1000;

		*node[0x5664b7fc9990] = ;;

		*node[0x5664b7fc99c0] = if;

		*node[0x5664b7fc99f0] = op_no;

		*node[0x5664b7fc9a20] = ==;

		*node[0x5664b7fc9a50] = 1;

		*node[0x5664b7fc9a80] = 0;

		*node[0x5664b7fc9ab0] = ;;

		*node[0x5664b7fc9ae0] = if;

		*node[0x5664b7fc9b10] = op_no;

		*node[0x5664b7fc9b40] = ==;

		*node[0x5664b7fc9b70] = 2;

		*node[0x5664b7fc9ba0] = 0;

		*node[0x5664b7fc9bd0] = ;;

		*node[0x5664b7fc9c00] = print;

		*node[0x5664b7fc9c30] = 9;

		*node[0x5664b7fc9c60] = else;

		*node[0x5664b7fc9c90] = op_no;

		*node[0x5664b7fc9cc0] = ;;

		*node[0x5664b7fc9cf0] = print;

		*node[0x5664b7fc9d20] = 7;

		*node[0x5664b7fc9d50] = else;

		*node[0x5664b7fc9d80] = op_no;

		*node[0x5664b7fc9db0] = ;;

		*node[0x5664b7fc9de0] = =;

		*node[0x5664b7fc9e10] = 10;

		*node[0x5664b7fc9e40] = /;

		*node[0x5664b7fc9e70] = -;

		*node[0x5664b7fc9ea0] = 0;

		*node[0x5664b7fc9ed0] = 2;

		*node[0x5664b7fc9f00] = 1;

		*node[0x5664b7fc9f30] = ;;

		*node[0x5664b7fc9f60] = print;

		*node[0x5664b7fc9f90] = 8;

		*node[0x5664b7fc9fc0] = ;;

		*node[0x5664b7fc9ff0] = print;

		*node[0x5664b7fca020] = 10;

		*node[0x5664b7fca050] = ;;

		*node[0x5664b7fca080] = return;

		*node[0x5664b7fca0b0] = 0;

		*node[0x5664b7fca0e0] = ;;

		*node[0x5664b7fca110] = 6;

		*node[0x5664b7fca140] = 1;

		*node[0x5664b7fca170] = 2;

		*node[0x5664b7fca1a0] = 3;

		*node[0x5664b7fca1d0] = ;;

		*node[0x5664b7fca200] = =;

		*node[0x5664b7fca230] = 7;

		*node[0x5664b7fca260] = -;

		*node[0x5664b7fca290] = 0;

		*node[0x5664b7fca2c0] = 1;

		*node[0x5664b7fca2f0] = ;;

		*node[0x5664b7fca320] = =;

		*node[0x5664b7fca350] = 8;

		*node[0x5664b7fca380] = 1;

		*node[0x5664b7fca3b0] = ;;

		*node[0x5664b7fca3e0] = =;

		*node[0x5664b7fca410] = 11;

		*node[0x5664b7fca440] = 2;

		*node[0x5664b7fca470] = ;;

		*node[0x5664b7fca4a0] = if;

		*node[0x5664b7fca4d0] = op_no;

		*node[0x5664b7fca500] = ==;

		*node[0x5664b7fca530] = 3;

		*node[0x5664b7fca560] = 0;

		*node[0x5664b7fca590] = ;;

		*node[0x5664b7fca5c0] = =;

		*node[0x5664b7fca5f0] = 12;

		*node[0x5664b7fca620] = 0;

		*node[0x5664b7fca650] = ;;

		*node[0x5664b7fca680] = =;

		*node[0x5664b7fca6b0] = 13;

		*node[0x5664b7fca6e0] = /;

		*node[0x5664b7fca710] = -;

		*node[0x5664b7fca740] = 0;

		*node[0x5664b7fca770] = 2;

		*node[0x5664b7fca7a0] = 1;

		*node[0x5664b7fca7d0] = ;;

		*node[0x5664b7fca800] = print;

		*node[0x5664b7fca830] = 11;

		*node[0x5664b7fca860] = ;;

		*node[0x5664b7fca890] = print;

		*node[0x5664b7fca8c0] = 12;

		*node[0x5664b7fca8f0] = 13;

		*node[0x5664b7fca920] = else;

		*node[0x5664b7fca950] = op_no;

		*node[0x5664b7fca980] = ;;

		*node[0x5664b7fca9b0] = =;

		*node[0x5664b7fca9e0] = 14;

		*node[0x5664b7fcaa10] = -;

		*node[0x5664b7fcaa40] = *;

		*node[0x5664b7fcaa70] = 2;

		*node[0x5664b7fcaaa0] = 2;

		*node[0x5664b7fcaad0] = *;

		*node[0x5664b7fcab00] = *;

		*node[0x5664b7fcab30] = 4;

		*node[0x5664b7fcab60] = 1;

		*node[0x5664b7fcab90] = 3;

		*node[0x5664b7fcabc0] = ;;

		*node[0x5664b7fcabf0] = if;

		*node[0x5664b7fcac20] = op_no;

		*node[0x5664b7fcac50] = >;

		*node[0x5664b7fcac80] = 14;

		*node[0x5664b7fcacb0] = 0;

		*node[0x5664b7fcace0] = ;;

		*node[0x5664b7fcad10] = =;

		*node[0x5664b7fcad40] = 15;

		*node[0x5664b7fcad70] = sqrt;

		*node[0x5664b7fcada0] = 14;

		*node[0x5664b7fcadd0] = ;;

		*node[0x5664b7fcae00] = =;

		*node[0x5664b7fcae30] = 12;

		*node[0x5664b7fcae60] = /;

		*node[0x5664b7fcae90] = -;

		*node[0x5664b7fcaec0] = -;

		*node[0x5664b7fcaef0] = 0;

		*node[0x5664b7fcaf20] = 2;

		*node[0x5664b7fcaf50] = 15;

		*node[0x5664b7fcaf80] = *;

		*node[0x5664b7fcafb0] = 2;

		*node[0x5664b7fcafe0] = 1;

		*node[0x5664b7fcb010] = ;;

		*node[0x5664b7fcb040] = =;

		*node[0x5664b7fcb070] = 13;

		*node[0x5664b7fcb0a0] = /;

		*node[0x5664b7fcb0d0] = +;

		*node[0x5664b7fcb100] = -;

		*node[0x5664b7fcb130] = 0;

		*node[0x5664b7fcb160] = 2;

		*node[0x5664b7fcb190] = 15;

		*node[0x5664b7fcb1c0] = *;

		*node[0x5664b7fcb1f0] = 2;

		*node[0x5664b7fcb220] = 1;

		*node[0x5664b7fcb250] = ;;

		*node[0x5664b7fcb280] = print;

		*node[0x5664b7fcb2b0] = 11;

		*node[0x5664b7fcb2e0] = ;;

		*node[0x5664b7fcb310] = print;

		*node[0x5664b7fcb340] = 12;

		*node[0x5664b7fcb370] = 13;

		*node[0x5664b7fcb3a0] = elseif;

		*node[0x5664b7fcb3d0] = op_no;

		*node[0x5664b7fcb400] = ==;

		*node[0x5664b7fcb430] = 14;

		*node[0x5664b7fcb460] = 0;

		*node[0x5664b7fcb490] = ;;

		*node[0x5664b7fcb4c0] = =;

		*node[0x5664b7fcb4f0] = 10;

		*node[0x5664b7fcb520] = /;

		*node[0x5664b7fcb550] = -;

		*node[0x5664b7fcb580] = 0;

		*node[0x5664b7fcb5b0] = 2;

		*node[0x5664b7fcb5e0] = *;

		*node[0x5664b7fcb610] = 2;

		*node[0x5664b7fcb640] = 1;

		*node[0x5664b7fcb670] = ;;

		*node[0x5664b7fcb6a0] = print;

		*node[0x5664b7fcb6d0] = 8;

		*node[0x5664b7fcb700] = ;;

		*node[0x5664b7fcb730] = print;

		*node[0x5664b7fcb760] = 10;

		*node[0x5664b7fcb790] = else;

		*node[0x5664b7fcb7c0] = op_no;

		*node[0x5664b7fcb7f0] = ;;

		*node[0x5664b7fcb820] = print;

		*node[0x5664b7fcb850] = 7;

		*node[0x5664b7fcb880] = ;;

		*node[0x5664b7fcb8b0] = return;

		*node[0x5664b7fcb8e0] = 0;

		*node[0x5664b7fcb910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd592534e0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e051d284fd0] = ;;

		*node[0x5e051d285000] = 0;

		*node[0x5e051d285030] = ;;

		*node[0x5e051d285060] = input;

		*node[0x5e051d285090] = 1;

		*node[0x5e051d2850c0] = 2;

		*node[0x5e051d2850f0] = 3;

		*node[0x5e051d285120] = ;;

		*node[0x5e051d285180] = 1;

		*node[0x5e051d2851b0] = 2;

		*node[0x5e051d2851e0] = 3;

		*node[0x5e051d285210] = ;;

		*node[0x5e051d285240] = 4;

		*node[0x5e051d285270] = 1;

		*node[0x5e051d2852a0] = 2;

		*node[0x5e051d2852d0] = 3;

		*node[0x5e051d285300] = ;;

		*node[0x5e051d285330] = if;

		*node[0x5e051d285360] = op_no;

		*node[0x5e051d285390] = ==;

		*node[0x5e051d2853c0] = 1;

		*node[0x5e051d2853f0] = 0;

		*node[0x5e051d285420] = ;;

		*node[0x5e051d285480] = 2;

		*node[0x5e051d2854b0] = 3;

		*node[0x5e051d2854e0] = else;

		*node[0x5e051d285510] = op_no;

		*node[0x5e051d285540] = ;;

		*node[0x5e051d2855a0] = 1;

		*node[0x5e051d2855d0] = 2;

		*node[0x5e051d285600] = 3;

		*node[0x5e051d285630] = ;;

		*node[0x5e051d285660] = 5;

		*node[0x5e051d285690] = 1;

		*node[0x5e051d2856c0] = 2;

		*node[0x5e051d2856f0] = ;;

		*node[0x5e051d285720] = =;

		*node[0x5e051d285750] = 7;

		*node[0x5e051d285780] = -;

		*node[0x5e051d2857b0] = 0;

		*node[0x5e051d2857e0] = 1;

		*node[0x5e051d285810] = ;;

		*node[0x5e051d285840] = =;

		*node[0x5e051d285870] = 8;

		*node[0x5e051d2858a0] = 1;

		*node[0x5e051d2858d0] = ;;

		*node[0x5e051d285900] = =;

		*node[0x5e051d285930] = 9;

		*node[0x5e051d285960] = 1000;

		*node[0x5e051d285990] = ;;

		*node[0x5e051d2859c0] = if;

		*node[0x5e051d2859f0] = op_no;

		*node[0x5e051d285a20] = ==;

		*node[0x5e051d285a50] = 1;

		*node[0x5e051d285a80] = 0;

		*node[0x5e051d285ab0] = ;;

		*node[0x5e051d285ae0] = if;

		*node[0x5e051d285b10] = op_no;

		*node[0x5e051d285b40] = ==;

		*node[0x5e051d285b70] = 2;

		*node[0x5e051d285ba0] = 0;

		*node[0x5e051d285bd0] = ;;

		*node[0x5e051d285c00] = print;

		*node[0x5e051d285c30] = 9;

		*node[0x5e051d285c60] = else;

		*node[0x5e051d285c90] = op_no;

		*node[0x5e051d285cc0] = ;;

		*node[0x5e051d285cf0] = print;

		*node[0x5e051d285d20] = 7;

		*node[0x5e051d285d50] = else;

		*node[0x5e051d285d80] = op_no;

		*node[0x5e051d285db0] = ;;

		*node[0x5e051d285de0] = =;

		*node[0x5e051d285e10] = 10;

		*node[0x5e051d285e40] = /;

		*node[0x5e051d285e70] = -;

		*node[0x5e051d285ea0] = 0;

		*node[0x5e051d285ed0] = 2;

		*node[0x5e051d285f00] = 1;

		*node[0x5e051d285f30] = ;;

		*node[0x5e051d285f60] = print;

		*node[0x5e051d285f90] = 8;

		*node[0x5e051d285fc0] = ;;

		*node[0x5e051d285ff0] = print;

		*node[0x5e051d286020] = 10;

		*node[0x5e051d286050] = ;;

		*node[0x5e051d286080] = return;

		*node[0x5e051d2860b0] = 0;

		*node[0x5e051d2860e0] = ;;

		*node[0x5e051d286110] = 6;

		*node[0x5e051d286140] = 1;

		*node[0x5e051d286170] = 2;

		*node[0x5e051d2861a0] = 3;

		*node[0x5e051d2861d0] = ;;

		*node[0x5e051d286200] = =;

		*node[0x5e051d286230] = 7;

		*node[0x5e051d286260] = -;

		*node[0x5e051d286290] = 0;

		*node[0x5e051d2862c0] = 1;

		*node[0x5e051d2862f0] = ;;

		*node[0x5e051d286320] = =;

		*node[0x5e051d286350] = 8;

		*node[0x5e051d286380] = 1;

		*node[0x5e051d2863b0] = ;;

		*node[0x5e051d2863e0] = =;

		*node[0x5e051d286410] = 11;

		*node[0x5e051d286440] = 2;

		*node[0x5e051d286470] = ;;

		*node[0x5e051d2864a0] = if;

		*node[0x5e051d2864d0] = op_no;

		*node[0x5e051d286500] = ==;

		*node[0x5e051d286530] = 3;

		*node[0x5e051d286560] = 0;

		*node[0x5e051d286590] = ;;

		*node[0x5e051d2865c0] = =;

		*node[0x5e051d2865f0] = 12;

		*node[0x5e051d286620] = 0;

		*node[0x5e051d286650] = ;;

		*node[0x5e051d286680] = =;

		*node[0x5e051d2866b0] = 13;

		*node[0x5e051d2866e0] = /;

		*node[0x5e051d286710] = -;

		*node[0x5e051d286740] = 0;

		*node[0x5e051d286770] = 2;

		*node[0x5e051d2867a0] = 1;

		*node[0x5e051d2867d0] = ;;

		*node[0x5e051d286800] = print;

		*node[0x5e051d286830] = 11;

		*node[0x5e051d286860] = ;;

		*node[0x5e051d286890] = print;

		*node[0x5e051d2868c0] = 12;

		*node[0x5e051d2868f0] = 13;

		*node[0x5e051d286920] = else;

		*node[0x5e051d286950] = op_no;

		*node[0x5e051d286980] = ;;

		*node[0x5e051d2869b0] = =;

		*node[0x5e051d2869e0] = 14;

		*node[0x5e051d286a10] = -;

		*node[0x5e051d286a40] = *;

		*node[0x5e051d286a70] = 2;

		*node[0x5e051d286aa0] = 2;

		*node[0x5e051d286ad0] = *;

		*node[0x5e051d286b00] = *;

		*node[0x5e051d286b30] = 4;

		*node[0x5e051d286b60] = 1;

		*node[0x5e051d286b90] = 3;

		*node[0x5e051d286bc0] = ;;

		*node[0x5e051d286bf0] = if;

		*node[0x5e051d286c20] = op_no;

		*node[0x5e051d286c50] = >;

		*node[0x5e051d286c80] = 14;

		*node[0x5e051d286cb0] = 0;

		*node[0x5e051d286ce0] = ;;

		*node[0x5e051d286d10] = =;

		*node[0x5e051d286d40] = 15;

		*node[0x5e051d286d70] = sqrt;

		*node[0x5e051d286da0] = 14;

		*node[0x5e051d286dd0] = ;;

		*node[0x5e051d286e00] = =;

		*node[0x5e051d286e30] = 12;

		*node[0x5e051d286e60] = /;

		*node[0x5e051d286e90] = -;

		*node[0x5e051d286ec0] = -;

		*node[0x5e051d286ef0] = 0;

		*node[0x5e051d286f20] = 2;

		*node[0x5e051d286f50] = 15;

		*node[0x5e051d286f80] = *;

		*node[0x5e051d286fb0] = 2;

		*node[0x5e051d286fe0] = 1;

		*node[0x5e051d287010] = ;;

		*node[0x5e051d287040] = =;

		*node[0x5e051d287070] = 13;

		*node[0x5e051d2870a0] = /;

		*node[0x5e051d2870d0] = +;

		*node[0x5e051d287100] = -;

		*node[0x5e051d287130] = 0;

		*node[0x5e051d287160] = 2;

		*node[0x5e051d287190] = 15;

		*node[0x5e051d2871c0] = *;

		*node[0x5e051d2871f0] = 2;

		*node[0x5e051d287220] = 1;

		*node[0x5e051d287250] = ;;

		*node[0x5e051d287280] = print;

		*node[0x5e051d2872b0] = 11;

		*node[0x5e051d2872e0] = ;;

		*node[0x5e051d287310] = print;

		*node[0x5e051d287340] = 12;

		*node[0x5e051d287370] = 13;

		*node[0x5e051d2873a0] = elseif;

		*node[0x5e051d2873d0] = op_no;

		*node[0x5e051d287400] = ==;

		*node[0x5e051d287430] = 14;

		*node[0x5e051d287460] = 0;

		*node[0x5e051d287490] = ;;

		*node[0x5e051d2874c0] = =;

		*node[0x5e051d2874f0] = 10;

		*node[0x5e051d287520] = /;

		*node[0x5e051d287550] = -;

		*node[0x5e051d287580] = 0;

		*node[0x5e051d2875b0] = 2;

		*node[0x5e051d2875e0] = *;

		*node[0x5e051d287610] = 2;

		*node[0x5e051d287640] = 1;

		*node[0x5e051d287670] = ;;

		*node[0x5e051d2876a0] = print;

		*node[0x5e051d2876d0] = 8;

		*node[0x5e051d287700] = ;;

		*node[0x5e051d287730] = print;

		*node[0x5e051d287760] = 10;

		*node[0x5e051d287790] = else;

		*node[0x5e051d2877c0] = op_no;

		*node[0x5e051d2877f0] = ;;

		*node[0x5e051d287820] = print;

		*node[0x5e051d287850] = 7;

		*node[0x5e051d287880] = ;;

		*node[0x5e051d2878b0] = return;

		*node[0x5e051d2878e0] = 0;

		*node[0x5e051d287910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffefccb4940] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x569d6a0d9fd0] = ;;

		*node[0x569d6a0da000] = 0;

		*node[0x569d6a0da030] = ;;

		*node[0x569d6a0da060] = input;

		*node[0x569d6a0da090] = 1;

		*node[0x569d6a0da0c0] = 2;

		*node[0x569d6a0da0f0] = 3;

		*node[0x569d6a0da120] = ;;

		*node[0x569d6a0da180] = 1;

		*node[0x569d6a0da1b0] = 2;

		*node[0x569d6a0da1e0] = 3;

		*node[0x569d6a0da210] = ;;

		*node[0x569d6a0da240] = 4;

		*node[0x569d6a0da270] = 1;

		*node[0x569d6a0da2a0] = 2;

		*node[0x569d6a0da2d0] = 3;

		*node[0x569d6a0da300] = ;;

		*node[0x569d6a0da330] = if;

		*node[0x569d6a0da360] = op_no;

		*node[0x569d6a0da390] = ==;

		*node[0x569d6a0da3c0] = 1;

		*node[0x569d6a0da3f0] = 0;

		*node[0x569d6a0da420] = ;;

		*node[0x569d6a0da480] = 2;

		*node[0x569d6a0da4b0] = 3;

		*node[0x569d6a0da4e0] = else;

		*node[0x569d6a0da510] = op_no;

		*node[0x569d6a0da540] = ;;

		*node[0x569d6a0da5a0] = 1;

		*node[0x569d6a0da5d0] = 2;

		*node[0x569d6a0da600] = 3;

		*node[0x569d6a0da630] = ;;

		*node[0x569d6a0da660] = 5;

		*node[0x569d6a0da690] = 1;

		*node[0x569d6a0da6c0] = 2;

		*node[0x569d6a0da6f0] = ;;

		*node[0x569d6a0da720] = =;

		*node[0x569d6a0da750] = 7;

		*node[0x569d6a0da780] = -;

		*node[0x569d6a0da7b0] = 0;

		*node[0x569d6a0da7e0] = 1;

		*node[0x569d6a0da810] = ;;

		*node[0x569d6a0da840] = =;

		*node[0x569d6a0da870] = 8;

		*node[0x569d6a0da8a0] = 1;

		*node[0x569d6a0da8d0] = ;;

		*node[0x569d6a0da900] = =;

		*node[0x569d6a0da930] = 9;

		*node[0x569d6a0da960] = 1000;

		*node[0x569d6a0da990] = ;;

		*node[0x569d6a0da9c0] = if;

		*node[0x569d6a0da9f0] = op_no;

		*node[0x569d6a0daa20] = ==;

		*node[0x569d6a0daa50] = 1;

		*node[0x569d6a0daa80] = 0;

		*node[0x569d6a0daab0] = ;;

		*node[0x569d6a0daae0] = if;

		*node[0x569d6a0dab10] = op_no;

		*node[0x569d6a0dab40] = ==;

		*node[0x569d6a0dab70] = 2;

		*node[0x569d6a0daba0] = 0;

		*node[0x569d6a0dabd0] = ;;

		*node[0x569d6a0dac00] = print;

		*node[0x569d6a0dac30] = 9;

		*node[0x569d6a0dac60] = else;

		*node[0x569d6a0dac90] = op_no;

		*node[0x569d6a0dacc0] = ;;

		*node[0x569d6a0dacf0] = print;

		*node[0x569d6a0dad20] = 7;

		*node[0x569d6a0dad50] = else;

		*node[0x569d6a0dad80] = op_no;

		*node[0x569d6a0dadb0] = ;;

		*node[0x569d6a0dade0] = =;

		*node[0x569d6a0dae10] = 10;

		*node[0x569d6a0dae40] = /;

		*node[0x569d6a0dae70] = -;

		*node[0x569d6a0daea0] = 0;

		*node[0x569d6a0daed0] = 2;

		*node[0x569d6a0daf00] = 1;

		*node[0x569d6a0daf30] = ;;

		*node[0x569d6a0daf60] = print;

		*node[0x569d6a0daf90] = 8;

		*node[0x569d6a0dafc0] = ;;

		*node[0x569d6a0daff0] = print;

		*node[0x569d6a0db020] = 10;

		*node[0x569d6a0db050] = ;;

		*node[0x569d6a0db080] = return;

		*node[0x569d6a0db0b0] = 0;

		*node[0x569d6a0db0e0] = ;;

		*node[0x569d6a0db110] = 6;

		*node[0x569d6a0db140] = 1;

		*node[0x569d6a0db170] = 2;

		*node[0x569d6a0db1a0] = 3;

		*node[0x569d6a0db1d0] = ;;

		*node[0x569d6a0db200] = =;

		*node[0x569d6a0db230] = 7;

		*node[0x569d6a0db260] = -;

		*node[0x569d6a0db290] = 0;

		*node[0x569d6a0db2c0] = 1;

		*node[0x569d6a0db2f0] = ;;

		*node[0x569d6a0db320] = =;

		*node[0x569d6a0db350] = 8;

		*node[0x569d6a0db380] = 1;

		*node[0x569d6a0db3b0] = ;;

		*node[0x569d6a0db3e0] = =;

		*node[0x569d6a0db410] = 11;

		*node[0x569d6a0db440] = 2;

		*node[0x569d6a0db470] = ;;

		*node[0x569d6a0db4a0] = if;

		*node[0x569d6a0db4d0] = op_no;

		*node[0x569d6a0db500] = ==;

		*node[0x569d6a0db530] = 3;

		*node[0x569d6a0db560] = 0;

		*node[0x569d6a0db590] = ;;

		*node[0x569d6a0db5c0] = =;

		*node[0x569d6a0db5f0] = 12;

		*node[0x569d6a0db620] = 0;

		*node[0x569d6a0db650] = ;;

		*node[0x569d6a0db680] = =;

		*node[0x569d6a0db6b0] = 13;

		*node[0x569d6a0db6e0] = /;

		*node[0x569d6a0db710] = -;

		*node[0x569d6a0db740] = 0;

		*node[0x569d6a0db770] = 2;

		*node[0x569d6a0db7a0] = 1;

		*node[0x569d6a0db7d0] = ;;

		*node[0x569d6a0db800] = print;

		*node[0x569d6a0db830] = 11;

		*node[0x569d6a0db860] = ;;

		*node[0x569d6a0db890] = print;

		*node[0x569d6a0db8c0] = 12;

		*node[0x569d6a0db8f0] = 13;

		*node[0x569d6a0db920] = else;

		*node[0x569d6a0db950] = op_no;

		*node[0x569d6a0db980] = ;;

		*node[0x569d6a0db9b0] = =;

		*node[0x569d6a0db9e0] = 14;

		*node[0x569d6a0dba10] = -;

		*node[0x569d6a0dba40] = *;

		*node[0x569d6a0dba70] = 2;

		*node[0x569d6a0dbaa0] = 2;

		*node[0x569d6a0dbad0] = *;

		*node[0x569d6a0dbb00] = *;

		*node[0x569d6a0dbb30] = 4;

		*node[0x569d6a0dbb60] = 1;

		*node[0x569d6a0dbb90] = 3;

		*node[0x569d6a0dbbc0] = ;;

		*node[0x569d6a0dbbf0] = if;

		*node[0x569d6a0dbc20] = op_no;

		*node[0x569d6a0dbc50] = >;

		*node[0x569d6a0dbc80] = 14;

		*node[0x569d6a0dbcb0] = 0;

		*node[0x569d6a0dbce0] = ;;

		*node[0x569d6a0dbd10] = =;

		*node[0x569d6a0dbd40] = 15;

		*node[0x569d6a0dbd70] = sqrt;

		*node[0x569d6a0dbda0] = 14;

		*node[0x569d6a0dbdd0] = ;;

		*node[0x569d6a0dbe00] = =;

		*node[0x569d6a0dbe30] = 12;

		*node[0x569d6a0dbe60] = /;

		*node[0x569d6a0dbe90] = -;

		*node[0x569d6a0dbec0] = -;

		*node[0x569d6a0dbef0] = 0;

		*node[0x569d6a0dbf20] = 2;

		*node[0x569d6a0dbf50] = 15;

		*node[0x569d6a0dbf80] = *;

		*node[0x569d6a0dbfb0] = 2;

		*node[0x569d6a0dbfe0] = 1;

		*node[0x569d6a0dc010] = ;;

		*node[0x569d6a0dc040] = =;

		*node[0x569d6a0dc070] = 13;

		*node[0x569d6a0dc0a0] = /;

		*node[0x569d6a0dc0d0] = +;

		*node[0x569d6a0dc100] = -;

		*node[0x569d6a0dc130] = 0;

		*node[0x569d6a0dc160] = 2;

		*node[0x569d6a0dc190] = 15;

		*node[0x569d6a0dc1c0] = *;

		*node[0x569d6a0dc1f0] = 2;

		*node[0x569d6a0dc220] = 1;

		*node[0x569d6a0dc250] = ;;

		*node[0x569d6a0dc280] = print;

		*node[0x569d6a0dc2b0] = 11;

		*node[0x569d6a0dc2e0] = ;;

		*node[0x569d6a0dc310] = print;

		*node[0x569d6a0dc340] = 12;

		*node[0x569d6a0dc370] = 13;

		*node[0x569d6a0dc3a0] = elseif;

		*node[0x569d6a0dc3d0] = op_no;

		*node[0x569d6a0dc400] = ==;

		*node[0x569d6a0dc430] = 14;

		*node[0x569d6a0dc460] = 0;

		*node[0x569d6a0dc490] = ;;

		*node[0x569d6a0dc4c0] = =;

		*node[0x569d6a0dc4f0] = 10;

		*node[0x569d6a0dc520] = /;

		*node[0x569d6a0dc550] = -;

		*node[0x569d6a0dc580] = 0;

		*node[0x569d6a0dc5b0] = 2;

		*node[0x569d6a0dc5e0] = *;

		*node[0x569d6a0dc610] = 2;

		*node[0x569d6a0dc640] = 1;

		*node[0x569d6a0dc670] = ;;

		*node[0x569d6a0dc6a0] = print;

		*node[0x569d6a0dc6d0] = 8;

		*node[0x569d6a0dc700] = ;;

		*node[0x569d6a0dc730] = print;

		*node[0x569d6a0dc760] = 10;

		*node[0x569d6a0dc790] = else;

		*node[0x569d6a0dc7c0] = op_no;

		*node[0x569d6a0dc7f0] = ;;

		*node[0x569d6a0dc820] = print;

		*node[0x569d6a0dc850] = 7;

		*node[0x569d6a0dc880] = ;;

		*node[0x569d6a0dc8b0] = return;

		*node[0x569d6a0dc8e0] = 0;

		*node[0x569d6a0dc910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff498c7af0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x645b41d83fd0] = ;;

		*node[0x645b41d84000] = 0;

		*node[0x645b41d84030] = ;;

		*node[0x645b41d84060] = input;

		*node[0x645b41d84090] = 1;

		*node[0x645b41d840c0] = 2;

		*node[0x645b41d840f0] = 3;

		*node[0x645b41d84120] = ;;

		*node[0x645b41d84180] = 1;

		*node[0x645b41d841b0] = 2;

		*node[0x645b41d841e0] = 3;

		*node[0x645b41d84210] = ;;

		*node[0x645b41d84240] = 4;

		*node[0x645b41d84270] = 1;

		*node[0x645b41d842a0] = 2;

		*node[0x645b41d842d0] = 3;

		*node[0x645b41d84300] = ;;

		*node[0x645b41d84330] = if;

		*node[0x645b41d84360] = op_no;

		*node[0x645b41d84390] = ==;

		*node[0x645b41d843c0] = 1;

		*node[0x645b41d843f0] = 0;

		*node[0x645b41d84420] = ;;

		*node[0x645b41d84480] = 2;

		*node[0x645b41d844b0] = 3;

		*node[0x645b41d844e0] = else;

		*node[0x645b41d84510] = op_no;

		*node[0x645b41d84540] = ;;

		*node[0x645b41d845a0] = 1;

		*node[0x645b41d845d0] = 2;

		*node[0x645b41d84600] = 3;

		*node[0x645b41d84630] = ;;

		*node[0x645b41d84660] = 5;

		*node[0x645b41d84690] = 1;

		*node[0x645b41d846c0] = 2;

		*node[0x645b41d846f0] = ;;

		*node[0x645b41d84720] = =;

		*node[0x645b41d84750] = 7;

		*node[0x645b41d84780] = -;

		*node[0x645b41d847b0] = 0;

		*node[0x645b41d847e0] = 1;

		*node[0x645b41d84810] = ;;

		*node[0x645b41d84840] = =;

		*node[0x645b41d84870] = 8;

		*node[0x645b41d848a0] = 1;

		*node[0x645b41d848d0] = ;;

		*node[0x645b41d84900] = =;

		*node[0x645b41d84930] = 9;

		*node[0x645b41d84960] = 1000;

		*node[0x645b41d84990] = ;;

		*node[0x645b41d849c0] = if;

		*node[0x645b41d849f0] = op_no;

		*node[0x645b41d84a20] = ==;

		*node[0x645b41d84a50] = 1;

		*node[0x645b41d84a80] = 0;

		*node[0x645b41d84ab0] = ;;

		*node[0x645b41d84ae0] = if;

		*node[0x645b41d84b10] = op_no;

		*node[0x645b41d84b40] = ==;

		*node[0x645b41d84b70] = 2;

		*node[0x645b41d84ba0] = 0;

		*node[0x645b41d84bd0] = ;;

		*node[0x645b41d84c00] = print;

		*node[0x645b41d84c30] = 9;

		*node[0x645b41d84c60] = else;

		*node[0x645b41d84c90] = op_no;

		*node[0x645b41d84cc0] = ;;

		*node[0x645b41d84cf0] = print;

		*node[0x645b41d84d20] = 7;

		*node[0x645b41d84d50] = else;

		*node[0x645b41d84d80] = op_no;

		*node[0x645b41d84db0] = ;;

		*node[0x645b41d84de0] = =;

		*node[0x645b41d84e10] = 10;

		*node[0x645b41d84e40] = /;

		*node[0x645b41d84e70] = -;

		*node[0x645b41d84ea0] = 0;

		*node[0x645b41d84ed0] = 2;

		*node[0x645b41d84f00] = 1;

		*node[0x645b41d84f30] = ;;

		*node[0x645b41d84f60] = print;

		*node[0x645b41d84f90] = 8;

		*node[0x645b41d84fc0] = ;;

		*node[0x645b41d84ff0] = print;

		*node[0x645b41d85020] = 10;

		*node[0x645b41d85050] = ;;

		*node[0x645b41d85080] = return;

		*node[0x645b41d850b0] = 0;

		*node[0x645b41d850e0] = ;;

		*node[0x645b41d85110] = 6;

		*node[0x645b41d85140] = 1;

		*node[0x645b41d85170] = 2;

		*node[0x645b41d851a0] = 3;

		*node[0x645b41d851d0] = ;;

		*node[0x645b41d85200] = =;

		*node[0x645b41d85230] = 7;

		*node[0x645b41d85260] = -;

		*node[0x645b41d85290] = 0;

		*node[0x645b41d852c0] = 1;

		*node[0x645b41d852f0] = ;;

		*node[0x645b41d85320] = =;

		*node[0x645b41d85350] = 8;

		*node[0x645b41d85380] = 1;

		*node[0x645b41d853b0] = ;;

		*node[0x645b41d853e0] = =;

		*node[0x645b41d85410] = 11;

		*node[0x645b41d85440] = 2;

		*node[0x645b41d85470] = ;;

		*node[0x645b41d854a0] = if;

		*node[0x645b41d854d0] = op_no;

		*node[0x645b41d85500] = ==;

		*node[0x645b41d85530] = 3;

		*node[0x645b41d85560] = 0;

		*node[0x645b41d85590] = ;;

		*node[0x645b41d855c0] = =;

		*node[0x645b41d855f0] = 12;

		*node[0x645b41d85620] = 0;

		*node[0x645b41d85650] = ;;

		*node[0x645b41d85680] = =;

		*node[0x645b41d856b0] = 13;

		*node[0x645b41d856e0] = /;

		*node[0x645b41d85710] = -;

		*node[0x645b41d85740] = 0;

		*node[0x645b41d85770] = 2;

		*node[0x645b41d857a0] = 1;

		*node[0x645b41d857d0] = ;;

		*node[0x645b41d85800] = print;

		*node[0x645b41d85830] = 11;

		*node[0x645b41d85860] = ;;

		*node[0x645b41d85890] = print;

		*node[0x645b41d858c0] = 12;

		*node[0x645b41d858f0] = 13;

		*node[0x645b41d85920] = else;

		*node[0x645b41d85950] = op_no;

		*node[0x645b41d85980] = ;;

		*node[0x645b41d859b0] = =;

		*node[0x645b41d859e0] = 14;

		*node[0x645b41d85a10] = -;

		*node[0x645b41d85a40] = *;

		*node[0x645b41d85a70] = 2;

		*node[0x645b41d85aa0] = 2;

		*node[0x645b41d85ad0] = *;

		*node[0x645b41d85b00] = *;

		*node[0x645b41d85b30] = 4;

		*node[0x645b41d85b60] = 1;

		*node[0x645b41d85b90] = 3;

		*node[0x645b41d85bc0] = ;;

		*node[0x645b41d85bf0] = if;

		*node[0x645b41d85c20] = op_no;

		*node[0x645b41d85c50] = >;

		*node[0x645b41d85c80] = 14;

		*node[0x645b41d85cb0] = 0;

		*node[0x645b41d85ce0] = ;;

		*node[0x645b41d85d10] = =;

		*node[0x645b41d85d40] = 15;

		*node[0x645b41d85d70] = sqrt;

		*node[0x645b41d85da0] = 14;

		*node[0x645b41d85dd0] = ;;

		*node[0x645b41d85e00] = =;

		*node[0x645b41d85e30] = 12;

		*node[0x645b41d85e60] = /;

		*node[0x645b41d85e90] = -;

		*node[0x645b41d85ec0] = -;

		*node[0x645b41d85ef0] = 0;

		*node[0x645b41d85f20] = 2;

		*node[0x645b41d85f50] = 15;

		*node[0x645b41d85f80] = *;

		*node[0x645b41d85fb0] = 2;

		*node[0x645b41d85fe0] = 1;

		*node[0x645b41d86010] = ;;

		*node[0x645b41d86040] = =;

		*node[0x645b41d86070] = 13;

		*node[0x645b41d860a0] = /;

		*node[0x645b41d860d0] = +;

		*node[0x645b41d86100] = -;

		*node[0x645b41d86130] = 0;

		*node[0x645b41d86160] = 2;

		*node[0x645b41d86190] = 15;

		*node[0x645b41d861c0] = *;

		*node[0x645b41d861f0] = 2;

		*node[0x645b41d86220] = 1;

		*node[0x645b41d86250] = ;;

		*node[0x645b41d86280] = print;

		*node[0x645b41d862b0] = 11;

		*node[0x645b41d862e0] = ;;

		*node[0x645b41d86310] = print;

		*node[0x645b41d86340] = 12;

		*node[0x645b41d86370] = 13;

		*node[0x645b41d863a0] = elseif;

		*node[0x645b41d863d0] = op_no;

		*node[0x645b41d86400] = ==;

		*node[0x645b41d86430] = 14;

		*node[0x645b41d86460] = 0;

		*node[0x645b41d86490] = ;;

		*node[0x645b41d864c0] = =;

		*node[0x645b41d864f0] = 10;

		*node[0x645b41d86520] = /;

		*node[0x645b41d86550] = -;

		*node[0x645b41d86580] = 0;

		*node[0x645b41d865b0] = 2;

		*node[0x645b41d865e0] = *;

		*node[0x645b41d86610] = 2;

		*node[0x645b41d86640] = 1;

		*node[0x645b41d86670] = ;;

		*node[0x645b41d866a0] = print;

		*node[0x645b41d866d0] = 8;

		*node[0x645b41d86700] = ;;

		*node[0x645b41d86730] = print;

		*node[0x645b41d86760] = 10;

		*node[0x645b41d86790] = else;

		*node[0x645b41d867c0] = op_no;

		*node[0x645b41d867f0] = ;;

		*node[0x645b41d86820] = print;

		*node[0x645b41d86850] = 7;

		*node[0x645b41d86880] = ;;

		*node[0x645b41d868b0] = return;

		*node[0x645b41d868e0] = 0;

		*node[0x645b41d86910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff3d79c310] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x62c382fc5fd0] = ;;

		*node[0x62c382fc6000] = 0;

		*node[0x62c382fc6030] = ;;

		*node[0x62c382fc6060] = input;

		*node[0x62c382fc6090] = 1;

		*node[0x62c382fc60c0] = 2;

		*node[0x62c382fc60f0] = 3;

		*node[0x62c382fc6120] = ;;

		*node[0x62c382fc6180] = 1;

		*node[0x62c382fc61b0] = 2;

		*node[0x62c382fc61e0] = 3;

		*node[0x62c382fc6210] = ;;

		*node[0x62c382fc6240] = 4;

		*node[0x62c382fc6270] = 1;

		*node[0x62c382fc62a0] = 2;

		*node[0x62c382fc62d0] = 3;

		*node[0x62c382fc6300] = ;;

		*node[0x62c382fc6330] = if;

		*node[0x62c382fc6360] = op_no;

		*node[0x62c382fc6390] = ==;

		*node[0x62c382fc63c0] = 1;

		*node[0x62c382fc63f0] = 0;

		*node[0x62c382fc6420] = ;;

		*node[0x62c382fc6480] = 2;

		*node[0x62c382fc64b0] = 3;

		*node[0x62c382fc64e0] = else;

		*node[0x62c382fc6510] = op_no;

		*node[0x62c382fc6540] = ;;

		*node[0x62c382fc65a0] = 1;

		*node[0x62c382fc65d0] = 2;

		*node[0x62c382fc6600] = 3;

		*node[0x62c382fc6630] = ;;

		*node[0x62c382fc6660] = 5;

		*node[0x62c382fc6690] = 1;

		*node[0x62c382fc66c0] = 2;

		*node[0x62c382fc66f0] = ;;

		*node[0x62c382fc6720] = =;

		*node[0x62c382fc6750] = 7;

		*node[0x62c382fc6780] = -;

		*node[0x62c382fc67b0] = 0;

		*node[0x62c382fc67e0] = 1;

		*node[0x62c382fc6810] = ;;

		*node[0x62c382fc6840] = =;

		*node[0x62c382fc6870] = 8;

		*node[0x62c382fc68a0] = 1;

		*node[0x62c382fc68d0] = ;;

		*node[0x62c382fc6900] = =;

		*node[0x62c382fc6930] = 9;

		*node[0x62c382fc6960] = 1000;

		*node[0x62c382fc6990] = ;;

		*node[0x62c382fc69c0] = if;

		*node[0x62c382fc69f0] = op_no;

		*node[0x62c382fc6a20] = ==;

		*node[0x62c382fc6a50] = 1;

		*node[0x62c382fc6a80] = 0;

		*node[0x62c382fc6ab0] = ;;

		*node[0x62c382fc6ae0] = if;

		*node[0x62c382fc6b10] = op_no;

		*node[0x62c382fc6b40] = ==;

		*node[0x62c382fc6b70] = 2;

		*node[0x62c382fc6ba0] = 0;

		*node[0x62c382fc6bd0] = ;;

		*node[0x62c382fc6c00] = print;

		*node[0x62c382fc6c30] = 9;

		*node[0x62c382fc6c60] = else;

		*node[0x62c382fc6c90] = op_no;

		*node[0x62c382fc6cc0] = ;;

		*node[0x62c382fc6cf0] = print;

		*node[0x62c382fc6d20] = 7;

		*node[0x62c382fc6d50] = else;

		*node[0x62c382fc6d80] = op_no;

		*node[0x62c382fc6db0] = ;;

		*node[0x62c382fc6de0] = =;

		*node[0x62c382fc6e10] = 10;

		*node[0x62c382fc6e40] = /;

		*node[0x62c382fc6e70] = -;

		*node[0x62c382fc6ea0] = 0;

		*node[0x62c382fc6ed0] = 2;

		*node[0x62c382fc6f00] = 1;

		*node[0x62c382fc6f30] = ;;

		*node[0x62c382fc6f60] = print;

		*node[0x62c382fc6f90] = 8;

		*node[0x62c382fc6fc0] = ;;

		*node[0x62c382fc6ff0] = print;

		*node[0x62c382fc7020] = 10;

		*node[0x62c382fc7050] = ;;

		*node[0x62c382fc7080] = return;

		*node[0x62c382fc70b0] = 0;

		*node[0x62c382fc70e0] = ;;

		*node[0x62c382fc7110] = 6;

		*node[0x62c382fc7140] = 1;

		*node[0x62c382fc7170] = 2;

		*node[0x62c382fc71a0] = 3;

		*node[0x62c382fc71d0] = ;;

		*node[0x62c382fc7200] = =;

		*node[0x62c382fc7230] = 7;

		*node[0x62c382fc7260] = -;

		*node[0x62c382fc7290] = 0;

		*node[0x62c382fc72c0] = 1;

		*node[0x62c382fc72f0] = ;;

		*node[0x62c382fc7320] = =;

		*node[0x62c382fc7350] = 8;

		*node[0x62c382fc7380] = 1;

		*node[0x62c382fc73b0] = ;;

		*node[0x62c382fc73e0] = =;

		*node[0x62c382fc7410] = 11;

		*node[0x62c382fc7440] = 2;

		*node[0x62c382fc7470] = ;;

		*node[0x62c382fc74a0] = if;

		*node[0x62c382fc74d0] = op_no;

		*node[0x62c382fc7500] = ==;

		*node[0x62c382fc7530] = 3;

		*node[0x62c382fc7560] = 0;

		*node[0x62c382fc7590] = ;;

		*node[0x62c382fc75c0] = =;

		*node[0x62c382fc75f0] = 12;

		*node[0x62c382fc7620] = 0;

		*node[0x62c382fc7650] = ;;

		*node[0x62c382fc7680] = =;

		*node[0x62c382fc76b0] = 13;

		*node[0x62c382fc76e0] = /;

		*node[0x62c382fc7710] = -;

		*node[0x62c382fc7740] = 0;

		*node[0x62c382fc7770] = 2;

		*node[0x62c382fc77a0] = 1;

		*node[0x62c382fc77d0] = ;;

		*node[0x62c382fc7800] = print;

		*node[0x62c382fc7830] = 11;

		*node[0x62c382fc7860] = ;;

		*node[0x62c382fc7890] = print;

		*node[0x62c382fc78c0] = 12;

		*node[0x62c382fc78f0] = 13;

		*node[0x62c382fc7920] = else;

		*node[0x62c382fc7950] = op_no;

		*node[0x62c382fc7980] = ;;

		*node[0x62c382fc79b0] = =;

		*node[0x62c382fc79e0] = 14;

		*node[0x62c382fc7a10] = -;

		*node[0x62c382fc7a40] = *;

		*node[0x62c382fc7a70] = 2;

		*node[0x62c382fc7aa0] = 2;

		*node[0x62c382fc7ad0] = *;

		*node[0x62c382fc7b00] = *;

		*node[0x62c382fc7b30] = 4;

		*node[0x62c382fc7b60] = 1;

		*node[0x62c382fc7b90] = 3;

		*node[0x62c382fc7bc0] = ;;

		*node[0x62c382fc7bf0] = if;

		*node[0x62c382fc7c20] = op_no;

		*node[0x62c382fc7c50] = >;

		*node[0x62c382fc7c80] = 14;

		*node[0x62c382fc7cb0] = 0;

		*node[0x62c382fc7ce0] = ;;

		*node[0x62c382fc7d10] = =;

		*node[0x62c382fc7d40] = 15;

		*node[0x62c382fc7d70] = sqrt;

		*node[0x62c382fc7da0] = 14;

		*node[0x62c382fc7dd0] = ;;

		*node[0x62c382fc7e00] = =;

		*node[0x62c382fc7e30] = 12;

		*node[0x62c382fc7e60] = /;

		*node[0x62c382fc7e90] = -;

		*node[0x62c382fc7ec0] = -;

		*node[0x62c382fc7ef0] = 0;

		*node[0x62c382fc7f20] = 2;

		*node[0x62c382fc7f50] = 15;

		*node[0x62c382fc7f80] = *;

		*node[0x62c382fc7fb0] = 2;

		*node[0x62c382fc7fe0] = 1;

		*node[0x62c382fc8010] = ;;

		*node[0x62c382fc8040] = =;

		*node[0x62c382fc8070] = 13;

		*node[0x62c382fc80a0] = /;

		*node[0x62c382fc80d0] = +;

		*node[0x62c382fc8100] = -;

		*node[0x62c382fc8130] = 0;

		*node[0x62c382fc8160] = 2;

		*node[0x62c382fc8190] = 15;

		*node[0x62c382fc81c0] = *;

		*node[0x62c382fc81f0] = 2;

		*node[0x62c382fc8220] = 1;

		*node[0x62c382fc8250] = ;;

		*node[0x62c382fc8280] = print;

		*node[0x62c382fc82b0] = 11;

		*node[0x62c382fc82e0] = ;;

		*node[0x62c382fc8310] = print;

		*node[0x62c382fc8340] = 12;

		*node[0x62c382fc8370] = 13;

		*node[0x62c382fc83a0] = elseif;

		*node[0x62c382fc83d0] = op_no;

		*node[0x62c382fc8400] = ==;

		*node[0x62c382fc8430] = 14;

		*node[0x62c382fc8460] = 0;

		*node[0x62c382fc8490] = ;;

		*node[0x62c382fc84c0] = =;

		*node[0x62c382fc84f0] = 10;

		*node[0x62c382fc8520] = /;

		*node[0x62c382fc8550] = -;

		*node[0x62c382fc8580] = 0;

		*node[0x62c382fc85b0] = 2;

		*node[0x62c382fc85e0] = *;

		*node[0x62c382fc8610] = 2;

		*node[0x62c382fc8640] = 1;

		*node[0x62c382fc8670] = ;;

		*node[0x62c382fc86a0] = print;

		*node[0x62c382fc86d0] = 8;

		*node[0x62c382fc8700] = ;;

		*node[0x62c382fc8730] = print;

		*node[0x62c382fc8760] = 10;

		*node[0x62c382fc8790] = else;

		*node[0x62c382fc87c0] = op_no;

		*node[0x62c382fc87f0] = ;;

		*node[0x62c382fc8820] = print;

		*node[0x62c382fc8850] = 7;

		*node[0x62c382fc8880] = ;;

		*node[0x62c382fc88b0] = return;

		*node[0x62c382fc88e0] = 0;

		*node[0x62c382fc8910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe73fa7710] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x55c190143fd0] = ;;

		*node[0x55c190144000] = 0;

		*node[0x55c190144030] = ;;

		*node[0x55c190144060] = input;

		*node[0x55c190144090] = 1;

		*node[0x55c1901440c0] = 2;

		*node[0x55c1901440f0] = 3;

		*node[0x55c190144120] = ;;

		*node[0x55c190144180] = 1;

		*node[0x55c1901441b0] = 2;

		*node[0x55c1901441e0] = 3;

		*node[0x55c190144210] = ;;

		*node[0x55c190144240] = 4;

		*node[0x55c190144270] = 1;

		*node[0x55c1901442a0] = 2;

		*node[0x55c1901442d0] = 3;

		*node[0x55c190144300] = ;;

		*node[0x55c190144330] = if;

		*node[0x55c190144360] = op_no;

		*node[0x55c190144390] = ==;

		*node[0x55c1901443c0] = 1;

		*node[0x55c1901443f0] = 0;

		*node[0x55c190144420] = ;;

		*node[0x55c190144480] = 2;

		*node[0x55c1901444b0] = 3;

		*node[0x55c1901444e0] = else;

		*node[0x55c190144510] = op_no;

		*node[0x55c190144540] = ;;

		*node[0x55c1901445a0] = 1;

		*node[0x55c1901445d0] = 2;

		*node[0x55c190144600] = 3;

		*node[0x55c190144630] = ;;

		*node[0x55c190144660] = 5;

		*node[0x55c190144690] = 1;

		*node[0x55c1901446c0] = 2;

		*node[0x55c1901446f0] = ;;

		*node[0x55c190144720] = =;

		*node[0x55c190144750] = 7;

		*node[0x55c190144780] = -;

		*node[0x55c1901447b0] = 0;

		*node[0x55c1901447e0] = 1;

		*node[0x55c190144810] = ;;

		*node[0x55c190144840] = =;

		*node[0x55c190144870] = 8;

		*node[0x55c1901448a0] = 1;

		*node[0x55c1901448d0] = ;;

		*node[0x55c190144900] = =;

		*node[0x55c190144930] = 9;

		*node[0x55c190144960] = 1000;

		*node[0x55c190144990] = ;;

		*node[0x55c1901449c0] = if;

		*node[0x55c1901449f0] = op_no;

		*node[0x55c190144a20] = ==;

		*node[0x55c190144a50] = 1;

		*node[0x55c190144a80] = 0;

		*node[0x55c190144ab0] = ;;

		*node[0x55c190144ae0] = if;

		*node[0x55c190144b10] = op_no;

		*node[0x55c190144b40] = ==;

		*node[0x55c190144b70] = 2;

		*node[0x55c190144ba0] = 0;

		*node[0x55c190144bd0] = ;;

		*node[0x55c190144c00] = print;

		*node[0x55c190144c30] = 9;

		*node[0x55c190144c60] = else;

		*node[0x55c190144c90] = op_no;

		*node[0x55c190144cc0] = ;;

		*node[0x55c190144cf0] = print;

		*node[0x55c190144d20] = 7;

		*node[0x55c190144d50] = else;

		*node[0x55c190144d80] = op_no;

		*node[0x55c190144db0] = ;;

		*node[0x55c190144de0] = =;

		*node[0x55c190144e10] = 10;

		*node[0x55c190144e40] = /;

		*node[0x55c190144e70] = -;

		*node[0x55c190144ea0] = 0;

		*node[0x55c190144ed0] = 2;

		*node[0x55c190144f00] = 1;

		*node[0x55c190144f30] = ;;

		*node[0x55c190144f60] = print;

		*node[0x55c190144f90] = 8;

		*node[0x55c190144fc0] = ;;

		*node[0x55c190144ff0] = print;

		*node[0x55c190145020] = 10;

		*node[0x55c190145050] = ;;

		*node[0x55c190145080] = return;

		*node[0x55c1901450b0] = 0;

		*node[0x55c1901450e0] = ;;

		*node[0x55c190145110] = 6;

		*node[0x55c190145140] = 1;

		*node[0x55c190145170] = 2;

		*node[0x55c1901451a0] = 3;

		*node[0x55c1901451d0] = ;;

		*node[0x55c190145200] = =;

		*node[0x55c190145230] = 7;

		*node[0x55c190145260] = -;

		*node[0x55c190145290] = 0;

		*node[0x55c1901452c0] = 1;

		*node[0x55c1901452f0] = ;;

		*node[0x55c190145320] = =;

		*node[0x55c190145350] = 8;

		*node[0x55c190145380] = 1;

		*node[0x55c1901453b0] = ;;

		*node[0x55c1901453e0] = =;

		*node[0x55c190145410] = 11;

		*node[0x55c190145440] = 2;

		*node[0x55c190145470] = ;;

		*node[0x55c1901454a0] = if;

		*node[0x55c1901454d0] = op_no;

		*node[0x55c190145500] = ==;

		*node[0x55c190145530] = 3;

		*node[0x55c190145560] = 0;

		*node[0x55c190145590] = ;;

		*node[0x55c1901455c0] = =;

		*node[0x55c1901455f0] = 12;

		*node[0x55c190145620] = 0;

		*node[0x55c190145650] = ;;

		*node[0x55c190145680] = =;

		*node[0x55c1901456b0] = 13;

		*node[0x55c1901456e0] = /;

		*node[0x55c190145710] = -;

		*node[0x55c190145740] = 0;

		*node[0x55c190145770] = 2;

		*node[0x55c1901457a0] = 1;

		*node[0x55c1901457d0] = ;;

		*node[0x55c190145800] = print;

		*node[0x55c190145830] = 11;

		*node[0x55c190145860] = ;;

		*node[0x55c190145890] = print;

		*node[0x55c1901458c0] = 12;

		*node[0x55c1901458f0] = 13;

		*node[0x55c190145920] = else;

		*node[0x55c190145950] = op_no;

		*node[0x55c190145980] = ;;

		*node[0x55c1901459b0] = =;

		*node[0x55c1901459e0] = 14;

		*node[0x55c190145a10] = -;

		*node[0x55c190145a40] = *;

		*node[0x55c190145a70] = 2;

		*node[0x55c190145aa0] = 2;

		*node[0x55c190145ad0] = *;

		*node[0x55c190145b00] = *;

		*node[0x55c190145b30] = 4;

		*node[0x55c190145b60] = 1;

		*node[0x55c190145b90] = 3;

		*node[0x55c190145bc0] = ;;

		*node[0x55c190145bf0] = if;

		*node[0x55c190145c20] = op_no;

		*node[0x55c190145c50] = >;

		*node[0x55c190145c80] = 14;

		*node[0x55c190145cb0] = 0;

		*node[0x55c190145ce0] = ;;

		*node[0x55c190145d10] = =;

		*node[0x55c190145d40] = 15;

		*node[0x55c190145d70] = sqrt;

		*node[0x55c190145da0] = 14;

		*node[0x55c190145dd0] = ;;

		*node[0x55c190145e00] = =;

		*node[0x55c190145e30] = 12;

		*node[0x55c190145e60] = /;

		*node[0x55c190145e90] = -;

		*node[0x55c190145ec0] = -;

		*node[0x55c190145ef0] = 0;

		*node[0x55c190145f20] = 2;

		*node[0x55c190145f50] = 15;

		*node[0x55c190145f80] = *;

		*node[0x55c190145fb0] = 2;

		*node[0x55c190145fe0] = 1;

		*node[0x55c190146010] = ;;

		*node[0x55c190146040] = =;

		*node[0x55c190146070] = 13;

		*node[0x55c1901460a0] = /;

		*node[0x55c1901460d0] = +;

		*node[0x55c190146100] = -;

		*node[0x55c190146130] = 0;

		*node[0x55c190146160] = 2;

		*node[0x55c190146190] = 15;

		*node[0x55c1901461c0] = *;

		*node[0x55c1901461f0] = 2;

		*node[0x55c190146220] = 1;

		*node[0x55c190146250] = ;;

		*node[0x55c190146280] = print;

		*node[0x55c1901462b0] = 11;

		*node[0x55c1901462e0] = ;;

		*node[0x55c190146310] = print;

		*node[0x55c190146340] = 12;

		*node[0x55c190146370] = 13;

		*node[0x55c1901463a0] = elseif;

		*node[0x55c1901463d0] = op_no;

		*node[0x55c190146400] = ==;

		*node[0x55c190146430] = 14;

		*node[0x55c190146460] = 0;

		*node[0x55c190146490] = ;;

		*node[0x55c1901464c0] = =;

		*node[0x55c1901464f0] = 10;

		*node[0x55c190146520] = /;

		*node[0x55c190146550] = -;

		*node[0x55c190146580] = 0;

		*node[0x55c1901465b0] = 2;

		*node[0x55c1901465e0] = *;

		*node[0x55c190146610] = 2;

		*node[0x55c190146640] = 1;

		*node[0x55c190146670] = ;;

		*node[0x55c1901466a0] = print;

		*node[0x55c1901466d0] = 8;

		*node[0x55c190146700] = ;;

		*node[0x55c190146730] = print;

		*node[0x55c190146760] = 10;

		*node[0x55c190146790] = else;

		*node[0x55c1901467c0] = op_no;

		*node[0x55c1901467f0] = ;;

		*node[0x55c190146820] = print;

		*node[0x55c190146850] = 7;

		*node[0x55c190146880] = ;;

		*node[0x55c1901468b0] = return;

		*node[0x55c1901468e0] = 0;

		*node[0x55c190146910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffecc0e3ab0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x56ae78364fd0] = ;;

		*node[0x56ae78365000] = 0;

		*node[0x56ae78365030] = ;;

		*node[0x56ae78365060] = input;

		*node[0x56ae78365090] = 1;

		*node[0x56ae783650c0] = 2;

		*node[0x56ae783650f0] = 3;

		*node[0x56ae78365120] = ;;

		*node[0x56ae78365180] = 1;

		*node[0x56ae783651b0] = 2;

		*node[0x56ae783651e0] = 3;

		*node[0x56ae78365210] = ;;

		*node[0x56ae78365240] = 4;

		*node[0x56ae78365270] = 1;

		*node[0x56ae783652a0] = 2;

		*node[0x56ae783652d0] = 3;

		*node[0x56ae78365300] = ;;

		*node[0x56ae78365330] = if;

		*node[0x56ae78365360] = op_no;

		*node[0x56ae78365390] = ==;

		*node[0x56ae783653c0] = 1;

		*node[0x56ae783653f0] = 0;

		*node[0x56ae78365420] = ;;

		*node[0x56ae78365480] = 2;

		*node[0x56ae783654b0] = 3;

		*node[0x56ae783654e0] = else;

		*node[0x56ae78365510] = op_no;

		*node[0x56ae78365540] = ;;

		*node[0x56ae783655a0] = 1;

		*node[0x56ae783655d0] = 2;

		*node[0x56ae78365600] = 3;

		*node[0x56ae78365630] = ;;

		*node[0x56ae78365660] = 5;

		*node[0x56ae78365690] = 1;

		*node[0x56ae783656c0] = 2;

		*node[0x56ae783656f0] = ;;

		*node[0x56ae78365720] = =;

		*node[0x56ae78365750] = 7;

		*node[0x56ae78365780] = -;

		*node[0x56ae783657b0] = 0;

		*node[0x56ae783657e0] = 1;

		*node[0x56ae78365810] = ;;

		*node[0x56ae78365840] = =;

		*node[0x56ae78365870] = 8;

		*node[0x56ae783658a0] = 1;

		*node[0x56ae783658d0] = ;;

		*node[0x56ae78365900] = =;

		*node[0x56ae78365930] = 9;

		*node[0x56ae78365960] = 1000;

		*node[0x56ae78365990] = ;;

		*node[0x56ae783659c0] = if;

		*node[0x56ae783659f0] = op_no;

		*node[0x56ae78365a20] = ==;

		*node[0x56ae78365a50] = 1;

		*node[0x56ae78365a80] = 0;

		*node[0x56ae78365ab0] = ;;

		*node[0x56ae78365ae0] = if;

		*node[0x56ae78365b10] = op_no;

		*node[0x56ae78365b40] = ==;

		*node[0x56ae78365b70] = 2;

		*node[0x56ae78365ba0] = 0;

		*node[0x56ae78365bd0] = ;;

		*node[0x56ae78365c00] = print;

		*node[0x56ae78365c30] = 9;

		*node[0x56ae78365c60] = else;

		*node[0x56ae78365c90] = op_no;

		*node[0x56ae78365cc0] = ;;

		*node[0x56ae78365cf0] = print;

		*node[0x56ae78365d20] = 7;

		*node[0x56ae78365d50] = else;

		*node[0x56ae78365d80] = op_no;

		*node[0x56ae78365db0] = ;;

		*node[0x56ae78365de0] = =;

		*node[0x56ae78365e10] = 10;

		*node[0x56ae78365e40] = /;

		*node[0x56ae78365e70] = -;

		*node[0x56ae78365ea0] = 0;

		*node[0x56ae78365ed0] = 2;

		*node[0x56ae78365f00] = 1;

		*node[0x56ae78365f30] = ;;

		*node[0x56ae78365f60] = print;

		*node[0x56ae78365f90] = 8;

		*node[0x56ae78365fc0] = ;;

		*node[0x56ae78365ff0] = print;

		*node[0x56ae78366020] = 10;

		*node[0x56ae78366050] = ;;

		*node[0x56ae78366080] = return;

		*node[0x56ae783660b0] = 0;

		*node[0x56ae783660e0] = ;;

		*node[0x56ae78366110] = 6;

		*node[0x56ae78366140] = 1;

		*node[0x56ae78366170] = 2;

		*node[0x56ae783661a0] = 3;

		*node[0x56ae783661d0] = ;;

		*node[0x56ae78366200] = =;

		*node[0x56ae78366230] = 7;

		*node[0x56ae78366260] = -;

		*node[0x56ae78366290] = 0;

		*node[0x56ae783662c0] = 1;

		*node[0x56ae783662f0] = ;;

		*node[0x56ae78366320] = =;

		*node[0x56ae78366350] = 8;

		*node[0x56ae78366380] = 1;

		*node[0x56ae783663b0] = ;;

		*node[0x56ae783663e0] = =;

		*node[0x56ae78366410] = 11;

		*node[0x56ae78366440] = 2;

		*node[0x56ae78366470] = ;;

		*node[0x56ae783664a0] = if;

		*node[0x56ae783664d0] = op_no;

		*node[0x56ae78366500] = ==;

		*node[0x56ae78366530] = 3;

		*node[0x56ae78366560] = 0;

		*node[0x56ae78366590] = ;;

		*node[0x56ae783665c0] = =;

		*node[0x56ae783665f0] = 12;

		*node[0x56ae78366620] = 0;

		*node[0x56ae78366650] = ;;

		*node[0x56ae78366680] = =;

		*node[0x56ae783666b0] = 13;

		*node[0x56ae783666e0] = /;

		*node[0x56ae78366710] = -;

		*node[0x56ae78366740] = 0;

		*node[0x56ae78366770] = 2;

		*node[0x56ae783667a0] = 1;

		*node[0x56ae783667d0] = ;;

		*node[0x56ae78366800] = print;

		*node[0x56ae78366830] = 11;

		*node[0x56ae78366860] = ;;

		*node[0x56ae78366890] = print;

		*node[0x56ae783668c0] = 12;

		*node[0x56ae783668f0] = 13;

		*node[0x56ae78366920] = else;

		*node[0x56ae78366950] = op_no;

		*node[0x56ae78366980] = ;;

		*node[0x56ae783669b0] = =;

		*node[0x56ae783669e0] = 14;

		*node[0x56ae78366a10] = -;

		*node[0x56ae78366a40] = *;

		*node[0x56ae78366a70] = 2;

		*node[0x56ae78366aa0] = 2;

		*node[0x56ae78366ad0] = *;

		*node[0x56ae78366b00] = *;

		*node[0x56ae78366b30] = 4;

		*node[0x56ae78366b60] = 1;

		*node[0x56ae78366b90] = 3;

		*node[0x56ae78366bc0] = ;;

		*node[0x56ae78366bf0] = if;

		*node[0x56ae78366c20] = op_no;

		*node[0x56ae78366c50] = >;

		*node[0x56ae78366c80] = 14;

		*node[0x56ae78366cb0] = 0;

		*node[0x56ae78366ce0] = ;;

		*node[0x56ae78366d10] = =;

		*node[0x56ae78366d40] = 15;

		*node[0x56ae78366d70] = sqrt;

		*node[0x56ae78366da0] = 14;

		*node[0x56ae78366dd0] = ;;

		*node[0x56ae78366e00] = =;

		*node[0x56ae78366e30] = 12;

		*node[0x56ae78366e60] = /;

		*node[0x56ae78366e90] = -;

		*node[0x56ae78366ec0] = -;

		*node[0x56ae78366ef0] = 0;

		*node[0x56ae78366f20] = 2;

		*node[0x56ae78366f50] = 15;

		*node[0x56ae78366f80] = *;

		*node[0x56ae78366fb0] = 2;

		*node[0x56ae78366fe0] = 1;

		*node[0x56ae78367010] = ;;

		*node[0x56ae78367040] = =;

		*node[0x56ae78367070] = 13;

		*node[0x56ae783670a0] = /;

		*node[0x56ae783670d0] = +;

		*node[0x56ae78367100] = -;

		*node[0x56ae78367130] = 0;

		*node[0x56ae78367160] = 2;

		*node[0x56ae78367190] = 15;

		*node[0x56ae783671c0] = *;

		*node[0x56ae783671f0] = 2;

		*node[0x56ae78367220] = 1;

		*node[0x56ae78367250] = ;;

		*node[0x56ae78367280] = print;

		*node[0x56ae783672b0] = 11;

		*node[0x56ae783672e0] = ;;

		*node[0x56ae78367310] = print;

		*node[0x56ae78367340] = 12;

		*node[0x56ae78367370] = 13;

		*node[0x56ae783673a0] = elseif;

		*node[0x56ae783673d0] = op_no;

		*node[0x56ae78367400] = ==;

		*node[0x56ae78367430] = 14;

		*node[0x56ae78367460] = 0;

		*node[0x56ae78367490] = ;;

		*node[0x56ae783674c0] = =;

		*node[0x56ae783674f0] = 10;

		*node[0x56ae78367520] = /;

		*node[0x56ae78367550] = -;

		*node[0x56ae78367580] = 0;

		*node[0x56ae783675b0] = 2;

		*node[0x56ae783675e0] = *;

		*node[0x56ae78367610] = 2;

		*node[0x56ae78367640] = 1;

		*node[0x56ae78367670] = ;;

		*node[0x56ae783676a0] = print;

		*node[0x56ae783676d0] = 8;

		*node[0x56ae78367700] = ;;

		*node[0x56ae78367730] = print;

		*node[0x56ae78367760] = 10;

		*node[0x56ae78367790] = else;

		*node[0x56ae783677c0] = op_no;

		*node[0x56ae783677f0] = ;;

		*node[0x56ae78367820] = print;

		*node[0x56ae78367850] = 7;

		*node[0x56ae78367880] = ;;

		*node[0x56ae783678b0] = return;

		*node[0x56ae783678e0] = 0;

		*node[0x56ae78367910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd83985370] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x55d31eca4fd0] = ;;

		*node[0x55d31eca5000] = 0;

		*node[0x55d31eca5030] = ;;

		*node[0x55d31eca5060] = input;

		*node[0x55d31eca5090] = 1;

		*node[0x55d31eca50c0] = 2;

		*node[0x55d31eca50f0] = 3;

		*node[0x55d31eca5120] = ;;

		*node[0x55d31eca5180] = 1;

		*node[0x55d31eca51b0] = 2;

		*node[0x55d31eca51e0] = 3;

		*node[0x55d31eca5210] = ;;

		*node[0x55d31eca5240] = 4;

		*node[0x55d31eca5270] = 1;

		*node[0x55d31eca52a0] = 2;

		*node[0x55d31eca52d0] = 3;

		*node[0x55d31eca5300] = ;;

		*node[0x55d31eca5330] = if;

		*node[0x55d31eca5360] = op_no;

		*node[0x55d31eca5390] = ==;

		*node[0x55d31eca53c0] = 1;

		*node[0x55d31eca53f0] = 0;

		*node[0x55d31eca5420] = ;;

		*node[0x55d31eca5480] = 2;

		*node[0x55d31eca54b0] = 3;

		*node[0x55d31eca54e0] = else;

		*node[0x55d31eca5510] = op_no;

		*node[0x55d31eca5540] = ;;

		*node[0x55d31eca55a0] = 1;

		*node[0x55d31eca55d0] = 2;

		*node[0x55d31eca5600] = 3;

		*node[0x55d31eca5630] = ;;

		*node[0x55d31eca5660] = 5;

		*node[0x55d31eca5690] = 1;

		*node[0x55d31eca56c0] = 2;

		*node[0x55d31eca56f0] = ;;

		*node[0x55d31eca5720] = =;

		*node[0x55d31eca5750] = 7;

		*node[0x55d31eca5780] = -;

		*node[0x55d31eca57b0] = 0;

		*node[0x55d31eca57e0] = 1;

		*node[0x55d31eca5810] = ;;

		*node[0x55d31eca5840] = =;

		*node[0x55d31eca5870] = 8;

		*node[0x55d31eca58a0] = 1;

		*node[0x55d31eca58d0] = ;;

		*node[0x55d31eca5900] = =;

		*node[0x55d31eca5930] = 9;

		*node[0x55d31eca5960] = 1000;

		*node[0x55d31eca5990] = ;;

		*node[0x55d31eca59c0] = if;

		*node[0x55d31eca59f0] = op_no;

		*node[0x55d31eca5a20] = ==;

		*node[0x55d31eca5a50] = 1;

		*node[0x55d31eca5a80] = 0;

		*node[0x55d31eca5ab0] = ;;

		*node[0x55d31eca5ae0] = if;

		*node[0x55d31eca5b10] = op_no;

		*node[0x55d31eca5b40] = ==;

		*node[0x55d31eca5b70] = 2;

		*node[0x55d31eca5ba0] = 0;

		*node[0x55d31eca5bd0] = ;;

		*node[0x55d31eca5c00] = print;

		*node[0x55d31eca5c30] = 9;

		*node[0x55d31eca5c60] = else;

		*node[0x55d31eca5c90] = op_no;

		*node[0x55d31eca5cc0] = ;;

		*node[0x55d31eca5cf0] = print;

		*node[0x55d31eca5d20] = 7;

		*node[0x55d31eca5d50] = else;

		*node[0x55d31eca5d80] = op_no;

		*node[0x55d31eca5db0] = ;;

		*node[0x55d31eca5de0] = =;

		*node[0x55d31eca5e10] = 10;

		*node[0x55d31eca5e40] = /;

		*node[0x55d31eca5e70] = -;

		*node[0x55d31eca5ea0] = 0;

		*node[0x55d31eca5ed0] = 2;

		*node[0x55d31eca5f00] = 1;

		*node[0x55d31eca5f30] = ;;

		*node[0x55d31eca5f60] = print;

		*node[0x55d31eca5f90] = 8;

		*node[0x55d31eca5fc0] = ;;

		*node[0x55d31eca5ff0] = print;

		*node[0x55d31eca6020] = 10;

		*node[0x55d31eca6050] = ;;

		*node[0x55d31eca6080] = return;

		*node[0x55d31eca60b0] = 0;

		*node[0x55d31eca60e0] = ;;

		*node[0x55d31eca6110] = 6;

		*node[0x55d31eca6140] = 1;

		*node[0x55d31eca6170] = 2;

		*node[0x55d31eca61a0] = 3;

		*node[0x55d31eca61d0] = ;;

		*node[0x55d31eca6200] = =;

		*node[0x55d31eca6230] = 7;

		*node[0x55d31eca6260] = -;

		*node[0x55d31eca6290] = 0;

		*node[0x55d31eca62c0] = 1;

		*node[0x55d31eca62f0] = ;;

		*node[0x55d31eca6320] = =;

		*node[0x55d31eca6350] = 8;

		*node[0x55d31eca6380] = 1;

		*node[0x55d31eca63b0] = ;;

		*node[0x55d31eca63e0] = =;

		*node[0x55d31eca6410] = 11;

		*node[0x55d31eca6440] = 2;

		*node[0x55d31eca6470] = ;;

		*node[0x55d31eca64a0] = if;

		*node[0x55d31eca64d0] = op_no;

		*node[0x55d31eca6500] = ==;

		*node[0x55d31eca6530] = 3;

		*node[0x55d31eca6560] = 0;

		*node[0x55d31eca6590] = ;;

		*node[0x55d31eca65c0] = =;

		*node[0x55d31eca65f0] = 12;

		*node[0x55d31eca6620] = 0;

		*node[0x55d31eca6650] = ;;

		*node[0x55d31eca6680] = =;

		*node[0x55d31eca66b0] = 13;

		*node[0x55d31eca66e0] = /;

		*node[0x55d31eca6710] = -;

		*node[0x55d31eca6740] = 0;

		*node[0x55d31eca6770] = 2;

		*node[0x55d31eca67a0] = 1;

		*node[0x55d31eca67d0] = ;;

		*node[0x55d31eca6800] = print;

		*node[0x55d31eca6830] = 11;

		*node[0x55d31eca6860] = ;;

		*node[0x55d31eca6890] = print;

		*node[0x55d31eca68c0] = 12;

		*node[0x55d31eca68f0] = 13;

		*node[0x55d31eca6920] = else;

		*node[0x55d31eca6950] = op_no;

		*node[0x55d31eca6980] = ;;

		*node[0x55d31eca69b0] = =;

		*node[0x55d31eca69e0] = 14;

		*node[0x55d31eca6a10] = -;

		*node[0x55d31eca6a40] = *;

		*node[0x55d31eca6a70] = 2;

		*node[0x55d31eca6aa0] = 2;

		*node[0x55d31eca6ad0] = *;

		*node[0x55d31eca6b00] = *;

		*node[0x55d31eca6b30] = 4;

		*node[0x55d31eca6b60] = 1;

		*node[0x55d31eca6b90] = 3;

		*node[0x55d31eca6bc0] = ;;

		*node[0x55d31eca6bf0] = if;

		*node[0x55d31eca6c20] = op_no;

		*node[0x55d31eca6c50] = >;

		*node[0x55d31eca6c80] = 14;

		*node[0x55d31eca6cb0] = 0;

		*node[0x55d31eca6ce0] = ;;

		*node[0x55d31eca6d10] = =;

		*node[0x55d31eca6d40] = 15;

		*node[0x55d31eca6d70] = sqrt;

		*node[0x55d31eca6da0] = 14;

		*node[0x55d31eca6dd0] = ;;

		*node[0x55d31eca6e00] = =;

		*node[0x55d31eca6e30] = 12;

		*node[0x55d31eca6e60] = /;

		*node[0x55d31eca6e90] = -;

		*node[0x55d31eca6ec0] = -;

		*node[0x55d31eca6ef0] = 0;

		*node[0x55d31eca6f20] = 2;

		*node[0x55d31eca6f50] = 15;

		*node[0x55d31eca6f80] = *;

		*node[0x55d31eca6fb0] = 2;

		*node[0x55d31eca6fe0] = 1;

		*node[0x55d31eca7010] = ;;

		*node[0x55d31eca7040] = =;

		*node[0x55d31eca7070] = 13;

		*node[0x55d31eca70a0] = /;

		*node[0x55d31eca70d0] = +;

		*node[0x55d31eca7100] = -;

		*node[0x55d31eca7130] = 0;

		*node[0x55d31eca7160] = 2;

		*node[0x55d31eca7190] = 15;

		*node[0x55d31eca71c0] = *;

		*node[0x55d31eca71f0] = 2;

		*node[0x55d31eca7220] = 1;

		*node[0x55d31eca7250] = ;;

		*node[0x55d31eca7280] = print;

		*node[0x55d31eca72b0] = 11;

		*node[0x55d31eca72e0] = ;;

		*node[0x55d31eca7310] = print;

		*node[0x55d31eca7340] = 12;

		*node[0x55d31eca7370] = 13;

		*node[0x55d31eca73a0] = elseif;

		*node[0x55d31eca73d0] = op_no;

		*node[0x55d31eca7400] = ==;

		*node[0x55d31eca7430] = 14;

		*node[0x55d31eca7460] = 0;

		*node[0x55d31eca7490] = ;;

		*node[0x55d31eca74c0] = =;

		*node[0x55d31eca74f0] = 10;

		*node[0x55d31eca7520] = /;

		*node[0x55d31eca7550] = -;

		*node[0x55d31eca7580] = 0;

		*node[0x55d31eca75b0] = 2;

		*node[0x55d31eca75e0] = *;

		*node[0x55d31eca7610] = 2;

		*node[0x55d31eca7640] = 1;

		*node[0x55d31eca7670] = ;;

		*node[0x55d31eca76a0] = print;

		*node[0x55d31eca76d0] = 8;

		*node[0x55d31eca7700] = ;;

		*node[0x55d31eca7730] = print;

		*node[0x55d31eca7760] = 10;

		*node[0x55d31eca7790] = else;

		*node[0x55d31eca77c0] = op_no;

		*node[0x55d31eca77f0] = ;;

		*node[0x55d31eca7820] = print;

		*node[0x55d31eca7850] = 7;

		*node[0x55d31eca7880] = ;;

		*node[0x55d31eca78b0] = return;

		*node[0x55d31eca78e0] = 0;

		*node[0x55d31eca7910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe1ed1dab0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e1df35b7fd0] = ;;

		*node[0x5e1df35b8000] = 0;

		*node[0x5e1df35b8030] = ;;

		*node[0x5e1df35b8060] = input;

		*node[0x5e1df35b8090] = 1;

		*node[0x5e1df35b80c0] = 2;

		*node[0x5e1df35b80f0] = 3;

		*node[0x5e1df35b8120] = ;;

		*node[0x5e1df35b8180] = 1;

		*node[0x5e1df35b81b0] = 2;

		*node[0x5e1df35b81e0] = 3;

		*node[0x5e1df35b8210] = ;;

		*node[0x5e1df35b8240] = 4;

		*node[0x5e1df35b8270] = 1;

		*node[0x5e1df35b82a0] = 2;

		*node[0x5e1df35b82d0] = 3;

		*node[0x5e1df35b8300] = ;;

		*node[0x5e1df35b8330] = if;

		*node[0x5e1df35b8360] = op_no;

		*node[0x5e1df35b8390] = ==;

		*node[0x5e1df35b83c0] = 1;

		*node[0x5e1df35b83f0] = 0;

		*node[0x5e1df35b8420] = ;;

		*node[0x5e1df35b8480] = 2;

		*node[0x5e1df35b84b0] = 3;

		*node[0x5e1df35b84e0] = else;

		*node[0x5e1df35b8510] = op_no;

		*node[0x5e1df35b8540] = ;;

		*node[0x5e1df35b85a0] = 1;

		*node[0x5e1df35b85d0] = 2;

		*node[0x5e1df35b8600] = 3;

		*node[0x5e1df35b8630] = ;;

		*node[0x5e1df35b8660] = 5;

		*node[0x5e1df35b8690] = 1;

		*node[0x5e1df35b86c0] = 2;

		*node[0x5e1df35b86f0] = ;;

		*node[0x5e1df35b8720] = =;

		*node[0x5e1df35b8750] = 7;

		*node[0x5e1df35b8780] = -;

		*node[0x5e1df35b87b0] = 0;

		*node[0x5e1df35b87e0] = 1;

		*node[0x5e1df35b8810] = ;;

		*node[0x5e1df35b8840] = =;

		*node[0x5e1df35b8870] = 8;

		*node[0x5e1df35b88a0] = 1;

		*node[0x5e1df35b88d0] = ;;

		*node[0x5e1df35b8900] = =;

		*node[0x5e1df35b8930] = 9;

		*node[0x5e1df35b8960] = 1000;

		*node[0x5e1df35b8990] = ;;

		*node[0x5e1df35b89c0] = if;

		*node[0x5e1df35b89f0] = op_no;

		*node[0x5e1df35b8a20] = ==;

		*node[0x5e1df35b8a50] = 1;

		*node[0x5e1df35b8a80] = 0;

		*node[0x5e1df35b8ab0] = ;;

		*node[0x5e1df35b8ae0] = if;

		*node[0x5e1df35b8b10] = op_no;

		*node[0x5e1df35b8b40] = ==;

		*node[0x5e1df35b8b70] = 2;

		*node[0x5e1df35b8ba0] = 0;

		*node[0x5e1df35b8bd0] = ;;

		*node[0x5e1df35b8c00] = print;

		*node[0x5e1df35b8c30] = 9;

		*node[0x5e1df35b8c60] = else;

		*node[0x5e1df35b8c90] = op_no;

		*node[0x5e1df35b8cc0] = ;;

		*node[0x5e1df35b8cf0] = print;

		*node[0x5e1df35b8d20] = 7;

		*node[0x5e1df35b8d50] = else;

		*node[0x5e1df35b8d80] = op_no;

		*node[0x5e1df35b8db0] = ;;

		*node[0x5e1df35b8de0] = =;

		*node[0x5e1df35b8e10] = 10;

		*node[0x5e1df35b8e40] = /;

		*node[0x5e1df35b8e70] = -;

		*node[0x5e1df35b8ea0] = 0;

		*node[0x5e1df35b8ed0] = 2;

		*node[0x5e1df35b8f00] = 1;

		*node[0x5e1df35b8f30] = ;;

		*node[0x5e1df35b8f60] = print;

		*node[0x5e1df35b8f90] = 8;

		*node[0x5e1df35b8fc0] = ;;

		*node[0x5e1df35b8ff0] = print;

		*node[0x5e1df35b9020] = 10;

		*node[0x5e1df35b9050] = ;;

		*node[0x5e1df35b9080] = return;

		*node[0x5e1df35b90b0] = 0;

		*node[0x5e1df35b90e0] = ;;

		*node[0x5e1df35b9110] = 6;

		*node[0x5e1df35b9140] = 1;

		*node[0x5e1df35b9170] = 2;

		*node[0x5e1df35b91a0] = 3;

		*node[0x5e1df35b91d0] = ;;

		*node[0x5e1df35b9200] = =;

		*node[0x5e1df35b9230] = 7;

		*node[0x5e1df35b9260] = -;

		*node[0x5e1df35b9290] = 0;

		*node[0x5e1df35b92c0] = 1;

		*node[0x5e1df35b92f0] = ;;

		*node[0x5e1df35b9320] = =;

		*node[0x5e1df35b9350] = 8;

		*node[0x5e1df35b9380] = 1;

		*node[0x5e1df35b93b0] = ;;

		*node[0x5e1df35b93e0] = =;

		*node[0x5e1df35b9410] = 11;

		*node[0x5e1df35b9440] = 2;

		*node[0x5e1df35b9470] = ;;

		*node[0x5e1df35b94a0] = if;

		*node[0x5e1df35b94d0] = op_no;

		*node[0x5e1df35b9500] = ==;

		*node[0x5e1df35b9530] = 3;

		*node[0x5e1df35b9560] = 0;

		*node[0x5e1df35b9590] = ;;

		*node[0x5e1df35b95c0] = =;

		*node[0x5e1df35b95f0] = 12;

		*node[0x5e1df35b9620] = 0;

		*node[0x5e1df35b9650] = ;;

		*node[0x5e1df35b9680] = =;

		*node[0x5e1df35b96b0] = 13;

		*node[0x5e1df35b96e0] = /;

		*node[0x5e1df35b9710] = -;

		*node[0x5e1df35b9740] = 0;

		*node[0x5e1df35b9770] = 2;

		*node[0x5e1df35b97a0] = 1;

		*node[0x5e1df35b97d0] = ;;

		*node[0x5e1df35b9800] = print;

		*node[0x5e1df35b9830] = 11;

		*node[0x5e1df35b9860] = ;;

		*node[0x5e1df35b9890] = print;

		*node[0x5e1df35b98c0] = 12;

		*node[0x5e1df35b98f0] = 13;

		*node[0x5e1df35b9920] = else;

		*node[0x5e1df35b9950] = op_no;

		*node[0x5e1df35b9980] = ;;

		*node[0x5e1df35b99b0] = =;

		*node[0x5e1df35b99e0] = 14;

		*node[0x5e1df35b9a10] = -;

		*node[0x5e1df35b9a40] = *;

		*node[0x5e1df35b9a70] = 2;

		*node[0x5e1df35b9aa0] = 2;

		*node[0x5e1df35b9ad0] = *;

		*node[0x5e1df35b9b00] = *;

		*node[0x5e1df35b9b30] = 4;

		*node[0x5e1df35b9b60] = 1;

		*node[0x5e1df35b9b90] = 3;

		*node[0x5e1df35b9bc0] = ;;

		*node[0x5e1df35b9bf0] = if;

		*node[0x5e1df35b9c20] = op_no;

		*node[0x5e1df35b9c50] = >;

		*node[0x5e1df35b9c80] = 14;

		*node[0x5e1df35b9cb0] = 0;

		*node[0x5e1df35b9ce0] = ;;

		*node[0x5e1df35b9d10] = =;

		*node[0x5e1df35b9d40] = 15;

		*node[0x5e1df35b9d70] = sqrt;

		*node[0x5e1df35b9da0] = 14;

		*node[0x5e1df35b9dd0] = ;;

		*node[0x5e1df35b9e00] = =;

		*node[0x5e1df35b9e30] = 12;

		*node[0x5e1df35b9e60] = /;

		*node[0x5e1df35b9e90] = -;

		*node[0x5e1df35b9ec0] = -;

		*node[0x5e1df35b9ef0] = 0;

		*node[0x5e1df35b9f20] = 2;

		*node[0x5e1df35b9f50] = 15;

		*node[0x5e1df35b9f80] = *;

		*node[0x5e1df35b9fb0] = 2;

		*node[0x5e1df35b9fe0] = 1;

		*node[0x5e1df35ba010] = ;;

		*node[0x5e1df35ba040] = =;

		*node[0x5e1df35ba070] = 13;

		*node[0x5e1df35ba0a0] = /;

		*node[0x5e1df35ba0d0] = +;

		*node[0x5e1df35ba100] = -;

		*node[0x5e1df35ba130] = 0;

		*node[0x5e1df35ba160] = 2;

		*node[0x5e1df35ba190] = 15;

		*node[0x5e1df35ba1c0] = *;

		*node[0x5e1df35ba1f0] = 2;

		*node[0x5e1df35ba220] = 1;

		*node[0x5e1df35ba250] = ;;

		*node[0x5e1df35ba280] = print;

		*node[0x5e1df35ba2b0] = 11;

		*node[0x5e1df35ba2e0] = ;;

		*node[0x5e1df35ba310] = print;

		*node[0x5e1df35ba340] = 12;

		*node[0x5e1df35ba370] = 13;

		*node[0x5e1df35ba3a0] = elseif;

		*node[0x5e1df35ba3d0] = op_no;

		*node[0x5e1df35ba400] = ==;

		*node[0x5e1df35ba430] = 14;

		*node[0x5e1df35ba460] = 0;

		*node[0x5e1df35ba490] = ;;

		*node[0x5e1df35ba4c0] = =;

		*node[0x5e1df35ba4f0] = 10;

		*node[0x5e1df35ba520] = /;

		*node[0x5e1df35ba550] = -;

		*node[0x5e1df35ba580] = 0;

		*node[0x5e1df35ba5b0] = 2;

		*node[0x5e1df35ba5e0] = *;

		*node[0x5e1df35ba610] = 2;

		*node[0x5e1df35ba640] = 1;

		*node[0x5e1df35ba670] = ;;

		*node[0x5e1df35ba6a0] = print;

		*node[0x5e1df35ba6d0] = 8;

		*node[0x5e1df35ba700] = ;;

		*node[0x5e1df35ba730] = print;

		*node[0x5e1df35ba760] = 10;

		*node[0x5e1df35ba790] = else;

		*node[0x5e1df35ba7c0] = op_no;

		*node[0x5e1df35ba7f0] = ;;

		*node[0x5e1df35ba820] = print;

		*node[0x5e1df35ba850] = 7;

		*node[0x5e1df35ba880] = ;;

		*node[0x5e1df35ba8b0] = return;

		*node[0x5e1df35ba8e0] = 0;

		*node[0x5e1df35ba910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffce203c920] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5cc12db37fd0] = ;;

		*node[0x5cc12db38000] = 0;

		*node[0x5cc12db38030] = ;;

		*node[0x5cc12db38060] = input;

		*node[0x5cc12db38090] = 1;

		*node[0x5cc12db380c0] = 2;

		*node[0x5cc12db380f0] = 3;

		*node[0x5cc12db38120] = ;;

		*node[0x5cc12db38180] = 1;

		*node[0x5cc12db381b0] = 2;

		*node[0x5cc12db381e0] = 3;

		*node[0x5cc12db38210] = ;;

		*node[0x5cc12db38240] = 4;

		*node[0x5cc12db38270] = 1;

		*node[0x5cc12db382a0] = 2;

		*node[0x5cc12db382d0] = 3;

		*node[0x5cc12db38300] = ;;

		*node[0x5cc12db38330] = if;

		*node[0x5cc12db38360] = op_no;

		*node[0x5cc12db38390] = ==;

		*node[0x5cc12db383c0] = 1;

		*node[0x5cc12db383f0] = 0;

		*node[0x5cc12db38420] = ;;

		*node[0x5cc12db38480] = 2;

		*node[0x5cc12db384b0] = 3;

		*node[0x5cc12db384e0] = else;

		*node[0x5cc12db38510] = op_no;

		*node[0x5cc12db38540] = ;;

		*node[0x5cc12db385a0] = 1;

		*node[0x5cc12db385d0] = 2;

		*node[0x5cc12db38600] = 3;

		*node[0x5cc12db38630] = ;;

		*node[0x5cc12db38660] = 5;

		*node[0x5cc12db38690] = 1;

		*node[0x5cc12db386c0] = 2;

		*node[0x5cc12db386f0] = ;;

		*node[0x5cc12db38720] = =;

		*node[0x5cc12db38750] = 7;

		*node[0x5cc12db38780] = -;

		*node[0x5cc12db387b0] = 0;

		*node[0x5cc12db387e0] = 1;

		*node[0x5cc12db38810] = ;;

		*node[0x5cc12db38840] = =;

		*node[0x5cc12db38870] = 8;

		*node[0x5cc12db388a0] = 1;

		*node[0x5cc12db388d0] = ;;

		*node[0x5cc12db38900] = =;

		*node[0x5cc12db38930] = 9;

		*node[0x5cc12db38960] = 1000;

		*node[0x5cc12db38990] = ;;

		*node[0x5cc12db389c0] = if;

		*node[0x5cc12db389f0] = op_no;

		*node[0x5cc12db38a20] = ==;

		*node[0x5cc12db38a50] = 1;

		*node[0x5cc12db38a80] = 0;

		*node[0x5cc12db38ab0] = ;;

		*node[0x5cc12db38ae0] = if;

		*node[0x5cc12db38b10] = op_no;

		*node[0x5cc12db38b40] = ==;

		*node[0x5cc12db38b70] = 2;

		*node[0x5cc12db38ba0] = 0;

		*node[0x5cc12db38bd0] = ;;

		*node[0x5cc12db38c00] = print;

		*node[0x5cc12db38c30] = 9;

		*node[0x5cc12db38c60] = else;

		*node[0x5cc12db38c90] = op_no;

		*node[0x5cc12db38cc0] = ;;

		*node[0x5cc12db38cf0] = print;

		*node[0x5cc12db38d20] = 7;

		*node[0x5cc12db38d50] = else;

		*node[0x5cc12db38d80] = op_no;

		*node[0x5cc12db38db0] = ;;

		*node[0x5cc12db38de0] = =;

		*node[0x5cc12db38e10] = 10;

		*node[0x5cc12db38e40] = /;

		*node[0x5cc12db38e70] = -;

		*node[0x5cc12db38ea0] = 0;

		*node[0x5cc12db38ed0] = 2;

		*node[0x5cc12db38f00] = 1;

		*node[0x5cc12db38f30] = ;;

		*node[0x5cc12db38f60] = print;

		*node[0x5cc12db38f90] = 8;

		*node[0x5cc12db38fc0] = ;;

		*node[0x5cc12db38ff0] = print;

		*node[0x5cc12db39020] = 10;

		*node[0x5cc12db39050] = ;;

		*node[0x5cc12db39080] = return;

		*node[0x5cc12db390b0] = 0;

		*node[0x5cc12db390e0] = ;;

		*node[0x5cc12db39110] = 6;

		*node[0x5cc12db39140] = 1;

		*node[0x5cc12db39170] = 2;

		*node[0x5cc12db391a0] = 3;

		*node[0x5cc12db391d0] = ;;

		*node[0x5cc12db39200] = =;

		*node[0x5cc12db39230] = 7;

		*node[0x5cc12db39260] = -;

		*node[0x5cc12db39290] = 0;

		*node[0x5cc12db392c0] = 1;

		*node[0x5cc12db392f0] = ;;

		*node[0x5cc12db39320] = =;

		*node[0x5cc12db39350] = 8;

		*node[0x5cc12db39380] = 1;

		*node[0x5cc12db393b0] = ;;

		*node[0x5cc12db393e0] = =;

		*node[0x5cc12db39410] = 11;

		*node[0x5cc12db39440] = 2;

		*node[0x5cc12db39470] = ;;

		*node[0x5cc12db394a0] = if;

		*node[0x5cc12db394d0] = op_no;

		*node[0x5cc12db39500] = ==;

		*node[0x5cc12db39530] = 3;

		*node[0x5cc12db39560] = 0;

		*node[0x5cc12db39590] = ;;

		*node[0x5cc12db395c0] = =;

		*node[0x5cc12db395f0] = 12;

		*node[0x5cc12db39620] = 0;

		*node[0x5cc12db39650] = ;;

		*node[0x5cc12db39680] = =;

		*node[0x5cc12db396b0] = 13;

		*node[0x5cc12db396e0] = /;

		*node[0x5cc12db39710] = -;

		*node[0x5cc12db39740] = 0;

		*node[0x5cc12db39770] = 2;

		*node[0x5cc12db397a0] = 1;

		*node[0x5cc12db397d0] = ;;

		*node[0x5cc12db39800] = print;

		*node[0x5cc12db39830] = 11;

		*node[0x5cc12db39860] = ;;

		*node[0x5cc12db39890] = print;

		*node[0x5cc12db398c0] = 12;

		*node[0x5cc12db398f0] = 13;

		*node[0x5cc12db39920] = else;

		*node[0x5cc12db39950] = op_no;

		*node[0x5cc12db39980] = ;;

		*node[0x5cc12db399b0] = =;

		*node[0x5cc12db399e0] = 14;

		*node[0x5cc12db39a10] = -;

		*node[0x5cc12db39a40] = *;

		*node[0x5cc12db39a70] = 2;

		*node[0x5cc12db39aa0] = 2;

		*node[0x5cc12db39ad0] = *;

		*node[0x5cc12db39b00] = *;

		*node[0x5cc12db39b30] = 4;

		*node[0x5cc12db39b60] = 1;

		*node[0x5cc12db39b90] = 3;

		*node[0x5cc12db39bc0] = ;;

		*node[0x5cc12db39bf0] = if;

		*node[0x5cc12db39c20] = op_no;

		*node[0x5cc12db39c50] = >;

		*node[0x5cc12db39c80] = 14;

		*node[0x5cc12db39cb0] = 0;

		*node[0x5cc12db39ce0] = ;;

		*node[0x5cc12db39d10] = =;

		*node[0x5cc12db39d40] = 15;

		*node[0x5cc12db39d70] = sqrt;

		*node[0x5cc12db39da0] = 14;

		*node[0x5cc12db39dd0] = ;;

		*node[0x5cc12db39e00] = =;

		*node[0x5cc12db39e30] = 12;

		*node[0x5cc12db39e60] = /;

		*node[0x5cc12db39e90] = -;

		*node[0x5cc12db39ec0] = -;

		*node[0x5cc12db39ef0] = 0;

		*node[0x5cc12db39f20] = 2;

		*node[0x5cc12db39f50] = 15;

		*node[0x5cc12db39f80] = *;

		*node[0x5cc12db39fb0] = 2;

		*node[0x5cc12db39fe0] = 1;

		*node[0x5cc12db3a010] = ;;

		*node[0x5cc12db3a040] = =;

		*node[0x5cc12db3a070] = 13;

		*node[0x5cc12db3a0a0] = /;

		*node[0x5cc12db3a0d0] = +;

		*node[0x5cc12db3a100] = -;

		*node[0x5cc12db3a130] = 0;

		*node[0x5cc12db3a160] = 2;

		*node[0x5cc12db3a190] = 15;

		*node[0x5cc12db3a1c0] = *;

		*node[0x5cc12db3a1f0] = 2;

		*node[0x5cc12db3a220] = 1;

		*node[0x5cc12db3a250] = ;;

		*node[0x5cc12db3a280] = print;

		*node[0x5cc12db3a2b0] = 11;

		*node[0x5cc12db3a2e0] = ;;

		*node[0x5cc12db3a310] = print;

		*node[0x5cc12db3a340] = 12;

		*node[0x5cc12db3a370] = 13;

		*node[0x5cc12db3a3a0] = elseif;

		*node[0x5cc12db3a3d0] = op_no;

		*node[0x5cc12db3a400] = ==;

		*node[0x5cc12db3a430] = 14;

		*node[0x5cc12db3a460] = 0;

		*node[0x5cc12db3a490] = ;;

		*node[0x5cc12db3a4c0] = =;

		*node[0x5cc12db3a4f0] = 10;

		*node[0x5cc12db3a520] = /;

		*node[0x5cc12db3a550] = -;

		*node[0x5cc12db3a580] = 0;

		*node[0x5cc12db3a5b0] = 2;

		*node[0x5cc12db3a5e0] = *;

		*node[0x5cc12db3a610] = 2;

		*node[0x5cc12db3a640] = 1;

		*node[0x5cc12db3a670] = ;;

		*node[0x5cc12db3a6a0] = print;

		*node[0x5cc12db3a6d0] = 8;

		*node[0x5cc12db3a700] = ;;

		*node[0x5cc12db3a730] = print;

		*node[0x5cc12db3a760] = 10;

		*node[0x5cc12db3a790] = else;

		*node[0x5cc12db3a7c0] = op_no;

		*node[0x5cc12db3a7f0] = ;;

		*node[0x5cc12db3a820] = print;

		*node[0x5cc12db3a850] = 7;

		*node[0x5cc12db3a880] = ;;

		*node[0x5cc12db3a8b0] = return;

		*node[0x5cc12db3a8e0] = 0;

		*node[0x5cc12db3a910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcacf47d60] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x58ab1e354fd0] = ;;

		*node[0x58ab1e355000] = 0;

		*node[0x58ab1e355030] = ;;

		*node[0x58ab1e355060] = input;

		*node[0x58ab1e355090] = 1;

		*node[0x58ab1e3550c0] = 2;

		*node[0x58ab1e3550f0] = 3;

		*node[0x58ab1e355120] = ;;

		*node[0x58ab1e355180] = 1;

		*node[0x58ab1e3551b0] = 2;

		*node[0x58ab1e3551e0] = 3;

		*node[0x58ab1e355210] = ;;

		*node[0x58ab1e355240] = 4;

		*node[0x58ab1e355270] = 1;

		*node[0x58ab1e3552a0] = 2;

		*node[0x58ab1e3552d0] = 3;

		*node[0x58ab1e355300] = ;;

		*node[0x58ab1e355330] = if;

		*node[0x58ab1e355360] = op_no;

		*node[0x58ab1e355390] = ==;

		*node[0x58ab1e3553c0] = 1;

		*node[0x58ab1e3553f0] = 0;

		*node[0x58ab1e355420] = ;;

		*node[0x58ab1e355480] = 2;

		*node[0x58ab1e3554b0] = 3;

		*node[0x58ab1e3554e0] = else;

		*node[0x58ab1e355510] = op_no;

		*node[0x58ab1e355540] = ;;

		*node[0x58ab1e3555a0] = 1;

		*node[0x58ab1e3555d0] = 2;

		*node[0x58ab1e355600] = 3;

		*node[0x58ab1e355630] = ;;

		*node[0x58ab1e355660] = 5;

		*node[0x58ab1e355690] = 1;

		*node[0x58ab1e3556c0] = 2;

		*node[0x58ab1e3556f0] = ;;

		*node[0x58ab1e355720] = =;

		*node[0x58ab1e355750] = 7;

		*node[0x58ab1e355780] = -;

		*node[0x58ab1e3557b0] = 0;

		*node[0x58ab1e3557e0] = 1;

		*node[0x58ab1e355810] = ;;

		*node[0x58ab1e355840] = =;

		*node[0x58ab1e355870] = 8;

		*node[0x58ab1e3558a0] = 1;

		*node[0x58ab1e3558d0] = ;;

		*node[0x58ab1e355900] = =;

		*node[0x58ab1e355930] = 9;

		*node[0x58ab1e355960] = 1000;

		*node[0x58ab1e355990] = ;;

		*node[0x58ab1e3559c0] = if;

		*node[0x58ab1e3559f0] = op_no;

		*node[0x58ab1e355a20] = ==;

		*node[0x58ab1e355a50] = 1;

		*node[0x58ab1e355a80] = 0;

		*node[0x58ab1e355ab0] = ;;

		*node[0x58ab1e355ae0] = if;

		*node[0x58ab1e355b10] = op_no;

		*node[0x58ab1e355b40] = ==;

		*node[0x58ab1e355b70] = 2;

		*node[0x58ab1e355ba0] = 0;

		*node[0x58ab1e355bd0] = ;;

		*node[0x58ab1e355c00] = print;

		*node[0x58ab1e355c30] = 9;

		*node[0x58ab1e355c60] = else;

		*node[0x58ab1e355c90] = op_no;

		*node[0x58ab1e355cc0] = ;;

		*node[0x58ab1e355cf0] = print;

		*node[0x58ab1e355d20] = 7;

		*node[0x58ab1e355d50] = else;

		*node[0x58ab1e355d80] = op_no;

		*node[0x58ab1e355db0] = ;;

		*node[0x58ab1e355de0] = =;

		*node[0x58ab1e355e10] = 10;

		*node[0x58ab1e355e40] = /;

		*node[0x58ab1e355e70] = -;

		*node[0x58ab1e355ea0] = 0;

		*node[0x58ab1e355ed0] = 2;

		*node[0x58ab1e355f00] = 1;

		*node[0x58ab1e355f30] = ;;

		*node[0x58ab1e355f60] = print;

		*node[0x58ab1e355f90] = 8;

		*node[0x58ab1e355fc0] = ;;

		*node[0x58ab1e355ff0] = print;

		*node[0x58ab1e356020] = 10;

		*node[0x58ab1e356050] = ;;

		*node[0x58ab1e356080] = return;

		*node[0x58ab1e3560b0] = 0;

		*node[0x58ab1e3560e0] = ;;

		*node[0x58ab1e356110] = 6;

		*node[0x58ab1e356140] = 1;

		*node[0x58ab1e356170] = 2;

		*node[0x58ab1e3561a0] = 3;

		*node[0x58ab1e3561d0] = ;;

		*node[0x58ab1e356200] = =;

		*node[0x58ab1e356230] = 7;

		*node[0x58ab1e356260] = -;

		*node[0x58ab1e356290] = 0;

		*node[0x58ab1e3562c0] = 1;

		*node[0x58ab1e3562f0] = ;;

		*node[0x58ab1e356320] = =;

		*node[0x58ab1e356350] = 8;

		*node[0x58ab1e356380] = 1;

		*node[0x58ab1e3563b0] = ;;

		*node[0x58ab1e3563e0] = =;

		*node[0x58ab1e356410] = 11;

		*node[0x58ab1e356440] = 2;

		*node[0x58ab1e356470] = ;;

		*node[0x58ab1e3564a0] = if;

		*node[0x58ab1e3564d0] = op_no;

		*node[0x58ab1e356500] = ==;

		*node[0x58ab1e356530] = 3;

		*node[0x58ab1e356560] = 0;

		*node[0x58ab1e356590] = ;;

		*node[0x58ab1e3565c0] = =;

		*node[0x58ab1e3565f0] = 12;

		*node[0x58ab1e356620] = 0;

		*node[0x58ab1e356650] = ;;

		*node[0x58ab1e356680] = =;

		*node[0x58ab1e3566b0] = 13;

		*node[0x58ab1e3566e0] = /;

		*node[0x58ab1e356710] = -;

		*node[0x58ab1e356740] = 0;

		*node[0x58ab1e356770] = 2;

		*node[0x58ab1e3567a0] = 1;

		*node[0x58ab1e3567d0] = ;;

		*node[0x58ab1e356800] = print;

		*node[0x58ab1e356830] = 11;

		*node[0x58ab1e356860] = ;;

		*node[0x58ab1e356890] = print;

		*node[0x58ab1e3568c0] = 12;

		*node[0x58ab1e3568f0] = 13;

		*node[0x58ab1e356920] = else;

		*node[0x58ab1e356950] = op_no;

		*node[0x58ab1e356980] = ;;

		*node[0x58ab1e3569b0] = =;

		*node[0x58ab1e3569e0] = 14;

		*node[0x58ab1e356a10] = -;

		*node[0x58ab1e356a40] = *;

		*node[0x58ab1e356a70] = 2;

		*node[0x58ab1e356aa0] = 2;

		*node[0x58ab1e356ad0] = *;

		*node[0x58ab1e356b00] = *;

		*node[0x58ab1e356b30] = 4;

		*node[0x58ab1e356b60] = 1;

		*node[0x58ab1e356b90] = 3;

		*node[0x58ab1e356bc0] = ;;

		*node[0x58ab1e356bf0] = if;

		*node[0x58ab1e356c20] = op_no;

		*node[0x58ab1e356c50] = >;

		*node[0x58ab1e356c80] = 14;

		*node[0x58ab1e356cb0] = 0;

		*node[0x58ab1e356ce0] = ;;

		*node[0x58ab1e356d10] = =;

		*node[0x58ab1e356d40] = 15;

		*node[0x58ab1e356d70] = sqrt;

		*node[0x58ab1e356da0] = 14;

		*node[0x58ab1e356dd0] = ;;

		*node[0x58ab1e356e00] = =;

		*node[0x58ab1e356e30] = 12;

		*node[0x58ab1e356e60] = /;

		*node[0x58ab1e356e90] = -;

		*node[0x58ab1e356ec0] = -;

		*node[0x58ab1e356ef0] = 0;

		*node[0x58ab1e356f20] = 2;

		*node[0x58ab1e356f50] = 15;

		*node[0x58ab1e356f80] = *;

		*node[0x58ab1e356fb0] = 2;

		*node[0x58ab1e356fe0] = 1;

		*node[0x58ab1e357010] = ;;

		*node[0x58ab1e357040] = =;

		*node[0x58ab1e357070] = 13;

		*node[0x58ab1e3570a0] = /;

		*node[0x58ab1e3570d0] = +;

		*node[0x58ab1e357100] = -;

		*node[0x58ab1e357130] = 0;

		*node[0x58ab1e357160] = 2;

		*node[0x58ab1e357190] = 15;

		*node[0x58ab1e3571c0] = *;

		*node[0x58ab1e3571f0] = 2;

		*node[0x58ab1e357220] = 1;

		*node[0x58ab1e357250] = ;;

		*node[0x58ab1e357280] = print;

		*node[0x58ab1e3572b0] = 11;

		*node[0x58ab1e3572e0] = ;;

		*node[0x58ab1e357310] = print;

		*node[0x58ab1e357340] = 12;

		*node[0x58ab1e357370] = 13;

		*node[0x58ab1e3573a0] = elseif;

		*node[0x58ab1e3573d0] = op_no;

		*node[0x58ab1e357400] = ==;

		*node[0x58ab1e357430] = 14;

		*node[0x58ab1e357460] = 0;

		*node[0x58ab1e357490] = ;;

		*node[0x58ab1e3574c0] = =;

		*node[0x58ab1e3574f0] = 10;

		*node[0x58ab1e357520] = /;

		*node[0x58ab1e357550] = -;

		*node[0x58ab1e357580] = 0;

		*node[0x58ab1e3575b0] = 2;

		*node[0x58ab1e3575e0] = *;

		*node[0x58ab1e357610] = 2;

		*node[0x58ab1e357640] = 1;

		*node[0x58ab1e357670] = ;;

		*node[0x58ab1e3576a0] = print;

		*node[0x58ab1e3576d0] = 8;

		*node[0x58ab1e357700] = ;;

		*node[0x58ab1e357730] = print;

		*node[0x58ab1e357760] = 10;

		*node[0x58ab1e357790] = else;

		*node[0x58ab1e3577c0] = op_no;

		*node[0x58ab1e3577f0] = ;;

		*node[0x58ab1e357820] = print;

		*node[0x58ab1e357850] = 7;

		*node[0x58ab1e357880] = ;;

		*node[0x58ab1e3578b0] = return;

		*node[0x58ab1e3578e0] = 0;

		*node[0x58ab1e357910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff0e041610] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x595a5c3fffd0] = ;;

		*node[0x595a5c400000] = 0;

		*node[0x595a5c400030] = ;;

		*node[0x595a5c400060] = input;

		*node[0x595a5c400090] = 1;

		*node[0x595a5c4000c0] = 2;

		*node[0x595a5c4000f0] = 3;

		*node[0x595a5c400120] = ;;

		*node[0x595a5c400180] = 1;

		*node[0x595a5c4001b0] = 2;

		*node[0x595a5c4001e0] = 3;

		*node[0x595a5c400210] = ;;

		*node[0x595a5c400240] = 4;

		*node[0x595a5c400270] = 1;

		*node[0x595a5c4002a0] = 2;

		*node[0x595a5c4002d0] = 3;

		*node[0x595a5c400300] = ;;

		*node[0x595a5c400330] = if;

		*node[0x595a5c400360] = op_no;

		*node[0x595a5c400390] = ==;

		*node[0x595a5c4003c0] = 1;

		*node[0x595a5c4003f0] = 0;

		*node[0x595a5c400420] = ;;

		*node[0x595a5c400480] = 2;

		*node[0x595a5c4004b0] = 3;

		*node[0x595a5c4004e0] = else;

		*node[0x595a5c400510] = op_no;

		*node[0x595a5c400540] = ;;

		*node[0x595a5c4005a0] = 1;

		*node[0x595a5c4005d0] = 2;

		*node[0x595a5c400600] = 3;

		*node[0x595a5c400630] = ;;

		*node[0x595a5c400660] = 5;

		*node[0x595a5c400690] = 1;

		*node[0x595a5c4006c0] = 2;

		*node[0x595a5c4006f0] = ;;

		*node[0x595a5c400720] = =;

		*node[0x595a5c400750] = 7;

		*node[0x595a5c400780] = -;

		*node[0x595a5c4007b0] = 0;

		*node[0x595a5c4007e0] = 1;

		*node[0x595a5c400810] = ;;

		*node[0x595a5c400840] = =;

		*node[0x595a5c400870] = 8;

		*node[0x595a5c4008a0] = 1;

		*node[0x595a5c4008d0] = ;;

		*node[0x595a5c400900] = =;

		*node[0x595a5c400930] = 9;

		*node[0x595a5c400960] = 1000;

		*node[0x595a5c400990] = ;;

		*node[0x595a5c4009c0] = if;

		*node[0x595a5c4009f0] = op_no;

		*node[0x595a5c400a20] = ==;

		*node[0x595a5c400a50] = 1;

		*node[0x595a5c400a80] = 0;

		*node[0x595a5c400ab0] = ;;

		*node[0x595a5c400ae0] = if;

		*node[0x595a5c400b10] = op_no;

		*node[0x595a5c400b40] = ==;

		*node[0x595a5c400b70] = 2;

		*node[0x595a5c400ba0] = 0;

		*node[0x595a5c400bd0] = ;;

		*node[0x595a5c400c00] = print;

		*node[0x595a5c400c30] = 9;

		*node[0x595a5c400c60] = else;

		*node[0x595a5c400c90] = op_no;

		*node[0x595a5c400cc0] = ;;

		*node[0x595a5c400cf0] = print;

		*node[0x595a5c400d20] = 7;

		*node[0x595a5c400d50] = else;

		*node[0x595a5c400d80] = op_no;

		*node[0x595a5c400db0] = ;;

		*node[0x595a5c400de0] = =;

		*node[0x595a5c400e10] = 10;

		*node[0x595a5c400e40] = /;

		*node[0x595a5c400e70] = -;

		*node[0x595a5c400ea0] = 0;

		*node[0x595a5c400ed0] = 2;

		*node[0x595a5c400f00] = 1;

		*node[0x595a5c400f30] = ;;

		*node[0x595a5c400f60] = print;

		*node[0x595a5c400f90] = 8;

		*node[0x595a5c400fc0] = ;;

		*node[0x595a5c400ff0] = print;

		*node[0x595a5c401020] = 10;

		*node[0x595a5c401050] = ;;

		*node[0x595a5c401080] = return;

		*node[0x595a5c4010b0] = 0;

		*node[0x595a5c4010e0] = ;;

		*node[0x595a5c401110] = 6;

		*node[0x595a5c401140] = 1;

		*node[0x595a5c401170] = 2;

		*node[0x595a5c4011a0] = 3;

		*node[0x595a5c4011d0] = ;;

		*node[0x595a5c401200] = =;

		*node[0x595a5c401230] = 7;

		*node[0x595a5c401260] = -;

		*node[0x595a5c401290] = 0;

		*node[0x595a5c4012c0] = 1;

		*node[0x595a5c4012f0] = ;;

		*node[0x595a5c401320] = =;

		*node[0x595a5c401350] = 8;

		*node[0x595a5c401380] = 1;

		*node[0x595a5c4013b0] = ;;

		*node[0x595a5c4013e0] = =;

		*node[0x595a5c401410] = 11;

		*node[0x595a5c401440] = 2;

		*node[0x595a5c401470] = ;;

		*node[0x595a5c4014a0] = if;

		*node[0x595a5c4014d0] = op_no;

		*node[0x595a5c401500] = ==;

		*node[0x595a5c401530] = 3;

		*node[0x595a5c401560] = 0;

		*node[0x595a5c401590] = ;;

		*node[0x595a5c4015c0] = =;

		*node[0x595a5c4015f0] = 12;

		*node[0x595a5c401620] = 0;

		*node[0x595a5c401650] = ;;

		*node[0x595a5c401680] = =;

		*node[0x595a5c4016b0] = 13;

		*node[0x595a5c4016e0] = /;

		*node[0x595a5c401710] = -;

		*node[0x595a5c401740] = 0;

		*node[0x595a5c401770] = 2;

		*node[0x595a5c4017a0] = 1;

		*node[0x595a5c4017d0] = ;;

		*node[0x595a5c401800] = print;

		*node[0x595a5c401830] = 11;

		*node[0x595a5c401860] = ;;

		*node[0x595a5c401890] = print;

		*node[0x595a5c4018c0] = 12;

		*node[0x595a5c4018f0] = 13;

		*node[0x595a5c401920] = else;

		*node[0x595a5c401950] = op_no;

		*node[0x595a5c401980] = ;;

		*node[0x595a5c4019b0] = =;

		*node[0x595a5c4019e0] = 14;

		*node[0x595a5c401a10] = -;

		*node[0x595a5c401a40] = *;

		*node[0x595a5c401a70] = 2;

		*node[0x595a5c401aa0] = 2;

		*node[0x595a5c401ad0] = *;

		*node[0x595a5c401b00] = *;

		*node[0x595a5c401b30] = 4;

		*node[0x595a5c401b60] = 1;

		*node[0x595a5c401b90] = 3;

		*node[0x595a5c401bc0] = ;;

		*node[0x595a5c401bf0] = if;

		*node[0x595a5c401c20] = op_no;

		*node[0x595a5c401c50] = >;

		*node[0x595a5c401c80] = 14;

		*node[0x595a5c401cb0] = 0;

		*node[0x595a5c401ce0] = ;;

		*node[0x595a5c401d10] = =;

		*node[0x595a5c401d40] = 15;

		*node[0x595a5c401d70] = sqrt;

		*node[0x595a5c401da0] = 14;

		*node[0x595a5c401dd0] = ;;

		*node[0x595a5c401e00] = =;

		*node[0x595a5c401e30] = 12;

		*node[0x595a5c401e60] = /;

		*node[0x595a5c401e90] = -;

		*node[0x595a5c401ec0] = -;

		*node[0x595a5c401ef0] = 0;

		*node[0x595a5c401f20] = 2;

		*node[0x595a5c401f50] = 15;

		*node[0x595a5c401f80] = *;

		*node[0x595a5c401fb0] = 2;

		*node[0x595a5c401fe0] = 1;

		*node[0x595a5c402010] = ;;

		*node[0x595a5c402040] = =;

		*node[0x595a5c402070] = 13;

		*node[0x595a5c4020a0] = /;

		*node[0x595a5c4020d0] = +;

		*node[0x595a5c402100] = -;

		*node[0x595a5c402130] = 0;

		*node[0x595a5c402160] = 2;

		*node[0x595a5c402190] = 15;

		*node[0x595a5c4021c0] = *;

		*node[0x595a5c4021f0] = 2;

		*node[0x595a5c402220] = 1;

		*node[0x595a5c402250] = ;;

		*node[0x595a5c402280] = print;

		*node[0x595a5c4022b0] = 11;

		*node[0x595a5c4022e0] = ;;

		*node[0x595a5c402310] = print;

		*node[0x595a5c402340] = 12;

		*node[0x595a5c402370] = 13;

		*node[0x595a5c4023a0] = elseif;

		*node[0x595a5c4023d0] = op_no;

		*node[0x595a5c402400] = ==;

		*node[0x595a5c402430] = 14;

		*node[0x595a5c402460] = 0;

		*node[0x595a5c402490] = ;;

		*node[0x595a5c4024c0] = =;

		*node[0x595a5c4024f0] = 10;

		*node[0x595a5c402520] = /;

		*node[0x595a5c402550] = -;

		*node[0x595a5c402580] = 0;

		*node[0x595a5c4025b0] = 2;

		*node[0x595a5c4025e0] = *;

		*node[0x595a5c402610] = 2;

		*node[0x595a5c402640] = 1;

		*node[0x595a5c402670] = ;;

		*node[0x595a5c4026a0] = print;

		*node[0x595a5c4026d0] = 8;

		*node[0x595a5c402700] = ;;

		*node[0x595a5c402730] = print;

		*node[0x595a5c402760] = 10;

		*node[0x595a5c402790] = else;

		*node[0x595a5c4027c0] = op_no;

		*node[0x595a5c4027f0] = ;;

		*node[0x595a5c402820] = print;

		*node[0x595a5c402850] = 7;

		*node[0x595a5c402880] = ;;

		*node[0x595a5c4028b0] = return;

		*node[0x595a5c4028e0] = 0;

		*node[0x595a5c402910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe48098e90] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e223ac4efd0] = ;;

		*node[0x5e223ac4f000] = 0;

		*node[0x5e223ac4f030] = ;;

		*node[0x5e223ac4f060] = input;

		*node[0x5e223ac4f090] = 1;

		*node[0x5e223ac4f0c0] = 2;

		*node[0x5e223ac4f0f0] = 3;

		*node[0x5e223ac4f120] = ;;

		*node[0x5e223ac4f180] = 1;

		*node[0x5e223ac4f1b0] = 2;

		*node[0x5e223ac4f1e0] = 3;

		*node[0x5e223ac4f210] = ;;

		*node[0x5e223ac4f240] = 4;

		*node[0x5e223ac4f270] = 1;

		*node[0x5e223ac4f2a0] = 2;

		*node[0x5e223ac4f2d0] = 3;

		*node[0x5e223ac4f300] = ;;

		*node[0x5e223ac4f330] = if;

		*node[0x5e223ac4f360] = op_no;

		*node[0x5e223ac4f390] = ==;

		*node[0x5e223ac4f3c0] = 1;

		*node[0x5e223ac4f3f0] = 0;

		*node[0x5e223ac4f420] = ;;

		*node[0x5e223ac4f480] = 2;

		*node[0x5e223ac4f4b0] = 3;

		*node[0x5e223ac4f4e0] = else;

		*node[0x5e223ac4f510] = op_no;

		*node[0x5e223ac4f540] = ;;

		*node[0x5e223ac4f5a0] = 1;

		*node[0x5e223ac4f5d0] = 2;

		*node[0x5e223ac4f600] = 3;

		*node[0x5e223ac4f630] = ;;

		*node[0x5e223ac4f660] = 5;

		*node[0x5e223ac4f690] = 1;

		*node[0x5e223ac4f6c0] = 2;

		*node[0x5e223ac4f6f0] = ;;

		*node[0x5e223ac4f720] = =;

		*node[0x5e223ac4f750] = 7;

		*node[0x5e223ac4f780] = -;

		*node[0x5e223ac4f7b0] = 0;

		*node[0x5e223ac4f7e0] = 1;

		*node[0x5e223ac4f810] = ;;

		*node[0x5e223ac4f840] = =;

		*node[0x5e223ac4f870] = 8;

		*node[0x5e223ac4f8a0] = 1;

		*node[0x5e223ac4f8d0] = ;;

		*node[0x5e223ac4f900] = =;

		*node[0x5e223ac4f930] = 9;

		*node[0x5e223ac4f960] = 1000;

		*node[0x5e223ac4f990] = ;;

		*node[0x5e223ac4f9c0] = if;

		*node[0x5e223ac4f9f0] = op_no;

		*node[0x5e223ac4fa20] = ==;

		*node[0x5e223ac4fa50] = 1;

		*node[0x5e223ac4fa80] = 0;

		*node[0x5e223ac4fab0] = ;;

		*node[0x5e223ac4fae0] = if;

		*node[0x5e223ac4fb10] = op_no;

		*node[0x5e223ac4fb40] = ==;

		*node[0x5e223ac4fb70] = 2;

		*node[0x5e223ac4fba0] = 0;

		*node[0x5e223ac4fbd0] = ;;

		*node[0x5e223ac4fc00] = print;

		*node[0x5e223ac4fc30] = 9;

		*node[0x5e223ac4fc60] = else;

		*node[0x5e223ac4fc90] = op_no;

		*node[0x5e223ac4fcc0] = ;;

		*node[0x5e223ac4fcf0] = print;

		*node[0x5e223ac4fd20] = 7;

		*node[0x5e223ac4fd50] = else;

		*node[0x5e223ac4fd80] = op_no;

		*node[0x5e223ac4fdb0] = ;;

		*node[0x5e223ac4fde0] = =;

		*node[0x5e223ac4fe10] = 10;

		*node[0x5e223ac4fe40] = /;

		*node[0x5e223ac4fe70] = -;

		*node[0x5e223ac4fea0] = 0;

		*node[0x5e223ac4fed0] = 2;

		*node[0x5e223ac4ff00] = 1;

		*node[0x5e223ac4ff30] = ;;

		*node[0x5e223ac4ff60] = print;

		*node[0x5e223ac4ff90] = 8;

		*node[0x5e223ac4ffc0] = ;;

		*node[0x5e223ac4fff0] = print;

		*node[0x5e223ac50020] = 10;

		*node[0x5e223ac50050] = ;;

		*node[0x5e223ac50080] = return;

		*node[0x5e223ac500b0] = 0;

		*node[0x5e223ac500e0] = ;;

		*node[0x5e223ac50110] = 6;

		*node[0x5e223ac50140] = 1;

		*node[0x5e223ac50170] = 2;

		*node[0x5e223ac501a0] = 3;

		*node[0x5e223ac501d0] = ;;

		*node[0x5e223ac50200] = =;

		*node[0x5e223ac50230] = 7;

		*node[0x5e223ac50260] = -;

		*node[0x5e223ac50290] = 0;

		*node[0x5e223ac502c0] = 1;

		*node[0x5e223ac502f0] = ;;

		*node[0x5e223ac50320] = =;

		*node[0x5e223ac50350] = 8;

		*node[0x5e223ac50380] = 1;

		*node[0x5e223ac503b0] = ;;

		*node[0x5e223ac503e0] = =;

		*node[0x5e223ac50410] = 11;

		*node[0x5e223ac50440] = 2;

		*node[0x5e223ac50470] = ;;

		*node[0x5e223ac504a0] = if;

		*node[0x5e223ac504d0] = op_no;

		*node[0x5e223ac50500] = ==;

		*node[0x5e223ac50530] = 3;

		*node[0x5e223ac50560] = 0;

		*node[0x5e223ac50590] = ;;

		*node[0x5e223ac505c0] = =;

		*node[0x5e223ac505f0] = 12;

		*node[0x5e223ac50620] = 0;

		*node[0x5e223ac50650] = ;;

		*node[0x5e223ac50680] = =;

		*node[0x5e223ac506b0] = 13;

		*node[0x5e223ac506e0] = /;

		*node[0x5e223ac50710] = -;

		*node[0x5e223ac50740] = 0;

		*node[0x5e223ac50770] = 2;

		*node[0x5e223ac507a0] = 1;

		*node[0x5e223ac507d0] = ;;

		*node[0x5e223ac50800] = print;

		*node[0x5e223ac50830] = 11;

		*node[0x5e223ac50860] = ;;

		*node[0x5e223ac50890] = print;

		*node[0x5e223ac508c0] = 12;

		*node[0x5e223ac508f0] = 13;

		*node[0x5e223ac50920] = else;

		*node[0x5e223ac50950] = op_no;

		*node[0x5e223ac50980] = ;;

		*node[0x5e223ac509b0] = =;

		*node[0x5e223ac509e0] = 14;

		*node[0x5e223ac50a10] = -;

		*node[0x5e223ac50a40] = *;

		*node[0x5e223ac50a70] = 2;

		*node[0x5e223ac50aa0] = 2;

		*node[0x5e223ac50ad0] = *;

		*node[0x5e223ac50b00] = *;

		*node[0x5e223ac50b30] = 4;

		*node[0x5e223ac50b60] = 1;

		*node[0x5e223ac50b90] = 3;

		*node[0x5e223ac50bc0] = ;;

		*node[0x5e223ac50bf0] = if;

		*node[0x5e223ac50c20] = op_no;

		*node[0x5e223ac50c50] = >;

		*node[0x5e223ac50c80] = 14;

		*node[0x5e223ac50cb0] = 0;

		*node[0x5e223ac50ce0] = ;;

		*node[0x5e223ac50d10] = =;

		*node[0x5e223ac50d40] = 15;

		*node[0x5e223ac50d70] = sqrt;

		*node[0x5e223ac50da0] = 14;

		*node[0x5e223ac50dd0] = ;;

		*node[0x5e223ac50e00] = =;

		*node[0x5e223ac50e30] = 12;

		*node[0x5e223ac50e60] = /;

		*node[0x5e223ac50e90] = -;

		*node[0x5e223ac50ec0] = -;

		*node[0x5e223ac50ef0] = 0;

		*node[0x5e223ac50f20] = 2;

		*node[0x5e223ac50f50] = 15;

		*node[0x5e223ac50f80] = *;

		*node[0x5e223ac50fb0] = 2;

		*node[0x5e223ac50fe0] = 1;

		*node[0x5e223ac51010] = ;;

		*node[0x5e223ac51040] = =;

		*node[0x5e223ac51070] = 13;

		*node[0x5e223ac510a0] = /;

		*node[0x5e223ac510d0] = +;

		*node[0x5e223ac51100] = -;

		*node[0x5e223ac51130] = 0;

		*node[0x5e223ac51160] = 2;

		*node[0x5e223ac51190] = 15;

		*node[0x5e223ac511c0] = *;

		*node[0x5e223ac511f0] = 2;

		*node[0x5e223ac51220] = 1;

		*node[0x5e223ac51250] = ;;

		*node[0x5e223ac51280] = print;

		*node[0x5e223ac512b0] = 11;

		*node[0x5e223ac512e0] = ;;

		*node[0x5e223ac51310] = print;

		*node[0x5e223ac51340] = 12;

		*node[0x5e223ac51370] = 13;

		*node[0x5e223ac513a0] = elseif;

		*node[0x5e223ac513d0] = op_no;

		*node[0x5e223ac51400] = ==;

		*node[0x5e223ac51430] = 14;

		*node[0x5e223ac51460] = 0;

		*node[0x5e223ac51490] = ;;

		*node[0x5e223ac514c0] = =;

		*node[0x5e223ac514f0] = 10;

		*node[0x5e223ac51520] = /;

		*node[0x5e223ac51550] = -;

		*node[0x5e223ac51580] = 0;

		*node[0x5e223ac515b0] = 2;

		*node[0x5e223ac515e0] = *;

		*node[0x5e223ac51610] = 2;

		*node[0x5e223ac51640] = 1;

		*node[0x5e223ac51670] = ;;

		*node[0x5e223ac516a0] = print;

		*node[0x5e223ac516d0] = 8;

		*node[0x5e223ac51700] = ;;

		*node[0x5e223ac51730] = print;

		*node[0x5e223ac51760] = 10;

		*node[0x5e223ac51790] = else;

		*node[0x5e223ac517c0] = op_no;

		*node[0x5e223ac517f0] = ;;

		*node[0x5e223ac51820] = print;

		*node[0x5e223ac51850] = 7;

		*node[0x5e223ac51880] = ;;

		*node[0x5e223ac518b0] = return;

		*node[0x5e223ac518e0] = 0;

		*node[0x5e223ac51910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffeb3717850] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5dc437868fd0] = ;;

		*node[0x5dc437869000] = 0;

		*node[0x5dc437869030] = ;;

		*node[0x5dc437869060] = input;

		*node[0x5dc437869090] = 1;

		*node[0x5dc4378690c0] = 2;

		*node[0x5dc4378690f0] = 3;

		*node[0x5dc437869120] = ;;

		*node[0x5dc437869180] = 1;

		*node[0x5dc4378691b0] = 2;

		*node[0x5dc4378691e0] = 3;

		*node[0x5dc437869210] = ;;

		*node[0x5dc437869240] = 4;

		*node[0x5dc437869270] = 1;

		*node[0x5dc4378692a0] = 2;

		*node[0x5dc4378692d0] = 3;

		*node[0x5dc437869300] = ;;

		*node[0x5dc437869330] = if;

		*node[0x5dc437869360] = op_no;

		*node[0x5dc437869390] = ==;

		*node[0x5dc4378693c0] = 1;

		*node[0x5dc4378693f0] = 0;

		*node[0x5dc437869420] = ;;

		*node[0x5dc437869480] = 2;

		*node[0x5dc4378694b0] = 3;

		*node[0x5dc4378694e0] = else;

		*node[0x5dc437869510] = op_no;

		*node[0x5dc437869540] = ;;

		*node[0x5dc4378695a0] = 1;

		*node[0x5dc4378695d0] = 2;

		*node[0x5dc437869600] = 3;

		*node[0x5dc437869630] = ;;

		*node[0x5dc437869660] = 5;

		*node[0x5dc437869690] = 1;

		*node[0x5dc4378696c0] = 2;

		*node[0x5dc4378696f0] = ;;

		*node[0x5dc437869720] = =;

		*node[0x5dc437869750] = 7;

		*node[0x5dc437869780] = -;

		*node[0x5dc4378697b0] = 0;

		*node[0x5dc4378697e0] = 1;

		*node[0x5dc437869810] = ;;

		*node[0x5dc437869840] = =;

		*node[0x5dc437869870] = 8;

		*node[0x5dc4378698a0] = 1;

		*node[0x5dc4378698d0] = ;;

		*node[0x5dc437869900] = =;

		*node[0x5dc437869930] = 9;

		*node[0x5dc437869960] = 1000;

		*node[0x5dc437869990] = ;;

		*node[0x5dc4378699c0] = if;

		*node[0x5dc4378699f0] = op_no;

		*node[0x5dc437869a20] = ==;

		*node[0x5dc437869a50] = 1;

		*node[0x5dc437869a80] = 0;

		*node[0x5dc437869ab0] = ;;

		*node[0x5dc437869ae0] = if;

		*node[0x5dc437869b10] = op_no;

		*node[0x5dc437869b40] = ==;

		*node[0x5dc437869b70] = 2;

		*node[0x5dc437869ba0] = 0;

		*node[0x5dc437869bd0] = ;;

		*node[0x5dc437869c00] = print;

		*node[0x5dc437869c30] = 9;

		*node[0x5dc437869c60] = else;

		*node[0x5dc437869c90] = op_no;

		*node[0x5dc437869cc0] = ;;

		*node[0x5dc437869cf0] = print;

		*node[0x5dc437869d20] = 7;

		*node[0x5dc437869d50] = else;

		*node[0x5dc437869d80] = op_no;

		*node[0x5dc437869db0] = ;;

		*node[0x5dc437869de0] = =;

		*node[0x5dc437869e10] = 10;

		*node[0x5dc437869e40] = /;

		*node[0x5dc437869e70] = -;

		*node[0x5dc437869ea0] = 0;

		*node[0x5dc437869ed0] = 2;

		*node[0x5dc437869f00] = 1;

		*node[0x5dc437869f30] = ;;

		*node[0x5dc437869f60] = print;

		*node[0x5dc437869f90] = 8;

		*node[0x5dc437869fc0] = ;;

		*node[0x5dc437869ff0] = print;

		*node[0x5dc43786a020] = 10;

		*node[0x5dc43786a050] = ;;

		*node[0x5dc43786a080] = return;

		*node[0x5dc43786a0b0] = 0;

		*node[0x5dc43786a0e0] = ;;

		*node[0x5dc43786a110] = 6;

		*node[0x5dc43786a140] = 1;

		*node[0x5dc43786a170] = 2;

		*node[0x5dc43786a1a0] = 3;

		*node[0x5dc43786a1d0] = ;;

		*node[0x5dc43786a200] = =;

		*node[0x5dc43786a230] = 7;

		*node[0x5dc43786a260] = -;

		*node[0x5dc43786a290] = 0;

		*node[0x5dc43786a2c0] = 1;

		*node[0x5dc43786a2f0] = ;;

		*node[0x5dc43786a320] = =;

		*node[0x5dc43786a350] = 8;

		*node[0x5dc43786a380] = 1;

		*node[0x5dc43786a3b0] = ;;

		*node[0x5dc43786a3e0] = =;

		*node[0x5dc43786a410] = 11;

		*node[0x5dc43786a440] = 2;

		*node[0x5dc43786a470] = ;;

		*node[0x5dc43786a4a0] = if;

		*node[0x5dc43786a4d0] = op_no;

		*node[0x5dc43786a500] = ==;

		*node[0x5dc43786a530] = 3;

		*node[0x5dc43786a560] = 0;

		*node[0x5dc43786a590] = ;;

		*node[0x5dc43786a5c0] = =;

		*node[0x5dc43786a5f0] = 12;

		*node[0x5dc43786a620] = 0;

		*node[0x5dc43786a650] = ;;

		*node[0x5dc43786a680] = =;

		*node[0x5dc43786a6b0] = 13;

		*node[0x5dc43786a6e0] = /;

		*node[0x5dc43786a710] = -;

		*node[0x5dc43786a740] = 0;

		*node[0x5dc43786a770] = 2;

		*node[0x5dc43786a7a0] = 1;

		*node[0x5dc43786a7d0] = ;;

		*node[0x5dc43786a800] = print;

		*node[0x5dc43786a830] = 11;

		*node[0x5dc43786a860] = ;;

		*node[0x5dc43786a890] = print;

		*node[0x5dc43786a8c0] = 12;

		*node[0x5dc43786a8f0] = 13;

		*node[0x5dc43786a920] = else;

		*node[0x5dc43786a950] = op_no;

		*node[0x5dc43786a980] = ;;

		*node[0x5dc43786a9b0] = =;

		*node[0x5dc43786a9e0] = 14;

		*node[0x5dc43786aa10] = -;

		*node[0x5dc43786aa40] = *;

		*node[0x5dc43786aa70] = 2;

		*node[0x5dc43786aaa0] = 2;

		*node[0x5dc43786aad0] = *;

		*node[0x5dc43786ab00] = *;

		*node[0x5dc43786ab30] = 4;

		*node[0x5dc43786ab60] = 1;

		*node[0x5dc43786ab90] = 3;

		*node[0x5dc43786abc0] = ;;

		*node[0x5dc43786abf0] = if;

		*node[0x5dc43786ac20] = op_no;

		*node[0x5dc43786ac50] = >;

		*node[0x5dc43786ac80] = 14;

		*node[0x5dc43786acb0] = 0;

		*node[0x5dc43786ace0] = ;;

		*node[0x5dc43786ad10] = =;

		*node[0x5dc43786ad40] = 15;

		*node[0x5dc43786ad70] = sqrt;

		*node[0x5dc43786ada0] = 14;

		*node[0x5dc43786add0] = ;;

		*node[0x5dc43786ae00] = =;

		*node[0x5dc43786ae30] = 12;

		*node[0x5dc43786ae60] = /;

		*node[0x5dc43786ae90] = -;

		*node[0x5dc43786aec0] = -;

		*node[0x5dc43786aef0] = 0;

		*node[0x5dc43786af20] = 2;

		*node[0x5dc43786af50] = 15;

		*node[0x5dc43786af80] = *;

		*node[0x5dc43786afb0] = 2;

		*node[0x5dc43786afe0] = 1;

		*node[0x5dc43786b010] = ;;

		*node[0x5dc43786b040] = =;

		*node[0x5dc43786b070] = 13;

		*node[0x5dc43786b0a0] = /;

		*node[0x5dc43786b0d0] = +;

		*node[0x5dc43786b100] = -;

		*node[0x5dc43786b130] = 0;

		*node[0x5dc43786b160] = 2;

		*node[0x5dc43786b190] = 15;

		*node[0x5dc43786b1c0] = *;

		*node[0x5dc43786b1f0] = 2;

		*node[0x5dc43786b220] = 1;

		*node[0x5dc43786b250] = ;;

		*node[0x5dc43786b280] = print;

		*node[0x5dc43786b2b0] = 11;

		*node[0x5dc43786b2e0] = ;;

		*node[0x5dc43786b310] = print;

		*node[0x5dc43786b340] = 12;

		*node[0x5dc43786b370] = 13;

		*node[0x5dc43786b3a0] = elseif;

		*node[0x5dc43786b3d0] = op_no;

		*node[0x5dc43786b400] = ==;

		*node[0x5dc43786b430] = 14;

		*node[0x5dc43786b460] = 0;

		*node[0x5dc43786b490] = ;;

		*node[0x5dc43786b4c0] = =;

		*node[0x5dc43786b4f0] = 10;

		*node[0x5dc43786b520] = /;

		*node[0x5dc43786b550] = -;

		*node[0x5dc43786b580] = 0;

		*node[0x5dc43786b5b0] = 2;

		*node[0x5dc43786b5e0] = *;

		*node[0x5dc43786b610] = 2;

		*node[0x5dc43786b640] = 1;

		*node[0x5dc43786b670] = ;;

		*node[0x5dc43786b6a0] = print;

		*node[0x5dc43786b6d0] = 8;

		*node[0x5dc43786b700] = ;;

		*node[0x5dc43786b730] = print;

		*node[0x5dc43786b760] = 10;

		*node[0x5dc43786b790] = else;

		*node[0x5dc43786b7c0] = op_no;

		*node[0x5dc43786b7f0] = ;;

		*node[0x5dc43786b820] = print;

		*node[0x5dc43786b850] = 7;

		*node[0x5dc43786b880] = ;;

		*node[0x5dc43786b8b0] = return;

		*node[0x5dc43786b8e0] = 0;

		*node[0x5dc43786b910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff32ccc060] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x57028279cfd0] = ;;

		*node[0x57028279d000] = 0;

		*node[0x57028279d030] = ;;

		*node[0x57028279d060] = input;

		*node[0x57028279d090] = 1;

		*node[0x57028279d0c0] = 2;

		*node[0x57028279d0f0] = 3;

		*node[0x57028279d120] = ;;

		*node[0x57028279d180] = 1;

		*node[0x57028279d1b0] = 2;

		*node[0x57028279d1e0] = 3;

		*node[0x57028279d210] = ;;

		*node[0x57028279d240] = 4;

		*node[0x57028279d270] = 1;

		*node[0x57028279d2a0] = 2;

		*node[0x57028279d2d0] = 3;

		*node[0x57028279d300] = ;;

		*node[0x57028279d330] = if;

		*node[0x57028279d360] = op_no;

		*node[0x57028279d390] = ==;

		*node[0x57028279d3c0] = 1;

		*node[0x57028279d3f0] = 0;

		*node[0x57028279d420] = ;;

		*node[0x57028279d480] = 2;

		*node[0x57028279d4b0] = 3;

		*node[0x57028279d4e0] = else;

		*node[0x57028279d510] = op_no;

		*node[0x57028279d540] = ;;

		*node[0x57028279d5a0] = 1;

		*node[0x57028279d5d0] = 2;

		*node[0x57028279d600] = 3;

		*node[0x57028279d630] = ;;

		*node[0x57028279d660] = 5;

		*node[0x57028279d690] = 1;

		*node[0x57028279d6c0] = 2;

		*node[0x57028279d6f0] = ;;

		*node[0x57028279d720] = =;

		*node[0x57028279d750] = 7;

		*node[0x57028279d780] = -;

		*node[0x57028279d7b0] = 0;

		*node[0x57028279d7e0] = 1;

		*node[0x57028279d810] = ;;

		*node[0x57028279d840] = =;

		*node[0x57028279d870] = 8;

		*node[0x57028279d8a0] = 1;

		*node[0x57028279d8d0] = ;;

		*node[0x57028279d900] = =;

		*node[0x57028279d930] = 9;

		*node[0x57028279d960] = 1000;

		*node[0x57028279d990] = ;;

		*node[0x57028279d9c0] = if;

		*node[0x57028279d9f0] = op_no;

		*node[0x57028279da20] = ==;

		*node[0x57028279da50] = 1;

		*node[0x57028279da80] = 0;

		*node[0x57028279dab0] = ;;

		*node[0x57028279dae0] = if;

		*node[0x57028279db10] = op_no;

		*node[0x57028279db40] = ==;

		*node[0x57028279db70] = 2;

		*node[0x57028279dba0] = 0;

		*node[0x57028279dbd0] = ;;

		*node[0x57028279dc00] = print;

		*node[0x57028279dc30] = 9;

		*node[0x57028279dc60] = else;

		*node[0x57028279dc90] = op_no;

		*node[0x57028279dcc0] = ;;

		*node[0x57028279dcf0] = print;

		*node[0x57028279dd20] = 7;

		*node[0x57028279dd50] = else;

		*node[0x57028279dd80] = op_no;

		*node[0x57028279ddb0] = ;;

		*node[0x57028279dde0] = =;

		*node[0x57028279de10] = 10;

		*node[0x57028279de40] = /;

		*node[0x57028279de70] = -;

		*node[0x57028279dea0] = 0;

		*node[0x57028279ded0] = 2;

		*node[0x57028279df00] = 1;

		*node[0x57028279df30] = ;;

		*node[0x57028279df60] = print;

		*node[0x57028279df90] = 8;

		*node[0x57028279dfc0] = ;;

		*node[0x57028279dff0] = print;

		*node[0x57028279e020] = 10;

		*node[0x57028279e050] = ;;

		*node[0x57028279e080] = return;

		*node[0x57028279e0b0] = 0;

		*node[0x57028279e0e0] = ;;

		*node[0x57028279e110] = 6;

		*node[0x57028279e140] = 1;

		*node[0x57028279e170] = 2;

		*node[0x57028279e1a0] = 3;

		*node[0x57028279e1d0] = ;;

		*node[0x57028279e200] = =;

		*node[0x57028279e230] = 7;

		*node[0x57028279e260] = -;

		*node[0x57028279e290] = 0;

		*node[0x57028279e2c0] = 1;

		*node[0x57028279e2f0] = ;;

		*node[0x57028279e320] = =;

		*node[0x57028279e350] = 8;

		*node[0x57028279e380] = 1;

		*node[0x57028279e3b0] = ;;

		*node[0x57028279e3e0] = =;

		*node[0x57028279e410] = 11;

		*node[0x57028279e440] = 2;

		*node[0x57028279e470] = ;;

		*node[0x57028279e4a0] = if;

		*node[0x57028279e4d0] = op_no;

		*node[0x57028279e500] = ==;

		*node[0x57028279e530] = 3;

		*node[0x57028279e560] = 0;

		*node[0x57028279e590] = ;;

		*node[0x57028279e5c0] = =;

		*node[0x57028279e5f0] = 12;

		*node[0x57028279e620] = 0;

		*node[0x57028279e650] = ;;

		*node[0x57028279e680] = =;

		*node[0x57028279e6b0] = 13;

		*node[0x57028279e6e0] = /;

		*node[0x57028279e710] = -;

		*node[0x57028279e740] = 0;

		*node[0x57028279e770] = 2;

		*node[0x57028279e7a0] = 1;

		*node[0x57028279e7d0] = ;;

		*node[0x57028279e800] = print;

		*node[0x57028279e830] = 11;

		*node[0x57028279e860] = ;;

		*node[0x57028279e890] = print;

		*node[0x57028279e8c0] = 12;

		*node[0x57028279e8f0] = 13;

		*node[0x57028279e920] = else;

		*node[0x57028279e950] = op_no;

		*node[0x57028279e980] = ;;

		*node[0x57028279e9b0] = =;

		*node[0x57028279e9e0] = 14;

		*node[0x57028279ea10] = -;

		*node[0x57028279ea40] = *;

		*node[0x57028279ea70] = 2;

		*node[0x57028279eaa0] = 2;

		*node[0x57028279ead0] = *;

		*node[0x57028279eb00] = *;

		*node[0x57028279eb30] = 4;

		*node[0x57028279eb60] = 1;

		*node[0x57028279eb90] = 3;

		*node[0x57028279ebc0] = ;;

		*node[0x57028279ebf0] = if;

		*node[0x57028279ec20] = op_no;

		*node[0x57028279ec50] = >;

		*node[0x57028279ec80] = 14;

		*node[0x57028279ecb0] = 0;

		*node[0x57028279ece0] = ;;

		*node[0x57028279ed10] = =;

		*node[0x57028279ed40] = 15;

		*node[0x57028279ed70] = sqrt;

		*node[0x57028279eda0] = 14;

		*node[0x57028279edd0] = ;;

		*node[0x57028279ee00] = =;

		*node[0x57028279ee30] = 12;

		*node[0x57028279ee60] = /;

		*node[0x57028279ee90] = -;

		*node[0x57028279eec0] = -;

		*node[0x57028279eef0] = 0;

		*node[0x57028279ef20] = 2;

		*node[0x57028279ef50] = 15;

		*node[0x57028279ef80] = *;

		*node[0x57028279efb0] = 2;

		*node[0x57028279efe0] = 1;

		*node[0x57028279f010] = ;;

		*node[0x57028279f040] = =;

		*node[0x57028279f070] = 13;

		*node[0x57028279f0a0] = /;

		*node[0x57028279f0d0] = +;

		*node[0x57028279f100] = -;

		*node[0x57028279f130] = 0;

		*node[0x57028279f160] = 2;

		*node[0x57028279f190] = 15;

		*node[0x57028279f1c0] = *;

		*node[0x57028279f1f0] = 2;

		*node[0x57028279f220] = 1;

		*node[0x57028279f250] = ;;

		*node[0x57028279f280] = print;

		*node[0x57028279f2b0] = 11;

		*node[0x57028279f2e0] = ;;

		*node[0x57028279f310] = print;

		*node[0x57028279f340] = 12;

		*node[0x57028279f370] = 13;

		*node[0x57028279f3a0] = elseif;

		*node[0x57028279f3d0] = op_no;

		*node[0x57028279f400] = ==;

		*node[0x57028279f430] = 14;

		*node[0x57028279f460] = 0;

		*node[0x57028279f490] = ;;

		*node[0x57028279f4c0] = =;

		*node[0x57028279f4f0] = 10;

		*node[0x57028279f520] = /;

		*node[0x57028279f550] = -;

		*node[0x57028279f580] = 0;

		*node[0x57028279f5b0] = 2;

		*node[0x57028279f5e0] = *;

		*node[0x57028279f610] = 2;

		*node[0x57028279f640] = 1;

		*node[0x57028279f670] = ;;

		*node[0x57028279f6a0] = print;

		*node[0x57028279f6d0] = 8;

		*node[0x57028279f700] = ;;

		*node[0x57028279f730] = print;

		*node[0x57028279f760] = 10;

		*node[0x57028279f790] = else;

		*node[0x57028279f7c0] = op_no;

		*node[0x57028279f7f0] = ;;

		*node[0x57028279f820] = print;

		*node[0x57028279f850] = 7;

		*node[0x57028279f880] = ;;

		*node[0x57028279f8b0] = return;

		*node[0x57028279f8e0] = 0;

		*node[0x57028279f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc6fddccd0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x55f9e2b34fd0] = ;;

		*node[0x55f9e2b35000] = 0;

		*node[0x55f9e2b35030] = ;;

		*node[0x55f9e2b35060] = input;

		*node[0x55f9e2b35090] = 1;

		*node[0x55f9e2b350c0] = 2;

		*node[0x55f9e2b350f0] = 3;

		*node[0x55f9e2b35120] = ;;

		*node[0x55f9e2b35180] = 1;

		*node[0x55f9e2b351b0] = 2;

		*node[0x55f9e2b351e0] = 3;

		*node[0x55f9e2b35210] = ;;

		*node[0x55f9e2b35240] = 4;

		*node[0x55f9e2b35270] = 1;

		*node[0x55f9e2b352a0] = 2;

		*node[0x55f9e2b352d0] = 3;

		*node[0x55f9e2b35300] = ;;

		*node[0x55f9e2b35330] = if;

		*node[0x55f9e2b35360] = op_no;

		*node[0x55f9e2b35390] = ==;

		*node[0x55f9e2b353c0] = 1;

		*node[0x55f9e2b353f0] = 0;

		*node[0x55f9e2b35420] = ;;

		*node[0x55f9e2b35480] = 2;

		*node[0x55f9e2b354b0] = 3;

		*node[0x55f9e2b354e0] = else;

		*node[0x55f9e2b35510] = op_no;

		*node[0x55f9e2b35540] = ;;

		*node[0x55f9e2b355a0] = 1;

		*node[0x55f9e2b355d0] = 2;

		*node[0x55f9e2b35600] = 3;

		*node[0x55f9e2b35630] = ;;

		*node[0x55f9e2b35660] = 5;

		*node[0x55f9e2b35690] = 1;

		*node[0x55f9e2b356c0] = 2;

		*node[0x55f9e2b356f0] = ;;

		*node[0x55f9e2b35720] = =;

		*node[0x55f9e2b35750] = 7;

		*node[0x55f9e2b35780] = -;

		*node[0x55f9e2b357b0] = 0;

		*node[0x55f9e2b357e0] = 1;

		*node[0x55f9e2b35810] = ;;

		*node[0x55f9e2b35840] = =;

		*node[0x55f9e2b35870] = 8;

		*node[0x55f9e2b358a0] = 1;

		*node[0x55f9e2b358d0] = ;;

		*node[0x55f9e2b35900] = =;

		*node[0x55f9e2b35930] = 9;

		*node[0x55f9e2b35960] = 1000;

		*node[0x55f9e2b35990] = ;;

		*node[0x55f9e2b359c0] = if;

		*node[0x55f9e2b359f0] = op_no;

		*node[0x55f9e2b35a20] = ==;

		*node[0x55f9e2b35a50] = 1;

		*node[0x55f9e2b35a80] = 0;

		*node[0x55f9e2b35ab0] = ;;

		*node[0x55f9e2b35ae0] = if;

		*node[0x55f9e2b35b10] = op_no;

		*node[0x55f9e2b35b40] = ==;

		*node[0x55f9e2b35b70] = 2;

		*node[0x55f9e2b35ba0] = 0;

		*node[0x55f9e2b35bd0] = ;;

		*node[0x55f9e2b35c00] = print;

		*node[0x55f9e2b35c30] = 9;

		*node[0x55f9e2b35c60] = else;

		*node[0x55f9e2b35c90] = op_no;

		*node[0x55f9e2b35cc0] = ;;

		*node[0x55f9e2b35cf0] = print;

		*node[0x55f9e2b35d20] = 7;

		*node[0x55f9e2b35d50] = else;

		*node[0x55f9e2b35d80] = op_no;

		*node[0x55f9e2b35db0] = ;;

		*node[0x55f9e2b35de0] = =;

		*node[0x55f9e2b35e10] = 10;

		*node[0x55f9e2b35e40] = /;

		*node[0x55f9e2b35e70] = -;

		*node[0x55f9e2b35ea0] = 0;

		*node[0x55f9e2b35ed0] = 2;

		*node[0x55f9e2b35f00] = 1;

		*node[0x55f9e2b35f30] = ;;

		*node[0x55f9e2b35f60] = print;

		*node[0x55f9e2b35f90] = 8;

		*node[0x55f9e2b35fc0] = ;;

		*node[0x55f9e2b35ff0] = print;

		*node[0x55f9e2b36020] = 10;

		*node[0x55f9e2b36050] = ;;

		*node[0x55f9e2b36080] = return;

		*node[0x55f9e2b360b0] = 0;

		*node[0x55f9e2b360e0] = ;;

		*node[0x55f9e2b36110] = 6;

		*node[0x55f9e2b36140] = 1;

		*node[0x55f9e2b36170] = 2;

		*node[0x55f9e2b361a0] = 3;

		*node[0x55f9e2b361d0] = ;;

		*node[0x55f9e2b36200] = =;

		*node[0x55f9e2b36230] = 7;

		*node[0x55f9e2b36260] = -;

		*node[0x55f9e2b36290] = 0;

		*node[0x55f9e2b362c0] = 1;

		*node[0x55f9e2b362f0] = ;;

		*node[0x55f9e2b36320] = =;

		*node[0x55f9e2b36350] = 8;

		*node[0x55f9e2b36380] = 1;

		*node[0x55f9e2b363b0] = ;;

		*node[0x55f9e2b363e0] = =;

		*node[0x55f9e2b36410] = 11;

		*node[0x55f9e2b36440] = 2;

		*node[0x55f9e2b36470] = ;;

		*node[0x55f9e2b364a0] = if;

		*node[0x55f9e2b364d0] = op_no;

		*node[0x55f9e2b36500] = ==;

		*node[0x55f9e2b36530] = 3;

		*node[0x55f9e2b36560] = 0;

		*node[0x55f9e2b36590] = ;;

		*node[0x55f9e2b365c0] = =;

		*node[0x55f9e2b365f0] = 12;

		*node[0x55f9e2b36620] = 0;

		*node[0x55f9e2b36650] = ;;

		*node[0x55f9e2b36680] = =;

		*node[0x55f9e2b366b0] = 13;

		*node[0x55f9e2b366e0] = /;

		*node[0x55f9e2b36710] = -;

		*node[0x55f9e2b36740] = 0;

		*node[0x55f9e2b36770] = 2;

		*node[0x55f9e2b367a0] = 1;

		*node[0x55f9e2b367d0] = ;;

		*node[0x55f9e2b36800] = print;

		*node[0x55f9e2b36830] = 11;

		*node[0x55f9e2b36860] = ;;

		*node[0x55f9e2b36890] = print;

		*node[0x55f9e2b368c0] = 12;

		*node[0x55f9e2b368f0] = 13;

		*node[0x55f9e2b36920] = else;

		*node[0x55f9e2b36950] = op_no;

		*node[0x55f9e2b36980] = ;;

		*node[0x55f9e2b369b0] = =;

		*node[0x55f9e2b369e0] = 14;

		*node[0x55f9e2b36a10] = -;

		*node[0x55f9e2b36a40] = *;

		*node[0x55f9e2b36a70] = 2;

		*node[0x55f9e2b36aa0] = 2;

		*node[0x55f9e2b36ad0] = *;

		*node[0x55f9e2b36b00] = *;

		*node[0x55f9e2b36b30] = 4;

		*node[0x55f9e2b36b60] = 1;

		*node[0x55f9e2b36b90] = 3;

		*node[0x55f9e2b36bc0] = ;;

		*node[0x55f9e2b36bf0] = if;

		*node[0x55f9e2b36c20] = op_no;

		*node[0x55f9e2b36c50] = >;

		*node[0x55f9e2b36c80] = 14;

		*node[0x55f9e2b36cb0] = 0;

		*node[0x55f9e2b36ce0] = ;;

		*node[0x55f9e2b36d10] = =;

		*node[0x55f9e2b36d40] = 15;

		*node[0x55f9e2b36d70] = sqrt;

		*node[0x55f9e2b36da0] = 14;

		*node[0x55f9e2b36dd0] = ;;

		*node[0x55f9e2b36e00] = =;

		*node[0x55f9e2b36e30] = 12;

		*node[0x55f9e2b36e60] = /;

		*node[0x55f9e2b36e90] = -;

		*node[0x55f9e2b36ec0] = -;

		*node[0x55f9e2b36ef0] = 0;

		*node[0x55f9e2b36f20] = 2;

		*node[0x55f9e2b36f50] = 15;

		*node[0x55f9e2b36f80] = *;

		*node[0x55f9e2b36fb0] = 2;

		*node[0x55f9e2b36fe0] = 1;

		*node[0x55f9e2b37010] = ;;

		*node[0x55f9e2b37040] = =;

		*node[0x55f9e2b37070] = 13;

		*node[0x55f9e2b370a0] = /;

		*node[0x55f9e2b370d0] = +;

		*node[0x55f9e2b37100] = -;

		*node[0x55f9e2b37130] = 0;

		*node[0x55f9e2b37160] = 2;

		*node[0x55f9e2b37190] = 15;

		*node[0x55f9e2b371c0] = *;

		*node[0x55f9e2b371f0] = 2;

		*node[0x55f9e2b37220] = 1;

		*node[0x55f9e2b37250] = ;;

		*node[0x55f9e2b37280] = print;

		*node[0x55f9e2b372b0] = 11;

		*node[0x55f9e2b372e0] = ;;

		*node[0x55f9e2b37310] = print;

		*node[0x55f9e2b37340] = 12;

		*node[0x55f9e2b37370] = 13;

		*node[0x55f9e2b373a0] = elseif;

		*node[0x55f9e2b373d0] = op_no;

		*node[0x55f9e2b37400] = ==;

		*node[0x55f9e2b37430] = 14;

		*node[0x55f9e2b37460] = 0;

		*node[0x55f9e2b37490] = ;;

		*node[0x55f9e2b374c0] = =;

		*node[0x55f9e2b374f0] = 10;

		*node[0x55f9e2b37520] = /;

		*node[0x55f9e2b37550] = -;

		*node[0x55f9e2b37580] = 0;

		*node[0x55f9e2b375b0] = 2;

		*node[0x55f9e2b375e0] = *;

		*node[0x55f9e2b37610] = 2;

		*node[0x55f9e2b37640] = 1;

		*node[0x55f9e2b37670] = ;;

		*node[0x55f9e2b376a0] = print;

		*node[0x55f9e2b376d0] = 8;

		*node[0x55f9e2b37700] = ;;

		*node[0x55f9e2b37730] = print;

		*node[0x55f9e2b37760] = 10;

		*node[0x55f9e2b37790] = else;

		*node[0x55f9e2b377c0] = op_no;

		*node[0x55f9e2b377f0] = ;;

		*node[0x55f9e2b37820] = print;

		*node[0x55f9e2b37850] = 7;

		*node[0x55f9e2b37880] = ;;

		*node[0x55f9e2b378b0] = return;

		*node[0x55f9e2b378e0] = 0;

		*node[0x55f9e2b37910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc508938f0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x58e8a4734fd0] = ;;

		*node[0x58e8a4735000] = 0;

		*node[0x58e8a4735030] = ;;

		*node[0x58e8a4735060] = input;

		*node[0x58e8a4735090] = 1;

		*node[0x58e8a47350c0] = 2;

		*node[0x58e8a47350f0] = 3;

		*node[0x58e8a4735120] = ;;

		*node[0x58e8a4735180] = 1;

		*node[0x58e8a47351b0] = 2;

		*node[0x58e8a47351e0] = 3;

		*node[0x58e8a4735210] = ;;

		*node[0x58e8a4735240] = 4;

		*node[0x58e8a4735270] = 1;

		*node[0x58e8a47352a0] = 2;

		*node[0x58e8a47352d0] = 3;

		*node[0x58e8a4735300] = ;;

		*node[0x58e8a4735330] = if;

		*node[0x58e8a4735360] = op_no;

		*node[0x58e8a4735390] = ==;

		*node[0x58e8a47353c0] = 1;

		*node[0x58e8a47353f0] = 0;

		*node[0x58e8a4735420] = ;;

		*node[0x58e8a4735480] = 2;

		*node[0x58e8a47354b0] = 3;

		*node[0x58e8a47354e0] = else;

		*node[0x58e8a4735510] = op_no;

		*node[0x58e8a4735540] = ;;

		*node[0x58e8a47355a0] = 1;

		*node[0x58e8a47355d0] = 2;

		*node[0x58e8a4735600] = 3;

		*node[0x58e8a4735630] = ;;

		*node[0x58e8a4735660] = 5;

		*node[0x58e8a4735690] = 1;

		*node[0x58e8a47356c0] = 2;

		*node[0x58e8a47356f0] = ;;

		*node[0x58e8a4735720] = =;

		*node[0x58e8a4735750] = 7;

		*node[0x58e8a4735780] = -;

		*node[0x58e8a47357b0] = 0;

		*node[0x58e8a47357e0] = 1;

		*node[0x58e8a4735810] = ;;

		*node[0x58e8a4735840] = =;

		*node[0x58e8a4735870] = 8;

		*node[0x58e8a47358a0] = 1;

		*node[0x58e8a47358d0] = ;;

		*node[0x58e8a4735900] = =;

		*node[0x58e8a4735930] = 9;

		*node[0x58e8a4735960] = 1000;

		*node[0x58e8a4735990] = ;;

		*node[0x58e8a47359c0] = if;

		*node[0x58e8a47359f0] = op_no;

		*node[0x58e8a4735a20] = ==;

		*node[0x58e8a4735a50] = 1;

		*node[0x58e8a4735a80] = 0;

		*node[0x58e8a4735ab0] = ;;

		*node[0x58e8a4735ae0] = if;

		*node[0x58e8a4735b10] = op_no;

		*node[0x58e8a4735b40] = ==;

		*node[0x58e8a4735b70] = 2;

		*node[0x58e8a4735ba0] = 0;

		*node[0x58e8a4735bd0] = ;;

		*node[0x58e8a4735c00] = print;

		*node[0x58e8a4735c30] = 9;

		*node[0x58e8a4735c60] = else;

		*node[0x58e8a4735c90] = op_no;

		*node[0x58e8a4735cc0] = ;;

		*node[0x58e8a4735cf0] = print;

		*node[0x58e8a4735d20] = 7;

		*node[0x58e8a4735d50] = else;

		*node[0x58e8a4735d80] = op_no;

		*node[0x58e8a4735db0] = ;;

		*node[0x58e8a4735de0] = =;

		*node[0x58e8a4735e10] = 10;

		*node[0x58e8a4735e40] = /;

		*node[0x58e8a4735e70] = -;

		*node[0x58e8a4735ea0] = 0;

		*node[0x58e8a4735ed0] = 2;

		*node[0x58e8a4735f00] = 1;

		*node[0x58e8a4735f30] = ;;

		*node[0x58e8a4735f60] = print;

		*node[0x58e8a4735f90] = 8;

		*node[0x58e8a4735fc0] = ;;

		*node[0x58e8a4735ff0] = print;

		*node[0x58e8a4736020] = 10;

		*node[0x58e8a4736050] = ;;

		*node[0x58e8a4736080] = return;

		*node[0x58e8a47360b0] = 0;

		*node[0x58e8a47360e0] = ;;

		*node[0x58e8a4736110] = 6;

		*node[0x58e8a4736140] = 1;

		*node[0x58e8a4736170] = 2;

		*node[0x58e8a47361a0] = 3;

		*node[0x58e8a47361d0] = ;;

		*node[0x58e8a4736200] = =;

		*node[0x58e8a4736230] = 7;

		*node[0x58e8a4736260] = -;

		*node[0x58e8a4736290] = 0;

		*node[0x58e8a47362c0] = 1;

		*node[0x58e8a47362f0] = ;;

		*node[0x58e8a4736320] = =;

		*node[0x58e8a4736350] = 8;

		*node[0x58e8a4736380] = 1;

		*node[0x58e8a47363b0] = ;;

		*node[0x58e8a47363e0] = =;

		*node[0x58e8a4736410] = 11;

		*node[0x58e8a4736440] = 2;

		*node[0x58e8a4736470] = ;;

		*node[0x58e8a47364a0] = if;

		*node[0x58e8a47364d0] = op_no;

		*node[0x58e8a4736500] = ==;

		*node[0x58e8a4736530] = 3;

		*node[0x58e8a4736560] = 0;

		*node[0x58e8a4736590] = ;;

		*node[0x58e8a47365c0] = =;

		*node[0x58e8a47365f0] = 12;

		*node[0x58e8a4736620] = 0;

		*node[0x58e8a4736650] = ;;

		*node[0x58e8a4736680] = =;

		*node[0x58e8a47366b0] = 13;

		*node[0x58e8a47366e0] = /;

		*node[0x58e8a4736710] = -;

		*node[0x58e8a4736740] = 0;

		*node[0x58e8a4736770] = 2;

		*node[0x58e8a47367a0] = 1;

		*node[0x58e8a47367d0] = ;;

		*node[0x58e8a4736800] = print;

		*node[0x58e8a4736830] = 11;

		*node[0x58e8a4736860] = ;;

		*node[0x58e8a4736890] = print;

		*node[0x58e8a47368c0] = 12;

		*node[0x58e8a47368f0] = 13;

		*node[0x58e8a4736920] = else;

		*node[0x58e8a4736950] = op_no;

		*node[0x58e8a4736980] = ;;

		*node[0x58e8a47369b0] = =;

		*node[0x58e8a47369e0] = 14;

		*node[0x58e8a4736a10] = -;

		*node[0x58e8a4736a40] = *;

		*node[0x58e8a4736a70] = 2;

		*node[0x58e8a4736aa0] = 2;

		*node[0x58e8a4736ad0] = *;

		*node[0x58e8a4736b00] = *;

		*node[0x58e8a4736b30] = 4;

		*node[0x58e8a4736b60] = 1;

		*node[0x58e8a4736b90] = 3;

		*node[0x58e8a4736bc0] = ;;

		*node[0x58e8a4736bf0] = if;

		*node[0x58e8a4736c20] = op_no;

		*node[0x58e8a4736c50] = >;

		*node[0x58e8a4736c80] = 14;

		*node[0x58e8a4736cb0] = 0;

		*node[0x58e8a4736ce0] = ;;

		*node[0x58e8a4736d10] = =;

		*node[0x58e8a4736d40] = 15;

		*node[0x58e8a4736d70] = sqrt;

		*node[0x58e8a4736da0] = 14;

		*node[0x58e8a4736dd0] = ;;

		*node[0x58e8a4736e00] = =;

		*node[0x58e8a4736e30] = 12;

		*node[0x58e8a4736e60] = /;

		*node[0x58e8a4736e90] = -;

		*node[0x58e8a4736ec0] = -;

		*node[0x58e8a4736ef0] = 0;

		*node[0x58e8a4736f20] = 2;

		*node[0x58e8a4736f50] = 15;

		*node[0x58e8a4736f80] = *;

		*node[0x58e8a4736fb0] = 2;

		*node[0x58e8a4736fe0] = 1;

		*node[0x58e8a4737010] = ;;

		*node[0x58e8a4737040] = =;

		*node[0x58e8a4737070] = 13;

		*node[0x58e8a47370a0] = /;

		*node[0x58e8a47370d0] = +;

		*node[0x58e8a4737100] = -;

		*node[0x58e8a4737130] = 0;

		*node[0x58e8a4737160] = 2;

		*node[0x58e8a4737190] = 15;

		*node[0x58e8a47371c0] = *;

		*node[0x58e8a47371f0] = 2;

		*node[0x58e8a4737220] = 1;

		*node[0x58e8a4737250] = ;;

		*node[0x58e8a4737280] = print;

		*node[0x58e8a47372b0] = 11;

		*node[0x58e8a47372e0] = ;;

		*node[0x58e8a4737310] = print;

		*node[0x58e8a4737340] = 12;

		*node[0x58e8a4737370] = 13;

		*node[0x58e8a47373a0] = elseif;

		*node[0x58e8a47373d0] = op_no;

		*node[0x58e8a4737400] = ==;

		*node[0x58e8a4737430] = 14;

		*node[0x58e8a4737460] = 0;

		*node[0x58e8a4737490] = ;;

		*node[0x58e8a47374c0] = =;

		*node[0x58e8a47374f0] = 10;

		*node[0x58e8a4737520] = /;

		*node[0x58e8a4737550] = -;

		*node[0x58e8a4737580] = 0;

		*node[0x58e8a47375b0] = 2;

		*node[0x58e8a47375e0] = *;

		*node[0x58e8a4737610] = 2;

		*node[0x58e8a4737640] = 1;

		*node[0x58e8a4737670] = ;;

		*node[0x58e8a47376a0] = print;

		*node[0x58e8a47376d0] = 8;

		*node[0x58e8a4737700] = ;;

		*node[0x58e8a4737730] = print;

		*node[0x58e8a4737760] = 10;

		*node[0x58e8a4737790] = else;

		*node[0x58e8a47377c0] = op_no;

		*node[0x58e8a47377f0] = ;;

		*node[0x58e8a4737820] = print;

		*node[0x58e8a4737850] = 7;

		*node[0x58e8a4737880] = ;;

		*node[0x58e8a47378b0] = return;

		*node[0x58e8a47378e0] = 0;

		*node[0x58e8a4737910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd8bfe0ab0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e43c9416fd0] = ;;

		*node[0x5e43c9417000] = 0;

		*node[0x5e43c9417030] = ;;

		*node[0x5e43c9417060] = input;

		*node[0x5e43c9417090] = 1;

		*node[0x5e43c94170c0] = 2;

		*node[0x5e43c94170f0] = 3;

		*node[0x5e43c9417120] = ;;

		*node[0x5e43c9417180] = 1;

		*node[0x5e43c94171b0] = 2;

		*node[0x5e43c94171e0] = 3;

		*node[0x5e43c9417210] = ;;

		*node[0x5e43c9417240] = 4;

		*node[0x5e43c9417270] = 1;

		*node[0x5e43c94172a0] = 2;

		*node[0x5e43c94172d0] = 3;

		*node[0x5e43c9417300] = ;;

		*node[0x5e43c9417330] = if;

		*node[0x5e43c9417360] = op_no;

		*node[0x5e43c9417390] = ==;

		*node[0x5e43c94173c0] = 1;

		*node[0x5e43c94173f0] = 0;

		*node[0x5e43c9417420] = ;;

		*node[0x5e43c9417480] = 2;

		*node[0x5e43c94174b0] = 3;

		*node[0x5e43c94174e0] = else;

		*node[0x5e43c9417510] = op_no;

		*node[0x5e43c9417540] = ;;

		*node[0x5e43c94175a0] = 1;

		*node[0x5e43c94175d0] = 2;

		*node[0x5e43c9417600] = 3;

		*node[0x5e43c9417630] = ;;

		*node[0x5e43c9417660] = 5;

		*node[0x5e43c9417690] = 1;

		*node[0x5e43c94176c0] = 2;

		*node[0x5e43c94176f0] = ;;

		*node[0x5e43c9417720] = =;

		*node[0x5e43c9417750] = 7;

		*node[0x5e43c9417780] = -;

		*node[0x5e43c94177b0] = 0;

		*node[0x5e43c94177e0] = 1;

		*node[0x5e43c9417810] = ;;

		*node[0x5e43c9417840] = =;

		*node[0x5e43c9417870] = 8;

		*node[0x5e43c94178a0] = 1;

		*node[0x5e43c94178d0] = ;;

		*node[0x5e43c9417900] = =;

		*node[0x5e43c9417930] = 9;

		*node[0x5e43c9417960] = 1000;

		*node[0x5e43c9417990] = ;;

		*node[0x5e43c94179c0] = if;

		*node[0x5e43c94179f0] = op_no;

		*node[0x5e43c9417a20] = ==;

		*node[0x5e43c9417a50] = 1;

		*node[0x5e43c9417a80] = 0;

		*node[0x5e43c9417ab0] = ;;

		*node[0x5e43c9417ae0] = if;

		*node[0x5e43c9417b10] = op_no;

		*node[0x5e43c9417b40] = ==;

		*node[0x5e43c9417b70] = 2;

		*node[0x5e43c9417ba0] = 0;

		*node[0x5e43c9417bd0] = ;;

		*node[0x5e43c9417c00] = print;

		*node[0x5e43c9417c30] = 9;

		*node[0x5e43c9417c60] = else;

		*node[0x5e43c9417c90] = op_no;

		*node[0x5e43c9417cc0] = ;;

		*node[0x5e43c9417cf0] = print;

		*node[0x5e43c9417d20] = 7;

		*node[0x5e43c9417d50] = else;

		*node[0x5e43c9417d80] = op_no;

		*node[0x5e43c9417db0] = ;;

		*node[0x5e43c9417de0] = =;

		*node[0x5e43c9417e10] = 10;

		*node[0x5e43c9417e40] = /;

		*node[0x5e43c9417e70] = -;

		*node[0x5e43c9417ea0] = 0;

		*node[0x5e43c9417ed0] = 2;

		*node[0x5e43c9417f00] = 1;

		*node[0x5e43c9417f30] = ;;

		*node[0x5e43c9417f60] = print;

		*node[0x5e43c9417f90] = 8;

		*node[0x5e43c9417fc0] = ;;

		*node[0x5e43c9417ff0] = print;

		*node[0x5e43c9418020] = 10;

		*node[0x5e43c9418050] = ;;

		*node[0x5e43c9418080] = return;

		*node[0x5e43c94180b0] = 0;

		*node[0x5e43c94180e0] = ;;

		*node[0x5e43c9418110] = 6;

		*node[0x5e43c9418140] = 1;

		*node[0x5e43c9418170] = 2;

		*node[0x5e43c94181a0] = 3;

		*node[0x5e43c94181d0] = ;;

		*node[0x5e43c9418200] = =;

		*node[0x5e43c9418230] = 7;

		*node[0x5e43c9418260] = -;

		*node[0x5e43c9418290] = 0;

		*node[0x5e43c94182c0] = 1;

		*node[0x5e43c94182f0] = ;;

		*node[0x5e43c9418320] = =;

		*node[0x5e43c9418350] = 8;

		*node[0x5e43c9418380] = 1;

		*node[0x5e43c94183b0] = ;;

		*node[0x5e43c94183e0] = =;

		*node[0x5e43c9418410] = 11;

		*node[0x5e43c9418440] = 2;

		*node[0x5e43c9418470] = ;;

		*node[0x5e43c94184a0] = if;

		*node[0x5e43c94184d0] = op_no;

		*node[0x5e43c9418500] = ==;

		*node[0x5e43c9418530] = 3;

		*node[0x5e43c9418560] = 0;

		*node[0x5e43c9418590] = ;;

		*node[0x5e43c94185c0] = =;

		*node[0x5e43c94185f0] = 12;

		*node[0x5e43c9418620] = 0;

		*node[0x5e43c9418650] = ;;

		*node[0x5e43c9418680] = =;

		*node[0x5e43c94186b0] = 13;

		*node[0x5e43c94186e0] = /;

		*node[0x5e43c9418710] = -;

		*node[0x5e43c9418740] = 0;

		*node[0x5e43c9418770] = 2;

		*node[0x5e43c94187a0] = 1;

		*node[0x5e43c94187d0] = ;;

		*node[0x5e43c9418800] = print;

		*node[0x5e43c9418830] = 11;

		*node[0x5e43c9418860] = ;;

		*node[0x5e43c9418890] = print;

		*node[0x5e43c94188c0] = 12;

		*node[0x5e43c94188f0] = 13;

		*node[0x5e43c9418920] = else;

		*node[0x5e43c9418950] = op_no;

		*node[0x5e43c9418980] = ;;

		*node[0x5e43c94189b0] = =;

		*node[0x5e43c94189e0] = 14;

		*node[0x5e43c9418a10] = -;

		*node[0x5e43c9418a40] = *;

		*node[0x5e43c9418a70] = 2;

		*node[0x5e43c9418aa0] = 2;

		*node[0x5e43c9418ad0] = *;

		*node[0x5e43c9418b00] = *;

		*node[0x5e43c9418b30] = 4;

		*node[0x5e43c9418b60] = 1;

		*node[0x5e43c9418b90] = 3;

		*node[0x5e43c9418bc0] = ;;

		*node[0x5e43c9418bf0] = if;

		*node[0x5e43c9418c20] = op_no;

		*node[0x5e43c9418c50] = >;

		*node[0x5e43c9418c80] = 14;

		*node[0x5e43c9418cb0] = 0;

		*node[0x5e43c9418ce0] = ;;

		*node[0x5e43c9418d10] = =;

		*node[0x5e43c9418d40] = 15;

		*node[0x5e43c9418d70] = sqrt;

		*node[0x5e43c9418da0] = 14;

		*node[0x5e43c9418dd0] = ;;

		*node[0x5e43c9418e00] = =;

		*node[0x5e43c9418e30] = 12;

		*node[0x5e43c9418e60] = /;

		*node[0x5e43c9418e90] = -;

		*node[0x5e43c9418ec0] = -;

		*node[0x5e43c9418ef0] = 0;

		*node[0x5e43c9418f20] = 2;

		*node[0x5e43c9418f50] = 15;

		*node[0x5e43c9418f80] = *;

		*node[0x5e43c9418fb0] = 2;

		*node[0x5e43c9418fe0] = 1;

		*node[0x5e43c9419010] = ;;

		*node[0x5e43c9419040] = =;

		*node[0x5e43c9419070] = 13;

		*node[0x5e43c94190a0] = /;

		*node[0x5e43c94190d0] = +;

		*node[0x5e43c9419100] = -;

		*node[0x5e43c9419130] = 0;

		*node[0x5e43c9419160] = 2;

		*node[0x5e43c9419190] = 15;

		*node[0x5e43c94191c0] = *;

		*node[0x5e43c94191f0] = 2;

		*node[0x5e43c9419220] = 1;

		*node[0x5e43c9419250] = ;;

		*node[0x5e43c9419280] = print;

		*node[0x5e43c94192b0] = 11;

		*node[0x5e43c94192e0] = ;;

		*node[0x5e43c9419310] = print;

		*node[0x5e43c9419340] = 12;

		*node[0x5e43c9419370] = 13;

		*node[0x5e43c94193a0] = elseif;

		*node[0x5e43c94193d0] = op_no;

		*node[0x5e43c9419400] = ==;

		*node[0x5e43c9419430] = 14;

		*node[0x5e43c9419460] = 0;

		*node[0x5e43c9419490] = ;;

		*node[0x5e43c94194c0] = =;

		*node[0x5e43c94194f0] = 10;

		*node[0x5e43c9419520] = /;

		*node[0x5e43c9419550] = -;

		*node[0x5e43c9419580] = 0;

		*node[0x5e43c94195b0] = 2;

		*node[0x5e43c94195e0] = *;

		*node[0x5e43c9419610] = 2;

		*node[0x5e43c9419640] = 1;

		*node[0x5e43c9419670] = ;;

		*node[0x5e43c94196a0] = print;

		*node[0x5e43c94196d0] = 8;

		*node[0x5e43c9419700] = ;;

		*node[0x5e43c9419730] = print;

		*node[0x5e43c9419760] = 10;

		*node[0x5e43c9419790] = else;

		*node[0x5e43c94197c0] = op_no;

		*node[0x5e43c94197f0] = ;;

		*node[0x5e43c9419820] = print;

		*node[0x5e43c9419850] = 7;

		*node[0x5e43c9419880] = ;;

		*node[0x5e43c94198b0] = return;

		*node[0x5e43c94198e0] = 0;

		*node[0x5e43c9419910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc80ad8940] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x564f9f7fbfd0] = ;;

		*node[0x564f9f7fc000] = 0;

		*node[0x564f9f7fc030] = ;;

		*node[0x564f9f7fc060] = input;

		*node[0x564f9f7fc090] = 1;

		*node[0x564f9f7fc0c0] = 2;

		*node[0x564f9f7fc0f0] = 3;

		*node[0x564f9f7fc120] = ;;

		*node[0x564f9f7fc180] = 1;

		*node[0x564f9f7fc1b0] = 2;

		*node[0x564f9f7fc1e0] = 3;

		*node[0x564f9f7fc210] = ;;

		*node[0x564f9f7fc240] = 4;

		*node[0x564f9f7fc270] = 1;

		*node[0x564f9f7fc2a0] = 2;

		*node[0x564f9f7fc2d0] = 3;

		*node[0x564f9f7fc300] = ;;

		*node[0x564f9f7fc330] = if;

		*node[0x564f9f7fc360] = op_no;

		*node[0x564f9f7fc390] = ==;

		*node[0x564f9f7fc3c0] = 1;

		*node[0x564f9f7fc3f0] = 0;

		*node[0x564f9f7fc420] = ;;

		*node[0x564f9f7fc480] = 2;

		*node[0x564f9f7fc4b0] = 3;

		*node[0x564f9f7fc4e0] = else;

		*node[0x564f9f7fc510] = op_no;

		*node[0x564f9f7fc540] = ;;

		*node[0x564f9f7fc5a0] = 1;

		*node[0x564f9f7fc5d0] = 2;

		*node[0x564f9f7fc600] = 3;

		*node[0x564f9f7fc630] = ;;

		*node[0x564f9f7fc660] = 5;

		*node[0x564f9f7fc690] = 1;

		*node[0x564f9f7fc6c0] = 2;

		*node[0x564f9f7fc6f0] = ;;

		*node[0x564f9f7fc720] = =;

		*node[0x564f9f7fc750] = 7;

		*node[0x564f9f7fc780] = -;

		*node[0x564f9f7fc7b0] = 0;

		*node[0x564f9f7fc7e0] = 1;

		*node[0x564f9f7fc810] = ;;

		*node[0x564f9f7fc840] = =;

		*node[0x564f9f7fc870] = 8;

		*node[0x564f9f7fc8a0] = 1;

		*node[0x564f9f7fc8d0] = ;;

		*node[0x564f9f7fc900] = =;

		*node[0x564f9f7fc930] = 9;

		*node[0x564f9f7fc960] = 1000;

		*node[0x564f9f7fc990] = ;;

		*node[0x564f9f7fc9c0] = if;

		*node[0x564f9f7fc9f0] = op_no;

		*node[0x564f9f7fca20] = ==;

		*node[0x564f9f7fca50] = 1;

		*node[0x564f9f7fca80] = 0;

		*node[0x564f9f7fcab0] = ;;

		*node[0x564f9f7fcae0] = if;

		*node[0x564f9f7fcb10] = op_no;

		*node[0x564f9f7fcb40] = ==;

		*node[0x564f9f7fcb70] = 2;

		*node[0x564f9f7fcba0] = 0;

		*node[0x564f9f7fcbd0] = ;;

		*node[0x564f9f7fcc00] = print;

		*node[0x564f9f7fcc30] = 9;

		*node[0x564f9f7fcc60] = else;

		*node[0x564f9f7fcc90] = op_no;

		*node[0x564f9f7fccc0] = ;;

		*node[0x564f9f7fccf0] = print;

		*node[0x564f9f7fcd20] = 7;

		*node[0x564f9f7fcd50] = else;

		*node[0x564f9f7fcd80] = op_no;

		*node[0x564f9f7fcdb0] = ;;

		*node[0x564f9f7fcde0] = =;

		*node[0x564f9f7fce10] = 10;

		*node[0x564f9f7fce40] = /;

		*node[0x564f9f7fce70] = -;

		*node[0x564f9f7fcea0] = 0;

		*node[0x564f9f7fced0] = 2;

		*node[0x564f9f7fcf00] = 1;

		*node[0x564f9f7fcf30] = ;;

		*node[0x564f9f7fcf60] = print;

		*node[0x564f9f7fcf90] = 8;

		*node[0x564f9f7fcfc0] = ;;

		*node[0x564f9f7fcff0] = print;

		*node[0x564f9f7fd020] = 10;

		*node[0x564f9f7fd050] = ;;

		*node[0x564f9f7fd080] = return;

		*node[0x564f9f7fd0b0] = 0;

		*node[0x564f9f7fd0e0] = ;;

		*node[0x564f9f7fd110] = 6;

		*node[0x564f9f7fd140] = 1;

		*node[0x564f9f7fd170] = 2;

		*node[0x564f9f7fd1a0] = 3;

		*node[0x564f9f7fd1d0] = ;;

		*node[0x564f9f7fd200] = =;

		*node[0x564f9f7fd230] = 7;

		*node[0x564f9f7fd260] = -;

		*node[0x564f9f7fd290] = 0;

		*node[0x564f9f7fd2c0] = 1;

		*node[0x564f9f7fd2f0] = ;;

		*node[0x564f9f7fd320] = =;

		*node[0x564f9f7fd350] = 8;

		*node[0x564f9f7fd380] = 1;

		*node[0x564f9f7fd3b0] = ;;

		*node[0x564f9f7fd3e0] = =;

		*node[0x564f9f7fd410] = 11;

		*node[0x564f9f7fd440] = 2;

		*node[0x564f9f7fd470] = ;;

		*node[0x564f9f7fd4a0] = if;

		*node[0x564f9f7fd4d0] = op_no;

		*node[0x564f9f7fd500] = ==;

		*node[0x564f9f7fd530] = 3;

		*node[0x564f9f7fd560] = 0;

		*node[0x564f9f7fd590] = ;;

		*node[0x564f9f7fd5c0] = =;

		*node[0x564f9f7fd5f0] = 12;

		*node[0x564f9f7fd620] = 0;

		*node[0x564f9f7fd650] = ;;

		*node[0x564f9f7fd680] = =;

		*node[0x564f9f7fd6b0] = 13;

		*node[0x564f9f7fd6e0] = /;

		*node[0x564f9f7fd710] = -;

		*node[0x564f9f7fd740] = 0;

		*node[0x564f9f7fd770] = 2;

		*node[0x564f9f7fd7a0] = 1;

		*node[0x564f9f7fd7d0] = ;;

		*node[0x564f9f7fd800] = print;

		*node[0x564f9f7fd830] = 11;

		*node[0x564f9f7fd860] = ;;

		*node[0x564f9f7fd890] = print;

		*node[0x564f9f7fd8c0] = 12;

		*node[0x564f9f7fd8f0] = 13;

		*node[0x564f9f7fd920] = else;

		*node[0x564f9f7fd950] = op_no;

		*node[0x564f9f7fd980] = ;;

		*node[0x564f9f7fd9b0] = =;

		*node[0x564f9f7fd9e0] = 14;

		*node[0x564f9f7fda10] = -;

		*node[0x564f9f7fda40] = *;

		*node[0x564f9f7fda70] = 2;

		*node[0x564f9f7fdaa0] = 2;

		*node[0x564f9f7fdad0] = *;

		*node[0x564f9f7fdb00] = *;

		*node[0x564f9f7fdb30] = 4;

		*node[0x564f9f7fdb60] = 1;

		*node[0x564f9f7fdb90] = 3;

		*node[0x564f9f7fdbc0] = ;;

		*node[0x564f9f7fdbf0] = if;

		*node[0x564f9f7fdc20] = op_no;

		*node[0x564f9f7fdc50] = >;

		*node[0x564f9f7fdc80] = 14;

		*node[0x564f9f7fdcb0] = 0;

		*node[0x564f9f7fdce0] = ;;

		*node[0x564f9f7fdd10] = =;

		*node[0x564f9f7fdd40] = 15;

		*node[0x564f9f7fdd70] = sqrt;

		*node[0x564f9f7fdda0] = 14;

		*node[0x564f9f7fddd0] = ;;

		*node[0x564f9f7fde00] = =;

		*node[0x564f9f7fde30] = 12;

		*node[0x564f9f7fde60] = /;

		*node[0x564f9f7fde90] = -;

		*node[0x564f9f7fdec0] = -;

		*node[0x564f9f7fdef0] = 0;

		*node[0x564f9f7fdf20] = 2;

		*node[0x564f9f7fdf50] = 15;

		*node[0x564f9f7fdf80] = *;

		*node[0x564f9f7fdfb0] = 2;

		*node[0x564f9f7fdfe0] = 1;

		*node[0x564f9f7fe010] = ;;

		*node[0x564f9f7fe040] = =;

		*node[0x564f9f7fe070] = 13;

		*node[0x564f9f7fe0a0] = /;

		*node[0x564f9f7fe0d0] = +;

		*node[0x564f9f7fe100] = -;

		*node[0x564f9f7fe130] = 0;

		*node[0x564f9f7fe160] = 2;

		*node[0x564f9f7fe190] = 15;

		*node[0x564f9f7fe1c0] = *;

		*node[0x564f9f7fe1f0] = 2;

		*node[0x564f9f7fe220] = 1;

		*node[0x564f9f7fe250] = ;;

		*node[0x564f9f7fe280] = print;

		*node[0x564f9f7fe2b0] = 11;

		*node[0x564f9f7fe2e0] = ;;

		*node[0x564f9f7fe310] = print;

		*node[0x564f9f7fe340] = 12;

		*node[0x564f9f7fe370] = 13;

		*node[0x564f9f7fe3a0] = elseif;

		*node[0x564f9f7fe3d0] = op_no;

		*node[0x564f9f7fe400] = ==;

		*node[0x564f9f7fe430] = 14;

		*node[0x564f9f7fe460] = 0;

		*node[0x564f9f7fe490] = ;;

		*node[0x564f9f7fe4c0] = =;

		*node[0x564f9f7fe4f0] = 10;

		*node[0x564f9f7fe520] = /;

		*node[0x564f9f7fe550] = -;

		*node[0x564f9f7fe580] = 0;

		*node[0x564f9f7fe5b0] = 2;

		*node[0x564f9f7fe5e0] = *;

		*node[0x564f9f7fe610] = 2;

		*node[0x564f9f7fe640] = 1;

		*node[0x564f9f7fe670] = ;;

		*node[0x564f9f7fe6a0] = print;

		*node[0x564f9f7fe6d0] = 8;

		*node[0x564f9f7fe700] = ;;

		*node[0x564f9f7fe730] = print;

		*node[0x564f9f7fe760] = 10;

		*node[0x564f9f7fe790] = else;

		*node[0x564f9f7fe7c0] = op_no;

		*node[0x564f9f7fe7f0] = ;;

		*node[0x564f9f7fe820] = print;

		*node[0x564f9f7fe850] = 7;

		*node[0x564f9f7fe880] = ;;

		*node[0x564f9f7fe8b0] = return;

		*node[0x564f9f7fe8e0] = 0;

		*node[0x564f9f7fe910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd85650da0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5dd27b04dfd0] = ;;

		*node[0x5dd27b04e000] = 0;

		*node[0x5dd27b04e030] = ;;

		*node[0x5dd27b04e060] = input;

		*node[0x5dd27b04e090] = 1;

		*node[0x5dd27b04e0c0] = 2;

		*node[0x5dd27b04e0f0] = 3;

		*node[0x5dd27b04e120] = ;;

		*node[0x5dd27b04e180] = 1;

		*node[0x5dd27b04e1b0] = 2;

		*node[0x5dd27b04e1e0] = 3;

		*node[0x5dd27b04e210] = ;;

		*node[0x5dd27b04e240] = 4;

		*node[0x5dd27b04e270] = 1;

		*node[0x5dd27b04e2a0] = 2;

		*node[0x5dd27b04e2d0] = 3;

		*node[0x5dd27b04e300] = ;;

		*node[0x5dd27b04e330] = if;

		*node[0x5dd27b04e360] = op_no;

		*node[0x5dd27b04e390] = ==;

		*node[0x5dd27b04e3c0] = 1;

		*node[0x5dd27b04e3f0] = 0;

		*node[0x5dd27b04e420] = ;;

		*node[0x5dd27b04e480] = 2;

		*node[0x5dd27b04e4b0] = 3;

		*node[0x5dd27b04e4e0] = else;

		*node[0x5dd27b04e510] = op_no;

		*node[0x5dd27b04e540] = ;;

		*node[0x5dd27b04e5a0] = 1;

		*node[0x5dd27b04e5d0] = 2;

		*node[0x5dd27b04e600] = 3;

		*node[0x5dd27b04e630] = ;;

		*node[0x5dd27b04e660] = 5;

		*node[0x5dd27b04e690] = 1;

		*node[0x5dd27b04e6c0] = 2;

		*node[0x5dd27b04e6f0] = ;;

		*node[0x5dd27b04e720] = =;

		*node[0x5dd27b04e750] = 7;

		*node[0x5dd27b04e780] = -;

		*node[0x5dd27b04e7b0] = 0;

		*node[0x5dd27b04e7e0] = 1;

		*node[0x5dd27b04e810] = ;;

		*node[0x5dd27b04e840] = =;

		*node[0x5dd27b04e870] = 8;

		*node[0x5dd27b04e8a0] = 1;

		*node[0x5dd27b04e8d0] = ;;

		*node[0x5dd27b04e900] = =;

		*node[0x5dd27b04e930] = 9;

		*node[0x5dd27b04e960] = 1000;

		*node[0x5dd27b04e990] = ;;

		*node[0x5dd27b04e9c0] = if;

		*node[0x5dd27b04e9f0] = op_no;

		*node[0x5dd27b04ea20] = ==;

		*node[0x5dd27b04ea50] = 1;

		*node[0x5dd27b04ea80] = 0;

		*node[0x5dd27b04eab0] = ;;

		*node[0x5dd27b04eae0] = if;

		*node[0x5dd27b04eb10] = op_no;

		*node[0x5dd27b04eb40] = ==;

		*node[0x5dd27b04eb70] = 2;

		*node[0x5dd27b04eba0] = 0;

		*node[0x5dd27b04ebd0] = ;;

		*node[0x5dd27b04ec00] = print;

		*node[0x5dd27b04ec30] = 9;

		*node[0x5dd27b04ec60] = else;

		*node[0x5dd27b04ec90] = op_no;

		*node[0x5dd27b04ecc0] = ;;

		*node[0x5dd27b04ecf0] = print;

		*node[0x5dd27b04ed20] = 7;

		*node[0x5dd27b04ed50] = else;

		*node[0x5dd27b04ed80] = op_no;

		*node[0x5dd27b04edb0] = ;;

		*node[0x5dd27b04ede0] = =;

		*node[0x5dd27b04ee10] = 10;

		*node[0x5dd27b04ee40] = /;

		*node[0x5dd27b04ee70] = -;

		*node[0x5dd27b04eea0] = 0;

		*node[0x5dd27b04eed0] = 2;

		*node[0x5dd27b04ef00] = 1;

		*node[0x5dd27b04ef30] = ;;

		*node[0x5dd27b04ef60] = print;

		*node[0x5dd27b04ef90] = 8;

		*node[0x5dd27b04efc0] = ;;

		*node[0x5dd27b04eff0] = print;

		*node[0x5dd27b04f020] = 10;

		*node[0x5dd27b04f050] = ;;

		*node[0x5dd27b04f080] = return;

		*node[0x5dd27b04f0b0] = 0;

		*node[0x5dd27b04f0e0] = ;;

		*node[0x5dd27b04f110] = 6;

		*node[0x5dd27b04f140] = 1;

		*node[0x5dd27b04f170] = 2;

		*node[0x5dd27b04f1a0] = 3;

		*node[0x5dd27b04f1d0] = ;;

		*node[0x5dd27b04f200] = =;

		*node[0x5dd27b04f230] = 7;

		*node[0x5dd27b04f260] = -;

		*node[0x5dd27b04f290] = 0;

		*node[0x5dd27b04f2c0] = 1;

		*node[0x5dd27b04f2f0] = ;;

		*node[0x5dd27b04f320] = =;

		*node[0x5dd27b04f350] = 8;

		*node[0x5dd27b04f380] = 1;

		*node[0x5dd27b04f3b0] = ;;

		*node[0x5dd27b04f3e0] = =;

		*node[0x5dd27b04f410] = 11;

		*node[0x5dd27b04f440] = 2;

		*node[0x5dd27b04f470] = ;;

		*node[0x5dd27b04f4a0] = if;

		*node[0x5dd27b04f4d0] = op_no;

		*node[0x5dd27b04f500] = ==;

		*node[0x5dd27b04f530] = 3;

		*node[0x5dd27b04f560] = 0;

		*node[0x5dd27b04f590] = ;;

		*node[0x5dd27b04f5c0] = =;

		*node[0x5dd27b04f5f0] = 12;

		*node[0x5dd27b04f620] = 0;

		*node[0x5dd27b04f650] = ;;

		*node[0x5dd27b04f680] = =;

		*node[0x5dd27b04f6b0] = 13;

		*node[0x5dd27b04f6e0] = /;

		*node[0x5dd27b04f710] = -;

		*node[0x5dd27b04f740] = 0;

		*node[0x5dd27b04f770] = 2;

		*node[0x5dd27b04f7a0] = 1;

		*node[0x5dd27b04f7d0] = ;;

		*node[0x5dd27b04f800] = print;

		*node[0x5dd27b04f830] = 11;

		*node[0x5dd27b04f860] = ;;

		*node[0x5dd27b04f890] = print;

		*node[0x5dd27b04f8c0] = 12;

		*node[0x5dd27b04f8f0] = 13;

		*node[0x5dd27b04f920] = else;

		*node[0x5dd27b04f950] = op_no;

		*node[0x5dd27b04f980] = ;;

		*node[0x5dd27b04f9b0] = =;

		*node[0x5dd27b04f9e0] = 14;

		*node[0x5dd27b04fa10] = -;

		*node[0x5dd27b04fa40] = *;

		*node[0x5dd27b04fa70] = 2;

		*node[0x5dd27b04faa0] = 2;

		*node[0x5dd27b04fad0] = *;

		*node[0x5dd27b04fb00] = *;

		*node[0x5dd27b04fb30] = 4;

		*node[0x5dd27b04fb60] = 1;

		*node[0x5dd27b04fb90] = 3;

		*node[0x5dd27b04fbc0] = ;;

		*node[0x5dd27b04fbf0] = if;

		*node[0x5dd27b04fc20] = op_no;

		*node[0x5dd27b04fc50] = >;

		*node[0x5dd27b04fc80] = 14;

		*node[0x5dd27b04fcb0] = 0;

		*node[0x5dd27b04fce0] = ;;

		*node[0x5dd27b04fd10] = =;

		*node[0x5dd27b04fd40] = 15;

		*node[0x5dd27b04fd70] = sqrt;

		*node[0x5dd27b04fda0] = 14;

		*node[0x5dd27b04fdd0] = ;;

		*node[0x5dd27b04fe00] = =;

		*node[0x5dd27b04fe30] = 12;

		*node[0x5dd27b04fe60] = /;

		*node[0x5dd27b04fe90] = -;

		*node[0x5dd27b04fec0] = -;

		*node[0x5dd27b04fef0] = 0;

		*node[0x5dd27b04ff20] = 2;

		*node[0x5dd27b04ff50] = 15;

		*node[0x5dd27b04ff80] = *;

		*node[0x5dd27b04ffb0] = 2;

		*node[0x5dd27b04ffe0] = 1;

		*node[0x5dd27b050010] = ;;

		*node[0x5dd27b050040] = =;

		*node[0x5dd27b050070] = 13;

		*node[0x5dd27b0500a0] = /;

		*node[0x5dd27b0500d0] = +;

		*node[0x5dd27b050100] = -;

		*node[0x5dd27b050130] = 0;

		*node[0x5dd27b050160] = 2;

		*node[0x5dd27b050190] = 15;

		*node[0x5dd27b0501c0] = *;

		*node[0x5dd27b0501f0] = 2;

		*node[0x5dd27b050220] = 1;

		*node[0x5dd27b050250] = ;;

		*node[0x5dd27b050280] = print;

		*node[0x5dd27b0502b0] = 11;

		*node[0x5dd27b0502e0] = ;;

		*node[0x5dd27b050310] = print;

		*node[0x5dd27b050340] = 12;

		*node[0x5dd27b050370] = 13;

		*node[0x5dd27b0503a0] = elseif;

		*node[0x5dd27b0503d0] = op_no;

		*node[0x5dd27b050400] = ==;

		*node[0x5dd27b050430] = 14;

		*node[0x5dd27b050460] = 0;

		*node[0x5dd27b050490] = ;;

		*node[0x5dd27b0504c0] = =;

		*node[0x5dd27b0504f0] = 10;

		*node[0x5dd27b050520] = /;

		*node[0x5dd27b050550] = -;

		*node[0x5dd27b050580] = 0;

		*node[0x5dd27b0505b0] = 2;

		*node[0x5dd27b0505e0] = *;

		*node[0x5dd27b050610] = 2;

		*node[0x5dd27b050640] = 1;

		*node[0x5dd27b050670] = ;;

		*node[0x5dd27b0506a0] = print;

		*node[0x5dd27b0506d0] = 8;

		*node[0x5dd27b050700] = ;;

		*node[0x5dd27b050730] = print;

		*node[0x5dd27b050760] = 10;

		*node[0x5dd27b050790] = else;

		*node[0x5dd27b0507c0] = op_no;

		*node[0x5dd27b0507f0] = ;;

		*node[0x5dd27b050820] = print;

		*node[0x5dd27b050850] = 7;

		*node[0x5dd27b050880] = ;;

		*node[0x5dd27b0508b0] = return;

		*node[0x5dd27b0508e0] = 0;

		*node[0x5dd27b050910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd5b2f2e10] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x58dda8ef0fd0] = ;;

		*node[0x58dda8ef1000] = 0;

		*node[0x58dda8ef1030] = ;;

		*node[0x58dda8ef1060] = input;

		*node[0x58dda8ef1090] = 1;

		*node[0x58dda8ef10c0] = 2;

		*node[0x58dda8ef10f0] = 3;

		*node[0x58dda8ef1120] = ;;

		*node[0x58dda8ef1180] = 1;

		*node[0x58dda8ef11b0] = 2;

		*node[0x58dda8ef11e0] = 3;

		*node[0x58dda8ef1210] = ;;

		*node[0x58dda8ef1240] = 4;

		*node[0x58dda8ef1270] = 1;

		*node[0x58dda8ef12a0] = 2;

		*node[0x58dda8ef12d0] = 3;

		*node[0x58dda8ef1300] = ;;

		*node[0x58dda8ef1330] = if;

		*node[0x58dda8ef1360] = op_no;

		*node[0x58dda8ef1390] = ==;

		*node[0x58dda8ef13c0] = 1;

		*node[0x58dda8ef13f0] = 0;

		*node[0x58dda8ef1420] = ;;

		*node[0x58dda8ef1480] = 2;

		*node[0x58dda8ef14b0] = 3;

		*node[0x58dda8ef14e0] = else;

		*node[0x58dda8ef1510] = op_no;

		*node[0x58dda8ef1540] = ;;

		*node[0x58dda8ef15a0] = 1;

		*node[0x58dda8ef15d0] = 2;

		*node[0x58dda8ef1600] = 3;

		*node[0x58dda8ef1630] = ;;

		*node[0x58dda8ef1660] = 5;

		*node[0x58dda8ef1690] = 1;

		*node[0x58dda8ef16c0] = 2;

		*node[0x58dda8ef16f0] = ;;

		*node[0x58dda8ef1720] = =;

		*node[0x58dda8ef1750] = 7;

		*node[0x58dda8ef1780] = -;

		*node[0x58dda8ef17b0] = 0;

		*node[0x58dda8ef17e0] = 1;

		*node[0x58dda8ef1810] = ;;

		*node[0x58dda8ef1840] = =;

		*node[0x58dda8ef1870] = 8;

		*node[0x58dda8ef18a0] = 1;

		*node[0x58dda8ef18d0] = ;;

		*node[0x58dda8ef1900] = =;

		*node[0x58dda8ef1930] = 9;

		*node[0x58dda8ef1960] = 1000;

		*node[0x58dda8ef1990] = ;;

		*node[0x58dda8ef19c0] = if;

		*node[0x58dda8ef19f0] = op_no;

		*node[0x58dda8ef1a20] = ==;

		*node[0x58dda8ef1a50] = 1;

		*node[0x58dda8ef1a80] = 0;

		*node[0x58dda8ef1ab0] = ;;

		*node[0x58dda8ef1ae0] = if;

		*node[0x58dda8ef1b10] = op_no;

		*node[0x58dda8ef1b40] = ==;

		*node[0x58dda8ef1b70] = 2;

		*node[0x58dda8ef1ba0] = 0;

		*node[0x58dda8ef1bd0] = ;;

		*node[0x58dda8ef1c00] = print;

		*node[0x58dda8ef1c30] = 9;

		*node[0x58dda8ef1c60] = else;

		*node[0x58dda8ef1c90] = op_no;

		*node[0x58dda8ef1cc0] = ;;

		*node[0x58dda8ef1cf0] = print;

		*node[0x58dda8ef1d20] = 7;

		*node[0x58dda8ef1d50] = else;

		*node[0x58dda8ef1d80] = op_no;

		*node[0x58dda8ef1db0] = ;;

		*node[0x58dda8ef1de0] = =;

		*node[0x58dda8ef1e10] = 10;

		*node[0x58dda8ef1e40] = /;

		*node[0x58dda8ef1e70] = -;

		*node[0x58dda8ef1ea0] = 0;

		*node[0x58dda8ef1ed0] = 2;

		*node[0x58dda8ef1f00] = 1;

		*node[0x58dda8ef1f30] = ;;

		*node[0x58dda8ef1f60] = print;

		*node[0x58dda8ef1f90] = 8;

		*node[0x58dda8ef1fc0] = ;;

		*node[0x58dda8ef1ff0] = print;

		*node[0x58dda8ef2020] = 10;

		*node[0x58dda8ef2050] = ;;

		*node[0x58dda8ef2080] = return;

		*node[0x58dda8ef20b0] = 0;

		*node[0x58dda8ef20e0] = ;;

		*node[0x58dda8ef2110] = 6;

		*node[0x58dda8ef2140] = 1;

		*node[0x58dda8ef2170] = 2;

		*node[0x58dda8ef21a0] = 3;

		*node[0x58dda8ef21d0] = ;;

		*node[0x58dda8ef2200] = =;

		*node[0x58dda8ef2230] = 7;

		*node[0x58dda8ef2260] = -;

		*node[0x58dda8ef2290] = 0;

		*node[0x58dda8ef22c0] = 1;

		*node[0x58dda8ef22f0] = ;;

		*node[0x58dda8ef2320] = =;

		*node[0x58dda8ef2350] = 8;

		*node[0x58dda8ef2380] = 1;

		*node[0x58dda8ef23b0] = ;;

		*node[0x58dda8ef23e0] = =;

		*node[0x58dda8ef2410] = 11;

		*node[0x58dda8ef2440] = 2;

		*node[0x58dda8ef2470] = ;;

		*node[0x58dda8ef24a0] = if;

		*node[0x58dda8ef24d0] = op_no;

		*node[0x58dda8ef2500] = ==;

		*node[0x58dda8ef2530] = 3;

		*node[0x58dda8ef2560] = 0;

		*node[0x58dda8ef2590] = ;;

		*node[0x58dda8ef25c0] = =;

		*node[0x58dda8ef25f0] = 12;

		*node[0x58dda8ef2620] = 0;

		*node[0x58dda8ef2650] = ;;

		*node[0x58dda8ef2680] = =;

		*node[0x58dda8ef26b0] = 13;

		*node[0x58dda8ef26e0] = /;

		*node[0x58dda8ef2710] = -;

		*node[0x58dda8ef2740] = 0;

		*node[0x58dda8ef2770] = 2;

		*node[0x58dda8ef27a0] = 1;

		*node[0x58dda8ef27d0] = ;;

		*node[0x58dda8ef2800] = print;

		*node[0x58dda8ef2830] = 11;

		*node[0x58dda8ef2860] = ;;

		*node[0x58dda8ef2890] = print;

		*node[0x58dda8ef28c0] = 12;

		*node[0x58dda8ef28f0] = 13;

		*node[0x58dda8ef2920] = else;

		*node[0x58dda8ef2950] = op_no;

		*node[0x58dda8ef2980] = ;;

		*node[0x58dda8ef29b0] = =;

		*node[0x58dda8ef29e0] = 14;

		*node[0x58dda8ef2a10] = -;

		*node[0x58dda8ef2a40] = *;

		*node[0x58dda8ef2a70] = 2;

		*node[0x58dda8ef2aa0] = 2;

		*node[0x58dda8ef2ad0] = *;

		*node[0x58dda8ef2b00] = *;

		*node[0x58dda8ef2b30] = 4;

		*node[0x58dda8ef2b60] = 1;

		*node[0x58dda8ef2b90] = 3;

		*node[0x58dda8ef2bc0] = ;;

		*node[0x58dda8ef2bf0] = if;

		*node[0x58dda8ef2c20] = op_no;

		*node[0x58dda8ef2c50] = >;

		*node[0x58dda8ef2c80] = 14;

		*node[0x58dda8ef2cb0] = 0;

		*node[0x58dda8ef2ce0] = ;;

		*node[0x58dda8ef2d10] = =;

		*node[0x58dda8ef2d40] = 15;

		*node[0x58dda8ef2d70] = sqrt;

		*node[0x58dda8ef2da0] = 14;

		*node[0x58dda8ef2dd0] = ;;

		*node[0x58dda8ef2e00] = =;

		*node[0x58dda8ef2e30] = 12;

		*node[0x58dda8ef2e60] = /;

		*node[0x58dda8ef2e90] = -;

		*node[0x58dda8ef2ec0] = -;

		*node[0x58dda8ef2ef0] = 0;

		*node[0x58dda8ef2f20] = 2;

		*node[0x58dda8ef2f50] = 15;

		*node[0x58dda8ef2f80] = *;

		*node[0x58dda8ef2fb0] = 2;

		*node[0x58dda8ef2fe0] = 1;

		*node[0x58dda8ef3010] = ;;

		*node[0x58dda8ef3040] = =;

		*node[0x58dda8ef3070] = 13;

		*node[0x58dda8ef30a0] = /;

		*node[0x58dda8ef30d0] = +;

		*node[0x58dda8ef3100] = -;

		*node[0x58dda8ef3130] = 0;

		*node[0x58dda8ef3160] = 2;

		*node[0x58dda8ef3190] = 15;

		*node[0x58dda8ef31c0] = *;

		*node[0x58dda8ef31f0] = 2;

		*node[0x58dda8ef3220] = 1;

		*node[0x58dda8ef3250] = ;;

		*node[0x58dda8ef3280] = print;

		*node[0x58dda8ef32b0] = 11;

		*node[0x58dda8ef32e0] = ;;

		*node[0x58dda8ef3310] = print;

		*node[0x58dda8ef3340] = 12;

		*node[0x58dda8ef3370] = 13;

		*node[0x58dda8ef33a0] = elseif;

		*node[0x58dda8ef33d0] = op_no;

		*node[0x58dda8ef3400] = ==;

		*node[0x58dda8ef3430] = 14;

		*node[0x58dda8ef3460] = 0;

		*node[0x58dda8ef3490] = ;;

		*node[0x58dda8ef34c0] = =;

		*node[0x58dda8ef34f0] = 10;

		*node[0x58dda8ef3520] = /;

		*node[0x58dda8ef3550] = -;

		*node[0x58dda8ef3580] = 0;

		*node[0x58dda8ef35b0] = 2;

		*node[0x58dda8ef35e0] = *;

		*node[0x58dda8ef3610] = 2;

		*node[0x58dda8ef3640] = 1;

		*node[0x58dda8ef3670] = ;;

		*node[0x58dda8ef36a0] = print;

		*node[0x58dda8ef36d0] = 8;

		*node[0x58dda8ef3700] = ;;

		*node[0x58dda8ef3730] = print;

		*node[0x58dda8ef3760] = 10;

		*node[0x58dda8ef3790] = else;

		*node[0x58dda8ef37c0] = op_no;

		*node[0x58dda8ef37f0] = ;;

		*node[0x58dda8ef3820] = print;

		*node[0x58dda8ef3850] = 7;

		*node[0x58dda8ef3880] = ;;

		*node[0x58dda8ef38b0] = return;

		*node[0x58dda8ef38e0] = 0;

		*node[0x58dda8ef3910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffed22f54f0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x578d2c15cfd0] = ;;

		*node[0x578d2c15d000] = 0;

		*node[0x578d2c15d030] = ;;

		*node[0x578d2c15d060] = input;

		*node[0x578d2c15d090] = 1;

		*node[0x578d2c15d0c0] = 2;

		*node[0x578d2c15d0f0] = 3;

		*node[0x578d2c15d120] = ;;

		*node[0x578d2c15d180] = 1;

		*node[0x578d2c15d1b0] = 2;

		*node[0x578d2c15d1e0] = 3;

		*node[0x578d2c15d210] = ;;

		*node[0x578d2c15d240] = 4;

		*node[0x578d2c15d270] = 1;

		*node[0x578d2c15d2a0] = 2;

		*node[0x578d2c15d2d0] = 3;

		*node[0x578d2c15d300] = ;;

		*node[0x578d2c15d330] = if;

		*node[0x578d2c15d360] = op_no;

		*node[0x578d2c15d390] = ==;

		*node[0x578d2c15d3c0] = 1;

		*node[0x578d2c15d3f0] = 0;

		*node[0x578d2c15d420] = ;;

		*node[0x578d2c15d480] = 2;

		*node[0x578d2c15d4b0] = 3;

		*node[0x578d2c15d4e0] = else;

		*node[0x578d2c15d510] = op_no;

		*node[0x578d2c15d540] = ;;

		*node[0x578d2c15d5a0] = 1;

		*node[0x578d2c15d5d0] = 2;

		*node[0x578d2c15d600] = 3;

		*node[0x578d2c15d630] = ;;

		*node[0x578d2c15d660] = 5;

		*node[0x578d2c15d690] = 1;

		*node[0x578d2c15d6c0] = 2;

		*node[0x578d2c15d6f0] = ;;

		*node[0x578d2c15d720] = =;

		*node[0x578d2c15d750] = 7;

		*node[0x578d2c15d780] = -;

		*node[0x578d2c15d7b0] = 0;

		*node[0x578d2c15d7e0] = 1;

		*node[0x578d2c15d810] = ;;

		*node[0x578d2c15d840] = =;

		*node[0x578d2c15d870] = 8;

		*node[0x578d2c15d8a0] = 1;

		*node[0x578d2c15d8d0] = ;;

		*node[0x578d2c15d900] = =;

		*node[0x578d2c15d930] = 9;

		*node[0x578d2c15d960] = 1000;

		*node[0x578d2c15d990] = ;;

		*node[0x578d2c15d9c0] = if;

		*node[0x578d2c15d9f0] = op_no;

		*node[0x578d2c15da20] = ==;

		*node[0x578d2c15da50] = 1;

		*node[0x578d2c15da80] = 0;

		*node[0x578d2c15dab0] = ;;

		*node[0x578d2c15dae0] = if;

		*node[0x578d2c15db10] = op_no;

		*node[0x578d2c15db40] = ==;

		*node[0x578d2c15db70] = 2;

		*node[0x578d2c15dba0] = 0;

		*node[0x578d2c15dbd0] = ;;

		*node[0x578d2c15dc00] = print;

		*node[0x578d2c15dc30] = 9;

		*node[0x578d2c15dc60] = else;

		*node[0x578d2c15dc90] = op_no;

		*node[0x578d2c15dcc0] = ;;

		*node[0x578d2c15dcf0] = print;

		*node[0x578d2c15dd20] = 7;

		*node[0x578d2c15dd50] = else;

		*node[0x578d2c15dd80] = op_no;

		*node[0x578d2c15ddb0] = ;;

		*node[0x578d2c15dde0] = =;

		*node[0x578d2c15de10] = 10;

		*node[0x578d2c15de40] = /;

		*node[0x578d2c15de70] = -;

		*node[0x578d2c15dea0] = 0;

		*node[0x578d2c15ded0] = 2;

		*node[0x578d2c15df00] = 1;

		*node[0x578d2c15df30] = ;;

		*node[0x578d2c15df60] = print;

		*node[0x578d2c15df90] = 8;

		*node[0x578d2c15dfc0] = ;;

		*node[0x578d2c15dff0] = print;

		*node[0x578d2c15e020] = 10;

		*node[0x578d2c15e050] = ;;

		*node[0x578d2c15e080] = return;

		*node[0x578d2c15e0b0] = 0;

		*node[0x578d2c15e0e0] = ;;

		*node[0x578d2c15e110] = 6;

		*node[0x578d2c15e140] = 1;

		*node[0x578d2c15e170] = 2;

		*node[0x578d2c15e1a0] = 3;

		*node[0x578d2c15e1d0] = ;;

		*node[0x578d2c15e200] = =;

		*node[0x578d2c15e230] = 7;

		*node[0x578d2c15e260] = -;

		*node[0x578d2c15e290] = 0;

		*node[0x578d2c15e2c0] = 1;

		*node[0x578d2c15e2f0] = ;;

		*node[0x578d2c15e320] = =;

		*node[0x578d2c15e350] = 8;

		*node[0x578d2c15e380] = 1;

		*node[0x578d2c15e3b0] = ;;

		*node[0x578d2c15e3e0] = =;

		*node[0x578d2c15e410] = 11;

		*node[0x578d2c15e440] = 2;

		*node[0x578d2c15e470] = ;;

		*node[0x578d2c15e4a0] = if;

		*node[0x578d2c15e4d0] = op_no;

		*node[0x578d2c15e500] = ==;

		*node[0x578d2c15e530] = 3;

		*node[0x578d2c15e560] = 0;

		*node[0x578d2c15e590] = ;;

		*node[0x578d2c15e5c0] = =;

		*node[0x578d2c15e5f0] = 12;

		*node[0x578d2c15e620] = 0;

		*node[0x578d2c15e650] = ;;

		*node[0x578d2c15e680] = =;

		*node[0x578d2c15e6b0] = 13;

		*node[0x578d2c15e6e0] = /;

		*node[0x578d2c15e710] = -;

		*node[0x578d2c15e740] = 0;

		*node[0x578d2c15e770] = 2;

		*node[0x578d2c15e7a0] = 1;

		*node[0x578d2c15e7d0] = ;;

		*node[0x578d2c15e800] = print;

		*node[0x578d2c15e830] = 11;

		*node[0x578d2c15e860] = ;;

		*node[0x578d2c15e890] = print;

		*node[0x578d2c15e8c0] = 12;

		*node[0x578d2c15e8f0] = 13;

		*node[0x578d2c15e920] = else;

		*node[0x578d2c15e950] = op_no;

		*node[0x578d2c15e980] = ;;

		*node[0x578d2c15e9b0] = =;

		*node[0x578d2c15e9e0] = 14;

		*node[0x578d2c15ea10] = -;

		*node[0x578d2c15ea40] = *;

		*node[0x578d2c15ea70] = 2;

		*node[0x578d2c15eaa0] = 2;

		*node[0x578d2c15ead0] = *;

		*node[0x578d2c15eb00] = *;

		*node[0x578d2c15eb30] = 4;

		*node[0x578d2c15eb60] = 1;

		*node[0x578d2c15eb90] = 3;

		*node[0x578d2c15ebc0] = ;;

		*node[0x578d2c15ebf0] = if;

		*node[0x578d2c15ec20] = op_no;

		*node[0x578d2c15ec50] = >;

		*node[0x578d2c15ec80] = 14;

		*node[0x578d2c15ecb0] = 0;

		*node[0x578d2c15ece0] = ;;

		*node[0x578d2c15ed10] = =;

		*node[0x578d2c15ed40] = 15;

		*node[0x578d2c15ed70] = sqrt;

		*node[0x578d2c15eda0] = 14;

		*node[0x578d2c15edd0] = ;;

		*node[0x578d2c15ee00] = =;

		*node[0x578d2c15ee30] = 12;

		*node[0x578d2c15ee60] = /;

		*node[0x578d2c15ee90] = -;

		*node[0x578d2c15eec0] = -;

		*node[0x578d2c15eef0] = 0;

		*node[0x578d2c15ef20] = 2;

		*node[0x578d2c15ef50] = 15;

		*node[0x578d2c15ef80] = *;

		*node[0x578d2c15efb0] = 2;

		*node[0x578d2c15efe0] = 1;

		*node[0x578d2c15f010] = ;;

		*node[0x578d2c15f040] = =;

		*node[0x578d2c15f070] = 13;

		*node[0x578d2c15f0a0] = /;

		*node[0x578d2c15f0d0] = +;

		*node[0x578d2c15f100] = -;

		*node[0x578d2c15f130] = 0;

		*node[0x578d2c15f160] = 2;

		*node[0x578d2c15f190] = 15;

		*node[0x578d2c15f1c0] = *;

		*node[0x578d2c15f1f0] = 2;

		*node[0x578d2c15f220] = 1;

		*node[0x578d2c15f250] = ;;

		*node[0x578d2c15f280] = print;

		*node[0x578d2c15f2b0] = 11;

		*node[0x578d2c15f2e0] = ;;

		*node[0x578d2c15f310] = print;

		*node[0x578d2c15f340] = 12;

		*node[0x578d2c15f370] = 13;

		*node[0x578d2c15f3a0] = elseif;

		*node[0x578d2c15f3d0] = op_no;

		*node[0x578d2c15f400] = ==;

		*node[0x578d2c15f430] = 14;

		*node[0x578d2c15f460] = 0;

		*node[0x578d2c15f490] = ;;

		*node[0x578d2c15f4c0] = =;

		*node[0x578d2c15f4f0] = 10;

		*node[0x578d2c15f520] = /;

		*node[0x578d2c15f550] = -;

		*node[0x578d2c15f580] = 0;

		*node[0x578d2c15f5b0] = 2;

		*node[0x578d2c15f5e0] = *;

		*node[0x578d2c15f610] = 2;

		*node[0x578d2c15f640] = 1;

		*node[0x578d2c15f670] = ;;

		*node[0x578d2c15f6a0] = print;

		*node[0x578d2c15f6d0] = 8;

		*node[0x578d2c15f700] = ;;

		*node[0x578d2c15f730] = print;

		*node[0x578d2c15f760] = 10;

		*node[0x578d2c15f790] = else;

		*node[0x578d2c15f7c0] = op_no;

		*node[0x578d2c15f7f0] = ;;

		*node[0x578d2c15f820] = print;

		*node[0x578d2c15f850] = 7;

		*node[0x578d2c15f880] = ;;

		*node[0x578d2c15f8b0] = return;

		*node[0x578d2c15f8e0] = 0;

		*node[0x578d2c15f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe2671a820] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x6015e13a9fd0] = ;;

		*node[0x6015e13aa000] = 0;

		*node[0x6015e13aa030] = ;;

		*node[0x6015e13aa060] = input;

		*node[0x6015e13aa090] = 1;

		*node[0x6015e13aa0c0] = 2;

		*node[0x6015e13aa0f0] = 3;

		*node[0x6015e13aa120] = ;;

		*node[0x6015e13aa180] = 1;

		*node[0x6015e13aa1b0] = 2;

		*node[0x6015e13aa1e0] = 3;

		*node[0x6015e13aa210] = ;;

		*node[0x6015e13aa240] = 4;

		*node[0x6015e13aa270] = 1;

		*node[0x6015e13aa2a0] = 2;

		*node[0x6015e13aa2d0] = 3;

		*node[0x6015e13aa300] = ;;

		*node[0x6015e13aa330] = if;

		*node[0x6015e13aa360] = op_no;

		*node[0x6015e13aa390] = ==;

		*node[0x6015e13aa3c0] = 1;

		*node[0x6015e13aa3f0] = 0;

		*node[0x6015e13aa420] = ;;

		*node[0x6015e13aa480] = 2;

		*node[0x6015e13aa4b0] = 3;

		*node[0x6015e13aa4e0] = else;

		*node[0x6015e13aa510] = op_no;

		*node[0x6015e13aa540] = ;;

		*node[0x6015e13aa5a0] = 1;

		*node[0x6015e13aa5d0] = 2;

		*node[0x6015e13aa600] = 3;

		*node[0x6015e13aa630] = ;;

		*node[0x6015e13aa660] = 5;

		*node[0x6015e13aa690] = 1;

		*node[0x6015e13aa6c0] = 2;

		*node[0x6015e13aa6f0] = ;;

		*node[0x6015e13aa720] = =;

		*node[0x6015e13aa750] = 7;

		*node[0x6015e13aa780] = -;

		*node[0x6015e13aa7b0] = 0;

		*node[0x6015e13aa7e0] = 1;

		*node[0x6015e13aa810] = ;;

		*node[0x6015e13aa840] = =;

		*node[0x6015e13aa870] = 8;

		*node[0x6015e13aa8a0] = 1;

		*node[0x6015e13aa8d0] = ;;

		*node[0x6015e13aa900] = =;

		*node[0x6015e13aa930] = 9;

		*node[0x6015e13aa960] = 1000;

		*node[0x6015e13aa990] = ;;

		*node[0x6015e13aa9c0] = if;

		*node[0x6015e13aa9f0] = op_no;

		*node[0x6015e13aaa20] = ==;

		*node[0x6015e13aaa50] = 1;

		*node[0x6015e13aaa80] = 0;

		*node[0x6015e13aaab0] = ;;

		*node[0x6015e13aaae0] = if;

		*node[0x6015e13aab10] = op_no;

		*node[0x6015e13aab40] = ==;

		*node[0x6015e13aab70] = 2;

		*node[0x6015e13aaba0] = 0;

		*node[0x6015e13aabd0] = ;;

		*node[0x6015e13aac00] = print;

		*node[0x6015e13aac30] = 9;

		*node[0x6015e13aac60] = else;

		*node[0x6015e13aac90] = op_no;

		*node[0x6015e13aacc0] = ;;

		*node[0x6015e13aacf0] = print;

		*node[0x6015e13aad20] = 7;

		*node[0x6015e13aad50] = else;

		*node[0x6015e13aad80] = op_no;

		*node[0x6015e13aadb0] = ;;

		*node[0x6015e13aade0] = =;

		*node[0x6015e13aae10] = 10;

		*node[0x6015e13aae40] = /;

		*node[0x6015e13aae70] = -;

		*node[0x6015e13aaea0] = 0;

		*node[0x6015e13aaed0] = 2;

		*node[0x6015e13aaf00] = 1;

		*node[0x6015e13aaf30] = ;;

		*node[0x6015e13aaf60] = print;

		*node[0x6015e13aaf90] = 8;

		*node[0x6015e13aafc0] = ;;

		*node[0x6015e13aaff0] = print;

		*node[0x6015e13ab020] = 10;

		*node[0x6015e13ab050] = ;;

		*node[0x6015e13ab080] = return;

		*node[0x6015e13ab0b0] = 0;

		*node[0x6015e13ab0e0] = ;;

		*node[0x6015e13ab110] = 6;

		*node[0x6015e13ab140] = 1;

		*node[0x6015e13ab170] = 2;

		*node[0x6015e13ab1a0] = 3;

		*node[0x6015e13ab1d0] = ;;

		*node[0x6015e13ab200] = =;

		*node[0x6015e13ab230] = 7;

		*node[0x6015e13ab260] = -;

		*node[0x6015e13ab290] = 0;

		*node[0x6015e13ab2c0] = 1;

		*node[0x6015e13ab2f0] = ;;

		*node[0x6015e13ab320] = =;

		*node[0x6015e13ab350] = 8;

		*node[0x6015e13ab380] = 1;

		*node[0x6015e13ab3b0] = ;;

		*node[0x6015e13ab3e0] = =;

		*node[0x6015e13ab410] = 11;

		*node[0x6015e13ab440] = 2;

		*node[0x6015e13ab470] = ;;

		*node[0x6015e13ab4a0] = if;

		*node[0x6015e13ab4d0] = op_no;

		*node[0x6015e13ab500] = ==;

		*node[0x6015e13ab530] = 3;

		*node[0x6015e13ab560] = 0;

		*node[0x6015e13ab590] = ;;

		*node[0x6015e13ab5c0] = =;

		*node[0x6015e13ab5f0] = 12;

		*node[0x6015e13ab620] = 0;

		*node[0x6015e13ab650] = ;;

		*node[0x6015e13ab680] = =;

		*node[0x6015e13ab6b0] = 13;

		*node[0x6015e13ab6e0] = /;

		*node[0x6015e13ab710] = -;

		*node[0x6015e13ab740] = 0;

		*node[0x6015e13ab770] = 2;

		*node[0x6015e13ab7a0] = 1;

		*node[0x6015e13ab7d0] = ;;

		*node[0x6015e13ab800] = print;

		*node[0x6015e13ab830] = 11;

		*node[0x6015e13ab860] = ;;

		*node[0x6015e13ab890] = print;

		*node[0x6015e13ab8c0] = 12;

		*node[0x6015e13ab8f0] = 13;

		*node[0x6015e13ab920] = else;

		*node[0x6015e13ab950] = op_no;

		*node[0x6015e13ab980] = ;;

		*node[0x6015e13ab9b0] = =;

		*node[0x6015e13ab9e0] = 14;

		*node[0x6015e13aba10] = -;

		*node[0x6015e13aba40] = *;

		*node[0x6015e13aba70] = 2;

		*node[0x6015e13abaa0] = 2;

		*node[0x6015e13abad0] = *;

		*node[0x6015e13abb00] = *;

		*node[0x6015e13abb30] = 4;

		*node[0x6015e13abb60] = 1;

		*node[0x6015e13abb90] = 3;

		*node[0x6015e13abbc0] = ;;

		*node[0x6015e13abbf0] = if;

		*node[0x6015e13abc20] = op_no;

		*node[0x6015e13abc50] = >;

		*node[0x6015e13abc80] = 14;

		*node[0x6015e13abcb0] = 0;

		*node[0x6015e13abce0] = ;;

		*node[0x6015e13abd10] = =;

		*node[0x6015e13abd40] = 15;

		*node[0x6015e13abd70] = sqrt;

		*node[0x6015e13abda0] = 14;

		*node[0x6015e13abdd0] = ;;

		*node[0x6015e13abe00] = =;

		*node[0x6015e13abe30] = 12;

		*node[0x6015e13abe60] = /;

		*node[0x6015e13abe90] = -;

		*node[0x6015e13abec0] = -;

		*node[0x6015e13abef0] = 0;

		*node[0x6015e13abf20] = 2;

		*node[0x6015e13abf50] = 15;

		*node[0x6015e13abf80] = *;

		*node[0x6015e13abfb0] = 2;

		*node[0x6015e13abfe0] = 1;

		*node[0x6015e13ac010] = ;;

		*node[0x6015e13ac040] = =;

		*node[0x6015e13ac070] = 13;

		*node[0x6015e13ac0a0] = /;

		*node[0x6015e13ac0d0] = +;

		*node[0x6015e13ac100] = -;

		*node[0x6015e13ac130] = 0;

		*node[0x6015e13ac160] = 2;

		*node[0x6015e13ac190] = 15;

		*node[0x6015e13ac1c0] = *;

		*node[0x6015e13ac1f0] = 2;

		*node[0x6015e13ac220] = 1;

		*node[0x6015e13ac250] = ;;

		*node[0x6015e13ac280] = print;

		*node[0x6015e13ac2b0] = 11;

		*node[0x6015e13ac2e0] = ;;

		*node[0x6015e13ac310] = print;

		*node[0x6015e13ac340] = 12;

		*node[0x6015e13ac370] = 13;

		*node[0x6015e13ac3a0] = elseif;

		*node[0x6015e13ac3d0] = op_no;

		*node[0x6015e13ac400] = ==;

		*node[0x6015e13ac430] = 14;

		*node[0x6015e13ac460] = 0;

		*node[0x6015e13ac490] = ;;

		*node[0x6015e13ac4c0] = =;

		*node[0x6015e13ac4f0] = 10;

		*node[0x6015e13ac520] = /;

		*node[0x6015e13ac550] = -;

		*node[0x6015e13ac580] = 0;

		*node[0x6015e13ac5b0] = 2;

		*node[0x6015e13ac5e0] = *;

		*node[0x6015e13ac610] = 2;

		*node[0x6015e13ac640] = 1;

		*node[0x6015e13ac670] = ;;

		*node[0x6015e13ac6a0] = print;

		*node[0x6015e13ac6d0] = 8;

		*node[0x6015e13ac700] = ;;

		*node[0x6015e13ac730] = print;

		*node[0x6015e13ac760] = 10;

		*node[0x6015e13ac790] = else;

		*node[0x6015e13ac7c0] = op_no;

		*node[0x6015e13ac7f0] = ;;

		*node[0x6015e13ac820] = print;

		*node[0x6015e13ac850] = 7;

		*node[0x6015e13ac880] = ;;

		*node[0x6015e13ac8b0] = return;

		*node[0x6015e13ac8e0] = 0;

		*node[0x6015e13ac910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffdfaff5850] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x581bb1555fd0] = ;;

		*node[0x581bb1556000] = 0;

		*node[0x581bb1556030] = ;;

		*node[0x581bb1556060] = input;

		*node[0x581bb1556090] = 1;

		*node[0x581bb15560c0] = 2;

		*node[0x581bb15560f0] = 3;

		*node[0x581bb1556120] = ;;

		*node[0x581bb1556180] = 1;

		*node[0x581bb15561b0] = 2;

		*node[0x581bb15561e0] = 3;

		*node[0x581bb1556210] = ;;

		*node[0x581bb1556240] = 4;

		*node[0x581bb1556270] = 1;

		*node[0x581bb15562a0] = 2;

		*node[0x581bb15562d0] = 3;

		*node[0x581bb1556300] = ;;

		*node[0x581bb1556330] = if;

		*node[0x581bb1556360] = op_no;

		*node[0x581bb1556390] = ==;

		*node[0x581bb15563c0] = 1;

		*node[0x581bb15563f0] = 0;

		*node[0x581bb1556420] = ;;

		*node[0x581bb1556480] = 2;

		*node[0x581bb15564b0] = 3;

		*node[0x581bb15564e0] = else;

		*node[0x581bb1556510] = op_no;

		*node[0x581bb1556540] = ;;

		*node[0x581bb15565a0] = 1;

		*node[0x581bb15565d0] = 2;

		*node[0x581bb1556600] = 3;

		*node[0x581bb1556630] = ;;

		*node[0x581bb1556660] = 5;

		*node[0x581bb1556690] = 1;

		*node[0x581bb15566c0] = 2;

		*node[0x581bb15566f0] = ;;

		*node[0x581bb1556720] = =;

		*node[0x581bb1556750] = 7;

		*node[0x581bb1556780] = -;

		*node[0x581bb15567b0] = 0;

		*node[0x581bb15567e0] = 1;

		*node[0x581bb1556810] = ;;

		*node[0x581bb1556840] = =;

		*node[0x581bb1556870] = 8;

		*node[0x581bb15568a0] = 1;

		*node[0x581bb15568d0] = ;;

		*node[0x581bb1556900] = =;

		*node[0x581bb1556930] = 9;

		*node[0x581bb1556960] = 1000;

		*node[0x581bb1556990] = ;;

		*node[0x581bb15569c0] = if;

		*node[0x581bb15569f0] = op_no;

		*node[0x581bb1556a20] = ==;

		*node[0x581bb1556a50] = 1;

		*node[0x581bb1556a80] = 0;

		*node[0x581bb1556ab0] = ;;

		*node[0x581bb1556ae0] = if;

		*node[0x581bb1556b10] = op_no;

		*node[0x581bb1556b40] = ==;

		*node[0x581bb1556b70] = 2;

		*node[0x581bb1556ba0] = 0;

		*node[0x581bb1556bd0] = ;;

		*node[0x581bb1556c00] = print;

		*node[0x581bb1556c30] = 9;

		*node[0x581bb1556c60] = else;

		*node[0x581bb1556c90] = op_no;

		*node[0x581bb1556cc0] = ;;

		*node[0x581bb1556cf0] = print;

		*node[0x581bb1556d20] = 7;

		*node[0x581bb1556d50] = else;

		*node[0x581bb1556d80] = op_no;

		*node[0x581bb1556db0] = ;;

		*node[0x581bb1556de0] = =;

		*node[0x581bb1556e10] = 10;

		*node[0x581bb1556e40] = /;

		*node[0x581bb1556e70] = -;

		*node[0x581bb1556ea0] = 0;

		*node[0x581bb1556ed0] = 2;

		*node[0x581bb1556f00] = 1;

		*node[0x581bb1556f30] = ;;

		*node[0x581bb1556f60] = print;

		*node[0x581bb1556f90] = 8;

		*node[0x581bb1556fc0] = ;;

		*node[0x581bb1556ff0] = print;

		*node[0x581bb1557020] = 10;

		*node[0x581bb1557050] = ;;

		*node[0x581bb1557080] = return;

		*node[0x581bb15570b0] = 0;

		*node[0x581bb15570e0] = ;;

		*node[0x581bb1557110] = 6;

		*node[0x581bb1557140] = 1;

		*node[0x581bb1557170] = 2;

		*node[0x581bb15571a0] = 3;

		*node[0x581bb15571d0] = ;;

		*node[0x581bb1557200] = =;

		*node[0x581bb1557230] = 7;

		*node[0x581bb1557260] = -;

		*node[0x581bb1557290] = 0;

		*node[0x581bb15572c0] = 1;

		*node[0x581bb15572f0] = ;;

		*node[0x581bb1557320] = =;

		*node[0x581bb1557350] = 8;

		*node[0x581bb1557380] = 1;

		*node[0x581bb15573b0] = ;;

		*node[0x581bb15573e0] = =;

		*node[0x581bb1557410] = 11;

		*node[0x581bb1557440] = 2;

		*node[0x581bb1557470] = ;;

		*node[0x581bb15574a0] = if;

		*node[0x581bb15574d0] = op_no;

		*node[0x581bb1557500] = ==;

		*node[0x581bb1557530] = 3;

		*node[0x581bb1557560] = 0;

		*node[0x581bb1557590] = ;;

		*node[0x581bb15575c0] = =;

		*node[0x581bb15575f0] = 12;

		*node[0x581bb1557620] = 0;

		*node[0x581bb1557650] = ;;

		*node[0x581bb1557680] = =;

		*node[0x581bb15576b0] = 13;

		*node[0x581bb15576e0] = /;

		*node[0x581bb1557710] = -;

		*node[0x581bb1557740] = 0;

		*node[0x581bb1557770] = 2;

		*node[0x581bb15577a0] = 1;

		*node[0x581bb15577d0] = ;;

		*node[0x581bb1557800] = print;

		*node[0x581bb1557830] = 11;

		*node[0x581bb1557860] = ;;

		*node[0x581bb1557890] = print;

		*node[0x581bb15578c0] = 12;

		*node[0x581bb15578f0] = 13;

		*node[0x581bb1557920] = else;

		*node[0x581bb1557950] = op_no;

		*node[0x581bb1557980] = ;;

		*node[0x581bb15579b0] = =;

		*node[0x581bb15579e0] = 14;

		*node[0x581bb1557a10] = -;

		*node[0x581bb1557a40] = *;

		*node[0x581bb1557a70] = 2;

		*node[0x581bb1557aa0] = 2;

		*node[0x581bb1557ad0] = *;

		*node[0x581bb1557b00] = *;

		*node[0x581bb1557b30] = 4;

		*node[0x581bb1557b60] = 1;

		*node[0x581bb1557b90] = 3;

		*node[0x581bb1557bc0] = ;;

		*node[0x581bb1557bf0] = if;

		*node[0x581bb1557c20] = op_no;

		*node[0x581bb1557c50] = >;

		*node[0x581bb1557c80] = 14;

		*node[0x581bb1557cb0] = 0;

		*node[0x581bb1557ce0] = ;;

		*node[0x581bb1557d10] = =;

		*node[0x581bb1557d40] = 15;

		*node[0x581bb1557d70] = sqrt;

		*node[0x581bb1557da0] = 14;

		*node[0x581bb1557dd0] = ;;

		*node[0x581bb1557e00] = =;

		*node[0x581bb1557e30] = 12;

		*node[0x581bb1557e60] = /;

		*node[0x581bb1557e90] = -;

		*node[0x581bb1557ec0] = -;

		*node[0x581bb1557ef0] = 0;

		*node[0x581bb1557f20] = 2;

		*node[0x581bb1557f50] = 15;

		*node[0x581bb1557f80] = *;

		*node[0x581bb1557fb0] = 2;

		*node[0x581bb1557fe0] = 1;

		*node[0x581bb1558010] = ;;

		*node[0x581bb1558040] = =;

		*node[0x581bb1558070] = 13;

		*node[0x581bb15580a0] = /;

		*node[0x581bb15580d0] = +;

		*node[0x581bb1558100] = -;

		*node[0x581bb1558130] = 0;

		*node[0x581bb1558160] = 2;

		*node[0x581bb1558190] = 15;

		*node[0x581bb15581c0] = *;

		*node[0x581bb15581f0] = 2;

		*node[0x581bb1558220] = 1;

		*node[0x581bb1558250] = ;;

		*node[0x581bb1558280] = print;

		*node[0x581bb15582b0] = 11;

		*node[0x581bb15582e0] = ;;

		*node[0x581bb1558310] = print;

		*node[0x581bb1558340] = 12;

		*node[0x581bb1558370] = 13;

		*node[0x581bb15583a0] = elseif;

		*node[0x581bb15583d0] = op_no;

		*node[0x581bb1558400] = ==;

		*node[0x581bb1558430] = 14;

		*node[0x581bb1558460] = 0;

		*node[0x581bb1558490] = ;;

		*node[0x581bb15584c0] = =;

		*node[0x581bb15584f0] = 10;

		*node[0x581bb1558520] = /;

		*node[0x581bb1558550] = -;

		*node[0x581bb1558580] = 0;

		*node[0x581bb15585b0] = 2;

		*node[0x581bb15585e0] = *;

		*node[0x581bb1558610] = 2;

		*node[0x581bb1558640] = 1;

		*node[0x581bb1558670] = ;;

		*node[0x581bb15586a0] = print;

		*node[0x581bb15586d0] = 8;

		*node[0x581bb1558700] = ;;

		*node[0x581bb1558730] = print;

		*node[0x581bb1558760] = 10;

		*node[0x581bb1558790] = else;

		*node[0x581bb15587c0] = op_no;

		*node[0x581bb15587f0] = ;;

		*node[0x581bb1558820] = print;

		*node[0x581bb1558850] = 7;

		*node[0x581bb1558880] = ;;

		*node[0x581bb15588b0] = return;

		*node[0x581bb15588e0] = 0;

		*node[0x581bb1558910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff1a034750] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x64cbde192fd0] = ;;

		*node[0x64cbde193000] = 0;

		*node[0x64cbde193030] = ;;

		*node[0x64cbde193060] = input;

		*node[0x64cbde193090] = 1;

		*node[0x64cbde1930c0] = 2;

		*node[0x64cbde1930f0] = 3;

		*node[0x64cbde193120] = ;;

		*node[0x64cbde193180] = 1;

		*node[0x64cbde1931b0] = 2;

		*node[0x64cbde1931e0] = 3;

		*node[0x64cbde193210] = ;;

		*node[0x64cbde193240] = 4;

		*node[0x64cbde193270] = 1;

		*node[0x64cbde1932a0] = 2;

		*node[0x64cbde1932d0] = 3;

		*node[0x64cbde193300] = ;;

		*node[0x64cbde193330] = if;

		*node[0x64cbde193360] = op_no;

		*node[0x64cbde193390] = ==;

		*node[0x64cbde1933c0] = 1;

		*node[0x64cbde1933f0] = 0;

		*node[0x64cbde193420] = ;;

		*node[0x64cbde193480] = 2;

		*node[0x64cbde1934b0] = 3;

		*node[0x64cbde1934e0] = else;

		*node[0x64cbde193510] = op_no;

		*node[0x64cbde193540] = ;;

		*node[0x64cbde1935a0] = 1;

		*node[0x64cbde1935d0] = 2;

		*node[0x64cbde193600] = 3;

		*node[0x64cbde193630] = ;;

		*node[0x64cbde193660] = 5;

		*node[0x64cbde193690] = 1;

		*node[0x64cbde1936c0] = 2;

		*node[0x64cbde1936f0] = ;;

		*node[0x64cbde193720] = =;

		*node[0x64cbde193750] = 7;

		*node[0x64cbde193780] = -;

		*node[0x64cbde1937b0] = 0;

		*node[0x64cbde1937e0] = 1;

		*node[0x64cbde193810] = ;;

		*node[0x64cbde193840] = =;

		*node[0x64cbde193870] = 8;

		*node[0x64cbde1938a0] = 1;

		*node[0x64cbde1938d0] = ;;

		*node[0x64cbde193900] = =;

		*node[0x64cbde193930] = 9;

		*node[0x64cbde193960] = 1000;

		*node[0x64cbde193990] = ;;

		*node[0x64cbde1939c0] = if;

		*node[0x64cbde1939f0] = op_no;

		*node[0x64cbde193a20] = ==;

		*node[0x64cbde193a50] = 1;

		*node[0x64cbde193a80] = 0;

		*node[0x64cbde193ab0] = ;;

		*node[0x64cbde193ae0] = if;

		*node[0x64cbde193b10] = op_no;

		*node[0x64cbde193b40] = ==;

		*node[0x64cbde193b70] = 2;

		*node[0x64cbde193ba0] = 0;

		*node[0x64cbde193bd0] = ;;

		*node[0x64cbde193c00] = print;

		*node[0x64cbde193c30] = 9;

		*node[0x64cbde193c60] = else;

		*node[0x64cbde193c90] = op_no;

		*node[0x64cbde193cc0] = ;;

		*node[0x64cbde193cf0] = print;

		*node[0x64cbde193d20] = 7;

		*node[0x64cbde193d50] = else;

		*node[0x64cbde193d80] = op_no;

		*node[0x64cbde193db0] = ;;

		*node[0x64cbde193de0] = =;

		*node[0x64cbde193e10] = 10;

		*node[0x64cbde193e40] = /;

		*node[0x64cbde193e70] = -;

		*node[0x64cbde193ea0] = 0;

		*node[0x64cbde193ed0] = 2;

		*node[0x64cbde193f00] = 1;

		*node[0x64cbde193f30] = ;;

		*node[0x64cbde193f60] = print;

		*node[0x64cbde193f90] = 8;

		*node[0x64cbde193fc0] = ;;

		*node[0x64cbde193ff0] = print;

		*node[0x64cbde194020] = 10;

		*node[0x64cbde194050] = ;;

		*node[0x64cbde194080] = return;

		*node[0x64cbde1940b0] = 0;

		*node[0x64cbde1940e0] = ;;

		*node[0x64cbde194110] = 6;

		*node[0x64cbde194140] = 1;

		*node[0x64cbde194170] = 2;

		*node[0x64cbde1941a0] = 3;

		*node[0x64cbde1941d0] = ;;

		*node[0x64cbde194200] = =;

		*node[0x64cbde194230] = 7;

		*node[0x64cbde194260] = -;

		*node[0x64cbde194290] = 0;

		*node[0x64cbde1942c0] = 1;

		*node[0x64cbde1942f0] = ;;

		*node[0x64cbde194320] = =;

		*node[0x64cbde194350] = 8;

		*node[0x64cbde194380] = 1;

		*node[0x64cbde1943b0] = ;;

		*node[0x64cbde1943e0] = =;

		*node[0x64cbde194410] = 11;

		*node[0x64cbde194440] = 2;

		*node[0x64cbde194470] = ;;

		*node[0x64cbde1944a0] = if;

		*node[0x64cbde1944d0] = op_no;

		*node[0x64cbde194500] = ==;

		*node[0x64cbde194530] = 3;

		*node[0x64cbde194560] = 0;

		*node[0x64cbde194590] = ;;

		*node[0x64cbde1945c0] = =;

		*node[0x64cbde1945f0] = 12;

		*node[0x64cbde194620] = 0;

		*node[0x64cbde194650] = ;;

		*node[0x64cbde194680] = =;

		*node[0x64cbde1946b0] = 13;

		*node[0x64cbde1946e0] = /;

		*node[0x64cbde194710] = -;

		*node[0x64cbde194740] = 0;

		*node[0x64cbde194770] = 2;

		*node[0x64cbde1947a0] = 1;

		*node[0x64cbde1947d0] = ;;

		*node[0x64cbde194800] = print;

		*node[0x64cbde194830] = 11;

		*node[0x64cbde194860] = ;;

		*node[0x64cbde194890] = print;

		*node[0x64cbde1948c0] = 12;

		*node[0x64cbde1948f0] = 13;

		*node[0x64cbde194920] = else;

		*node[0x64cbde194950] = op_no;

		*node[0x64cbde194980] = ;;

		*node[0x64cbde1949b0] = =;

		*node[0x64cbde1949e0] = 14;

		*node[0x64cbde194a10] = -;

		*node[0x64cbde194a40] = *;

		*node[0x64cbde194a70] = 2;

		*node[0x64cbde194aa0] = 2;

		*node[0x64cbde194ad0] = *;

		*node[0x64cbde194b00] = *;

		*node[0x64cbde194b30] = 4;

		*node[0x64cbde194b60] = 1;

		*node[0x64cbde194b90] = 3;

		*node[0x64cbde194bc0] = ;;

		*node[0x64cbde194bf0] = if;

		*node[0x64cbde194c20] = op_no;

		*node[0x64cbde194c50] = >;

		*node[0x64cbde194c80] = 14;

		*node[0x64cbde194cb0] = 0;

		*node[0x64cbde194ce0] = ;;

		*node[0x64cbde194d10] = =;

		*node[0x64cbde194d40] = 15;

		*node[0x64cbde194d70] = sqrt;

		*node[0x64cbde194da0] = 14;

		*node[0x64cbde194dd0] = ;;

		*node[0x64cbde194e00] = =;

		*node[0x64cbde194e30] = 12;

		*node[0x64cbde194e60] = /;

		*node[0x64cbde194e90] = -;

		*node[0x64cbde194ec0] = -;

		*node[0x64cbde194ef0] = 0;

		*node[0x64cbde194f20] = 2;

		*node[0x64cbde194f50] = 15;

		*node[0x64cbde194f80] = *;

		*node[0x64cbde194fb0] = 2;

		*node[0x64cbde194fe0] = 1;

		*node[0x64cbde195010] = ;;

		*node[0x64cbde195040] = =;

		*node[0x64cbde195070] = 13;

		*node[0x64cbde1950a0] = /;

		*node[0x64cbde1950d0] = +;

		*node[0x64cbde195100] = -;

		*node[0x64cbde195130] = 0;

		*node[0x64cbde195160] = 2;

		*node[0x64cbde195190] = 15;

		*node[0x64cbde1951c0] = *;

		*node[0x64cbde1951f0] = 2;

		*node[0x64cbde195220] = 1;

		*node[0x64cbde195250] = ;;

		*node[0x64cbde195280] = print;

		*node[0x64cbde1952b0] = 11;

		*node[0x64cbde1952e0] = ;;

		*node[0x64cbde195310] = print;

		*node[0x64cbde195340] = 12;

		*node[0x64cbde195370] = 13;

		*node[0x64cbde1953a0] = elseif;

		*node[0x64cbde1953d0] = op_no;

		*node[0x64cbde195400] = ==;

		*node[0x64cbde195430] = 14;

		*node[0x64cbde195460] = 0;

		*node[0x64cbde195490] = ;;

		*node[0x64cbde1954c0] = =;

		*node[0x64cbde1954f0] = 10;

		*node[0x64cbde195520] = /;

		*node[0x64cbde195550] = -;

		*node[0x64cbde195580] = 0;

		*node[0x64cbde1955b0] = 2;

		*node[0x64cbde1955e0] = *;

		*node[0x64cbde195610] = 2;

		*node[0x64cbde195640] = 1;

		*node[0x64cbde195670] = ;;

		*node[0x64cbde1956a0] = print;

		*node[0x64cbde1956d0] = 8;

		*node[0x64cbde195700] = ;;

		*node[0x64cbde195730] = print;

		*node[0x64cbde195760] = 10;

		*node[0x64cbde195790] = else;

		*node[0x64cbde1957c0] = op_no;

		*node[0x64cbde1957f0] = ;;

		*node[0x64cbde195820] = print;

		*node[0x64cbde195850] = 7;

		*node[0x64cbde195880] = ;;

		*node[0x64cbde1958b0] = return;

		*node[0x64cbde1958e0] = 0;

		*node[0x64cbde195910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffd5385c10] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x558adca5cfd0] = ;;

		*node[0x558adca5d000] = 0;

		*node[0x558adca5d030] = ;;

		*node[0x558adca5d060] = input;

		*node[0x558adca5d090] = 1;

		*node[0x558adca5d0c0] = 2;

		*node[0x558adca5d0f0] = 3;

		*node[0x558adca5d120] = ;;

		*node[0x558adca5d180] = 1;

		*node[0x558adca5d1b0] = 2;

		*node[0x558adca5d1e0] = 3;

		*node[0x558adca5d210] = ;;

		*node[0x558adca5d240] = 4;

		*node[0x558adca5d270] = 1;

		*node[0x558adca5d2a0] = 2;

		*node[0x558adca5d2d0] = 3;

		*node[0x558adca5d300] = ;;

		*node[0x558adca5d330] = if;

		*node[0x558adca5d360] = op_no;

		*node[0x558adca5d390] = ==;

		*node[0x558adca5d3c0] = 1;

		*node[0x558adca5d3f0] = 0;

		*node[0x558adca5d420] = ;;

		*node[0x558adca5d480] = 2;

		*node[0x558adca5d4b0] = 3;

		*node[0x558adca5d4e0] = else;

		*node[0x558adca5d510] = op_no;

		*node[0x558adca5d540] = ;;

		*node[0x558adca5d5a0] = 1;

		*node[0x558adca5d5d0] = 2;

		*node[0x558adca5d600] = 3;

		*node[0x558adca5d630] = ;;

		*node[0x558adca5d660] = 5;

		*node[0x558adca5d690] = 1;

		*node[0x558adca5d6c0] = 2;

		*node[0x558adca5d6f0] = ;;

		*node[0x558adca5d720] = =;

		*node[0x558adca5d750] = 7;

		*node[0x558adca5d780] = -;

		*node[0x558adca5d7b0] = 0;

		*node[0x558adca5d7e0] = 1;

		*node[0x558adca5d810] = ;;

		*node[0x558adca5d840] = =;

		*node[0x558adca5d870] = 8;

		*node[0x558adca5d8a0] = 1;

		*node[0x558adca5d8d0] = ;;

		*node[0x558adca5d900] = =;

		*node[0x558adca5d930] = 9;

		*node[0x558adca5d960] = 1000;

		*node[0x558adca5d990] = ;;

		*node[0x558adca5d9c0] = if;

		*node[0x558adca5d9f0] = op_no;

		*node[0x558adca5da20] = ==;

		*node[0x558adca5da50] = 1;

		*node[0x558adca5da80] = 0;

		*node[0x558adca5dab0] = ;;

		*node[0x558adca5dae0] = if;

		*node[0x558adca5db10] = op_no;

		*node[0x558adca5db40] = ==;

		*node[0x558adca5db70] = 2;

		*node[0x558adca5dba0] = 0;

		*node[0x558adca5dbd0] = ;;

		*node[0x558adca5dc00] = print;

		*node[0x558adca5dc30] = 9;

		*node[0x558adca5dc60] = else;

		*node[0x558adca5dc90] = op_no;

		*node[0x558adca5dcc0] = ;;

		*node[0x558adca5dcf0] = print;

		*node[0x558adca5dd20] = 7;

		*node[0x558adca5dd50] = else;

		*node[0x558adca5dd80] = op_no;

		*node[0x558adca5ddb0] = ;;

		*node[0x558adca5dde0] = =;

		*node[0x558adca5de10] = 10;

		*node[0x558adca5de40] = /;

		*node[0x558adca5de70] = -;

		*node[0x558adca5dea0] = 0;

		*node[0x558adca5ded0] = 2;

		*node[0x558adca5df00] = 1;

		*node[0x558adca5df30] = ;;

		*node[0x558adca5df60] = print;

		*node[0x558adca5df90] = 8;

		*node[0x558adca5dfc0] = ;;

		*node[0x558adca5dff0] = print;

		*node[0x558adca5e020] = 10;

		*node[0x558adca5e050] = ;;

		*node[0x558adca5e080] = return;

		*node[0x558adca5e0b0] = 0;

		*node[0x558adca5e0e0] = ;;

		*node[0x558adca5e110] = 6;

		*node[0x558adca5e140] = 1;

		*node[0x558adca5e170] = 2;

		*node[0x558adca5e1a0] = 3;

		*node[0x558adca5e1d0] = ;;

		*node[0x558adca5e200] = =;

		*node[0x558adca5e230] = 7;

		*node[0x558adca5e260] = -;

		*node[0x558adca5e290] = 0;

		*node[0x558adca5e2c0] = 1;

		*node[0x558adca5e2f0] = ;;

		*node[0x558adca5e320] = =;

		*node[0x558adca5e350] = 8;

		*node[0x558adca5e380] = 1;

		*node[0x558adca5e3b0] = ;;

		*node[0x558adca5e3e0] = =;

		*node[0x558adca5e410] = 11;

		*node[0x558adca5e440] = 2;

		*node[0x558adca5e470] = ;;

		*node[0x558adca5e4a0] = if;

		*node[0x558adca5e4d0] = op_no;

		*node[0x558adca5e500] = ==;

		*node[0x558adca5e530] = 3;

		*node[0x558adca5e560] = 0;

		*node[0x558adca5e590] = ;;

		*node[0x558adca5e5c0] = =;

		*node[0x558adca5e5f0] = 12;

		*node[0x558adca5e620] = 0;

		*node[0x558adca5e650] = ;;

		*node[0x558adca5e680] = =;

		*node[0x558adca5e6b0] = 13;

		*node[0x558adca5e6e0] = /;

		*node[0x558adca5e710] = -;

		*node[0x558adca5e740] = 0;

		*node[0x558adca5e770] = 2;

		*node[0x558adca5e7a0] = 1;

		*node[0x558adca5e7d0] = ;;

		*node[0x558adca5e800] = print;

		*node[0x558adca5e830] = 11;

		*node[0x558adca5e860] = ;;

		*node[0x558adca5e890] = print;

		*node[0x558adca5e8c0] = 12;

		*node[0x558adca5e8f0] = 13;

		*node[0x558adca5e920] = else;

		*node[0x558adca5e950] = op_no;

		*node[0x558adca5e980] = ;;

		*node[0x558adca5e9b0] = =;

		*node[0x558adca5e9e0] = 14;

		*node[0x558adca5ea10] = -;

		*node[0x558adca5ea40] = *;

		*node[0x558adca5ea70] = 2;

		*node[0x558adca5eaa0] = 2;

		*node[0x558adca5ead0] = *;

		*node[0x558adca5eb00] = *;

		*node[0x558adca5eb30] = 4;

		*node[0x558adca5eb60] = 1;

		*node[0x558adca5eb90] = 3;

		*node[0x558adca5ebc0] = ;;

		*node[0x558adca5ebf0] = if;

		*node[0x558adca5ec20] = op_no;

		*node[0x558adca5ec50] = >;

		*node[0x558adca5ec80] = 14;

		*node[0x558adca5ecb0] = 0;

		*node[0x558adca5ece0] = ;;

		*node[0x558adca5ed10] = =;

		*node[0x558adca5ed40] = 15;

		*node[0x558adca5ed70] = sqrt;

		*node[0x558adca5eda0] = 14;

		*node[0x558adca5edd0] = ;;

		*node[0x558adca5ee00] = =;

		*node[0x558adca5ee30] = 12;

		*node[0x558adca5ee60] = /;

		*node[0x558adca5ee90] = -;

		*node[0x558adca5eec0] = -;

		*node[0x558adca5eef0] = 0;

		*node[0x558adca5ef20] = 2;

		*node[0x558adca5ef50] = 15;

		*node[0x558adca5ef80] = *;

		*node[0x558adca5efb0] = 2;

		*node[0x558adca5efe0] = 1;

		*node[0x558adca5f010] = ;;

		*node[0x558adca5f040] = =;

		*node[0x558adca5f070] = 13;

		*node[0x558adca5f0a0] = /;

		*node[0x558adca5f0d0] = +;

		*node[0x558adca5f100] = -;

		*node[0x558adca5f130] = 0;

		*node[0x558adca5f160] = 2;

		*node[0x558adca5f190] = 15;

		*node[0x558adca5f1c0] = *;

		*node[0x558adca5f1f0] = 2;

		*node[0x558adca5f220] = 1;

		*node[0x558adca5f250] = ;;

		*node[0x558adca5f280] = print;

		*node[0x558adca5f2b0] = 11;

		*node[0x558adca5f2e0] = ;;

		*node[0x558adca5f310] = print;

		*node[0x558adca5f340] = 12;

		*node[0x558adca5f370] = 13;

		*node[0x558adca5f3a0] = elseif;

		*node[0x558adca5f3d0] = op_no;

		*node[0x558adca5f400] = ==;

		*node[0x558adca5f430] = 14;

		*node[0x558adca5f460] = 0;

		*node[0x558adca5f490] = ;;

		*node[0x558adca5f4c0] = =;

		*node[0x558adca5f4f0] = 10;

		*node[0x558adca5f520] = /;

		*node[0x558adca5f550] = -;

		*node[0x558adca5f580] = 0;

		*node[0x558adca5f5b0] = 2;

		*node[0x558adca5f5e0] = *;

		*node[0x558adca5f610] = 2;

		*node[0x558adca5f640] = 1;

		*node[0x558adca5f670] = ;;

		*node[0x558adca5f6a0] = print;

		*node[0x558adca5f6d0] = 8;

		*node[0x558adca5f700] = ;;

		*node[0x558adca5f730] = print;

		*node[0x558adca5f760] = 10;

		*node[0x558adca5f790] = else;

		*node[0x558adca5f7c0] = op_no;

		*node[0x558adca5f7f0] = ;;

		*node[0x558adca5f820] = print;

		*node[0x558adca5f850] = 7;

		*node[0x558adca5f880] = ;;

		*node[0x558adca5f8b0] = return;

		*node[0x558adca5f8e0] = 0;

		*node[0x558adca5f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff2e6c7980] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x646d555cdfd0] = ;;

		*node[0x646d555ce000] = 0;

		*node[0x646d555ce030] = ;;

		*node[0x646d555ce060] = input;

		*node[0x646d555ce090] = 1;

		*node[0x646d555ce0c0] = 2;

		*node[0x646d555ce0f0] = 3;

		*node[0x646d555ce120] = ;;

		*node[0x646d555ce180] = 1;

		*node[0x646d555ce1b0] = 2;

		*node[0x646d555ce1e0] = 3;

		*node[0x646d555ce210] = ;;

		*node[0x646d555ce240] = 4;

		*node[0x646d555ce270] = 1;

		*node[0x646d555ce2a0] = 2;

		*node[0x646d555ce2d0] = 3;

		*node[0x646d555ce300] = ;;

		*node[0x646d555ce330] = if;

		*node[0x646d555ce360] = op_no;

		*node[0x646d555ce390] = ==;

		*node[0x646d555ce3c0] = 1;

		*node[0x646d555ce3f0] = 0;

		*node[0x646d555ce420] = ;;

		*node[0x646d555ce480] = 2;

		*node[0x646d555ce4b0] = 3;

		*node[0x646d555ce4e0] = else;

		*node[0x646d555ce510] = op_no;

		*node[0x646d555ce540] = ;;

		*node[0x646d555ce5a0] = 1;

		*node[0x646d555ce5d0] = 2;

		*node[0x646d555ce600] = 3;

		*node[0x646d555ce630] = ;;

		*node[0x646d555ce660] = 5;

		*node[0x646d555ce690] = 1;

		*node[0x646d555ce6c0] = 2;

		*node[0x646d555ce6f0] = ;;

		*node[0x646d555ce720] = =;

		*node[0x646d555ce750] = 7;

		*node[0x646d555ce780] = -;

		*node[0x646d555ce7b0] = 0;

		*node[0x646d555ce7e0] = 1;

		*node[0x646d555ce810] = ;;

		*node[0x646d555ce840] = =;

		*node[0x646d555ce870] = 8;

		*node[0x646d555ce8a0] = 1;

		*node[0x646d555ce8d0] = ;;

		*node[0x646d555ce900] = =;

		*node[0x646d555ce930] = 9;

		*node[0x646d555ce960] = 1000;

		*node[0x646d555ce990] = ;;

		*node[0x646d555ce9c0] = if;

		*node[0x646d555ce9f0] = op_no;

		*node[0x646d555cea20] = ==;

		*node[0x646d555cea50] = 1;

		*node[0x646d555cea80] = 0;

		*node[0x646d555ceab0] = ;;

		*node[0x646d555ceae0] = if;

		*node[0x646d555ceb10] = op_no;

		*node[0x646d555ceb40] = ==;

		*node[0x646d555ceb70] = 2;

		*node[0x646d555ceba0] = 0;

		*node[0x646d555cebd0] = ;;

		*node[0x646d555cec00] = print;

		*node[0x646d555cec30] = 9;

		*node[0x646d555cec60] = else;

		*node[0x646d555cec90] = op_no;

		*node[0x646d555cecc0] = ;;

		*node[0x646d555cecf0] = print;

		*node[0x646d555ced20] = 7;

		*node[0x646d555ced50] = else;

		*node[0x646d555ced80] = op_no;

		*node[0x646d555cedb0] = ;;

		*node[0x646d555cede0] = =;

		*node[0x646d555cee10] = 10;

		*node[0x646d555cee40] = /;

		*node[0x646d555cee70] = -;

		*node[0x646d555ceea0] = 0;

		*node[0x646d555ceed0] = 2;

		*node[0x646d555cef00] = 1;

		*node[0x646d555cef30] = ;;

		*node[0x646d555cef60] = print;

		*node[0x646d555cef90] = 8;

		*node[0x646d555cefc0] = ;;

		*node[0x646d555ceff0] = print;

		*node[0x646d555cf020] = 10;

		*node[0x646d555cf050] = ;;

		*node[0x646d555cf080] = return;

		*node[0x646d555cf0b0] = 0;

		*node[0x646d555cf0e0] = ;;

		*node[0x646d555cf110] = 6;

		*node[0x646d555cf140] = 1;

		*node[0x646d555cf170] = 2;

		*node[0x646d555cf1a0] = 3;

		*node[0x646d555cf1d0] = ;;

		*node[0x646d555cf200] = =;

		*node[0x646d555cf230] = 7;

		*node[0x646d555cf260] = -;

		*node[0x646d555cf290] = 0;

		*node[0x646d555cf2c0] = 1;

		*node[0x646d555cf2f0] = ;;

		*node[0x646d555cf320] = =;

		*node[0x646d555cf350] = 8;

		*node[0x646d555cf380] = 1;

		*node[0x646d555cf3b0] = ;;

		*node[0x646d555cf3e0] = =;

		*node[0x646d555cf410] = 11;

		*node[0x646d555cf440] = 2;

		*node[0x646d555cf470] = ;;

		*node[0x646d555cf4a0] = if;

		*node[0x646d555cf4d0] = op_no;

		*node[0x646d555cf500] = ==;

		*node[0x646d555cf530] = 3;

		*node[0x646d555cf560] = 0;

		*node[0x646d555cf590] = ;;

		*node[0x646d555cf5c0] = =;

		*node[0x646d555cf5f0] = 12;

		*node[0x646d555cf620] = 0;

		*node[0x646d555cf650] = ;;

		*node[0x646d555cf680] = =;

		*node[0x646d555cf6b0] = 13;

		*node[0x646d555cf6e0] = /;

		*node[0x646d555cf710] = -;

		*node[0x646d555cf740] = 0;

		*node[0x646d555cf770] = 2;

		*node[0x646d555cf7a0] = 1;

		*node[0x646d555cf7d0] = ;;

		*node[0x646d555cf800] = print;

		*node[0x646d555cf830] = 11;

		*node[0x646d555cf860] = ;;

		*node[0x646d555cf890] = print;

		*node[0x646d555cf8c0] = 12;

		*node[0x646d555cf8f0] = 13;

		*node[0x646d555cf920] = else;

		*node[0x646d555cf950] = op_no;

		*node[0x646d555cf980] = ;;

		*node[0x646d555cf9b0] = =;

		*node[0x646d555cf9e0] = 14;

		*node[0x646d555cfa10] = -;

		*node[0x646d555cfa40] = *;

		*node[0x646d555cfa70] = 2;

		*node[0x646d555cfaa0] = 2;

		*node[0x646d555cfad0] = *;

		*node[0x646d555cfb00] = *;

		*node[0x646d555cfb30] = 4;

		*node[0x646d555cfb60] = 1;

		*node[0x646d555cfb90] = 3;

		*node[0x646d555cfbc0] = ;;

		*node[0x646d555cfbf0] = if;

		*node[0x646d555cfc20] = op_no;

		*node[0x646d555cfc50] = >;

		*node[0x646d555cfc80] = 14;

		*node[0x646d555cfcb0] = 0;

		*node[0x646d555cfce0] = ;;

		*node[0x646d555cfd10] = =;

		*node[0x646d555cfd40] = 15;

		*node[0x646d555cfd70] = sqrt;

		*node[0x646d555cfda0] = 14;

		*node[0x646d555cfdd0] = ;;

		*node[0x646d555cfe00] = =;

		*node[0x646d555cfe30] = 12;

		*node[0x646d555cfe60] = /;

		*node[0x646d555cfe90] = -;

		*node[0x646d555cfec0] = -;

		*node[0x646d555cfef0] = 0;

		*node[0x646d555cff20] = 2;

		*node[0x646d555cff50] = 15;

		*node[0x646d555cff80] = *;

		*node[0x646d555cffb0] = 2;

		*node[0x646d555cffe0] = 1;

		*node[0x646d555d0010] = ;;

		*node[0x646d555d0040] = =;

		*node[0x646d555d0070] = 13;

		*node[0x646d555d00a0] = /;

		*node[0x646d555d00d0] = +;

		*node[0x646d555d0100] = -;

		*node[0x646d555d0130] = 0;

		*node[0x646d555d0160] = 2;

		*node[0x646d555d0190] = 15;

		*node[0x646d555d01c0] = *;

		*node[0x646d555d01f0] = 2;

		*node[0x646d555d0220] = 1;

		*node[0x646d555d0250] = ;;

		*node[0x646d555d0280] = print;

		*node[0x646d555d02b0] = 11;

		*node[0x646d555d02e0] = ;;

		*node[0x646d555d0310] = print;

		*node[0x646d555d0340] = 12;

		*node[0x646d555d0370] = 13;

		*node[0x646d555d03a0] = elseif;

		*node[0x646d555d03d0] = op_no;

		*node[0x646d555d0400] = ==;

		*node[0x646d555d0430] = 14;

		*node[0x646d555d0460] = 0;

		*node[0x646d555d0490] = ;;

		*node[0x646d555d04c0] = =;

		*node[0x646d555d04f0] = 10;

		*node[0x646d555d0520] = /;

		*node[0x646d555d0550] = -;

		*node[0x646d555d0580] = 0;

		*node[0x646d555d05b0] = 2;

		*node[0x646d555d05e0] = *;

		*node[0x646d555d0610] = 2;

		*node[0x646d555d0640] = 1;

		*node[0x646d555d0670] = ;;

		*node[0x646d555d06a0] = print;

		*node[0x646d555d06d0] = 8;

		*node[0x646d555d0700] = ;;

		*node[0x646d555d0730] = print;

		*node[0x646d555d0760] = 10;

		*node[0x646d555d0790] = else;

		*node[0x646d555d07c0] = op_no;

		*node[0x646d555d07f0] = ;;

		*node[0x646d555d0820] = print;

		*node[0x646d555d0850] = 7;

		*node[0x646d555d0880] = ;;

		*node[0x646d555d08b0] = return;

		*node[0x646d555d08e0] = 0;

		*node[0x646d555d0910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcae7465b0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x57c1d001ffd0] = ;;

		*node[0x57c1d0020000] = 0;

		*node[0x57c1d0020030] = ;;

		*node[0x57c1d0020060] = input;

		*node[0x57c1d0020090] = 1;

		*node[0x57c1d00200c0] = 2;

		*node[0x57c1d00200f0] = 3;

		*node[0x57c1d0020120] = ;;

		*node[0x57c1d0020180] = 1;

		*node[0x57c1d00201b0] = 2;

		*node[0x57c1d00201e0] = 3;

		*node[0x57c1d0020210] = ;;

		*node[0x57c1d0020240] = 4;

		*node[0x57c1d0020270] = 1;

		*node[0x57c1d00202a0] = 2;

		*node[0x57c1d00202d0] = 3;

		*node[0x57c1d0020300] = ;;

		*node[0x57c1d0020330] = if;

		*node[0x57c1d0020360] = op_no;

		*node[0x57c1d0020390] = ==;

		*node[0x57c1d00203c0] = 1;

		*node[0x57c1d00203f0] = 0;

		*node[0x57c1d0020420] = ;;

		*node[0x57c1d0020480] = 2;

		*node[0x57c1d00204b0] = 3;

		*node[0x57c1d00204e0] = else;

		*node[0x57c1d0020510] = op_no;

		*node[0x57c1d0020540] = ;;

		*node[0x57c1d00205a0] = 1;

		*node[0x57c1d00205d0] = 2;

		*node[0x57c1d0020600] = 3;

		*node[0x57c1d0020630] = ;;

		*node[0x57c1d0020660] = 5;

		*node[0x57c1d0020690] = 1;

		*node[0x57c1d00206c0] = 2;

		*node[0x57c1d00206f0] = ;;

		*node[0x57c1d0020720] = =;

		*node[0x57c1d0020750] = 7;

		*node[0x57c1d0020780] = -;

		*node[0x57c1d00207b0] = 0;

		*node[0x57c1d00207e0] = 1;

		*node[0x57c1d0020810] = ;;

		*node[0x57c1d0020840] = =;

		*node[0x57c1d0020870] = 8;

		*node[0x57c1d00208a0] = 1;

		*node[0x57c1d00208d0] = ;;

		*node[0x57c1d0020900] = =;

		*node[0x57c1d0020930] = 9;

		*node[0x57c1d0020960] = 1000;

		*node[0x57c1d0020990] = ;;

		*node[0x57c1d00209c0] = if;

		*node[0x57c1d00209f0] = op_no;

		*node[0x57c1d0020a20] = ==;

		*node[0x57c1d0020a50] = 1;

		*node[0x57c1d0020a80] = 0;

		*node[0x57c1d0020ab0] = ;;

		*node[0x57c1d0020ae0] = if;

		*node[0x57c1d0020b10] = op_no;

		*node[0x57c1d0020b40] = ==;

		*node[0x57c1d0020b70] = 2;

		*node[0x57c1d0020ba0] = 0;

		*node[0x57c1d0020bd0] = ;;

		*node[0x57c1d0020c00] = print;

		*node[0x57c1d0020c30] = 9;

		*node[0x57c1d0020c60] = else;

		*node[0x57c1d0020c90] = op_no;

		*node[0x57c1d0020cc0] = ;;

		*node[0x57c1d0020cf0] = print;

		*node[0x57c1d0020d20] = 7;

		*node[0x57c1d0020d50] = else;

		*node[0x57c1d0020d80] = op_no;

		*node[0x57c1d0020db0] = ;;

		*node[0x57c1d0020de0] = =;

		*node[0x57c1d0020e10] = 10;

		*node[0x57c1d0020e40] = /;

		*node[0x57c1d0020e70] = -;

		*node[0x57c1d0020ea0] = 0;

		*node[0x57c1d0020ed0] = 2;

		*node[0x57c1d0020f00] = 1;

		*node[0x57c1d0020f30] = ;;

		*node[0x57c1d0020f60] = print;

		*node[0x57c1d0020f90] = 8;

		*node[0x57c1d0020fc0] = ;;

		*node[0x57c1d0020ff0] = print;

		*node[0x57c1d0021020] = 10;

		*node[0x57c1d0021050] = ;;

		*node[0x57c1d0021080] = return;

		*node[0x57c1d00210b0] = 0;

		*node[0x57c1d00210e0] = ;;

		*node[0x57c1d0021110] = 6;

		*node[0x57c1d0021140] = 1;

		*node[0x57c1d0021170] = 2;

		*node[0x57c1d00211a0] = 3;

		*node[0x57c1d00211d0] = ;;

		*node[0x57c1d0021200] = =;

		*node[0x57c1d0021230] = 7;

		*node[0x57c1d0021260] = -;

		*node[0x57c1d0021290] = 0;

		*node[0x57c1d00212c0] = 1;

		*node[0x57c1d00212f0] = ;;

		*node[0x57c1d0021320] = =;

		*node[0x57c1d0021350] = 8;

		*node[0x57c1d0021380] = 1;

		*node[0x57c1d00213b0] = ;;

		*node[0x57c1d00213e0] = =;

		*node[0x57c1d0021410] = 11;

		*node[0x57c1d0021440] = 2;

		*node[0x57c1d0021470] = ;;

		*node[0x57c1d00214a0] = if;

		*node[0x57c1d00214d0] = op_no;

		*node[0x57c1d0021500] = ==;

		*node[0x57c1d0021530] = 3;

		*node[0x57c1d0021560] = 0;

		*node[0x57c1d0021590] = ;;

		*node[0x57c1d00215c0] = =;

		*node[0x57c1d00215f0] = 12;

		*node[0x57c1d0021620] = 0;

		*node[0x57c1d0021650] = ;;

		*node[0x57c1d0021680] = =;

		*node[0x57c1d00216b0] = 13;

		*node[0x57c1d00216e0] = /;

		*node[0x57c1d0021710] = -;

		*node[0x57c1d0021740] = 0;

		*node[0x57c1d0021770] = 2;

		*node[0x57c1d00217a0] = 1;

		*node[0x57c1d00217d0] = ;;

		*node[0x57c1d0021800] = print;

		*node[0x57c1d0021830] = 11;

		*node[0x57c1d0021860] = ;;

		*node[0x57c1d0021890] = print;

		*node[0x57c1d00218c0] = 12;

		*node[0x57c1d00218f0] = 13;

		*node[0x57c1d0021920] = else;

		*node[0x57c1d0021950] = op_no;

		*node[0x57c1d0021980] = ;;

		*node[0x57c1d00219b0] = =;

		*node[0x57c1d00219e0] = 14;

		*node[0x57c1d0021a10] = -;

		*node[0x57c1d0021a40] = *;

		*node[0x57c1d0021a70] = 2;

		*node[0x57c1d0021aa0] = 2;

		*node[0x57c1d0021ad0] = *;

		*node[0x57c1d0021b00] = *;

		*node[0x57c1d0021b30] = 4;

		*node[0x57c1d0021b60] = 1;

		*node[0x57c1d0021b90] = 3;

		*node[0x57c1d0021bc0] = ;;

		*node[0x57c1d0021bf0] = if;

		*node[0x57c1d0021c20] = op_no;

		*node[0x57c1d0021c50] = >;

		*node[0x57c1d0021c80] = 14;

		*node[0x57c1d0021cb0] = 0;

		*node[0x57c1d0021ce0] = ;;

		*node[0x57c1d0021d10] = =;

		*node[0x57c1d0021d40] = 15;

		*node[0x57c1d0021d70] = sqrt;

		*node[0x57c1d0021da0] = 14;

		*node[0x57c1d0021dd0] = ;;

		*node[0x57c1d0021e00] = =;

		*node[0x57c1d0021e30] = 12;

		*node[0x57c1d0021e60] = /;

		*node[0x57c1d0021e90] = -;

		*node[0x57c1d0021ec0] = -;

		*node[0x57c1d0021ef0] = 0;

		*node[0x57c1d0021f20] = 2;

		*node[0x57c1d0021f50] = 15;

		*node[0x57c1d0021f80] = *;

		*node[0x57c1d0021fb0] = 2;

		*node[0x57c1d0021fe0] = 1;

		*node[0x57c1d0022010] = ;;

		*node[0x57c1d0022040] = =;

		*node[0x57c1d0022070] = 13;

		*node[0x57c1d00220a0] = /;

		*node[0x57c1d00220d0] = +;

		*node[0x57c1d0022100] = -;

		*node[0x57c1d0022130] = 0;

		*node[0x57c1d0022160] = 2;

		*node[0x57c1d0022190] = 15;

		*node[0x57c1d00221c0] = *;

		*node[0x57c1d00221f0] = 2;

		*node[0x57c1d0022220] = 1;

		*node[0x57c1d0022250] = ;;

		*node[0x57c1d0022280] = print;

		*node[0x57c1d00222b0] = 11;

		*node[0x57c1d00222e0] = ;;

		*node[0x57c1d0022310] = print;

		*node[0x57c1d0022340] = 12;

		*node[0x57c1d0022370] = 13;

		*node[0x57c1d00223a0] = elseif;

		*node[0x57c1d00223d0] = op_no;

		*node[0x57c1d0022400] = ==;

		*node[0x57c1d0022430] = 14;

		*node[0x57c1d0022460] = 0;

		*node[0x57c1d0022490] = ;;

		*node[0x57c1d00224c0] = =;

		*node[0x57c1d00224f0] = 10;

		*node[0x57c1d0022520] = /;

		*node[0x57c1d0022550] = -;

		*node[0x57c1d0022580] = 0;

		*node[0x57c1d00225b0] = 2;

		*node[0x57c1d00225e0] = *;

		*node[0x57c1d0022610] = 2;

		*node[0x57c1d0022640] = 1;

		*node[0x57c1d0022670] = ;;

		*node[0x57c1d00226a0] = print;

		*node[0x57c1d00226d0] = 8;

		*node[0x57c1d0022700] = ;;

		*node[0x57c1d0022730] = print;

		*node[0x57c1d0022760] = 10;

		*node[0x57c1d0022790] = else;

		*node[0x57c1d00227c0] = op_no;

		*node[0x57c1d00227f0] = ;;

		*node[0x57c1d0022820] = print;

		*node[0x57c1d0022850] = 7;

		*node[0x57c1d0022880] = ;;

		*node[0x57c1d00228b0] = return;

		*node[0x57c1d00228e0] = 0;

		*node[0x57c1d0022910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcc2245fc0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x630331079fd0] = ;;

		*node[0x63033107a000] = 0;

		*node[0x63033107a030] = ;;

		*node[0x63033107a060] = input;

		*node[0x63033107a090] = 1;

		*node[0x63033107a0c0] = 2;

		*node[0x63033107a0f0] = 3;

		*node[0x63033107a120] = ;;

		*node[0x63033107a180] = 1;

		*node[0x63033107a1b0] = 2;

		*node[0x63033107a1e0] = 3;

		*node[0x63033107a210] = ;;

		*node[0x63033107a240] = 4;

		*node[0x63033107a270] = 1;

		*node[0x63033107a2a0] = 2;

		*node[0x63033107a2d0] = 3;

		*node[0x63033107a300] = ;;

		*node[0x63033107a330] = if;

		*node[0x63033107a360] = op_no;

		*node[0x63033107a390] = ==;

		*node[0x63033107a3c0] = 1;

		*node[0x63033107a3f0] = 0;

		*node[0x63033107a420] = ;;

		*node[0x63033107a480] = 2;

		*node[0x63033107a4b0] = 3;

		*node[0x63033107a4e0] = else;

		*node[0x63033107a510] = op_no;

		*node[0x63033107a540] = ;;

		*node[0x63033107a5a0] = 1;

		*node[0x63033107a5d0] = 2;

		*node[0x63033107a600] = 3;

		*node[0x63033107a630] = ;;

		*node[0x63033107a660] = 5;

		*node[0x63033107a690] = 1;

		*node[0x63033107a6c0] = 2;

		*node[0x63033107a6f0] = ;;

		*node[0x63033107a720] = =;

		*node[0x63033107a750] = 7;

		*node[0x63033107a780] = -;

		*node[0x63033107a7b0] = 0;

		*node[0x63033107a7e0] = 1;

		*node[0x63033107a810] = ;;

		*node[0x63033107a840] = =;

		*node[0x63033107a870] = 8;

		*node[0x63033107a8a0] = 1;

		*node[0x63033107a8d0] = ;;

		*node[0x63033107a900] = =;

		*node[0x63033107a930] = 9;

		*node[0x63033107a960] = 1000;

		*node[0x63033107a990] = ;;

		*node[0x63033107a9c0] = if;

		*node[0x63033107a9f0] = op_no;

		*node[0x63033107aa20] = ==;

		*node[0x63033107aa50] = 1;

		*node[0x63033107aa80] = 0;

		*node[0x63033107aab0] = ;;

		*node[0x63033107aae0] = if;

		*node[0x63033107ab10] = op_no;

		*node[0x63033107ab40] = ==;

		*node[0x63033107ab70] = 2;

		*node[0x63033107aba0] = 0;

		*node[0x63033107abd0] = ;;

		*node[0x63033107ac00] = print;

		*node[0x63033107ac30] = 9;

		*node[0x63033107ac60] = else;

		*node[0x63033107ac90] = op_no;

		*node[0x63033107acc0] = ;;

		*node[0x63033107acf0] = print;

		*node[0x63033107ad20] = 7;

		*node[0x63033107ad50] = else;

		*node[0x63033107ad80] = op_no;

		*node[0x63033107adb0] = ;;

		*node[0x63033107ade0] = =;

		*node[0x63033107ae10] = 10;

		*node[0x63033107ae40] = /;

		*node[0x63033107ae70] = -;

		*node[0x63033107aea0] = 0;

		*node[0x63033107aed0] = 2;

		*node[0x63033107af00] = 1;

		*node[0x63033107af30] = ;;

		*node[0x63033107af60] = print;

		*node[0x63033107af90] = 8;

		*node[0x63033107afc0] = ;;

		*node[0x63033107aff0] = print;

		*node[0x63033107b020] = 10;

		*node[0x63033107b050] = ;;

		*node[0x63033107b080] = return;

		*node[0x63033107b0b0] = 0;

		*node[0x63033107b0e0] = ;;

		*node[0x63033107b110] = 6;

		*node[0x63033107b140] = 1;

		*node[0x63033107b170] = 2;

		*node[0x63033107b1a0] = 3;

		*node[0x63033107b1d0] = ;;

		*node[0x63033107b200] = =;

		*node[0x63033107b230] = 7;

		*node[0x63033107b260] = -;

		*node[0x63033107b290] = 0;

		*node[0x63033107b2c0] = 1;

		*node[0x63033107b2f0] = ;;

		*node[0x63033107b320] = =;

		*node[0x63033107b350] = 8;

		*node[0x63033107b380] = 1;

		*node[0x63033107b3b0] = ;;

		*node[0x63033107b3e0] = =;

		*node[0x63033107b410] = 11;

		*node[0x63033107b440] = 2;

		*node[0x63033107b470] = ;;

		*node[0x63033107b4a0] = if;

		*node[0x63033107b4d0] = op_no;

		*node[0x63033107b500] = ==;

		*node[0x63033107b530] = 3;

		*node[0x63033107b560] = 0;

		*node[0x63033107b590] = ;;

		*node[0x63033107b5c0] = =;

		*node[0x63033107b5f0] = 12;

		*node[0x63033107b620] = 0;

		*node[0x63033107b650] = ;;

		*node[0x63033107b680] = =;

		*node[0x63033107b6b0] = 13;

		*node[0x63033107b6e0] = /;

		*node[0x63033107b710] = -;

		*node[0x63033107b740] = 0;

		*node[0x63033107b770] = 2;

		*node[0x63033107b7a0] = 1;

		*node[0x63033107b7d0] = ;;

		*node[0x63033107b800] = print;

		*node[0x63033107b830] = 11;

		*node[0x63033107b860] = ;;

		*node[0x63033107b890] = print;

		*node[0x63033107b8c0] = 12;

		*node[0x63033107b8f0] = 13;

		*node[0x63033107b920] = else;

		*node[0x63033107b950] = op_no;

		*node[0x63033107b980] = ;;

		*node[0x63033107b9b0] = =;

		*node[0x63033107b9e0] = 14;

		*node[0x63033107ba10] = -;

		*node[0x63033107ba40] = *;

		*node[0x63033107ba70] = 2;

		*node[0x63033107baa0] = 2;

		*node[0x63033107bad0] = *;

		*node[0x63033107bb00] = *;

		*node[0x63033107bb30] = 4;

		*node[0x63033107bb60] = 1;

		*node[0x63033107bb90] = 3;

		*node[0x63033107bbc0] = ;;

		*node[0x63033107bbf0] = if;

		*node[0x63033107bc20] = op_no;

		*node[0x63033107bc50] = >;

		*node[0x63033107bc80] = 14;

		*node[0x63033107bcb0] = 0;

		*node[0x63033107bce0] = ;;

		*node[0x63033107bd10] = =;

		*node[0x63033107bd40] = 15;

		*node[0x63033107bd70] = sqrt;

		*node[0x63033107bda0] = 14;

		*node[0x63033107bdd0] = ;;

		*node[0x63033107be00] = =;

		*node[0x63033107be30] = 12;

		*node[0x63033107be60] = /;

		*node[0x63033107be90] = -;

		*node[0x63033107bec0] = -;

		*node[0x63033107bef0] = 0;

		*node[0x63033107bf20] = 2;

		*node[0x63033107bf50] = 15;

		*node[0x63033107bf80] = *;

		*node[0x63033107bfb0] = 2;

		*node[0x63033107bfe0] = 1;

		*node[0x63033107c010] = ;;

		*node[0x63033107c040] = =;

		*node[0x63033107c070] = 13;

		*node[0x63033107c0a0] = /;

		*node[0x63033107c0d0] = +;

		*node[0x63033107c100] = -;

		*node[0x63033107c130] = 0;

		*node[0x63033107c160] = 2;

		*node[0x63033107c190] = 15;

		*node[0x63033107c1c0] = *;

		*node[0x63033107c1f0] = 2;

		*node[0x63033107c220] = 1;

		*node[0x63033107c250] = ;;

		*node[0x63033107c280] = print;

		*node[0x63033107c2b0] = 11;

		*node[0x63033107c2e0] = ;;

		*node[0x63033107c310] = print;

		*node[0x63033107c340] = 12;

		*node[0x63033107c370] = 13;

		*node[0x63033107c3a0] = elseif;

		*node[0x63033107c3d0] = op_no;

		*node[0x63033107c400] = ==;

		*node[0x63033107c430] = 14;

		*node[0x63033107c460] = 0;

		*node[0x63033107c490] = ;;

		*node[0x63033107c4c0] = =;

		*node[0x63033107c4f0] = 10;

		*node[0x63033107c520] = /;

		*node[0x63033107c550] = -;

		*node[0x63033107c580] = 0;

		*node[0x63033107c5b0] = 2;

		*node[0x63033107c5e0] = *;

		*node[0x63033107c610] = 2;

		*node[0x63033107c640] = 1;

		*node[0x63033107c670] = ;;

		*node[0x63033107c6a0] = print;

		*node[0x63033107c6d0] = 8;

		*node[0x63033107c700] = ;;

		*node[0x63033107c730] = print;

		*node[0x63033107c760] = 10;

		*node[0x63033107c790] = else;

		*node[0x63033107c7c0] = op_no;

		*node[0x63033107c7f0] = ;;

		*node[0x63033107c820] = print;

		*node[0x63033107c850] = 7;

		*node[0x63033107c880] = ;;

		*node[0x63033107c8b0] = return;

		*node[0x63033107c8e0] = 0;

		*node[0x63033107c910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffdecb89940] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x57eca6cbbfd0] = ;;

		*node[0x57eca6cbc000] = 0;

		*node[0x57eca6cbc030] = ;;

		*node[0x57eca6cbc060] = input;

		*node[0x57eca6cbc090] = 1;

		*node[0x57eca6cbc0c0] = 2;

		*node[0x57eca6cbc0f0] = 3;

		*node[0x57eca6cbc120] = ;;

		*node[0x57eca6cbc180] = 1;

		*node[0x57eca6cbc1b0] = 2;

		*node[0x57eca6cbc1e0] = 3;

		*node[0x57eca6cbc210] = ;;

		*node[0x57eca6cbc240] = 4;

		*node[0x57eca6cbc270] = 1;

		*node[0x57eca6cbc2a0] = 2;

		*node[0x57eca6cbc2d0] = 3;

		*node[0x57eca6cbc300] = ;;

		*node[0x57eca6cbc330] = if;

		*node[0x57eca6cbc360] = op_no;

		*node[0x57eca6cbc390] = ==;

		*node[0x57eca6cbc3c0] = 1;

		*node[0x57eca6cbc3f0] = 0;

		*node[0x57eca6cbc420] = ;;

		*node[0x57eca6cbc480] = 2;

		*node[0x57eca6cbc4b0] = 3;

		*node[0x57eca6cbc4e0] = else;

		*node[0x57eca6cbc510] = op_no;

		*node[0x57eca6cbc540] = ;;

		*node[0x57eca6cbc5a0] = 1;

		*node[0x57eca6cbc5d0] = 2;

		*node[0x57eca6cbc600] = 3;

		*node[0x57eca6cbc630] = ;;

		*node[0x57eca6cbc660] = 5;

		*node[0x57eca6cbc690] = 1;

		*node[0x57eca6cbc6c0] = 2;

		*node[0x57eca6cbc6f0] = ;;

		*node[0x57eca6cbc720] = =;

		*node[0x57eca6cbc750] = 7;

		*node[0x57eca6cbc780] = -;

		*node[0x57eca6cbc7b0] = 0;

		*node[0x57eca6cbc7e0] = 1;

		*node[0x57eca6cbc810] = ;;

		*node[0x57eca6cbc840] = =;

		*node[0x57eca6cbc870] = 8;

		*node[0x57eca6cbc8a0] = 1;

		*node[0x57eca6cbc8d0] = ;;

		*node[0x57eca6cbc900] = =;

		*node[0x57eca6cbc930] = 9;

		*node[0x57eca6cbc960] = 1000;

		*node[0x57eca6cbc990] = ;;

		*node[0x57eca6cbc9c0] = if;

		*node[0x57eca6cbc9f0] = op_no;

		*node[0x57eca6cbca20] = ==;

		*node[0x57eca6cbca50] = 1;

		*node[0x57eca6cbca80] = 0;

		*node[0x57eca6cbcab0] = ;;

		*node[0x57eca6cbcae0] = if;

		*node[0x57eca6cbcb10] = op_no;

		*node[0x57eca6cbcb40] = ==;

		*node[0x57eca6cbcb70] = 2;

		*node[0x57eca6cbcba0] = 0;

		*node[0x57eca6cbcbd0] = ;;

		*node[0x57eca6cbcc00] = print;

		*node[0x57eca6cbcc30] = 9;

		*node[0x57eca6cbcc60] = else;

		*node[0x57eca6cbcc90] = op_no;

		*node[0x57eca6cbccc0] = ;;

		*node[0x57eca6cbccf0] = print;

		*node[0x57eca6cbcd20] = 7;

		*node[0x57eca6cbcd50] = else;

		*node[0x57eca6cbcd80] = op_no;

		*node[0x57eca6cbcdb0] = ;;

		*node[0x57eca6cbcde0] = =;

		*node[0x57eca6cbce10] = 10;

		*node[0x57eca6cbce40] = /;

		*node[0x57eca6cbce70] = -;

		*node[0x57eca6cbcea0] = 0;

		*node[0x57eca6cbced0] = 2;

		*node[0x57eca6cbcf00] = 1;

		*node[0x57eca6cbcf30] = ;;

		*node[0x57eca6cbcf60] = print;

		*node[0x57eca6cbcf90] = 8;

		*node[0x57eca6cbcfc0] = ;;

		*node[0x57eca6cbcff0] = print;

		*node[0x57eca6cbd020] = 10;

		*node[0x57eca6cbd050] = ;;

		*node[0x57eca6cbd080] = return;

		*node[0x57eca6cbd0b0] = 0;

		*node[0x57eca6cbd0e0] = ;;

		*node[0x57eca6cbd110] = 6;

		*node[0x57eca6cbd140] = 1;

		*node[0x57eca6cbd170] = 2;

		*node[0x57eca6cbd1a0] = 3;

		*node[0x57eca6cbd1d0] = ;;

		*node[0x57eca6cbd200] = =;

		*node[0x57eca6cbd230] = 7;

		*node[0x57eca6cbd260] = -;

		*node[0x57eca6cbd290] = 0;

		*node[0x57eca6cbd2c0] = 1;

		*node[0x57eca6cbd2f0] = ;;

		*node[0x57eca6cbd320] = =;

		*node[0x57eca6cbd350] = 8;

		*node[0x57eca6cbd380] = 1;

		*node[0x57eca6cbd3b0] = ;;

		*node[0x57eca6cbd3e0] = =;

		*node[0x57eca6cbd410] = 11;

		*node[0x57eca6cbd440] = 2;

		*node[0x57eca6cbd470] = ;;

		*node[0x57eca6cbd4a0] = if;

		*node[0x57eca6cbd4d0] = op_no;

		*node[0x57eca6cbd500] = ==;

		*node[0x57eca6cbd530] = 3;

		*node[0x57eca6cbd560] = 0;

		*node[0x57eca6cbd590] = ;;

		*node[0x57eca6cbd5c0] = =;

		*node[0x57eca6cbd5f0] = 12;

		*node[0x57eca6cbd620] = 0;

		*node[0x57eca6cbd650] = ;;

		*node[0x57eca6cbd680] = =;

		*node[0x57eca6cbd6b0] = 13;

		*node[0x57eca6cbd6e0] = /;

		*node[0x57eca6cbd710] = -;

		*node[0x57eca6cbd740] = 0;

		*node[0x57eca6cbd770] = 2;

		*node[0x57eca6cbd7a0] = 1;

		*node[0x57eca6cbd7d0] = ;;

		*node[0x57eca6cbd800] = print;

		*node[0x57eca6cbd830] = 11;

		*node[0x57eca6cbd860] = ;;

		*node[0x57eca6cbd890] = print;

		*node[0x57eca6cbd8c0] = 12;

		*node[0x57eca6cbd8f0] = 13;

		*node[0x57eca6cbd920] = else;

		*node[0x57eca6cbd950] = op_no;

		*node[0x57eca6cbd980] = ;;

		*node[0x57eca6cbd9b0] = =;

		*node[0x57eca6cbd9e0] = 14;

		*node[0x57eca6cbda10] = -;

		*node[0x57eca6cbda40] = *;

		*node[0x57eca6cbda70] = 2;

		*node[0x57eca6cbdaa0] = 2;

		*node[0x57eca6cbdad0] = *;

		*node[0x57eca6cbdb00] = *;

		*node[0x57eca6cbdb30] = 4;

		*node[0x57eca6cbdb60] = 1;

		*node[0x57eca6cbdb90] = 3;

		*node[0x57eca6cbdbc0] = ;;

		*node[0x57eca6cbdbf0] = if;

		*node[0x57eca6cbdc20] = op_no;

		*node[0x57eca6cbdc50] = >;

		*node[0x57eca6cbdc80] = 14;

		*node[0x57eca6cbdcb0] = 0;

		*node[0x57eca6cbdce0] = ;;

		*node[0x57eca6cbdd10] = =;

		*node[0x57eca6cbdd40] = 15;

		*node[0x57eca6cbdd70] = sqrt;

		*node[0x57eca6cbdda0] = 14;

		*node[0x57eca6cbddd0] = ;;

		*node[0x57eca6cbde00] = =;

		*node[0x57eca6cbde30] = 12;

		*node[0x57eca6cbde60] = /;

		*node[0x57eca6cbde90] = -;

		*node[0x57eca6cbdec0] = -;

		*node[0x57eca6cbdef0] = 0;

		*node[0x57eca6cbdf20] = 2;

		*node[0x57eca6cbdf50] = 15;

		*node[0x57eca6cbdf80] = *;

		*node[0x57eca6cbdfb0] = 2;

		*node[0x57eca6cbdfe0] = 1;

		*node[0x57eca6cbe010] = ;;

		*node[0x57eca6cbe040] = =;

		*node[0x57eca6cbe070] = 13;

		*node[0x57eca6cbe0a0] = /;

		*node[0x57eca6cbe0d0] = +;

		*node[0x57eca6cbe100] = -;

		*node[0x57eca6cbe130] = 0;

		*node[0x57eca6cbe160] = 2;

		*node[0x57eca6cbe190] = 15;

		*node[0x57eca6cbe1c0] = *;

		*node[0x57eca6cbe1f0] = 2;

		*node[0x57eca6cbe220] = 1;

		*node[0x57eca6cbe250] = ;;

		*node[0x57eca6cbe280] = print;

		*node[0x57eca6cbe2b0] = 11;

		*node[0x57eca6cbe2e0] = ;;

		*node[0x57eca6cbe310] = print;

		*node[0x57eca6cbe340] = 12;

		*node[0x57eca6cbe370] = 13;

		*node[0x57eca6cbe3a0] = elseif;

		*node[0x57eca6cbe3d0] = op_no;

		*node[0x57eca6cbe400] = ==;

		*node[0x57eca6cbe430] = 14;

		*node[0x57eca6cbe460] = 0;

		*node[0x57eca6cbe490] = ;;

		*node[0x57eca6cbe4c0] = =;

		*node[0x57eca6cbe4f0] = 10;

		*node[0x57eca6cbe520] = /;

		*node[0x57eca6cbe550] = -;

		*node[0x57eca6cbe580] = 0;

		*node[0x57eca6cbe5b0] = 2;

		*node[0x57eca6cbe5e0] = *;

		*node[0x57eca6cbe610] = 2;

		*node[0x57eca6cbe640] = 1;

		*node[0x57eca6cbe670] = ;;

		*node[0x57eca6cbe6a0] = print;

		*node[0x57eca6cbe6d0] = 8;

		*node[0x57eca6cbe700] = ;;

		*node[0x57eca6cbe730] = print;

		*node[0x57eca6cbe760] = 10;

		*node[0x57eca6cbe790] = else;

		*node[0x57eca6cbe7c0] = op_no;

		*node[0x57eca6cbe7f0] = ;;

		*node[0x57eca6cbe820] = print;

		*node[0x57eca6cbe850] = 7;

		*node[0x57eca6cbe880] = ;;

		*node[0x57eca6cbe8b0] = return;

		*node[0x57eca6cbe8e0] = 0;

		*node[0x57eca6cbe910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc4087b190] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e9d594a1fd0] = ;;

		*node[0x5e9d594a2000] = 0;

		*node[0x5e9d594a2030] = ;;

		*node[0x5e9d594a2060] = input;

		*node[0x5e9d594a2090] = 1;

		*node[0x5e9d594a20c0] = 2;

		*node[0x5e9d594a20f0] = 3;

		*node[0x5e9d594a2120] = ;;

		*node[0x5e9d594a2180] = 1;

		*node[0x5e9d594a21b0] = 2;

		*node[0x5e9d594a21e0] = 3;

		*node[0x5e9d594a2210] = ;;

		*node[0x5e9d594a2240] = 4;

		*node[0x5e9d594a2270] = 1;

		*node[0x5e9d594a22a0] = 2;

		*node[0x5e9d594a22d0] = 3;

		*node[0x5e9d594a2300] = ;;

		*node[0x5e9d594a2330] = if;

		*node[0x5e9d594a2360] = op_no;

		*node[0x5e9d594a2390] = ==;

		*node[0x5e9d594a23c0] = 1;

		*node[0x5e9d594a23f0] = 0;

		*node[0x5e9d594a2420] = ;;

		*node[0x5e9d594a2480] = 2;

		*node[0x5e9d594a24b0] = 3;

		*node[0x5e9d594a24e0] = else;

		*node[0x5e9d594a2510] = op_no;

		*node[0x5e9d594a2540] = ;;

		*node[0x5e9d594a25a0] = 1;

		*node[0x5e9d594a25d0] = 2;

		*node[0x5e9d594a2600] = 3;

		*node[0x5e9d594a2630] = ;;

		*node[0x5e9d594a2660] = 5;

		*node[0x5e9d594a2690] = 1;

		*node[0x5e9d594a26c0] = 2;

		*node[0x5e9d594a26f0] = ;;

		*node[0x5e9d594a2720] = =;

		*node[0x5e9d594a2750] = 7;

		*node[0x5e9d594a2780] = -;

		*node[0x5e9d594a27b0] = 0;

		*node[0x5e9d594a27e0] = 1;

		*node[0x5e9d594a2810] = ;;

		*node[0x5e9d594a2840] = =;

		*node[0x5e9d594a2870] = 8;

		*node[0x5e9d594a28a0] = 1;

		*node[0x5e9d594a28d0] = ;;

		*node[0x5e9d594a2900] = =;

		*node[0x5e9d594a2930] = 9;

		*node[0x5e9d594a2960] = 1000;

		*node[0x5e9d594a2990] = ;;

		*node[0x5e9d594a29c0] = if;

		*node[0x5e9d594a29f0] = op_no;

		*node[0x5e9d594a2a20] = ==;

		*node[0x5e9d594a2a50] = 1;

		*node[0x5e9d594a2a80] = 0;

		*node[0x5e9d594a2ab0] = ;;

		*node[0x5e9d594a2ae0] = if;

		*node[0x5e9d594a2b10] = op_no;

		*node[0x5e9d594a2b40] = ==;

		*node[0x5e9d594a2b70] = 2;

		*node[0x5e9d594a2ba0] = 0;

		*node[0x5e9d594a2bd0] = ;;

		*node[0x5e9d594a2c00] = print;

		*node[0x5e9d594a2c30] = 9;

		*node[0x5e9d594a2c60] = else;

		*node[0x5e9d594a2c90] = op_no;

		*node[0x5e9d594a2cc0] = ;;

		*node[0x5e9d594a2cf0] = print;

		*node[0x5e9d594a2d20] = 7;

		*node[0x5e9d594a2d50] = else;

		*node[0x5e9d594a2d80] = op_no;

		*node[0x5e9d594a2db0] = ;;

		*node[0x5e9d594a2de0] = =;

		*node[0x5e9d594a2e10] = 10;

		*node[0x5e9d594a2e40] = /;

		*node[0x5e9d594a2e70] = -;

		*node[0x5e9d594a2ea0] = 0;

		*node[0x5e9d594a2ed0] = 2;

		*node[0x5e9d594a2f00] = 1;

		*node[0x5e9d594a2f30] = ;;

		*node[0x5e9d594a2f60] = print;

		*node[0x5e9d594a2f90] = 8;

		*node[0x5e9d594a2fc0] = ;;

		*node[0x5e9d594a2ff0] = print;

		*node[0x5e9d594a3020] = 10;

		*node[0x5e9d594a3050] = ;;

		*node[0x5e9d594a3080] = return;

		*node[0x5e9d594a30b0] = 0;

		*node[0x5e9d594a30e0] = ;;

		*node[0x5e9d594a3110] = 6;

		*node[0x5e9d594a3140] = 1;

		*node[0x5e9d594a3170] = 2;

		*node[0x5e9d594a31a0] = 3;

		*node[0x5e9d594a31d0] = ;;

		*node[0x5e9d594a3200] = =;

		*node[0x5e9d594a3230] = 7;

		*node[0x5e9d594a3260] = -;

		*node[0x5e9d594a3290] = 0;

		*node[0x5e9d594a32c0] = 1;

		*node[0x5e9d594a32f0] = ;;

		*node[0x5e9d594a3320] = =;

		*node[0x5e9d594a3350] = 8;

		*node[0x5e9d594a3380] = 1;

		*node[0x5e9d594a33b0] = ;;

		*node[0x5e9d594a33e0] = =;

		*node[0x5e9d594a3410] = 11;

		*node[0x5e9d594a3440] = 2;

		*node[0x5e9d594a3470] = ;;

		*node[0x5e9d594a34a0] = if;

		*node[0x5e9d594a34d0] = op_no;

		*node[0x5e9d594a3500] = ==;

		*node[0x5e9d594a3530] = 3;

		*node[0x5e9d594a3560] = 0;

		*node[0x5e9d594a3590] = ;;

		*node[0x5e9d594a35c0] = =;

		*node[0x5e9d594a35f0] = 12;

		*node[0x5e9d594a3620] = 0;

		*node[0x5e9d594a3650] = ;;

		*node[0x5e9d594a3680] = =;

		*node[0x5e9d594a36b0] = 13;

		*node[0x5e9d594a36e0] = /;

		*node[0x5e9d594a3710] = -;

		*node[0x5e9d594a3740] = 0;

		*node[0x5e9d594a3770] = 2;

		*node[0x5e9d594a37a0] = 1;

		*node[0x5e9d594a37d0] = ;;

		*node[0x5e9d594a3800] = print;

		*node[0x5e9d594a3830] = 11;

		*node[0x5e9d594a3860] = ;;

		*node[0x5e9d594a3890] = print;

		*node[0x5e9d594a38c0] = 12;

		*node[0x5e9d594a38f0] = 13;

		*node[0x5e9d594a3920] = else;

		*node[0x5e9d594a3950] = op_no;

		*node[0x5e9d594a3980] = ;;

		*node[0x5e9d594a39b0] = =;

		*node[0x5e9d594a39e0] = 14;

		*node[0x5e9d594a3a10] = -;

		*node[0x5e9d594a3a40] = *;

		*node[0x5e9d594a3a70] = 2;

		*node[0x5e9d594a3aa0] = 2;

		*node[0x5e9d594a3ad0] = *;

		*node[0x5e9d594a3b00] = *;

		*node[0x5e9d594a3b30] = 4;

		*node[0x5e9d594a3b60] = 1;

		*node[0x5e9d594a3b90] = 3;

		*node[0x5e9d594a3bc0] = ;;

		*node[0x5e9d594a3bf0] = if;

		*node[0x5e9d594a3c20] = op_no;

		*node[0x5e9d594a3c50] = >;

		*node[0x5e9d594a3c80] = 14;

		*node[0x5e9d594a3cb0] = 0;

		*node[0x5e9d594a3ce0] = ;;

		*node[0x5e9d594a3d10] = =;

		*node[0x5e9d594a3d40] = 15;

		*node[0x5e9d594a3d70] = sqrt;

		*node[0x5e9d594a3da0] = 14;

		*node[0x5e9d594a3dd0] = ;;

		*node[0x5e9d594a3e00] = =;

		*node[0x5e9d594a3e30] = 12;

		*node[0x5e9d594a3e60] = /;

		*node[0x5e9d594a3e90] = -;

		*node[0x5e9d594a3ec0] = -;

		*node[0x5e9d594a3ef0] = 0;

		*node[0x5e9d594a3f20] = 2;

		*node[0x5e9d594a3f50] = 15;

		*node[0x5e9d594a3f80] = *;

		*node[0x5e9d594a3fb0] = 2;

		*node[0x5e9d594a3fe0] = 1;

		*node[0x5e9d594a4010] = ;;

		*node[0x5e9d594a4040] = =;

		*node[0x5e9d594a4070] = 13;

		*node[0x5e9d594a40a0] = /;

		*node[0x5e9d594a40d0] = +;

		*node[0x5e9d594a4100] = -;

		*node[0x5e9d594a4130] = 0;

		*node[0x5e9d594a4160] = 2;

		*node[0x5e9d594a4190] = 15;

		*node[0x5e9d594a41c0] = *;

		*node[0x5e9d594a41f0] = 2;

		*node[0x5e9d594a4220] = 1;

		*node[0x5e9d594a4250] = ;;

		*node[0x5e9d594a4280] = print;

		*node[0x5e9d594a42b0] = 11;

		*node[0x5e9d594a42e0] = ;;

		*node[0x5e9d594a4310] = print;

		*node[0x5e9d594a4340] = 12;

		*node[0x5e9d594a4370] = 13;

		*node[0x5e9d594a43a0] = elseif;

		*node[0x5e9d594a43d0] = op_no;

		*node[0x5e9d594a4400] = ==;

		*node[0x5e9d594a4430] = 14;

		*node[0x5e9d594a4460] = 0;

		*node[0x5e9d594a4490] = ;;

		*node[0x5e9d594a44c0] = =;

		*node[0x5e9d594a44f0] = 10;

		*node[0x5e9d594a4520] = /;

		*node[0x5e9d594a4550] = -;

		*node[0x5e9d594a4580] = 0;

		*node[0x5e9d594a45b0] = 2;

		*node[0x5e9d594a45e0] = *;

		*node[0x5e9d594a4610] = 2;

		*node[0x5e9d594a4640] = 1;

		*node[0x5e9d594a4670] = ;;

		*node[0x5e9d594a46a0] = print;

		*node[0x5e9d594a46d0] = 8;

		*node[0x5e9d594a4700] = ;;

		*node[0x5e9d594a4730] = print;

		*node[0x5e9d594a4760] = 10;

		*node[0x5e9d594a4790] = else;

		*node[0x5e9d594a47c0] = op_no;

		*node[0x5e9d594a47f0] = ;;

		*node[0x5e9d594a4820] = print;

		*node[0x5e9d594a4850] = 7;

		*node[0x5e9d594a4880] = ;;

		*node[0x5e9d594a48b0] = return;

		*node[0x5e9d594a48e0] = 0;

		*node[0x5e9d594a4910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff232c2690] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5d81162cbfd0] = ;;

		*node[0x5d81162cc000] = 0;

		*node[0x5d81162cc030] = ;;

		*node[0x5d81162cc060] = input;

		*node[0x5d81162cc090] = 1;

		*node[0x5d81162cc0c0] = 2;

		*node[0x5d81162cc0f0] = 3;

		*node[0x5d81162cc120] = ;;

		*node[0x5d81162cc180] = 1;

		*node[0x5d81162cc1b0] = 2;

		*node[0x5d81162cc1e0] = 3;

		*node[0x5d81162cc210] = ;;

		*node[0x5d81162cc240] = 4;

		*node[0x5d81162cc270] = 1;

		*node[0x5d81162cc2a0] = 2;

		*node[0x5d81162cc2d0] = 3;

		*node[0x5d81162cc300] = ;;

		*node[0x5d81162cc330] = if;

		*node[0x5d81162cc360] = op_no;

		*node[0x5d81162cc390] = ==;

		*node[0x5d81162cc3c0] = 1;

		*node[0x5d81162cc3f0] = 0;

		*node[0x5d81162cc420] = ;;

		*node[0x5d81162cc480] = 2;

		*node[0x5d81162cc4b0] = 3;

		*node[0x5d81162cc4e0] = else;

		*node[0x5d81162cc510] = op_no;

		*node[0x5d81162cc540] = ;;

		*node[0x5d81162cc5a0] = 1;

		*node[0x5d81162cc5d0] = 2;

		*node[0x5d81162cc600] = 3;

		*node[0x5d81162cc630] = ;;

		*node[0x5d81162cc660] = 5;

		*node[0x5d81162cc690] = 1;

		*node[0x5d81162cc6c0] = 2;

		*node[0x5d81162cc6f0] = ;;

		*node[0x5d81162cc720] = =;

		*node[0x5d81162cc750] = 7;

		*node[0x5d81162cc780] = -;

		*node[0x5d81162cc7b0] = 0;

		*node[0x5d81162cc7e0] = 1;

		*node[0x5d81162cc810] = ;;

		*node[0x5d81162cc840] = =;

		*node[0x5d81162cc870] = 8;

		*node[0x5d81162cc8a0] = 1;

		*node[0x5d81162cc8d0] = ;;

		*node[0x5d81162cc900] = =;

		*node[0x5d81162cc930] = 9;

		*node[0x5d81162cc960] = 1000;

		*node[0x5d81162cc990] = ;;

		*node[0x5d81162cc9c0] = if;

		*node[0x5d81162cc9f0] = op_no;

		*node[0x5d81162cca20] = ==;

		*node[0x5d81162cca50] = 1;

		*node[0x5d81162cca80] = 0;

		*node[0x5d81162ccab0] = ;;

		*node[0x5d81162ccae0] = if;

		*node[0x5d81162ccb10] = op_no;

		*node[0x5d81162ccb40] = ==;

		*node[0x5d81162ccb70] = 2;

		*node[0x5d81162ccba0] = 0;

		*node[0x5d81162ccbd0] = ;;

		*node[0x5d81162ccc00] = print;

		*node[0x5d81162ccc30] = 9;

		*node[0x5d81162ccc60] = else;

		*node[0x5d81162ccc90] = op_no;

		*node[0x5d81162cccc0] = ;;

		*node[0x5d81162cccf0] = print;

		*node[0x5d81162ccd20] = 7;

		*node[0x5d81162ccd50] = else;

		*node[0x5d81162ccd80] = op_no;

		*node[0x5d81162ccdb0] = ;;

		*node[0x5d81162ccde0] = =;

		*node[0x5d81162cce10] = 10;

		*node[0x5d81162cce40] = /;

		*node[0x5d81162cce70] = -;

		*node[0x5d81162ccea0] = 0;

		*node[0x5d81162cced0] = 2;

		*node[0x5d81162ccf00] = 1;

		*node[0x5d81162ccf30] = ;;

		*node[0x5d81162ccf60] = print;

		*node[0x5d81162ccf90] = 8;

		*node[0x5d81162ccfc0] = ;;

		*node[0x5d81162ccff0] = print;

		*node[0x5d81162cd020] = 10;

		*node[0x5d81162cd050] = ;;

		*node[0x5d81162cd080] = return;

		*node[0x5d81162cd0b0] = 0;

		*node[0x5d81162cd0e0] = ;;

		*node[0x5d81162cd110] = 6;

		*node[0x5d81162cd140] = 1;

		*node[0x5d81162cd170] = 2;

		*node[0x5d81162cd1a0] = 3;

		*node[0x5d81162cd1d0] = ;;

		*node[0x5d81162cd200] = =;

		*node[0x5d81162cd230] = 7;

		*node[0x5d81162cd260] = -;

		*node[0x5d81162cd290] = 0;

		*node[0x5d81162cd2c0] = 1;

		*node[0x5d81162cd2f0] = ;;

		*node[0x5d81162cd320] = =;

		*node[0x5d81162cd350] = 8;

		*node[0x5d81162cd380] = 1;

		*node[0x5d81162cd3b0] = ;;

		*node[0x5d81162cd3e0] = =;

		*node[0x5d81162cd410] = 11;

		*node[0x5d81162cd440] = 2;

		*node[0x5d81162cd470] = ;;

		*node[0x5d81162cd4a0] = if;

		*node[0x5d81162cd4d0] = op_no;

		*node[0x5d81162cd500] = ==;

		*node[0x5d81162cd530] = 3;

		*node[0x5d81162cd560] = 0;

		*node[0x5d81162cd590] = ;;

		*node[0x5d81162cd5c0] = =;

		*node[0x5d81162cd5f0] = 12;

		*node[0x5d81162cd620] = 0;

		*node[0x5d81162cd650] = ;;

		*node[0x5d81162cd680] = =;

		*node[0x5d81162cd6b0] = 13;

		*node[0x5d81162cd6e0] = /;

		*node[0x5d81162cd710] = -;

		*node[0x5d81162cd740] = 0;

		*node[0x5d81162cd770] = 2;

		*node[0x5d81162cd7a0] = 1;

		*node[0x5d81162cd7d0] = ;;

		*node[0x5d81162cd800] = print;

		*node[0x5d81162cd830] = 11;

		*node[0x5d81162cd860] = ;;

		*node[0x5d81162cd890] = print;

		*node[0x5d81162cd8c0] = 12;

		*node[0x5d81162cd8f0] = 13;

		*node[0x5d81162cd920] = else;

		*node[0x5d81162cd950] = op_no;

		*node[0x5d81162cd980] = ;;

		*node[0x5d81162cd9b0] = =;

		*node[0x5d81162cd9e0] = 14;

		*node[0x5d81162cda10] = -;

		*node[0x5d81162cda40] = *;

		*node[0x5d81162cda70] = 2;

		*node[0x5d81162cdaa0] = 2;

		*node[0x5d81162cdad0] = *;

		*node[0x5d81162cdb00] = *;

		*node[0x5d81162cdb30] = 4;

		*node[0x5d81162cdb60] = 1;

		*node[0x5d81162cdb90] = 3;

		*node[0x5d81162cdbc0] = ;;

		*node[0x5d81162cdbf0] = if;

		*node[0x5d81162cdc20] = op_no;

		*node[0x5d81162cdc50] = >;

		*node[0x5d81162cdc80] = 14;

		*node[0x5d81162cdcb0] = 0;

		*node[0x5d81162cdce0] = ;;

		*node[0x5d81162cdd10] = =;

		*node[0x5d81162cdd40] = 15;

		*node[0x5d81162cdd70] = sqrt;

		*node[0x5d81162cdda0] = 14;

		*node[0x5d81162cddd0] = ;;

		*node[0x5d81162cde00] = =;

		*node[0x5d81162cde30] = 12;

		*node[0x5d81162cde60] = /;

		*node[0x5d81162cde90] = -;

		*node[0x5d81162cdec0] = -;

		*node[0x5d81162cdef0] = 0;

		*node[0x5d81162cdf20] = 2;

		*node[0x5d81162cdf50] = 15;

		*node[0x5d81162cdf80] = *;

		*node[0x5d81162cdfb0] = 2;

		*node[0x5d81162cdfe0] = 1;

		*node[0x5d81162ce010] = ;;

		*node[0x5d81162ce040] = =;

		*node[0x5d81162ce070] = 13;

		*node[0x5d81162ce0a0] = /;

		*node[0x5d81162ce0d0] = +;

		*node[0x5d81162ce100] = -;

		*node[0x5d81162ce130] = 0;

		*node[0x5d81162ce160] = 2;

		*node[0x5d81162ce190] = 15;

		*node[0x5d81162ce1c0] = *;

		*node[0x5d81162ce1f0] = 2;

		*node[0x5d81162ce220] = 1;

		*node[0x5d81162ce250] = ;;

		*node[0x5d81162ce280] = print;

		*node[0x5d81162ce2b0] = 11;

		*node[0x5d81162ce2e0] = ;;

		*node[0x5d81162ce310] = print;

		*node[0x5d81162ce340] = 12;

		*node[0x5d81162ce370] = 13;

		*node[0x5d81162ce3a0] = elseif;

		*node[0x5d81162ce3d0] = op_no;

		*node[0x5d81162ce400] = ==;

		*node[0x5d81162ce430] = 14;

		*node[0x5d81162ce460] = 0;

		*node[0x5d81162ce490] = ;;

		*node[0x5d81162ce4c0] = =;

		*node[0x5d81162ce4f0] = 10;

		*node[0x5d81162ce520] = /;

		*node[0x5d81162ce550] = -;

		*node[0x5d81162ce580] = 0;

		*node[0x5d81162ce5b0] = 2;

		*node[0x5d81162ce5e0] = *;

		*node[0x5d81162ce610] = 2;

		*node[0x5d81162ce640] = 1;

		*node[0x5d81162ce670] = ;;

		*node[0x5d81162ce6a0] = print;

		*node[0x5d81162ce6d0] = 8;

		*node[0x5d81162ce700] = ;;

		*node[0x5d81162ce730] = print;

		*node[0x5d81162ce760] = 10;

		*node[0x5d81162ce790] = else;

		*node[0x5d81162ce7c0] = op_no;

		*node[0x5d81162ce7f0] = ;;

		*node[0x5d81162ce820] = print;

		*node[0x5d81162ce850] = 7;

		*node[0x5d81162ce880] = ;;

		*node[0x5d81162ce8b0] = return;

		*node[0x5d81162ce8e0] = 0;

		*node[0x5d81162ce910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd0fdcf080] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5c56c07c5fd0] = ;;

		*node[0x5c56c07c6000] = 0;

		*node[0x5c56c07c6030] = ;;

		*node[0x5c56c07c6060] = input;

		*node[0x5c56c07c6090] = 1;

		*node[0x5c56c07c60c0] = 2;

		*node[0x5c56c07c60f0] = 3;

		*node[0x5c56c07c6120] = ;;

		*node[0x5c56c07c6180] = 1;

		*node[0x5c56c07c61b0] = 2;

		*node[0x5c56c07c61e0] = 3;

		*node[0x5c56c07c6210] = ;;

		*node[0x5c56c07c6240] = 4;

		*node[0x5c56c07c6270] = 1;

		*node[0x5c56c07c62a0] = 2;

		*node[0x5c56c07c62d0] = 3;

		*node[0x5c56c07c6300] = ;;

		*node[0x5c56c07c6330] = if;

		*node[0x5c56c07c6360] = op_no;

		*node[0x5c56c07c6390] = ==;

		*node[0x5c56c07c63c0] = 1;

		*node[0x5c56c07c63f0] = 0;

		*node[0x5c56c07c6420] = ;;

		*node[0x5c56c07c6480] = 2;

		*node[0x5c56c07c64b0] = 3;

		*node[0x5c56c07c64e0] = else;

		*node[0x5c56c07c6510] = op_no;

		*node[0x5c56c07c6540] = ;;

		*node[0x5c56c07c65a0] = 1;

		*node[0x5c56c07c65d0] = 2;

		*node[0x5c56c07c6600] = 3;

		*node[0x5c56c07c6630] = ;;

		*node[0x5c56c07c6660] = 5;

		*node[0x5c56c07c6690] = 1;

		*node[0x5c56c07c66c0] = 2;

		*node[0x5c56c07c66f0] = ;;

		*node[0x5c56c07c6720] = =;

		*node[0x5c56c07c6750] = 7;

		*node[0x5c56c07c6780] = -;

		*node[0x5c56c07c67b0] = 0;

		*node[0x5c56c07c67e0] = 1;

		*node[0x5c56c07c6810] = ;;

		*node[0x5c56c07c6840] = =;

		*node[0x5c56c07c6870] = 8;

		*node[0x5c56c07c68a0] = 1;

		*node[0x5c56c07c68d0] = ;;

		*node[0x5c56c07c6900] = =;

		*node[0x5c56c07c6930] = 9;

		*node[0x5c56c07c6960] = 1000;

		*node[0x5c56c07c6990] = ;;

		*node[0x5c56c07c69c0] = if;

		*node[0x5c56c07c69f0] = op_no;

		*node[0x5c56c07c6a20] = ==;

		*node[0x5c56c07c6a50] = 1;

		*node[0x5c56c07c6a80] = 0;

		*node[0x5c56c07c6ab0] = ;;

		*node[0x5c56c07c6ae0] = if;

		*node[0x5c56c07c6b10] = op_no;

		*node[0x5c56c07c6b40] = ==;

		*node[0x5c56c07c6b70] = 2;

		*node[0x5c56c07c6ba0] = 0;

		*node[0x5c56c07c6bd0] = ;;

		*node[0x5c56c07c6c00] = print;

		*node[0x5c56c07c6c30] = 9;

		*node[0x5c56c07c6c60] = else;

		*node[0x5c56c07c6c90] = op_no;

		*node[0x5c56c07c6cc0] = ;;

		*node[0x5c56c07c6cf0] = print;

		*node[0x5c56c07c6d20] = 7;

		*node[0x5c56c07c6d50] = else;

		*node[0x5c56c07c6d80] = op_no;

		*node[0x5c56c07c6db0] = ;;

		*node[0x5c56c07c6de0] = =;

		*node[0x5c56c07c6e10] = 10;

		*node[0x5c56c07c6e40] = /;

		*node[0x5c56c07c6e70] = -;

		*node[0x5c56c07c6ea0] = 0;

		*node[0x5c56c07c6ed0] = 2;

		*node[0x5c56c07c6f00] = 1;

		*node[0x5c56c07c6f30] = ;;

		*node[0x5c56c07c6f60] = print;

		*node[0x5c56c07c6f90] = 8;

		*node[0x5c56c07c6fc0] = ;;

		*node[0x5c56c07c6ff0] = print;

		*node[0x5c56c07c7020] = 10;

		*node[0x5c56c07c7050] = ;;

		*node[0x5c56c07c7080] = return;

		*node[0x5c56c07c70b0] = 0;

		*node[0x5c56c07c70e0] = ;;

		*node[0x5c56c07c7110] = 6;

		*node[0x5c56c07c7140] = 1;

		*node[0x5c56c07c7170] = 2;

		*node[0x5c56c07c71a0] = 3;

		*node[0x5c56c07c71d0] = ;;

		*node[0x5c56c07c7200] = =;

		*node[0x5c56c07c7230] = 7;

		*node[0x5c56c07c7260] = -;

		*node[0x5c56c07c7290] = 0;

		*node[0x5c56c07c72c0] = 1;

		*node[0x5c56c07c72f0] = ;;

		*node[0x5c56c07c7320] = =;

		*node[0x5c56c07c7350] = 8;

		*node[0x5c56c07c7380] = 1;

		*node[0x5c56c07c73b0] = ;;

		*node[0x5c56c07c73e0] = =;

		*node[0x5c56c07c7410] = 11;

		*node[0x5c56c07c7440] = 2;

		*node[0x5c56c07c7470] = ;;

		*node[0x5c56c07c74a0] = if;

		*node[0x5c56c07c74d0] = op_no;

		*node[0x5c56c07c7500] = ==;

		*node[0x5c56c07c7530] = 3;

		*node[0x5c56c07c7560] = 0;

		*node[0x5c56c07c7590] = ;;

		*node[0x5c56c07c75c0] = =;

		*node[0x5c56c07c75f0] = 12;

		*node[0x5c56c07c7620] = 0;

		*node[0x5c56c07c7650] = ;;

		*node[0x5c56c07c7680] = =;

		*node[0x5c56c07c76b0] = 13;

		*node[0x5c56c07c76e0] = /;

		*node[0x5c56c07c7710] = -;

		*node[0x5c56c07c7740] = 0;

		*node[0x5c56c07c7770] = 2;

		*node[0x5c56c07c77a0] = 1;

		*node[0x5c56c07c77d0] = ;;

		*node[0x5c56c07c7800] = print;

		*node[0x5c56c07c7830] = 11;

		*node[0x5c56c07c7860] = ;;

		*node[0x5c56c07c7890] = print;

		*node[0x5c56c07c78c0] = 12;

		*node[0x5c56c07c78f0] = 13;

		*node[0x5c56c07c7920] = else;

		*node[0x5c56c07c7950] = op_no;

		*node[0x5c56c07c7980] = ;;

		*node[0x5c56c07c79b0] = =;

		*node[0x5c56c07c79e0] = 14;

		*node[0x5c56c07c7a10] = -;

		*node[0x5c56c07c7a40] = *;

		*node[0x5c56c07c7a70] = 2;

		*node[0x5c56c07c7aa0] = 2;

		*node[0x5c56c07c7ad0] = *;

		*node[0x5c56c07c7b00] = *;

		*node[0x5c56c07c7b30] = 4;

		*node[0x5c56c07c7b60] = 1;

		*node[0x5c56c07c7b90] = 3;

		*node[0x5c56c07c7bc0] = ;;

		*node[0x5c56c07c7bf0] = if;

		*node[0x5c56c07c7c20] = op_no;

		*node[0x5c56c07c7c50] = >;

		*node[0x5c56c07c7c80] = 14;

		*node[0x5c56c07c7cb0] = 0;

		*node[0x5c56c07c7ce0] = ;;

		*node[0x5c56c07c7d10] = =;

		*node[0x5c56c07c7d40] = 15;

		*node[0x5c56c07c7d70] = sqrt;

		*node[0x5c56c07c7da0] = 14;

		*node[0x5c56c07c7dd0] = ;;

		*node[0x5c56c07c7e00] = =;

		*node[0x5c56c07c7e30] = 12;

		*node[0x5c56c07c7e60] = /;

		*node[0x5c56c07c7e90] = -;

		*node[0x5c56c07c7ec0] = -;

		*node[0x5c56c07c7ef0] = 0;

		*node[0x5c56c07c7f20] = 2;

		*node[0x5c56c07c7f50] = 15;

		*node[0x5c56c07c7f80] = *;

		*node[0x5c56c07c7fb0] = 2;

		*node[0x5c56c07c7fe0] = 1;

		*node[0x5c56c07c8010] = ;;

		*node[0x5c56c07c8040] = =;

		*node[0x5c56c07c8070] = 13;

		*node[0x5c56c07c80a0] = /;

		*node[0x5c56c07c80d0] = +;

		*node[0x5c56c07c8100] = -;

		*node[0x5c56c07c8130] = 0;

		*node[0x5c56c07c8160] = 2;

		*node[0x5c56c07c8190] = 15;

		*node[0x5c56c07c81c0] = *;

		*node[0x5c56c07c81f0] = 2;

		*node[0x5c56c07c8220] = 1;

		*node[0x5c56c07c8250] = ;;

		*node[0x5c56c07c8280] = print;

		*node[0x5c56c07c82b0] = 11;

		*node[0x5c56c07c82e0] = ;;

		*node[0x5c56c07c8310] = print;

		*node[0x5c56c07c8340] = 12;

		*node[0x5c56c07c8370] = 13;

		*node[0x5c56c07c83a0] = elseif;

		*node[0x5c56c07c83d0] = op_no;

		*node[0x5c56c07c8400] = ==;

		*node[0x5c56c07c8430] = 14;

		*node[0x5c56c07c8460] = 0;

		*node[0x5c56c07c8490] = ;;

		*node[0x5c56c07c84c0] = =;

		*node[0x5c56c07c84f0] = 10;

		*node[0x5c56c07c8520] = /;

		*node[0x5c56c07c8550] = -;

		*node[0x5c56c07c8580] = 0;

		*node[0x5c56c07c85b0] = 2;

		*node[0x5c56c07c85e0] = *;

		*node[0x5c56c07c8610] = 2;

		*node[0x5c56c07c8640] = 1;

		*node[0x5c56c07c8670] = ;;

		*node[0x5c56c07c86a0] = print;

		*node[0x5c56c07c86d0] = 8;

		*node[0x5c56c07c8700] = ;;

		*node[0x5c56c07c8730] = print;

		*node[0x5c56c07c8760] = 10;

		*node[0x5c56c07c8790] = else;

		*node[0x5c56c07c87c0] = op_no;

		*node[0x5c56c07c87f0] = ;;

		*node[0x5c56c07c8820] = print;

		*node[0x5c56c07c8850] = 7;

		*node[0x5c56c07c8880] = ;;

		*node[0x5c56c07c88b0] = return;

		*node[0x5c56c07c88e0] = 0;

		*node[0x5c56c07c8910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff29e5f8e0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5f080b30efd0] = ;;

		*node[0x5f080b30f000] = 0;

		*node[0x5f080b30f030] = ;;

		*node[0x5f080b30f060] = input;

		*node[0x5f080b30f090] = 1;

		*node[0x5f080b30f0c0] = 2;

		*node[0x5f080b30f0f0] = 3;

		*node[0x5f080b30f120] = ;;

		*node[0x5f080b30f180] = 1;

		*node[0x5f080b30f1b0] = 2;

		*node[0x5f080b30f1e0] = 3;

		*node[0x5f080b30f210] = ;;

		*node[0x5f080b30f240] = 4;

		*node[0x5f080b30f270] = 1;

		*node[0x5f080b30f2a0] = 2;

		*node[0x5f080b30f2d0] = 3;

		*node[0x5f080b30f300] = ;;

		*node[0x5f080b30f330] = if;

		*node[0x5f080b30f360] = op_no;

		*node[0x5f080b30f390] = ==;

		*node[0x5f080b30f3c0] = 1;

		*node[0x5f080b30f3f0] = 0;

		*node[0x5f080b30f420] = ;;

		*node[0x5f080b30f480] = 2;

		*node[0x5f080b30f4b0] = 3;

		*node[0x5f080b30f4e0] = else;

		*node[0x5f080b30f510] = op_no;

		*node[0x5f080b30f540] = ;;

		*node[0x5f080b30f5a0] = 1;

		*node[0x5f080b30f5d0] = 2;

		*node[0x5f080b30f600] = 3;

		*node[0x5f080b30f630] = ;;

		*node[0x5f080b30f660] = 5;

		*node[0x5f080b30f690] = 1;

		*node[0x5f080b30f6c0] = 2;

		*node[0x5f080b30f6f0] = ;;

		*node[0x5f080b30f720] = =;

		*node[0x5f080b30f750] = 7;

		*node[0x5f080b30f780] = -;

		*node[0x5f080b30f7b0] = 0;

		*node[0x5f080b30f7e0] = 1;

		*node[0x5f080b30f810] = ;;

		*node[0x5f080b30f840] = =;

		*node[0x5f080b30f870] = 8;

		*node[0x5f080b30f8a0] = 1;

		*node[0x5f080b30f8d0] = ;;

		*node[0x5f080b30f900] = =;

		*node[0x5f080b30f930] = 9;

		*node[0x5f080b30f960] = 1000;

		*node[0x5f080b30f990] = ;;

		*node[0x5f080b30f9c0] = if;

		*node[0x5f080b30f9f0] = op_no;

		*node[0x5f080b30fa20] = ==;

		*node[0x5f080b30fa50] = 1;

		*node[0x5f080b30fa80] = 0;

		*node[0x5f080b30fab0] = ;;

		*node[0x5f080b30fae0] = if;

		*node[0x5f080b30fb10] = op_no;

		*node[0x5f080b30fb40] = ==;

		*node[0x5f080b30fb70] = 2;

		*node[0x5f080b30fba0] = 0;

		*node[0x5f080b30fbd0] = ;;

		*node[0x5f080b30fc00] = print;

		*node[0x5f080b30fc30] = 9;

		*node[0x5f080b30fc60] = else;

		*node[0x5f080b30fc90] = op_no;

		*node[0x5f080b30fcc0] = ;;

		*node[0x5f080b30fcf0] = print;

		*node[0x5f080b30fd20] = 7;

		*node[0x5f080b30fd50] = else;

		*node[0x5f080b30fd80] = op_no;

		*node[0x5f080b30fdb0] = ;;

		*node[0x5f080b30fde0] = =;

		*node[0x5f080b30fe10] = 10;

		*node[0x5f080b30fe40] = /;

		*node[0x5f080b30fe70] = -;

		*node[0x5f080b30fea0] = 0;

		*node[0x5f080b30fed0] = 2;

		*node[0x5f080b30ff00] = 1;

		*node[0x5f080b30ff30] = ;;

		*node[0x5f080b30ff60] = print;

		*node[0x5f080b30ff90] = 8;

		*node[0x5f080b30ffc0] = ;;

		*node[0x5f080b30fff0] = print;

		*node[0x5f080b310020] = 10;

		*node[0x5f080b310050] = ;;

		*node[0x5f080b310080] = return;

		*node[0x5f080b3100b0] = 0;

		*node[0x5f080b3100e0] = ;;

		*node[0x5f080b310110] = 6;

		*node[0x5f080b310140] = 1;

		*node[0x5f080b310170] = 2;

		*node[0x5f080b3101a0] = 3;

		*node[0x5f080b3101d0] = ;;

		*node[0x5f080b310200] = =;

		*node[0x5f080b310230] = 7;

		*node[0x5f080b310260] = -;

		*node[0x5f080b310290] = 0;

		*node[0x5f080b3102c0] = 1;

		*node[0x5f080b3102f0] = ;;

		*node[0x5f080b310320] = =;

		*node[0x5f080b310350] = 8;

		*node[0x5f080b310380] = 1;

		*node[0x5f080b3103b0] = ;;

		*node[0x5f080b3103e0] = =;

		*node[0x5f080b310410] = 11;

		*node[0x5f080b310440] = 2;

		*node[0x5f080b310470] = ;;

		*node[0x5f080b3104a0] = if;

		*node[0x5f080b3104d0] = op_no;

		*node[0x5f080b310500] = ==;

		*node[0x5f080b310530] = 3;

		*node[0x5f080b310560] = 0;

		*node[0x5f080b310590] = ;;

		*node[0x5f080b3105c0] = =;

		*node[0x5f080b3105f0] = 12;

		*node[0x5f080b310620] = 0;

		*node[0x5f080b310650] = ;;

		*node[0x5f080b310680] = =;

		*node[0x5f080b3106b0] = 13;

		*node[0x5f080b3106e0] = /;

		*node[0x5f080b310710] = -;

		*node[0x5f080b310740] = 0;

		*node[0x5f080b310770] = 2;

		*node[0x5f080b3107a0] = 1;

		*node[0x5f080b3107d0] = ;;

		*node[0x5f080b310800] = print;

		*node[0x5f080b310830] = 11;

		*node[0x5f080b310860] = ;;

		*node[0x5f080b310890] = print;

		*node[0x5f080b3108c0] = 12;

		*node[0x5f080b3108f0] = 13;

		*node[0x5f080b310920] = else;

		*node[0x5f080b310950] = op_no;

		*node[0x5f080b310980] = ;;

		*node[0x5f080b3109b0] = =;

		*node[0x5f080b3109e0] = 14;

		*node[0x5f080b310a10] = -;

		*node[0x5f080b310a40] = *;

		*node[0x5f080b310a70] = 2;

		*node[0x5f080b310aa0] = 2;

		*node[0x5f080b310ad0] = *;

		*node[0x5f080b310b00] = *;

		*node[0x5f080b310b30] = 4;

		*node[0x5f080b310b60] = 1;

		*node[0x5f080b310b90] = 3;

		*node[0x5f080b310bc0] = ;;

		*node[0x5f080b310bf0] = if;

		*node[0x5f080b310c20] = op_no;

		*node[0x5f080b310c50] = >;

		*node[0x5f080b310c80] = 14;

		*node[0x5f080b310cb0] = 0;

		*node[0x5f080b310ce0] = ;;

		*node[0x5f080b310d10] = =;

		*node[0x5f080b310d40] = 15;

		*node[0x5f080b310d70] = sqrt;

		*node[0x5f080b310da0] = 14;

		*node[0x5f080b310dd0] = ;;

		*node[0x5f080b310e00] = =;

		*node[0x5f080b310e30] = 12;

		*node[0x5f080b310e60] = /;

		*node[0x5f080b310e90] = -;

		*node[0x5f080b310ec0] = -;

		*node[0x5f080b310ef0] = 0;

		*node[0x5f080b310f20] = 2;

		*node[0x5f080b310f50] = 15;

		*node[0x5f080b310f80] = *;

		*node[0x5f080b310fb0] = 2;

		*node[0x5f080b310fe0] = 1;

		*node[0x5f080b311010] = ;;

		*node[0x5f080b311040] = =;

		*node[0x5f080b311070] = 13;

		*node[0x5f080b3110a0] = /;

		*node[0x5f080b3110d0] = +;

		*node[0x5f080b311100] = -;

		*node[0x5f080b311130] = 0;

		*node[0x5f080b311160] = 2;

		*node[0x5f080b311190] = 15;

		*node[0x5f080b3111c0] = *;

		*node[0x5f080b3111f0] = 2;

		*node[0x5f080b311220] = 1;

		*node[0x5f080b311250] = ;;

		*node[0x5f080b311280] = print;

		*node[0x5f080b3112b0] = 11;

		*node[0x5f080b3112e0] = ;;

		*node[0x5f080b311310] = print;

		*node[0x5f080b311340] = 12;

		*node[0x5f080b311370] = 13;

		*node[0x5f080b3113a0] = elseif;

		*node[0x5f080b3113d0] = op_no;

		*node[0x5f080b311400] = ==;

		*node[0x5f080b311430] = 14;

		*node[0x5f080b311460] = 0;

		*node[0x5f080b311490] = ;;

		*node[0x5f080b3114c0] = =;

		*node[0x5f080b3114f0] = 10;

		*node[0x5f080b311520] = /;

		*node[0x5f080b311550] = -;

		*node[0x5f080b311580] = 0;

		*node[0x5f080b3115b0] = 2;

		*node[0x5f080b3115e0] = *;

		*node[0x5f080b311610] = 2;

		*node[0x5f080b311640] = 1;

		*node[0x5f080b311670] = ;;

		*node[0x5f080b3116a0] = print;

		*node[0x5f080b3116d0] = 8;

		*node[0x5f080b311700] = ;;

		*node[0x5f080b311730] = print;

		*node[0x5f080b311760] = 10;

		*node[0x5f080b311790] = else;

		*node[0x5f080b3117c0] = op_no;

		*node[0x5f080b3117f0] = ;;

		*node[0x5f080b311820] = print;

		*node[0x5f080b311850] = 7;

		*node[0x5f080b311880] = ;;

		*node[0x5f080b3118b0] = return;

		*node[0x5f080b3118e0] = 0;

		*node[0x5f080b311910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc3d2168c0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5726b0b94fd0] = ;;

		*node[0x5726b0b95000] = 0;

		*node[0x5726b0b95030] = ;;

		*node[0x5726b0b95060] = input;

		*node[0x5726b0b95090] = 1;

		*node[0x5726b0b950c0] = 2;

		*node[0x5726b0b950f0] = 3;

		*node[0x5726b0b95120] = ;;

		*node[0x5726b0b95180] = 1;

		*node[0x5726b0b951b0] = 2;

		*node[0x5726b0b951e0] = 3;

		*node[0x5726b0b95210] = ;;

		*node[0x5726b0b95240] = 4;

		*node[0x5726b0b95270] = 1;

		*node[0x5726b0b952a0] = 2;

		*node[0x5726b0b952d0] = 3;

		*node[0x5726b0b95300] = ;;

		*node[0x5726b0b95330] = if;

		*node[0x5726b0b95360] = op_no;

		*node[0x5726b0b95390] = ==;

		*node[0x5726b0b953c0] = 1;

		*node[0x5726b0b953f0] = 0;

		*node[0x5726b0b95420] = ;;

		*node[0x5726b0b95480] = 2;

		*node[0x5726b0b954b0] = 3;

		*node[0x5726b0b954e0] = else;

		*node[0x5726b0b95510] = op_no;

		*node[0x5726b0b95540] = ;;

		*node[0x5726b0b955a0] = 1;

		*node[0x5726b0b955d0] = 2;

		*node[0x5726b0b95600] = 3;

		*node[0x5726b0b95630] = ;;

		*node[0x5726b0b95660] = 5;

		*node[0x5726b0b95690] = 1;

		*node[0x5726b0b956c0] = 2;

		*node[0x5726b0b956f0] = ;;

		*node[0x5726b0b95720] = =;

		*node[0x5726b0b95750] = 7;

		*node[0x5726b0b95780] = -;

		*node[0x5726b0b957b0] = 0;

		*node[0x5726b0b957e0] = 1;

		*node[0x5726b0b95810] = ;;

		*node[0x5726b0b95840] = =;

		*node[0x5726b0b95870] = 8;

		*node[0x5726b0b958a0] = 1;

		*node[0x5726b0b958d0] = ;;

		*node[0x5726b0b95900] = =;

		*node[0x5726b0b95930] = 9;

		*node[0x5726b0b95960] = 1000;

		*node[0x5726b0b95990] = ;;

		*node[0x5726b0b959c0] = if;

		*node[0x5726b0b959f0] = op_no;

		*node[0x5726b0b95a20] = ==;

		*node[0x5726b0b95a50] = 1;

		*node[0x5726b0b95a80] = 0;

		*node[0x5726b0b95ab0] = ;;

		*node[0x5726b0b95ae0] = if;

		*node[0x5726b0b95b10] = op_no;

		*node[0x5726b0b95b40] = ==;

		*node[0x5726b0b95b70] = 2;

		*node[0x5726b0b95ba0] = 0;

		*node[0x5726b0b95bd0] = ;;

		*node[0x5726b0b95c00] = print;

		*node[0x5726b0b95c30] = 9;

		*node[0x5726b0b95c60] = else;

		*node[0x5726b0b95c90] = op_no;

		*node[0x5726b0b95cc0] = ;;

		*node[0x5726b0b95cf0] = print;

		*node[0x5726b0b95d20] = 7;

		*node[0x5726b0b95d50] = else;

		*node[0x5726b0b95d80] = op_no;

		*node[0x5726b0b95db0] = ;;

		*node[0x5726b0b95de0] = =;

		*node[0x5726b0b95e10] = 10;

		*node[0x5726b0b95e40] = /;

		*node[0x5726b0b95e70] = -;

		*node[0x5726b0b95ea0] = 0;

		*node[0x5726b0b95ed0] = 2;

		*node[0x5726b0b95f00] = 1;

		*node[0x5726b0b95f30] = ;;

		*node[0x5726b0b95f60] = print;

		*node[0x5726b0b95f90] = 8;

		*node[0x5726b0b95fc0] = ;;

		*node[0x5726b0b95ff0] = print;

		*node[0x5726b0b96020] = 10;

		*node[0x5726b0b96050] = ;;

		*node[0x5726b0b96080] = return;

		*node[0x5726b0b960b0] = 0;

		*node[0x5726b0b960e0] = ;;

		*node[0x5726b0b96110] = 6;

		*node[0x5726b0b96140] = 1;

		*node[0x5726b0b96170] = 2;

		*node[0x5726b0b961a0] = 3;

		*node[0x5726b0b961d0] = ;;

		*node[0x5726b0b96200] = =;

		*node[0x5726b0b96230] = 7;

		*node[0x5726b0b96260] = -;

		*node[0x5726b0b96290] = 0;

		*node[0x5726b0b962c0] = 1;

		*node[0x5726b0b962f0] = ;;

		*node[0x5726b0b96320] = =;

		*node[0x5726b0b96350] = 8;

		*node[0x5726b0b96380] = 1;

		*node[0x5726b0b963b0] = ;;

		*node[0x5726b0b963e0] = =;

		*node[0x5726b0b96410] = 11;

		*node[0x5726b0b96440] = 2;

		*node[0x5726b0b96470] = ;;

		*node[0x5726b0b964a0] = if;

		*node[0x5726b0b964d0] = op_no;

		*node[0x5726b0b96500] = ==;

		*node[0x5726b0b96530] = 3;

		*node[0x5726b0b96560] = 0;

		*node[0x5726b0b96590] = ;;

		*node[0x5726b0b965c0] = =;

		*node[0x5726b0b965f0] = 12;

		*node[0x5726b0b96620] = 0;

		*node[0x5726b0b96650] = ;;

		*node[0x5726b0b96680] = =;

		*node[0x5726b0b966b0] = 13;

		*node[0x5726b0b966e0] = /;

		*node[0x5726b0b96710] = -;

		*node[0x5726b0b96740] = 0;

		*node[0x5726b0b96770] = 2;

		*node[0x5726b0b967a0] = 1;

		*node[0x5726b0b967d0] = ;;

		*node[0x5726b0b96800] = print;

		*node[0x5726b0b96830] = 11;

		*node[0x5726b0b96860] = ;;

		*node[0x5726b0b96890] = print;

		*node[0x5726b0b968c0] = 12;

		*node[0x5726b0b968f0] = 13;

		*node[0x5726b0b96920] = else;

		*node[0x5726b0b96950] = op_no;

		*node[0x5726b0b96980] = ;;

		*node[0x5726b0b969b0] = =;

		*node[0x5726b0b969e0] = 14;

		*node[0x5726b0b96a10] = -;

		*node[0x5726b0b96a40] = *;

		*node[0x5726b0b96a70] = 2;

		*node[0x5726b0b96aa0] = 2;

		*node[0x5726b0b96ad0] = *;

		*node[0x5726b0b96b00] = *;

		*node[0x5726b0b96b30] = 4;

		*node[0x5726b0b96b60] = 1;

		*node[0x5726b0b96b90] = 3;

		*node[0x5726b0b96bc0] = ;;

		*node[0x5726b0b96bf0] = if;

		*node[0x5726b0b96c20] = op_no;

		*node[0x5726b0b96c50] = >;

		*node[0x5726b0b96c80] = 14;

		*node[0x5726b0b96cb0] = 0;

		*node[0x5726b0b96ce0] = ;;

		*node[0x5726b0b96d10] = =;

		*node[0x5726b0b96d40] = 15;

		*node[0x5726b0b96d70] = sqrt;

		*node[0x5726b0b96da0] = 14;

		*node[0x5726b0b96dd0] = ;;

		*node[0x5726b0b96e00] = =;

		*node[0x5726b0b96e30] = 12;

		*node[0x5726b0b96e60] = /;

		*node[0x5726b0b96e90] = -;

		*node[0x5726b0b96ec0] = -;

		*node[0x5726b0b96ef0] = 0;

		*node[0x5726b0b96f20] = 2;

		*node[0x5726b0b96f50] = 15;

		*node[0x5726b0b96f80] = *;

		*node[0x5726b0b96fb0] = 2;

		*node[0x5726b0b96fe0] = 1;

		*node[0x5726b0b97010] = ;;

		*node[0x5726b0b97040] = =;

		*node[0x5726b0b97070] = 13;

		*node[0x5726b0b970a0] = /;

		*node[0x5726b0b970d0] = +;

		*node[0x5726b0b97100] = -;

		*node[0x5726b0b97130] = 0;

		*node[0x5726b0b97160] = 2;

		*node[0x5726b0b97190] = 15;

		*node[0x5726b0b971c0] = *;

		*node[0x5726b0b971f0] = 2;

		*node[0x5726b0b97220] = 1;

		*node[0x5726b0b97250] = ;;

		*node[0x5726b0b97280] = print;

		*node[0x5726b0b972b0] = 11;

		*node[0x5726b0b972e0] = ;;

		*node[0x5726b0b97310] = print;

		*node[0x5726b0b97340] = 12;

		*node[0x5726b0b97370] = 13;

		*node[0x5726b0b973a0] = elseif;

		*node[0x5726b0b973d0] = op_no;

		*node[0x5726b0b97400] = ==;

		*node[0x5726b0b97430] = 14;

		*node[0x5726b0b97460] = 0;

		*node[0x5726b0b97490] = ;;

		*node[0x5726b0b974c0] = =;

		*node[0x5726b0b974f0] = 10;

		*node[0x5726b0b97520] = /;

		*node[0x5726b0b97550] = -;

		*node[0x5726b0b97580] = 0;

		*node[0x5726b0b975b0] = 2;

		*node[0x5726b0b975e0] = *;

		*node[0x5726b0b97610] = 2;

		*node[0x5726b0b97640] = 1;

		*node[0x5726b0b97670] = ;;

		*node[0x5726b0b976a0] = print;

		*node[0x5726b0b976d0] = 8;

		*node[0x5726b0b97700] = ;;

		*node[0x5726b0b97730] = print;

		*node[0x5726b0b97760] = 10;

		*node[0x5726b0b97790] = else;

		*node[0x5726b0b977c0] = op_no;

		*node[0x5726b0b977f0] = ;;

		*node[0x5726b0b97820] = print;

		*node[0x5726b0b97850] = 7;

		*node[0x5726b0b97880] = ;;

		*node[0x5726b0b978b0] = return;

		*node[0x5726b0b978e0] = 0;

		*node[0x5726b0b97910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd986d4860] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x638a2ef33fd0] = ;;

		*node[0x638a2ef34000] = 0;

		*node[0x638a2ef34030] = ;;

		*node[0x638a2ef34060] = input;

		*node[0x638a2ef34090] = 1;

		*node[0x638a2ef340c0] = 2;

		*node[0x638a2ef340f0] = 3;

		*node[0x638a2ef34120] = ;;

		*node[0x638a2ef34180] = 1;

		*node[0x638a2ef341b0] = 2;

		*node[0x638a2ef341e0] = 3;

		*node[0x638a2ef34210] = ;;

		*node[0x638a2ef34240] = 4;

		*node[0x638a2ef34270] = 1;

		*node[0x638a2ef342a0] = 2;

		*node[0x638a2ef342d0] = 3;

		*node[0x638a2ef34300] = ;;

		*node[0x638a2ef34330] = if;

		*node[0x638a2ef34360] = op_no;

		*node[0x638a2ef34390] = ==;

		*node[0x638a2ef343c0] = 1;

		*node[0x638a2ef343f0] = 0;

		*node[0x638a2ef34420] = ;;

		*node[0x638a2ef34480] = 2;

		*node[0x638a2ef344b0] = 3;

		*node[0x638a2ef344e0] = else;

		*node[0x638a2ef34510] = op_no;

		*node[0x638a2ef34540] = ;;

		*node[0x638a2ef345a0] = 1;

		*node[0x638a2ef345d0] = 2;

		*node[0x638a2ef34600] = 3;

		*node[0x638a2ef34630] = ;;

		*node[0x638a2ef34660] = 5;

		*node[0x638a2ef34690] = 1;

		*node[0x638a2ef346c0] = 2;

		*node[0x638a2ef346f0] = ;;

		*node[0x638a2ef34720] = =;

		*node[0x638a2ef34750] = 7;

		*node[0x638a2ef34780] = -;

		*node[0x638a2ef347b0] = 0;

		*node[0x638a2ef347e0] = 1;

		*node[0x638a2ef34810] = ;;

		*node[0x638a2ef34840] = =;

		*node[0x638a2ef34870] = 8;

		*node[0x638a2ef348a0] = 1;

		*node[0x638a2ef348d0] = ;;

		*node[0x638a2ef34900] = =;

		*node[0x638a2ef34930] = 9;

		*node[0x638a2ef34960] = 1000;

		*node[0x638a2ef34990] = ;;

		*node[0x638a2ef349c0] = if;

		*node[0x638a2ef349f0] = op_no;

		*node[0x638a2ef34a20] = ==;

		*node[0x638a2ef34a50] = 1;

		*node[0x638a2ef34a80] = 0;

		*node[0x638a2ef34ab0] = ;;

		*node[0x638a2ef34ae0] = if;

		*node[0x638a2ef34b10] = op_no;

		*node[0x638a2ef34b40] = ==;

		*node[0x638a2ef34b70] = 2;

		*node[0x638a2ef34ba0] = 0;

		*node[0x638a2ef34bd0] = ;;

		*node[0x638a2ef34c00] = print;

		*node[0x638a2ef34c30] = 9;

		*node[0x638a2ef34c60] = else;

		*node[0x638a2ef34c90] = op_no;

		*node[0x638a2ef34cc0] = ;;

		*node[0x638a2ef34cf0] = print;

		*node[0x638a2ef34d20] = 7;

		*node[0x638a2ef34d50] = else;

		*node[0x638a2ef34d80] = op_no;

		*node[0x638a2ef34db0] = ;;

		*node[0x638a2ef34de0] = =;

		*node[0x638a2ef34e10] = 10;

		*node[0x638a2ef34e40] = /;

		*node[0x638a2ef34e70] = -;

		*node[0x638a2ef34ea0] = 0;

		*node[0x638a2ef34ed0] = 2;

		*node[0x638a2ef34f00] = 1;

		*node[0x638a2ef34f30] = ;;

		*node[0x638a2ef34f60] = print;

		*node[0x638a2ef34f90] = 8;

		*node[0x638a2ef34fc0] = ;;

		*node[0x638a2ef34ff0] = print;

		*node[0x638a2ef35020] = 10;

		*node[0x638a2ef35050] = ;;

		*node[0x638a2ef35080] = return;

		*node[0x638a2ef350b0] = 0;

		*node[0x638a2ef350e0] = ;;

		*node[0x638a2ef35110] = 6;

		*node[0x638a2ef35140] = 1;

		*node[0x638a2ef35170] = 2;

		*node[0x638a2ef351a0] = 3;

		*node[0x638a2ef351d0] = ;;

		*node[0x638a2ef35200] = =;

		*node[0x638a2ef35230] = 7;

		*node[0x638a2ef35260] = -;

		*node[0x638a2ef35290] = 0;

		*node[0x638a2ef352c0] = 1;

		*node[0x638a2ef352f0] = ;;

		*node[0x638a2ef35320] = =;

		*node[0x638a2ef35350] = 8;

		*node[0x638a2ef35380] = 1;

		*node[0x638a2ef353b0] = ;;

		*node[0x638a2ef353e0] = =;

		*node[0x638a2ef35410] = 11;

		*node[0x638a2ef35440] = 2;

		*node[0x638a2ef35470] = ;;

		*node[0x638a2ef354a0] = if;

		*node[0x638a2ef354d0] = op_no;

		*node[0x638a2ef35500] = ==;

		*node[0x638a2ef35530] = 3;

		*node[0x638a2ef35560] = 0;

		*node[0x638a2ef35590] = ;;

		*node[0x638a2ef355c0] = =;

		*node[0x638a2ef355f0] = 12;

		*node[0x638a2ef35620] = 0;

		*node[0x638a2ef35650] = ;;

		*node[0x638a2ef35680] = =;

		*node[0x638a2ef356b0] = 13;

		*node[0x638a2ef356e0] = /;

		*node[0x638a2ef35710] = -;

		*node[0x638a2ef35740] = 0;

		*node[0x638a2ef35770] = 2;

		*node[0x638a2ef357a0] = 1;

		*node[0x638a2ef357d0] = ;;

		*node[0x638a2ef35800] = print;

		*node[0x638a2ef35830] = 11;

		*node[0x638a2ef35860] = ;;

		*node[0x638a2ef35890] = print;

		*node[0x638a2ef358c0] = 12;

		*node[0x638a2ef358f0] = 13;

		*node[0x638a2ef35920] = else;

		*node[0x638a2ef35950] = op_no;

		*node[0x638a2ef35980] = ;;

		*node[0x638a2ef359b0] = =;

		*node[0x638a2ef359e0] = 14;

		*node[0x638a2ef35a10] = -;

		*node[0x638a2ef35a40] = *;

		*node[0x638a2ef35a70] = 2;

		*node[0x638a2ef35aa0] = 2;

		*node[0x638a2ef35ad0] = *;

		*node[0x638a2ef35b00] = *;

		*node[0x638a2ef35b30] = 4;

		*node[0x638a2ef35b60] = 1;

		*node[0x638a2ef35b90] = 3;

		*node[0x638a2ef35bc0] = ;;

		*node[0x638a2ef35bf0] = if;

		*node[0x638a2ef35c20] = op_no;

		*node[0x638a2ef35c50] = >;

		*node[0x638a2ef35c80] = 14;

		*node[0x638a2ef35cb0] = 0;

		*node[0x638a2ef35ce0] = ;;

		*node[0x638a2ef35d10] = =;

		*node[0x638a2ef35d40] = 15;

		*node[0x638a2ef35d70] = sqrt;

		*node[0x638a2ef35da0] = 14;

		*node[0x638a2ef35dd0] = ;;

		*node[0x638a2ef35e00] = =;

		*node[0x638a2ef35e30] = 12;

		*node[0x638a2ef35e60] = /;

		*node[0x638a2ef35e90] = -;

		*node[0x638a2ef35ec0] = -;

		*node[0x638a2ef35ef0] = 0;

		*node[0x638a2ef35f20] = 2;

		*node[0x638a2ef35f50] = 15;

		*node[0x638a2ef35f80] = *;

		*node[0x638a2ef35fb0] = 2;

		*node[0x638a2ef35fe0] = 1;

		*node[0x638a2ef36010] = ;;

		*node[0x638a2ef36040] = =;

		*node[0x638a2ef36070] = 13;

		*node[0x638a2ef360a0] = /;

		*node[0x638a2ef360d0] = +;

		*node[0x638a2ef36100] = -;

		*node[0x638a2ef36130] = 0;

		*node[0x638a2ef36160] = 2;

		*node[0x638a2ef36190] = 15;

		*node[0x638a2ef361c0] = *;

		*node[0x638a2ef361f0] = 2;

		*node[0x638a2ef36220] = 1;

		*node[0x638a2ef36250] = ;;

		*node[0x638a2ef36280] = print;

		*node[0x638a2ef362b0] = 11;

		*node[0x638a2ef362e0] = ;;

		*node[0x638a2ef36310] = print;

		*node[0x638a2ef36340] = 12;

		*node[0x638a2ef36370] = 13;

		*node[0x638a2ef363a0] = elseif;

		*node[0x638a2ef363d0] = op_no;

		*node[0x638a2ef36400] = ==;

		*node[0x638a2ef36430] = 14;

		*node[0x638a2ef36460] = 0;

		*node[0x638a2ef36490] = ;;

		*node[0x638a2ef364c0] = =;

		*node[0x638a2ef364f0] = 10;

		*node[0x638a2ef36520] = /;

		*node[0x638a2ef36550] = -;

		*node[0x638a2ef36580] = 0;

		*node[0x638a2ef365b0] = 2;

		*node[0x638a2ef365e0] = *;

		*node[0x638a2ef36610] = 2;

		*node[0x638a2ef36640] = 1;

		*node[0x638a2ef36670] = ;;

		*node[0x638a2ef366a0] = print;

		*node[0x638a2ef366d0] = 8;

		*node[0x638a2ef36700] = ;;

		*node[0x638a2ef36730] = print;

		*node[0x638a2ef36760] = 10;

		*node[0x638a2ef36790] = else;

		*node[0x638a2ef367c0] = op_no;

		*node[0x638a2ef367f0] = ;;

		*node[0x638a2ef36820] = print;

		*node[0x638a2ef36850] = 7;

		*node[0x638a2ef36880] = ;;

		*node[0x638a2ef368b0] = return;

		*node[0x638a2ef368e0] = 0;

		*node[0x638a2ef36910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc7ec20af0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x60b8f28d4fd0] = ;;

		*node[0x60b8f28d5000] = 0;

		*node[0x60b8f28d5030] = ;;

		*node[0x60b8f28d5060] = input;

		*node[0x60b8f28d5090] = 1;

		*node[0x60b8f28d50c0] = 2;

		*node[0x60b8f28d50f0] = 3;

		*node[0x60b8f28d5120] = ;;

		*node[0x60b8f28d5180] = 1;

		*node[0x60b8f28d51b0] = 2;

		*node[0x60b8f28d51e0] = 3;

		*node[0x60b8f28d5210] = ;;

		*node[0x60b8f28d5240] = 4;

		*node[0x60b8f28d5270] = 1;

		*node[0x60b8f28d52a0] = 2;

		*node[0x60b8f28d52d0] = 3;

		*node[0x60b8f28d5300] = ;;

		*node[0x60b8f28d5330] = if;

		*node[0x60b8f28d5360] = op_no;

		*node[0x60b8f28d5390] = ==;

		*node[0x60b8f28d53c0] = 1;

		*node[0x60b8f28d53f0] = 0;

		*node[0x60b8f28d5420] = ;;

		*node[0x60b8f28d5480] = 2;

		*node[0x60b8f28d54b0] = 3;

		*node[0x60b8f28d54e0] = else;

		*node[0x60b8f28d5510] = op_no;

		*node[0x60b8f28d5540] = ;;

		*node[0x60b8f28d55a0] = 1;

		*node[0x60b8f28d55d0] = 2;

		*node[0x60b8f28d5600] = 3;

		*node[0x60b8f28d5630] = ;;

		*node[0x60b8f28d5660] = 5;

		*node[0x60b8f28d5690] = 1;

		*node[0x60b8f28d56c0] = 2;

		*node[0x60b8f28d56f0] = ;;

		*node[0x60b8f28d5720] = =;

		*node[0x60b8f28d5750] = 7;

		*node[0x60b8f28d5780] = -;

		*node[0x60b8f28d57b0] = 0;

		*node[0x60b8f28d57e0] = 1;

		*node[0x60b8f28d5810] = ;;

		*node[0x60b8f28d5840] = =;

		*node[0x60b8f28d5870] = 8;

		*node[0x60b8f28d58a0] = 1;

		*node[0x60b8f28d58d0] = ;;

		*node[0x60b8f28d5900] = =;

		*node[0x60b8f28d5930] = 9;

		*node[0x60b8f28d5960] = 1000;

		*node[0x60b8f28d5990] = ;;

		*node[0x60b8f28d59c0] = if;

		*node[0x60b8f28d59f0] = op_no;

		*node[0x60b8f28d5a20] = ==;

		*node[0x60b8f28d5a50] = 1;

		*node[0x60b8f28d5a80] = 0;

		*node[0x60b8f28d5ab0] = ;;

		*node[0x60b8f28d5ae0] = if;

		*node[0x60b8f28d5b10] = op_no;

		*node[0x60b8f28d5b40] = ==;

		*node[0x60b8f28d5b70] = 2;

		*node[0x60b8f28d5ba0] = 0;

		*node[0x60b8f28d5bd0] = ;;

		*node[0x60b8f28d5c00] = print;

		*node[0x60b8f28d5c30] = 9;

		*node[0x60b8f28d5c60] = else;

		*node[0x60b8f28d5c90] = op_no;

		*node[0x60b8f28d5cc0] = ;;

		*node[0x60b8f28d5cf0] = print;

		*node[0x60b8f28d5d20] = 7;

		*node[0x60b8f28d5d50] = else;

		*node[0x60b8f28d5d80] = op_no;

		*node[0x60b8f28d5db0] = ;;

		*node[0x60b8f28d5de0] = =;

		*node[0x60b8f28d5e10] = 10;

		*node[0x60b8f28d5e40] = /;

		*node[0x60b8f28d5e70] = -;

		*node[0x60b8f28d5ea0] = 0;

		*node[0x60b8f28d5ed0] = 2;

		*node[0x60b8f28d5f00] = 1;

		*node[0x60b8f28d5f30] = ;;

		*node[0x60b8f28d5f60] = print;

		*node[0x60b8f28d5f90] = 8;

		*node[0x60b8f28d5fc0] = ;;

		*node[0x60b8f28d5ff0] = print;

		*node[0x60b8f28d6020] = 10;

		*node[0x60b8f28d6050] = ;;

		*node[0x60b8f28d6080] = return;

		*node[0x60b8f28d60b0] = 0;

		*node[0x60b8f28d60e0] = ;;

		*node[0x60b8f28d6110] = 6;

		*node[0x60b8f28d6140] = 1;

		*node[0x60b8f28d6170] = 2;

		*node[0x60b8f28d61a0] = 3;

		*node[0x60b8f28d61d0] = ;;

		*node[0x60b8f28d6200] = =;

		*node[0x60b8f28d6230] = 7;

		*node[0x60b8f28d6260] = -;

		*node[0x60b8f28d6290] = 0;

		*node[0x60b8f28d62c0] = 1;

		*node[0x60b8f28d62f0] = ;;

		*node[0x60b8f28d6320] = =;

		*node[0x60b8f28d6350] = 8;

		*node[0x60b8f28d6380] = 1;

		*node[0x60b8f28d63b0] = ;;

		*node[0x60b8f28d63e0] = =;

		*node[0x60b8f28d6410] = 11;

		*node[0x60b8f28d6440] = 2;

		*node[0x60b8f28d6470] = ;;

		*node[0x60b8f28d64a0] = if;

		*node[0x60b8f28d64d0] = op_no;

		*node[0x60b8f28d6500] = ==;

		*node[0x60b8f28d6530] = 3;

		*node[0x60b8f28d6560] = 0;

		*node[0x60b8f28d6590] = ;;

		*node[0x60b8f28d65c0] = =;

		*node[0x60b8f28d65f0] = 12;

		*node[0x60b8f28d6620] = 0;

		*node[0x60b8f28d6650] = ;;

		*node[0x60b8f28d6680] = =;

		*node[0x60b8f28d66b0] = 13;

		*node[0x60b8f28d66e0] = /;

		*node[0x60b8f28d6710] = -;

		*node[0x60b8f28d6740] = 0;

		*node[0x60b8f28d6770] = 2;

		*node[0x60b8f28d67a0] = 1;

		*node[0x60b8f28d67d0] = ;;

		*node[0x60b8f28d6800] = print;

		*node[0x60b8f28d6830] = 11;

		*node[0x60b8f28d6860] = ;;

		*node[0x60b8f28d6890] = print;

		*node[0x60b8f28d68c0] = 12;

		*node[0x60b8f28d68f0] = 13;

		*node[0x60b8f28d6920] = else;

		*node[0x60b8f28d6950] = op_no;

		*node[0x60b8f28d6980] = ;;

		*node[0x60b8f28d69b0] = =;

		*node[0x60b8f28d69e0] = 14;

		*node[0x60b8f28d6a10] = -;

		*node[0x60b8f28d6a40] = *;

		*node[0x60b8f28d6a70] = 2;

		*node[0x60b8f28d6aa0] = 2;

		*node[0x60b8f28d6ad0] = *;

		*node[0x60b8f28d6b00] = *;

		*node[0x60b8f28d6b30] = 4;

		*node[0x60b8f28d6b60] = 1;

		*node[0x60b8f28d6b90] = 3;

		*node[0x60b8f28d6bc0] = ;;

		*node[0x60b8f28d6bf0] = if;

		*node[0x60b8f28d6c20] = op_no;

		*node[0x60b8f28d6c50] = >;

		*node[0x60b8f28d6c80] = 14;

		*node[0x60b8f28d6cb0] = 0;

		*node[0x60b8f28d6ce0] = ;;

		*node[0x60b8f28d6d10] = =;

		*node[0x60b8f28d6d40] = 15;

		*node[0x60b8f28d6d70] = sqrt;

		*node[0x60b8f28d6da0] = 14;

		*node[0x60b8f28d6dd0] = ;;

		*node[0x60b8f28d6e00] = =;

		*node[0x60b8f28d6e30] = 12;

		*node[0x60b8f28d6e60] = /;

		*node[0x60b8f28d6e90] = -;

		*node[0x60b8f28d6ec0] = -;

		*node[0x60b8f28d6ef0] = 0;

		*node[0x60b8f28d6f20] = 2;

		*node[0x60b8f28d6f50] = 15;

		*node[0x60b8f28d6f80] = *;

		*node[0x60b8f28d6fb0] = 2;

		*node[0x60b8f28d6fe0] = 1;

		*node[0x60b8f28d7010] = ;;

		*node[0x60b8f28d7040] = =;

		*node[0x60b8f28d7070] = 13;

		*node[0x60b8f28d70a0] = /;

		*node[0x60b8f28d70d0] = +;

		*node[0x60b8f28d7100] = -;

		*node[0x60b8f28d7130] = 0;

		*node[0x60b8f28d7160] = 2;

		*node[0x60b8f28d7190] = 15;

		*node[0x60b8f28d71c0] = *;

		*node[0x60b8f28d71f0] = 2;

		*node[0x60b8f28d7220] = 1;

		*node[0x60b8f28d7250] = ;;

		*node[0x60b8f28d7280] = print;

		*node[0x60b8f28d72b0] = 11;

		*node[0x60b8f28d72e0] = ;;

		*node[0x60b8f28d7310] = print;

		*node[0x60b8f28d7340] = 12;

		*node[0x60b8f28d7370] = 13;

		*node[0x60b8f28d73a0] = elseif;

		*node[0x60b8f28d73d0] = op_no;

		*node[0x60b8f28d7400] = ==;

		*node[0x60b8f28d7430] = 14;

		*node[0x60b8f28d7460] = 0;

		*node[0x60b8f28d7490] = ;;

		*node[0x60b8f28d74c0] = =;

		*node[0x60b8f28d74f0] = 10;

		*node[0x60b8f28d7520] = /;

		*node[0x60b8f28d7550] = -;

		*node[0x60b8f28d7580] = 0;

		*node[0x60b8f28d75b0] = 2;

		*node[0x60b8f28d75e0] = *;

		*node[0x60b8f28d7610] = 2;

		*node[0x60b8f28d7640] = 1;

		*node[0x60b8f28d7670] = ;;

		*node[0x60b8f28d76a0] = print;

		*node[0x60b8f28d76d0] = 8;

		*node[0x60b8f28d7700] = ;;

		*node[0x60b8f28d7730] = print;

		*node[0x60b8f28d7760] = 10;

		*node[0x60b8f28d7790] = else;

		*node[0x60b8f28d77c0] = op_no;

		*node[0x60b8f28d77f0] = ;;

		*node[0x60b8f28d7820] = print;

		*node[0x60b8f28d7850] = 7;

		*node[0x60b8f28d7880] = ;;

		*node[0x60b8f28d78b0] = return;

		*node[0x60b8f28d78e0] = 0;

		*node[0x60b8f28d7910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffdc2e1320] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x6384ccc0cfd0] = ;;

		*node[0x6384ccc0d000] = 0;

		*node[0x6384ccc0d030] = ;;

		*node[0x6384ccc0d060] = input;

		*node[0x6384ccc0d090] = 1;

		*node[0x6384ccc0d0c0] = 2;

		*node[0x6384ccc0d0f0] = 3;

		*node[0x6384ccc0d120] = ;;

		*node[0x6384ccc0d180] = 1;

		*node[0x6384ccc0d1b0] = 2;

		*node[0x6384ccc0d1e0] = 3;

		*node[0x6384ccc0d210] = ;;

		*node[0x6384ccc0d240] = 4;

		*node[0x6384ccc0d270] = 1;

		*node[0x6384ccc0d2a0] = 2;

		*node[0x6384ccc0d2d0] = 3;

		*node[0x6384ccc0d300] = ;;

		*node[0x6384ccc0d330] = if;

		*node[0x6384ccc0d360] = op_no;

		*node[0x6384ccc0d390] = ==;

		*node[0x6384ccc0d3c0] = 1;

		*node[0x6384ccc0d3f0] = 0;

		*node[0x6384ccc0d420] = ;;

		*node[0x6384ccc0d480] = 2;

		*node[0x6384ccc0d4b0] = 3;

		*node[0x6384ccc0d4e0] = else;

		*node[0x6384ccc0d510] = op_no;

		*node[0x6384ccc0d540] = ;;

		*node[0x6384ccc0d5a0] = 1;

		*node[0x6384ccc0d5d0] = 2;

		*node[0x6384ccc0d600] = 3;

		*node[0x6384ccc0d630] = ;;

		*node[0x6384ccc0d660] = 5;

		*node[0x6384ccc0d690] = 1;

		*node[0x6384ccc0d6c0] = 2;

		*node[0x6384ccc0d6f0] = ;;

		*node[0x6384ccc0d720] = =;

		*node[0x6384ccc0d750] = 7;

		*node[0x6384ccc0d780] = -;

		*node[0x6384ccc0d7b0] = 0;

		*node[0x6384ccc0d7e0] = 1;

		*node[0x6384ccc0d810] = ;;

		*node[0x6384ccc0d840] = =;

		*node[0x6384ccc0d870] = 8;

		*node[0x6384ccc0d8a0] = 1;

		*node[0x6384ccc0d8d0] = ;;

		*node[0x6384ccc0d900] = =;

		*node[0x6384ccc0d930] = 9;

		*node[0x6384ccc0d960] = 1000;

		*node[0x6384ccc0d990] = ;;

		*node[0x6384ccc0d9c0] = if;

		*node[0x6384ccc0d9f0] = op_no;

		*node[0x6384ccc0da20] = ==;

		*node[0x6384ccc0da50] = 1;

		*node[0x6384ccc0da80] = 0;

		*node[0x6384ccc0dab0] = ;;

		*node[0x6384ccc0dae0] = if;

		*node[0x6384ccc0db10] = op_no;

		*node[0x6384ccc0db40] = ==;

		*node[0x6384ccc0db70] = 2;

		*node[0x6384ccc0dba0] = 0;

		*node[0x6384ccc0dbd0] = ;;

		*node[0x6384ccc0dc00] = print;

		*node[0x6384ccc0dc30] = 9;

		*node[0x6384ccc0dc60] = else;

		*node[0x6384ccc0dc90] = op_no;

		*node[0x6384ccc0dcc0] = ;;

		*node[0x6384ccc0dcf0] = print;

		*node[0x6384ccc0dd20] = 7;

		*node[0x6384ccc0dd50] = else;

		*node[0x6384ccc0dd80] = op_no;

		*node[0x6384ccc0ddb0] = ;;

		*node[0x6384ccc0dde0] = =;

		*node[0x6384ccc0de10] = 10;

		*node[0x6384ccc0de40] = /;

		*node[0x6384ccc0de70] = -;

		*node[0x6384ccc0dea0] = 0;

		*node[0x6384ccc0ded0] = 2;

		*node[0x6384ccc0df00] = 1;

		*node[0x6384ccc0df30] = ;;

		*node[0x6384ccc0df60] = print;

		*node[0x6384ccc0df90] = 8;

		*node[0x6384ccc0dfc0] = ;;

		*node[0x6384ccc0dff0] = print;

		*node[0x6384ccc0e020] = 10;

		*node[0x6384ccc0e050] = ;;

		*node[0x6384ccc0e080] = return;

		*node[0x6384ccc0e0b0] = 0;

		*node[0x6384ccc0e0e0] = ;;

		*node[0x6384ccc0e110] = 6;

		*node[0x6384ccc0e140] = 1;

		*node[0x6384ccc0e170] = 2;

		*node[0x6384ccc0e1a0] = 3;

		*node[0x6384ccc0e1d0] = ;;

		*node[0x6384ccc0e200] = =;

		*node[0x6384ccc0e230] = 7;

		*node[0x6384ccc0e260] = -;

		*node[0x6384ccc0e290] = 0;

		*node[0x6384ccc0e2c0] = 1;

		*node[0x6384ccc0e2f0] = ;;

		*node[0x6384ccc0e320] = =;

		*node[0x6384ccc0e350] = 8;

		*node[0x6384ccc0e380] = 1;

		*node[0x6384ccc0e3b0] = ;;

		*node[0x6384ccc0e3e0] = =;

		*node[0x6384ccc0e410] = 11;

		*node[0x6384ccc0e440] = 2;

		*node[0x6384ccc0e470] = ;;

		*node[0x6384ccc0e4a0] = if;

		*node[0x6384ccc0e4d0] = op_no;

		*node[0x6384ccc0e500] = ==;

		*node[0x6384ccc0e530] = 3;

		*node[0x6384ccc0e560] = 0;

		*node[0x6384ccc0e590] = ;;

		*node[0x6384ccc0e5c0] = =;

		*node[0x6384ccc0e5f0] = 12;

		*node[0x6384ccc0e620] = 0;

		*node[0x6384ccc0e650] = ;;

		*node[0x6384ccc0e680] = =;

		*node[0x6384ccc0e6b0] = 13;

		*node[0x6384ccc0e6e0] = /;

		*node[0x6384ccc0e710] = -;

		*node[0x6384ccc0e740] = 0;

		*node[0x6384ccc0e770] = 2;

		*node[0x6384ccc0e7a0] = 1;

		*node[0x6384ccc0e7d0] = ;;

		*node[0x6384ccc0e800] = print;

		*node[0x6384ccc0e830] = 11;

		*node[0x6384ccc0e860] = ;;

		*node[0x6384ccc0e890] = print;

		*node[0x6384ccc0e8c0] = 12;

		*node[0x6384ccc0e8f0] = 13;

		*node[0x6384ccc0e920] = else;

		*node[0x6384ccc0e950] = op_no;

		*node[0x6384ccc0e980] = ;;

		*node[0x6384ccc0e9b0] = =;

		*node[0x6384ccc0e9e0] = 14;

		*node[0x6384ccc0ea10] = -;

		*node[0x6384ccc0ea40] = *;

		*node[0x6384ccc0ea70] = 2;

		*node[0x6384ccc0eaa0] = 2;

		*node[0x6384ccc0ead0] = *;

		*node[0x6384ccc0eb00] = *;

		*node[0x6384ccc0eb30] = 4;

		*node[0x6384ccc0eb60] = 1;

		*node[0x6384ccc0eb90] = 3;

		*node[0x6384ccc0ebc0] = ;;

		*node[0x6384ccc0ebf0] = if;

		*node[0x6384ccc0ec20] = op_no;

		*node[0x6384ccc0ec50] = >;

		*node[0x6384ccc0ec80] = 14;

		*node[0x6384ccc0ecb0] = 0;

		*node[0x6384ccc0ece0] = ;;

		*node[0x6384ccc0ed10] = =;

		*node[0x6384ccc0ed40] = 15;

		*node[0x6384ccc0ed70] = sqrt;

		*node[0x6384ccc0eda0] = 14;

		*node[0x6384ccc0edd0] = ;;

		*node[0x6384ccc0ee00] = =;

		*node[0x6384ccc0ee30] = 12;

		*node[0x6384ccc0ee60] = /;

		*node[0x6384ccc0ee90] = -;

		*node[0x6384ccc0eec0] = -;

		*node[0x6384ccc0eef0] = 0;

		*node[0x6384ccc0ef20] = 2;

		*node[0x6384ccc0ef50] = 15;

		*node[0x6384ccc0ef80] = *;

		*node[0x6384ccc0efb0] = 2;

		*node[0x6384ccc0efe0] = 1;

		*node[0x6384ccc0f010] = ;;

		*node[0x6384ccc0f040] = =;

		*node[0x6384ccc0f070] = 13;

		*node[0x6384ccc0f0a0] = /;

		*node[0x6384ccc0f0d0] = +;

		*node[0x6384ccc0f100] = -;

		*node[0x6384ccc0f130] = 0;

		*node[0x6384ccc0f160] = 2;

		*node[0x6384ccc0f190] = 15;

		*node[0x6384ccc0f1c0] = *;

		*node[0x6384ccc0f1f0] = 2;

		*node[0x6384ccc0f220] = 1;

		*node[0x6384ccc0f250] = ;;

		*node[0x6384ccc0f280] = print;

		*node[0x6384ccc0f2b0] = 11;

		*node[0x6384ccc0f2e0] = ;;

		*node[0x6384ccc0f310] = print;

		*node[0x6384ccc0f340] = 12;

		*node[0x6384ccc0f370] = 13;

		*node[0x6384ccc0f3a0] = elseif;

		*node[0x6384ccc0f3d0] = op_no;

		*node[0x6384ccc0f400] = ==;

		*node[0x6384ccc0f430] = 14;

		*node[0x6384ccc0f460] = 0;

		*node[0x6384ccc0f490] = ;;

		*node[0x6384ccc0f4c0] = =;

		*node[0x6384ccc0f4f0] = 10;

		*node[0x6384ccc0f520] = /;

		*node[0x6384ccc0f550] = -;

		*node[0x6384ccc0f580] = 0;

		*node[0x6384ccc0f5b0] = 2;

		*node[0x6384ccc0f5e0] = *;

		*node[0x6384ccc0f610] = 2;

		*node[0x6384ccc0f640] = 1;

		*node[0x6384ccc0f670] = ;;

		*node[0x6384ccc0f6a0] = print;

		*node[0x6384ccc0f6d0] = 8;

		*node[0x6384ccc0f700] = ;;

		*node[0x6384ccc0f730] = print;

		*node[0x6384ccc0f760] = 10;

		*node[0x6384ccc0f790] = else;

		*node[0x6384ccc0f7c0] = op_no;

		*node[0x6384ccc0f7f0] = ;;

		*node[0x6384ccc0f820] = print;

		*node[0x6384ccc0f850] = 7;

		*node[0x6384ccc0f880] = ;;

		*node[0x6384ccc0f8b0] = return;

		*node[0x6384ccc0f8e0] = 0;

		*node[0x6384ccc0f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffa777eaa0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x584c558f9fd0] = ;;

		*node[0x584c558fa000] = 0;

		*node[0x584c558fa030] = ;;

		*node[0x584c558fa060] = input;

		*node[0x584c558fa090] = 1;

		*node[0x584c558fa0c0] = 2;

		*node[0x584c558fa0f0] = 3;

		*node[0x584c558fa120] = ;;

		*node[0x584c558fa180] = 1;

		*node[0x584c558fa1b0] = 2;

		*node[0x584c558fa1e0] = 3;

		*node[0x584c558fa210] = ;;

		*node[0x584c558fa240] = 4;

		*node[0x584c558fa270] = 1;

		*node[0x584c558fa2a0] = 2;

		*node[0x584c558fa2d0] = 3;

		*node[0x584c558fa300] = ;;

		*node[0x584c558fa330] = if;

		*node[0x584c558fa360] = op_no;

		*node[0x584c558fa390] = ==;

		*node[0x584c558fa3c0] = 1;

		*node[0x584c558fa3f0] = 0;

		*node[0x584c558fa420] = ;;

		*node[0x584c558fa480] = 2;

		*node[0x584c558fa4b0] = 3;

		*node[0x584c558fa4e0] = else;

		*node[0x584c558fa510] = op_no;

		*node[0x584c558fa540] = ;;

		*node[0x584c558fa5a0] = 1;

		*node[0x584c558fa5d0] = 2;

		*node[0x584c558fa600] = 3;

		*node[0x584c558fa630] = ;;

		*node[0x584c558fa660] = 5;

		*node[0x584c558fa690] = 1;

		*node[0x584c558fa6c0] = 2;

		*node[0x584c558fa6f0] = ;;

		*node[0x584c558fa720] = =;

		*node[0x584c558fa750] = 7;

		*node[0x584c558fa780] = -;

		*node[0x584c558fa7b0] = 0;

		*node[0x584c558fa7e0] = 1;

		*node[0x584c558fa810] = ;;

		*node[0x584c558fa840] = =;

		*node[0x584c558fa870] = 8;

		*node[0x584c558fa8a0] = 1;

		*node[0x584c558fa8d0] = ;;

		*node[0x584c558fa900] = =;

		*node[0x584c558fa930] = 9;

		*node[0x584c558fa960] = 1000;

		*node[0x584c558fa990] = ;;

		*node[0x584c558fa9c0] = if;

		*node[0x584c558fa9f0] = op_no;

		*node[0x584c558faa20] = ==;

		*node[0x584c558faa50] = 1;

		*node[0x584c558faa80] = 0;

		*node[0x584c558faab0] = ;;

		*node[0x584c558faae0] = if;

		*node[0x584c558fab10] = op_no;

		*node[0x584c558fab40] = ==;

		*node[0x584c558fab70] = 2;

		*node[0x584c558faba0] = 0;

		*node[0x584c558fabd0] = ;;

		*node[0x584c558fac00] = print;

		*node[0x584c558fac30] = 9;

		*node[0x584c558fac60] = else;

		*node[0x584c558fac90] = op_no;

		*node[0x584c558facc0] = ;;

		*node[0x584c558facf0] = print;

		*node[0x584c558fad20] = 7;

		*node[0x584c558fad50] = else;

		*node[0x584c558fad80] = op_no;

		*node[0x584c558fadb0] = ;;

		*node[0x584c558fade0] = =;

		*node[0x584c558fae10] = 10;

		*node[0x584c558fae40] = /;

		*node[0x584c558fae70] = -;

		*node[0x584c558faea0] = 0;

		*node[0x584c558faed0] = 2;

		*node[0x584c558faf00] = 1;

		*node[0x584c558faf30] = ;;

		*node[0x584c558faf60] = print;

		*node[0x584c558faf90] = 8;

		*node[0x584c558fafc0] = ;;

		*node[0x584c558faff0] = print;

		*node[0x584c558fb020] = 10;

		*node[0x584c558fb050] = ;;

		*node[0x584c558fb080] = return;

		*node[0x584c558fb0b0] = 0;

		*node[0x584c558fb0e0] = ;;

		*node[0x584c558fb110] = 6;

		*node[0x584c558fb140] = 1;

		*node[0x584c558fb170] = 2;

		*node[0x584c558fb1a0] = 3;

		*node[0x584c558fb1d0] = ;;

		*node[0x584c558fb200] = =;

		*node[0x584c558fb230] = 7;

		*node[0x584c558fb260] = -;

		*node[0x584c558fb290] = 0;

		*node[0x584c558fb2c0] = 1;

		*node[0x584c558fb2f0] = ;;

		*node[0x584c558fb320] = =;

		*node[0x584c558fb350] = 8;

		*node[0x584c558fb380] = 1;

		*node[0x584c558fb3b0] = ;;

		*node[0x584c558fb3e0] = =;

		*node[0x584c558fb410] = 11;

		*node[0x584c558fb440] = 2;

		*node[0x584c558fb470] = ;;

		*node[0x584c558fb4a0] = if;

		*node[0x584c558fb4d0] = op_no;

		*node[0x584c558fb500] = ==;

		*node[0x584c558fb530] = 3;

		*node[0x584c558fb560] = 0;

		*node[0x584c558fb590] = ;;

		*node[0x584c558fb5c0] = =;

		*node[0x584c558fb5f0] = 12;

		*node[0x584c558fb620] = 0;

		*node[0x584c558fb650] = ;;

		*node[0x584c558fb680] = =;

		*node[0x584c558fb6b0] = 13;

		*node[0x584c558fb6e0] = /;

		*node[0x584c558fb710] = -;

		*node[0x584c558fb740] = 0;

		*node[0x584c558fb770] = 2;

		*node[0x584c558fb7a0] = 1;

		*node[0x584c558fb7d0] = ;;

		*node[0x584c558fb800] = print;

		*node[0x584c558fb830] = 11;

		*node[0x584c558fb860] = ;;

		*node[0x584c558fb890] = print;

		*node[0x584c558fb8c0] = 12;

		*node[0x584c558fb8f0] = 13;

		*node[0x584c558fb920] = else;

		*node[0x584c558fb950] = op_no;

		*node[0x584c558fb980] = ;;

		*node[0x584c558fb9b0] = =;

		*node[0x584c558fb9e0] = 14;

		*node[0x584c558fba10] = -;

		*node[0x584c558fba40] = *;

		*node[0x584c558fba70] = 2;

		*node[0x584c558fbaa0] = 2;

		*node[0x584c558fbad0] = *;

		*node[0x584c558fbb00] = *;

		*node[0x584c558fbb30] = 4;

		*node[0x584c558fbb60] = 1;

		*node[0x584c558fbb90] = 3;

		*node[0x584c558fbbc0] = ;;

		*node[0x584c558fbbf0] = if;

		*node[0x584c558fbc20] = op_no;

		*node[0x584c558fbc50] = >;

		*node[0x584c558fbc80] = 14;

		*node[0x584c558fbcb0] = 0;

		*node[0x584c558fbce0] = ;;

		*node[0x584c558fbd10] = =;

		*node[0x584c558fbd40] = 15;

		*node[0x584c558fbd70] = sqrt;

		*node[0x584c558fbda0] = 14;

		*node[0x584c558fbdd0] = ;;

		*node[0x584c558fbe00] = =;

		*node[0x584c558fbe30] = 12;

		*node[0x584c558fbe60] = /;

		*node[0x584c558fbe90] = -;

		*node[0x584c558fbec0] = -;

		*node[0x584c558fbef0] = 0;

		*node[0x584c558fbf20] = 2;

		*node[0x584c558fbf50] = 15;

		*node[0x584c558fbf80] = *;

		*node[0x584c558fbfb0] = 2;

		*node[0x584c558fbfe0] = 1;

		*node[0x584c558fc010] = ;;

		*node[0x584c558fc040] = =;

		*node[0x584c558fc070] = 13;

		*node[0x584c558fc0a0] = /;

		*node[0x584c558fc0d0] = +;

		*node[0x584c558fc100] = -;

		*node[0x584c558fc130] = 0;

		*node[0x584c558fc160] = 2;

		*node[0x584c558fc190] = 15;

		*node[0x584c558fc1c0] = *;

		*node[0x584c558fc1f0] = 2;

		*node[0x584c558fc220] = 1;

		*node[0x584c558fc250] = ;;

		*node[0x584c558fc280] = print;

		*node[0x584c558fc2b0] = 11;

		*node[0x584c558fc2e0] = ;;

		*node[0x584c558fc310] = print;

		*node[0x584c558fc340] = 12;

		*node[0x584c558fc370] = 13;

		*node[0x584c558fc3a0] = elseif;

		*node[0x584c558fc3d0] = op_no;

		*node[0x584c558fc400] = ==;

		*node[0x584c558fc430] = 14;

		*node[0x584c558fc460] = 0;

		*node[0x584c558fc490] = ;;

		*node[0x584c558fc4c0] = =;

		*node[0x584c558fc4f0] = 10;

		*node[0x584c558fc520] = /;

		*node[0x584c558fc550] = -;

		*node[0x584c558fc580] = 0;

		*node[0x584c558fc5b0] = 2;

		*node[0x584c558fc5e0] = *;

		*node[0x584c558fc610] = 2;

		*node[0x584c558fc640] = 1;

		*node[0x584c558fc670] = ;;

		*node[0x584c558fc6a0] = print;

		*node[0x584c558fc6d0] = 8;

		*node[0x584c558fc700] = ;;

		*node[0x584c558fc730] = print;

		*node[0x584c558fc760] = 10;

		*node[0x584c558fc790] = else;

		*node[0x584c558fc7c0] = op_no;

		*node[0x584c558fc7f0] = ;;

		*node[0x584c558fc820] = print;

		*node[0x584c558fc850] = 7;

		*node[0x584c558fc880] = ;;

		*node[0x584c558fc8b0] = return;

		*node[0x584c558fc8e0] = 0;

		*node[0x584c558fc910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc8cb97530] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5f43596bffd0] = ;;

		*node[0x5f43596c0000] = 0;

		*node[0x5f43596c0030] = ;;

		*node[0x5f43596c0060] = input;

		*node[0x5f43596c0090] = 1;

		*node[0x5f43596c00c0] = 2;

		*node[0x5f43596c00f0] = 3;

		*node[0x5f43596c0120] = ;;

		*node[0x5f43596c0180] = 1;

		*node[0x5f43596c01b0] = 2;

		*node[0x5f43596c01e0] = 3;

		*node[0x5f43596c0210] = ;;

		*node[0x5f43596c0240] = 4;

		*node[0x5f43596c0270] = 1;

		*node[0x5f43596c02a0] = 2;

		*node[0x5f43596c02d0] = 3;

		*node[0x5f43596c0300] = ;;

		*node[0x5f43596c0330] = if;

		*node[0x5f43596c0360] = op_no;

		*node[0x5f43596c0390] = ==;

		*node[0x5f43596c03c0] = 1;

		*node[0x5f43596c03f0] = 0;

		*node[0x5f43596c0420] = ;;

		*node[0x5f43596c0480] = 2;

		*node[0x5f43596c04b0] = 3;

		*node[0x5f43596c04e0] = else;

		*node[0x5f43596c0510] = op_no;

		*node[0x5f43596c0540] = ;;

		*node[0x5f43596c05a0] = 1;

		*node[0x5f43596c05d0] = 2;

		*node[0x5f43596c0600] = 3;

		*node[0x5f43596c0630] = ;;

		*node[0x5f43596c0660] = 5;

		*node[0x5f43596c0690] = 1;

		*node[0x5f43596c06c0] = 2;

		*node[0x5f43596c06f0] = ;;

		*node[0x5f43596c0720] = =;

		*node[0x5f43596c0750] = 7;

		*node[0x5f43596c0780] = -;

		*node[0x5f43596c07b0] = 0;

		*node[0x5f43596c07e0] = 1;

		*node[0x5f43596c0810] = ;;

		*node[0x5f43596c0840] = =;

		*node[0x5f43596c0870] = 8;

		*node[0x5f43596c08a0] = 1;

		*node[0x5f43596c08d0] = ;;

		*node[0x5f43596c0900] = =;

		*node[0x5f43596c0930] = 9;

		*node[0x5f43596c0960] = 1000;

		*node[0x5f43596c0990] = ;;

		*node[0x5f43596c09c0] = if;

		*node[0x5f43596c09f0] = op_no;

		*node[0x5f43596c0a20] = ==;

		*node[0x5f43596c0a50] = 1;

		*node[0x5f43596c0a80] = 0;

		*node[0x5f43596c0ab0] = ;;

		*node[0x5f43596c0ae0] = if;

		*node[0x5f43596c0b10] = op_no;

		*node[0x5f43596c0b40] = ==;

		*node[0x5f43596c0b70] = 2;

		*node[0x5f43596c0ba0] = 0;

		*node[0x5f43596c0bd0] = ;;

		*node[0x5f43596c0c00] = print;

		*node[0x5f43596c0c30] = 9;

		*node[0x5f43596c0c60] = else;

		*node[0x5f43596c0c90] = op_no;

		*node[0x5f43596c0cc0] = ;;

		*node[0x5f43596c0cf0] = print;

		*node[0x5f43596c0d20] = 7;

		*node[0x5f43596c0d50] = else;

		*node[0x5f43596c0d80] = op_no;

		*node[0x5f43596c0db0] = ;;

		*node[0x5f43596c0de0] = =;

		*node[0x5f43596c0e10] = 10;

		*node[0x5f43596c0e40] = /;

		*node[0x5f43596c0e70] = -;

		*node[0x5f43596c0ea0] = 0;

		*node[0x5f43596c0ed0] = 2;

		*node[0x5f43596c0f00] = 1;

		*node[0x5f43596c0f30] = ;;

		*node[0x5f43596c0f60] = print;

		*node[0x5f43596c0f90] = 8;

		*node[0x5f43596c0fc0] = ;;

		*node[0x5f43596c0ff0] = print;

		*node[0x5f43596c1020] = 10;

		*node[0x5f43596c1050] = ;;

		*node[0x5f43596c1080] = return;

		*node[0x5f43596c10b0] = 0;

		*node[0x5f43596c10e0] = ;;

		*node[0x5f43596c1110] = 6;

		*node[0x5f43596c1140] = 1;

		*node[0x5f43596c1170] = 2;

		*node[0x5f43596c11a0] = 3;

		*node[0x5f43596c11d0] = ;;

		*node[0x5f43596c1200] = =;

		*node[0x5f43596c1230] = 7;

		*node[0x5f43596c1260] = -;

		*node[0x5f43596c1290] = 0;

		*node[0x5f43596c12c0] = 1;

		*node[0x5f43596c12f0] = ;;

		*node[0x5f43596c1320] = =;

		*node[0x5f43596c1350] = 8;

		*node[0x5f43596c1380] = 1;

		*node[0x5f43596c13b0] = ;;

		*node[0x5f43596c13e0] = =;

		*node[0x5f43596c1410] = 11;

		*node[0x5f43596c1440] = 2;

		*node[0x5f43596c1470] = ;;

		*node[0x5f43596c14a0] = if;

		*node[0x5f43596c14d0] = op_no;

		*node[0x5f43596c1500] = ==;

		*node[0x5f43596c1530] = 3;

		*node[0x5f43596c1560] = 0;

		*node[0x5f43596c1590] = ;;

		*node[0x5f43596c15c0] = =;

		*node[0x5f43596c15f0] = 12;

		*node[0x5f43596c1620] = 0;

		*node[0x5f43596c1650] = ;;

		*node[0x5f43596c1680] = =;

		*node[0x5f43596c16b0] = 13;

		*node[0x5f43596c16e0] = /;

		*node[0x5f43596c1710] = -;

		*node[0x5f43596c1740] = 0;

		*node[0x5f43596c1770] = 2;

		*node[0x5f43596c17a0] = 1;

		*node[0x5f43596c17d0] = ;;

		*node[0x5f43596c1800] = print;

		*node[0x5f43596c1830] = 11;

		*node[0x5f43596c1860] = ;;

		*node[0x5f43596c1890] = print;

		*node[0x5f43596c18c0] = 12;

		*node[0x5f43596c18f0] = 13;

		*node[0x5f43596c1920] = else;

		*node[0x5f43596c1950] = op_no;

		*node[0x5f43596c1980] = ;;

		*node[0x5f43596c19b0] = =;

		*node[0x5f43596c19e0] = 14;

		*node[0x5f43596c1a10] = -;

		*node[0x5f43596c1a40] = *;

		*node[0x5f43596c1a70] = 2;

		*node[0x5f43596c1aa0] = 2;

		*node[0x5f43596c1ad0] = *;

		*node[0x5f43596c1b00] = *;

		*node[0x5f43596c1b30] = 4;

		*node[0x5f43596c1b60] = 1;

		*node[0x5f43596c1b90] = 3;

		*node[0x5f43596c1bc0] = ;;

		*node[0x5f43596c1bf0] = if;

		*node[0x5f43596c1c20] = op_no;

		*node[0x5f43596c1c50] = >;

		*node[0x5f43596c1c80] = 14;

		*node[0x5f43596c1cb0] = 0;

		*node[0x5f43596c1ce0] = ;;

		*node[0x5f43596c1d10] = =;

		*node[0x5f43596c1d40] = 15;

		*node[0x5f43596c1d70] = sqrt;

		*node[0x5f43596c1da0] = 14;

		*node[0x5f43596c1dd0] = ;;

		*node[0x5f43596c1e00] = =;

		*node[0x5f43596c1e30] = 12;

		*node[0x5f43596c1e60] = /;

		*node[0x5f43596c1e90] = -;

		*node[0x5f43596c1ec0] = -;

		*node[0x5f43596c1ef0] = 0;

		*node[0x5f43596c1f20] = 2;

		*node[0x5f43596c1f50] = 15;

		*node[0x5f43596c1f80] = *;

		*node[0x5f43596c1fb0] = 2;

		*node[0x5f43596c1fe0] = 1;

		*node[0x5f43596c2010] = ;;

		*node[0x5f43596c2040] = =;

		*node[0x5f43596c2070] = 13;

		*node[0x5f43596c20a0] = /;

		*node[0x5f43596c20d0] = +;

		*node[0x5f43596c2100] = -;

		*node[0x5f43596c2130] = 0;

		*node[0x5f43596c2160] = 2;

		*node[0x5f43596c2190] = 15;

		*node[0x5f43596c21c0] = *;

		*node[0x5f43596c21f0] = 2;

		*node[0x5f43596c2220] = 1;

		*node[0x5f43596c2250] = ;;

		*node[0x5f43596c2280] = print;

		*node[0x5f43596c22b0] = 11;

		*node[0x5f43596c22e0] = ;;

		*node[0x5f43596c2310] = print;

		*node[0x5f43596c2340] = 12;

		*node[0x5f43596c2370] = 13;

		*node[0x5f43596c23a0] = elseif;

		*node[0x5f43596c23d0] = op_no;

		*node[0x5f43596c2400] = ==;

		*node[0x5f43596c2430] = 14;

		*node[0x5f43596c2460] = 0;

		*node[0x5f43596c2490] = ;;

		*node[0x5f43596c24c0] = =;

		*node[0x5f43596c24f0] = 10;

		*node[0x5f43596c2520] = /;

		*node[0x5f43596c2550] = -;

		*node[0x5f43596c2580] = 0;

		*node[0x5f43596c25b0] = 2;

		*node[0x5f43596c25e0] = *;

		*node[0x5f43596c2610] = 2;

		*node[0x5f43596c2640] = 1;

		*node[0x5f43596c2670] = ;;

		*node[0x5f43596c26a0] = print;

		*node[0x5f43596c26d0] = 8;

		*node[0x5f43596c2700] = ;;

		*node[0x5f43596c2730] = print;

		*node[0x5f43596c2760] = 10;

		*node[0x5f43596c2790] = else;

		*node[0x5f43596c27c0] = op_no;

		*node[0x5f43596c27f0] = ;;

		*node[0x5f43596c2820] = print;

		*node[0x5f43596c2850] = 7;

		*node[0x5f43596c2880] = ;;

		*node[0x5f43596c28b0] = return;

		*node[0x5f43596c28e0] = 0;

		*node[0x5f43596c2910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd8b5ac440] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x58f269c5efd0] = ;;

		*node[0x58f269c5f000] = 0;

		*node[0x58f269c5f030] = ;;

		*node[0x58f269c5f060] = input;

		*node[0x58f269c5f090] = 1;

		*node[0x58f269c5f0c0] = 2;

		*node[0x58f269c5f0f0] = 3;

		*node[0x58f269c5f120] = ;;

		*node[0x58f269c5f180] = 1;

		*node[0x58f269c5f1b0] = 2;

		*node[0x58f269c5f1e0] = 3;

		*node[0x58f269c5f210] = ;;

		*node[0x58f269c5f240] = 4;

		*node[0x58f269c5f270] = 1;

		*node[0x58f269c5f2a0] = 2;

		*node[0x58f269c5f2d0] = 3;

		*node[0x58f269c5f300] = ;;

		*node[0x58f269c5f330] = if;

		*node[0x58f269c5f360] = op_no;

		*node[0x58f269c5f390] = ==;

		*node[0x58f269c5f3c0] = 1;

		*node[0x58f269c5f3f0] = 0;

		*node[0x58f269c5f420] = ;;

		*node[0x58f269c5f480] = 2;

		*node[0x58f269c5f4b0] = 3;

		*node[0x58f269c5f4e0] = else;

		*node[0x58f269c5f510] = op_no;

		*node[0x58f269c5f540] = ;;

		*node[0x58f269c5f5a0] = 1;

		*node[0x58f269c5f5d0] = 2;

		*node[0x58f269c5f600] = 3;

		*node[0x58f269c5f630] = ;;

		*node[0x58f269c5f660] = 5;

		*node[0x58f269c5f690] = 1;

		*node[0x58f269c5f6c0] = 2;

		*node[0x58f269c5f6f0] = ;;

		*node[0x58f269c5f720] = =;

		*node[0x58f269c5f750] = 7;

		*node[0x58f269c5f780] = -;

		*node[0x58f269c5f7b0] = 0;

		*node[0x58f269c5f7e0] = 1;

		*node[0x58f269c5f810] = ;;

		*node[0x58f269c5f840] = =;

		*node[0x58f269c5f870] = 8;

		*node[0x58f269c5f8a0] = 1;

		*node[0x58f269c5f8d0] = ;;

		*node[0x58f269c5f900] = =;

		*node[0x58f269c5f930] = 9;

		*node[0x58f269c5f960] = 1000;

		*node[0x58f269c5f990] = ;;

		*node[0x58f269c5f9c0] = if;

		*node[0x58f269c5f9f0] = op_no;

		*node[0x58f269c5fa20] = ==;

		*node[0x58f269c5fa50] = 1;

		*node[0x58f269c5fa80] = 0;

		*node[0x58f269c5fab0] = ;;

		*node[0x58f269c5fae0] = if;

		*node[0x58f269c5fb10] = op_no;

		*node[0x58f269c5fb40] = ==;

		*node[0x58f269c5fb70] = 2;

		*node[0x58f269c5fba0] = 0;

		*node[0x58f269c5fbd0] = ;;

		*node[0x58f269c5fc00] = print;

		*node[0x58f269c5fc30] = 9;

		*node[0x58f269c5fc60] = else;

		*node[0x58f269c5fc90] = op_no;

		*node[0x58f269c5fcc0] = ;;

		*node[0x58f269c5fcf0] = print;

		*node[0x58f269c5fd20] = 7;

		*node[0x58f269c5fd50] = else;

		*node[0x58f269c5fd80] = op_no;

		*node[0x58f269c5fdb0] = ;;

		*node[0x58f269c5fde0] = =;

		*node[0x58f269c5fe10] = 10;

		*node[0x58f269c5fe40] = /;

		*node[0x58f269c5fe70] = -;

		*node[0x58f269c5fea0] = 0;

		*node[0x58f269c5fed0] = 2;

		*node[0x58f269c5ff00] = 1;

		*node[0x58f269c5ff30] = ;;

		*node[0x58f269c5ff60] = print;

		*node[0x58f269c5ff90] = 8;

		*node[0x58f269c5ffc0] = ;;

		*node[0x58f269c5fff0] = print;

		*node[0x58f269c60020] = 10;

		*node[0x58f269c60050] = ;;

		*node[0x58f269c60080] = return;

		*node[0x58f269c600b0] = 0;

		*node[0x58f269c600e0] = ;;

		*node[0x58f269c60110] = 6;

		*node[0x58f269c60140] = 1;

		*node[0x58f269c60170] = 2;

		*node[0x58f269c601a0] = 3;

		*node[0x58f269c601d0] = ;;

		*node[0x58f269c60200] = =;

		*node[0x58f269c60230] = 7;

		*node[0x58f269c60260] = -;

		*node[0x58f269c60290] = 0;

		*node[0x58f269c602c0] = 1;

		*node[0x58f269c602f0] = ;;

		*node[0x58f269c60320] = =;

		*node[0x58f269c60350] = 8;

		*node[0x58f269c60380] = 1;

		*node[0x58f269c603b0] = ;;

		*node[0x58f269c603e0] = =;

		*node[0x58f269c60410] = 11;

		*node[0x58f269c60440] = 2;

		*node[0x58f269c60470] = ;;

		*node[0x58f269c604a0] = if;

		*node[0x58f269c604d0] = op_no;

		*node[0x58f269c60500] = ==;

		*node[0x58f269c60530] = 3;

		*node[0x58f269c60560] = 0;

		*node[0x58f269c60590] = ;;

		*node[0x58f269c605c0] = =;

		*node[0x58f269c605f0] = 12;

		*node[0x58f269c60620] = 0;

		*node[0x58f269c60650] = ;;

		*node[0x58f269c60680] = =;

		*node[0x58f269c606b0] = 13;

		*node[0x58f269c606e0] = /;

		*node[0x58f269c60710] = -;

		*node[0x58f269c60740] = 0;

		*node[0x58f269c60770] = 2;

		*node[0x58f269c607a0] = 1;

		*node[0x58f269c607d0] = ;;

		*node[0x58f269c60800] = print;

		*node[0x58f269c60830] = 11;

		*node[0x58f269c60860] = ;;

		*node[0x58f269c60890] = print;

		*node[0x58f269c608c0] = 12;

		*node[0x58f269c608f0] = 13;

		*node[0x58f269c60920] = else;

		*node[0x58f269c60950] = op_no;

		*node[0x58f269c60980] = ;;

		*node[0x58f269c609b0] = =;

		*node[0x58f269c609e0] = 14;

		*node[0x58f269c60a10] = -;

		*node[0x58f269c60a40] = *;

		*node[0x58f269c60a70] = 2;

		*node[0x58f269c60aa0] = 2;

		*node[0x58f269c60ad0] = *;

		*node[0x58f269c60b00] = *;

		*node[0x58f269c60b30] = 4;

		*node[0x58f269c60b60] = 1;

		*node[0x58f269c60b90] = 3;

		*node[0x58f269c60bc0] = ;;

		*node[0x58f269c60bf0] = if;

		*node[0x58f269c60c20] = op_no;

		*node[0x58f269c60c50] = >;

		*node[0x58f269c60c80] = 14;

		*node[0x58f269c60cb0] = 0;

		*node[0x58f269c60ce0] = ;;

		*node[0x58f269c60d10] = =;

		*node[0x58f269c60d40] = 15;

		*node[0x58f269c60d70] = sqrt;

		*node[0x58f269c60da0] = 14;

		*node[0x58f269c60dd0] = ;;

		*node[0x58f269c60e00] = =;

		*node[0x58f269c60e30] = 12;

		*node[0x58f269c60e60] = /;

		*node[0x58f269c60e90] = -;

		*node[0x58f269c60ec0] = -;

		*node[0x58f269c60ef0] = 0;

		*node[0x58f269c60f20] = 2;

		*node[0x58f269c60f50] = 15;

		*node[0x58f269c60f80] = *;

		*node[0x58f269c60fb0] = 2;

		*node[0x58f269c60fe0] = 1;

		*node[0x58f269c61010] = ;;

		*node[0x58f269c61040] = =;

		*node[0x58f269c61070] = 13;

		*node[0x58f269c610a0] = /;

		*node[0x58f269c610d0] = +;

		*node[0x58f269c61100] = -;

		*node[0x58f269c61130] = 0;

		*node[0x58f269c61160] = 2;

		*node[0x58f269c61190] = 15;

		*node[0x58f269c611c0] = *;

		*node[0x58f269c611f0] = 2;

		*node[0x58f269c61220] = 1;

		*node[0x58f269c61250] = ;;

		*node[0x58f269c61280] = print;

		*node[0x58f269c612b0] = 11;

		*node[0x58f269c612e0] = ;;

		*node[0x58f269c61310] = print;

		*node[0x58f269c61340] = 12;

		*node[0x58f269c61370] = 13;

		*node[0x58f269c613a0] = elseif;

		*node[0x58f269c613d0] = op_no;

		*node[0x58f269c61400] = ==;

		*node[0x58f269c61430] = 14;

		*node[0x58f269c61460] = 0;

		*node[0x58f269c61490] = ;;

		*node[0x58f269c614c0] = =;

		*node[0x58f269c614f0] = 10;

		*node[0x58f269c61520] = /;

		*node[0x58f269c61550] = -;

		*node[0x58f269c61580] = 0;

		*node[0x58f269c615b0] = 2;

		*node[0x58f269c615e0] = *;

		*node[0x58f269c61610] = 2;

		*node[0x58f269c61640] = 1;

		*node[0x58f269c61670] = ;;

		*node[0x58f269c616a0] = print;

		*node[0x58f269c616d0] = 8;

		*node[0x58f269c61700] = ;;

		*node[0x58f269c61730] = print;

		*node[0x58f269c61760] = 10;

		*node[0x58f269c61790] = else;

		*node[0x58f269c617c0] = op_no;

		*node[0x58f269c617f0] = ;;

		*node[0x58f269c61820] = print;

		*node[0x58f269c61850] = 7;

		*node[0x58f269c61880] = ;;

		*node[0x58f269c618b0] = return;

		*node[0x58f269c618e0] = 0;

		*node[0x58f269c61910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff09d73750] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x632444d8cfd0] = ;;

		*node[0x632444d8d000] = 0;

		*node[0x632444d8d030] = ;;

		*node[0x632444d8d060] = input;

		*node[0x632444d8d090] = 1;

		*node[0x632444d8d0c0] = 2;

		*node[0x632444d8d0f0] = 3;

		*node[0x632444d8d120] = ;;

		*node[0x632444d8d180] = 1;

		*node[0x632444d8d1b0] = 2;

		*node[0x632444d8d1e0] = 3;

		*node[0x632444d8d210] = ;;

		*node[0x632444d8d240] = 4;

		*node[0x632444d8d270] = 1;

		*node[0x632444d8d2a0] = 2;

		*node[0x632444d8d2d0] = 3;

		*node[0x632444d8d300] = ;;

		*node[0x632444d8d330] = if;

		*node[0x632444d8d360] = op_no;

		*node[0x632444d8d390] = ==;

		*node[0x632444d8d3c0] = 1;

		*node[0x632444d8d3f0] = 0;

		*node[0x632444d8d420] = ;;

		*node[0x632444d8d480] = 2;

		*node[0x632444d8d4b0] = 3;

		*node[0x632444d8d4e0] = else;

		*node[0x632444d8d510] = op_no;

		*node[0x632444d8d540] = ;;

		*node[0x632444d8d5a0] = 1;

		*node[0x632444d8d5d0] = 2;

		*node[0x632444d8d600] = 3;

		*node[0x632444d8d630] = ;;

		*node[0x632444d8d660] = 5;

		*node[0x632444d8d690] = 1;

		*node[0x632444d8d6c0] = 2;

		*node[0x632444d8d6f0] = ;;

		*node[0x632444d8d720] = =;

		*node[0x632444d8d750] = 7;

		*node[0x632444d8d780] = -;

		*node[0x632444d8d7b0] = 0;

		*node[0x632444d8d7e0] = 1;

		*node[0x632444d8d810] = ;;

		*node[0x632444d8d840] = =;

		*node[0x632444d8d870] = 8;

		*node[0x632444d8d8a0] = 1;

		*node[0x632444d8d8d0] = ;;

		*node[0x632444d8d900] = =;

		*node[0x632444d8d930] = 9;

		*node[0x632444d8d960] = 1000;

		*node[0x632444d8d990] = ;;

		*node[0x632444d8d9c0] = if;

		*node[0x632444d8d9f0] = op_no;

		*node[0x632444d8da20] = ==;

		*node[0x632444d8da50] = 1;

		*node[0x632444d8da80] = 0;

		*node[0x632444d8dab0] = ;;

		*node[0x632444d8dae0] = if;

		*node[0x632444d8db10] = op_no;

		*node[0x632444d8db40] = ==;

		*node[0x632444d8db70] = 2;

		*node[0x632444d8dba0] = 0;

		*node[0x632444d8dbd0] = ;;

		*node[0x632444d8dc00] = print;

		*node[0x632444d8dc30] = 9;

		*node[0x632444d8dc60] = else;

		*node[0x632444d8dc90] = op_no;

		*node[0x632444d8dcc0] = ;;

		*node[0x632444d8dcf0] = print;

		*node[0x632444d8dd20] = 7;

		*node[0x632444d8dd50] = else;

		*node[0x632444d8dd80] = op_no;

		*node[0x632444d8ddb0] = ;;

		*node[0x632444d8dde0] = =;

		*node[0x632444d8de10] = 10;

		*node[0x632444d8de40] = /;

		*node[0x632444d8de70] = -;

		*node[0x632444d8dea0] = 0;

		*node[0x632444d8ded0] = 2;

		*node[0x632444d8df00] = 1;

		*node[0x632444d8df30] = ;;

		*node[0x632444d8df60] = print;

		*node[0x632444d8df90] = 8;

		*node[0x632444d8dfc0] = ;;

		*node[0x632444d8dff0] = print;

		*node[0x632444d8e020] = 10;

		*node[0x632444d8e050] = ;;

		*node[0x632444d8e080] = return;

		*node[0x632444d8e0b0] = 0;

		*node[0x632444d8e0e0] = ;;

		*node[0x632444d8e110] = 6;

		*node[0x632444d8e140] = 1;

		*node[0x632444d8e170] = 2;

		*node[0x632444d8e1a0] = 3;

		*node[0x632444d8e1d0] = ;;

		*node[0x632444d8e200] = =;

		*node[0x632444d8e230] = 7;

		*node[0x632444d8e260] = -;

		*node[0x632444d8e290] = 0;

		*node[0x632444d8e2c0] = 1;

		*node[0x632444d8e2f0] = ;;

		*node[0x632444d8e320] = =;

		*node[0x632444d8e350] = 8;

		*node[0x632444d8e380] = 1;

		*node[0x632444d8e3b0] = ;;

		*node[0x632444d8e3e0] = =;

		*node[0x632444d8e410] = 11;

		*node[0x632444d8e440] = 2;

		*node[0x632444d8e470] = ;;

		*node[0x632444d8e4a0] = if;

		*node[0x632444d8e4d0] = op_no;

		*node[0x632444d8e500] = ==;

		*node[0x632444d8e530] = 3;

		*node[0x632444d8e560] = 0;

		*node[0x632444d8e590] = ;;

		*node[0x632444d8e5c0] = =;

		*node[0x632444d8e5f0] = 12;

		*node[0x632444d8e620] = 0;

		*node[0x632444d8e650] = ;;

		*node[0x632444d8e680] = =;

		*node[0x632444d8e6b0] = 13;

		*node[0x632444d8e6e0] = /;

		*node[0x632444d8e710] = -;

		*node[0x632444d8e740] = 0;

		*node[0x632444d8e770] = 2;

		*node[0x632444d8e7a0] = 1;

		*node[0x632444d8e7d0] = ;;

		*node[0x632444d8e800] = print;

		*node[0x632444d8e830] = 11;

		*node[0x632444d8e860] = ;;

		*node[0x632444d8e890] = print;

		*node[0x632444d8e8c0] = 12;

		*node[0x632444d8e8f0] = 13;

		*node[0x632444d8e920] = else;

		*node[0x632444d8e950] = op_no;

		*node[0x632444d8e980] = ;;

		*node[0x632444d8e9b0] = =;

		*node[0x632444d8e9e0] = 14;

		*node[0x632444d8ea10] = -;

		*node[0x632444d8ea40] = *;

		*node[0x632444d8ea70] = 2;

		*node[0x632444d8eaa0] = 2;

		*node[0x632444d8ead0] = *;

		*node[0x632444d8eb00] = *;

		*node[0x632444d8eb30] = 4;

		*node[0x632444d8eb60] = 1;

		*node[0x632444d8eb90] = 3;

		*node[0x632444d8ebc0] = ;;

		*node[0x632444d8ebf0] = if;

		*node[0x632444d8ec20] = op_no;

		*node[0x632444d8ec50] = >;

		*node[0x632444d8ec80] = 14;

		*node[0x632444d8ecb0] = 0;

		*node[0x632444d8ece0] = ;;

		*node[0x632444d8ed10] = =;

		*node[0x632444d8ed40] = 15;

		*node[0x632444d8ed70] = sqrt;

		*node[0x632444d8eda0] = 14;

		*node[0x632444d8edd0] = ;;

		*node[0x632444d8ee00] = =;

		*node[0x632444d8ee30] = 12;

		*node[0x632444d8ee60] = /;

		*node[0x632444d8ee90] = -;

		*node[0x632444d8eec0] = -;

		*node[0x632444d8eef0] = 0;

		*node[0x632444d8ef20] = 2;

		*node[0x632444d8ef50] = 15;

		*node[0x632444d8ef80] = *;

		*node[0x632444d8efb0] = 2;

		*node[0x632444d8efe0] = 1;

		*node[0x632444d8f010] = ;;

		*node[0x632444d8f040] = =;

		*node[0x632444d8f070] = 13;

		*node[0x632444d8f0a0] = /;

		*node[0x632444d8f0d0] = +;

		*node[0x632444d8f100] = -;

		*node[0x632444d8f130] = 0;

		*node[0x632444d8f160] = 2;

		*node[0x632444d8f190] = 15;

		*node[0x632444d8f1c0] = *;

		*node[0x632444d8f1f0] = 2;

		*node[0x632444d8f220] = 1;

		*node[0x632444d8f250] = ;;

		*node[0x632444d8f280] = print;

		*node[0x632444d8f2b0] = 11;

		*node[0x632444d8f2e0] = ;;

		*node[0x632444d8f310] = print;

		*node[0x632444d8f340] = 12;

		*node[0x632444d8f370] = 13;

		*node[0x632444d8f3a0] = elseif;

		*node[0x632444d8f3d0] = op_no;

		*node[0x632444d8f400] = ==;

		*node[0x632444d8f430] = 14;

		*node[0x632444d8f460] = 0;

		*node[0x632444d8f490] = ;;

		*node[0x632444d8f4c0] = =;

		*node[0x632444d8f4f0] = 10;

		*node[0x632444d8f520] = /;

		*node[0x632444d8f550] = -;

		*node[0x632444d8f580] = 0;

		*node[0x632444d8f5b0] = 2;

		*node[0x632444d8f5e0] = *;

		*node[0x632444d8f610] = 2;

		*node[0x632444d8f640] = 1;

		*node[0x632444d8f670] = ;;

		*node[0x632444d8f6a0] = print;

		*node[0x632444d8f6d0] = 8;

		*node[0x632444d8f700] = ;;

		*node[0x632444d8f730] = print;

		*node[0x632444d8f760] = 10;

		*node[0x632444d8f790] = else;

		*node[0x632444d8f7c0] = op_no;

		*node[0x632444d8f7f0] = ;;

		*node[0x632444d8f820] = print;

		*node[0x632444d8f850] = 7;

		*node[0x632444d8f880] = ;;

		*node[0x632444d8f8b0] = return;

		*node[0x632444d8f8e0] = 0;

		*node[0x632444d8f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe41d15450] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5f6b4d0e9fd0] = ;;

		*node[0x5f6b4d0ea000] = 0;

		*node[0x5f6b4d0ea030] = ;;

		*node[0x5f6b4d0ea060] = input;

		*node[0x5f6b4d0ea090] = 1;

		*node[0x5f6b4d0ea0c0] = 2;

		*node[0x5f6b4d0ea0f0] = 3;

		*node[0x5f6b4d0ea120] = ;;

		*node[0x5f6b4d0ea180] = 1;

		*node[0x5f6b4d0ea1b0] = 2;

		*node[0x5f6b4d0ea1e0] = 3;

		*node[0x5f6b4d0ea210] = ;;

		*node[0x5f6b4d0ea240] = 4;

		*node[0x5f6b4d0ea270] = 1;

		*node[0x5f6b4d0ea2a0] = 2;

		*node[0x5f6b4d0ea2d0] = 3;

		*node[0x5f6b4d0ea300] = ;;

		*node[0x5f6b4d0ea330] = if;

		*node[0x5f6b4d0ea360] = op_no;

		*node[0x5f6b4d0ea390] = ==;

		*node[0x5f6b4d0ea3c0] = 1;

		*node[0x5f6b4d0ea3f0] = 0;

		*node[0x5f6b4d0ea420] = ;;

		*node[0x5f6b4d0ea480] = 2;

		*node[0x5f6b4d0ea4b0] = 3;

		*node[0x5f6b4d0ea4e0] = else;

		*node[0x5f6b4d0ea510] = op_no;

		*node[0x5f6b4d0ea540] = ;;

		*node[0x5f6b4d0ea5a0] = 1;

		*node[0x5f6b4d0ea5d0] = 2;

		*node[0x5f6b4d0ea600] = 3;

		*node[0x5f6b4d0ea630] = ;;

		*node[0x5f6b4d0ea660] = 5;

		*node[0x5f6b4d0ea690] = 1;

		*node[0x5f6b4d0ea6c0] = 2;

		*node[0x5f6b4d0ea6f0] = ;;

		*node[0x5f6b4d0ea720] = =;

		*node[0x5f6b4d0ea750] = 7;

		*node[0x5f6b4d0ea780] = -;

		*node[0x5f6b4d0ea7b0] = 0;

		*node[0x5f6b4d0ea7e0] = 1;

		*node[0x5f6b4d0ea810] = ;;

		*node[0x5f6b4d0ea840] = =;

		*node[0x5f6b4d0ea870] = 8;

		*node[0x5f6b4d0ea8a0] = 1;

		*node[0x5f6b4d0ea8d0] = ;;

		*node[0x5f6b4d0ea900] = =;

		*node[0x5f6b4d0ea930] = 9;

		*node[0x5f6b4d0ea960] = 1000;

		*node[0x5f6b4d0ea990] = ;;

		*node[0x5f6b4d0ea9c0] = if;

		*node[0x5f6b4d0ea9f0] = op_no;

		*node[0x5f6b4d0eaa20] = ==;

		*node[0x5f6b4d0eaa50] = 1;

		*node[0x5f6b4d0eaa80] = 0;

		*node[0x5f6b4d0eaab0] = ;;

		*node[0x5f6b4d0eaae0] = if;

		*node[0x5f6b4d0eab10] = op_no;

		*node[0x5f6b4d0eab40] = ==;

		*node[0x5f6b4d0eab70] = 2;

		*node[0x5f6b4d0eaba0] = 0;

		*node[0x5f6b4d0eabd0] = ;;

		*node[0x5f6b4d0eac00] = print;

		*node[0x5f6b4d0eac30] = 9;

		*node[0x5f6b4d0eac60] = else;

		*node[0x5f6b4d0eac90] = op_no;

		*node[0x5f6b4d0eacc0] = ;;

		*node[0x5f6b4d0eacf0] = print;

		*node[0x5f6b4d0ead20] = 7;

		*node[0x5f6b4d0ead50] = else;

		*node[0x5f6b4d0ead80] = op_no;

		*node[0x5f6b4d0eadb0] = ;;

		*node[0x5f6b4d0eade0] = =;

		*node[0x5f6b4d0eae10] = 10;

		*node[0x5f6b4d0eae40] = /;

		*node[0x5f6b4d0eae70] = -;

		*node[0x5f6b4d0eaea0] = 0;

		*node[0x5f6b4d0eaed0] = 2;

		*node[0x5f6b4d0eaf00] = 1;

		*node[0x5f6b4d0eaf30] = ;;

		*node[0x5f6b4d0eaf60] = print;

		*node[0x5f6b4d0eaf90] = 8;

		*node[0x5f6b4d0eafc0] = ;;

		*node[0x5f6b4d0eaff0] = print;

		*node[0x5f6b4d0eb020] = 10;

		*node[0x5f6b4d0eb050] = ;;

		*node[0x5f6b4d0eb080] = return;

		*node[0x5f6b4d0eb0b0] = 0;

		*node[0x5f6b4d0eb0e0] = ;;

		*node[0x5f6b4d0eb110] = 6;

		*node[0x5f6b4d0eb140] = 1;

		*node[0x5f6b4d0eb170] = 2;

		*node[0x5f6b4d0eb1a0] = 3;

		*node[0x5f6b4d0eb1d0] = ;;

		*node[0x5f6b4d0eb200] = =;

		*node[0x5f6b4d0eb230] = 7;

		*node[0x5f6b4d0eb260] = -;

		*node[0x5f6b4d0eb290] = 0;

		*node[0x5f6b4d0eb2c0] = 1;

		*node[0x5f6b4d0eb2f0] = ;;

		*node[0x5f6b4d0eb320] = =;

		*node[0x5f6b4d0eb350] = 8;

		*node[0x5f6b4d0eb380] = 1;

		*node[0x5f6b4d0eb3b0] = ;;

		*node[0x5f6b4d0eb3e0] = =;

		*node[0x5f6b4d0eb410] = 11;

		*node[0x5f6b4d0eb440] = 2;

		*node[0x5f6b4d0eb470] = ;;

		*node[0x5f6b4d0eb4a0] = if;

		*node[0x5f6b4d0eb4d0] = op_no;

		*node[0x5f6b4d0eb500] = ==;

		*node[0x5f6b4d0eb530] = 3;

		*node[0x5f6b4d0eb560] = 0;

		*node[0x5f6b4d0eb590] = ;;

		*node[0x5f6b4d0eb5c0] = =;

		*node[0x5f6b4d0eb5f0] = 12;

		*node[0x5f6b4d0eb620] = 0;

		*node[0x5f6b4d0eb650] = ;;

		*node[0x5f6b4d0eb680] = =;

		*node[0x5f6b4d0eb6b0] = 13;

		*node[0x5f6b4d0eb6e0] = /;

		*node[0x5f6b4d0eb710] = -;

		*node[0x5f6b4d0eb740] = 0;

		*node[0x5f6b4d0eb770] = 2;

		*node[0x5f6b4d0eb7a0] = 1;

		*node[0x5f6b4d0eb7d0] = ;;

		*node[0x5f6b4d0eb800] = print;

		*node[0x5f6b4d0eb830] = 11;

		*node[0x5f6b4d0eb860] = ;;

		*node[0x5f6b4d0eb890] = print;

		*node[0x5f6b4d0eb8c0] = 12;

		*node[0x5f6b4d0eb8f0] = 13;

		*node[0x5f6b4d0eb920] = else;

		*node[0x5f6b4d0eb950] = op_no;

		*node[0x5f6b4d0eb980] = ;;

		*node[0x5f6b4d0eb9b0] = =;

		*node[0x5f6b4d0eb9e0] = 14;

		*node[0x5f6b4d0eba10] = -;

		*node[0x5f6b4d0eba40] = *;

		*node[0x5f6b4d0eba70] = 2;

		*node[0x5f6b4d0ebaa0] = 2;

		*node[0x5f6b4d0ebad0] = *;

		*node[0x5f6b4d0ebb00] = *;

		*node[0x5f6b4d0ebb30] = 4;

		*node[0x5f6b4d0ebb60] = 1;

		*node[0x5f6b4d0ebb90] = 3;

		*node[0x5f6b4d0ebbc0] = ;;

		*node[0x5f6b4d0ebbf0] = if;

		*node[0x5f6b4d0ebc20] = op_no;

		*node[0x5f6b4d0ebc50] = >;

		*node[0x5f6b4d0ebc80] = 14;

		*node[0x5f6b4d0ebcb0] = 0;

		*node[0x5f6b4d0ebce0] = ;;

		*node[0x5f6b4d0ebd10] = =;

		*node[0x5f6b4d0ebd40] = 15;

		*node[0x5f6b4d0ebd70] = sqrt;

		*node[0x5f6b4d0ebda0] = 14;

		*node[0x5f6b4d0ebdd0] = ;;

		*node[0x5f6b4d0ebe00] = =;

		*node[0x5f6b4d0ebe30] = 12;

		*node[0x5f6b4d0ebe60] = /;

		*node[0x5f6b4d0ebe90] = -;

		*node[0x5f6b4d0ebec0] = -;

		*node[0x5f6b4d0ebef0] = 0;

		*node[0x5f6b4d0ebf20] = 2;

		*node[0x5f6b4d0ebf50] = 15;

		*node[0x5f6b4d0ebf80] = *;

		*node[0x5f6b4d0ebfb0] = 2;

		*node[0x5f6b4d0ebfe0] = 1;

		*node[0x5f6b4d0ec010] = ;;

		*node[0x5f6b4d0ec040] = =;

		*node[0x5f6b4d0ec070] = 13;

		*node[0x5f6b4d0ec0a0] = /;

		*node[0x5f6b4d0ec0d0] = +;

		*node[0x5f6b4d0ec100] = -;

		*node[0x5f6b4d0ec130] = 0;

		*node[0x5f6b4d0ec160] = 2;

		*node[0x5f6b4d0ec190] = 15;

		*node[0x5f6b4d0ec1c0] = *;

		*node[0x5f6b4d0ec1f0] = 2;

		*node[0x5f6b4d0ec220] = 1;

		*node[0x5f6b4d0ec250] = ;;

		*node[0x5f6b4d0ec280] = print;

		*node[0x5f6b4d0ec2b0] = 11;

		*node[0x5f6b4d0ec2e0] = ;;

		*node[0x5f6b4d0ec310] = print;

		*node[0x5f6b4d0ec340] = 12;

		*node[0x5f6b4d0ec370] = 13;

		*node[0x5f6b4d0ec3a0] = elseif;

		*node[0x5f6b4d0ec3d0] = op_no;

		*node[0x5f6b4d0ec400] = ==;

		*node[0x5f6b4d0ec430] = 14;

		*node[0x5f6b4d0ec460] = 0;

		*node[0x5f6b4d0ec490] = ;;

		*node[0x5f6b4d0ec4c0] = =;

		*node[0x5f6b4d0ec4f0] = 10;

		*node[0x5f6b4d0ec520] = /;

		*node[0x5f6b4d0ec550] = -;

		*node[0x5f6b4d0ec580] = 0;

		*node[0x5f6b4d0ec5b0] = 2;

		*node[0x5f6b4d0ec5e0] = *;

		*node[0x5f6b4d0ec610] = 2;

		*node[0x5f6b4d0ec640] = 1;

		*node[0x5f6b4d0ec670] = ;;

		*node[0x5f6b4d0ec6a0] = print;

		*node[0x5f6b4d0ec6d0] = 8;

		*node[0x5f6b4d0ec700] = ;;

		*node[0x5f6b4d0ec730] = print;

		*node[0x5f6b4d0ec760] = 10;

		*node[0x5f6b4d0ec790] = else;

		*node[0x5f6b4d0ec7c0] = op_no;

		*node[0x5f6b4d0ec7f0] = ;;

		*node[0x5f6b4d0ec820] = print;

		*node[0x5f6b4d0ec850] = 7;

		*node[0x5f6b4d0ec880] = ;;

		*node[0x5f6b4d0ec8b0] = return;

		*node[0x5f6b4d0ec8e0] = 0;

		*node[0x5f6b4d0ec910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc24dce3d0] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x582a6b402fd0] = ;;

		*node[0x582a6b403000] = 0;

		*node[0x582a6b403030] = ;;

		*node[0x582a6b403060] = input;

		*node[0x582a6b403090] = 1;

		*node[0x582a6b4030c0] = 2;

		*node[0x582a6b4030f0] = 3;

		*node[0x582a6b403120] = ;;

		*node[0x582a6b403180] = 1;

		*node[0x582a6b4031b0] = 2;

		*node[0x582a6b4031e0] = 3;

		*node[0x582a6b403210] = ;;

		*node[0x582a6b403240] = 4;

		*node[0x582a6b403270] = 1;

		*node[0x582a6b4032a0] = 2;

		*node[0x582a6b4032d0] = 3;

		*node[0x582a6b403300] = ;;

		*node[0x582a6b403330] = if;

		*node[0x582a6b403360] = op_no;

		*node[0x582a6b403390] = ==;

		*node[0x582a6b4033c0] = 1;

		*node[0x582a6b4033f0] = 0;

		*node[0x582a6b403420] = ;;

		*node[0x582a6b403480] = 2;

		*node[0x582a6b4034b0] = 3;

		*node[0x582a6b4034e0] = else;

		*node[0x582a6b403510] = op_no;

		*node[0x582a6b403540] = ;;

		*node[0x582a6b4035a0] = 1;

		*node[0x582a6b4035d0] = 2;

		*node[0x582a6b403600] = 3;

		*node[0x582a6b403630] = ;;

		*node[0x582a6b403660] = 5;

		*node[0x582a6b403690] = 1;

		*node[0x582a6b4036c0] = 2;

		*node[0x582a6b4036f0] = ;;

		*node[0x582a6b403720] = =;

		*node[0x582a6b403750] = 7;

		*node[0x582a6b403780] = -;

		*node[0x582a6b4037b0] = 0;

		*node[0x582a6b4037e0] = 1;

		*node[0x582a6b403810] = ;;

		*node[0x582a6b403840] = =;

		*node[0x582a6b403870] = 8;

		*node[0x582a6b4038a0] = 1;

		*node[0x582a6b4038d0] = ;;

		*node[0x582a6b403900] = =;

		*node[0x582a6b403930] = 9;

		*node[0x582a6b403960] = 1000;

		*node[0x582a6b403990] = ;;

		*node[0x582a6b4039c0] = if;

		*node[0x582a6b4039f0] = op_no;

		*node[0x582a6b403a20] = ==;

		*node[0x582a6b403a50] = 1;

		*node[0x582a6b403a80] = 0;

		*node[0x582a6b403ab0] = ;;

		*node[0x582a6b403ae0] = if;

		*node[0x582a6b403b10] = op_no;

		*node[0x582a6b403b40] = ==;

		*node[0x582a6b403b70] = 2;

		*node[0x582a6b403ba0] = 0;

		*node[0x582a6b403bd0] = ;;

		*node[0x582a6b403c00] = print;

		*node[0x582a6b403c30] = 9;

		*node[0x582a6b403c60] = else;

		*node[0x582a6b403c90] = op_no;

		*node[0x582a6b403cc0] = ;;

		*node[0x582a6b403cf0] = print;

		*node[0x582a6b403d20] = 7;

		*node[0x582a6b403d50] = else;

		*node[0x582a6b403d80] = op_no;

		*node[0x582a6b403db0] = ;;

		*node[0x582a6b403de0] = =;

		*node[0x582a6b403e10] = 10;

		*node[0x582a6b403e40] = /;

		*node[0x582a6b403e70] = -;

		*node[0x582a6b403ea0] = 0;

		*node[0x582a6b403ed0] = 2;

		*node[0x582a6b403f00] = 1;

		*node[0x582a6b403f30] = ;;

		*node[0x582a6b403f60] = print;

		*node[0x582a6b403f90] = 8;

		*node[0x582a6b403fc0] = ;;

		*node[0x582a6b403ff0] = print;

		*node[0x582a6b404020] = 10;

		*node[0x582a6b404050] = ;;

		*node[0x582a6b404080] = return;

		*node[0x582a6b4040b0] = 0;

		*node[0x582a6b4040e0] = ;;

		*node[0x582a6b404110] = 6;

		*node[0x582a6b404140] = 1;

		*node[0x582a6b404170] = 2;

		*node[0x582a6b4041a0] = 3;

		*node[0x582a6b4041d0] = ;;

		*node[0x582a6b404200] = =;

		*node[0x582a6b404230] = 7;

		*node[0x582a6b404260] = -;

		*node[0x582a6b404290] = 0;

		*node[0x582a6b4042c0] = 1;

		*node[0x582a6b4042f0] = ;;

		*node[0x582a6b404320] = =;

		*node[0x582a6b404350] = 8;

		*node[0x582a6b404380] = 1;

		*node[0x582a6b4043b0] = ;;

		*node[0x582a6b4043e0] = =;

		*node[0x582a6b404410] = 11;

		*node[0x582a6b404440] = 2;

		*node[0x582a6b404470] = ;;

		*node[0x582a6b4044a0] = if;

		*node[0x582a6b4044d0] = op_no;

		*node[0x582a6b404500] = ==;

		*node[0x582a6b404530] = 3;

		*node[0x582a6b404560] = 0;

		*node[0x582a6b404590] = ;;

		*node[0x582a6b4045c0] = =;

		*node[0x582a6b4045f0] = 12;

		*node[0x582a6b404620] = 0;

		*node[0x582a6b404650] = ;;

		*node[0x582a6b404680] = =;

		*node[0x582a6b4046b0] = 13;

		*node[0x582a6b4046e0] = /;

		*node[0x582a6b404710] = -;

		*node[0x582a6b404740] = 0;

		*node[0x582a6b404770] = 2;

		*node[0x582a6b4047a0] = 1;

		*node[0x582a6b4047d0] = ;;

		*node[0x582a6b404800] = print;

		*node[0x582a6b404830] = 11;

		*node[0x582a6b404860] = ;;

		*node[0x582a6b404890] = print;

		*node[0x582a6b4048c0] = 12;

		*node[0x582a6b4048f0] = 13;

		*node[0x582a6b404920] = else;

		*node[0x582a6b404950] = op_no;

		*node[0x582a6b404980] = ;;

		*node[0x582a6b4049b0] = =;

		*node[0x582a6b4049e0] = 14;

		*node[0x582a6b404a10] = -;

		*node[0x582a6b404a40] = *;

		*node[0x582a6b404a70] = 2;

		*node[0x582a6b404aa0] = 2;

		*node[0x582a6b404ad0] = *;

		*node[0x582a6b404b00] = *;

		*node[0x582a6b404b30] = 4;

		*node[0x582a6b404b60] = 1;

		*node[0x582a6b404b90] = 3;

		*node[0x582a6b404bc0] = ;;

		*node[0x582a6b404bf0] = if;

		*node[0x582a6b404c20] = op_no;

		*node[0x582a6b404c50] = >;

		*node[0x582a6b404c80] = 14;

		*node[0x582a6b404cb0] = 0;

		*node[0x582a6b404ce0] = ;;

		*node[0x582a6b404d10] = =;

		*node[0x582a6b404d40] = 15;

		*node[0x582a6b404d70] = sqrt;

		*node[0x582a6b404da0] = 14;

		*node[0x582a6b404dd0] = ;;

		*node[0x582a6b404e00] = =;

		*node[0x582a6b404e30] = 12;

		*node[0x582a6b404e60] = /;

		*node[0x582a6b404e90] = -;

		*node[0x582a6b404ec0] = -;

		*node[0x582a6b404ef0] = 0;

		*node[0x582a6b404f20] = 2;

		*node[0x582a6b404f50] = 15;

		*node[0x582a6b404f80] = *;

		*node[0x582a6b404fb0] = 2;

		*node[0x582a6b404fe0] = 1;

		*node[0x582a6b405010] = ;;

		*node[0x582a6b405040] = =;

		*node[0x582a6b405070] = 13;

		*node[0x582a6b4050a0] = /;

		*node[0x582a6b4050d0] = +;

		*node[0x582a6b405100] = -;

		*node[0x582a6b405130] = 0;

		*node[0x582a6b405160] = 2;

		*node[0x582a6b405190] = 15;

		*node[0x582a6b4051c0] = *;

		*node[0x582a6b4051f0] = 2;

		*node[0x582a6b405220] = 1;

		*node[0x582a6b405250] = ;;

		*node[0x582a6b405280] = print;

		*node[0x582a6b4052b0] = 11;

		*node[0x582a6b4052e0] = ;;

		*node[0x582a6b405310] = print;

		*node[0x582a6b405340] = 12;

		*node[0x582a6b405370] = 13;

		*node[0x582a6b4053a0] = elseif;

		*node[0x582a6b4053d0] = op_no;

		*node[0x582a6b405400] = ==;

		*node[0x582a6b405430] = 14;

		*node[0x582a6b405460] = 0;

		*node[0x582a6b405490] = ;;

		*node[0x582a6b4054c0] = =;

		*node[0x582a6b4054f0] = 10;

		*node[0x582a6b405520] = /;

		*node[0x582a6b405550] = -;

		*node[0x582a6b405580] = 0;

		*node[0x582a6b4055b0] = 2;

		*node[0x582a6b4055e0] = *;

		*node[0x582a6b405610] = 2;

		*node[0x582a6b405640] = 1;

		*node[0x582a6b405670] = ;;

		*node[0x582a6b4056a0] = print;

		*node[0x582a6b4056d0] = 8;

		*node[0x582a6b405700] = ;;

		*node[0x582a6b405730] = print;

		*node[0x582a6b405760] = 10;

		*node[0x582a6b405790] = else;

		*node[0x582a6b4057c0] = op_no;

		*node[0x582a6b4057f0] = ;;

		*node[0x582a6b405820] = print;

		*node[0x582a6b405850] = 7;

		*node[0x582a6b405880] = ;;

		*node[0x582a6b4058b0] = return;

		*node[0x582a6b4058e0] = 0;

		*node[0x582a6b405910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff7ebd5140] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5ec162f93fd0] = ;;

		*node[0x5ec162f94000] = 0;

		*node[0x5ec162f94030] = ;;

		*node[0x5ec162f94060] = input;

		*node[0x5ec162f94090] = 1;

		*node[0x5ec162f940c0] = 2;

		*node[0x5ec162f940f0] = 3;

		*node[0x5ec162f94120] = ;;

		*node[0x5ec162f94180] = 1;

		*node[0x5ec162f941b0] = 2;

		*node[0x5ec162f941e0] = 3;

		*node[0x5ec162f94210] = ;;

		*node[0x5ec162f94240] = 4;

		*node[0x5ec162f94270] = 1;

		*node[0x5ec162f942a0] = 2;

		*node[0x5ec162f942d0] = 3;

		*node[0x5ec162f94300] = ;;

		*node[0x5ec162f94330] = if;

		*node[0x5ec162f94360] = op_no;

		*node[0x5ec162f94390] = ==;

		*node[0x5ec162f943c0] = 1;

		*node[0x5ec162f943f0] = 0;

		*node[0x5ec162f94420] = ;;

		*node[0x5ec162f94480] = 2;

		*node[0x5ec162f944b0] = 3;

		*node[0x5ec162f944e0] = else;

		*node[0x5ec162f94510] = op_no;

		*node[0x5ec162f94540] = ;;

		*node[0x5ec162f945a0] = 1;

		*node[0x5ec162f945d0] = 2;

		*node[0x5ec162f94600] = 3;

		*node[0x5ec162f94630] = ;;

		*node[0x5ec162f94660] = 5;

		*node[0x5ec162f94690] = 1;

		*node[0x5ec162f946c0] = 2;

		*node[0x5ec162f946f0] = ;;

		*node[0x5ec162f94720] = =;

		*node[0x5ec162f94750] = 7;

		*node[0x5ec162f94780] = -;

		*node[0x5ec162f947b0] = 0;

		*node[0x5ec162f947e0] = 1;

		*node[0x5ec162f94810] = ;;

		*node[0x5ec162f94840] = =;

		*node[0x5ec162f94870] = 8;

		*node[0x5ec162f948a0] = 1;

		*node[0x5ec162f948d0] = ;;

		*node[0x5ec162f94900] = =;

		*node[0x5ec162f94930] = 9;

		*node[0x5ec162f94960] = 1000;

		*node[0x5ec162f94990] = ;;

		*node[0x5ec162f949c0] = if;

		*node[0x5ec162f949f0] = op_no;

		*node[0x5ec162f94a20] = ==;

		*node[0x5ec162f94a50] = 1;

		*node[0x5ec162f94a80] = 0;

		*node[0x5ec162f94ab0] = ;;

		*node[0x5ec162f94ae0] = if;

		*node[0x5ec162f94b10] = op_no;

		*node[0x5ec162f94b40] = ==;

		*node[0x5ec162f94b70] = 2;

		*node[0x5ec162f94ba0] = 0;

		*node[0x5ec162f94bd0] = ;;

		*node[0x5ec162f94c00] = print;

		*node[0x5ec162f94c30] = 9;

		*node[0x5ec162f94c60] = else;

		*node[0x5ec162f94c90] = op_no;

		*node[0x5ec162f94cc0] = ;;

		*node[0x5ec162f94cf0] = print;

		*node[0x5ec162f94d20] = 7;

		*node[0x5ec162f94d50] = else;

		*node[0x5ec162f94d80] = op_no;

		*node[0x5ec162f94db0] = ;;

		*node[0x5ec162f94de0] = =;

		*node[0x5ec162f94e10] = 10;

		*node[0x5ec162f94e40] = /;

		*node[0x5ec162f94e70] = -;

		*node[0x5ec162f94ea0] = 0;

		*node[0x5ec162f94ed0] = 2;

		*node[0x5ec162f94f00] = 1;

		*node[0x5ec162f94f30] = ;;

		*node[0x5ec162f94f60] = print;

		*node[0x5ec162f94f90] = 8;

		*node[0x5ec162f94fc0] = ;;

		*node[0x5ec162f94ff0] = print;

		*node[0x5ec162f95020] = 10;

		*node[0x5ec162f95050] = ;;

		*node[0x5ec162f95080] = return;

		*node[0x5ec162f950b0] = 0;

		*node[0x5ec162f950e0] = ;;

		*node[0x5ec162f95110] = 6;

		*node[0x5ec162f95140] = 1;

		*node[0x5ec162f95170] = 2;

		*node[0x5ec162f951a0] = 3;

		*node[0x5ec162f951d0] = ;;

		*node[0x5ec162f95200] = =;

		*node[0x5ec162f95230] = 7;

		*node[0x5ec162f95260] = -;

		*node[0x5ec162f95290] = 0;

		*node[0x5ec162f952c0] = 1;

		*node[0x5ec162f952f0] = ;;

		*node[0x5ec162f95320] = =;

		*node[0x5ec162f95350] = 8;

		*node[0x5ec162f95380] = 1;

		*node[0x5ec162f953b0] = ;;

		*node[0x5ec162f953e0] = =;

		*node[0x5ec162f95410] = 11;

		*node[0x5ec162f95440] = 2;

		*node[0x5ec162f95470] = ;;

		*node[0x5ec162f954a0] = if;

		*node[0x5ec162f954d0] = op_no;

		*node[0x5ec162f95500] = ==;

		*node[0x5ec162f95530] = 3;

		*node[0x5ec162f95560] = 0;

		*node[0x5ec162f95590] = ;;

		*node[0x5ec162f955c0] = =;

		*node[0x5ec162f955f0] = 12;

		*node[0x5ec162f95620] = 0;

		*node[0x5ec162f95650] = ;;

		*node[0x5ec162f95680] = =;

		*node[0x5ec162f956b0] = 13;

		*node[0x5ec162f956e0] = /;

		*node[0x5ec162f95710] = -;

		*node[0x5ec162f95740] = 0;

		*node[0x5ec162f95770] = 2;

		*node[0x5ec162f957a0] = 1;

		*node[0x5ec162f957d0] = ;;

		*node[0x5ec162f95800] = print;

		*node[0x5ec162f95830] = 11;

		*node[0x5ec162f95860] = ;;

		*node[0x5ec162f95890] = print;

		*node[0x5ec162f958c0] = 12;

		*node[0x5ec162f958f0] = 13;

		*node[0x5ec162f95920] = else;

		*node[0x5ec162f95950] = op_no;

		*node[0x5ec162f95980] = ;;

		*node[0x5ec162f959b0] = =;

		*node[0x5ec162f959e0] = 14;

		*node[0x5ec162f95a10] = -;

		*node[0x5ec162f95a40] = *;

		*node[0x5ec162f95a70] = 2;

		*node[0x5ec162f95aa0] = 2;

		*node[0x5ec162f95ad0] = *;

		*node[0x5ec162f95b00] = *;

		*node[0x5ec162f95b30] = 4;

		*node[0x5ec162f95b60] = 1;

		*node[0x5ec162f95b90] = 3;

		*node[0x5ec162f95bc0] = ;;

		*node[0x5ec162f95bf0] = if;

		*node[0x5ec162f95c20] = op_no;

		*node[0x5ec162f95c50] = >;

		*node[0x5ec162f95c80] = 14;

		*node[0x5ec162f95cb0] = 0;

		*node[0x5ec162f95ce0] = ;;

		*node[0x5ec162f95d10] = =;

		*node[0x5ec162f95d40] = 15;

		*node[0x5ec162f95d70] = sqrt;

		*node[0x5ec162f95da0] = 14;

		*node[0x5ec162f95dd0] = ;;

		*node[0x5ec162f95e00] = =;

		*node[0x5ec162f95e30] = 12;

		*node[0x5ec162f95e60] = /;

		*node[0x5ec162f95e90] = -;

		*node[0x5ec162f95ec0] = -;

		*node[0x5ec162f95ef0] = 0;

		*node[0x5ec162f95f20] = 2;

		*node[0x5ec162f95f50] = 15;

		*node[0x5ec162f95f80] = *;

		*node[0x5ec162f95fb0] = 2;

		*node[0x5ec162f95fe0] = 1;

		*node[0x5ec162f96010] = ;;

		*node[0x5ec162f96040] = =;

		*node[0x5ec162f96070] = 13;

		*node[0x5ec162f960a0] = /;

		*node[0x5ec162f960d0] = +;

		*node[0x5ec162f96100] = -;

		*node[0x5ec162f96130] = 0;

		*node[0x5ec162f96160] = 2;

		*node[0x5ec162f96190] = 15;

		*node[0x5ec162f961c0] = *;

		*node[0x5ec162f961f0] = 2;

		*node[0x5ec162f96220] = 1;

		*node[0x5ec162f96250] = ;;

		*node[0x5ec162f96280] = print;

		*node[0x5ec162f962b0] = 11;

		*node[0x5ec162f962e0] = ;;

		*node[0x5ec162f96310] = print;

		*node[0x5ec162f96340] = 12;

		*node[0x5ec162f96370] = 13;

		*node[0x5ec162f963a0] = elseif;

		*node[0x5ec162f963d0] = op_no;

		*node[0x5ec162f96400] = ==;

		*node[0x5ec162f96430] = 14;

		*node[0x5ec162f96460] = 0;

		*node[0x5ec162f96490] = ;;

		*node[0x5ec162f964c0] = =;

		*node[0x5ec162f964f0] = 10;

		*node[0x5ec162f96520] = /;

		*node[0x5ec162f96550] = -;

		*node[0x5ec162f96580] = 0;

		*node[0x5ec162f965b0] = 2;

		*node[0x5ec162f965e0] = *;

		*node[0x5ec162f96610] = 2;

		*node[0x5ec162f96640] = 1;

		*node[0x5ec162f96670] = ;;

		*node[0x5ec162f966a0] = print;

		*node[0x5ec162f966d0] = 8;

		*node[0x5ec162f96700] = ;;

		*node[0x5ec162f96730] = print;

		*node[0x5ec162f96760] = 10;

		*node[0x5ec162f96790] = else;

		*node[0x5ec162f967c0] = op_no;

		*node[0x5ec162f967f0] = ;;

		*node[0x5ec162f96820] = print;

		*node[0x5ec162f96850] = 7;

		*node[0x5ec162f96880] = ;;

		*node[0x5ec162f968b0] = return;

		*node[0x5ec162f968e0] = 0;

		*node[0x5ec162f96910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffde03ee150] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x64862e2bffd0] = ;;

		*node[0x64862e2c0000] = 0;

		*node[0x64862e2c0030] = ;;

		*node[0x64862e2c0060] = input;

		*node[0x64862e2c0090] = 1;

		*node[0x64862e2c00c0] = 2;

		*node[0x64862e2c00f0] = 3;

		*node[0x64862e2c0120] = ;;

		*node[0x64862e2c0180] = 1;

		*node[0x64862e2c01b0] = 2;

		*node[0x64862e2c01e0] = 3;

		*node[0x64862e2c0210] = ;;

		*node[0x64862e2c0240] = 4;

		*node[0x64862e2c0270] = 1;

		*node[0x64862e2c02a0] = 2;

		*node[0x64862e2c02d0] = 3;

		*node[0x64862e2c0300] = ;;

		*node[0x64862e2c0330] = if;

		*node[0x64862e2c0360] = op_no;

		*node[0x64862e2c0390] = ==;

		*node[0x64862e2c03c0] = 1;

		*node[0x64862e2c03f0] = 0;

		*node[0x64862e2c0420] = ;;

		*node[0x64862e2c0480] = 2;

		*node[0x64862e2c04b0] = 3;

		*node[0x64862e2c04e0] = else;

		*node[0x64862e2c0510] = op_no;

		*node[0x64862e2c0540] = ;;

		*node[0x64862e2c05a0] = 1;

		*node[0x64862e2c05d0] = 2;

		*node[0x64862e2c0600] = 3;

		*node[0x64862e2c0630] = ;;

		*node[0x64862e2c0660] = 5;

		*node[0x64862e2c0690] = 1;

		*node[0x64862e2c06c0] = 2;

		*node[0x64862e2c06f0] = ;;

		*node[0x64862e2c0720] = =;

		*node[0x64862e2c0750] = 7;

		*node[0x64862e2c0780] = -;

		*node[0x64862e2c07b0] = 0;

		*node[0x64862e2c07e0] = 1;

		*node[0x64862e2c0810] = ;;

		*node[0x64862e2c0840] = =;

		*node[0x64862e2c0870] = 8;

		*node[0x64862e2c08a0] = 1;

		*node[0x64862e2c08d0] = ;;

		*node[0x64862e2c0900] = =;

		*node[0x64862e2c0930] = 9;

		*node[0x64862e2c0960] = 1000;

		*node[0x64862e2c0990] = ;;

		*node[0x64862e2c09c0] = if;

		*node[0x64862e2c09f0] = op_no;

		*node[0x64862e2c0a20] = ==;

		*node[0x64862e2c0a50] = 1;

		*node[0x64862e2c0a80] = 0;

		*node[0x64862e2c0ab0] = ;;

		*node[0x64862e2c0ae0] = if;

		*node[0x64862e2c0b10] = op_no;

		*node[0x64862e2c0b40] = ==;

		*node[0x64862e2c0b70] = 2;

		*node[0x64862e2c0ba0] = 0;

		*node[0x64862e2c0bd0] = ;;

		*node[0x64862e2c0c00] = print;

		*node[0x64862e2c0c30] = 9;

		*node[0x64862e2c0c60] = else;

		*node[0x64862e2c0c90] = op_no;

		*node[0x64862e2c0cc0] = ;;

		*node[0x64862e2c0cf0] = print;

		*node[0x64862e2c0d20] = 7;

		*node[0x64862e2c0d50] = else;

		*node[0x64862e2c0d80] = op_no;

		*node[0x64862e2c0db0] = ;;

		*node[0x64862e2c0de0] = =;

		*node[0x64862e2c0e10] = 10;

		*node[0x64862e2c0e40] = /;

		*node[0x64862e2c0e70] = -;

		*node[0x64862e2c0ea0] = 0;

		*node[0x64862e2c0ed0] = 2;

		*node[0x64862e2c0f00] = 1;

		*node[0x64862e2c0f30] = ;;

		*node[0x64862e2c0f60] = print;

		*node[0x64862e2c0f90] = 8;

		*node[0x64862e2c0fc0] = ;;

		*node[0x64862e2c0ff0] = print;

		*node[0x64862e2c1020] = 10;

		*node[0x64862e2c1050] = ;;

		*node[0x64862e2c1080] = return;

		*node[0x64862e2c10b0] = 0;

		*node[0x64862e2c10e0] = ;;

		*node[0x64862e2c1110] = 6;

		*node[0x64862e2c1140] = 1;

		*node[0x64862e2c1170] = 2;

		*node[0x64862e2c11a0] = 3;

		*node[0x64862e2c11d0] = ;;

		*node[0x64862e2c1200] = =;

		*node[0x64862e2c1230] = 7;

		*node[0x64862e2c1260] = -;

		*node[0x64862e2c1290] = 0;

		*node[0x64862e2c12c0] = 1;

		*node[0x64862e2c12f0] = ;;

		*node[0x64862e2c1320] = =;

		*node[0x64862e2c1350] = 8;

		*node[0x64862e2c1380] = 1;

		*node[0x64862e2c13b0] = ;;

		*node[0x64862e2c13e0] = =;

		*node[0x64862e2c1410] = 11;

		*node[0x64862e2c1440] = 2;

		*node[0x64862e2c1470] = ;;

		*node[0x64862e2c14a0] = if;

		*node[0x64862e2c14d0] = op_no;

		*node[0x64862e2c1500] = ==;

		*node[0x64862e2c1530] = 3;

		*node[0x64862e2c1560] = 0;

		*node[0x64862e2c1590] = ;;

		*node[0x64862e2c15c0] = =;

		*node[0x64862e2c15f0] = 12;

		*node[0x64862e2c1620] = 0;

		*node[0x64862e2c1650] = ;;

		*node[0x64862e2c1680] = =;

		*node[0x64862e2c16b0] = 13;

		*node[0x64862e2c16e0] = /;

		*node[0x64862e2c1710] = -;

		*node[0x64862e2c1740] = 0;

		*node[0x64862e2c1770] = 2;

		*node[0x64862e2c17a0] = 1;

		*node[0x64862e2c17d0] = ;;

		*node[0x64862e2c1800] = print;

		*node[0x64862e2c1830] = 11;

		*node[0x64862e2c1860] = ;;

		*node[0x64862e2c1890] = print;

		*node[0x64862e2c18c0] = 12;

		*node[0x64862e2c18f0] = 13;

		*node[0x64862e2c1920] = else;

		*node[0x64862e2c1950] = op_no;

		*node[0x64862e2c1980] = ;;

		*node[0x64862e2c19b0] = =;

		*node[0x64862e2c19e0] = 14;

		*node[0x64862e2c1a10] = -;

		*node[0x64862e2c1a40] = *;

		*node[0x64862e2c1a70] = 2;

		*node[0x64862e2c1aa0] = 2;

		*node[0x64862e2c1ad0] = *;

		*node[0x64862e2c1b00] = *;

		*node[0x64862e2c1b30] = 4;

		*node[0x64862e2c1b60] = 1;

		*node[0x64862e2c1b90] = 3;

		*node[0x64862e2c1bc0] = ;;

		*node[0x64862e2c1bf0] = if;

		*node[0x64862e2c1c20] = op_no;

		*node[0x64862e2c1c50] = >;

		*node[0x64862e2c1c80] = 14;

		*node[0x64862e2c1cb0] = 0;

		*node[0x64862e2c1ce0] = ;;

		*node[0x64862e2c1d10] = =;

		*node[0x64862e2c1d40] = 15;

		*node[0x64862e2c1d70] = sqrt;

		*node[0x64862e2c1da0] = 14;

		*node[0x64862e2c1dd0] = ;;

		*node[0x64862e2c1e00] = =;

		*node[0x64862e2c1e30] = 12;

		*node[0x64862e2c1e60] = /;

		*node[0x64862e2c1e90] = -;

		*node[0x64862e2c1ec0] = -;

		*node[0x64862e2c1ef0] = 0;

		*node[0x64862e2c1f20] = 2;

		*node[0x64862e2c1f50] = 15;

		*node[0x64862e2c1f80] = *;

		*node[0x64862e2c1fb0] = 2;

		*node[0x64862e2c1fe0] = 1;

		*node[0x64862e2c2010] = ;;

		*node[0x64862e2c2040] = =;

		*node[0x64862e2c2070] = 13;

		*node[0x64862e2c20a0] = /;

		*node[0x64862e2c20d0] = +;

		*node[0x64862e2c2100] = -;

		*node[0x64862e2c2130] = 0;

		*node[0x64862e2c2160] = 2;

		*node[0x64862e2c2190] = 15;

		*node[0x64862e2c21c0] = *;

		*node[0x64862e2c21f0] = 2;

		*node[0x64862e2c2220] = 1;

		*node[0x64862e2c2250] = ;;

		*node[0x64862e2c2280] = print;

		*node[0x64862e2c22b0] = 11;

		*node[0x64862e2c22e0] = ;;

		*node[0x64862e2c2310] = print;

		*node[0x64862e2c2340] = 12;

		*node[0x64862e2c2370] = 13;

		*node[0x64862e2c23a0] = elseif;

		*node[0x64862e2c23d0] = op_no;

		*node[0x64862e2c2400] = ==;

		*node[0x64862e2c2430] = 14;

		*node[0x64862e2c2460] = 0;

		*node[0x64862e2c2490] = ;;

		*node[0x64862e2c24c0] = =;

		*node[0x64862e2c24f0] = 10;

		*node[0x64862e2c2520] = /;

		*node[0x64862e2c2550] = -;

		*node[0x64862e2c2580] = 0;

		*node[0x64862e2c25b0] = 2;

		*node[0x64862e2c25e0] = *;

		*node[0x64862e2c2610] = 2;

		*node[0x64862e2c2640] = 1;

		*node[0x64862e2c2670] = ;;

		*node[0x64862e2c26a0] = print;

		*node[0x64862e2c26d0] = 8;

		*node[0x64862e2c2700] = ;;

		*node[0x64862e2c2730] = print;

		*node[0x64862e2c2760] = 10;

		*node[0x64862e2c2790] = else;

		*node[0x64862e2c27c0] = op_no;

		*node[0x64862e2c27f0] = ;;

		*node[0x64862e2c2820] = print;

		*node[0x64862e2c2850] = 7;

		*node[0x64862e2c2880] = ;;

		*node[0x64862e2c28b0] = return;

		*node[0x64862e2c28e0] = 0;

		*node[0x64862e2c2910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc10777e20] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x62f03b8e9fd0] = ;;

		*node[0x62f03b8ea000] = 0;

		*node[0x62f03b8ea030] = ;;

		*node[0x62f03b8ea060] = input;

		*node[0x62f03b8ea090] = 1;

		*node[0x62f03b8ea0c0] = 2;

		*node[0x62f03b8ea0f0] = 3;

		*node[0x62f03b8ea120] = ;;

		*node[0x62f03b8ea180] = 1;

		*node[0x62f03b8ea1b0] = 2;

		*node[0x62f03b8ea1e0] = 3;

		*node[0x62f03b8ea210] = ;;

		*node[0x62f03b8ea240] = 4;

		*node[0x62f03b8ea270] = 1;

		*node[0x62f03b8ea2a0] = 2;

		*node[0x62f03b8ea2d0] = 3;

		*node[0x62f03b8ea300] = ;;

		*node[0x62f03b8ea330] = if;

		*node[0x62f03b8ea360] = op_no;

		*node[0x62f03b8ea390] = ==;

		*node[0x62f03b8ea3c0] = 1;

		*node[0x62f03b8ea3f0] = 0;

		*node[0x62f03b8ea420] = ;;

		*node[0x62f03b8ea480] = 2;

		*node[0x62f03b8ea4b0] = 3;

		*node[0x62f03b8ea4e0] = else;

		*node[0x62f03b8ea510] = op_no;

		*node[0x62f03b8ea540] = ;;

		*node[0x62f03b8ea5a0] = 1;

		*node[0x62f03b8ea5d0] = 2;

		*node[0x62f03b8ea600] = 3;

		*node[0x62f03b8ea630] = ;;

		*node[0x62f03b8ea660] = 5;

		*node[0x62f03b8ea690] = 1;

		*node[0x62f03b8ea6c0] = 2;

		*node[0x62f03b8ea6f0] = ;;

		*node[0x62f03b8ea720] = =;

		*node[0x62f03b8ea750] = 7;

		*node[0x62f03b8ea780] = -;

		*node[0x62f03b8ea7b0] = 0;

		*node[0x62f03b8ea7e0] = 1;

		*node[0x62f03b8ea810] = ;;

		*node[0x62f03b8ea840] = =;

		*node[0x62f03b8ea870] = 8;

		*node[0x62f03b8ea8a0] = 1;

		*node[0x62f03b8ea8d0] = ;;

		*node[0x62f03b8ea900] = =;

		*node[0x62f03b8ea930] = 9;

		*node[0x62f03b8ea960] = 1000;

		*node[0x62f03b8ea990] = ;;

		*node[0x62f03b8ea9c0] = if;

		*node[0x62f03b8ea9f0] = op_no;

		*node[0x62f03b8eaa20] = ==;

		*node[0x62f03b8eaa50] = 1;

		*node[0x62f03b8eaa80] = 0;

		*node[0x62f03b8eaab0] = ;;

		*node[0x62f03b8eaae0] = if;

		*node[0x62f03b8eab10] = op_no;

		*node[0x62f03b8eab40] = ==;

		*node[0x62f03b8eab70] = 2;

		*node[0x62f03b8eaba0] = 0;

		*node[0x62f03b8eabd0] = ;;

		*node[0x62f03b8eac00] = print;

		*node[0x62f03b8eac30] = 9;

		*node[0x62f03b8eac60] = else;

		*node[0x62f03b8eac90] = op_no;

		*node[0x62f03b8eacc0] = ;;

		*node[0x62f03b8eacf0] = print;

		*node[0x62f03b8ead20] = 7;

		*node[0x62f03b8ead50] = else;

		*node[0x62f03b8ead80] = op_no;

		*node[0x62f03b8eadb0] = ;;

		*node[0x62f03b8eade0] = =;

		*node[0x62f03b8eae10] = 10;

		*node[0x62f03b8eae40] = /;

		*node[0x62f03b8eae70] = -;

		*node[0x62f03b8eaea0] = 0;

		*node[0x62f03b8eaed0] = 2;

		*node[0x62f03b8eaf00] = 1;

		*node[0x62f03b8eaf30] = ;;

		*node[0x62f03b8eaf60] = print;

		*node[0x62f03b8eaf90] = 8;

		*node[0x62f03b8eafc0] = ;;

		*node[0x62f03b8eaff0] = print;

		*node[0x62f03b8eb020] = 10;

		*node[0x62f03b8eb050] = ;;

		*node[0x62f03b8eb080] = return;

		*node[0x62f03b8eb0b0] = 0;

		*node[0x62f03b8eb0e0] = ;;

		*node[0x62f03b8eb110] = 6;

		*node[0x62f03b8eb140] = 1;

		*node[0x62f03b8eb170] = 2;

		*node[0x62f03b8eb1a0] = 3;

		*node[0x62f03b8eb1d0] = ;;

		*node[0x62f03b8eb200] = =;

		*node[0x62f03b8eb230] = 7;

		*node[0x62f03b8eb260] = -;

		*node[0x62f03b8eb290] = 0;

		*node[0x62f03b8eb2c0] = 1;

		*node[0x62f03b8eb2f0] = ;;

		*node[0x62f03b8eb320] = =;

		*node[0x62f03b8eb350] = 8;

		*node[0x62f03b8eb380] = 1;

		*node[0x62f03b8eb3b0] = ;;

		*node[0x62f03b8eb3e0] = =;

		*node[0x62f03b8eb410] = 11;

		*node[0x62f03b8eb440] = 2;

		*node[0x62f03b8eb470] = ;;

		*node[0x62f03b8eb4a0] = if;

		*node[0x62f03b8eb4d0] = op_no;

		*node[0x62f03b8eb500] = ==;

		*node[0x62f03b8eb530] = 3;

		*node[0x62f03b8eb560] = 0;

		*node[0x62f03b8eb590] = ;;

		*node[0x62f03b8eb5c0] = =;

		*node[0x62f03b8eb5f0] = 12;

		*node[0x62f03b8eb620] = 0;

		*node[0x62f03b8eb650] = ;;

		*node[0x62f03b8eb680] = =;

		*node[0x62f03b8eb6b0] = 13;

		*node[0x62f03b8eb6e0] = /;

		*node[0x62f03b8eb710] = -;

		*node[0x62f03b8eb740] = 0;

		*node[0x62f03b8eb770] = 2;

		*node[0x62f03b8eb7a0] = 1;

		*node[0x62f03b8eb7d0] = ;;

		*node[0x62f03b8eb800] = print;

		*node[0x62f03b8eb830] = 11;

		*node[0x62f03b8eb860] = ;;

		*node[0x62f03b8eb890] = print;

		*node[0x62f03b8eb8c0] = 12;

		*node[0x62f03b8eb8f0] = 13;

		*node[0x62f03b8eb920] = else;

		*node[0x62f03b8eb950] = op_no;

		*node[0x62f03b8eb980] = ;;

		*node[0x62f03b8eb9b0] = =;

		*node[0x62f03b8eb9e0] = 14;

		*node[0x62f03b8eba10] = -;

		*node[0x62f03b8eba40] = *;

		*node[0x62f03b8eba70] = 2;

		*node[0x62f03b8ebaa0] = 2;

		*node[0x62f03b8ebad0] = *;

		*node[0x62f03b8ebb00] = *;

		*node[0x62f03b8ebb30] = 4;

		*node[0x62f03b8ebb60] = 1;

		*node[0x62f03b8ebb90] = 3;

		*node[0x62f03b8ebbc0] = ;;

		*node[0x62f03b8ebbf0] = if;

		*node[0x62f03b8ebc20] = op_no;

		*node[0x62f03b8ebc50] = >;

		*node[0x62f03b8ebc80] = 14;

		*node[0x62f03b8ebcb0] = 0;

		*node[0x62f03b8ebce0] = ;;

		*node[0x62f03b8ebd10] = =;

		*node[0x62f03b8ebd40] = 15;

		*node[0x62f03b8ebd70] = sqrt;

		*node[0x62f03b8ebda0] = 14;

		*node[0x62f03b8ebdd0] = ;;

		*node[0x62f03b8ebe00] = =;

		*node[0x62f03b8ebe30] = 12;

		*node[0x62f03b8ebe60] = /;

		*node[0x62f03b8ebe90] = -;

		*node[0x62f03b8ebec0] = -;

		*node[0x62f03b8ebef0] = 0;

		*node[0x62f03b8ebf20] = 2;

		*node[0x62f03b8ebf50] = 15;

		*node[0x62f03b8ebf80] = *;

		*node[0x62f03b8ebfb0] = 2;

		*node[0x62f03b8ebfe0] = 1;

		*node[0x62f03b8ec010] = ;;

		*node[0x62f03b8ec040] = =;

		*node[0x62f03b8ec070] = 13;

		*node[0x62f03b8ec0a0] = /;

		*node[0x62f03b8ec0d0] = +;

		*node[0x62f03b8ec100] = -;

		*node[0x62f03b8ec130] = 0;

		*node[0x62f03b8ec160] = 2;

		*node[0x62f03b8ec190] = 15;

		*node[0x62f03b8ec1c0] = *;

		*node[0x62f03b8ec1f0] = 2;

		*node[0x62f03b8ec220] = 1;

		*node[0x62f03b8ec250] = ;;

		*node[0x62f03b8ec280] = print;

		*node[0x62f03b8ec2b0] = 11;

		*node[0x62f03b8ec2e0] = ;;

		*node[0x62f03b8ec310] = print;

		*node[0x62f03b8ec340] = 12;

		*node[0x62f03b8ec370] = 13;

		*node[0x62f03b8ec3a0] = elseif;

		*node[0x62f03b8ec3d0] = op_no;

		*node[0x62f03b8ec400] = ==;

		*node[0x62f03b8ec430] = 14;

		*node[0x62f03b8ec460] = 0;

		*node[0x62f03b8ec490] = ;;

		*node[0x62f03b8ec4c0] = =;

		*node[0x62f03b8ec4f0] = 10;

		*node[0x62f03b8ec520] = /;

		*node[0x62f03b8ec550] = -;

		*node[0x62f03b8ec580] = 0;

		*node[0x62f03b8ec5b0] = 2;

		*node[0x62f03b8ec5e0] = *;

		*node[0x62f03b8ec610] = 2;

		*node[0x62f03b8ec640] = 1;

		*node[0x62f03b8ec670] = ;;

		*node[0x62f03b8ec6a0] = print;

		*node[0x62f03b8ec6d0] = 8;

		*node[0x62f03b8ec700] = ;;

		*node[0x62f03b8ec730] = print;

		*node[0x62f03b8ec760] = 10;

		*node[0x62f03b8ec790] = else;

		*node[0x62f03b8ec7c0] = op_no;

		*node[0x62f03b8ec7f0] = ;;

		*node[0x62f03b8ec820] = print;

		*node[0x62f03b8ec850] = 7;

		*node[0x62f03b8ec880] = ;;

		*node[0x62f03b8ec8b0] = return;

		*node[0x62f03b8ec8e0] = 0;

		*node[0x62f03b8ec910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe9cb96420] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x58cca154afd0] = ;;

		*node[0x58cca154b000] = 0;

		*node[0x58cca154b030] = ;;

		*node[0x58cca154b060] = input;

		*node[0x58cca154b090] = 1;

		*node[0x58cca154b0c0] = 2;

		*node[0x58cca154b0f0] = 3;

		*node[0x58cca154b120] = ;;

		*node[0x58cca154b180] = 1;

		*node[0x58cca154b1b0] = 2;

		*node[0x58cca154b1e0] = 3;

		*node[0x58cca154b210] = ;;

		*node[0x58cca154b240] = 4;

		*node[0x58cca154b270] = 1;

		*node[0x58cca154b2a0] = 2;

		*node[0x58cca154b2d0] = 3;

		*node[0x58cca154b300] = ;;

		*node[0x58cca154b330] = if;

		*node[0x58cca154b360] = op_no;

		*node[0x58cca154b390] = ==;

		*node[0x58cca154b3c0] = 1;

		*node[0x58cca154b3f0] = 0;

		*node[0x58cca154b420] = ;;

		*node[0x58cca154b480] = 2;

		*node[0x58cca154b4b0] = 3;

		*node[0x58cca154b4e0] = else;

		*node[0x58cca154b510] = op_no;

		*node[0x58cca154b540] = ;;

		*node[0x58cca154b5a0] = 1;

		*node[0x58cca154b5d0] = 2;

		*node[0x58cca154b600] = 3;

		*node[0x58cca154b630] = ;;

		*node[0x58cca154b660] = 5;

		*node[0x58cca154b690] = 1;

		*node[0x58cca154b6c0] = 2;

		*node[0x58cca154b6f0] = ;;

		*node[0x58cca154b720] = =;

		*node[0x58cca154b750] = 7;

		*node[0x58cca154b780] = -;

		*node[0x58cca154b7b0] = 0;

		*node[0x58cca154b7e0] = 1;

		*node[0x58cca154b810] = ;;

		*node[0x58cca154b840] = =;

		*node[0x58cca154b870] = 8;

		*node[0x58cca154b8a0] = 1;

		*node[0x58cca154b8d0] = ;;

		*node[0x58cca154b900] = =;

		*node[0x58cca154b930] = 9;

		*node[0x58cca154b960] = 1000;

		*node[0x58cca154b990] = ;;

		*node[0x58cca154b9c0] = if;

		*node[0x58cca154b9f0] = op_no;

		*node[0x58cca154ba20] = ==;

		*node[0x58cca154ba50] = 1;

		*node[0x58cca154ba80] = 0;

		*node[0x58cca154bab0] = ;;

		*node[0x58cca154bae0] = if;

		*node[0x58cca154bb10] = op_no;

		*node[0x58cca154bb40] = ==;

		*node[0x58cca154bb70] = 2;

		*node[0x58cca154bba0] = 0;

		*node[0x58cca154bbd0] = ;;

		*node[0x58cca154bc00] = print;

		*node[0x58cca154bc30] = 9;

		*node[0x58cca154bc60] = else;

		*node[0x58cca154bc90] = op_no;

		*node[0x58cca154bcc0] = ;;

		*node[0x58cca154bcf0] = print;

		*node[0x58cca154bd20] = 7;

		*node[0x58cca154bd50] = else;

		*node[0x58cca154bd80] = op_no;

		*node[0x58cca154bdb0] = ;;

		*node[0x58cca154bde0] = =;

		*node[0x58cca154be10] = 10;

		*node[0x58cca154be40] = /;

		*node[0x58cca154be70] = -;

		*node[0x58cca154bea0] = 0;

		*node[0x58cca154bed0] = 2;

		*node[0x58cca154bf00] = 1;

		*node[0x58cca154bf30] = ;;

		*node[0x58cca154bf60] = print;

		*node[0x58cca154bf90] = 8;

		*node[0x58cca154bfc0] = ;;

		*node[0x58cca154bff0] = print;

		*node[0x58cca154c020] = 10;

		*node[0x58cca154c050] = ;;

		*node[0x58cca154c080] = return;

		*node[0x58cca154c0b0] = 0;

		*node[0x58cca154c0e0] = ;;

		*node[0x58cca154c110] = 6;

		*node[0x58cca154c140] = 1;

		*node[0x58cca154c170] = 2;

		*node[0x58cca154c1a0] = 3;

		*node[0x58cca154c1d0] = ;;

		*node[0x58cca154c200] = =;

		*node[0x58cca154c230] = 7;

		*node[0x58cca154c260] = -;

		*node[0x58cca154c290] = 0;

		*node[0x58cca154c2c0] = 1;

		*node[0x58cca154c2f0] = ;;

		*node[0x58cca154c320] = =;

		*node[0x58cca154c350] = 8;

		*node[0x58cca154c380] = 1;

		*node[0x58cca154c3b0] = ;;

		*node[0x58cca154c3e0] = =;

		*node[0x58cca154c410] = 11;

		*node[0x58cca154c440] = 2;

		*node[0x58cca154c470] = ;;

		*node[0x58cca154c4a0] = if;

		*node[0x58cca154c4d0] = op_no;

		*node[0x58cca154c500] = ==;

		*node[0x58cca154c530] = 3;

		*node[0x58cca154c560] = 0;

		*node[0x58cca154c590] = ;;

		*node[0x58cca154c5c0] = =;

		*node[0x58cca154c5f0] = 12;

		*node[0x58cca154c620] = 0;

		*node[0x58cca154c650] = ;;

		*node[0x58cca154c680] = =;

		*node[0x58cca154c6b0] = 13;

		*node[0x58cca154c6e0] = /;

		*node[0x58cca154c710] = -;

		*node[0x58cca154c740] = 0;

		*node[0x58cca154c770] = 2;

		*node[0x58cca154c7a0] = 1;

		*node[0x58cca154c7d0] = ;;

		*node[0x58cca154c800] = print;

		*node[0x58cca154c830] = 11;

		*node[0x58cca154c860] = ;;

		*node[0x58cca154c890] = print;

		*node[0x58cca154c8c0] = 12;

		*node[0x58cca154c8f0] = 13;

		*node[0x58cca154c920] = else;

		*node[0x58cca154c950] = op_no;

		*node[0x58cca154c980] = ;;

		*node[0x58cca154c9b0] = =;

		*node[0x58cca154c9e0] = 14;

		*node[0x58cca154ca10] = -;

		*node[0x58cca154ca40] = *;

		*node[0x58cca154ca70] = 2;

		*node[0x58cca154caa0] = 2;

		*node[0x58cca154cad0] = *;

		*node[0x58cca154cb00] = *;

		*node[0x58cca154cb30] = 4;

		*node[0x58cca154cb60] = 1;

		*node[0x58cca154cb90] = 3;

		*node[0x58cca154cbc0] = ;;

		*node[0x58cca154cbf0] = if;

		*node[0x58cca154cc20] = op_no;

		*node[0x58cca154cc50] = >;

		*node[0x58cca154cc80] = 14;

		*node[0x58cca154ccb0] = 0;

		*node[0x58cca154cce0] = ;;

		*node[0x58cca154cd10] = =;

		*node[0x58cca154cd40] = 15;

		*node[0x58cca154cd70] = sqrt;

		*node[0x58cca154cda0] = 14;

		*node[0x58cca154cdd0] = ;;

		*node[0x58cca154ce00] = =;

		*node[0x58cca154ce30] = 12;

		*node[0x58cca154ce60] = /;

		*node[0x58cca154ce90] = -;

		*node[0x58cca154cec0] = -;

		*node[0x58cca154cef0] = 0;

		*node[0x58cca154cf20] = 2;

		*node[0x58cca154cf50] = 15;

		*node[0x58cca154cf80] = *;

		*node[0x58cca154cfb0] = 2;

		*node[0x58cca154cfe0] = 1;

		*node[0x58cca154d010] = ;;

		*node[0x58cca154d040] = =;

		*node[0x58cca154d070] = 13;

		*node[0x58cca154d0a0] = /;

		*node[0x58cca154d0d0] = +;

		*node[0x58cca154d100] = -;

		*node[0x58cca154d130] = 0;

		*node[0x58cca154d160] = 2;

		*node[0x58cca154d190] = 15;

		*node[0x58cca154d1c0] = *;

		*node[0x58cca154d1f0] = 2;

		*node[0x58cca154d220] = 1;

		*node[0x58cca154d250] = ;;

		*node[0x58cca154d280] = print;

		*node[0x58cca154d2b0] = 11;

		*node[0x58cca154d2e0] = ;;

		*node[0x58cca154d310] = print;

		*node[0x58cca154d340] = 12;

		*node[0x58cca154d370] = 13;

		*node[0x58cca154d3a0] = elseif;

		*node[0x58cca154d3d0] = op_no;

		*node[0x58cca154d400] = ==;

		*node[0x58cca154d430] = 14;

		*node[0x58cca154d460] = 0;

		*node[0x58cca154d490] = ;;

		*node[0x58cca154d4c0] = =;

		*node[0x58cca154d4f0] = 10;

		*node[0x58cca154d520] = /;

		*node[0x58cca154d550] = -;

		*node[0x58cca154d580] = 0;

		*node[0x58cca154d5b0] = 2;

		*node[0x58cca154d5e0] = *;

		*node[0x58cca154d610] = 2;

		*node[0x58cca154d640] = 1;

		*node[0x58cca154d670] = ;;

		*node[0x58cca154d6a0] = print;

		*node[0x58cca154d6d0] = 8;

		*node[0x58cca154d700] = ;;

		*node[0x58cca154d730] = print;

		*node[0x58cca154d760] = 10;

		*node[0x58cca154d790] = else;

		*node[0x58cca154d7c0] = op_no;

		*node[0x58cca154d7f0] = ;;

		*node[0x58cca154d820] = print;

		*node[0x58cca154d850] = 7;

		*node[0x58cca154d880] = ;;

		*node[0x58cca154d8b0] = return;

		*node[0x58cca154d8e0] = 0;

		*node[0x58cca154d910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffd4b2a160] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5e14ebc1cfd0] = ;;

		*node[0x5e14ebc1d000] = 0;

		*node[0x5e14ebc1d030] = ;;

		*node[0x5e14ebc1d060] = input;

		*node[0x5e14ebc1d090] = 1;

		*node[0x5e14ebc1d0c0] = 2;

		*node[0x5e14ebc1d0f0] = 3;

		*node[0x5e14ebc1d120] = ;;

		*node[0x5e14ebc1d180] = 1;

		*node[0x5e14ebc1d1b0] = 2;

		*node[0x5e14ebc1d1e0] = 3;

		*node[0x5e14ebc1d210] = ;;

		*node[0x5e14ebc1d240] = 4;

		*node[0x5e14ebc1d270] = 1;

		*node[0x5e14ebc1d2a0] = 2;

		*node[0x5e14ebc1d2d0] = 3;

		*node[0x5e14ebc1d300] = ;;

		*node[0x5e14ebc1d330] = if;

		*node[0x5e14ebc1d360] = op_no;

		*node[0x5e14ebc1d390] = ==;

		*node[0x5e14ebc1d3c0] = 1;

		*node[0x5e14ebc1d3f0] = 0;

		*node[0x5e14ebc1d420] = ;;

		*node[0x5e14ebc1d480] = 2;

		*node[0x5e14ebc1d4b0] = 3;

		*node[0x5e14ebc1d4e0] = else;

		*node[0x5e14ebc1d510] = op_no;

		*node[0x5e14ebc1d540] = ;;

		*node[0x5e14ebc1d5a0] = 1;

		*node[0x5e14ebc1d5d0] = 2;

		*node[0x5e14ebc1d600] = 3;

		*node[0x5e14ebc1d630] = ;;

		*node[0x5e14ebc1d660] = 5;

		*node[0x5e14ebc1d690] = 1;

		*node[0x5e14ebc1d6c0] = 2;

		*node[0x5e14ebc1d6f0] = ;;

		*node[0x5e14ebc1d720] = =;

		*node[0x5e14ebc1d750] = 7;

		*node[0x5e14ebc1d780] = -;

		*node[0x5e14ebc1d7b0] = 0;

		*node[0x5e14ebc1d7e0] = 1;

		*node[0x5e14ebc1d810] = ;;

		*node[0x5e14ebc1d840] = =;

		*node[0x5e14ebc1d870] = 8;

		*node[0x5e14ebc1d8a0] = 1;

		*node[0x5e14ebc1d8d0] = ;;

		*node[0x5e14ebc1d900] = =;

		*node[0x5e14ebc1d930] = 9;

		*node[0x5e14ebc1d960] = 1000;

		*node[0x5e14ebc1d990] = ;;

		*node[0x5e14ebc1d9c0] = if;

		*node[0x5e14ebc1d9f0] = op_no;

		*node[0x5e14ebc1da20] = ==;

		*node[0x5e14ebc1da50] = 1;

		*node[0x5e14ebc1da80] = 0;

		*node[0x5e14ebc1dab0] = ;;

		*node[0x5e14ebc1dae0] = if;

		*node[0x5e14ebc1db10] = op_no;

		*node[0x5e14ebc1db40] = ==;

		*node[0x5e14ebc1db70] = 2;

		*node[0x5e14ebc1dba0] = 0;

		*node[0x5e14ebc1dbd0] = ;;

		*node[0x5e14ebc1dc00] = print;

		*node[0x5e14ebc1dc30] = 9;

		*node[0x5e14ebc1dc60] = else;

		*node[0x5e14ebc1dc90] = op_no;

		*node[0x5e14ebc1dcc0] = ;;

		*node[0x5e14ebc1dcf0] = print;

		*node[0x5e14ebc1dd20] = 7;

		*node[0x5e14ebc1dd50] = else;

		*node[0x5e14ebc1dd80] = op_no;

		*node[0x5e14ebc1ddb0] = ;;

		*node[0x5e14ebc1dde0] = =;

		*node[0x5e14ebc1de10] = 10;

		*node[0x5e14ebc1de40] = /;

		*node[0x5e14ebc1de70] = -;

		*node[0x5e14ebc1dea0] = 0;

		*node[0x5e14ebc1ded0] = 2;

		*node[0x5e14ebc1df00] = 1;

		*node[0x5e14ebc1df30] = ;;

		*node[0x5e14ebc1df60] = print;

		*node[0x5e14ebc1df90] = 8;

		*node[0x5e14ebc1dfc0] = ;;

		*node[0x5e14ebc1dff0] = print;

		*node[0x5e14ebc1e020] = 10;

		*node[0x5e14ebc1e050] = ;;

		*node[0x5e14ebc1e080] = return;

		*node[0x5e14ebc1e0b0] = 0;

		*node[0x5e14ebc1e0e0] = ;;

		*node[0x5e14ebc1e110] = 6;

		*node[0x5e14ebc1e140] = 1;

		*node[0x5e14ebc1e170] = 2;

		*node[0x5e14ebc1e1a0] = 3;

		*node[0x5e14ebc1e1d0] = ;;

		*node[0x5e14ebc1e200] = =;

		*node[0x5e14ebc1e230] = 7;

		*node[0x5e14ebc1e260] = -;

		*node[0x5e14ebc1e290] = 0;

		*node[0x5e14ebc1e2c0] = 1;

		*node[0x5e14ebc1e2f0] = ;;

		*node[0x5e14ebc1e320] = =;

		*node[0x5e14ebc1e350] = 8;

		*node[0x5e14ebc1e380] = 1;

		*node[0x5e14ebc1e3b0] = ;;

		*node[0x5e14ebc1e3e0] = =;

		*node[0x5e14ebc1e410] = 11;

		*node[0x5e14ebc1e440] = 2;

		*node[0x5e14ebc1e470] = ;;

		*node[0x5e14ebc1e4a0] = if;

		*node[0x5e14ebc1e4d0] = op_no;

		*node[0x5e14ebc1e500] = ==;

		*node[0x5e14ebc1e530] = 3;

		*node[0x5e14ebc1e560] = 0;

		*node[0x5e14ebc1e590] = ;;

		*node[0x5e14ebc1e5c0] = =;

		*node[0x5e14ebc1e5f0] = 12;

		*node[0x5e14ebc1e620] = 0;

		*node[0x5e14ebc1e650] = ;;

		*node[0x5e14ebc1e680] = =;

		*node[0x5e14ebc1e6b0] = 13;

		*node[0x5e14ebc1e6e0] = /;

		*node[0x5e14ebc1e710] = -;

		*node[0x5e14ebc1e740] = 0;

		*node[0x5e14ebc1e770] = 2;

		*node[0x5e14ebc1e7a0] = 1;

		*node[0x5e14ebc1e7d0] = ;;

		*node[0x5e14ebc1e800] = print;

		*node[0x5e14ebc1e830] = 11;

		*node[0x5e14ebc1e860] = ;;

		*node[0x5e14ebc1e890] = print;

		*node[0x5e14ebc1e8c0] = 12;

		*node[0x5e14ebc1e8f0] = 13;

		*node[0x5e14ebc1e920] = else;

		*node[0x5e14ebc1e950] = op_no;

		*node[0x5e14ebc1e980] = ;;

		*node[0x5e14ebc1e9b0] = =;

		*node[0x5e14ebc1e9e0] = 14;

		*node[0x5e14ebc1ea10] = -;

		*node[0x5e14ebc1ea40] = *;

		*node[0x5e14ebc1ea70] = 2;

		*node[0x5e14ebc1eaa0] = 2;

		*node[0x5e14ebc1ead0] = *;

		*node[0x5e14ebc1eb00] = *;

		*node[0x5e14ebc1eb30] = 4;

		*node[0x5e14ebc1eb60] = 1;

		*node[0x5e14ebc1eb90] = 3;

		*node[0x5e14ebc1ebc0] = ;;

		*node[0x5e14ebc1ebf0] = if;

		*node[0x5e14ebc1ec20] = op_no;

		*node[0x5e14ebc1ec50] = >;

		*node[0x5e14ebc1ec80] = 14;

		*node[0x5e14ebc1ecb0] = 0;

		*node[0x5e14ebc1ece0] = ;;

		*node[0x5e14ebc1ed10] = =;

		*node[0x5e14ebc1ed40] = 15;

		*node[0x5e14ebc1ed70] = sqrt;

		*node[0x5e14ebc1eda0] = 14;

		*node[0x5e14ebc1edd0] = ;;

		*node[0x5e14ebc1ee00] = =;

		*node[0x5e14ebc1ee30] = 12;

		*node[0x5e14ebc1ee60] = /;

		*node[0x5e14ebc1ee90] = -;

		*node[0x5e14ebc1eec0] = -;

		*node[0x5e14ebc1eef0] = 0;

		*node[0x5e14ebc1ef20] = 2;

		*node[0x5e14ebc1ef50] = 15;

		*node[0x5e14ebc1ef80] = *;

		*node[0x5e14ebc1efb0] = 2;

		*node[0x5e14ebc1efe0] = 1;

		*node[0x5e14ebc1f010] = ;;

		*node[0x5e14ebc1f040] = =;

		*node[0x5e14ebc1f070] = 13;

		*node[0x5e14ebc1f0a0] = /;

		*node[0x5e14ebc1f0d0] = +;

		*node[0x5e14ebc1f100] = -;

		*node[0x5e14ebc1f130] = 0;

		*node[0x5e14ebc1f160] = 2;

		*node[0x5e14ebc1f190] = 15;

		*node[0x5e14ebc1f1c0] = *;

		*node[0x5e14ebc1f1f0] = 2;

		*node[0x5e14ebc1f220] = 1;

		*node[0x5e14ebc1f250] = ;;

		*node[0x5e14ebc1f280] = print;

		*node[0x5e14ebc1f2b0] = 11;

		*node[0x5e14ebc1f2e0] = ;;

		*node[0x5e14ebc1f310] = print;

		*node[0x5e14ebc1f340] = 12;

		*node[0x5e14ebc1f370] = 13;

		*node[0x5e14ebc1f3a0] = elseif;

		*node[0x5e14ebc1f3d0] = op_no;

		*node[0x5e14ebc1f400] = ==;

		*node[0x5e14ebc1f430] = 14;

		*node[0x5e14ebc1f460] = 0;

		*node[0x5e14ebc1f490] = ;;

		*node[0x5e14ebc1f4c0] = =;

		*node[0x5e14ebc1f4f0] = 10;

		*node[0x5e14ebc1f520] = /;

		*node[0x5e14ebc1f550] = -;

		*node[0x5e14ebc1f580] = 0;

		*node[0x5e14ebc1f5b0] = 2;

		*node[0x5e14ebc1f5e0] = *;

		*node[0x5e14ebc1f610] = 2;

		*node[0x5e14ebc1f640] = 1;

		*node[0x5e14ebc1f670] = ;;

		*node[0x5e14ebc1f6a0] = print;

		*node[0x5e14ebc1f6d0] = 8;

		*node[0x5e14ebc1f700] = ;;

		*node[0x5e14ebc1f730] = print;

		*node[0x5e14ebc1f760] = 10;

		*node[0x5e14ebc1f790] = else;

		*node[0x5e14ebc1f7c0] = op_no;

		*node[0x5e14ebc1f7f0] = ;;

		*node[0x5e14ebc1f820] = print;

		*node[0x5e14ebc1f850] = 7;

		*node[0x5e14ebc1f880] = ;;

		*node[0x5e14ebc1f8b0] = return;

		*node[0x5e14ebc1f8e0] = 0;

		*node[0x5e14ebc1f910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd8dc0f620] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x612a26646fd0] = ;;

		*node[0x612a26647000] = 0;

		*node[0x612a26647030] = ;;

		*node[0x612a26647060] = input;

		*node[0x612a26647090] = 1;

		*node[0x612a266470c0] = 2;

		*node[0x612a266470f0] = 3;

		*node[0x612a26647120] = ;;

		*node[0x612a26647180] = 1;

		*node[0x612a266471b0] = 2;

		*node[0x612a266471e0] = 3;

		*node[0x612a26647210] = ;;

		*node[0x612a26647240] = 4;

		*node[0x612a26647270] = 1;

		*node[0x612a266472a0] = 2;

		*node[0x612a266472d0] = 3;

		*node[0x612a26647300] = ;;

		*node[0x612a26647330] = if;

		*node[0x612a26647360] = op_no;

		*node[0x612a26647390] = ==;

		*node[0x612a266473c0] = 1;

		*node[0x612a266473f0] = 0;

		*node[0x612a26647420] = ;;

		*node[0x612a26647480] = 2;

		*node[0x612a266474b0] = 3;

		*node[0x612a266474e0] = else;

		*node[0x612a26647510] = op_no;

		*node[0x612a26647540] = ;;

		*node[0x612a266475a0] = 1;

		*node[0x612a266475d0] = 2;

		*node[0x612a26647600] = 3;

		*node[0x612a26647630] = ;;

		*node[0x612a26647660] = 5;

		*node[0x612a26647690] = 1;

		*node[0x612a266476c0] = 2;

		*node[0x612a266476f0] = ;;

		*node[0x612a26647720] = =;

		*node[0x612a26647750] = 7;

		*node[0x612a26647780] = -;

		*node[0x612a266477b0] = 0;

		*node[0x612a266477e0] = 1;

		*node[0x612a26647810] = ;;

		*node[0x612a26647840] = =;

		*node[0x612a26647870] = 8;

		*node[0x612a266478a0] = 1;

		*node[0x612a266478d0] = ;;

		*node[0x612a26647900] = =;

		*node[0x612a26647930] = 9;

		*node[0x612a26647960] = 1000;

		*node[0x612a26647990] = ;;

		*node[0x612a266479c0] = if;

		*node[0x612a266479f0] = op_no;

		*node[0x612a26647a20] = ==;

		*node[0x612a26647a50] = 1;

		*node[0x612a26647a80] = 0;

		*node[0x612a26647ab0] = ;;

		*node[0x612a26647ae0] = if;

		*node[0x612a26647b10] = op_no;

		*node[0x612a26647b40] = ==;

		*node[0x612a26647b70] = 2;

		*node[0x612a26647ba0] = 0;

		*node[0x612a26647bd0] = ;;

		*node[0x612a26647c00] = print;

		*node[0x612a26647c30] = 9;

		*node[0x612a26647c60] = else;

		*node[0x612a26647c90] = op_no;

		*node[0x612a26647cc0] = ;;

		*node[0x612a26647cf0] = print;

		*node[0x612a26647d20] = 7;

		*node[0x612a26647d50] = else;

		*node[0x612a26647d80] = op_no;

		*node[0x612a26647db0] = ;;

		*node[0x612a26647de0] = =;

		*node[0x612a26647e10] = 10;

		*node[0x612a26647e40] = /;

		*node[0x612a26647e70] = -;

		*node[0x612a26647ea0] = 0;

		*node[0x612a26647ed0] = 2;

		*node[0x612a26647f00] = 1;

		*node[0x612a26647f30] = ;;

		*node[0x612a26647f60] = print;

		*node[0x612a26647f90] = 8;

		*node[0x612a26647fc0] = ;;

		*node[0x612a26647ff0] = print;

		*node[0x612a26648020] = 10;

		*node[0x612a26648050] = ;;

		*node[0x612a26648080] = return;

		*node[0x612a266480b0] = 0;

		*node[0x612a266480e0] = ;;

		*node[0x612a26648110] = 6;

		*node[0x612a26648140] = 1;

		*node[0x612a26648170] = 2;

		*node[0x612a266481a0] = 3;

		*node[0x612a266481d0] = ;;

		*node[0x612a26648200] = =;

		*node[0x612a26648230] = 7;

		*node[0x612a26648260] = -;

		*node[0x612a26648290] = 0;

		*node[0x612a266482c0] = 1;

		*node[0x612a266482f0] = ;;

		*node[0x612a26648320] = =;

		*node[0x612a26648350] = 8;

		*node[0x612a26648380] = 1;

		*node[0x612a266483b0] = ;;

		*node[0x612a266483e0] = =;

		*node[0x612a26648410] = 11;

		*node[0x612a26648440] = 2;

		*node[0x612a26648470] = ;;

		*node[0x612a266484a0] = if;

		*node[0x612a266484d0] = op_no;

		*node[0x612a26648500] = ==;

		*node[0x612a26648530] = 3;

		*node[0x612a26648560] = 0;

		*node[0x612a26648590] = ;;

		*node[0x612a266485c0] = =;

		*node[0x612a266485f0] = 12;

		*node[0x612a26648620] = 0;

		*node[0x612a26648650] = ;;

		*node[0x612a26648680] = =;

		*node[0x612a266486b0] = 13;

		*node[0x612a266486e0] = /;

		*node[0x612a26648710] = -;

		*node[0x612a26648740] = 0;

		*node[0x612a26648770] = 2;

		*node[0x612a266487a0] = 1;

		*node[0x612a266487d0] = ;;

		*node[0x612a26648800] = print;

		*node[0x612a26648830] = 11;

		*node[0x612a26648860] = ;;

		*node[0x612a26648890] = print;

		*node[0x612a266488c0] = 12;

		*node[0x612a266488f0] = 13;

		*node[0x612a26648920] = else;

		*node[0x612a26648950] = op_no;

		*node[0x612a26648980] = ;;

		*node[0x612a266489b0] = =;

		*node[0x612a266489e0] = 14;

		*node[0x612a26648a10] = -;

		*node[0x612a26648a40] = *;

		*node[0x612a26648a70] = 2;

		*node[0x612a26648aa0] = 2;

		*node[0x612a26648ad0] = *;

		*node[0x612a26648b00] = *;

		*node[0x612a26648b30] = 4;

		*node[0x612a26648b60] = 1;

		*node[0x612a26648b90] = 3;

		*node[0x612a26648bc0] = ;;

		*node[0x612a26648bf0] = if;

		*node[0x612a26648c20] = op_no;

		*node[0x612a26648c50] = >;

		*node[0x612a26648c80] = 14;

		*node[0x612a26648cb0] = 0;

		*node[0x612a26648ce0] = ;;

		*node[0x612a26648d10] = =;

		*node[0x612a26648d40] = 15;

		*node[0x612a26648d70] = sqrt;

		*node[0x612a26648da0] = 14;

		*node[0x612a26648dd0] = ;;

		*node[0x612a26648e00] = =;

		*node[0x612a26648e30] = 12;

		*node[0x612a26648e60] = /;

		*node[0x612a26648e90] = -;

		*node[0x612a26648ec0] = -;

		*node[0x612a26648ef0] = 0;

		*node[0x612a26648f20] = 2;

		*node[0x612a26648f50] = 15;

		*node[0x612a26648f80] = *;

		*node[0x612a26648fb0] = 2;

		*node[0x612a26648fe0] = 1;

		*node[0x612a26649010] = ;;

		*node[0x612a26649040] = =;

		*node[0x612a26649070] = 13;

		*node[0x612a266490a0] = /;

		*node[0x612a266490d0] = +;

		*node[0x612a26649100] = -;

		*node[0x612a26649130] = 0;

		*node[0x612a26649160] = 2;

		*node[0x612a26649190] = 15;

		*node[0x612a266491c0] = *;

		*node[0x612a266491f0] = 2;

		*node[0x612a26649220] = 1;

		*node[0x612a26649250] = ;;

		*node[0x612a26649280] = print;

		*node[0x612a266492b0] = 11;

		*node[0x612a266492e0] = ;;

		*node[0x612a26649310] = print;

		*node[0x612a26649340] = 12;

		*node[0x612a26649370] = 13;

		*node[0x612a266493a0] = elseif;

		*node[0x612a266493d0] = op_no;

		*node[0x612a26649400] = ==;

		*node[0x612a26649430] = 14;

		*node[0x612a26649460] = 0;

		*node[0x612a26649490] = ;;

		*node[0x612a266494c0] = =;

		*node[0x612a266494f0] = 10;

		*node[0x612a26649520] = /;

		*node[0x612a26649550] = -;

		*node[0x612a26649580] = 0;

		*node[0x612a266495b0] = 2;

		*node[0x612a266495e0] = *;

		*node[0x612a26649610] = 2;

		*node[0x612a26649640] = 1;

		*node[0x612a26649670] = ;;

		*node[0x612a266496a0] = print;

		*node[0x612a266496d0] = 8;

		*node[0x612a26649700] = ;;

		*node[0x612a26649730] = print;

		*node[0x612a26649760] = 10;

		*node[0x612a26649790] = else;

		*node[0x612a266497c0] = op_no;

		*node[0x612a266497f0] = ;;

		*node[0x612a26649820] = print;

		*node[0x612a26649850] = 7;

		*node[0x612a26649880] = ;;

		*node[0x612a266498b0] = return;

		*node[0x612a266498e0] = 0;

		*node[0x612a26649910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd7b58aa60] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x55a96391e110] = ;;

		*node[0x55a96391e190] = 0;

		*node[0x55a96391e1c0] = ;;

		*node[0x55a96391e1f0] = input;

		*node[0x55a96391e220] = 1;

		*node[0x55a96391e250] = 2;

		*node[0x55a96391e2b0] = 3;

		*node[0x55a96391e2e0] = ;;

		*node[0x55a96391e390] = 1;

		*node[0x55a96391e3c0] = 2;

		*node[0x55a96391e3f0] = 3;

		*node[0x55a96391e420] = ;;

		*node[0x55a96391e4a0] = 4;

		*node[0x55a96391e4d0] = 1;

		*node[0x55a96391e500] = 2;

		*node[0x55a96391e530] = 3;

		*node[0x55a96391e590] = ;;

		*node[0x55a96391e5c0] = if;

		*node[0x55a96391e5f0] = op_no;

		*node[0x55a96391e680] = ==;

		*node[0x55a96391e620] = 1;

		*node[0x55a96391e650] = 0;

		*node[0x55a96391e6b0] = ;;

		*node[0x55a96391e710] = 2;

		*node[0x55a96391e740] = 3;

		*node[0x55a96391e770] = else;

		*node[0x55a96391e7a0] = op_no;

		*node[0x55a96391e7d0] = ;;

		*node[0x55a96391e880] = 1;

		*node[0x55a96391e8b0] = 2;

		*node[0x55a96391e8e0] = 3;

		*node[0x55a96391e910] = ;;

		*node[0x55a96391e990] = 5;

		*node[0x55a96391e9c0] = 1;

		*node[0x55a96391e9f0] = 2;

		*node[0x55a96391ea20] = ;;

		*node[0x55a96391eb40] = =;

		*node[0x55a96391ea50] = 7;

		*node[0x55a96391eb10] = -;

		*node[0x55a96391eab0] = 0;

		*node[0x55a96391eae0] = 1;

		*node[0x55a96391eb70] = ;;

		*node[0x55a96391ec00] = =;

		*node[0x55a96391eba0] = 8;

		*node[0x55a96391ebd0] = 1;

		*node[0x55a96391ec30] = ;;

		*node[0x55a96391ed10] = =;

		*node[0x55a96391ec60] = 9;

		*node[0x55a96391ece0] = 1000;

		*node[0x55a96391ed40] = ;;

		*node[0x55a96391ed70] = if;

		*node[0x55a96391eda0] = op_no;

		*node[0x55a96391ee30] = ==;

		*node[0x55a96391edd0] = 1;

		*node[0x55a96391ee00] = 0;

		*node[0x55a96391ee60] = ;;

		*node[0x55a96391ee90] = if;

		*node[0x55a96391eec0] = op_no;

		*node[0x55a96391ef50] = ==;

		*node[0x55a96391eef0] = 2;

		*node[0x55a96391ef20] = 0;

		*node[0x55a96391ef80] = ;;

		*node[0x55a96391efb0] = print;

		*node[0x55a96391efe0] = 9;

		*node[0x55a96391f010] = else;

		*node[0x55a96391f040] = op_no;

		*node[0x55a96391f070] = ;;

		*node[0x55a96391f0a0] = print;

		*node[0x55a96391f0d0] = 7;

		*node[0x55a96391f100] = else;

		*node[0x55a96391f130] = op_no;

		*node[0x55a96391f160] = ;;

		*node[0x55a96391f2b0] = =;

		*node[0x55a96391f190] = 10;

		*node[0x55a96391f280] = -;

		*node[0x55a96391f1c0] = 0;

		*node[0x55a96391f250] = /;

		*node[0x55a96391f1f0] = 2;

		*node[0x55a96391f220] = 1;

		*node[0x55a96391f2e0] = ;;

		*node[0x55a96391f310] = print;

		*node[0x55a96391f340] = 8;

		*node[0x55a96391f370] = ;;

		*node[0x55a96391f3a0] = print;

		*node[0x55a96391f3d0] = 10;

		*node[0x55a96391f400] = ;;

		*node[0x55a96391f430] = return;

		*node[0x55a96391f460] = 0;

		*node[0x55a96391f490] = ;;

		*node[0x55a96391f510] = 6;

		*node[0x55a96391f540] = 1;

		*node[0x55a96391f570] = 2;

		*node[0x55a96391f5a0] = 3;

		*node[0x55a96391f600] = ;;

		*node[0x55a96391f6f0] = =;

		*node[0x55a96391f630] = 7;

		*node[0x55a96391f6c0] = -;

		*node[0x55a96391f660] = 0;

		*node[0x55a96391f690] = 1;

		*node[0x55a96391f720] = ;;

		*node[0x55a96391f800] = =;

		*node[0x55a96391f750] = 8;

		*node[0x55a96391f7d0] = 1;

		*node[0x55a96391f830] = ;;

		*node[0x55a96391f8c0] = =;

		*node[0x55a96391f860] = 11;

		*node[0x55a96391f890] = 2;

		*node[0x55a96391f8f0] = ;;

		*node[0x55a96391f920] = if;

		*node[0x55a96391f950] = op_no;

		*node[0x55a96391f9e0] = ==;

		*node[0x55a96391f980] = 3;

		*node[0x55a96391f9b0] = 0;

		*node[0x55a96391fa10] = ;;

		*node[0x55a96391faa0] = =;

		*node[0x55a96391fa40] = 12;

		*node[0x55a96391fa70] = 0;

		*node[0x55a96391fad0] = ;;

		*node[0x55a96391fc20] = =;

		*node[0x55a96391fb00] = 13;

		*node[0x55a96391fbf0] = -;

		*node[0x55a96391fb30] = 0;

		*node[0x55a96391fbc0] = /;

		*node[0x55a96391fb60] = 2;

		*node[0x55a96391fb90] = 1;

		*node[0x55a96391fc50] = ;;

		*node[0x55a96391fc80] = print;

		*node[0x55a96391fcb0] = 11;

		*node[0x55a96391fce0] = ;;

		*node[0x55a96391fd10] = print;

		*node[0x55a96391fd40] = 12;

		*node[0x55a96391fd70] = 13;

		*node[0x55a96391fda0] = else;

		*node[0x55a96391fdd0] = op_no;

		*node[0x55a96391fe00] = ;;

		*node[0x55a9639200a0] = =;

		*node[0x55a96391fe30] = 14;

		*node[0x55a963920070] = -;

		*node[0x55a96391ff50] = *;

		*node[0x55a96391fef0] = 2;

		*node[0x55a96391ff20] = 2;

		*node[0x55a963920040] = *;

		*node[0x55a96391ffe0] = *;

		*node[0x55a96391ff80] = 4;

		*node[0x55a96391ffb0] = 1;

		*node[0x55a963920010] = 3;

		*node[0x55a9639200d0] = ;;

		*node[0x55a963920100] = if;

		*node[0x55a963920130] = op_no;

		*node[0x55a9639201c0] = >;

		*node[0x55a963920160] = 14;

		*node[0x55a963920190] = 0;

		*node[0x55a9639201f0] = ;;

		*node[0x55a9639202b0] = =;

		*node[0x55a963920220] = 15;

		*node[0x55a963920280] = sqrt;

		*node[0x55a963920250] = 14;

		*node[0x55a9639202e0] = ;;

		*node[0x55a9639204f0] = =;

		*node[0x55a963920310] = 12;

		*node[0x55a9639204c0] = -;

		*node[0x55a9639203a0] = -;

		*node[0x55a963920340] = 0;

		*node[0x55a963920370] = 2;

		*node[0x55a963920490] = *;

		*node[0x55a963920430] = /;

		*node[0x55a9639203d0] = 15;

		*node[0x55a963920400] = 2;

		*node[0x55a963920460] = 1;

		*node[0x55a963920520] = ;;

		*node[0x55a963920730] = =;

		*node[0x55a963920550] = 13;

		*node[0x55a963920700] = +;

		*node[0x55a9639205e0] = -;

		*node[0x55a963920580] = 0;

		*node[0x55a9639205b0] = 2;

		*node[0x55a9639206d0] = *;

		*node[0x55a963920670] = /;

		*node[0x55a963920610] = 15;

		*node[0x55a963920640] = 2;

		*node[0x55a9639206a0] = 1;

		*node[0x55a963920760] = ;;

		*node[0x55a963920790] = print;

		*node[0x55a9639207c0] = 11;

		*node[0x55a9639207f0] = ;;

		*node[0x55a963920820] = print;

		*node[0x55a963920850] = 12;

		*node[0x55a963920880] = 13;

		*node[0x55a9639208b0] = elseif;

		*node[0x55a9639208e0] = op_no;

		*node[0x55a963920970] = ==;

		*node[0x55a963920910] = 14;

		*node[0x55a963920940] = 0;

		*node[0x55a9639209a0] = ;;

		*node[0x55a963920b50] = =;

		*node[0x55a9639209d0] = 10;

		*node[0x55a963920b20] = -;

		*node[0x55a963920a00] = 0;

		*node[0x55a963920af0] = *;

		*node[0x55a963920a90] = /;

		*node[0x55a963920a30] = 2;

		*node[0x55a963920a60] = 2;

		*node[0x55a963920ac0] = 1;

		*node[0x55a963920b80] = ;;

		*node[0x55a963920bb0] = print;

		*node[0x55a963920be0] = 8;

		*node[0x55a963920c10] = ;;

		*node[0x55a963920c40] = print;

		*node[0x55a963920c70] = 10;

		*node[0x55a963920ca0] = else;

		*node[0x55a963920cd0] = op_no;

		*node[0x55a963920d00] = ;;

		*node[0x55a963920d30] = print;

		*node[0x55a963920d60] = 7;

		*node[0x55a963920d90] = ;;

		*node[0x55a963920dc0] = return;

		*node[0x55a963920df0] = 0;

		*node[0x55a963920e20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc63357440] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5de438a6d110] = ;;

		*node[0x5de438a6d190] = 0;

		*node[0x5de438a6d1c0] = ;;

		*node[0x5de438a6d1f0] = input;

		*node[0x5de438a6d220] = 1;

		*node[0x5de438a6d250] = 2;

		*node[0x5de438a6d2b0] = 3;

		*node[0x5de438a6d2e0] = ;;

		*node[0x5de438a6d390] = 1;

		*node[0x5de438a6d3c0] = 2;

		*node[0x5de438a6d3f0] = 3;

		*node[0x5de438a6d420] = ;;

		*node[0x5de438a6d4a0] = 4;

		*node[0x5de438a6d4d0] = 1;

		*node[0x5de438a6d500] = 2;

		*node[0x5de438a6d530] = 3;

		*node[0x5de438a6d590] = ;;

		*node[0x5de438a6d5c0] = if;

		*node[0x5de438a6d5f0] = op_no;

		*node[0x5de438a6d680] = ==;

		*node[0x5de438a6d620] = 1;

		*node[0x5de438a6d650] = 0;

		*node[0x5de438a6d6b0] = ;;

		*node[0x5de438a6d710] = 2;

		*node[0x5de438a6d740] = 3;

		*node[0x5de438a6d770] = else;

		*node[0x5de438a6d7a0] = op_no;

		*node[0x5de438a6d7d0] = ;;

		*node[0x5de438a6d880] = 1;

		*node[0x5de438a6d8b0] = 2;

		*node[0x5de438a6d8e0] = 3;

		*node[0x5de438a6d910] = ;;

		*node[0x5de438a6d990] = 5;

		*node[0x5de438a6d9c0] = 1;

		*node[0x5de438a6d9f0] = 2;

		*node[0x5de438a6da20] = ;;

		*node[0x5de438a6db40] = =;

		*node[0x5de438a6da50] = 7;

		*node[0x5de438a6db10] = -;

		*node[0x5de438a6dab0] = 0;

		*node[0x5de438a6dae0] = 1;

		*node[0x5de438a6db70] = ;;

		*node[0x5de438a6dc00] = =;

		*node[0x5de438a6dba0] = 8;

		*node[0x5de438a6dbd0] = 1;

		*node[0x5de438a6dc30] = ;;

		*node[0x5de438a6dd10] = =;

		*node[0x5de438a6dc60] = 9;

		*node[0x5de438a6dce0] = 1000;

		*node[0x5de438a6dd40] = ;;

		*node[0x5de438a6dd70] = if;

		*node[0x5de438a6dda0] = op_no;

		*node[0x5de438a6de30] = ==;

		*node[0x5de438a6ddd0] = 1;

		*node[0x5de438a6de00] = 0;

		*node[0x5de438a6de60] = ;;

		*node[0x5de438a6de90] = if;

		*node[0x5de438a6dec0] = op_no;

		*node[0x5de438a6df50] = ==;

		*node[0x5de438a6def0] = 2;

		*node[0x5de438a6df20] = 0;

		*node[0x5de438a6df80] = ;;

		*node[0x5de438a6dfb0] = print;

		*node[0x5de438a6dfe0] = 9;

		*node[0x5de438a6e010] = else;

		*node[0x5de438a6e040] = op_no;

		*node[0x5de438a6e070] = ;;

		*node[0x5de438a6e0a0] = print;

		*node[0x5de438a6e0d0] = 7;

		*node[0x5de438a6e100] = else;

		*node[0x5de438a6e130] = op_no;

		*node[0x5de438a6e160] = ;;

		*node[0x5de438a6e2b0] = =;

		*node[0x5de438a6e190] = 10;

		*node[0x5de438a6e280] = -;

		*node[0x5de438a6e1c0] = 0;

		*node[0x5de438a6e250] = /;

		*node[0x5de438a6e1f0] = 2;

		*node[0x5de438a6e220] = 1;

		*node[0x5de438a6e2e0] = ;;

		*node[0x5de438a6e310] = print;

		*node[0x5de438a6e340] = 8;

		*node[0x5de438a6e370] = ;;

		*node[0x5de438a6e3a0] = print;

		*node[0x5de438a6e3d0] = 10;

		*node[0x5de438a6e400] = ;;

		*node[0x5de438a6e430] = return;

		*node[0x5de438a6e460] = 0;

		*node[0x5de438a6e490] = ;;

		*node[0x5de438a6e510] = 6;

		*node[0x5de438a6e540] = 1;

		*node[0x5de438a6e570] = 2;

		*node[0x5de438a6e5a0] = 3;

		*node[0x5de438a6e600] = ;;

		*node[0x5de438a6e6f0] = =;

		*node[0x5de438a6e630] = 7;

		*node[0x5de438a6e6c0] = -;

		*node[0x5de438a6e660] = 0;

		*node[0x5de438a6e690] = 1;

		*node[0x5de438a6e720] = ;;

		*node[0x5de438a6e800] = =;

		*node[0x5de438a6e750] = 8;

		*node[0x5de438a6e7d0] = 1;

		*node[0x5de438a6e830] = ;;

		*node[0x5de438a6e8c0] = =;

		*node[0x5de438a6e860] = 11;

		*node[0x5de438a6e890] = 2;

		*node[0x5de438a6e8f0] = ;;

		*node[0x5de438a6e920] = if;

		*node[0x5de438a6e950] = op_no;

		*node[0x5de438a6e9e0] = ==;

		*node[0x5de438a6e980] = 3;

		*node[0x5de438a6e9b0] = 0;

		*node[0x5de438a6ea10] = ;;

		*node[0x5de438a6eaa0] = =;

		*node[0x5de438a6ea40] = 12;

		*node[0x5de438a6ea70] = 0;

		*node[0x5de438a6ead0] = ;;

		*node[0x5de438a6ec20] = =;

		*node[0x5de438a6eb00] = 13;

		*node[0x5de438a6ebf0] = -;

		*node[0x5de438a6eb30] = 0;

		*node[0x5de438a6ebc0] = /;

		*node[0x5de438a6eb60] = 2;

		*node[0x5de438a6eb90] = 1;

		*node[0x5de438a6ec50] = ;;

		*node[0x5de438a6ec80] = print;

		*node[0x5de438a6ecb0] = 11;

		*node[0x5de438a6ece0] = ;;

		*node[0x5de438a6ed10] = print;

		*node[0x5de438a6ed40] = 12;

		*node[0x5de438a6ed70] = 13;

		*node[0x5de438a6eda0] = else;

		*node[0x5de438a6edd0] = op_no;

		*node[0x5de438a6ee00] = ;;

		*node[0x5de438a6f0a0] = =;

		*node[0x5de438a6ee30] = 14;

		*node[0x5de438a6f070] = -;

		*node[0x5de438a6ef50] = *;

		*node[0x5de438a6eef0] = 2;

		*node[0x5de438a6ef20] = 2;

		*node[0x5de438a6f040] = *;

		*node[0x5de438a6efe0] = *;

		*node[0x5de438a6ef80] = 4;

		*node[0x5de438a6efb0] = 1;

		*node[0x5de438a6f010] = 3;

		*node[0x5de438a6f0d0] = ;;

		*node[0x5de438a6f100] = if;

		*node[0x5de438a6f130] = op_no;

		*node[0x5de438a6f1c0] = >;

		*node[0x5de438a6f160] = 14;

		*node[0x5de438a6f190] = 0;

		*node[0x5de438a6f1f0] = ;;

		*node[0x5de438a6f2b0] = =;

		*node[0x5de438a6f220] = 15;

		*node[0x5de438a6f280] = sqrt;

		*node[0x5de438a6f250] = 14;

		*node[0x5de438a6f2e0] = ;;

		*node[0x5de438a6f4f0] = =;

		*node[0x5de438a6f310] = 12;

		*node[0x5de438a6f4c0] = -;

		*node[0x5de438a6f3a0] = -;

		*node[0x5de438a6f340] = 0;

		*node[0x5de438a6f370] = 2;

		*node[0x5de438a6f490] = *;

		*node[0x5de438a6f430] = /;

		*node[0x5de438a6f3d0] = 15;

		*node[0x5de438a6f400] = 2;

		*node[0x5de438a6f460] = 1;

		*node[0x5de438a6f520] = ;;

		*node[0x5de438a6f730] = =;

		*node[0x5de438a6f550] = 13;

		*node[0x5de438a6f700] = +;

		*node[0x5de438a6f5e0] = -;

		*node[0x5de438a6f580] = 0;

		*node[0x5de438a6f5b0] = 2;

		*node[0x5de438a6f6d0] = *;

		*node[0x5de438a6f670] = /;

		*node[0x5de438a6f610] = 15;

		*node[0x5de438a6f640] = 2;

		*node[0x5de438a6f6a0] = 1;

		*node[0x5de438a6f760] = ;;

		*node[0x5de438a6f790] = print;

		*node[0x5de438a6f7c0] = 11;

		*node[0x5de438a6f7f0] = ;;

		*node[0x5de438a6f820] = print;

		*node[0x5de438a6f850] = 12;

		*node[0x5de438a6f880] = 13;

		*node[0x5de438a6f8b0] = elseif;

		*node[0x5de438a6f8e0] = op_no;

		*node[0x5de438a6f970] = ==;

		*node[0x5de438a6f910] = 14;

		*node[0x5de438a6f940] = 0;

		*node[0x5de438a6f9a0] = ;;

		*node[0x5de438a6fb50] = =;

		*node[0x5de438a6f9d0] = 10;

		*node[0x5de438a6fb20] = -;

		*node[0x5de438a6fa00] = 0;

		*node[0x5de438a6faf0] = *;

		*node[0x5de438a6fa90] = /;

		*node[0x5de438a6fa30] = 2;

		*node[0x5de438a6fa60] = 2;

		*node[0x5de438a6fac0] = 1;

		*node[0x5de438a6fb80] = ;;

		*node[0x5de438a6fbb0] = print;

		*node[0x5de438a6fbe0] = 8;

		*node[0x5de438a6fc10] = ;;

		*node[0x5de438a6fc40] = print;

		*node[0x5de438a6fc70] = 10;

		*node[0x5de438a6fca0] = else;

		*node[0x5de438a6fcd0] = op_no;

		*node[0x5de438a6fd00] = ;;

		*node[0x5de438a6fd30] = print;

		*node[0x5de438a6fd60] = 7;

		*node[0x5de438a6fd90] = ;;

		*node[0x5de438a6fdc0] = return;

		*node[0x5de438a6fdf0] = 0;

		*node[0x5de438a6fe20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe84ff1ac0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x592b2a491110] = ;;

		*node[0x592b2a491190] = 0;

		*node[0x592b2a4911c0] = ;;

		*node[0x592b2a4911f0] = input;

		*node[0x592b2a491220] = 1;

		*node[0x592b2a491250] = 2;

		*node[0x592b2a4912b0] = 3;

		*node[0x592b2a4912e0] = ;;

		*node[0x592b2a491390] = 1;

		*node[0x592b2a4913c0] = 2;

		*node[0x592b2a4913f0] = 3;

		*node[0x592b2a491420] = ;;

		*node[0x592b2a4914a0] = 4;

		*node[0x592b2a4914d0] = 1;

		*node[0x592b2a491500] = 2;

		*node[0x592b2a491530] = 3;

		*node[0x592b2a491590] = ;;

		*node[0x592b2a4915c0] = if;

		*node[0x592b2a4915f0] = op_no;

		*node[0x592b2a491680] = ==;

		*node[0x592b2a491620] = 1;

		*node[0x592b2a491650] = 0;

		*node[0x592b2a4916b0] = ;;

		*node[0x592b2a491710] = 2;

		*node[0x592b2a491740] = 3;

		*node[0x592b2a491770] = else;

		*node[0x592b2a4917a0] = op_no;

		*node[0x592b2a4917d0] = ;;

		*node[0x592b2a491880] = 1;

		*node[0x592b2a4918b0] = 2;

		*node[0x592b2a4918e0] = 3;

		*node[0x592b2a491910] = ;;

		*node[0x592b2a491990] = 5;

		*node[0x592b2a4919c0] = 1;

		*node[0x592b2a4919f0] = 2;

		*node[0x592b2a491a20] = ;;

		*node[0x592b2a491b40] = =;

		*node[0x592b2a491a50] = 7;

		*node[0x592b2a491b10] = -;

		*node[0x592b2a491ab0] = 0;

		*node[0x592b2a491ae0] = 1;

		*node[0x592b2a491b70] = ;;

		*node[0x592b2a491c00] = =;

		*node[0x592b2a491ba0] = 8;

		*node[0x592b2a491bd0] = 1;

		*node[0x592b2a491c30] = ;;

		*node[0x592b2a491d10] = =;

		*node[0x592b2a491c60] = 9;

		*node[0x592b2a491ce0] = 1000;

		*node[0x592b2a491d40] = ;;

		*node[0x592b2a491d70] = if;

		*node[0x592b2a491da0] = op_no;

		*node[0x592b2a491e30] = ==;

		*node[0x592b2a491dd0] = 1;

		*node[0x592b2a491e00] = 0;

		*node[0x592b2a491e60] = ;;

		*node[0x592b2a491e90] = if;

		*node[0x592b2a491ec0] = op_no;

		*node[0x592b2a491f50] = ==;

		*node[0x592b2a491ef0] = 2;

		*node[0x592b2a491f20] = 0;

		*node[0x592b2a491f80] = ;;

		*node[0x592b2a491fb0] = print;

		*node[0x592b2a491fe0] = 9;

		*node[0x592b2a492010] = else;

		*node[0x592b2a492040] = op_no;

		*node[0x592b2a492070] = ;;

		*node[0x592b2a4920a0] = print;

		*node[0x592b2a4920d0] = 7;

		*node[0x592b2a492100] = else;

		*node[0x592b2a492130] = op_no;

		*node[0x592b2a492160] = ;;

		*node[0x592b2a4922b0] = =;

		*node[0x592b2a492190] = 10;

		*node[0x592b2a492280] = -;

		*node[0x592b2a4921c0] = 0;

		*node[0x592b2a492250] = /;

		*node[0x592b2a4921f0] = 2;

		*node[0x592b2a492220] = 1;

		*node[0x592b2a4922e0] = ;;

		*node[0x592b2a492310] = print;

		*node[0x592b2a492340] = 8;

		*node[0x592b2a492370] = ;;

		*node[0x592b2a4923a0] = print;

		*node[0x592b2a4923d0] = 10;

		*node[0x592b2a492400] = ;;

		*node[0x592b2a492430] = return;

		*node[0x592b2a492460] = 0;

		*node[0x592b2a492490] = ;;

		*node[0x592b2a492510] = 6;

		*node[0x592b2a492540] = 1;

		*node[0x592b2a492570] = 2;

		*node[0x592b2a4925a0] = 3;

		*node[0x592b2a492600] = ;;

		*node[0x592b2a4926f0] = =;

		*node[0x592b2a492630] = 7;

		*node[0x592b2a4926c0] = -;

		*node[0x592b2a492660] = 0;

		*node[0x592b2a492690] = 1;

		*node[0x592b2a492720] = ;;

		*node[0x592b2a492800] = =;

		*node[0x592b2a492750] = 8;

		*node[0x592b2a4927d0] = 1;

		*node[0x592b2a492830] = ;;

		*node[0x592b2a4928c0] = =;

		*node[0x592b2a492860] = 11;

		*node[0x592b2a492890] = 2;

		*node[0x592b2a4928f0] = ;;

		*node[0x592b2a492920] = if;

		*node[0x592b2a492950] = op_no;

		*node[0x592b2a4929e0] = ==;

		*node[0x592b2a492980] = 3;

		*node[0x592b2a4929b0] = 0;

		*node[0x592b2a492a10] = ;;

		*node[0x592b2a492aa0] = =;

		*node[0x592b2a492a40] = 12;

		*node[0x592b2a492a70] = 0;

		*node[0x592b2a492ad0] = ;;

		*node[0x592b2a492c20] = =;

		*node[0x592b2a492b00] = 13;

		*node[0x592b2a492bf0] = -;

		*node[0x592b2a492b30] = 0;

		*node[0x592b2a492bc0] = /;

		*node[0x592b2a492b60] = 2;

		*node[0x592b2a492b90] = 1;

		*node[0x592b2a492c50] = ;;

		*node[0x592b2a492c80] = print;

		*node[0x592b2a492cb0] = 11;

		*node[0x592b2a492ce0] = ;;

		*node[0x592b2a492d10] = print;

		*node[0x592b2a492d40] = 12;

		*node[0x592b2a492d70] = 13;

		*node[0x592b2a492da0] = else;

		*node[0x592b2a492dd0] = op_no;

		*node[0x592b2a492e00] = ;;

		*node[0x592b2a4930a0] = =;

		*node[0x592b2a492e30] = 14;

		*node[0x592b2a493070] = -;

		*node[0x592b2a492f50] = *;

		*node[0x592b2a492ef0] = 2;

		*node[0x592b2a492f20] = 2;

		*node[0x592b2a493040] = *;

		*node[0x592b2a492fe0] = *;

		*node[0x592b2a492f80] = 4;

		*node[0x592b2a492fb0] = 1;

		*node[0x592b2a493010] = 3;

		*node[0x592b2a4930d0] = ;;

		*node[0x592b2a493100] = if;

		*node[0x592b2a493130] = op_no;

		*node[0x592b2a4931c0] = >;

		*node[0x592b2a493160] = 14;

		*node[0x592b2a493190] = 0;

		*node[0x592b2a4931f0] = ;;

		*node[0x592b2a4932b0] = =;

		*node[0x592b2a493220] = 15;

		*node[0x592b2a493280] = sqrt;

		*node[0x592b2a493250] = 14;

		*node[0x592b2a4932e0] = ;;

		*node[0x592b2a4934f0] = =;

		*node[0x592b2a493310] = 12;

		*node[0x592b2a4934c0] = -;

		*node[0x592b2a4933a0] = -;

		*node[0x592b2a493340] = 0;

		*node[0x592b2a493370] = 2;

		*node[0x592b2a493490] = *;

		*node[0x592b2a493430] = /;

		*node[0x592b2a4933d0] = 15;

		*node[0x592b2a493400] = 2;

		*node[0x592b2a493460] = 1;

		*node[0x592b2a493520] = ;;

		*node[0x592b2a493730] = =;

		*node[0x592b2a493550] = 13;

		*node[0x592b2a493700] = +;

		*node[0x592b2a4935e0] = -;

		*node[0x592b2a493580] = 0;

		*node[0x592b2a4935b0] = 2;

		*node[0x592b2a4936d0] = *;

		*node[0x592b2a493670] = /;

		*node[0x592b2a493610] = 15;

		*node[0x592b2a493640] = 2;

		*node[0x592b2a4936a0] = 1;

		*node[0x592b2a493760] = ;;

		*node[0x592b2a493790] = print;

		*node[0x592b2a4937c0] = 11;

		*node[0x592b2a4937f0] = ;;

		*node[0x592b2a493820] = print;

		*node[0x592b2a493850] = 12;

		*node[0x592b2a493880] = 13;

		*node[0x592b2a4938b0] = elseif;

		*node[0x592b2a4938e0] = op_no;

		*node[0x592b2a493970] = ==;

		*node[0x592b2a493910] = 14;

		*node[0x592b2a493940] = 0;

		*node[0x592b2a4939a0] = ;;

		*node[0x592b2a493b50] = =;

		*node[0x592b2a4939d0] = 10;

		*node[0x592b2a493b20] = -;

		*node[0x592b2a493a00] = 0;

		*node[0x592b2a493af0] = *;

		*node[0x592b2a493a90] = /;

		*node[0x592b2a493a30] = 2;

		*node[0x592b2a493a60] = 2;

		*node[0x592b2a493ac0] = 1;

		*node[0x592b2a493b80] = ;;

		*node[0x592b2a493bb0] = print;

		*node[0x592b2a493be0] = 8;

		*node[0x592b2a493c10] = ;;

		*node[0x592b2a493c40] = print;

		*node[0x592b2a493c70] = 10;

		*node[0x592b2a493ca0] = else;

		*node[0x592b2a493cd0] = op_no;

		*node[0x592b2a493d00] = ;;

		*node[0x592b2a493d30] = print;

		*node[0x592b2a493d60] = 7;

		*node[0x592b2a493d90] = ;;

		*node[0x592b2a493dc0] = return;

		*node[0x592b2a493df0] = 0;

		*node[0x592b2a493e20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fffa06dfa70] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58784f92d110] = ;;

		*node[0x58784f92d190] = 0;

		*node[0x58784f92d1c0] = ;;

		*node[0x58784f92d1f0] = input;

		*node[0x58784f92d220] = 1;

		*node[0x58784f92d250] = 2;

		*node[0x58784f92d2b0] = 3;

		*node[0x58784f92d2e0] = ;;

		*node[0x58784f92d390] = 1;

		*node[0x58784f92d3c0] = 2;

		*node[0x58784f92d3f0] = 3;

		*node[0x58784f92d420] = ;;

		*node[0x58784f92d4a0] = 4;

		*node[0x58784f92d4d0] = 1;

		*node[0x58784f92d500] = 2;

		*node[0x58784f92d530] = 3;

		*node[0x58784f92d590] = ;;

		*node[0x58784f92d5c0] = if;

		*node[0x58784f92d5f0] = op_no;

		*node[0x58784f92d680] = ==;

		*node[0x58784f92d620] = 1;

		*node[0x58784f92d650] = 0;

		*node[0x58784f92d6b0] = ;;

		*node[0x58784f92d710] = 2;

		*node[0x58784f92d740] = 3;

		*node[0x58784f92d770] = else;

		*node[0x58784f92d7a0] = op_no;

		*node[0x58784f92d7d0] = ;;

		*node[0x58784f92d880] = 1;

		*node[0x58784f92d8b0] = 2;

		*node[0x58784f92d8e0] = 3;

		*node[0x58784f92d910] = ;;

		*node[0x58784f92d990] = 5;

		*node[0x58784f92d9c0] = 1;

		*node[0x58784f92d9f0] = 2;

		*node[0x58784f92da20] = ;;

		*node[0x58784f92db40] = =;

		*node[0x58784f92da50] = 7;

		*node[0x58784f92db10] = -;

		*node[0x58784f92dab0] = 0;

		*node[0x58784f92dae0] = 1;

		*node[0x58784f92db70] = ;;

		*node[0x58784f92dc00] = =;

		*node[0x58784f92dba0] = 8;

		*node[0x58784f92dbd0] = 1;

		*node[0x58784f92dc30] = ;;

		*node[0x58784f92dd10] = =;

		*node[0x58784f92dc60] = 9;

		*node[0x58784f92dce0] = 1000;

		*node[0x58784f92dd40] = ;;

		*node[0x58784f92dd70] = if;

		*node[0x58784f92dda0] = op_no;

		*node[0x58784f92de30] = ==;

		*node[0x58784f92ddd0] = 1;

		*node[0x58784f92de00] = 0;

		*node[0x58784f92de60] = ;;

		*node[0x58784f92de90] = if;

		*node[0x58784f92dec0] = op_no;

		*node[0x58784f92df50] = ==;

		*node[0x58784f92def0] = 2;

		*node[0x58784f92df20] = 0;

		*node[0x58784f92df80] = ;;

		*node[0x58784f92dfb0] = print;

		*node[0x58784f92dfe0] = 9;

		*node[0x58784f92e010] = else;

		*node[0x58784f92e040] = op_no;

		*node[0x58784f92e070] = ;;

		*node[0x58784f92e0a0] = print;

		*node[0x58784f92e0d0] = 7;

		*node[0x58784f92e100] = else;

		*node[0x58784f92e130] = op_no;

		*node[0x58784f92e160] = ;;

		*node[0x58784f92e2b0] = =;

		*node[0x58784f92e190] = 10;

		*node[0x58784f92e280] = -;

		*node[0x58784f92e1c0] = 0;

		*node[0x58784f92e250] = /;

		*node[0x58784f92e1f0] = 2;

		*node[0x58784f92e220] = 1;

		*node[0x58784f92e2e0] = ;;

		*node[0x58784f92e310] = print;

		*node[0x58784f92e340] = 8;

		*node[0x58784f92e370] = ;;

		*node[0x58784f92e3a0] = print;

		*node[0x58784f92e3d0] = 10;

		*node[0x58784f92e400] = ;;

		*node[0x58784f92e430] = return;

		*node[0x58784f92e460] = 0;

		*node[0x58784f92e490] = ;;

		*node[0x58784f92e510] = 6;

		*node[0x58784f92e540] = 1;

		*node[0x58784f92e570] = 2;

		*node[0x58784f92e5a0] = 3;

		*node[0x58784f92e600] = ;;

		*node[0x58784f92e6f0] = =;

		*node[0x58784f92e630] = 7;

		*node[0x58784f92e6c0] = -;

		*node[0x58784f92e660] = 0;

		*node[0x58784f92e690] = 1;

		*node[0x58784f92e720] = ;;

		*node[0x58784f92e800] = =;

		*node[0x58784f92e750] = 8;

		*node[0x58784f92e7d0] = 1;

		*node[0x58784f92e830] = ;;

		*node[0x58784f92e8c0] = =;

		*node[0x58784f92e860] = 11;

		*node[0x58784f92e890] = 2;

		*node[0x58784f92e8f0] = ;;

		*node[0x58784f92e920] = if;

		*node[0x58784f92e950] = op_no;

		*node[0x58784f92e9e0] = ==;

		*node[0x58784f92e980] = 3;

		*node[0x58784f92e9b0] = 0;

		*node[0x58784f92ea10] = ;;

		*node[0x58784f92eaa0] = =;

		*node[0x58784f92ea40] = 12;

		*node[0x58784f92ea70] = 0;

		*node[0x58784f92ead0] = ;;

		*node[0x58784f92ec20] = =;

		*node[0x58784f92eb00] = 13;

		*node[0x58784f92ebf0] = -;

		*node[0x58784f92eb30] = 0;

		*node[0x58784f92ebc0] = /;

		*node[0x58784f92eb60] = 2;

		*node[0x58784f92eb90] = 1;

		*node[0x58784f92ec50] = ;;

		*node[0x58784f92ec80] = print;

		*node[0x58784f92ecb0] = 11;

		*node[0x58784f92ece0] = ;;

		*node[0x58784f92ed10] = print;

		*node[0x58784f92ed40] = 12;

		*node[0x58784f92ed70] = 13;

		*node[0x58784f92eda0] = else;

		*node[0x58784f92edd0] = op_no;

		*node[0x58784f92ee00] = ;;

		*node[0x58784f92f0a0] = =;

		*node[0x58784f92ee30] = 14;

		*node[0x58784f92f070] = -;

		*node[0x58784f92ef50] = *;

		*node[0x58784f92eef0] = 2;

		*node[0x58784f92ef20] = 2;

		*node[0x58784f92f040] = *;

		*node[0x58784f92efe0] = *;

		*node[0x58784f92ef80] = 4;

		*node[0x58784f92efb0] = 1;

		*node[0x58784f92f010] = 3;

		*node[0x58784f92f0d0] = ;;

		*node[0x58784f92f100] = if;

		*node[0x58784f92f130] = op_no;

		*node[0x58784f92f1c0] = >;

		*node[0x58784f92f160] = 14;

		*node[0x58784f92f190] = 0;

		*node[0x58784f92f1f0] = ;;

		*node[0x58784f92f2b0] = =;

		*node[0x58784f92f220] = 15;

		*node[0x58784f92f280] = sqrt;

		*node[0x58784f92f250] = 14;

		*node[0x58784f92f2e0] = ;;

		*node[0x58784f92f4f0] = =;

		*node[0x58784f92f310] = 12;

		*node[0x58784f92f4c0] = -;

		*node[0x58784f92f3a0] = -;

		*node[0x58784f92f340] = 0;

		*node[0x58784f92f370] = 2;

		*node[0x58784f92f490] = *;

		*node[0x58784f92f430] = /;

		*node[0x58784f92f3d0] = 15;

		*node[0x58784f92f400] = 2;

		*node[0x58784f92f460] = 1;

		*node[0x58784f92f520] = ;;

		*node[0x58784f92f730] = =;

		*node[0x58784f92f550] = 13;

		*node[0x58784f92f700] = +;

		*node[0x58784f92f5e0] = -;

		*node[0x58784f92f580] = 0;

		*node[0x58784f92f5b0] = 2;

		*node[0x58784f92f6d0] = *;

		*node[0x58784f92f670] = /;

		*node[0x58784f92f610] = 15;

		*node[0x58784f92f640] = 2;

		*node[0x58784f92f6a0] = 1;

		*node[0x58784f92f760] = ;;

		*node[0x58784f92f790] = print;

		*node[0x58784f92f7c0] = 11;

		*node[0x58784f92f7f0] = ;;

		*node[0x58784f92f820] = print;

		*node[0x58784f92f850] = 12;

		*node[0x58784f92f880] = 13;

		*node[0x58784f92f8b0] = elseif;

		*node[0x58784f92f8e0] = op_no;

		*node[0x58784f92f970] = ==;

		*node[0x58784f92f910] = 14;

		*node[0x58784f92f940] = 0;

		*node[0x58784f92f9a0] = ;;

		*node[0x58784f92fb50] = =;

		*node[0x58784f92f9d0] = 10;

		*node[0x58784f92fb20] = -;

		*node[0x58784f92fa00] = 0;

		*node[0x58784f92faf0] = *;

		*node[0x58784f92fa90] = /;

		*node[0x58784f92fa30] = 2;

		*node[0x58784f92fa60] = 2;

		*node[0x58784f92fac0] = 1;

		*node[0x58784f92fb80] = ;;

		*node[0x58784f92fbb0] = print;

		*node[0x58784f92fbe0] = 8;

		*node[0x58784f92fc10] = ;;

		*node[0x58784f92fc40] = print;

		*node[0x58784f92fc70] = 10;

		*node[0x58784f92fca0] = else;

		*node[0x58784f92fcd0] = op_no;

		*node[0x58784f92fd00] = ;;

		*node[0x58784f92fd30] = print;

		*node[0x58784f92fd60] = 7;

		*node[0x58784f92fd90] = ;;

		*node[0x58784f92fdc0] = return;

		*node[0x58784f92fdf0] = 0;

		*node[0x58784f92fe20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe3f7cd7d0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5aa4f8af1110] = ;;

		*node[0x5aa4f8af1190] = 0;

		*node[0x5aa4f8af11c0] = ;;

		*node[0x5aa4f8af11f0] = input;

		*node[0x5aa4f8af1220] = 1;

		*node[0x5aa4f8af1250] = 2;

		*node[0x5aa4f8af12b0] = 3;

		*node[0x5aa4f8af12e0] = ;;

		*node[0x5aa4f8af1390] = 1;

		*node[0x5aa4f8af13c0] = 2;

		*node[0x5aa4f8af13f0] = 3;

		*node[0x5aa4f8af1420] = ;;

		*node[0x5aa4f8af14a0] = 4;

		*node[0x5aa4f8af14d0] = 1;

		*node[0x5aa4f8af1500] = 2;

		*node[0x5aa4f8af1530] = 3;

		*node[0x5aa4f8af1590] = ;;

		*node[0x5aa4f8af15c0] = if;

		*node[0x5aa4f8af15f0] = op_no;

		*node[0x5aa4f8af1680] = ==;

		*node[0x5aa4f8af1620] = 1;

		*node[0x5aa4f8af1650] = 0;

		*node[0x5aa4f8af16b0] = ;;

		*node[0x5aa4f8af1710] = 2;

		*node[0x5aa4f8af1740] = 3;

		*node[0x5aa4f8af1770] = else;

		*node[0x5aa4f8af17a0] = op_no;

		*node[0x5aa4f8af17d0] = ;;

		*node[0x5aa4f8af1880] = 1;

		*node[0x5aa4f8af18b0] = 2;

		*node[0x5aa4f8af18e0] = 3;

		*node[0x5aa4f8af1910] = ;;

		*node[0x5aa4f8af1990] = 5;

		*node[0x5aa4f8af19c0] = 1;

		*node[0x5aa4f8af19f0] = 2;

		*node[0x5aa4f8af1a20] = ;;

		*node[0x5aa4f8af1b40] = =;

		*node[0x5aa4f8af1a50] = 7;

		*node[0x5aa4f8af1b10] = -;

		*node[0x5aa4f8af1ab0] = 0;

		*node[0x5aa4f8af1ae0] = 1;

		*node[0x5aa4f8af1b70] = ;;

		*node[0x5aa4f8af1c00] = =;

		*node[0x5aa4f8af1ba0] = 8;

		*node[0x5aa4f8af1bd0] = 1;

		*node[0x5aa4f8af1c30] = ;;

		*node[0x5aa4f8af1d10] = =;

		*node[0x5aa4f8af1c60] = 9;

		*node[0x5aa4f8af1ce0] = 1000;

		*node[0x5aa4f8af1d40] = ;;

		*node[0x5aa4f8af1d70] = if;

		*node[0x5aa4f8af1da0] = op_no;

		*node[0x5aa4f8af1e30] = ==;

		*node[0x5aa4f8af1dd0] = 1;

		*node[0x5aa4f8af1e00] = 0;

		*node[0x5aa4f8af1e60] = ;;

		*node[0x5aa4f8af1e90] = if;

		*node[0x5aa4f8af1ec0] = op_no;

		*node[0x5aa4f8af1f50] = ==;

		*node[0x5aa4f8af1ef0] = 2;

		*node[0x5aa4f8af1f20] = 0;

		*node[0x5aa4f8af1f80] = ;;

		*node[0x5aa4f8af1fb0] = print;

		*node[0x5aa4f8af1fe0] = 9;

		*node[0x5aa4f8af2010] = else;

		*node[0x5aa4f8af2040] = op_no;

		*node[0x5aa4f8af2070] = ;;

		*node[0x5aa4f8af20a0] = print;

		*node[0x5aa4f8af20d0] = 7;

		*node[0x5aa4f8af2100] = else;

		*node[0x5aa4f8af2130] = op_no;

		*node[0x5aa4f8af2160] = ;;

		*node[0x5aa4f8af22b0] = =;

		*node[0x5aa4f8af2190] = 10;

		*node[0x5aa4f8af2280] = -;

		*node[0x5aa4f8af21c0] = 0;

		*node[0x5aa4f8af2250] = /;

		*node[0x5aa4f8af21f0] = 2;

		*node[0x5aa4f8af2220] = 1;

		*node[0x5aa4f8af22e0] = ;;

		*node[0x5aa4f8af2310] = print;

		*node[0x5aa4f8af2340] = 8;

		*node[0x5aa4f8af2370] = ;;

		*node[0x5aa4f8af23a0] = print;

		*node[0x5aa4f8af23d0] = 10;

		*node[0x5aa4f8af2400] = ;;

		*node[0x5aa4f8af2430] = return;

		*node[0x5aa4f8af2460] = 0;

		*node[0x5aa4f8af2490] = ;;

		*node[0x5aa4f8af2510] = 6;

		*node[0x5aa4f8af2540] = 1;

		*node[0x5aa4f8af2570] = 2;

		*node[0x5aa4f8af25a0] = 3;

		*node[0x5aa4f8af2600] = ;;

		*node[0x5aa4f8af26f0] = =;

		*node[0x5aa4f8af2630] = 7;

		*node[0x5aa4f8af26c0] = -;

		*node[0x5aa4f8af2660] = 0;

		*node[0x5aa4f8af2690] = 1;

		*node[0x5aa4f8af2720] = ;;

		*node[0x5aa4f8af2800] = =;

		*node[0x5aa4f8af2750] = 8;

		*node[0x5aa4f8af27d0] = 1;

		*node[0x5aa4f8af2830] = ;;

		*node[0x5aa4f8af28c0] = =;

		*node[0x5aa4f8af2860] = 11;

		*node[0x5aa4f8af2890] = 2;

		*node[0x5aa4f8af28f0] = ;;

		*node[0x5aa4f8af2920] = if;

		*node[0x5aa4f8af2950] = op_no;

		*node[0x5aa4f8af29e0] = ==;

		*node[0x5aa4f8af2980] = 3;

		*node[0x5aa4f8af29b0] = 0;

		*node[0x5aa4f8af2a10] = ;;

		*node[0x5aa4f8af2aa0] = =;

		*node[0x5aa4f8af2a40] = 12;

		*node[0x5aa4f8af2a70] = 0;

		*node[0x5aa4f8af2ad0] = ;;

		*node[0x5aa4f8af2c20] = =;

		*node[0x5aa4f8af2b00] = 13;

		*node[0x5aa4f8af2bf0] = -;

		*node[0x5aa4f8af2b30] = 0;

		*node[0x5aa4f8af2bc0] = /;

		*node[0x5aa4f8af2b60] = 2;

		*node[0x5aa4f8af2b90] = 1;

		*node[0x5aa4f8af2c50] = ;;

		*node[0x5aa4f8af2c80] = print;

		*node[0x5aa4f8af2cb0] = 11;

		*node[0x5aa4f8af2ce0] = ;;

		*node[0x5aa4f8af2d10] = print;

		*node[0x5aa4f8af2d40] = 12;

		*node[0x5aa4f8af2d70] = 13;

		*node[0x5aa4f8af2da0] = else;

		*node[0x5aa4f8af2dd0] = op_no;

		*node[0x5aa4f8af2e00] = ;;

		*node[0x5aa4f8af30a0] = =;

		*node[0x5aa4f8af2e30] = 14;

		*node[0x5aa4f8af3070] = -;

		*node[0x5aa4f8af2f50] = *;

		*node[0x5aa4f8af2ef0] = 2;

		*node[0x5aa4f8af2f20] = 2;

		*node[0x5aa4f8af3040] = *;

		*node[0x5aa4f8af2fe0] = *;

		*node[0x5aa4f8af2f80] = 4;

		*node[0x5aa4f8af2fb0] = 1;

		*node[0x5aa4f8af3010] = 3;

		*node[0x5aa4f8af30d0] = ;;

		*node[0x5aa4f8af3100] = if;

		*node[0x5aa4f8af3130] = op_no;

		*node[0x5aa4f8af31c0] = >;

		*node[0x5aa4f8af3160] = 14;

		*node[0x5aa4f8af3190] = 0;

		*node[0x5aa4f8af31f0] = ;;

		*node[0x5aa4f8af32b0] = =;

		*node[0x5aa4f8af3220] = 15;

		*node[0x5aa4f8af3280] = sqrt;

		*node[0x5aa4f8af3250] = 14;

		*node[0x5aa4f8af32e0] = ;;

		*node[0x5aa4f8af34f0] = =;

		*node[0x5aa4f8af3310] = 12;

		*node[0x5aa4f8af34c0] = -;

		*node[0x5aa4f8af33a0] = -;

		*node[0x5aa4f8af3340] = 0;

		*node[0x5aa4f8af3370] = 2;

		*node[0x5aa4f8af3490] = *;

		*node[0x5aa4f8af3430] = /;

		*node[0x5aa4f8af33d0] = 15;

		*node[0x5aa4f8af3400] = 2;

		*node[0x5aa4f8af3460] = 1;

		*node[0x5aa4f8af3520] = ;;

		*node[0x5aa4f8af3730] = =;

		*node[0x5aa4f8af3550] = 13;

		*node[0x5aa4f8af3700] = +;

		*node[0x5aa4f8af35e0] = -;

		*node[0x5aa4f8af3580] = 0;

		*node[0x5aa4f8af35b0] = 2;

		*node[0x5aa4f8af36d0] = *;

		*node[0x5aa4f8af3670] = /;

		*node[0x5aa4f8af3610] = 15;

		*node[0x5aa4f8af3640] = 2;

		*node[0x5aa4f8af36a0] = 1;

		*node[0x5aa4f8af3760] = ;;

		*node[0x5aa4f8af3790] = print;

		*node[0x5aa4f8af37c0] = 11;

		*node[0x5aa4f8af37f0] = ;;

		*node[0x5aa4f8af3820] = print;

		*node[0x5aa4f8af3850] = 12;

		*node[0x5aa4f8af3880] = 13;

		*node[0x5aa4f8af38b0] = elseif;

		*node[0x5aa4f8af38e0] = op_no;

		*node[0x5aa4f8af3970] = ==;

		*node[0x5aa4f8af3910] = 14;

		*node[0x5aa4f8af3940] = 0;

		*node[0x5aa4f8af39a0] = ;;

		*node[0x5aa4f8af3b50] = =;

		*node[0x5aa4f8af39d0] = 10;

		*node[0x5aa4f8af3b20] = -;

		*node[0x5aa4f8af3a00] = 0;

		*node[0x5aa4f8af3af0] = *;

		*node[0x5aa4f8af3a90] = /;

		*node[0x5aa4f8af3a30] = 2;

		*node[0x5aa4f8af3a60] = 2;

		*node[0x5aa4f8af3ac0] = 1;

		*node[0x5aa4f8af3b80] = ;;

		*node[0x5aa4f8af3bb0] = print;

		*node[0x5aa4f8af3be0] = 8;

		*node[0x5aa4f8af3c10] = ;;

		*node[0x5aa4f8af3c40] = print;

		*node[0x5aa4f8af3c70] = 10;

		*node[0x5aa4f8af3ca0] = else;

		*node[0x5aa4f8af3cd0] = op_no;

		*node[0x5aa4f8af3d00] = ;;

		*node[0x5aa4f8af3d30] = print;

		*node[0x5aa4f8af3d60] = 7;

		*node[0x5aa4f8af3d90] = ;;

		*node[0x5aa4f8af3dc0] = return;

		*node[0x5aa4f8af3df0] = 0;

		*node[0x5aa4f8af3e20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe5ad06700] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e29d56e5110] = ;;

		*node[0x5e29d56e5190] = 0;

		*node[0x5e29d56e51c0] = ;;

		*node[0x5e29d56e51f0] = input;

		*node[0x5e29d56e5220] = 1;

		*node[0x5e29d56e5250] = 2;

		*node[0x5e29d56e52b0] = 3;

		*node[0x5e29d56e52e0] = ;;

		*node[0x5e29d56e5390] = 1;

		*node[0x5e29d56e53c0] = 2;

		*node[0x5e29d56e53f0] = 3;

		*node[0x5e29d56e5420] = ;;

		*node[0x5e29d56e54a0] = 4;

		*node[0x5e29d56e54d0] = 1;

		*node[0x5e29d56e5500] = 2;

		*node[0x5e29d56e5530] = 3;

		*node[0x5e29d56e5590] = ;;

		*node[0x5e29d56e55c0] = if;

		*node[0x5e29d56e55f0] = op_no;

		*node[0x5e29d56e5680] = ==;

		*node[0x5e29d56e5620] = 1;

		*node[0x5e29d56e5650] = 0;

		*node[0x5e29d56e56b0] = ;;

		*node[0x5e29d56e5710] = 2;

		*node[0x5e29d56e5740] = 3;

		*node[0x5e29d56e5770] = else;

		*node[0x5e29d56e57a0] = op_no;

		*node[0x5e29d56e57d0] = ;;

		*node[0x5e29d56e5880] = 1;

		*node[0x5e29d56e58b0] = 2;

		*node[0x5e29d56e58e0] = 3;

		*node[0x5e29d56e5910] = ;;

		*node[0x5e29d56e5990] = 5;

		*node[0x5e29d56e59c0] = 1;

		*node[0x5e29d56e59f0] = 2;

		*node[0x5e29d56e5a20] = ;;

		*node[0x5e29d56e5b40] = =;

		*node[0x5e29d56e5a50] = 7;

		*node[0x5e29d56e5b10] = -;

		*node[0x5e29d56e5ab0] = 0;

		*node[0x5e29d56e5ae0] = 1;

		*node[0x5e29d56e5b70] = ;;

		*node[0x5e29d56e5c00] = =;

		*node[0x5e29d56e5ba0] = 8;

		*node[0x5e29d56e5bd0] = 1;

		*node[0x5e29d56e5c30] = ;;

		*node[0x5e29d56e5d10] = =;

		*node[0x5e29d56e5c60] = 9;

		*node[0x5e29d56e5ce0] = 1000;

		*node[0x5e29d56e5d40] = ;;

		*node[0x5e29d56e5d70] = if;

		*node[0x5e29d56e5da0] = op_no;

		*node[0x5e29d56e5e30] = ==;

		*node[0x5e29d56e5dd0] = 1;

		*node[0x5e29d56e5e00] = 0;

		*node[0x5e29d56e5e60] = ;;

		*node[0x5e29d56e5e90] = if;

		*node[0x5e29d56e5ec0] = op_no;

		*node[0x5e29d56e5f50] = ==;

		*node[0x5e29d56e5ef0] = 2;

		*node[0x5e29d56e5f20] = 0;

		*node[0x5e29d56e5f80] = ;;

		*node[0x5e29d56e5fb0] = print;

		*node[0x5e29d56e5fe0] = 9;

		*node[0x5e29d56e6010] = else;

		*node[0x5e29d56e6040] = op_no;

		*node[0x5e29d56e6070] = ;;

		*node[0x5e29d56e60a0] = print;

		*node[0x5e29d56e60d0] = 7;

		*node[0x5e29d56e6100] = else;

		*node[0x5e29d56e6130] = op_no;

		*node[0x5e29d56e6160] = ;;

		*node[0x5e29d56e62b0] = =;

		*node[0x5e29d56e6190] = 10;

		*node[0x5e29d56e6280] = -;

		*node[0x5e29d56e61c0] = 0;

		*node[0x5e29d56e6250] = /;

		*node[0x5e29d56e61f0] = 2;

		*node[0x5e29d56e6220] = 1;

		*node[0x5e29d56e62e0] = ;;

		*node[0x5e29d56e6310] = print;

		*node[0x5e29d56e6340] = 8;

		*node[0x5e29d56e6370] = ;;

		*node[0x5e29d56e63a0] = print;

		*node[0x5e29d56e63d0] = 10;

		*node[0x5e29d56e6400] = ;;

		*node[0x5e29d56e6430] = return;

		*node[0x5e29d56e6460] = 0;

		*node[0x5e29d56e6490] = ;;

		*node[0x5e29d56e6510] = 6;

		*node[0x5e29d56e6540] = 1;

		*node[0x5e29d56e6570] = 2;

		*node[0x5e29d56e65a0] = 3;

		*node[0x5e29d56e6600] = ;;

		*node[0x5e29d56e66f0] = =;

		*node[0x5e29d56e6630] = 7;

		*node[0x5e29d56e66c0] = -;

		*node[0x5e29d56e6660] = 0;

		*node[0x5e29d56e6690] = 1;

		*node[0x5e29d56e6720] = ;;

		*node[0x5e29d56e6800] = =;

		*node[0x5e29d56e6750] = 8;

		*node[0x5e29d56e67d0] = 1;

		*node[0x5e29d56e6830] = ;;

		*node[0x5e29d56e68c0] = =;

		*node[0x5e29d56e6860] = 11;

		*node[0x5e29d56e6890] = 2;

		*node[0x5e29d56e68f0] = ;;

		*node[0x5e29d56e6920] = if;

		*node[0x5e29d56e6950] = op_no;

		*node[0x5e29d56e69e0] = ==;

		*node[0x5e29d56e6980] = 3;

		*node[0x5e29d56e69b0] = 0;

		*node[0x5e29d56e6a10] = ;;

		*node[0x5e29d56e6aa0] = =;

		*node[0x5e29d56e6a40] = 12;

		*node[0x5e29d56e6a70] = 0;

		*node[0x5e29d56e6ad0] = ;;

		*node[0x5e29d56e6c20] = =;

		*node[0x5e29d56e6b00] = 13;

		*node[0x5e29d56e6bf0] = -;

		*node[0x5e29d56e6b30] = 0;

		*node[0x5e29d56e6bc0] = /;

		*node[0x5e29d56e6b60] = 2;

		*node[0x5e29d56e6b90] = 1;

		*node[0x5e29d56e6c50] = ;;

		*node[0x5e29d56e6c80] = print;

		*node[0x5e29d56e6cb0] = 11;

		*node[0x5e29d56e6ce0] = ;;

		*node[0x5e29d56e6d10] = print;

		*node[0x5e29d56e6d40] = 12;

		*node[0x5e29d56e6d70] = 13;

		*node[0x5e29d56e6da0] = else;

		*node[0x5e29d56e6dd0] = op_no;

		*node[0x5e29d56e6e00] = ;;

		*node[0x5e29d56e70a0] = =;

		*node[0x5e29d56e6e30] = 14;

		*node[0x5e29d56e7070] = -;

		*node[0x5e29d56e6f50] = *;

		*node[0x5e29d56e6ef0] = 2;

		*node[0x5e29d56e6f20] = 2;

		*node[0x5e29d56e7040] = *;

		*node[0x5e29d56e6fe0] = *;

		*node[0x5e29d56e6f80] = 4;

		*node[0x5e29d56e6fb0] = 1;

		*node[0x5e29d56e7010] = 3;

		*node[0x5e29d56e70d0] = ;;

		*node[0x5e29d56e7100] = if;

		*node[0x5e29d56e7130] = op_no;

		*node[0x5e29d56e71c0] = >;

		*node[0x5e29d56e7160] = 14;

		*node[0x5e29d56e7190] = 0;

		*node[0x5e29d56e71f0] = ;;

		*node[0x5e29d56e72b0] = =;

		*node[0x5e29d56e7220] = 15;

		*node[0x5e29d56e7280] = sqrt;

		*node[0x5e29d56e7250] = 14;

		*node[0x5e29d56e72e0] = ;;

		*node[0x5e29d56e74f0] = =;

		*node[0x5e29d56e7310] = 12;

		*node[0x5e29d56e74c0] = -;

		*node[0x5e29d56e73a0] = -;

		*node[0x5e29d56e7340] = 0;

		*node[0x5e29d56e7370] = 2;

		*node[0x5e29d56e7490] = *;

		*node[0x5e29d56e7430] = /;

		*node[0x5e29d56e73d0] = 15;

		*node[0x5e29d56e7400] = 2;

		*node[0x5e29d56e7460] = 1;

		*node[0x5e29d56e7520] = ;;

		*node[0x5e29d56e7730] = =;

		*node[0x5e29d56e7550] = 13;

		*node[0x5e29d56e7700] = +;

		*node[0x5e29d56e75e0] = -;

		*node[0x5e29d56e7580] = 0;

		*node[0x5e29d56e75b0] = 2;

		*node[0x5e29d56e76d0] = *;

		*node[0x5e29d56e7670] = /;

		*node[0x5e29d56e7610] = 15;

		*node[0x5e29d56e7640] = 2;

		*node[0x5e29d56e76a0] = 1;

		*node[0x5e29d56e7760] = ;;

		*node[0x5e29d56e7790] = print;

		*node[0x5e29d56e77c0] = 11;

		*node[0x5e29d56e77f0] = ;;

		*node[0x5e29d56e7820] = print;

		*node[0x5e29d56e7850] = 12;

		*node[0x5e29d56e7880] = 13;

		*node[0x5e29d56e78b0] = elseif;

		*node[0x5e29d56e78e0] = op_no;

		*node[0x5e29d56e7970] = ==;

		*node[0x5e29d56e7910] = 14;

		*node[0x5e29d56e7940] = 0;

		*node[0x5e29d56e79a0] = ;;

		*node[0x5e29d56e7b50] = =;

		*node[0x5e29d56e79d0] = 10;

		*node[0x5e29d56e7b20] = -;

		*node[0x5e29d56e7a00] = 0;

		*node[0x5e29d56e7af0] = *;

		*node[0x5e29d56e7a90] = /;

		*node[0x5e29d56e7a30] = 2;

		*node[0x5e29d56e7a60] = 2;

		*node[0x5e29d56e7ac0] = 1;

		*node[0x5e29d56e7b80] = ;;

		*node[0x5e29d56e7bb0] = print;

		*node[0x5e29d56e7be0] = 8;

		*node[0x5e29d56e7c10] = ;;

		*node[0x5e29d56e7c40] = print;

		*node[0x5e29d56e7c70] = 10;

		*node[0x5e29d56e7ca0] = else;

		*node[0x5e29d56e7cd0] = op_no;

		*node[0x5e29d56e7d00] = ;;

		*node[0x5e29d56e7d30] = print;

		*node[0x5e29d56e7d60] = 7;

		*node[0x5e29d56e7d90] = ;;

		*node[0x5e29d56e7dc0] = return;

		*node[0x5e29d56e7df0] = 0;

		*node[0x5e29d56e7e20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcc6d8b310] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5d5fe5102110] = ;;

		*node[0x5d5fe5102190] = 0;

		*node[0x5d5fe51021c0] = ;;

		*node[0x5d5fe51021f0] = input;

		*node[0x5d5fe5102220] = 1;

		*node[0x5d5fe5102250] = 2;

		*node[0x5d5fe51022b0] = 3;

		*node[0x5d5fe51022e0] = ;;

		*node[0x5d5fe5102390] = 1;

		*node[0x5d5fe51023c0] = 2;

		*node[0x5d5fe51023f0] = 3;

		*node[0x5d5fe5102420] = ;;

		*node[0x5d5fe51024a0] = 4;

		*node[0x5d5fe51024d0] = 1;

		*node[0x5d5fe5102500] = 2;

		*node[0x5d5fe5102530] = 3;

		*node[0x5d5fe5102590] = ;;

		*node[0x5d5fe51025c0] = if;

		*node[0x5d5fe51025f0] = op_no;

		*node[0x5d5fe5102680] = ==;

		*node[0x5d5fe5102620] = 1;

		*node[0x5d5fe5102650] = 0;

		*node[0x5d5fe51026b0] = ;;

		*node[0x5d5fe5102710] = 2;

		*node[0x5d5fe5102740] = 3;

		*node[0x5d5fe5102770] = else;

		*node[0x5d5fe51027a0] = op_no;

		*node[0x5d5fe51027d0] = ;;

		*node[0x5d5fe5102880] = 1;

		*node[0x5d5fe51028b0] = 2;

		*node[0x5d5fe51028e0] = 3;

		*node[0x5d5fe5102910] = ;;

		*node[0x5d5fe5102990] = 5;

		*node[0x5d5fe51029c0] = 1;

		*node[0x5d5fe51029f0] = 2;

		*node[0x5d5fe5102a20] = ;;

		*node[0x5d5fe5102b40] = =;

		*node[0x5d5fe5102a50] = 7;

		*node[0x5d5fe5102b10] = -;

		*node[0x5d5fe5102ab0] = 0;

		*node[0x5d5fe5102ae0] = 1;

		*node[0x5d5fe5102b70] = ;;

		*node[0x5d5fe5102c00] = =;

		*node[0x5d5fe5102ba0] = 8;

		*node[0x5d5fe5102bd0] = 1;

		*node[0x5d5fe5102c30] = ;;

		*node[0x5d5fe5102d10] = =;

		*node[0x5d5fe5102c60] = 9;

		*node[0x5d5fe5102ce0] = 1000;

		*node[0x5d5fe5102d40] = ;;

		*node[0x5d5fe5102d70] = if;

		*node[0x5d5fe5102da0] = op_no;

		*node[0x5d5fe5102e30] = ==;

		*node[0x5d5fe5102dd0] = 1;

		*node[0x5d5fe5102e00] = 0;

		*node[0x5d5fe5102e60] = ;;

		*node[0x5d5fe5102e90] = if;

		*node[0x5d5fe5102ec0] = op_no;

		*node[0x5d5fe5102f50] = ==;

		*node[0x5d5fe5102ef0] = 2;

		*node[0x5d5fe5102f20] = 0;

		*node[0x5d5fe5102f80] = ;;

		*node[0x5d5fe5102fb0] = print;

		*node[0x5d5fe5102fe0] = 9;

		*node[0x5d5fe5103010] = else;

		*node[0x5d5fe5103040] = op_no;

		*node[0x5d5fe5103070] = ;;

		*node[0x5d5fe51030a0] = print;

		*node[0x5d5fe51030d0] = 7;

		*node[0x5d5fe5103100] = else;

		*node[0x5d5fe5103130] = op_no;

		*node[0x5d5fe5103160] = ;;

		*node[0x5d5fe51032b0] = =;

		*node[0x5d5fe5103190] = 10;

		*node[0x5d5fe5103280] = -;

		*node[0x5d5fe51031c0] = 0;

		*node[0x5d5fe5103250] = /;

		*node[0x5d5fe51031f0] = 2;

		*node[0x5d5fe5103220] = 1;

		*node[0x5d5fe51032e0] = ;;

		*node[0x5d5fe5103310] = print;

		*node[0x5d5fe5103340] = 8;

		*node[0x5d5fe5103370] = ;;

		*node[0x5d5fe51033a0] = print;

		*node[0x5d5fe51033d0] = 10;

		*node[0x5d5fe5103400] = ;;

		*node[0x5d5fe5103430] = return;

		*node[0x5d5fe5103460] = 0;

		*node[0x5d5fe5103490] = ;;

		*node[0x5d5fe5103510] = 6;

		*node[0x5d5fe5103540] = 1;

		*node[0x5d5fe5103570] = 2;

		*node[0x5d5fe51035a0] = 3;

		*node[0x5d5fe5103600] = ;;

		*node[0x5d5fe51036f0] = =;

		*node[0x5d5fe5103630] = 7;

		*node[0x5d5fe51036c0] = -;

		*node[0x5d5fe5103660] = 0;

		*node[0x5d5fe5103690] = 1;

		*node[0x5d5fe5103720] = ;;

		*node[0x5d5fe5103800] = =;

		*node[0x5d5fe5103750] = 8;

		*node[0x5d5fe51037d0] = 1;

		*node[0x5d5fe5103830] = ;;

		*node[0x5d5fe51038c0] = =;

		*node[0x5d5fe5103860] = 11;

		*node[0x5d5fe5103890] = 2;

		*node[0x5d5fe51038f0] = ;;

		*node[0x5d5fe5103920] = if;

		*node[0x5d5fe5103950] = op_no;

		*node[0x5d5fe51039e0] = ==;

		*node[0x5d5fe5103980] = 3;

		*node[0x5d5fe51039b0] = 0;

		*node[0x5d5fe5103a10] = ;;

		*node[0x5d5fe5103aa0] = =;

		*node[0x5d5fe5103a40] = 12;

		*node[0x5d5fe5103a70] = 0;

		*node[0x5d5fe5103ad0] = ;;

		*node[0x5d5fe5103c20] = =;

		*node[0x5d5fe5103b00] = 13;

		*node[0x5d5fe5103bf0] = -;

		*node[0x5d5fe5103b30] = 0;

		*node[0x5d5fe5103bc0] = /;

		*node[0x5d5fe5103b60] = 2;

		*node[0x5d5fe5103b90] = 1;

		*node[0x5d5fe5103c50] = ;;

		*node[0x5d5fe5103c80] = print;

		*node[0x5d5fe5103cb0] = 11;

		*node[0x5d5fe5103ce0] = ;;

		*node[0x5d5fe5103d10] = print;

		*node[0x5d5fe5103d40] = 12;

		*node[0x5d5fe5103d70] = 13;

		*node[0x5d5fe5103da0] = else;

		*node[0x5d5fe5103dd0] = op_no;

		*node[0x5d5fe5103e00] = ;;

		*node[0x5d5fe51040a0] = =;

		*node[0x5d5fe5103e30] = 14;

		*node[0x5d5fe5104070] = -;

		*node[0x5d5fe5103f50] = *;

		*node[0x5d5fe5103ef0] = 2;

		*node[0x5d5fe5103f20] = 2;

		*node[0x5d5fe5104040] = *;

		*node[0x5d5fe5103fe0] = *;

		*node[0x5d5fe5103f80] = 4;

		*node[0x5d5fe5103fb0] = 1;

		*node[0x5d5fe5104010] = 3;

		*node[0x5d5fe51040d0] = ;;

		*node[0x5d5fe5104100] = if;

		*node[0x5d5fe5104130] = op_no;

		*node[0x5d5fe51041c0] = >;

		*node[0x5d5fe5104160] = 14;

		*node[0x5d5fe5104190] = 0;

		*node[0x5d5fe51041f0] = ;;

		*node[0x5d5fe51042b0] = =;

		*node[0x5d5fe5104220] = 15;

		*node[0x5d5fe5104280] = sqrt;

		*node[0x5d5fe5104250] = 14;

		*node[0x5d5fe51042e0] = ;;

		*node[0x5d5fe51044f0] = =;

		*node[0x5d5fe5104310] = 12;

		*node[0x5d5fe51044c0] = -;

		*node[0x5d5fe51043a0] = -;

		*node[0x5d5fe5104340] = 0;

		*node[0x5d5fe5104370] = 2;

		*node[0x5d5fe5104490] = *;

		*node[0x5d5fe5104430] = /;

		*node[0x5d5fe51043d0] = 15;

		*node[0x5d5fe5104400] = 2;

		*node[0x5d5fe5104460] = 1;

		*node[0x5d5fe5104520] = ;;

		*node[0x5d5fe5104730] = =;

		*node[0x5d5fe5104550] = 13;

		*node[0x5d5fe5104700] = +;

		*node[0x5d5fe51045e0] = -;

		*node[0x5d5fe5104580] = 0;

		*node[0x5d5fe51045b0] = 2;

		*node[0x5d5fe51046d0] = *;

		*node[0x5d5fe5104670] = /;

		*node[0x5d5fe5104610] = 15;

		*node[0x5d5fe5104640] = 2;

		*node[0x5d5fe51046a0] = 1;

		*node[0x5d5fe5104760] = ;;

		*node[0x5d5fe5104790] = print;

		*node[0x5d5fe51047c0] = 11;

		*node[0x5d5fe51047f0] = ;;

		*node[0x5d5fe5104820] = print;

		*node[0x5d5fe5104850] = 12;

		*node[0x5d5fe5104880] = 13;

		*node[0x5d5fe51048b0] = elseif;

		*node[0x5d5fe51048e0] = op_no;

		*node[0x5d5fe5104970] = ==;

		*node[0x5d5fe5104910] = 14;

		*node[0x5d5fe5104940] = 0;

		*node[0x5d5fe51049a0] = ;;

		*node[0x5d5fe5104b50] = =;

		*node[0x5d5fe51049d0] = 10;

		*node[0x5d5fe5104b20] = -;

		*node[0x5d5fe5104a00] = 0;

		*node[0x5d5fe5104af0] = *;

		*node[0x5d5fe5104a90] = /;

		*node[0x5d5fe5104a30] = 2;

		*node[0x5d5fe5104a60] = 2;

		*node[0x5d5fe5104ac0] = 1;

		*node[0x5d5fe5104b80] = ;;

		*node[0x5d5fe5104bb0] = print;

		*node[0x5d5fe5104be0] = 8;

		*node[0x5d5fe5104c10] = ;;

		*node[0x5d5fe5104c40] = print;

		*node[0x5d5fe5104c70] = 10;

		*node[0x5d5fe5104ca0] = else;

		*node[0x5d5fe5104cd0] = op_no;

		*node[0x5d5fe5104d00] = ;;

		*node[0x5d5fe5104d30] = print;

		*node[0x5d5fe5104d60] = 7;

		*node[0x5d5fe5104d90] = ;;

		*node[0x5d5fe5104dc0] = return;

		*node[0x5d5fe5104df0] = 0;

		*node[0x5d5fe5104e20] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffc24d91600] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58d4cd5aa110] = ;;

		*node[0x58d4cd5aa190] = 0;

		*node[0x58d4cd5aa1c0] = ;;

		*node[0x58d4cd5aa1f0] = input;

		*node[0x58d4cd5aa220] = 1;

		*node[0x58d4cd5aa250] = 2;

		*node[0x58d4cd5aa280] = 3;

		*node[0x58d4cd5aa2e0] = ;;

		*node[0x58d4cd5aa340] = 1;

		*node[0x58d4cd5aa370] = 2;

		*node[0x58d4cd5aa3a0] = 3;

		*node[0x58d4cd5aa3d0] = ;;

		*node[0x58d4cd5aa450] = 4;

		*node[0x58d4cd5aa480] = 1;

		*node[0x58d4cd5aa4b0] = 2;

		*node[0x58d4cd5aa4e0] = 3;

		*node[0x58d4cd5aa540] = ;;

		*node[0x58d4cd5aa570] = if;

		*node[0x58d4cd5aa5a0] = op_no;

		*node[0x58d4cd5aa630] = ==;

		*node[0x58d4cd5aa5d0] = 1;

		*node[0x58d4cd5aa600] = 0;

		*node[0x58d4cd5aa660] = ;;

		*node[0x58d4cd5aa6c0] = 2;

		*node[0x58d4cd5aa6f0] = 3;

		*node[0x58d4cd5aa720] = else;

		*node[0x58d4cd5aa750] = op_no;

		*node[0x58d4cd5aa780] = ;;

		*node[0x58d4cd5aa830] = 1;

		*node[0x58d4cd5aa860] = 2;

		*node[0x58d4cd5aa890] = 3;

		*node[0x58d4cd5aa8c0] = ;;

		*node[0x58d4cd5aa940] = 5;

		*node[0x58d4cd5aa9a0] = 1;

		*node[0x58d4cd5aa9d0] = 2;

		*node[0x58d4cd5aaa00] = ;;

		*node[0x58d4cd5aab20] = =;

		*node[0x58d4cd5aaa30] = 7;

		*node[0x58d4cd5aaaf0] = -;

		*node[0x58d4cd5aaa90] = 0;

		*node[0x58d4cd5aaac0] = 1;

		*node[0x58d4cd5aab50] = ;;

		*node[0x58d4cd5aabe0] = =;

		*node[0x58d4cd5aab80] = 8;

		*node[0x58d4cd5aabb0] = 1;

		*node[0x58d4cd5aac10] = ;;

		*node[0x58d4cd5aacf0] = =;

		*node[0x58d4cd5aac40] = 9;

		*node[0x58d4cd5aacc0] = 1000;

		*node[0x58d4cd5aad20] = ;;

		*node[0x58d4cd5aad50] = if;

		*node[0x58d4cd5aad80] = op_no;

		*node[0x58d4cd5aae10] = ==;

		*node[0x58d4cd5aadb0] = 1;

		*node[0x58d4cd5aade0] = 0;

		*node[0x58d4cd5aae40] = ;;

		*node[0x58d4cd5aae70] = if;

		*node[0x58d4cd5aaea0] = op_no;

		*node[0x58d4cd5aaf30] = ==;

		*node[0x58d4cd5aaed0] = 2;

		*node[0x58d4cd5aaf00] = 0;

		*node[0x58d4cd5aaf60] = ;;

		*node[0x58d4cd5aaf90] = print;

		*node[0x58d4cd5aafc0] = 9;

		*node[0x58d4cd5aaff0] = else;

		*node[0x58d4cd5ab020] = op_no;

		*node[0x58d4cd5ab050] = ;;

		*node[0x58d4cd5ab080] = print;

		*node[0x58d4cd5ab0b0] = 7;

		*node[0x58d4cd5ab0e0] = else;

		*node[0x58d4cd5ab110] = op_no;

		*node[0x58d4cd5ab140] = ;;

		*node[0x58d4cd5ab290] = =;

		*node[0x58d4cd5ab170] = 10;

		*node[0x58d4cd5ab260] = -;

		*node[0x58d4cd5ab1a0] = 0;

		*node[0x58d4cd5ab230] = /;

		*node[0x58d4cd5ab1d0] = 2;

		*node[0x58d4cd5ab200] = 1;

		*node[0x58d4cd5ab2c0] = ;;

		*node[0x58d4cd5ab2f0] = print;

		*node[0x58d4cd5ab320] = 8;

		*node[0x58d4cd5ab350] = ;;

		*node[0x58d4cd5ab380] = print;

		*node[0x58d4cd5ab3b0] = 10;

		*node[0x58d4cd5ab3e0] = ;;

		*node[0x58d4cd5ab410] = return;

		*node[0x58d4cd5ab440] = 0;

		*node[0x58d4cd5ab470] = ;;

		*node[0x58d4cd5ab4f0] = 6;

		*node[0x58d4cd5ab520] = 1;

		*node[0x58d4cd5ab550] = 2;

		*node[0x58d4cd5ab580] = 3;

		*node[0x58d4cd5ab5e0] = ;;

		*node[0x58d4cd5ab6d0] = =;

		*node[0x58d4cd5ab610] = 7;

		*node[0x58d4cd5ab6a0] = -;

		*node[0x58d4cd5ab640] = 0;

		*node[0x58d4cd5ab670] = 1;

		*node[0x58d4cd5ab700] = ;;

		*node[0x58d4cd5ab7e0] = =;

		*node[0x58d4cd5ab730] = 8;

		*node[0x58d4cd5ab7b0] = 1;

		*node[0x58d4cd5ab810] = ;;

		*node[0x58d4cd5ab8a0] = =;

		*node[0x58d4cd5ab840] = 11;

		*node[0x58d4cd5ab870] = 2;

		*node[0x58d4cd5ab8d0] = ;;

		*node[0x58d4cd5ab900] = if;

		*node[0x58d4cd5ab930] = op_no;

		*node[0x58d4cd5ab9c0] = ==;

		*node[0x58d4cd5ab960] = 3;

		*node[0x58d4cd5ab990] = 0;

		*node[0x58d4cd5ab9f0] = ;;

		*node[0x58d4cd5aba80] = =;

		*node[0x58d4cd5aba20] = 12;

		*node[0x58d4cd5aba50] = 0;

		*node[0x58d4cd5abab0] = ;;

		*node[0x58d4cd5abc00] = =;

		*node[0x58d4cd5abae0] = 13;

		*node[0x58d4cd5abbd0] = -;

		*node[0x58d4cd5abb10] = 0;

		*node[0x58d4cd5abba0] = /;

		*node[0x58d4cd5abb40] = 2;

		*node[0x58d4cd5abb70] = 1;

		*node[0x58d4cd5abc30] = ;;

		*node[0x58d4cd5abc60] = print;

		*node[0x58d4cd5abc90] = 11;

		*node[0x58d4cd5abcc0] = ;;

		*node[0x58d4cd5abcf0] = print;

		*node[0x58d4cd5abd20] = 12;

		*node[0x58d4cd5abd50] = 13;

		*node[0x58d4cd5abd80] = else;

		*node[0x58d4cd5abdb0] = op_no;

		*node[0x58d4cd5abde0] = ;;

		*node[0x58d4cd5ac080] = =;

		*node[0x58d4cd5abe10] = 14;

		*node[0x58d4cd5ac050] = -;

		*node[0x58d4cd5abf30] = *;

		*node[0x58d4cd5abed0] = 2;

		*node[0x58d4cd5abf00] = 2;

		*node[0x58d4cd5ac020] = *;

		*node[0x58d4cd5abfc0] = *;

		*node[0x58d4cd5abf60] = 4;

		*node[0x58d4cd5abf90] = 1;

		*node[0x58d4cd5abff0] = 3;

		*node[0x58d4cd5ac0b0] = ;;

		*node[0x58d4cd5ac0e0] = if;

		*node[0x58d4cd5ac110] = op_no;

		*node[0x58d4cd5ac1a0] = >;

		*node[0x58d4cd5ac140] = 14;

		*node[0x58d4cd5ac170] = 0;

		*node[0x58d4cd5ac1d0] = ;;

		*node[0x58d4cd5ac290] = =;

		*node[0x58d4cd5ac200] = 15;

		*node[0x58d4cd5ac260] = sqrt;

		*node[0x58d4cd5ac230] = 14;

		*node[0x58d4cd5ac2c0] = ;;

		*node[0x58d4cd5ac4d0] = =;

		*node[0x58d4cd5ac2f0] = 12;

		*node[0x58d4cd5ac4a0] = -;

		*node[0x58d4cd5ac380] = -;

		*node[0x58d4cd5ac320] = 0;

		*node[0x58d4cd5ac350] = 2;

		*node[0x58d4cd5ac470] = *;

		*node[0x58d4cd5ac410] = /;

		*node[0x58d4cd5ac3b0] = 15;

		*node[0x58d4cd5ac3e0] = 2;

		*node[0x58d4cd5ac440] = 1;

		*node[0x58d4cd5ac500] = ;;

		*node[0x58d4cd5ac710] = =;

		*node[0x58d4cd5ac530] = 13;

		*node[0x58d4cd5ac6e0] = +;

		*node[0x58d4cd5ac5c0] = -;

		*node[0x58d4cd5ac560] = 0;

		*node[0x58d4cd5ac590] = 2;

		*node[0x58d4cd5ac6b0] = *;

		*node[0x58d4cd5ac650] = /;

		*node[0x58d4cd5ac5f0] = 15;

		*node[0x58d4cd5ac620] = 2;

		*node[0x58d4cd5ac680] = 1;

		*node[0x58d4cd5ac740] = ;;

		*node[0x58d4cd5ac770] = print;

		*node[0x58d4cd5ac7a0] = 11;

		*node[0x58d4cd5ac7d0] = ;;

		*node[0x58d4cd5ac800] = print;

		*node[0x58d4cd5ac830] = 12;

		*node[0x58d4cd5ac860] = 13;

		*node[0x58d4cd5ac890] = elseif;

		*node[0x58d4cd5ac8c0] = op_no;

		*node[0x58d4cd5ac950] = ==;

		*node[0x58d4cd5ac8f0] = 14;

		*node[0x58d4cd5ac920] = 0;

		*node[0x58d4cd5ac980] = ;;

		*node[0x58d4cd5acb30] = =;

		*node[0x58d4cd5ac9b0] = 10;

		*node[0x58d4cd5acb00] = -;

		*node[0x58d4cd5ac9e0] = 0;

		*node[0x58d4cd5acad0] = *;

		*node[0x58d4cd5aca70] = /;

		*node[0x58d4cd5aca10] = 2;

		*node[0x58d4cd5aca40] = 2;

		*node[0x58d4cd5acaa0] = 1;

		*node[0x58d4cd5acb60] = ;;

		*node[0x58d4cd5acb90] = print;

		*node[0x58d4cd5acbc0] = 8;

		*node[0x58d4cd5acbf0] = ;;

		*node[0x58d4cd5acc20] = print;

		*node[0x58d4cd5acc50] = 10;

		*node[0x58d4cd5acc80] = else;

		*node[0x58d4cd5accb0] = op_no;

		*node[0x58d4cd5acce0] = ;;

		*node[0x58d4cd5acd10] = print;

		*node[0x58d4cd5acd40] = 7;

		*node[0x58d4cd5acd70] = ;;

		*node[0x58d4cd5acda0] = return;

		*node[0x58d4cd5acdd0] = 0;

		*node[0x58d4cd5ace00] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff60a3bcd0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x64cdbaaf8110] = ;;

		*node[0x64cdbaaf8190] = 0;

		*node[0x64cdbaaf81c0] = ;;

		*node[0x64cdbaaf81f0] = input;

		*node[0x64cdbaaf8220] = 1;

		*node[0x64cdbaaf8250] = 2;

		*node[0x64cdbaaf8280] = 3;

		*node[0x64cdbaaf82e0] = ;;

		*node[0x64cdbaaf8340] = 1;

		*node[0x64cdbaaf8370] = 2;

		*node[0x64cdbaaf83a0] = 3;

		*node[0x64cdbaaf83d0] = ;;

		*node[0x64cdbaaf8450] = 4;

		*node[0x64cdbaaf8480] = 1;

		*node[0x64cdbaaf84b0] = 2;

		*node[0x64cdbaaf84e0] = 3;

		*node[0x64cdbaaf8540] = ;;

		*node[0x64cdbaaf8570] = if;

		*node[0x64cdbaaf85a0] = op_no;

		*node[0x64cdbaaf8630] = ==;

		*node[0x64cdbaaf85d0] = 1;

		*node[0x64cdbaaf8600] = 0;

		*node[0x64cdbaaf8660] = ;;

		*node[0x64cdbaaf86c0] = 2;

		*node[0x64cdbaaf86f0] = 3;

		*node[0x64cdbaaf8720] = else;

		*node[0x64cdbaaf8750] = op_no;

		*node[0x64cdbaaf8780] = ;;

		*node[0x64cdbaaf8830] = 1;

		*node[0x64cdbaaf8860] = 2;

		*node[0x64cdbaaf8890] = 3;

		*node[0x64cdbaaf88c0] = ;;

		*node[0x64cdbaaf8940] = 5;

		*node[0x64cdbaaf89a0] = 1;

		*node[0x64cdbaaf89d0] = 2;

		*node[0x64cdbaaf8a00] = ;;

		*node[0x64cdbaaf8b20] = =;

		*node[0x64cdbaaf8a30] = 7;

		*node[0x64cdbaaf8af0] = -;

		*node[0x64cdbaaf8a90] = 0;

		*node[0x64cdbaaf8ac0] = 1;

		*node[0x64cdbaaf8b50] = ;;

		*node[0x64cdbaaf8be0] = =;

		*node[0x64cdbaaf8b80] = 8;

		*node[0x64cdbaaf8bb0] = 1;

		*node[0x64cdbaaf8c10] = ;;

		*node[0x64cdbaaf8cf0] = =;

		*node[0x64cdbaaf8c40] = 9;

		*node[0x64cdbaaf8cc0] = 1000;

		*node[0x64cdbaaf8d20] = ;;

		*node[0x64cdbaaf8d50] = if;

		*node[0x64cdbaaf8d80] = op_no;

		*node[0x64cdbaaf8e10] = ==;

		*node[0x64cdbaaf8db0] = 1;

		*node[0x64cdbaaf8de0] = 0;

		*node[0x64cdbaaf8e40] = ;;

		*node[0x64cdbaaf8e70] = if;

		*node[0x64cdbaaf8ea0] = op_no;

		*node[0x64cdbaaf8f30] = ==;

		*node[0x64cdbaaf8ed0] = 2;

		*node[0x64cdbaaf8f00] = 0;

		*node[0x64cdbaaf8f60] = ;;

		*node[0x64cdbaaf8f90] = print;

		*node[0x64cdbaaf8fc0] = 9;

		*node[0x64cdbaaf8ff0] = else;

		*node[0x64cdbaaf9020] = op_no;

		*node[0x64cdbaaf9050] = ;;

		*node[0x64cdbaaf9080] = print;

		*node[0x64cdbaaf90b0] = 7;

		*node[0x64cdbaaf90e0] = else;

		*node[0x64cdbaaf9110] = op_no;

		*node[0x64cdbaaf9140] = ;;

		*node[0x64cdbaaf9290] = =;

		*node[0x64cdbaaf9170] = 10;

		*node[0x64cdbaaf9260] = -;

		*node[0x64cdbaaf91a0] = 0;

		*node[0x64cdbaaf9230] = /;

		*node[0x64cdbaaf91d0] = 2;

		*node[0x64cdbaaf9200] = 1;

		*node[0x64cdbaaf92c0] = ;;

		*node[0x64cdbaaf92f0] = print;

		*node[0x64cdbaaf9320] = 8;

		*node[0x64cdbaaf9350] = ;;

		*node[0x64cdbaaf9380] = print;

		*node[0x64cdbaaf93b0] = 10;

		*node[0x64cdbaaf93e0] = ;;

		*node[0x64cdbaaf9410] = return;

		*node[0x64cdbaaf9440] = 0;

		*node[0x64cdbaaf9470] = ;;

		*node[0x64cdbaaf94f0] = 6;

		*node[0x64cdbaaf9520] = 1;

		*node[0x64cdbaaf9550] = 2;

		*node[0x64cdbaaf9580] = 3;

		*node[0x64cdbaaf95e0] = ;;

		*node[0x64cdbaaf96d0] = =;

		*node[0x64cdbaaf9610] = 7;

		*node[0x64cdbaaf96a0] = -;

		*node[0x64cdbaaf9640] = 0;

		*node[0x64cdbaaf9670] = 1;

		*node[0x64cdbaaf9700] = ;;

		*node[0x64cdbaaf97e0] = =;

		*node[0x64cdbaaf9730] = 8;

		*node[0x64cdbaaf97b0] = 1;

		*node[0x64cdbaaf9810] = ;;

		*node[0x64cdbaaf98a0] = =;

		*node[0x64cdbaaf9840] = 11;

		*node[0x64cdbaaf9870] = 2;

		*node[0x64cdbaaf98d0] = ;;

		*node[0x64cdbaaf9900] = if;

		*node[0x64cdbaaf9930] = op_no;

		*node[0x64cdbaaf99c0] = ==;

		*node[0x64cdbaaf9960] = 3;

		*node[0x64cdbaaf9990] = 0;

		*node[0x64cdbaaf99f0] = ;;

		*node[0x64cdbaaf9a80] = =;

		*node[0x64cdbaaf9a20] = 12;

		*node[0x64cdbaaf9a50] = 0;

		*node[0x64cdbaaf9ab0] = ;;

		*node[0x64cdbaaf9c00] = =;

		*node[0x64cdbaaf9ae0] = 13;

		*node[0x64cdbaaf9bd0] = -;

		*node[0x64cdbaaf9b10] = 0;

		*node[0x64cdbaaf9ba0] = /;

		*node[0x64cdbaaf9b40] = 2;

		*node[0x64cdbaaf9b70] = 1;

		*node[0x64cdbaaf9c30] = ;;

		*node[0x64cdbaaf9c60] = print;

		*node[0x64cdbaaf9c90] = 11;

		*node[0x64cdbaaf9cc0] = ;;

		*node[0x64cdbaaf9cf0] = print;

		*node[0x64cdbaaf9d20] = 12;

		*node[0x64cdbaaf9d50] = 13;

		*node[0x64cdbaaf9d80] = else;

		*node[0x64cdbaaf9db0] = op_no;

		*node[0x64cdbaaf9de0] = ;;

		*node[0x64cdbaafa080] = =;

		*node[0x64cdbaaf9e10] = 14;

		*node[0x64cdbaafa050] = -;

		*node[0x64cdbaaf9f30] = *;

		*node[0x64cdbaaf9ed0] = 2;

		*node[0x64cdbaaf9f00] = 2;

		*node[0x64cdbaafa020] = *;

		*node[0x64cdbaaf9fc0] = *;

		*node[0x64cdbaaf9f60] = 4;

		*node[0x64cdbaaf9f90] = 1;

		*node[0x64cdbaaf9ff0] = 3;

		*node[0x64cdbaafa0b0] = ;;

		*node[0x64cdbaafa0e0] = if;

		*node[0x64cdbaafa110] = op_no;

		*node[0x64cdbaafa1a0] = >;

		*node[0x64cdbaafa140] = 14;

		*node[0x64cdbaafa170] = 0;

		*node[0x64cdbaafa1d0] = ;;

		*node[0x64cdbaafa290] = =;

		*node[0x64cdbaafa200] = 15;

		*node[0x64cdbaafa260] = sqrt;

		*node[0x64cdbaafa230] = 14;

		*node[0x64cdbaafa2c0] = ;;

		*node[0x64cdbaafa4d0] = =;

		*node[0x64cdbaafa2f0] = 12;

		*node[0x64cdbaafa4a0] = -;

		*node[0x64cdbaafa380] = -;

		*node[0x64cdbaafa320] = 0;

		*node[0x64cdbaafa350] = 2;

		*node[0x64cdbaafa470] = *;

		*node[0x64cdbaafa410] = /;

		*node[0x64cdbaafa3b0] = 15;

		*node[0x64cdbaafa3e0] = 2;

		*node[0x64cdbaafa440] = 1;

		*node[0x64cdbaafa500] = ;;

		*node[0x64cdbaafa710] = =;

		*node[0x64cdbaafa530] = 13;

		*node[0x64cdbaafa6e0] = +;

		*node[0x64cdbaafa5c0] = -;

		*node[0x64cdbaafa560] = 0;

		*node[0x64cdbaafa590] = 2;

		*node[0x64cdbaafa6b0] = *;

		*node[0x64cdbaafa650] = /;

		*node[0x64cdbaafa5f0] = 15;

		*node[0x64cdbaafa620] = 2;

		*node[0x64cdbaafa680] = 1;

		*node[0x64cdbaafa740] = ;;

		*node[0x64cdbaafa770] = print;

		*node[0x64cdbaafa7a0] = 11;

		*node[0x64cdbaafa7d0] = ;;

		*node[0x64cdbaafa800] = print;

		*node[0x64cdbaafa830] = 12;

		*node[0x64cdbaafa860] = 13;

		*node[0x64cdbaafa890] = elseif;

		*node[0x64cdbaafa8c0] = op_no;

		*node[0x64cdbaafa950] = ==;

		*node[0x64cdbaafa8f0] = 14;

		*node[0x64cdbaafa920] = 0;

		*node[0x64cdbaafa980] = ;;

		*node[0x64cdbaafab30] = =;

		*node[0x64cdbaafa9b0] = 10;

		*node[0x64cdbaafab00] = -;

		*node[0x64cdbaafa9e0] = 0;

		*node[0x64cdbaafaad0] = *;

		*node[0x64cdbaafaa70] = /;

		*node[0x64cdbaafaa10] = 2;

		*node[0x64cdbaafaa40] = 2;

		*node[0x64cdbaafaaa0] = 1;

		*node[0x64cdbaafab60] = ;;

		*node[0x64cdbaafab90] = print;

		*node[0x64cdbaafabc0] = 8;

		*node[0x64cdbaafabf0] = ;;

		*node[0x64cdbaafac20] = print;

		*node[0x64cdbaafac50] = 10;

		*node[0x64cdbaafac80] = else;

		*node[0x64cdbaafacb0] = op_no;

		*node[0x64cdbaaface0] = ;;

		*node[0x64cdbaafad10] = print;

		*node[0x64cdbaafad40] = 7;

		*node[0x64cdbaafad70] = ;;

		*node[0x64cdbaafada0] = return;

		*node[0x64cdbaafadd0] = 0;

		*node[0x64cdbaafae00] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe58e672a0] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5925d16d7110] = ;;

		*node[0x5925d16d7190] = 0;

		*node[0x5925d16d71c0] = ;;

		*node[0x5925d16d71f0] = input;

		*node[0x5925d16d7220] = 1;

		*node[0x5925d16d7250] = 2;

		*node[0x5925d16d7280] = 3;

		*node[0x5925d16d72e0] = ;;

		*node[0x5925d16d7340] = 1;

		*node[0x5925d16d7370] = 2;

		*node[0x5925d16d73a0] = 3;

		*node[0x5925d16d73d0] = ;;

		*node[0x5925d16d7450] = 4;

		*node[0x5925d16d7480] = 1;

		*node[0x5925d16d74b0] = 2;

		*node[0x5925d16d74e0] = 3;

		*node[0x5925d16d7540] = ;;

		*node[0x5925d16d7570] = if;

		*node[0x5925d16d75a0] = op_no;

		*node[0x5925d16d7630] = ==;

		*node[0x5925d16d75d0] = 1;

		*node[0x5925d16d7600] = 0;

		*node[0x5925d16d7660] = ;;

		*node[0x5925d16d76c0] = 2;

		*node[0x5925d16d76f0] = 3;

		*node[0x5925d16d7720] = else;

		*node[0x5925d16d7750] = op_no;

		*node[0x5925d16d7780] = ;;

		*node[0x5925d16d7830] = 1;

		*node[0x5925d16d7860] = 2;

		*node[0x5925d16d7890] = 3;

		*node[0x5925d16d78c0] = ;;

		*node[0x5925d16d7940] = 5;

		*node[0x5925d16d79a0] = 1;

		*node[0x5925d16d79d0] = 2;

		*node[0x5925d16d7a00] = ;;

		*node[0x5925d16d7b20] = =;

		*node[0x5925d16d7a30] = 7;

		*node[0x5925d16d7af0] = -;

		*node[0x5925d16d7a90] = 0;

		*node[0x5925d16d7ac0] = 1;

		*node[0x5925d16d7b50] = ;;

		*node[0x5925d16d7be0] = =;

		*node[0x5925d16d7b80] = 8;

		*node[0x5925d16d7bb0] = 1;

		*node[0x5925d16d7c10] = ;;

		*node[0x5925d16d7cf0] = =;

		*node[0x5925d16d7c40] = 9;

		*node[0x5925d16d7cc0] = 1000;

		*node[0x5925d16d7d20] = ;;

		*node[0x5925d16d7d50] = if;

		*node[0x5925d16d7d80] = op_no;

		*node[0x5925d16d7e10] = ==;

		*node[0x5925d16d7db0] = 1;

		*node[0x5925d16d7de0] = 0;

		*node[0x5925d16d7e40] = ;;

		*node[0x5925d16d7e70] = if;

		*node[0x5925d16d7ea0] = op_no;

		*node[0x5925d16d7f30] = ==;

		*node[0x5925d16d7ed0] = 2;

		*node[0x5925d16d7f00] = 0;

		*node[0x5925d16d7f60] = ;;

		*node[0x5925d16d7f90] = print;

		*node[0x5925d16d7fc0] = 9;

		*node[0x5925d16d7ff0] = else;

		*node[0x5925d16d8020] = op_no;

		*node[0x5925d16d8050] = ;;

		*node[0x5925d16d8080] = print;

		*node[0x5925d16d80b0] = 7;

		*node[0x5925d16d80e0] = else;

		*node[0x5925d16d8110] = op_no;

		*node[0x5925d16d8140] = ;;

		*node[0x5925d16d8290] = =;

		*node[0x5925d16d8170] = 10;

		*node[0x5925d16d8260] = -;

		*node[0x5925d16d81a0] = 0;

		*node[0x5925d16d8230] = /;

		*node[0x5925d16d81d0] = 2;

		*node[0x5925d16d8200] = 1;

		*node[0x5925d16d82c0] = ;;

		*node[0x5925d16d82f0] = print;

		*node[0x5925d16d8320] = 8;

		*node[0x5925d16d8350] = ;;

		*node[0x5925d16d8380] = print;

		*node[0x5925d16d83b0] = 10;

		*node[0x5925d16d83e0] = ;;

		*node[0x5925d16d8410] = return;

		*node[0x5925d16d8440] = 0;

		*node[0x5925d16d8470] = ;;

		*node[0x5925d16d84f0] = 6;

		*node[0x5925d16d8520] = 1;

		*node[0x5925d16d8550] = 2;

		*node[0x5925d16d8580] = 3;

		*node[0x5925d16d85e0] = ;;

		*node[0x5925d16d86d0] = =;

		*node[0x5925d16d8610] = 7;

		*node[0x5925d16d86a0] = -;

		*node[0x5925d16d8640] = 0;

		*node[0x5925d16d8670] = 1;

		*node[0x5925d16d8700] = ;;

		*node[0x5925d16d87e0] = =;

		*node[0x5925d16d8730] = 8;

		*node[0x5925d16d87b0] = 1;

		*node[0x5925d16d8810] = ;;

		*node[0x5925d16d88a0] = =;

		*node[0x5925d16d8840] = 11;

		*node[0x5925d16d8870] = 2;

		*node[0x5925d16d88d0] = ;;

		*node[0x5925d16d8900] = if;

		*node[0x5925d16d8930] = op_no;

		*node[0x5925d16d89c0] = ==;

		*node[0x5925d16d8960] = 3;

		*node[0x5925d16d8990] = 0;

		*node[0x5925d16d89f0] = ;;

		*node[0x5925d16d8a80] = =;

		*node[0x5925d16d8a20] = 12;

		*node[0x5925d16d8a50] = 0;

		*node[0x5925d16d8ab0] = ;;

		*node[0x5925d16d8c00] = =;

		*node[0x5925d16d8ae0] = 13;

		*node[0x5925d16d8bd0] = -;

		*node[0x5925d16d8b10] = 0;

		*node[0x5925d16d8ba0] = /;

		*node[0x5925d16d8b40] = 2;

		*node[0x5925d16d8b70] = 1;

		*node[0x5925d16d8c30] = ;;

		*node[0x5925d16d8c60] = print;

		*node[0x5925d16d8c90] = 11;

		*node[0x5925d16d8cc0] = ;;

		*node[0x5925d16d8cf0] = print;

		*node[0x5925d16d8d20] = 12;

		*node[0x5925d16d8d50] = 13;

		*node[0x5925d16d8d80] = else;

		*node[0x5925d16d8db0] = op_no;

		*node[0x5925d16d8de0] = ;;

		*node[0x5925d16d9080] = =;

		*node[0x5925d16d8e10] = 14;

		*node[0x5925d16d9050] = -;

		*node[0x5925d16d8f30] = *;

		*node[0x5925d16d8ed0] = 2;

		*node[0x5925d16d8f00] = 2;

		*node[0x5925d16d9020] = *;

		*node[0x5925d16d8fc0] = *;

		*node[0x5925d16d8f60] = 4;

		*node[0x5925d16d8f90] = 1;

		*node[0x5925d16d8ff0] = 3;

		*node[0x5925d16d90b0] = ;;

		*node[0x5925d16d90e0] = if;

		*node[0x5925d16d9110] = op_no;

		*node[0x5925d16d91a0] = >;

		*node[0x5925d16d9140] = 14;

		*node[0x5925d16d9170] = 0;

		*node[0x5925d16d91d0] = ;;

		*node[0x5925d16d9290] = =;

		*node[0x5925d16d9200] = 15;

		*node[0x5925d16d9260] = sqrt;

		*node[0x5925d16d9230] = 14;

		*node[0x5925d16d92c0] = ;;

		*node[0x5925d16d94d0] = =;

		*node[0x5925d16d92f0] = 12;

		*node[0x5925d16d94a0] = -;

		*node[0x5925d16d9380] = -;

		*node[0x5925d16d9320] = 0;

		*node[0x5925d16d9350] = 2;

		*node[0x5925d16d9470] = *;

		*node[0x5925d16d9410] = /;

		*node[0x5925d16d93b0] = 15;

		*node[0x5925d16d93e0] = 2;

		*node[0x5925d16d9440] = 1;

		*node[0x5925d16d9500] = ;;

		*node[0x5925d16d9710] = =;

		*node[0x5925d16d9530] = 13;

		*node[0x5925d16d96e0] = +;

		*node[0x5925d16d95c0] = -;

		*node[0x5925d16d9560] = 0;

		*node[0x5925d16d9590] = 2;

		*node[0x5925d16d96b0] = *;

		*node[0x5925d16d9650] = /;

		*node[0x5925d16d95f0] = 15;

		*node[0x5925d16d9620] = 2;

		*node[0x5925d16d9680] = 1;

		*node[0x5925d16d9740] = ;;

		*node[0x5925d16d9770] = print;

		*node[0x5925d16d97a0] = 11;

		*node[0x5925d16d97d0] = ;;

		*node[0x5925d16d9800] = print;

		*node[0x5925d16d9830] = 12;

		*node[0x5925d16d9860] = 13;

		*node[0x5925d16d9890] = elseif;

		*node[0x5925d16d98c0] = op_no;

		*node[0x5925d16d9950] = ==;

		*node[0x5925d16d98f0] = 14;

		*node[0x5925d16d9920] = 0;

		*node[0x5925d16d9980] = ;;

		*node[0x5925d16d9b30] = =;

		*node[0x5925d16d99b0] = 10;

		*node[0x5925d16d9b00] = -;

		*node[0x5925d16d99e0] = 0;

		*node[0x5925d16d9ad0] = *;

		*node[0x5925d16d9a70] = /;

		*node[0x5925d16d9a10] = 2;

		*node[0x5925d16d9a40] = 2;

		*node[0x5925d16d9aa0] = 1;

		*node[0x5925d16d9b60] = ;;

		*node[0x5925d16d9b90] = print;

		*node[0x5925d16d9bc0] = 8;

		*node[0x5925d16d9bf0] = ;;

		*node[0x5925d16d9c20] = print;

		*node[0x5925d16d9c50] = 10;

		*node[0x5925d16d9c80] = else;

		*node[0x5925d16d9cb0] = op_no;

		*node[0x5925d16d9ce0] = ;;

		*node[0x5925d16d9d10] = print;

		*node[0x5925d16d9d40] = 7;

		*node[0x5925d16d9d70] = ;;

		*node[0x5925d16d9da0] = return;

		*node[0x5925d16d9dd0] = 0;

		*node[0x5925d16d9e00] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe28c97c00] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5f68a02d60f0] = ;;

		*node[0x5f68a02d6170] = 0;

		*node[0x5f68a02d61a0] = ;;

		*node[0x5f68a02d61d0] = input;

		*node[0x5f68a02d6200] = 1;

		*node[0x5f68a02d6230] = 2;

		*node[0x5f68a02d6260] = 3;

		*node[0x5f68a02d62c0] = ;;

		*node[0x5f68a02d6320] = 1;

		*node[0x5f68a02d6350] = 2;

		*node[0x5f68a02d6380] = 3;

		*node[0x5f68a02d63b0] = ;;

		*node[0x5f68a02d6430] = 4;

		*node[0x5f68a02d6460] = 1;

		*node[0x5f68a02d6490] = 2;

		*node[0x5f68a02d64c0] = 3;

		*node[0x5f68a02d6520] = ;;

		*node[0x5f68a02d6550] = if;

		*node[0x5f68a02d6580] = op_no;

		*node[0x5f68a02d6610] = ==;

		*node[0x5f68a02d65b0] = 1;

		*node[0x5f68a02d65e0] = 0;

		*node[0x5f68a02d6640] = ;;

		*node[0x5f68a02d66a0] = 2;

		*node[0x5f68a02d66d0] = 3;

		*node[0x5f68a02d6700] = else;

		*node[0x5f68a02d6730] = op_no;

		*node[0x5f68a02d6760] = ;;

		*node[0x5f68a02d6810] = 1;

		*node[0x5f68a02d6840] = 2;

		*node[0x5f68a02d6870] = 3;

		*node[0x5f68a02d68a0] = ;;

		*node[0x5f68a02d6920] = 5;

		*node[0x5f68a02d6980] = 1;

		*node[0x5f68a02d69b0] = 2;

		*node[0x5f68a02d69e0] = ;;

		*node[0x5f68a02d6b00] = =;

		*node[0x5f68a02d6a10] = 7;

		*node[0x5f68a02d6ad0] = -;

		*node[0x5f68a02d6a70] = 0;

		*node[0x5f68a02d6aa0] = 1;

		*node[0x5f68a02d6b30] = ;;

		*node[0x5f68a02d6bc0] = =;

		*node[0x5f68a02d6b60] = 8;

		*node[0x5f68a02d6b90] = 1;

		*node[0x5f68a02d6bf0] = ;;

		*node[0x5f68a02d6cd0] = =;

		*node[0x5f68a02d6c20] = 9;

		*node[0x5f68a02d6ca0] = 1000;

		*node[0x5f68a02d6d00] = ;;

		*node[0x5f68a02d6d30] = if;

		*node[0x5f68a02d6d60] = op_no;

		*node[0x5f68a02d6df0] = ==;

		*node[0x5f68a02d6d90] = 1;

		*node[0x5f68a02d6dc0] = 0;

		*node[0x5f68a02d6e20] = ;;

		*node[0x5f68a02d6e50] = if;

		*node[0x5f68a02d6e80] = op_no;

		*node[0x5f68a02d6f10] = ==;

		*node[0x5f68a02d6eb0] = 2;

		*node[0x5f68a02d6ee0] = 0;

		*node[0x5f68a02d6f40] = ;;

		*node[0x5f68a02d6f70] = print;

		*node[0x5f68a02d6fa0] = 9;

		*node[0x5f68a02d6fd0] = else;

		*node[0x5f68a02d7000] = op_no;

		*node[0x5f68a02d7030] = ;;

		*node[0x5f68a02d7060] = print;

		*node[0x5f68a02d7090] = 7;

		*node[0x5f68a02d70c0] = else;

		*node[0x5f68a02d70f0] = op_no;

		*node[0x5f68a02d7120] = ;;

		*node[0x5f68a02d7270] = =;

		*node[0x5f68a02d7150] = 10;

		*node[0x5f68a02d7240] = -;

		*node[0x5f68a02d7180] = 0;

		*node[0x5f68a02d7210] = /;

		*node[0x5f68a02d71b0] = 2;

		*node[0x5f68a02d71e0] = 1;

		*node[0x5f68a02d72a0] = ;;

		*node[0x5f68a02d72d0] = print;

		*node[0x5f68a02d7300] = 8;

		*node[0x5f68a02d7330] = ;;

		*node[0x5f68a02d7360] = print;

		*node[0x5f68a02d7390] = 10;

		*node[0x5f68a02d73c0] = ;;

		*node[0x5f68a02d73f0] = return;

		*node[0x5f68a02d7420] = 0;

		*node[0x5f68a02d7450] = ;;

		*node[0x5f68a02d74d0] = 6;

		*node[0x5f68a02d7500] = 1;

		*node[0x5f68a02d7530] = 2;

		*node[0x5f68a02d7560] = 3;

		*node[0x5f68a02d75c0] = ;;

		*node[0x5f68a02d76b0] = =;

		*node[0x5f68a02d75f0] = 7;

		*node[0x5f68a02d7680] = -;

		*node[0x5f68a02d7620] = 0;

		*node[0x5f68a02d7650] = 1;

		*node[0x5f68a02d76e0] = ;;

		*node[0x5f68a02d77c0] = =;

		*node[0x5f68a02d7710] = 8;

		*node[0x5f68a02d7790] = 1;

		*node[0x5f68a02d77f0] = ;;

		*node[0x5f68a02d7880] = =;

		*node[0x5f68a02d7820] = 11;

		*node[0x5f68a02d7850] = 2;

		*node[0x5f68a02d78b0] = ;;

		*node[0x5f68a02d78e0] = if;

		*node[0x5f68a02d7910] = op_no;

		*node[0x5f68a02d79a0] = ==;

		*node[0x5f68a02d7940] = 3;

		*node[0x5f68a02d7970] = 0;

		*node[0x5f68a02d79d0] = ;;

		*node[0x5f68a02d7a60] = =;

		*node[0x5f68a02d7a00] = 12;

		*node[0x5f68a02d7a30] = 0;

		*node[0x5f68a02d7a90] = ;;

		*node[0x5f68a02d7be0] = =;

		*node[0x5f68a02d7ac0] = 13;

		*node[0x5f68a02d7bb0] = -;

		*node[0x5f68a02d7af0] = 0;

		*node[0x5f68a02d7b80] = /;

		*node[0x5f68a02d7b20] = 2;

		*node[0x5f68a02d7b50] = 1;

		*node[0x5f68a02d7c10] = ;;

		*node[0x5f68a02d7c40] = print;

		*node[0x5f68a02d7c70] = 11;

		*node[0x5f68a02d7ca0] = ;;

		*node[0x5f68a02d7cd0] = print;

		*node[0x5f68a02d7d00] = 12;

		*node[0x5f68a02d7d30] = 13;

		*node[0x5f68a02d7d60] = else;

		*node[0x5f68a02d7d90] = op_no;

		*node[0x5f68a02d7dc0] = ;;

		*node[0x5f68a02d8060] = =;

		*node[0x5f68a02d7df0] = 14;

		*node[0x5f68a02d8030] = -;

		*node[0x5f68a02d7f10] = *;

		*node[0x5f68a02d7eb0] = 2;

		*node[0x5f68a02d7ee0] = 2;

		*node[0x5f68a02d8000] = *;

		*node[0x5f68a02d7fa0] = *;

		*node[0x5f68a02d7f40] = 4;

		*node[0x5f68a02d7f70] = 1;

		*node[0x5f68a02d7fd0] = 3;

		*node[0x5f68a02d8090] = ;;

		*node[0x5f68a02d80c0] = if;

		*node[0x5f68a02d80f0] = op_no;

		*node[0x5f68a02d8180] = >;

		*node[0x5f68a02d8120] = 14;

		*node[0x5f68a02d8150] = 0;

		*node[0x5f68a02d81b0] = ;;

		*node[0x5f68a02d8270] = =;

		*node[0x5f68a02d81e0] = 15;

		*node[0x5f68a02d8240] = sqrt;

		*node[0x5f68a02d8210] = 14;

		*node[0x5f68a02d82a0] = ;;

		*node[0x5f68a02d84b0] = =;

		*node[0x5f68a02d82d0] = 12;

		*node[0x5f68a02d8480] = -;

		*node[0x5f68a02d8360] = -;

		*node[0x5f68a02d8300] = 0;

		*node[0x5f68a02d8330] = 2;

		*node[0x5f68a02d8450] = *;

		*node[0x5f68a02d83f0] = /;

		*node[0x5f68a02d8390] = 15;

		*node[0x5f68a02d83c0] = 2;

		*node[0x5f68a02d8420] = 1;

		*node[0x5f68a02d84e0] = ;;

		*node[0x5f68a02d86f0] = =;

		*node[0x5f68a02d8510] = 13;

		*node[0x5f68a02d86c0] = +;

		*node[0x5f68a02d85a0] = -;

		*node[0x5f68a02d8540] = 0;

		*node[0x5f68a02d8570] = 2;

		*node[0x5f68a02d8690] = *;

		*node[0x5f68a02d8630] = /;

		*node[0x5f68a02d85d0] = 15;

		*node[0x5f68a02d8600] = 2;

		*node[0x5f68a02d8660] = 1;

		*node[0x5f68a02d8720] = ;;

		*node[0x5f68a02d8750] = print;

		*node[0x5f68a02d8780] = 11;

		*node[0x5f68a02d87b0] = ;;

		*node[0x5f68a02d87e0] = print;

		*node[0x5f68a02d8810] = 12;

		*node[0x5f68a02d8840] = 13;

		*node[0x5f68a02d8870] = elseif;

		*node[0x5f68a02d88a0] = op_no;

		*node[0x5f68a02d8930] = ==;

		*node[0x5f68a02d88d0] = 14;

		*node[0x5f68a02d8900] = 0;

		*node[0x5f68a02d8960] = ;;

		*node[0x5f68a02d8b10] = =;

		*node[0x5f68a02d8990] = 10;

		*node[0x5f68a02d8ae0] = -;

		*node[0x5f68a02d89c0] = 0;

		*node[0x5f68a02d8ab0] = *;

		*node[0x5f68a02d8a50] = /;

		*node[0x5f68a02d89f0] = 2;

		*node[0x5f68a02d8a20] = 2;

		*node[0x5f68a02d8a80] = 1;

		*node[0x5f68a02d8b40] = ;;

		*node[0x5f68a02d8b70] = print;

		*node[0x5f68a02d8ba0] = 8;

		*node[0x5f68a02d8bd0] = ;;

		*node[0x5f68a02d8c00] = print;

		*node[0x5f68a02d8c30] = 10;

		*node[0x5f68a02d8c60] = else;

		*node[0x5f68a02d8c90] = op_no;

		*node[0x5f68a02d8cc0] = ;;

		*node[0x5f68a02d8cf0] = print;

		*node[0x5f68a02d8d20] = 7;

		*node[0x5f68a02d8d50] = ;;

		*node[0x5f68a02d8d80] = return;

		*node[0x5f68a02d8db0] = 0;

		*node[0x5f68a02d8de0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe8bd34e40] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x608963c1b0f0] = ;;

		*node[0x608963c1b170] = 0;

		*node[0x608963c1b1a0] = ;;

		*node[0x608963c1b1d0] = input;

		*node[0x608963c1b200] = 1;

		*node[0x608963c1b230] = 2;

		*node[0x608963c1b260] = 3;

		*node[0x608963c1b2c0] = ;;

		*node[0x608963c1b320] = 1;

		*node[0x608963c1b350] = 2;

		*node[0x608963c1b380] = 3;

		*node[0x608963c1b3b0] = ;;

		*node[0x608963c1b430] = 4;

		*node[0x608963c1b460] = 1;

		*node[0x608963c1b490] = 2;

		*node[0x608963c1b4c0] = 3;

		*node[0x608963c1b520] = ;;

		*node[0x608963c1b550] = if;

		*node[0x608963c1b580] = op_no;

		*node[0x608963c1b610] = ==;

		*node[0x608963c1b5b0] = 1;

		*node[0x608963c1b5e0] = 0;

		*node[0x608963c1b640] = ;;

		*node[0x608963c1b6a0] = 2;

		*node[0x608963c1b6d0] = 3;

		*node[0x608963c1b700] = else;

		*node[0x608963c1b730] = op_no;

		*node[0x608963c1b760] = ;;

		*node[0x608963c1b810] = 1;

		*node[0x608963c1b840] = 2;

		*node[0x608963c1b870] = 3;

		*node[0x608963c1b8a0] = ;;

		*node[0x608963c1b920] = 5;

		*node[0x608963c1b980] = 1;

		*node[0x608963c1b9b0] = 2;

		*node[0x608963c1b9e0] = ;;

		*node[0x608963c1bb00] = =;

		*node[0x608963c1ba10] = 7;

		*node[0x608963c1bad0] = -;

		*node[0x608963c1ba70] = 0;

		*node[0x608963c1baa0] = 1;

		*node[0x608963c1bb30] = ;;

		*node[0x608963c1bbc0] = =;

		*node[0x608963c1bb60] = 8;

		*node[0x608963c1bb90] = 1;

		*node[0x608963c1bbf0] = ;;

		*node[0x608963c1bcd0] = =;

		*node[0x608963c1bc20] = 9;

		*node[0x608963c1bca0] = 1000;

		*node[0x608963c1bd00] = ;;

		*node[0x608963c1bd30] = if;

		*node[0x608963c1bd60] = op_no;

		*node[0x608963c1bdf0] = ==;

		*node[0x608963c1bd90] = 1;

		*node[0x608963c1bdc0] = 0;

		*node[0x608963c1be20] = ;;

		*node[0x608963c1be50] = if;

		*node[0x608963c1be80] = op_no;

		*node[0x608963c1bf10] = ==;

		*node[0x608963c1beb0] = 2;

		*node[0x608963c1bee0] = 0;

		*node[0x608963c1bf40] = ;;

		*node[0x608963c1bf70] = print;

		*node[0x608963c1bfa0] = 9;

		*node[0x608963c1bfd0] = else;

		*node[0x608963c1c000] = op_no;

		*node[0x608963c1c030] = ;;

		*node[0x608963c1c060] = print;

		*node[0x608963c1c090] = 7;

		*node[0x608963c1c0c0] = else;

		*node[0x608963c1c0f0] = op_no;

		*node[0x608963c1c120] = ;;

		*node[0x608963c1c270] = =;

		*node[0x608963c1c150] = 10;

		*node[0x608963c1c240] = -;

		*node[0x608963c1c180] = 0;

		*node[0x608963c1c210] = /;

		*node[0x608963c1c1b0] = 2;

		*node[0x608963c1c1e0] = 1;

		*node[0x608963c1c2a0] = ;;

		*node[0x608963c1c2d0] = print;

		*node[0x608963c1c300] = 8;

		*node[0x608963c1c330] = ;;

		*node[0x608963c1c360] = print;

		*node[0x608963c1c390] = 10;

		*node[0x608963c1c3c0] = ;;

		*node[0x608963c1c3f0] = return;

		*node[0x608963c1c420] = 0;

		*node[0x608963c1c450] = ;;

		*node[0x608963c1c4d0] = 6;

		*node[0x608963c1c500] = 1;

		*node[0x608963c1c530] = 2;

		*node[0x608963c1c560] = 3;

		*node[0x608963c1c5c0] = ;;

		*node[0x608963c1c6b0] = =;

		*node[0x608963c1c5f0] = 7;

		*node[0x608963c1c680] = -;

		*node[0x608963c1c620] = 0;

		*node[0x608963c1c650] = 1;

		*node[0x608963c1c6e0] = ;;

		*node[0x608963c1c7c0] = =;

		*node[0x608963c1c710] = 8;

		*node[0x608963c1c790] = 1;

		*node[0x608963c1c7f0] = ;;

		*node[0x608963c1c880] = =;

		*node[0x608963c1c820] = 11;

		*node[0x608963c1c850] = 2;

		*node[0x608963c1c8b0] = ;;

		*node[0x608963c1c8e0] = if;

		*node[0x608963c1c910] = op_no;

		*node[0x608963c1c9a0] = ==;

		*node[0x608963c1c940] = 3;

		*node[0x608963c1c970] = 0;

		*node[0x608963c1c9d0] = ;;

		*node[0x608963c1ca60] = =;

		*node[0x608963c1ca00] = 12;

		*node[0x608963c1ca30] = 0;

		*node[0x608963c1ca90] = ;;

		*node[0x608963c1cbe0] = =;

		*node[0x608963c1cac0] = 13;

		*node[0x608963c1cbb0] = -;

		*node[0x608963c1caf0] = 0;

		*node[0x608963c1cb80] = /;

		*node[0x608963c1cb20] = 2;

		*node[0x608963c1cb50] = 1;

		*node[0x608963c1cc10] = ;;

		*node[0x608963c1cc40] = print;

		*node[0x608963c1cc70] = 11;

		*node[0x608963c1cca0] = ;;

		*node[0x608963c1ccd0] = print;

		*node[0x608963c1cd00] = 12;

		*node[0x608963c1cd30] = 13;

		*node[0x608963c1cd60] = else;

		*node[0x608963c1cd90] = op_no;

		*node[0x608963c1cdc0] = ;;

		*node[0x608963c1d060] = =;

		*node[0x608963c1cdf0] = 14;

		*node[0x608963c1d030] = -;

		*node[0x608963c1cf10] = *;

		*node[0x608963c1ceb0] = 2;

		*node[0x608963c1cee0] = 2;

		*node[0x608963c1d000] = *;

		*node[0x608963c1cfa0] = *;

		*node[0x608963c1cf40] = 4;

		*node[0x608963c1cf70] = 1;

		*node[0x608963c1cfd0] = 3;

		*node[0x608963c1d090] = ;;

		*node[0x608963c1d0c0] = if;

		*node[0x608963c1d0f0] = op_no;

		*node[0x608963c1d180] = >;

		*node[0x608963c1d120] = 14;

		*node[0x608963c1d150] = 0;

		*node[0x608963c1d1b0] = ;;

		*node[0x608963c1d270] = =;

		*node[0x608963c1d1e0] = 15;

		*node[0x608963c1d240] = sqrt;

		*node[0x608963c1d210] = 14;

		*node[0x608963c1d2a0] = ;;

		*node[0x608963c1d4b0] = =;

		*node[0x608963c1d2d0] = 12;

		*node[0x608963c1d480] = -;

		*node[0x608963c1d360] = -;

		*node[0x608963c1d300] = 0;

		*node[0x608963c1d330] = 2;

		*node[0x608963c1d450] = *;

		*node[0x608963c1d3f0] = /;

		*node[0x608963c1d390] = 15;

		*node[0x608963c1d3c0] = 2;

		*node[0x608963c1d420] = 1;

		*node[0x608963c1d4e0] = ;;

		*node[0x608963c1d6f0] = =;

		*node[0x608963c1d510] = 13;

		*node[0x608963c1d6c0] = +;

		*node[0x608963c1d5a0] = -;

		*node[0x608963c1d540] = 0;

		*node[0x608963c1d570] = 2;

		*node[0x608963c1d690] = *;

		*node[0x608963c1d630] = /;

		*node[0x608963c1d5d0] = 15;

		*node[0x608963c1d600] = 2;

		*node[0x608963c1d660] = 1;

		*node[0x608963c1d720] = ;;

		*node[0x608963c1d750] = print;

		*node[0x608963c1d780] = 11;

		*node[0x608963c1d7b0] = ;;

		*node[0x608963c1d7e0] = print;

		*node[0x608963c1d810] = 12;

		*node[0x608963c1d840] = 13;

		*node[0x608963c1d870] = elseif;

		*node[0x608963c1d8a0] = op_no;

		*node[0x608963c1d930] = ==;

		*node[0x608963c1d8d0] = 14;

		*node[0x608963c1d900] = 0;

		*node[0x608963c1d960] = ;;

		*node[0x608963c1db10] = =;

		*node[0x608963c1d990] = 10;

		*node[0x608963c1dae0] = -;

		*node[0x608963c1d9c0] = 0;

		*node[0x608963c1dab0] = *;

		*node[0x608963c1da50] = /;

		*node[0x608963c1d9f0] = 2;

		*node[0x608963c1da20] = 2;

		*node[0x608963c1da80] = 1;

		*node[0x608963c1db40] = ;;

		*node[0x608963c1db70] = print;

		*node[0x608963c1dba0] = 8;

		*node[0x608963c1dbd0] = ;;

		*node[0x608963c1dc00] = print;

		*node[0x608963c1dc30] = 10;

		*node[0x608963c1dc60] = else;

		*node[0x608963c1dc90] = op_no;

		*node[0x608963c1dcc0] = ;;

		*node[0x608963c1dcf0] = print;

		*node[0x608963c1dd20] = 7;

		*node[0x608963c1dd50] = ;;

		*node[0x608963c1dd80] = return;

		*node[0x608963c1ddb0] = 0;

		*node[0x608963c1dde0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffdc806c470] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5f7cb6c37fd0] = ;;

		*node[0x5f7cb6c38000] = 0;

		*node[0x5f7cb6c38030] = ;;

		*node[0x5f7cb6c38060] = input;

		*node[0x5f7cb6c38090] = 1;

		*node[0x5f7cb6c380c0] = 2;

		*node[0x5f7cb6c380f0] = 3;

		*node[0x5f7cb6c38120] = ;;

		*node[0x5f7cb6c38180] = 1;

		*node[0x5f7cb6c381b0] = 2;

		*node[0x5f7cb6c381e0] = 3;

		*node[0x5f7cb6c38210] = ;;

		*node[0x5f7cb6c38240] = 4;

		*node[0x5f7cb6c38270] = 1;

		*node[0x5f7cb6c382a0] = 2;

		*node[0x5f7cb6c382d0] = 3;

		*node[0x5f7cb6c38300] = ;;

		*node[0x5f7cb6c38330] = if;

		*node[0x5f7cb6c38360] = op_no;

		*node[0x5f7cb6c38390] = ==;

		*node[0x5f7cb6c383c0] = 1;

		*node[0x5f7cb6c383f0] = 0;

		*node[0x5f7cb6c38420] = ;;

		*node[0x5f7cb6c38480] = 2;

		*node[0x5f7cb6c384b0] = 3;

		*node[0x5f7cb6c384e0] = else;

		*node[0x5f7cb6c38510] = op_no;

		*node[0x5f7cb6c38540] = ;;

		*node[0x5f7cb6c385a0] = 1;

		*node[0x5f7cb6c385d0] = 2;

		*node[0x5f7cb6c38600] = 3;

		*node[0x5f7cb6c38630] = ;;

		*node[0x5f7cb6c38660] = 5;

		*node[0x5f7cb6c38690] = 1;

		*node[0x5f7cb6c386c0] = 2;

		*node[0x5f7cb6c386f0] = ;;

		*node[0x5f7cb6c38720] = =;

		*node[0x5f7cb6c38750] = 7;

		*node[0x5f7cb6c38780] = -;

		*node[0x5f7cb6c387b0] = 0;

		*node[0x5f7cb6c387e0] = 1;

		*node[0x5f7cb6c38810] = ;;

		*node[0x5f7cb6c38840] = =;

		*node[0x5f7cb6c38870] = 8;

		*node[0x5f7cb6c388a0] = 1;

		*node[0x5f7cb6c388d0] = ;;

		*node[0x5f7cb6c38900] = =;

		*node[0x5f7cb6c38930] = 9;

		*node[0x5f7cb6c38960] = 1000;

		*node[0x5f7cb6c38990] = ;;

		*node[0x5f7cb6c389c0] = if;

		*node[0x5f7cb6c389f0] = op_no;

		*node[0x5f7cb6c38a20] = ==;

		*node[0x5f7cb6c38a50] = 1;

		*node[0x5f7cb6c38a80] = 0;

		*node[0x5f7cb6c38ab0] = ;;

		*node[0x5f7cb6c38ae0] = if;

		*node[0x5f7cb6c38b10] = op_no;

		*node[0x5f7cb6c38b40] = ==;

		*node[0x5f7cb6c38b70] = 2;

		*node[0x5f7cb6c38ba0] = 0;

		*node[0x5f7cb6c38bd0] = ;;

		*node[0x5f7cb6c38c00] = print;

		*node[0x5f7cb6c38c30] = 9;

		*node[0x5f7cb6c38c60] = else;

		*node[0x5f7cb6c38c90] = op_no;

		*node[0x5f7cb6c38cc0] = ;;

		*node[0x5f7cb6c38cf0] = print;

		*node[0x5f7cb6c38d20] = 7;

		*node[0x5f7cb6c38d50] = else;

		*node[0x5f7cb6c38d80] = op_no;

		*node[0x5f7cb6c38db0] = ;;

		*node[0x5f7cb6c38de0] = =;

		*node[0x5f7cb6c38e10] = 10;

		*node[0x5f7cb6c38e40] = -;

		*node[0x5f7cb6c38e70] = 0;

		*node[0x5f7cb6c38ea0] = /;

		*node[0x5f7cb6c38ed0] = 2;

		*node[0x5f7cb6c38f00] = 1;

		*node[0x5f7cb6c38f30] = ;;

		*node[0x5f7cb6c38f60] = print;

		*node[0x5f7cb6c38f90] = 8;

		*node[0x5f7cb6c38fc0] = ;;

		*node[0x5f7cb6c38ff0] = print;

		*node[0x5f7cb6c39020] = 10;

		*node[0x5f7cb6c39050] = ;;

		*node[0x5f7cb6c39080] = return;

		*node[0x5f7cb6c390b0] = 0;

		*node[0x5f7cb6c390e0] = ;;

		*node[0x5f7cb6c39110] = 6;

		*node[0x5f7cb6c39140] = 1;

		*node[0x5f7cb6c39170] = 2;

		*node[0x5f7cb6c391a0] = 3;

		*node[0x5f7cb6c391d0] = ;;

		*node[0x5f7cb6c39200] = =;

		*node[0x5f7cb6c39230] = 7;

		*node[0x5f7cb6c39260] = -;

		*node[0x5f7cb6c39290] = 0;

		*node[0x5f7cb6c392c0] = 1;

		*node[0x5f7cb6c392f0] = ;;

		*node[0x5f7cb6c39320] = =;

		*node[0x5f7cb6c39350] = 8;

		*node[0x5f7cb6c39380] = 1;

		*node[0x5f7cb6c393b0] = ;;

		*node[0x5f7cb6c393e0] = =;

		*node[0x5f7cb6c39410] = 11;

		*node[0x5f7cb6c39440] = 2;

		*node[0x5f7cb6c39470] = ;;

		*node[0x5f7cb6c394a0] = if;

		*node[0x5f7cb6c394d0] = op_no;

		*node[0x5f7cb6c39500] = ==;

		*node[0x5f7cb6c39530] = 3;

		*node[0x5f7cb6c39560] = 0;

		*node[0x5f7cb6c39590] = ;;

		*node[0x5f7cb6c395c0] = =;

		*node[0x5f7cb6c395f0] = 12;

		*node[0x5f7cb6c39620] = 0;

		*node[0x5f7cb6c39650] = ;;

		*node[0x5f7cb6c39680] = =;

		*node[0x5f7cb6c396b0] = 13;

		*node[0x5f7cb6c396e0] = -;

		*node[0x5f7cb6c39710] = 0;

		*node[0x5f7cb6c39740] = /;

		*node[0x5f7cb6c39770] = 2;

		*node[0x5f7cb6c397a0] = 1;

		*node[0x5f7cb6c397d0] = ;;

		*node[0x5f7cb6c39800] = print;

		*node[0x5f7cb6c39830] = 11;

		*node[0x5f7cb6c39860] = ;;

		*node[0x5f7cb6c39890] = print;

		*node[0x5f7cb6c398c0] = 12;

		*node[0x5f7cb6c398f0] = 13;

		*node[0x5f7cb6c39920] = else;

		*node[0x5f7cb6c39950] = op_no;

		*node[0x5f7cb6c39980] = ;;

		*node[0x5f7cb6c399b0] = =;

		*node[0x5f7cb6c399e0] = 14;

		*node[0x5f7cb6c39a10] = -;

		*node[0x5f7cb6c39a40] = *;

		*node[0x5f7cb6c39a70] = 2;

		*node[0x5f7cb6c39aa0] = 2;

		*node[0x5f7cb6c39ad0] = *;

		*node[0x5f7cb6c39b00] = *;

		*node[0x5f7cb6c39b30] = 4;

		*node[0x5f7cb6c39b60] = 1;

		*node[0x5f7cb6c39b90] = 3;

		*node[0x5f7cb6c39bc0] = ;;

		*node[0x5f7cb6c39bf0] = if;

		*node[0x5f7cb6c39c20] = op_no;

		*node[0x5f7cb6c39c50] = >;

		*node[0x5f7cb6c39c80] = 14;

		*node[0x5f7cb6c39cb0] = 0;

		*node[0x5f7cb6c39ce0] = ;;

		*node[0x5f7cb6c39d10] = =;

		*node[0x5f7cb6c39d40] = 15;

		*node[0x5f7cb6c39d70] = sqrt;

		*node[0x5f7cb6c39da0] = 14;

		*node[0x5f7cb6c39dd0] = ;;

		*node[0x5f7cb6c39e00] = =;

		*node[0x5f7cb6c39e30] = 12;

		*node[0x5f7cb6c39e60] = -;

		*node[0x5f7cb6c39e90] = -;

		*node[0x5f7cb6c39ec0] = 0;

		*node[0x5f7cb6c39ef0] = 2;

		*node[0x5f7cb6c39f20] = *;

		*node[0x5f7cb6c39f50] = /;

		*node[0x5f7cb6c39f80] = 15;

		*node[0x5f7cb6c39fb0] = 2;

		*node[0x5f7cb6c39fe0] = 1;

		*node[0x5f7cb6c3a010] = ;;

		*node[0x5f7cb6c3a040] = =;

		*node[0x5f7cb6c3a070] = 13;

		*node[0x5f7cb6c3a0a0] = +;

		*node[0x5f7cb6c3a0d0] = -;

		*node[0x5f7cb6c3a100] = 0;

		*node[0x5f7cb6c3a130] = 2;

		*node[0x5f7cb6c3a160] = *;

		*node[0x5f7cb6c3a190] = /;

		*node[0x5f7cb6c3a1c0] = 15;

		*node[0x5f7cb6c3a1f0] = 2;

		*node[0x5f7cb6c3a220] = 1;

		*node[0x5f7cb6c3a250] = ;;

		*node[0x5f7cb6c3a280] = print;

		*node[0x5f7cb6c3a2b0] = 11;

		*node[0x5f7cb6c3a2e0] = ;;

		*node[0x5f7cb6c3a310] = print;

		*node[0x5f7cb6c3a340] = 12;

		*node[0x5f7cb6c3a370] = 13;

		*node[0x5f7cb6c3a3a0] = elseif;

		*node[0x5f7cb6c3a3d0] = op_no;

		*node[0x5f7cb6c3a400] = ==;

		*node[0x5f7cb6c3a430] = 14;

		*node[0x5f7cb6c3a460] = 0;

		*node[0x5f7cb6c3a490] = ;;

		*node[0x5f7cb6c3a4c0] = =;

		*node[0x5f7cb6c3a4f0] = 10;

		*node[0x5f7cb6c3a520] = -;

		*node[0x5f7cb6c3a550] = 0;

		*node[0x5f7cb6c3a580] = *;

		*node[0x5f7cb6c3a5b0] = /;

		*node[0x5f7cb6c3a5e0] = 2;

		*node[0x5f7cb6c3a610] = 2;

		*node[0x5f7cb6c3a640] = 1;

		*node[0x5f7cb6c3a670] = ;;

		*node[0x5f7cb6c3a6a0] = print;

		*node[0x5f7cb6c3a6d0] = 8;

		*node[0x5f7cb6c3a700] = ;;

		*node[0x5f7cb6c3a730] = print;

		*node[0x5f7cb6c3a760] = 10;

		*node[0x5f7cb6c3a790] = else;

		*node[0x5f7cb6c3a7c0] = op_no;

		*node[0x5f7cb6c3a7f0] = ;;

		*node[0x5f7cb6c3a820] = print;

		*node[0x5f7cb6c3a850] = 7;

		*node[0x5f7cb6c3a880] = ;;

		*node[0x5f7cb6c3a8b0] = return;

		*node[0x5f7cb6c3a8e0] = 0;

		*node[0x5f7cb6c3a910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffffd93ef30] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5c65c8bf90d0] = ;;

		*node[0x5c65c8bf9150] = 0;

		*node[0x5c65c8bf9180] = ;;

		*node[0x5c65c8bf91b0] = input;

		*node[0x5c65c8bf91e0] = 1;

		*node[0x5c65c8bf9210] = 2;

		*node[0x5c65c8bf9240] = 3;

		*node[0x5c65c8bf92a0] = ;;

		*node[0x5c65c8bf9300] = 1;

		*node[0x5c65c8bf9330] = 2;

		*node[0x5c65c8bf9360] = 3;

		*node[0x5c65c8bf9390] = ;;

		*node[0x5c65c8bf9410] = 4;

		*node[0x5c65c8bf9440] = 1;

		*node[0x5c65c8bf9470] = 2;

		*node[0x5c65c8bf94a0] = 3;

		*node[0x5c65c8bf9500] = ;;

		*node[0x5c65c8bf9530] = if;

		*node[0x5c65c8bf9560] = op_no;

		*node[0x5c65c8bf95f0] = ==;

		*node[0x5c65c8bf9590] = 1;

		*node[0x5c65c8bf95c0] = 0;

		*node[0x5c65c8bf9620] = ;;

		*node[0x5c65c8bf9680] = 2;

		*node[0x5c65c8bf96b0] = 3;

		*node[0x5c65c8bf96e0] = else;

		*node[0x5c65c8bf9710] = op_no;

		*node[0x5c65c8bf9740] = ;;

		*node[0x5c65c8bf97f0] = 1;

		*node[0x5c65c8bf9820] = 2;

		*node[0x5c65c8bf9850] = 3;

		*node[0x5c65c8bf9880] = ;;

		*node[0x5c65c8bf9900] = 5;

		*node[0x5c65c8bf9960] = 1;

		*node[0x5c65c8bf9990] = 2;

		*node[0x5c65c8bf99c0] = ;;

		*node[0x5c65c8bf9ae0] = =;

		*node[0x5c65c8bf99f0] = 7;

		*node[0x5c65c8bf9ab0] = -;

		*node[0x5c65c8bf9a50] = 0;

		*node[0x5c65c8bf9a80] = 1;

		*node[0x5c65c8bf9b10] = ;;

		*node[0x5c65c8bf9ba0] = =;

		*node[0x5c65c8bf9b40] = 8;

		*node[0x5c65c8bf9b70] = 1;

		*node[0x5c65c8bf9bd0] = ;;

		*node[0x5c65c8bf9cb0] = =;

		*node[0x5c65c8bf9c00] = 9;

		*node[0x5c65c8bf9c80] = 1000;

		*node[0x5c65c8bf9ce0] = ;;

		*node[0x5c65c8bf9d10] = if;

		*node[0x5c65c8bf9d40] = op_no;

		*node[0x5c65c8bf9dd0] = ==;

		*node[0x5c65c8bf9d70] = 1;

		*node[0x5c65c8bf9da0] = 0;

		*node[0x5c65c8bf9e00] = ;;

		*node[0x5c65c8bf9e30] = if;

		*node[0x5c65c8bf9e60] = op_no;

		*node[0x5c65c8bf9ef0] = ==;

		*node[0x5c65c8bf9e90] = 2;

		*node[0x5c65c8bf9ec0] = 0;

		*node[0x5c65c8bf9f20] = ;;

		*node[0x5c65c8bf9f50] = print;

		*node[0x5c65c8bf9f80] = 9;

		*node[0x5c65c8bf9fb0] = else;

		*node[0x5c65c8bf9fe0] = op_no;

		*node[0x5c65c8bfa010] = ;;

		*node[0x5c65c8bfa040] = print;

		*node[0x5c65c8bfa070] = 7;

		*node[0x5c65c8bfa0a0] = else;

		*node[0x5c65c8bfa0d0] = op_no;

		*node[0x5c65c8bfa100] = ;;

		*node[0x5c65c8bfa250] = =;

		*node[0x5c65c8bfa130] = 10;

		*node[0x5c65c8bfa220] = -;

		*node[0x5c65c8bfa160] = 0;

		*node[0x5c65c8bfa1f0] = /;

		*node[0x5c65c8bfa190] = 2;

		*node[0x5c65c8bfa1c0] = 1;

		*node[0x5c65c8bfa280] = ;;

		*node[0x5c65c8bfa2b0] = print;

		*node[0x5c65c8bfa2e0] = 8;

		*node[0x5c65c8bfa310] = ;;

		*node[0x5c65c8bfa340] = print;

		*node[0x5c65c8bfa370] = 10;

		*node[0x5c65c8bfa3a0] = ;;

		*node[0x5c65c8bfa3d0] = return;

		*node[0x5c65c8bfa400] = 0;

		*node[0x5c65c8bfa430] = ;;

		*node[0x5c65c8bfa4b0] = 6;

		*node[0x5c65c8bfa4e0] = 1;

		*node[0x5c65c8bfa510] = 2;

		*node[0x5c65c8bfa540] = 3;

		*node[0x5c65c8bfa5a0] = ;;

		*node[0x5c65c8bfa690] = =;

		*node[0x5c65c8bfa5d0] = 7;

		*node[0x5c65c8bfa660] = -;

		*node[0x5c65c8bfa600] = 0;

		*node[0x5c65c8bfa630] = 1;

		*node[0x5c65c8bfa6c0] = ;;

		*node[0x5c65c8bfa7a0] = =;

		*node[0x5c65c8bfa6f0] = 8;

		*node[0x5c65c8bfa770] = 1;

		*node[0x5c65c8bfa7d0] = ;;

		*node[0x5c65c8bfa860] = =;

		*node[0x5c65c8bfa800] = 11;

		*node[0x5c65c8bfa830] = 2;

		*node[0x5c65c8bfa890] = ;;

		*node[0x5c65c8bfa8c0] = if;

		*node[0x5c65c8bfa8f0] = op_no;

		*node[0x5c65c8bfa980] = ==;

		*node[0x5c65c8bfa920] = 3;

		*node[0x5c65c8bfa950] = 0;

		*node[0x5c65c8bfa9b0] = ;;

		*node[0x5c65c8bfaa40] = =;

		*node[0x5c65c8bfa9e0] = 12;

		*node[0x5c65c8bfaa10] = 0;

		*node[0x5c65c8bfaa70] = ;;

		*node[0x5c65c8bfabc0] = =;

		*node[0x5c65c8bfaaa0] = 13;

		*node[0x5c65c8bfab90] = -;

		*node[0x5c65c8bfaad0] = 0;

		*node[0x5c65c8bfab60] = /;

		*node[0x5c65c8bfab00] = 2;

		*node[0x5c65c8bfab30] = 1;

		*node[0x5c65c8bfabf0] = ;;

		*node[0x5c65c8bfac20] = print;

		*node[0x5c65c8bfac50] = 11;

		*node[0x5c65c8bfac80] = ;;

		*node[0x5c65c8bfacb0] = print;

		*node[0x5c65c8bface0] = 12;

		*node[0x5c65c8bfad10] = 13;

		*node[0x5c65c8bfad40] = else;

		*node[0x5c65c8bfad70] = op_no;

		*node[0x5c65c8bfada0] = ;;

		*node[0x5c65c8bfb040] = =;

		*node[0x5c65c8bfadd0] = 14;

		*node[0x5c65c8bfb010] = -;

		*node[0x5c65c8bfaef0] = *;

		*node[0x5c65c8bfae90] = 2;

		*node[0x5c65c8bfaec0] = 2;

		*node[0x5c65c8bfafe0] = *;

		*node[0x5c65c8bfaf80] = *;

		*node[0x5c65c8bfaf20] = 4;

		*node[0x5c65c8bfaf50] = 1;

		*node[0x5c65c8bfafb0] = 3;

		*node[0x5c65c8bfb070] = ;;

		*node[0x5c65c8bfb0a0] = if;

		*node[0x5c65c8bfb0d0] = op_no;

		*node[0x5c65c8bfb160] = >;

		*node[0x5c65c8bfb100] = 14;

		*node[0x5c65c8bfb130] = 0;

		*node[0x5c65c8bfb190] = ;;

		*node[0x5c65c8bfb250] = =;

		*node[0x5c65c8bfb1c0] = 15;

		*node[0x5c65c8bfb220] = sqrt;

		*node[0x5c65c8bfb1f0] = 14;

		*node[0x5c65c8bfb280] = ;;

		*node[0x5c65c8bfb490] = =;

		*node[0x5c65c8bfb2b0] = 12;

		*node[0x5c65c8bfb460] = -;

		*node[0x5c65c8bfb340] = -;

		*node[0x5c65c8bfb2e0] = 0;

		*node[0x5c65c8bfb310] = 2;

		*node[0x5c65c8bfb430] = *;

		*node[0x5c65c8bfb3d0] = /;

		*node[0x5c65c8bfb370] = 15;

		*node[0x5c65c8bfb3a0] = 2;

		*node[0x5c65c8bfb400] = 1;

		*node[0x5c65c8bfb4c0] = ;;

		*node[0x5c65c8bfb6d0] = =;

		*node[0x5c65c8bfb4f0] = 13;

		*node[0x5c65c8bfb6a0] = +;

		*node[0x5c65c8bfb580] = -;

		*node[0x5c65c8bfb520] = 0;

		*node[0x5c65c8bfb550] = 2;

		*node[0x5c65c8bfb670] = *;

		*node[0x5c65c8bfb610] = /;

		*node[0x5c65c8bfb5b0] = 15;

		*node[0x5c65c8bfb5e0] = 2;

		*node[0x5c65c8bfb640] = 1;

		*node[0x5c65c8bfb700] = ;;

		*node[0x5c65c8bfb730] = print;

		*node[0x5c65c8bfb760] = 11;

		*node[0x5c65c8bfb790] = ;;

		*node[0x5c65c8bfb7c0] = print;

		*node[0x5c65c8bfb7f0] = 12;

		*node[0x5c65c8bfb820] = 13;

		*node[0x5c65c8bfb850] = elseif;

		*node[0x5c65c8bfb880] = op_no;

		*node[0x5c65c8bfb910] = ==;

		*node[0x5c65c8bfb8b0] = 14;

		*node[0x5c65c8bfb8e0] = 0;

		*node[0x5c65c8bfb940] = ;;

		*node[0x5c65c8bfbaf0] = =;

		*node[0x5c65c8bfb970] = 10;

		*node[0x5c65c8bfbac0] = -;

		*node[0x5c65c8bfb9a0] = 0;

		*node[0x5c65c8bfba90] = *;

		*node[0x5c65c8bfba30] = /;

		*node[0x5c65c8bfb9d0] = 2;

		*node[0x5c65c8bfba00] = 2;

		*node[0x5c65c8bfba60] = 1;

		*node[0x5c65c8bfbb20] = ;;

		*node[0x5c65c8bfbb50] = print;

		*node[0x5c65c8bfbb80] = 8;

		*node[0x5c65c8bfbbb0] = ;;

		*node[0x5c65c8bfbbe0] = print;

		*node[0x5c65c8bfbc10] = 10;

		*node[0x5c65c8bfbc40] = else;

		*node[0x5c65c8bfbc70] = op_no;

		*node[0x5c65c8bfbca0] = ;;

		*node[0x5c65c8bfbcd0] = print;

		*node[0x5c65c8bfbd00] = 7;

		*node[0x5c65c8bfbd30] = ;;

		*node[0x5c65c8bfbd60] = return;

		*node[0x5c65c8bfbd90] = 0;

		*node[0x5c65c8bfbdc0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffebb9fd270] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x60db91c02fd0] = ;;

		*node[0x60db91c03000] = 0;

		*node[0x60db91c03030] = ;;

		*node[0x60db91c03060] = input;

		*node[0x60db91c03090] = 1;

		*node[0x60db91c030c0] = 2;

		*node[0x60db91c030f0] = 3;

		*node[0x60db91c03120] = ;;

		*node[0x60db91c03180] = 1;

		*node[0x60db91c031b0] = 2;

		*node[0x60db91c031e0] = 3;

		*node[0x60db91c03210] = ;;

		*node[0x60db91c03240] = 4;

		*node[0x60db91c03270] = 1;

		*node[0x60db91c032a0] = 2;

		*node[0x60db91c032d0] = 3;

		*node[0x60db91c03300] = ;;

		*node[0x60db91c03330] = if;

		*node[0x60db91c03360] = op_no;

		*node[0x60db91c03390] = ==;

		*node[0x60db91c033c0] = 1;

		*node[0x60db91c033f0] = 0;

		*node[0x60db91c03420] = ;;

		*node[0x60db91c03480] = 2;

		*node[0x60db91c034b0] = 3;

		*node[0x60db91c034e0] = else;

		*node[0x60db91c03510] = op_no;

		*node[0x60db91c03540] = ;;

		*node[0x60db91c035a0] = 1;

		*node[0x60db91c035d0] = 2;

		*node[0x60db91c03600] = 3;

		*node[0x60db91c03630] = ;;

		*node[0x60db91c03660] = 5;

		*node[0x60db91c03690] = 1;

		*node[0x60db91c036c0] = 2;

		*node[0x60db91c036f0] = ;;

		*node[0x60db91c03720] = =;

		*node[0x60db91c03750] = 7;

		*node[0x60db91c03780] = -;

		*node[0x60db91c037b0] = 0;

		*node[0x60db91c037e0] = 1;

		*node[0x60db91c03810] = ;;

		*node[0x60db91c03840] = =;

		*node[0x60db91c03870] = 8;

		*node[0x60db91c038a0] = 1;

		*node[0x60db91c038d0] = ;;

		*node[0x60db91c03900] = =;

		*node[0x60db91c03930] = 9;

		*node[0x60db91c03960] = 1000;

		*node[0x60db91c03990] = ;;

		*node[0x60db91c039c0] = if;

		*node[0x60db91c039f0] = op_no;

		*node[0x60db91c03a20] = ==;

		*node[0x60db91c03a50] = 1;

		*node[0x60db91c03a80] = 0;

		*node[0x60db91c03ab0] = ;;

		*node[0x60db91c03ae0] = if;

		*node[0x60db91c03b10] = op_no;

		*node[0x60db91c03b40] = ==;

		*node[0x60db91c03b70] = 2;

		*node[0x60db91c03ba0] = 0;

		*node[0x60db91c03bd0] = ;;

		*node[0x60db91c03c00] = print;

		*node[0x60db91c03c30] = 9;

		*node[0x60db91c03c60] = else;

		*node[0x60db91c03c90] = op_no;

		*node[0x60db91c03cc0] = ;;

		*node[0x60db91c03cf0] = print;

		*node[0x60db91c03d20] = 7;

		*node[0x60db91c03d50] = else;

		*node[0x60db91c03d80] = op_no;

		*node[0x60db91c03db0] = ;;

		*node[0x60db91c03de0] = =;

		*node[0x60db91c03e10] = 10;

		*node[0x60db91c03e40] = -;

		*node[0x60db91c03e70] = 0;

		*node[0x60db91c03ea0] = /;

		*node[0x60db91c03ed0] = 2;

		*node[0x60db91c03f00] = 1;

		*node[0x60db91c03f30] = ;;

		*node[0x60db91c03f60] = print;

		*node[0x60db91c03f90] = 8;

		*node[0x60db91c03fc0] = ;;

		*node[0x60db91c03ff0] = print;

		*node[0x60db91c04020] = 10;

		*node[0x60db91c04050] = ;;

		*node[0x60db91c04080] = return;

		*node[0x60db91c040b0] = 0;

		*node[0x60db91c040e0] = ;;

		*node[0x60db91c04110] = 6;

		*node[0x60db91c04140] = 1;

		*node[0x60db91c04170] = 2;

		*node[0x60db91c041a0] = 3;

		*node[0x60db91c041d0] = ;;

		*node[0x60db91c04200] = =;

		*node[0x60db91c04230] = 7;

		*node[0x60db91c04260] = -;

		*node[0x60db91c04290] = 0;

		*node[0x60db91c042c0] = 1;

		*node[0x60db91c042f0] = ;;

		*node[0x60db91c04320] = =;

		*node[0x60db91c04350] = 8;

		*node[0x60db91c04380] = 1;

		*node[0x60db91c043b0] = ;;

		*node[0x60db91c043e0] = =;

		*node[0x60db91c04410] = 11;

		*node[0x60db91c04440] = 2;

		*node[0x60db91c04470] = ;;

		*node[0x60db91c044a0] = if;

		*node[0x60db91c044d0] = op_no;

		*node[0x60db91c04500] = ==;

		*node[0x60db91c04530] = 3;

		*node[0x60db91c04560] = 0;

		*node[0x60db91c04590] = ;;

		*node[0x60db91c045c0] = =;

		*node[0x60db91c045f0] = 12;

		*node[0x60db91c04620] = 0;

		*node[0x60db91c04650] = ;;

		*node[0x60db91c04680] = =;

		*node[0x60db91c046b0] = 13;

		*node[0x60db91c046e0] = -;

		*node[0x60db91c04710] = 0;

		*node[0x60db91c04740] = /;

		*node[0x60db91c04770] = 2;

		*node[0x60db91c047a0] = 1;

		*node[0x60db91c047d0] = ;;

		*node[0x60db91c04800] = print;

		*node[0x60db91c04830] = 11;

		*node[0x60db91c04860] = ;;

		*node[0x60db91c04890] = print;

		*node[0x60db91c048c0] = 12;

		*node[0x60db91c048f0] = 13;

		*node[0x60db91c04920] = else;

		*node[0x60db91c04950] = op_no;

		*node[0x60db91c04980] = ;;

		*node[0x60db91c049b0] = =;

		*node[0x60db91c049e0] = 14;

		*node[0x60db91c04a10] = -;

		*node[0x60db91c04a40] = *;

		*node[0x60db91c04a70] = 2;

		*node[0x60db91c04aa0] = 2;

		*node[0x60db91c04ad0] = *;

		*node[0x60db91c04b00] = *;

		*node[0x60db91c04b30] = 4;

		*node[0x60db91c04b60] = 1;

		*node[0x60db91c04b90] = 3;

		*node[0x60db91c04bc0] = ;;

		*node[0x60db91c04bf0] = if;

		*node[0x60db91c04c20] = op_no;

		*node[0x60db91c04c50] = >;

		*node[0x60db91c04c80] = 14;

		*node[0x60db91c04cb0] = 0;

		*node[0x60db91c04ce0] = ;;

		*node[0x60db91c04d10] = =;

		*node[0x60db91c04d40] = 15;

		*node[0x60db91c04d70] = sqrt;

		*node[0x60db91c04da0] = 14;

		*node[0x60db91c04dd0] = ;;

		*node[0x60db91c04e00] = =;

		*node[0x60db91c04e30] = 12;

		*node[0x60db91c04e60] = -;

		*node[0x60db91c04e90] = -;

		*node[0x60db91c04ec0] = 0;

		*node[0x60db91c04ef0] = 2;

		*node[0x60db91c04f20] = *;

		*node[0x60db91c04f50] = /;

		*node[0x60db91c04f80] = 15;

		*node[0x60db91c04fb0] = 2;

		*node[0x60db91c04fe0] = 1;

		*node[0x60db91c05010] = ;;

		*node[0x60db91c05040] = =;

		*node[0x60db91c05070] = 13;

		*node[0x60db91c050a0] = +;

		*node[0x60db91c050d0] = -;

		*node[0x60db91c05100] = 0;

		*node[0x60db91c05130] = 2;

		*node[0x60db91c05160] = *;

		*node[0x60db91c05190] = /;

		*node[0x60db91c051c0] = 15;

		*node[0x60db91c051f0] = 2;

		*node[0x60db91c05220] = 1;

		*node[0x60db91c05250] = ;;

		*node[0x60db91c05280] = print;

		*node[0x60db91c052b0] = 11;

		*node[0x60db91c052e0] = ;;

		*node[0x60db91c05310] = print;

		*node[0x60db91c05340] = 12;

		*node[0x60db91c05370] = 13;

		*node[0x60db91c053a0] = elseif;

		*node[0x60db91c053d0] = op_no;

		*node[0x60db91c05400] = ==;

		*node[0x60db91c05430] = 14;

		*node[0x60db91c05460] = 0;

		*node[0x60db91c05490] = ;;

		*node[0x60db91c054c0] = =;

		*node[0x60db91c054f0] = 10;

		*node[0x60db91c05520] = -;

		*node[0x60db91c05550] = 0;

		*node[0x60db91c05580] = *;

		*node[0x60db91c055b0] = /;

		*node[0x60db91c055e0] = 2;

		*node[0x60db91c05610] = 2;

		*node[0x60db91c05640] = 1;

		*node[0x60db91c05670] = ;;

		*node[0x60db91c056a0] = print;

		*node[0x60db91c056d0] = 8;

		*node[0x60db91c05700] = ;;

		*node[0x60db91c05730] = print;

		*node[0x60db91c05760] = 10;

		*node[0x60db91c05790] = else;

		*node[0x60db91c057c0] = op_no;

		*node[0x60db91c057f0] = ;;

		*node[0x60db91c05820] = print;

		*node[0x60db91c05850] = 7;

		*node[0x60db91c05880] = ;;

		*node[0x60db91c058b0] = return;

		*node[0x60db91c058e0] = 0;

		*node[0x60db91c05910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7fff96def630] "tree" called from ./src/main.cpp(12) main
{
	is_init = 1
	{
		*node[0x5b8f7aab6fd0] = ;;

		*node[0x5b8f7aab7000] = 0;

		*node[0x5b8f7aab7030] = ;;

		*node[0x5b8f7aab7060] = input;

		*node[0x5b8f7aab7090] = 1;

		*node[0x5b8f7aab70c0] = 2;

		*node[0x5b8f7aab70f0] = 3;

		*node[0x5b8f7aab7120] = ;;

		*node[0x5b8f7aab7180] = 1;

		*node[0x5b8f7aab71b0] = 2;

		*node[0x5b8f7aab71e0] = 3;

		*node[0x5b8f7aab7210] = ;;

		*node[0x5b8f7aab7240] = 4;

		*node[0x5b8f7aab7270] = 1;

		*node[0x5b8f7aab72a0] = 2;

		*node[0x5b8f7aab72d0] = 3;

		*node[0x5b8f7aab7300] = ;;

		*node[0x5b8f7aab7330] = if;

		*node[0x5b8f7aab7360] = op_no;

		*node[0x5b8f7aab7390] = ==;

		*node[0x5b8f7aab73c0] = 1;

		*node[0x5b8f7aab73f0] = 0;

		*node[0x5b8f7aab7420] = ;;

		*node[0x5b8f7aab7480] = 2;

		*node[0x5b8f7aab74b0] = 3;

		*node[0x5b8f7aab74e0] = else;

		*node[0x5b8f7aab7510] = op_no;

		*node[0x5b8f7aab7540] = ;;

		*node[0x5b8f7aab75a0] = 1;

		*node[0x5b8f7aab75d0] = 2;

		*node[0x5b8f7aab7600] = 3;

		*node[0x5b8f7aab7630] = ;;

		*node[0x5b8f7aab7660] = 5;

		*node[0x5b8f7aab7690] = 1;

		*node[0x5b8f7aab76c0] = 2;

		*node[0x5b8f7aab76f0] = ;;

		*node[0x5b8f7aab7720] = =;

		*node[0x5b8f7aab7750] = 7;

		*node[0x5b8f7aab7780] = -;

		*node[0x5b8f7aab77b0] = 0;

		*node[0x5b8f7aab77e0] = 1;

		*node[0x5b8f7aab7810] = ;;

		*node[0x5b8f7aab7840] = =;

		*node[0x5b8f7aab7870] = 8;

		*node[0x5b8f7aab78a0] = 1;

		*node[0x5b8f7aab78d0] = ;;

		*node[0x5b8f7aab7900] = =;

		*node[0x5b8f7aab7930] = 9;

		*node[0x5b8f7aab7960] = 1000;

		*node[0x5b8f7aab7990] = ;;

		*node[0x5b8f7aab79c0] = if;

		*node[0x5b8f7aab79f0] = op_no;

		*node[0x5b8f7aab7a20] = ==;

		*node[0x5b8f7aab7a50] = 1;

		*node[0x5b8f7aab7a80] = 0;

		*node[0x5b8f7aab7ab0] = ;;

		*node[0x5b8f7aab7ae0] = if;

		*node[0x5b8f7aab7b10] = op_no;

		*node[0x5b8f7aab7b40] = ==;

		*node[0x5b8f7aab7b70] = 2;

		*node[0x5b8f7aab7ba0] = 0;

		*node[0x5b8f7aab7bd0] = ;;

		*node[0x5b8f7aab7c00] = print;

		*node[0x5b8f7aab7c30] = 9;

		*node[0x5b8f7aab7c60] = else;

		*node[0x5b8f7aab7c90] = op_no;

		*node[0x5b8f7aab7cc0] = ;;

		*node[0x5b8f7aab7cf0] = print;

		*node[0x5b8f7aab7d20] = 7;

		*node[0x5b8f7aab7d50] = else;

		*node[0x5b8f7aab7d80] = op_no;

		*node[0x5b8f7aab7db0] = ;;

		*node[0x5b8f7aab7de0] = =;

		*node[0x5b8f7aab7e10] = 10;

		*node[0x5b8f7aab7e40] = -;

		*node[0x5b8f7aab7e70] = 0;

		*node[0x5b8f7aab7ea0] = /;

		*node[0x5b8f7aab7ed0] = 2;

		*node[0x5b8f7aab7f00] = 1;

		*node[0x5b8f7aab7f30] = ;;

		*node[0x5b8f7aab7f60] = print;

		*node[0x5b8f7aab7f90] = 8;

		*node[0x5b8f7aab7fc0] = ;;

		*node[0x5b8f7aab7ff0] = print;

		*node[0x5b8f7aab8020] = 10;

		*node[0x5b8f7aab8050] = ;;

		*node[0x5b8f7aab8080] = return;

		*node[0x5b8f7aab80b0] = 0;

		*node[0x5b8f7aab80e0] = ;;

		*node[0x5b8f7aab8110] = 6;

		*node[0x5b8f7aab8140] = 1;

		*node[0x5b8f7aab8170] = 2;

		*node[0x5b8f7aab81a0] = 3;

		*node[0x5b8f7aab81d0] = ;;

		*node[0x5b8f7aab8200] = =;

		*node[0x5b8f7aab8230] = 7;

		*node[0x5b8f7aab8260] = -;

		*node[0x5b8f7aab8290] = 0;

		*node[0x5b8f7aab82c0] = 1;

		*node[0x5b8f7aab82f0] = ;;

		*node[0x5b8f7aab8320] = =;

		*node[0x5b8f7aab8350] = 8;

		*node[0x5b8f7aab8380] = 1;

		*node[0x5b8f7aab83b0] = ;;

		*node[0x5b8f7aab83e0] = =;

		*node[0x5b8f7aab8410] = 11;

		*node[0x5b8f7aab8440] = 2;

		*node[0x5b8f7aab8470] = ;;

		*node[0x5b8f7aab84a0] = if;

		*node[0x5b8f7aab84d0] = op_no;

		*node[0x5b8f7aab8500] = ==;

		*node[0x5b8f7aab8530] = 3;

		*node[0x5b8f7aab8560] = 0;

		*node[0x5b8f7aab8590] = ;;

		*node[0x5b8f7aab85c0] = =;

		*node[0x5b8f7aab85f0] = 12;

		*node[0x5b8f7aab8620] = 0;

		*node[0x5b8f7aab8650] = ;;

		*node[0x5b8f7aab8680] = =;

		*node[0x5b8f7aab86b0] = 13;

		*node[0x5b8f7aab86e0] = -;

		*node[0x5b8f7aab8710] = 0;

		*node[0x5b8f7aab8740] = /;

		*node[0x5b8f7aab8770] = 2;

		*node[0x5b8f7aab87a0] = 1;

		*node[0x5b8f7aab87d0] = ;;

		*node[0x5b8f7aab8800] = print;

		*node[0x5b8f7aab8830] = 11;

		*node[0x5b8f7aab8860] = ;;

		*node[0x5b8f7aab8890] = print;

		*node[0x5b8f7aab88c0] = 12;

		*node[0x5b8f7aab88f0] = 13;

		*node[0x5b8f7aab8920] = else;

		*node[0x5b8f7aab8950] = op_no;

		*node[0x5b8f7aab8980] = ;;

		*node[0x5b8f7aab89b0] = =;

		*node[0x5b8f7aab89e0] = 14;

		*node[0x5b8f7aab8a10] = -;

		*node[0x5b8f7aab8a40] = *;

		*node[0x5b8f7aab8a70] = 2;

		*node[0x5b8f7aab8aa0] = 2;

		*node[0x5b8f7aab8ad0] = *;

		*node[0x5b8f7aab8b00] = *;

		*node[0x5b8f7aab8b30] = 4;

		*node[0x5b8f7aab8b60] = 1;

		*node[0x5b8f7aab8b90] = 3;

		*node[0x5b8f7aab8bc0] = ;;

		*node[0x5b8f7aab8bf0] = if;

		*node[0x5b8f7aab8c20] = op_no;

		*node[0x5b8f7aab8c50] = >;

		*node[0x5b8f7aab8c80] = 14;

		*node[0x5b8f7aab8cb0] = 0;

		*node[0x5b8f7aab8ce0] = ;;

		*node[0x5b8f7aab8d10] = =;

		*node[0x5b8f7aab8d40] = 15;

		*node[0x5b8f7aab8d70] = sqrt;

		*node[0x5b8f7aab8da0] = 14;

		*node[0x5b8f7aab8dd0] = ;;

		*node[0x5b8f7aab8e00] = =;

		*node[0x5b8f7aab8e30] = 12;

		*node[0x5b8f7aab8e60] = -;

		*node[0x5b8f7aab8e90] = -;

		*node[0x5b8f7aab8ec0] = 0;

		*node[0x5b8f7aab8ef0] = 2;

		*node[0x5b8f7aab8f20] = *;

		*node[0x5b8f7aab8f50] = /;

		*node[0x5b8f7aab8f80] = 15;

		*node[0x5b8f7aab8fb0] = 2;

		*node[0x5b8f7aab8fe0] = 1;

		*node[0x5b8f7aab9010] = ;;

		*node[0x5b8f7aab9040] = =;

		*node[0x5b8f7aab9070] = 13;

		*node[0x5b8f7aab90a0] = +;

		*node[0x5b8f7aab90d0] = -;

		*node[0x5b8f7aab9100] = 0;

		*node[0x5b8f7aab9130] = 2;

		*node[0x5b8f7aab9160] = *;

		*node[0x5b8f7aab9190] = /;

		*node[0x5b8f7aab91c0] = 15;

		*node[0x5b8f7aab91f0] = 2;

		*node[0x5b8f7aab9220] = 1;

		*node[0x5b8f7aab9250] = ;;

		*node[0x5b8f7aab9280] = print;

		*node[0x5b8f7aab92b0] = 11;

		*node[0x5b8f7aab92e0] = ;;

		*node[0x5b8f7aab9310] = print;

		*node[0x5b8f7aab9340] = 12;

		*node[0x5b8f7aab9370] = 13;

		*node[0x5b8f7aab93a0] = elseif;

		*node[0x5b8f7aab93d0] = op_no;

		*node[0x5b8f7aab9400] = ==;

		*node[0x5b8f7aab9430] = 14;

		*node[0x5b8f7aab9460] = 0;

		*node[0x5b8f7aab9490] = ;;

		*node[0x5b8f7aab94c0] = =;

		*node[0x5b8f7aab94f0] = 10;

		*node[0x5b8f7aab9520] = -;

		*node[0x5b8f7aab9550] = 0;

		*node[0x5b8f7aab9580] = *;

		*node[0x5b8f7aab95b0] = /;

		*node[0x5b8f7aab95e0] = 2;

		*node[0x5b8f7aab9610] = 2;

		*node[0x5b8f7aab9640] = 1;

		*node[0x5b8f7aab9670] = ;;

		*node[0x5b8f7aab96a0] = print;

		*node[0x5b8f7aab96d0] = 8;

		*node[0x5b8f7aab9700] = ;;

		*node[0x5b8f7aab9730] = print;

		*node[0x5b8f7aab9760] = 10;

		*node[0x5b8f7aab9790] = else;

		*node[0x5b8f7aab97c0] = op_no;

		*node[0x5b8f7aab97f0] = ;;

		*node[0x5b8f7aab9820] = print;

		*node[0x5b8f7aab9850] = 7;

		*node[0x5b8f7aab9880] = ;;

		*node[0x5b8f7aab98b0] = return;

		*node[0x5b8f7aab98e0] = 0;

		*node[0x5b8f7aab9910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe64081530] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5e421c6bb0f0] = ;;

		*node[0x5e421c6bb170] = 0;

		*node[0x5e421c6bb1a0] = ;;

		*node[0x5e421c6bb1d0] = input;

		*node[0x5e421c6bb200] = 1;

		*node[0x5e421c6bb230] = 2;

		*node[0x5e421c6bb260] = 3;

		*node[0x5e421c6bb2c0] = ;;

		*node[0x5e421c6bb320] = 1;

		*node[0x5e421c6bb350] = 2;

		*node[0x5e421c6bb380] = 3;

		*node[0x5e421c6bb3b0] = ;;

		*node[0x5e421c6bb430] = 4;

		*node[0x5e421c6bb460] = 1;

		*node[0x5e421c6bb490] = 2;

		*node[0x5e421c6bb4c0] = 3;

		*node[0x5e421c6bb520] = ;;

		*node[0x5e421c6bb550] = if;

		*node[0x5e421c6bb580] = op_no;

		*node[0x5e421c6bb610] = ==;

		*node[0x5e421c6bb5b0] = 1;

		*node[0x5e421c6bb5e0] = 0;

		*node[0x5e421c6bb640] = ;;

		*node[0x5e421c6bb6a0] = 2;

		*node[0x5e421c6bb6d0] = 3;

		*node[0x5e421c6bb700] = else;

		*node[0x5e421c6bb730] = op_no;

		*node[0x5e421c6bb760] = ;;

		*node[0x5e421c6bb810] = 1;

		*node[0x5e421c6bb840] = 2;

		*node[0x5e421c6bb870] = 3;

		*node[0x5e421c6bb8a0] = ;;

		*node[0x5e421c6bb920] = 5;

		*node[0x5e421c6bb980] = 1;

		*node[0x5e421c6bb9b0] = 2;

		*node[0x5e421c6bb9e0] = ;;

		*node[0x5e421c6bbb00] = =;

		*node[0x5e421c6bba10] = 7;

		*node[0x5e421c6bbad0] = -;

		*node[0x5e421c6bba70] = 0;

		*node[0x5e421c6bbaa0] = 1;

		*node[0x5e421c6bbb30] = ;;

		*node[0x5e421c6bbbc0] = =;

		*node[0x5e421c6bbb60] = 8;

		*node[0x5e421c6bbb90] = 1;

		*node[0x5e421c6bbbf0] = ;;

		*node[0x5e421c6bbcd0] = =;

		*node[0x5e421c6bbc20] = 9;

		*node[0x5e421c6bbca0] = 1000;

		*node[0x5e421c6bbd00] = ;;

		*node[0x5e421c6bbd30] = if;

		*node[0x5e421c6bbd60] = op_no;

		*node[0x5e421c6bbdf0] = ==;

		*node[0x5e421c6bbd90] = 1;

		*node[0x5e421c6bbdc0] = 0;

		*node[0x5e421c6bbe20] = ;;

		*node[0x5e421c6bbe50] = if;

		*node[0x5e421c6bbe80] = op_no;

		*node[0x5e421c6bbf10] = ==;

		*node[0x5e421c6bbeb0] = 2;

		*node[0x5e421c6bbee0] = 0;

		*node[0x5e421c6bbf40] = ;;

		*node[0x5e421c6bbf70] = print;

		*node[0x5e421c6bbfa0] = 9;

		*node[0x5e421c6bbfd0] = else;

		*node[0x5e421c6bc000] = op_no;

		*node[0x5e421c6bc030] = ;;

		*node[0x5e421c6bc060] = print;

		*node[0x5e421c6bc090] = 7;

		*node[0x5e421c6bc0c0] = else;

		*node[0x5e421c6bc0f0] = op_no;

		*node[0x5e421c6bc120] = ;;

		*node[0x5e421c6bc270] = =;

		*node[0x5e421c6bc150] = 10;

		*node[0x5e421c6bc240] = -;

		*node[0x5e421c6bc180] = 0;

		*node[0x5e421c6bc210] = /;

		*node[0x5e421c6bc1b0] = 2;

		*node[0x5e421c6bc1e0] = 1;

		*node[0x5e421c6bc2a0] = ;;

		*node[0x5e421c6bc2d0] = print;

		*node[0x5e421c6bc300] = 8;

		*node[0x5e421c6bc330] = ;;

		*node[0x5e421c6bc360] = print;

		*node[0x5e421c6bc390] = 10;

		*node[0x5e421c6bc3c0] = ;;

		*node[0x5e421c6bc3f0] = return;

		*node[0x5e421c6bc420] = 0;

		*node[0x5e421c6bc450] = ;;

		*node[0x5e421c6bc4d0] = 6;

		*node[0x5e421c6bc500] = 1;

		*node[0x5e421c6bc530] = 2;

		*node[0x5e421c6bc560] = 3;

		*node[0x5e421c6bc5c0] = ;;

		*node[0x5e421c6bc6b0] = =;

		*node[0x5e421c6bc5f0] = 7;

		*node[0x5e421c6bc680] = -;

		*node[0x5e421c6bc620] = 0;

		*node[0x5e421c6bc650] = 1;

		*node[0x5e421c6bc6e0] = ;;

		*node[0x5e421c6bc7c0] = =;

		*node[0x5e421c6bc710] = 8;

		*node[0x5e421c6bc790] = 1;

		*node[0x5e421c6bc7f0] = ;;

		*node[0x5e421c6bc880] = =;

		*node[0x5e421c6bc820] = 11;

		*node[0x5e421c6bc850] = 2;

		*node[0x5e421c6bc8b0] = ;;

		*node[0x5e421c6bc8e0] = if;

		*node[0x5e421c6bc910] = op_no;

		*node[0x5e421c6bc9a0] = ==;

		*node[0x5e421c6bc940] = 3;

		*node[0x5e421c6bc970] = 0;

		*node[0x5e421c6bc9d0] = ;;

		*node[0x5e421c6bca60] = =;

		*node[0x5e421c6bca00] = 12;

		*node[0x5e421c6bca30] = 0;

		*node[0x5e421c6bca90] = ;;

		*node[0x5e421c6bcbe0] = =;

		*node[0x5e421c6bcac0] = 13;

		*node[0x5e421c6bcbb0] = -;

		*node[0x5e421c6bcaf0] = 0;

		*node[0x5e421c6bcb80] = /;

		*node[0x5e421c6bcb20] = 2;

		*node[0x5e421c6bcb50] = 1;

		*node[0x5e421c6bcc10] = ;;

		*node[0x5e421c6bcc40] = print;

		*node[0x5e421c6bcc70] = 11;

		*node[0x5e421c6bcca0] = ;;

		*node[0x5e421c6bccd0] = print;

		*node[0x5e421c6bcd00] = 12;

		*node[0x5e421c6bcd30] = 13;

		*node[0x5e421c6bcd60] = else;

		*node[0x5e421c6bcd90] = op_no;

		*node[0x5e421c6bcdc0] = ;;

		*node[0x5e421c6bd060] = =;

		*node[0x5e421c6bcdf0] = 14;

		*node[0x5e421c6bd030] = -;

		*node[0x5e421c6bcf10] = *;

		*node[0x5e421c6bceb0] = 2;

		*node[0x5e421c6bcee0] = 2;

		*node[0x5e421c6bd000] = *;

		*node[0x5e421c6bcfa0] = *;

		*node[0x5e421c6bcf40] = 4;

		*node[0x5e421c6bcf70] = 1;

		*node[0x5e421c6bcfd0] = 3;

		*node[0x5e421c6bd090] = ;;

		*node[0x5e421c6bd0c0] = if;

		*node[0x5e421c6bd0f0] = op_no;

		*node[0x5e421c6bd180] = >;

		*node[0x5e421c6bd120] = 14;

		*node[0x5e421c6bd150] = 0;

		*node[0x5e421c6bd1b0] = ;;

		*node[0x5e421c6bd270] = =;

		*node[0x5e421c6bd1e0] = 15;

		*node[0x5e421c6bd240] = sqrt;

		*node[0x5e421c6bd210] = 14;

		*node[0x5e421c6bd2a0] = ;;

		*node[0x5e421c6bd4b0] = =;

		*node[0x5e421c6bd2d0] = 12;

		*node[0x5e421c6bd480] = -;

		*node[0x5e421c6bd360] = -;

		*node[0x5e421c6bd300] = 0;

		*node[0x5e421c6bd330] = 2;

		*node[0x5e421c6bd450] = *;

		*node[0x5e421c6bd3f0] = /;

		*node[0x5e421c6bd390] = 15;

		*node[0x5e421c6bd3c0] = 2;

		*node[0x5e421c6bd420] = 1;

		*node[0x5e421c6bd4e0] = ;;

		*node[0x5e421c6bd6f0] = =;

		*node[0x5e421c6bd510] = 13;

		*node[0x5e421c6bd6c0] = +;

		*node[0x5e421c6bd5a0] = -;

		*node[0x5e421c6bd540] = 0;

		*node[0x5e421c6bd570] = 2;

		*node[0x5e421c6bd690] = *;

		*node[0x5e421c6bd630] = /;

		*node[0x5e421c6bd5d0] = 15;

		*node[0x5e421c6bd600] = 2;

		*node[0x5e421c6bd660] = 1;

		*node[0x5e421c6bd720] = ;;

		*node[0x5e421c6bd750] = print;

		*node[0x5e421c6bd780] = 11;

		*node[0x5e421c6bd7b0] = ;;

		*node[0x5e421c6bd7e0] = print;

		*node[0x5e421c6bd810] = 12;

		*node[0x5e421c6bd840] = 13;

		*node[0x5e421c6bd870] = elseif;

		*node[0x5e421c6bd8a0] = op_no;

		*node[0x5e421c6bd930] = ==;

		*node[0x5e421c6bd8d0] = 14;

		*node[0x5e421c6bd900] = 0;

		*node[0x5e421c6bd960] = ;;

		*node[0x5e421c6bdb10] = =;

		*node[0x5e421c6bd990] = 10;

		*node[0x5e421c6bdae0] = -;

		*node[0x5e421c6bd9c0] = 0;

		*node[0x5e421c6bdab0] = *;

		*node[0x5e421c6bda50] = /;

		*node[0x5e421c6bd9f0] = 2;

		*node[0x5e421c6bda20] = 2;

		*node[0x5e421c6bda80] = 1;

		*node[0x5e421c6bdb40] = ;;

		*node[0x5e421c6bdb70] = print;

		*node[0x5e421c6bdba0] = 8;

		*node[0x5e421c6bdbd0] = ;;

		*node[0x5e421c6bdc00] = print;

		*node[0x5e421c6bdc30] = 10;

		*node[0x5e421c6bdc60] = else;

		*node[0x5e421c6bdc90] = op_no;

		*node[0x5e421c6bdcc0] = ;;

		*node[0x5e421c6bdcf0] = print;

		*node[0x5e421c6bdd20] = 7;

		*node[0x5e421c6bdd50] = ;;

		*node[0x5e421c6bdd80] = return;

		*node[0x5e421c6bddb0] = 0;

		*node[0x5e421c6bdde0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffd6815ffa0] "tree" called from ./src/main.cpp(16) main
{
	is_init = 1
	{
		*node[0x64564f343fd0] = ;;

		*node[0x64564f344000] = 0;

		*node[0x64564f344030] = ;;

		*node[0x64564f344060] = input;

		*node[0x64564f344090] = 1;

		*node[0x64564f3440c0] = 2;

		*node[0x64564f3440f0] = 3;

		*node[0x64564f344120] = ;;

		*node[0x64564f344180] = 1;

		*node[0x64564f3441b0] = 2;

		*node[0x64564f3441e0] = 3;

		*node[0x64564f344210] = ;;

		*node[0x64564f344240] = 4;

		*node[0x64564f344270] = 1;

		*node[0x64564f3442a0] = 2;

		*node[0x64564f3442d0] = 3;

		*node[0x64564f344300] = ;;

		*node[0x64564f344330] = if;

		*node[0x64564f344360] = op_no;

		*node[0x64564f344390] = ==;

		*node[0x64564f3443c0] = 1;

		*node[0x64564f3443f0] = 0;

		*node[0x64564f344420] = ;;

		*node[0x64564f344480] = 2;

		*node[0x64564f3444b0] = 3;

		*node[0x64564f3444e0] = else;

		*node[0x64564f344510] = op_no;

		*node[0x64564f344540] = ;;

		*node[0x64564f3445a0] = 1;

		*node[0x64564f3445d0] = 2;

		*node[0x64564f344600] = 3;

		*node[0x64564f344630] = ;;

		*node[0x64564f344660] = 5;

		*node[0x64564f344690] = 1;

		*node[0x64564f3446c0] = 2;

		*node[0x64564f3446f0] = ;;

		*node[0x64564f344720] = =;

		*node[0x64564f344750] = 7;

		*node[0x64564f346b20] = -1;

		*node[0x64564f344810] = ;;

		*node[0x64564f344840] = =;

		*node[0x64564f344870] = 8;

		*node[0x64564f3448a0] = 1;

		*node[0x64564f3448d0] = ;;

		*node[0x64564f344900] = =;

		*node[0x64564f344930] = 9;

		*node[0x64564f344960] = 1000;

		*node[0x64564f344990] = ;;

		*node[0x64564f3449c0] = if;

		*node[0x64564f3449f0] = op_no;

		*node[0x64564f344a20] = ==;

		*node[0x64564f344a50] = 1;

		*node[0x64564f344a80] = 0;

		*node[0x64564f344ab0] = ;;

		*node[0x64564f344ae0] = if;

		*node[0x64564f344b10] = op_no;

		*node[0x64564f344b40] = ==;

		*node[0x64564f344b70] = 2;

		*node[0x64564f344ba0] = 0;

		*node[0x64564f344bd0] = ;;

		*node[0x64564f344c00] = print;

		*node[0x64564f344c30] = 9;

		*node[0x64564f344c60] = else;

		*node[0x64564f344c90] = op_no;

		*node[0x64564f344cc0] = ;;

		*node[0x64564f344cf0] = print;

		*node[0x64564f344d20] = 7;

		*node[0x64564f344d50] = else;

		*node[0x64564f344d80] = op_no;

		*node[0x64564f344db0] = ;;

		*node[0x64564f344de0] = =;

		*node[0x64564f344e10] = 10;

		*node[0x64564f344e40] = -;

		*node[0x64564f344e70] = 0;

		*node[0x64564f344ea0] = /;

		*node[0x64564f344ed0] = 2;

		*node[0x64564f344f00] = 1;

		*node[0x64564f344f30] = ;;

		*node[0x64564f344f60] = print;

		*node[0x64564f344f90] = 8;

		*node[0x64564f344fc0] = ;;

		*node[0x64564f344ff0] = print;

		*node[0x64564f345020] = 10;

		*node[0x64564f345050] = ;;

		*node[0x64564f345080] = return;

		*node[0x64564f3450b0] = 0;

		*node[0x64564f3450e0] = ;;

		*node[0x64564f345110] = 6;

		*node[0x64564f345140] = 1;

		*node[0x64564f345170] = 2;

		*node[0x64564f3451a0] = 3;

		*node[0x64564f3451d0] = ;;

		*node[0x64564f345200] = =;

		*node[0x64564f345230] = 7;

		*node[0x64564f346b50] = -1;

		*node[0x64564f3452f0] = ;;

		*node[0x64564f345320] = =;

		*node[0x64564f345350] = 8;

		*node[0x64564f345380] = 1;

		*node[0x64564f3453b0] = ;;

		*node[0x64564f3453e0] = =;

		*node[0x64564f345410] = 11;

		*node[0x64564f345440] = 2;

		*node[0x64564f345470] = ;;

		*node[0x64564f3454a0] = if;

		*node[0x64564f3454d0] = op_no;

		*node[0x64564f345500] = ==;

		*node[0x64564f345530] = 3;

		*node[0x64564f345560] = 0;

		*node[0x64564f345590] = ;;

		*node[0x64564f3455c0] = =;

		*node[0x64564f3455f0] = 12;

		*node[0x64564f345620] = 0;

		*node[0x64564f345650] = ;;

		*node[0x64564f345680] = =;

		*node[0x64564f3456b0] = 13;

		*node[0x64564f3456e0] = -;

		*node[0x64564f345710] = 0;

		*node[0x64564f345740] = /;

		*node[0x64564f345770] = 2;

		*node[0x64564f3457a0] = 1;

		*node[0x64564f3457d0] = ;;

		*node[0x64564f345800] = print;

		*node[0x64564f345830] = 11;

		*node[0x64564f345860] = ;;

		*node[0x64564f345890] = print;

		*node[0x64564f3458c0] = 12;

		*node[0x64564f3458f0] = 13;

		*node[0x64564f345920] = else;

		*node[0x64564f345950] = op_no;

		*node[0x64564f345980] = ;;

		*node[0x64564f3459b0] = =;

		*node[0x64564f3459e0] = 14;

		*node[0x64564f345a10] = -;

		*node[0x64564f345a40] = *;

		*node[0x64564f345a70] = 2;

		*node[0x64564f345aa0] = 2;

		*node[0x64564f345ad0] = *;

		*node[0x64564f345b00] = *;

		*node[0x64564f345b30] = 4;

		*node[0x64564f345b60] = 1;

		*node[0x64564f345b90] = 3;

		*node[0x64564f345bc0] = ;;

		*node[0x64564f345bf0] = if;

		*node[0x64564f345c20] = op_no;

		*node[0x64564f345c50] = >;

		*node[0x64564f345c80] = 14;

		*node[0x64564f345cb0] = 0;

		*node[0x64564f345ce0] = ;;

		*node[0x64564f345d10] = =;

		*node[0x64564f345d40] = 15;

		*node[0x64564f345d70] = sqrt;

		*node[0x64564f345da0] = 14;

		*node[0x64564f345dd0] = ;;

		*node[0x64564f345e00] = =;

		*node[0x64564f345e30] = 12;

		*node[0x64564f345e60] = -;

		*node[0x64564f345e90] = -;

		*node[0x64564f345ec0] = 0;

		*node[0x64564f345ef0] = 2;

		*node[0x64564f345f20] = *;

		*node[0x64564f345f50] = /;

		*node[0x64564f345f80] = 15;

		*node[0x64564f345fb0] = 2;

		*node[0x64564f345fe0] = 1;

		*node[0x64564f346010] = ;;

		*node[0x64564f346040] = =;

		*node[0x64564f346070] = 13;

		*node[0x64564f3460a0] = +;

		*node[0x64564f3460d0] = -;

		*node[0x64564f346100] = 0;

		*node[0x64564f346130] = 2;

		*node[0x64564f346160] = *;

		*node[0x64564f346190] = /;

		*node[0x64564f3461c0] = 15;

		*node[0x64564f3461f0] = 2;

		*node[0x64564f346220] = 1;

		*node[0x64564f346250] = ;;

		*node[0x64564f346280] = print;

		*node[0x64564f3462b0] = 11;

		*node[0x64564f3462e0] = ;;

		*node[0x64564f346310] = print;

		*node[0x64564f346340] = 12;

		*node[0x64564f346370] = 13;

		*node[0x64564f3463a0] = elseif;

		*node[0x64564f3463d0] = op_no;

		*node[0x64564f346400] = ==;

		*node[0x64564f346430] = 14;

		*node[0x64564f346460] = 0;

		*node[0x64564f346490] = ;;

		*node[0x64564f3464c0] = =;

		*node[0x64564f3464f0] = 10;

		*node[0x64564f346520] = -;

		*node[0x64564f346550] = 0;

		*node[0x64564f346580] = *;

		*node[0x64564f3465b0] = /;

		*node[0x64564f3465e0] = 2;

		*node[0x64564f346610] = 2;

		*node[0x64564f346640] = 1;

		*node[0x64564f346670] = ;;

		*node[0x64564f3466a0] = print;

		*node[0x64564f3466d0] = 8;

		*node[0x64564f346700] = ;;

		*node[0x64564f346730] = print;

		*node[0x64564f346760] = 10;

		*node[0x64564f346790] = else;

		*node[0x64564f3467c0] = op_no;

		*node[0x64564f3467f0] = ;;

		*node[0x64564f346820] = print;

		*node[0x64564f346850] = 7;

		*node[0x64564f346880] = ;;

		*node[0x64564f3468b0] = return;

		*node[0x64564f3468e0] = 0;

		*node[0x64564f346910] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffcac97b820] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x58540e3890f0] = ;;

		*node[0x58540e389170] = 0;

		*node[0x58540e3891a0] = ;;

		*node[0x58540e3891d0] = input;

		*node[0x58540e389200] = 1;

		*node[0x58540e389230] = 2;

		*node[0x58540e389260] = 3;

		*node[0x58540e3892c0] = ;;

		*node[0x58540e389320] = 1;

		*node[0x58540e389350] = 2;

		*node[0x58540e389380] = 3;

		*node[0x58540e3893b0] = ;;

		*node[0x58540e389430] = 4;

		*node[0x58540e389460] = 1;

		*node[0x58540e389490] = 2;

		*node[0x58540e3894c0] = 3;

		*node[0x58540e389520] = ;;

		*node[0x58540e389550] = if;

		*node[0x58540e389580] = op_no;

		*node[0x58540e389610] = ==;

		*node[0x58540e3895b0] = 1;

		*node[0x58540e3895e0] = 0;

		*node[0x58540e389640] = ;;

		*node[0x58540e3896a0] = 2;

		*node[0x58540e3896d0] = 3;

		*node[0x58540e389700] = else;

		*node[0x58540e389730] = op_no;

		*node[0x58540e389760] = ;;

		*node[0x58540e389810] = 1;

		*node[0x58540e389840] = 2;

		*node[0x58540e389870] = 3;

		*node[0x58540e3898a0] = ;;

		*node[0x58540e389920] = 5;

		*node[0x58540e389980] = 1;

		*node[0x58540e3899b0] = 2;

		*node[0x58540e3899e0] = ;;

		*node[0x58540e389b00] = =;

		*node[0x58540e389a10] = 7;

		*node[0x58540e389ad0] = -;

		*node[0x58540e389a70] = 0;

		*node[0x58540e389aa0] = 1;

		*node[0x58540e389b30] = ;;

		*node[0x58540e389bc0] = =;

		*node[0x58540e389b60] = 8;

		*node[0x58540e389b90] = 1;

		*node[0x58540e389bf0] = ;;

		*node[0x58540e389cd0] = =;

		*node[0x58540e389c20] = 9;

		*node[0x58540e389ca0] = 1000;

		*node[0x58540e389d00] = ;;

		*node[0x58540e389d30] = if;

		*node[0x58540e389d60] = op_no;

		*node[0x58540e389df0] = ==;

		*node[0x58540e389d90] = 1;

		*node[0x58540e389dc0] = 0;

		*node[0x58540e389e20] = ;;

		*node[0x58540e389e50] = if;

		*node[0x58540e389e80] = op_no;

		*node[0x58540e389f10] = ==;

		*node[0x58540e389eb0] = 2;

		*node[0x58540e389ee0] = 0;

		*node[0x58540e389f40] = ;;

		*node[0x58540e389f70] = print;

		*node[0x58540e389fa0] = 9;

		*node[0x58540e389fd0] = else;

		*node[0x58540e38a000] = op_no;

		*node[0x58540e38a030] = ;;

		*node[0x58540e38a060] = print;

		*node[0x58540e38a090] = 7;

		*node[0x58540e38a0c0] = else;

		*node[0x58540e38a0f0] = op_no;

		*node[0x58540e38a120] = ;;

		*node[0x58540e38a270] = =;

		*node[0x58540e38a150] = 10;

		*node[0x58540e38a240] = -;

		*node[0x58540e38a180] = 0;

		*node[0x58540e38a210] = /;

		*node[0x58540e38a1b0] = 2;

		*node[0x58540e38a1e0] = 1;

		*node[0x58540e38a2a0] = ;;

		*node[0x58540e38a2d0] = print;

		*node[0x58540e38a300] = 8;

		*node[0x58540e38a330] = ;;

		*node[0x58540e38a360] = print;

		*node[0x58540e38a390] = 10;

		*node[0x58540e38a3c0] = ;;

		*node[0x58540e38a3f0] = return;

		*node[0x58540e38a420] = 0;

		*node[0x58540e38a450] = ;;

		*node[0x58540e38a4d0] = 6;

		*node[0x58540e38a500] = 1;

		*node[0x58540e38a530] = 2;

		*node[0x58540e38a560] = 3;

		*node[0x58540e38a5c0] = ;;

		*node[0x58540e38a6b0] = =;

		*node[0x58540e38a5f0] = 7;

		*node[0x58540e38a680] = -;

		*node[0x58540e38a620] = 0;

		*node[0x58540e38a650] = 1;

		*node[0x58540e38a6e0] = ;;

		*node[0x58540e38a7c0] = =;

		*node[0x58540e38a710] = 8;

		*node[0x58540e38a790] = 1;

		*node[0x58540e38a7f0] = ;;

		*node[0x58540e38a880] = =;

		*node[0x58540e38a820] = 11;

		*node[0x58540e38a850] = 2;

		*node[0x58540e38a8b0] = ;;

		*node[0x58540e38a8e0] = if;

		*node[0x58540e38a910] = op_no;

		*node[0x58540e38a9a0] = ==;

		*node[0x58540e38a940] = 3;

		*node[0x58540e38a970] = 0;

		*node[0x58540e38a9d0] = ;;

		*node[0x58540e38aa60] = =;

		*node[0x58540e38aa00] = 12;

		*node[0x58540e38aa30] = 0;

		*node[0x58540e38aa90] = ;;

		*node[0x58540e38abe0] = =;

		*node[0x58540e38aac0] = 13;

		*node[0x58540e38abb0] = -;

		*node[0x58540e38aaf0] = 0;

		*node[0x58540e38ab80] = /;

		*node[0x58540e38ab20] = 2;

		*node[0x58540e38ab50] = 1;

		*node[0x58540e38ac10] = ;;

		*node[0x58540e38ac40] = print;

		*node[0x58540e38ac70] = 11;

		*node[0x58540e38aca0] = ;;

		*node[0x58540e38acd0] = print;

		*node[0x58540e38ad00] = 12;

		*node[0x58540e38ad30] = 13;

		*node[0x58540e38ad60] = else;

		*node[0x58540e38ad90] = op_no;

		*node[0x58540e38adc0] = ;;

		*node[0x58540e38b060] = =;

		*node[0x58540e38adf0] = 14;

		*node[0x58540e38b030] = -;

		*node[0x58540e38af10] = *;

		*node[0x58540e38aeb0] = 2;

		*node[0x58540e38aee0] = 2;

		*node[0x58540e38b000] = *;

		*node[0x58540e38afa0] = *;

		*node[0x58540e38af40] = 4;

		*node[0x58540e38af70] = 1;

		*node[0x58540e38afd0] = 3;

		*node[0x58540e38b090] = ;;

		*node[0x58540e38b0c0] = if;

		*node[0x58540e38b0f0] = op_no;

		*node[0x58540e38b180] = >;

		*node[0x58540e38b120] = 14;

		*node[0x58540e38b150] = 0;

		*node[0x58540e38b1b0] = ;;

		*node[0x58540e38b270] = =;

		*node[0x58540e38b1e0] = 15;

		*node[0x58540e38b240] = sqrt;

		*node[0x58540e38b210] = 14;

		*node[0x58540e38b2a0] = ;;

		*node[0x58540e38b4b0] = =;

		*node[0x58540e38b2d0] = 12;

		*node[0x58540e38b480] = -;

		*node[0x58540e38b360] = -;

		*node[0x58540e38b300] = 0;

		*node[0x58540e38b330] = 2;

		*node[0x58540e38b450] = *;

		*node[0x58540e38b3f0] = /;

		*node[0x58540e38b390] = 15;

		*node[0x58540e38b3c0] = 2;

		*node[0x58540e38b420] = 1;

		*node[0x58540e38b4e0] = ;;

		*node[0x58540e38b6f0] = =;

		*node[0x58540e38b510] = 13;

		*node[0x58540e38b6c0] = +;

		*node[0x58540e38b5a0] = -;

		*node[0x58540e38b540] = 0;

		*node[0x58540e38b570] = 2;

		*node[0x58540e38b690] = *;

		*node[0x58540e38b630] = /;

		*node[0x58540e38b5d0] = 15;

		*node[0x58540e38b600] = 2;

		*node[0x58540e38b660] = 1;

		*node[0x58540e38b720] = ;;

		*node[0x58540e38b750] = print;

		*node[0x58540e38b780] = 11;

		*node[0x58540e38b7b0] = ;;

		*node[0x58540e38b7e0] = print;

		*node[0x58540e38b810] = 12;

		*node[0x58540e38b840] = 13;

		*node[0x58540e38b870] = elseif;

		*node[0x58540e38b8a0] = op_no;

		*node[0x58540e38b930] = ==;

		*node[0x58540e38b8d0] = 14;

		*node[0x58540e38b900] = 0;

		*node[0x58540e38b960] = ;;

		*node[0x58540e38bb10] = =;

		*node[0x58540e38b990] = 10;

		*node[0x58540e38bae0] = -;

		*node[0x58540e38b9c0] = 0;

		*node[0x58540e38bab0] = *;

		*node[0x58540e38ba50] = /;

		*node[0x58540e38b9f0] = 2;

		*node[0x58540e38ba20] = 2;

		*node[0x58540e38ba80] = 1;

		*node[0x58540e38bb40] = ;;

		*node[0x58540e38bb70] = print;

		*node[0x58540e38bba0] = 8;

		*node[0x58540e38bbd0] = ;;

		*node[0x58540e38bc00] = print;

		*node[0x58540e38bc30] = 10;

		*node[0x58540e38bc60] = else;

		*node[0x58540e38bc90] = op_no;

		*node[0x58540e38bcc0] = ;;

		*node[0x58540e38bcf0] = print;

		*node[0x58540e38bd20] = 7;

		*node[0x58540e38bd50] = ;;

		*node[0x58540e38bd80] = return;

		*node[0x58540e38bdb0] = 0;

		*node[0x58540e38bde0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
tree[0x7ffe72e88b30] "tree" called from ./src/main.cpp(14) main
{
	is_init = 1
	{
		*node[0x5774a34610f0] = ;;

		*node[0x5774a3461170] = 0;

		*node[0x5774a34611a0] = ;;

		*node[0x5774a34611d0] = input;

		*node[0x5774a3461200] = 1;

		*node[0x5774a3461230] = 2;

		*node[0x5774a3461260] = 3;

		*node[0x5774a34612c0] = ;;

		*node[0x5774a3461320] = 1;

		*node[0x5774a3461350] = 2;

		*node[0x5774a3461380] = 3;

		*node[0x5774a34613b0] = ;;

		*node[0x5774a3461430] = 4;

		*node[0x5774a3461460] = 1;

		*node[0x5774a3461490] = 2;

		*node[0x5774a34614c0] = 3;

		*node[0x5774a3461520] = ;;

		*node[0x5774a3461550] = if;

		*node[0x5774a3461580] = op_no;

		*node[0x5774a3461610] = ==;

		*node[0x5774a34615b0] = 1;

		*node[0x5774a34615e0] = 0;

		*node[0x5774a3461640] = ;;

		*node[0x5774a34616a0] = 2;

		*node[0x5774a34616d0] = 3;

		*node[0x5774a3461700] = else;

		*node[0x5774a3461730] = op_no;

		*node[0x5774a3461760] = ;;

		*node[0x5774a3461810] = 1;

		*node[0x5774a3461840] = 2;

		*node[0x5774a3461870] = 3;

		*node[0x5774a34618a0] = ;;

		*node[0x5774a3461920] = 5;

		*node[0x5774a3461980] = 1;

		*node[0x5774a34619b0] = 2;

		*node[0x5774a34619e0] = ;;

		*node[0x5774a3461b00] = =;

		*node[0x5774a3461a10] = 7;

		*node[0x5774a3461ad0] = -;

		*node[0x5774a3461a70] = 0;

		*node[0x5774a3461aa0] = 1;

		*node[0x5774a3461b30] = ;;

		*node[0x5774a3461bc0] = =;

		*node[0x5774a3461b60] = 8;

		*node[0x5774a3461b90] = 1;

		*node[0x5774a3461bf0] = ;;

		*node[0x5774a3461cd0] = =;

		*node[0x5774a3461c20] = 9;

		*node[0x5774a3461ca0] = 1000;

		*node[0x5774a3461d00] = ;;

		*node[0x5774a3461d30] = if;

		*node[0x5774a3461d60] = op_no;

		*node[0x5774a3461df0] = ==;

		*node[0x5774a3461d90] = 1;

		*node[0x5774a3461dc0] = 0;

		*node[0x5774a3461e20] = ;;

		*node[0x5774a3461e50] = if;

		*node[0x5774a3461e80] = op_no;

		*node[0x5774a3461f10] = ==;

		*node[0x5774a3461eb0] = 2;

		*node[0x5774a3461ee0] = 0;

		*node[0x5774a3461f40] = ;;

		*node[0x5774a3461f70] = print;

		*node[0x5774a3461fa0] = 9;

		*node[0x5774a3461fd0] = else;

		*node[0x5774a3462000] = op_no;

		*node[0x5774a3462030] = ;;

		*node[0x5774a3462060] = print;

		*node[0x5774a3462090] = 7;

		*node[0x5774a34620c0] = else;

		*node[0x5774a34620f0] = op_no;

		*node[0x5774a3462120] = ;;

		*node[0x5774a3462270] = =;

		*node[0x5774a3462150] = 10;

		*node[0x5774a3462240] = -;

		*node[0x5774a3462180] = 0;

		*node[0x5774a3462210] = /;

		*node[0x5774a34621b0] = 2;

		*node[0x5774a34621e0] = 1;

		*node[0x5774a34622a0] = ;;

		*node[0x5774a34622d0] = print;

		*node[0x5774a3462300] = 8;

		*node[0x5774a3462330] = ;;

		*node[0x5774a3462360] = print;

		*node[0x5774a3462390] = 10;

		*node[0x5774a34623c0] = ;;

		*node[0x5774a34623f0] = return;

		*node[0x5774a3462420] = 0;

		*node[0x5774a3462450] = ;;

		*node[0x5774a34624d0] = 6;

		*node[0x5774a3462500] = 1;

		*node[0x5774a3462530] = 2;

		*node[0x5774a3462560] = 3;

		*node[0x5774a34625c0] = ;;

		*node[0x5774a34626b0] = =;

		*node[0x5774a34625f0] = 7;

		*node[0x5774a3462680] = -;

		*node[0x5774a3462620] = 0;

		*node[0x5774a3462650] = 1;

		*node[0x5774a34626e0] = ;;

		*node[0x5774a34627c0] = =;

		*node[0x5774a3462710] = 8;

		*node[0x5774a3462790] = 1;

		*node[0x5774a34627f0] = ;;

		*node[0x5774a3462880] = =;

		*node[0x5774a3462820] = 11;

		*node[0x5774a3462850] = 2;

		*node[0x5774a34628b0] = ;;

		*node[0x5774a34628e0] = if;

		*node[0x5774a3462910] = op_no;

		*node[0x5774a34629a0] = ==;

		*node[0x5774a3462940] = 3;

		*node[0x5774a3462970] = 0;

		*node[0x5774a34629d0] = ;;

		*node[0x5774a3462a60] = =;

		*node[0x5774a3462a00] = 12;

		*node[0x5774a3462a30] = 0;

		*node[0x5774a3462a90] = ;;

		*node[0x5774a3462be0] = =;

		*node[0x5774a3462ac0] = 13;

		*node[0x5774a3462bb0] = -;

		*node[0x5774a3462af0] = 0;

		*node[0x5774a3462b80] = /;

		*node[0x5774a3462b20] = 2;

		*node[0x5774a3462b50] = 1;

		*node[0x5774a3462c10] = ;;

		*node[0x5774a3462c40] = print;

		*node[0x5774a3462c70] = 11;

		*node[0x5774a3462ca0] = ;;

		*node[0x5774a3462cd0] = print;

		*node[0x5774a3462d00] = 12;

		*node[0x5774a3462d30] = 13;

		*node[0x5774a3462d60] = else;

		*node[0x5774a3462d90] = op_no;

		*node[0x5774a3462dc0] = ;;

		*node[0x5774a3463060] = =;

		*node[0x5774a3462df0] = 14;

		*node[0x5774a3463030] = -;

		*node[0x5774a3462f10] = *;

		*node[0x5774a3462eb0] = 2;

		*node[0x5774a3462ee0] = 2;

		*node[0x5774a3463000] = *;

		*node[0x5774a3462fa0] = *;

		*node[0x5774a3462f40] = 4;

		*node[0x5774a3462f70] = 1;

		*node[0x5774a3462fd0] = 3;

		*node[0x5774a3463090] = ;;

		*node[0x5774a34630c0] = if;

		*node[0x5774a34630f0] = op_no;

		*node[0x5774a3463180] = >;

		*node[0x5774a3463120] = 14;

		*node[0x5774a3463150] = 0;

		*node[0x5774a34631b0] = ;;

		*node[0x5774a3463270] = =;

		*node[0x5774a34631e0] = 15;

		*node[0x5774a3463240] = sqrt;

		*node[0x5774a3463210] = 14;

		*node[0x5774a34632a0] = ;;

		*node[0x5774a34634b0] = =;

		*node[0x5774a34632d0] = 12;

		*node[0x5774a3463480] = -;

		*node[0x5774a3463360] = -;

		*node[0x5774a3463300] = 0;

		*node[0x5774a3463330] = 2;

		*node[0x5774a3463450] = *;

		*node[0x5774a34633f0] = /;

		*node[0x5774a3463390] = 15;

		*node[0x5774a34633c0] = 2;

		*node[0x5774a3463420] = 1;

		*node[0x5774a34634e0] = ;;

		*node[0x5774a34636f0] = =;

		*node[0x5774a3463510] = 13;

		*node[0x5774a34636c0] = +;

		*node[0x5774a34635a0] = -;

		*node[0x5774a3463540] = 0;

		*node[0x5774a3463570] = 2;

		*node[0x5774a3463690] = *;

		*node[0x5774a3463630] = /;

		*node[0x5774a34635d0] = 15;

		*node[0x5774a3463600] = 2;

		*node[0x5774a3463660] = 1;

		*node[0x5774a3463720] = ;;

		*node[0x5774a3463750] = print;

		*node[0x5774a3463780] = 11;

		*node[0x5774a34637b0] = ;;

		*node[0x5774a34637e0] = print;

		*node[0x5774a3463810] = 12;

		*node[0x5774a3463840] = 13;

		*node[0x5774a3463870] = elseif;

		*node[0x5774a34638a0] = op_no;

		*node[0x5774a3463930] = ==;

		*node[0x5774a34638d0] = 14;

		*node[0x5774a3463900] = 0;

		*node[0x5774a3463960] = ;;

		*node[0x5774a3463b10] = =;

		*node[0x5774a3463990] = 10;

		*node[0x5774a3463ae0] = -;

		*node[0x5774a34639c0] = 0;

		*node[0x5774a3463ab0] = *;

		*node[0x5774a3463a50] = /;

		*node[0x5774a34639f0] = 2;

		*node[0x5774a3463a20] = 2;

		*node[0x5774a3463a80] = 1;

		*node[0x5774a3463b40] = ;;

		*node[0x5774a3463b70] = print;

		*node[0x5774a3463ba0] = 8;

		*node[0x5774a3463bd0] = ;;

		*node[0x5774a3463c00] = print;

		*node[0x5774a3463c30] = 10;

		*node[0x5774a3463c60] = else;

		*node[0x5774a3463c90] = op_no;

		*node[0x5774a3463cc0] = ;;

		*node[0x5774a3463cf0] = print;

		*node[0x5774a3463d20] = 7;

		*node[0x5774a3463d50] = ;;

		*node[0x5774a3463d80] = return;

		*node[0x5774a3463db0] = 0;

		*node[0x5774a3463de0] = ;;

	}
}
--------------------------------------------------------------------------------------------------------


